

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Dec 19 14:18:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2
    43                           	psect	text5,local,class=CODE,merge=1,delta=2
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2
    55                           	psect	text17,local,class=CODE,merge=1,delta=2
    56                           	psect	text18,local,class=CODE,merge=1,delta=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	text20,local,class=CODE,merge=1,delta=2
    59                           	psect	text21,local,class=CODE,merge=1,delta=2
    60                           	psect	text22,local,class=CODE,merge=1,delta=2
    61                           	psect	text23,local,class=CODE,merge=1,delta=2
    62                           	psect	text24,local,class=CODE,merge=1,delta=2
    63                           	psect	text25,local,class=CODE,merge=1,delta=2
    64                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text34,local,class=CODE,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text37,local,class=CODE,merge=1,delta=2
    76                           	psect	text38,local,class=CODE,merge=1,delta=2
    77                           	psect	text39,local,class=CODE,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,merge=1,delta=2
    80                           	psect	text42,local,class=CODE,merge=1,delta=2
    81                           	psect	text43,local,class=CODE,merge=1,delta=2
    82                           	psect	text44,local,class=CODE,merge=1,delta=2
    83                           	psect	text45,local,class=CODE,merge=1,delta=2
    84                           	psect	text46,local,class=CODE,merge=1,delta=2
    85                           	psect	text47,local,class=CODE,merge=1,delta=2
    86                           	psect	text48,local,class=CODE,merge=1,delta=2
    87                           	psect	text49,local,class=CODE,merge=1,delta=2
    88                           	psect	text50,local,class=CODE,merge=1,delta=2
    89                           	psect	text51,local,class=CODE,merge=1,delta=2
    90                           	psect	text52,local,class=CODE,merge=1,delta=2
    91                           	psect	text53,local,class=CODE,merge=1,delta=2
    92                           	psect	text54,local,class=CODE,merge=1,delta=2
    93                           	psect	text55,local,class=CODE,merge=1,delta=2
    94                           	psect	text56,local,class=CODE,merge=1,delta=2
    95                           	psect	text57,local,class=CODE,merge=1,delta=2
    96                           	psect	text58,local,class=CODE,merge=1,delta=2
    97                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text60,local,class=CODE,merge=1,delta=2
    99                           	psect	text61,local,class=CODE,merge=1,delta=2
   100                           	psect	text62,local,class=CODE,merge=1,delta=2
   101                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text64,local,class=CODE,merge=1,delta=2
   103                           	psect	text65,local,class=CODE,merge=1,delta=2
   104                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text67,local,class=CODE,merge=1,delta=2
   106                           	psect	text68,local,class=CODE,merge=1,delta=2
   107                           	psect	text69,local,class=CODE,merge=1,delta=2
   108                           	psect	text70,local,class=CODE,merge=1,delta=2
   109                           	psect	text71,local,class=CODE,merge=1,delta=2
   110                           	psect	text72,local,class=CODE,merge=1,delta=2
   111                           	psect	text73,local,class=CODE,merge=1,delta=2
   112                           	psect	text74,local,class=CODE,merge=1,delta=2
   113                           	psect	text75,local,class=CODE,merge=1,delta=2
   114                           	psect	text76,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text78,local,class=CODE,merge=1,delta=2
   117                           	psect	text79,local,class=CODE,merge=1,delta=2
   118                           	psect	text80,local,class=CODE,merge=1,delta=2
   119                           	psect	text81,local,class=CODE,merge=1,delta=2
   120                           	psect	text82,local,class=CODE,merge=1,delta=2
   121                           	psect	text83,local,class=CODE,merge=1,delta=2
   122                           	psect	text84,local,class=CODE,merge=1,delta=2
   123                           	psect	text85,local,class=CODE,merge=1,delta=2
   124                           	psect	text86,local,class=CODE,merge=1,delta=2
   125                           	psect	text87,local,class=CODE,merge=1,delta=2
   126                           	psect	text88,local,class=CODE,merge=1,delta=2
   127                           	psect	text89,local,class=CODE,merge=1,delta=2
   128                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	text91,local,class=CODE,merge=1,delta=2
   130                           	psect	text92,local,class=CODE,merge=1,delta=2
   131                           	psect	text93,local,class=CODE,merge=1,delta=2
   132                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text96,local,class=CODE,merge=1,delta=2
   135                           	psect	text97,local,class=CODE,merge=1,delta=2
   136                           	psect	text98,local,class=CODE,merge=1,delta=2
   137                           	psect	text99,local,class=CODE,merge=1,delta=2
   138                           	psect	text100,local,class=CODE,merge=1,delta=2
   139                           	psect	text101,local,class=CODE,merge=1,delta=2
   140                           	psect	text102,local,class=CODE,merge=1,delta=2
   141                           	psect	text103,local,class=CODE,merge=1,delta=2
   142                           	psect	text104,local,class=CODE,merge=1,delta=2
   143                           	psect	text105,local,class=CODE,merge=1,delta=2
   144                           	psect	text106,local,class=CODE,merge=1,delta=2
   145                           	psect	text107,local,class=CODE,merge=1,delta=2
   146                           	psect	text108,local,class=CODE,merge=1,delta=2
   147                           	psect	text109,local,class=CODE,merge=1,delta=2
   148                           	psect	text110,local,class=CODE,merge=1,delta=2
   149                           	psect	text111,local,class=CODE,merge=1,delta=2
   150                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text119,local,class=CODE,merge=1,delta=2
   158                           	psect	text120,local,class=CODE,merge=1,delta=2
   159                           	psect	text121,local,class=CODE,merge=1,delta=2
   160                           	psect	text122,local,class=CODE,merge=1,delta=2
   161                           	psect	text123,local,class=CODE,merge=1,delta=2
   162                           	psect	text124,local,class=CODE,merge=1,delta=2
   163                           	psect	text125,local,class=CODE,merge=1,delta=2
   164                           	psect	text126,local,class=CODE,merge=1,delta=2
   165                           	psect	text127,local,class=CODE,merge=1,delta=2
   166                           	psect	text128,local,class=CODE,merge=1,delta=2
   167                           	psect	text129,local,class=CODE,merge=1,delta=2
   168                           	psect	text130,local,class=CODE,merge=1,delta=2
   169                           	psect	text131,local,class=CODE,merge=1,delta=2
   170                           	psect	text132,local,class=CODE,merge=1,delta=2
   171                           	psect	text133,local,class=CODE,merge=1,delta=2
   172                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text137,local,class=CODE,merge=1,delta=2
   176                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	intentry,global,class=CODE,delta=2
   180                           	psect	text142,local,class=CODE,merge=1,delta=2
   181                           	psect	text143,local,class=CODE,merge=1,delta=2
   182                           	psect	text144,local,class=CODE,merge=1,delta=2
   183                           	psect	text145,local,class=CODE,merge=1,delta=2
   184                           	psect	text146,local,class=CODE,merge=1,delta=2
   185                           	psect	text147,local,class=CODE,merge=1,delta=2
   186                           	psect	text148,local,class=CODE,merge=1,delta=2
   187                           	psect	text149,local,class=CODE,merge=1,delta=2
   188                           	psect	text150,local,class=CODE,merge=1,delta=2
   189                           	psect	text151,local,class=CODE,merge=1,delta=2
   190                           	psect	text152,local,class=CODE,merge=1,delta=2
   191                           	psect	text153,local,class=CODE,merge=1,delta=2
   192                           	psect	text154,local,class=CODE,merge=1,delta=2
   193                           	psect	text155,local,class=CODE,merge=1,delta=2
   194                           	psect	text156,local,class=CODE,merge=1,delta=2
   195                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   196                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   197                           	dabs	1,0x7E,2
   198     0000                     
   199                           ; Version 2.35
   200                           ; Generated 01/06/2021 GMT
   201                           ; 
   202                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   203                           ; All rights reserved.
   204                           ; 
   205                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   206                           ; 
   207                           ; Redistribution and use in source and binary forms, with or without modification, are
   208                           ; permitted provided that the following conditions are met:
   209                           ; 
   210                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   211                           ;        conditions and the following disclaimer.
   212                           ; 
   213                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   214                           ;        of conditions and the following disclaimer in the documentation and/or other
   215                           ;        materials provided with the distribution. Publication is not required when
   216                           ;        this file is used in an embedded application.
   217                           ; 
   218                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   219                           ;        software without specific prior written permission.
   220                           ; 
   221                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   222                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   223                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   224                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   225                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   226                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   227                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   228                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   229                           ; 
   230                           ; 
   231                           ; Code-generator required, PIC16LF18456 Definitions
   232                           ; 
   233                           ; SFR Addresses
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     0010                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0016                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001C                     	;# 
   258     008C                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     010F                     	;# 
   292     0110                     	;# 
   293     0111                     	;# 
   294     0112                     	;# 
   295     0113                     	;# 
   296     0114                     	;# 
   297     0115                     	;# 
   298     0116                     	;# 
   299     0117                     	;# 
   300     0118                     	;# 
   301     0119                     	;# 
   302     0119                     	;# 
   303     0119                     	;# 
   304     011A                     	;# 
   305     011A                     	;# 
   306     011A                     	;# 
   307     011B                     	;# 
   308     011B                     	;# 
   309     011B                     	;# 
   310     011B                     	;# 
   311     011B                     	;# 
   312     011C                     	;# 
   313     011C                     	;# 
   314     011C                     	;# 
   315     011D                     	;# 
   316     011D                     	;# 
   317     011D                     	;# 
   318     011E                     	;# 
   319     011E                     	;# 
   320     011E                     	;# 
   321     011F                     	;# 
   322     011F                     	;# 
   323     011F                     	;# 
   324     011F                     	;# 
   325     011F                     	;# 
   326     018C                     	;# 
   327     018D                     	;# 
   328     018E                     	;# 
   329     018F                     	;# 
   330     0190                     	;# 
   331     0191                     	;# 
   332     0192                     	;# 
   333     0196                     	;# 
   334     0197                     	;# 
   335     0198                     	;# 
   336     0199                     	;# 
   337     019A                     	;# 
   338     019B                     	;# 
   339     019C                     	;# 
   340     020C                     	;# 
   341     020D                     	;# 
   342     020E                     	;# 
   343     020E                     	;# 
   344     020F                     	;# 
   345     020F                     	;# 
   346     0210                     	;# 
   347     0210                     	;# 
   348     0211                     	;# 
   349     0211                     	;# 
   350     0212                     	;# 
   351     0213                     	;# 
   352     0214                     	;# 
   353     0214                     	;# 
   354     0215                     	;# 
   355     0215                     	;# 
   356     0216                     	;# 
   357     0216                     	;# 
   358     0217                     	;# 
   359     0217                     	;# 
   360     0218                     	;# 
   361     0219                     	;# 
   362     021A                     	;# 
   363     021A                     	;# 
   364     021B                     	;# 
   365     021B                     	;# 
   366     021C                     	;# 
   367     021C                     	;# 
   368     021D                     	;# 
   369     021D                     	;# 
   370     021E                     	;# 
   371     021F                     	;# 
   372     028C                     	;# 
   373     028C                     	;# 
   374     028D                     	;# 
   375     028D                     	;# 
   376     028E                     	;# 
   377     028F                     	;# 
   378     0290                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0292                     	;# 
   382     0293                     	;# 
   383     0293                     	;# 
   384     0294                     	;# 
   385     0295                     	;# 
   386     0296                     	;# 
   387     0297                     	;# 
   388     0298                     	;# 
   389     0298                     	;# 
   390     0299                     	;# 
   391     0299                     	;# 
   392     029A                     	;# 
   393     029B                     	;# 
   394     029C                     	;# 
   395     029D                     	;# 
   396     029F                     	;# 
   397     030C                     	;# 
   398     030C                     	;# 
   399     030D                     	;# 
   400     030E                     	;# 
   401     030F                     	;# 
   402     0310                     	;# 
   403     0310                     	;# 
   404     0311                     	;# 
   405     0312                     	;# 
   406     0313                     	;# 
   407     0314                     	;# 
   408     0314                     	;# 
   409     0315                     	;# 
   410     0316                     	;# 
   411     0317                     	;# 
   412     0318                     	;# 
   413     0318                     	;# 
   414     0319                     	;# 
   415     031A                     	;# 
   416     031B                     	;# 
   417     031C                     	;# 
   418     031C                     	;# 
   419     031D                     	;# 
   420     031E                     	;# 
   421     031F                     	;# 
   422     038C                     	;# 
   423     038C                     	;# 
   424     038D                     	;# 
   425     038E                     	;# 
   426     0390                     	;# 
   427     0390                     	;# 
   428     0391                     	;# 
   429     0392                     	;# 
   430     048C                     	;# 
   431     048C                     	;# 
   432     048D                     	;# 
   433     048E                     	;# 
   434     048F                     	;# 
   435     048F                     	;# 
   436     0490                     	;# 
   437     0491                     	;# 
   438     0492                     	;# 
   439     0492                     	;# 
   440     0493                     	;# 
   441     0494                     	;# 
   442     0495                     	;# 
   443     0495                     	;# 
   444     0496                     	;# 
   445     0497                     	;# 
   446     0498                     	;# 
   447     0499                     	;# 
   448     049A                     	;# 
   449     049B                     	;# 
   450     049C                     	;# 
   451     049D                     	;# 
   452     050C                     	;# 
   453     050C                     	;# 
   454     050D                     	;# 
   455     050E                     	;# 
   456     050F                     	;# 
   457     050F                     	;# 
   458     0510                     	;# 
   459     0511                     	;# 
   460     0512                     	;# 
   461     0512                     	;# 
   462     0513                     	;# 
   463     0514                     	;# 
   464     0515                     	;# 
   465     0515                     	;# 
   466     0516                     	;# 
   467     0517                     	;# 
   468     0518                     	;# 
   469     0519                     	;# 
   470     051A                     	;# 
   471     051B                     	;# 
   472     051C                     	;# 
   473     051D                     	;# 
   474     058C                     	;# 
   475     058C                     	;# 
   476     058D                     	;# 
   477     058E                     	;# 
   478     058F                     	;# 
   479     058F                     	;# 
   480     0590                     	;# 
   481     0591                     	;# 
   482     0592                     	;# 
   483     0593                     	;# 
   484     059C                     	;# 
   485     059C                     	;# 
   486     059D                     	;# 
   487     059D                     	;# 
   488     059E                     	;# 
   489     059F                     	;# 
   490     060C                     	;# 
   491     060C                     	;# 
   492     060D                     	;# 
   493     060D                     	;# 
   494     060E                     	;# 
   495     060F                     	;# 
   496     0610                     	;# 
   497     0611                     	;# 
   498     0612                     	;# 
   499     0613                     	;# 
   500     0614                     	;# 
   501     0616                     	;# 
   502     0616                     	;# 
   503     0617                     	;# 
   504     0617                     	;# 
   505     0618                     	;# 
   506     0619                     	;# 
   507     061A                     	;# 
   508     061B                     	;# 
   509     061C                     	;# 
   510     061D                     	;# 
   511     061E                     	;# 
   512     068C                     	;# 
   513     068D                     	;# 
   514     068E                     	;# 
   515     068F                     	;# 
   516     0690                     	;# 
   517     0691                     	;# 
   518     0692                     	;# 
   519     0693                     	;# 
   520     0694                     	;# 
   521     070C                     	;# 
   522     070D                     	;# 
   523     070E                     	;# 
   524     070F                     	;# 
   525     0710                     	;# 
   526     0711                     	;# 
   527     0712                     	;# 
   528     0713                     	;# 
   529     0714                     	;# 
   530     0716                     	;# 
   531     0717                     	;# 
   532     0718                     	;# 
   533     0719                     	;# 
   534     071A                     	;# 
   535     071B                     	;# 
   536     071C                     	;# 
   537     071D                     	;# 
   538     071E                     	;# 
   539     0796                     	;# 
   540     0797                     	;# 
   541     0798                     	;# 
   542     0799                     	;# 
   543     079A                     	;# 
   544     079B                     	;# 
   545     079C                     	;# 
   546     079D                     	;# 
   547     080C                     	;# 
   548     080D                     	;# 
   549     080E                     	;# 
   550     080F                     	;# 
   551     0810                     	;# 
   552     0811                     	;# 
   553     0813                     	;# 
   554     0814                     	;# 
   555     081A                     	;# 
   556     081A                     	;# 
   557     081B                     	;# 
   558     081C                     	;# 
   559     081C                     	;# 
   560     081D                     	;# 
   561     081E                     	;# 
   562     081F                     	;# 
   563     088C                     	;# 
   564     088D                     	;# 
   565     088E                     	;# 
   566     088F                     	;# 
   567     0890                     	;# 
   568     0891                     	;# 
   569     0892                     	;# 
   570     0893                     	;# 
   571     0895                     	;# 
   572     0896                     	;# 
   573     0897                     	;# 
   574     0898                     	;# 
   575     0899                     	;# 
   576     089A                     	;# 
   577     089B                     	;# 
   578     090C                     	;# 
   579     090E                     	;# 
   580     090F                     	;# 
   581     091F                     	;# 
   582     098F                     	;# 
   583     098F                     	;# 
   584     0990                     	;# 
   585     0991                     	;# 
   586     0992                     	;# 
   587     0993                     	;# 
   588     0994                     	;# 
   589     0995                     	;# 
   590     0996                     	;# 
   591     0997                     	;# 
   592     0A19                     	;# 
   593     0A19                     	;# 
   594     0A1A                     	;# 
   595     0A1A                     	;# 
   596     0A1B                     	;# 
   597     0A1B                     	;# 
   598     0A1B                     	;# 
   599     0A1C                     	;# 
   600     0A1C                     	;# 
   601     0A1D                     	;# 
   602     0A1D                     	;# 
   603     0A1E                     	;# 
   604     0A1E                     	;# 
   605     0A1F                     	;# 
   606     0A1F                     	;# 
   607     0A1F                     	;# 
   608     1E0F                     	;# 
   609     1E10                     	;# 
   610     1E11                     	;# 
   611     1E12                     	;# 
   612     1E13                     	;# 
   613     1E14                     	;# 
   614     1E15                     	;# 
   615     1E16                     	;# 
   616     1E17                     	;# 
   617     1E18                     	;# 
   618     1E19                     	;# 
   619     1E1A                     	;# 
   620     1E1B                     	;# 
   621     1E1C                     	;# 
   622     1E1D                     	;# 
   623     1E1E                     	;# 
   624     1E1F                     	;# 
   625     1E20                     	;# 
   626     1E21                     	;# 
   627     1E22                     	;# 
   628     1E23                     	;# 
   629     1E24                     	;# 
   630     1E25                     	;# 
   631     1E26                     	;# 
   632     1E27                     	;# 
   633     1E28                     	;# 
   634     1E29                     	;# 
   635     1E2A                     	;# 
   636     1E2B                     	;# 
   637     1E2C                     	;# 
   638     1E2D                     	;# 
   639     1E2E                     	;# 
   640     1E2F                     	;# 
   641     1E30                     	;# 
   642     1E31                     	;# 
   643     1E32                     	;# 
   644     1E33                     	;# 
   645     1E34                     	;# 
   646     1E35                     	;# 
   647     1E36                     	;# 
   648     1E37                     	;# 
   649     1E8F                     	;# 
   650     1E90                     	;# 
   651     1E91                     	;# 
   652     1E92                     	;# 
   653     1E93                     	;# 
   654     1E94                     	;# 
   655     1E95                     	;# 
   656     1E96                     	;# 
   657     1E97                     	;# 
   658     1E9C                     	;# 
   659     1E9D                     	;# 
   660     1E9E                     	;# 
   661     1EA1                     	;# 
   662     1EA2                     	;# 
   663     1EA3                     	;# 
   664     1EA4                     	;# 
   665     1EA5                     	;# 
   666     1EA9                     	;# 
   667     1EAA                     	;# 
   668     1EAB                     	;# 
   669     1EAC                     	;# 
   670     1EB1                     	;# 
   671     1EB2                     	;# 
   672     1EB3                     	;# 
   673     1EB8                     	;# 
   674     1EB9                     	;# 
   675     1EBA                     	;# 
   676     1EBB                     	;# 
   677     1EBC                     	;# 
   678     1EBD                     	;# 
   679     1EBE                     	;# 
   680     1EC3                     	;# 
   681     1EC5                     	;# 
   682     1EC6                     	;# 
   683     1EC7                     	;# 
   684     1EC8                     	;# 
   685     1EC9                     	;# 
   686     1ECA                     	;# 
   687     1ECB                     	;# 
   688     1ECC                     	;# 
   689     1ECD                     	;# 
   690     1ECE                     	;# 
   691     1F10                     	;# 
   692     1F11                     	;# 
   693     1F12                     	;# 
   694     1F13                     	;# 
   695     1F14                     	;# 
   696     1F15                     	;# 
   697     1F16                     	;# 
   698     1F17                     	;# 
   699     1F18                     	;# 
   700     1F19                     	;# 
   701     1F1A                     	;# 
   702     1F1B                     	;# 
   703     1F1C                     	;# 
   704     1F1D                     	;# 
   705     1F1E                     	;# 
   706     1F1F                     	;# 
   707     1F20                     	;# 
   708     1F21                     	;# 
   709     1F22                     	;# 
   710     1F23                     	;# 
   711     1F24                     	;# 
   712     1F25                     	;# 
   713     1F26                     	;# 
   714     1F27                     	;# 
   715     1F38                     	;# 
   716     1F39                     	;# 
   717     1F3A                     	;# 
   718     1F3B                     	;# 
   719     1F3C                     	;# 
   720     1F3D                     	;# 
   721     1F3E                     	;# 
   722     1F3F                     	;# 
   723     1F43                     	;# 
   724     1F44                     	;# 
   725     1F45                     	;# 
   726     1F46                     	;# 
   727     1F47                     	;# 
   728     1F48                     	;# 
   729     1F49                     	;# 
   730     1F4A                     	;# 
   731     1F4E                     	;# 
   732     1F4F                     	;# 
   733     1F50                     	;# 
   734     1F51                     	;# 
   735     1F52                     	;# 
   736     1F53                     	;# 
   737     1F54                     	;# 
   738     1F55                     	;# 
   739     1F65                     	;# 
   740     1F66                     	;# 
   741     1F67                     	;# 
   742     1F68                     	;# 
   743     1F69                     	;# 
   744     1F6A                     	;# 
   745     1F6B                     	;# 
   746     1FE4                     	;# 
   747     1FE5                     	;# 
   748     1FE6                     	;# 
   749     1FE7                     	;# 
   750     1FE8                     	;# 
   751     1FE8                     	;# 
   752     1FE9                     	;# 
   753     1FEA                     	;# 
   754     1FEB                     	;# 
   755     1FED                     	;# 
   756     1FEE                     	;# 
   757     1FEF                     	;# 
   758     0000                     	;# 
   759     0001                     	;# 
   760     0002                     	;# 
   761     0003                     	;# 
   762     0004                     	;# 
   763     0005                     	;# 
   764     0006                     	;# 
   765     0007                     	;# 
   766     0008                     	;# 
   767     0009                     	;# 
   768     000A                     	;# 
   769     000B                     	;# 
   770     000C                     	;# 
   771     000D                     	;# 
   772     000E                     	;# 
   773     0010                     	;# 
   774     0012                     	;# 
   775     0013                     	;# 
   776     0014                     	;# 
   777     0016                     	;# 
   778     0018                     	;# 
   779     0019                     	;# 
   780     001A                     	;# 
   781     001C                     	;# 
   782     008C                     	;# 
   783     008C                     	;# 
   784     008D                     	;# 
   785     008E                     	;# 
   786     008E                     	;# 
   787     008F                     	;# 
   788     0090                     	;# 
   789     0090                     	;# 
   790     0091                     	;# 
   791     0092                     	;# 
   792     0092                     	;# 
   793     0093                     	;# 
   794     0094                     	;# 
   795     0094                     	;# 
   796     0095                     	;# 
   797     0096                     	;# 
   798     0096                     	;# 
   799     0097                     	;# 
   800     0098                     	;# 
   801     0099                     	;# 
   802     009A                     	;# 
   803     009B                     	;# 
   804     009B                     	;# 
   805     009C                     	;# 
   806     009D                     	;# 
   807     009D                     	;# 
   808     009E                     	;# 
   809     009F                     	;# 
   810     010C                     	;# 
   811     010C                     	;# 
   812     010D                     	;# 
   813     010E                     	;# 
   814     010F                     	;# 
   815     010F                     	;# 
   816     0110                     	;# 
   817     0111                     	;# 
   818     0112                     	;# 
   819     0113                     	;# 
   820     0114                     	;# 
   821     0115                     	;# 
   822     0116                     	;# 
   823     0117                     	;# 
   824     0118                     	;# 
   825     0119                     	;# 
   826     0119                     	;# 
   827     0119                     	;# 
   828     011A                     	;# 
   829     011A                     	;# 
   830     011A                     	;# 
   831     011B                     	;# 
   832     011B                     	;# 
   833     011B                     	;# 
   834     011B                     	;# 
   835     011B                     	;# 
   836     011C                     	;# 
   837     011C                     	;# 
   838     011C                     	;# 
   839     011D                     	;# 
   840     011D                     	;# 
   841     011D                     	;# 
   842     011E                     	;# 
   843     011E                     	;# 
   844     011E                     	;# 
   845     011F                     	;# 
   846     011F                     	;# 
   847     011F                     	;# 
   848     011F                     	;# 
   849     011F                     	;# 
   850     018C                     	;# 
   851     018D                     	;# 
   852     018E                     	;# 
   853     018F                     	;# 
   854     0190                     	;# 
   855     0191                     	;# 
   856     0192                     	;# 
   857     0196                     	;# 
   858     0197                     	;# 
   859     0198                     	;# 
   860     0199                     	;# 
   861     019A                     	;# 
   862     019B                     	;# 
   863     019C                     	;# 
   864     020C                     	;# 
   865     020D                     	;# 
   866     020E                     	;# 
   867     020E                     	;# 
   868     020F                     	;# 
   869     020F                     	;# 
   870     0210                     	;# 
   871     0210                     	;# 
   872     0211                     	;# 
   873     0211                     	;# 
   874     0212                     	;# 
   875     0213                     	;# 
   876     0214                     	;# 
   877     0214                     	;# 
   878     0215                     	;# 
   879     0215                     	;# 
   880     0216                     	;# 
   881     0216                     	;# 
   882     0217                     	;# 
   883     0217                     	;# 
   884     0218                     	;# 
   885     0219                     	;# 
   886     021A                     	;# 
   887     021A                     	;# 
   888     021B                     	;# 
   889     021B                     	;# 
   890     021C                     	;# 
   891     021C                     	;# 
   892     021D                     	;# 
   893     021D                     	;# 
   894     021E                     	;# 
   895     021F                     	;# 
   896     028C                     	;# 
   897     028C                     	;# 
   898     028D                     	;# 
   899     028D                     	;# 
   900     028E                     	;# 
   901     028F                     	;# 
   902     0290                     	;# 
   903     0291                     	;# 
   904     0292                     	;# 
   905     0292                     	;# 
   906     0293                     	;# 
   907     0293                     	;# 
   908     0294                     	;# 
   909     0295                     	;# 
   910     0296                     	;# 
   911     0297                     	;# 
   912     0298                     	;# 
   913     0298                     	;# 
   914     0299                     	;# 
   915     0299                     	;# 
   916     029A                     	;# 
   917     029B                     	;# 
   918     029C                     	;# 
   919     029D                     	;# 
   920     029F                     	;# 
   921     030C                     	;# 
   922     030C                     	;# 
   923     030D                     	;# 
   924     030E                     	;# 
   925     030F                     	;# 
   926     0310                     	;# 
   927     0310                     	;# 
   928     0311                     	;# 
   929     0312                     	;# 
   930     0313                     	;# 
   931     0314                     	;# 
   932     0314                     	;# 
   933     0315                     	;# 
   934     0316                     	;# 
   935     0317                     	;# 
   936     0318                     	;# 
   937     0318                     	;# 
   938     0319                     	;# 
   939     031A                     	;# 
   940     031B                     	;# 
   941     031C                     	;# 
   942     031C                     	;# 
   943     031D                     	;# 
   944     031E                     	;# 
   945     031F                     	;# 
   946     038C                     	;# 
   947     038C                     	;# 
   948     038D                     	;# 
   949     038E                     	;# 
   950     0390                     	;# 
   951     0390                     	;# 
   952     0391                     	;# 
   953     0392                     	;# 
   954     048C                     	;# 
   955     048C                     	;# 
   956     048D                     	;# 
   957     048E                     	;# 
   958     048F                     	;# 
   959     048F                     	;# 
   960     0490                     	;# 
   961     0491                     	;# 
   962     0492                     	;# 
   963     0492                     	;# 
   964     0493                     	;# 
   965     0494                     	;# 
   966     0495                     	;# 
   967     0495                     	;# 
   968     0496                     	;# 
   969     0497                     	;# 
   970     0498                     	;# 
   971     0499                     	;# 
   972     049A                     	;# 
   973     049B                     	;# 
   974     049C                     	;# 
   975     049D                     	;# 
   976     050C                     	;# 
   977     050C                     	;# 
   978     050D                     	;# 
   979     050E                     	;# 
   980     050F                     	;# 
   981     050F                     	;# 
   982     0510                     	;# 
   983     0511                     	;# 
   984     0512                     	;# 
   985     0512                     	;# 
   986     0513                     	;# 
   987     0514                     	;# 
   988     0515                     	;# 
   989     0515                     	;# 
   990     0516                     	;# 
   991     0517                     	;# 
   992     0518                     	;# 
   993     0519                     	;# 
   994     051A                     	;# 
   995     051B                     	;# 
   996     051C                     	;# 
   997     051D                     	;# 
   998     058C                     	;# 
   999     058C                     	;# 
  1000     058D                     	;# 
  1001     058E                     	;# 
  1002     058F                     	;# 
  1003     058F                     	;# 
  1004     0590                     	;# 
  1005     0591                     	;# 
  1006     0592                     	;# 
  1007     0593                     	;# 
  1008     059C                     	;# 
  1009     059C                     	;# 
  1010     059D                     	;# 
  1011     059D                     	;# 
  1012     059E                     	;# 
  1013     059F                     	;# 
  1014     060C                     	;# 
  1015     060C                     	;# 
  1016     060D                     	;# 
  1017     060D                     	;# 
  1018     060E                     	;# 
  1019     060F                     	;# 
  1020     0610                     	;# 
  1021     0611                     	;# 
  1022     0612                     	;# 
  1023     0613                     	;# 
  1024     0614                     	;# 
  1025     0616                     	;# 
  1026     0616                     	;# 
  1027     0617                     	;# 
  1028     0617                     	;# 
  1029     0618                     	;# 
  1030     0619                     	;# 
  1031     061A                     	;# 
  1032     061B                     	;# 
  1033     061C                     	;# 
  1034     061D                     	;# 
  1035     061E                     	;# 
  1036     068C                     	;# 
  1037     068D                     	;# 
  1038     068E                     	;# 
  1039     068F                     	;# 
  1040     0690                     	;# 
  1041     0691                     	;# 
  1042     0692                     	;# 
  1043     0693                     	;# 
  1044     0694                     	;# 
  1045     070C                     	;# 
  1046     070D                     	;# 
  1047     070E                     	;# 
  1048     070F                     	;# 
  1049     0710                     	;# 
  1050     0711                     	;# 
  1051     0712                     	;# 
  1052     0713                     	;# 
  1053     0714                     	;# 
  1054     0716                     	;# 
  1055     0717                     	;# 
  1056     0718                     	;# 
  1057     0719                     	;# 
  1058     071A                     	;# 
  1059     071B                     	;# 
  1060     071C                     	;# 
  1061     071D                     	;# 
  1062     071E                     	;# 
  1063     0796                     	;# 
  1064     0797                     	;# 
  1065     0798                     	;# 
  1066     0799                     	;# 
  1067     079A                     	;# 
  1068     079B                     	;# 
  1069     079C                     	;# 
  1070     079D                     	;# 
  1071     080C                     	;# 
  1072     080D                     	;# 
  1073     080E                     	;# 
  1074     080F                     	;# 
  1075     0810                     	;# 
  1076     0811                     	;# 
  1077     0813                     	;# 
  1078     0814                     	;# 
  1079     081A                     	;# 
  1080     081A                     	;# 
  1081     081B                     	;# 
  1082     081C                     	;# 
  1083     081C                     	;# 
  1084     081D                     	;# 
  1085     081E                     	;# 
  1086     081F                     	;# 
  1087     088C                     	;# 
  1088     088D                     	;# 
  1089     088E                     	;# 
  1090     088F                     	;# 
  1091     0890                     	;# 
  1092     0891                     	;# 
  1093     0892                     	;# 
  1094     0893                     	;# 
  1095     0895                     	;# 
  1096     0896                     	;# 
  1097     0897                     	;# 
  1098     0898                     	;# 
  1099     0899                     	;# 
  1100     089A                     	;# 
  1101     089B                     	;# 
  1102     090C                     	;# 
  1103     090E                     	;# 
  1104     090F                     	;# 
  1105     091F                     	;# 
  1106     098F                     	;# 
  1107     098F                     	;# 
  1108     0990                     	;# 
  1109     0991                     	;# 
  1110     0992                     	;# 
  1111     0993                     	;# 
  1112     0994                     	;# 
  1113     0995                     	;# 
  1114     0996                     	;# 
  1115     0997                     	;# 
  1116     0A19                     	;# 
  1117     0A19                     	;# 
  1118     0A1A                     	;# 
  1119     0A1A                     	;# 
  1120     0A1B                     	;# 
  1121     0A1B                     	;# 
  1122     0A1B                     	;# 
  1123     0A1C                     	;# 
  1124     0A1C                     	;# 
  1125     0A1D                     	;# 
  1126     0A1D                     	;# 
  1127     0A1E                     	;# 
  1128     0A1E                     	;# 
  1129     0A1F                     	;# 
  1130     0A1F                     	;# 
  1131     0A1F                     	;# 
  1132     1E0F                     	;# 
  1133     1E10                     	;# 
  1134     1E11                     	;# 
  1135     1E12                     	;# 
  1136     1E13                     	;# 
  1137     1E14                     	;# 
  1138     1E15                     	;# 
  1139     1E16                     	;# 
  1140     1E17                     	;# 
  1141     1E18                     	;# 
  1142     1E19                     	;# 
  1143     1E1A                     	;# 
  1144     1E1B                     	;# 
  1145     1E1C                     	;# 
  1146     1E1D                     	;# 
  1147     1E1E                     	;# 
  1148     1E1F                     	;# 
  1149     1E20                     	;# 
  1150     1E21                     	;# 
  1151     1E22                     	;# 
  1152     1E23                     	;# 
  1153     1E24                     	;# 
  1154     1E25                     	;# 
  1155     1E26                     	;# 
  1156     1E27                     	;# 
  1157     1E28                     	;# 
  1158     1E29                     	;# 
  1159     1E2A                     	;# 
  1160     1E2B                     	;# 
  1161     1E2C                     	;# 
  1162     1E2D                     	;# 
  1163     1E2E                     	;# 
  1164     1E2F                     	;# 
  1165     1E30                     	;# 
  1166     1E31                     	;# 
  1167     1E32                     	;# 
  1168     1E33                     	;# 
  1169     1E34                     	;# 
  1170     1E35                     	;# 
  1171     1E36                     	;# 
  1172     1E37                     	;# 
  1173     1E8F                     	;# 
  1174     1E90                     	;# 
  1175     1E91                     	;# 
  1176     1E92                     	;# 
  1177     1E93                     	;# 
  1178     1E94                     	;# 
  1179     1E95                     	;# 
  1180     1E96                     	;# 
  1181     1E97                     	;# 
  1182     1E9C                     	;# 
  1183     1E9D                     	;# 
  1184     1E9E                     	;# 
  1185     1EA1                     	;# 
  1186     1EA2                     	;# 
  1187     1EA3                     	;# 
  1188     1EA4                     	;# 
  1189     1EA5                     	;# 
  1190     1EA9                     	;# 
  1191     1EAA                     	;# 
  1192     1EAB                     	;# 
  1193     1EAC                     	;# 
  1194     1EB1                     	;# 
  1195     1EB2                     	;# 
  1196     1EB3                     	;# 
  1197     1EB8                     	;# 
  1198     1EB9                     	;# 
  1199     1EBA                     	;# 
  1200     1EBB                     	;# 
  1201     1EBC                     	;# 
  1202     1EBD                     	;# 
  1203     1EBE                     	;# 
  1204     1EC3                     	;# 
  1205     1EC5                     	;# 
  1206     1EC6                     	;# 
  1207     1EC7                     	;# 
  1208     1EC8                     	;# 
  1209     1EC9                     	;# 
  1210     1ECA                     	;# 
  1211     1ECB                     	;# 
  1212     1ECC                     	;# 
  1213     1ECD                     	;# 
  1214     1ECE                     	;# 
  1215     1F10                     	;# 
  1216     1F11                     	;# 
  1217     1F12                     	;# 
  1218     1F13                     	;# 
  1219     1F14                     	;# 
  1220     1F15                     	;# 
  1221     1F16                     	;# 
  1222     1F17                     	;# 
  1223     1F18                     	;# 
  1224     1F19                     	;# 
  1225     1F1A                     	;# 
  1226     1F1B                     	;# 
  1227     1F1C                     	;# 
  1228     1F1D                     	;# 
  1229     1F1E                     	;# 
  1230     1F1F                     	;# 
  1231     1F20                     	;# 
  1232     1F21                     	;# 
  1233     1F22                     	;# 
  1234     1F23                     	;# 
  1235     1F24                     	;# 
  1236     1F25                     	;# 
  1237     1F26                     	;# 
  1238     1F27                     	;# 
  1239     1F38                     	;# 
  1240     1F39                     	;# 
  1241     1F3A                     	;# 
  1242     1F3B                     	;# 
  1243     1F3C                     	;# 
  1244     1F3D                     	;# 
  1245     1F3E                     	;# 
  1246     1F3F                     	;# 
  1247     1F43                     	;# 
  1248     1F44                     	;# 
  1249     1F45                     	;# 
  1250     1F46                     	;# 
  1251     1F47                     	;# 
  1252     1F48                     	;# 
  1253     1F49                     	;# 
  1254     1F4A                     	;# 
  1255     1F4E                     	;# 
  1256     1F4F                     	;# 
  1257     1F50                     	;# 
  1258     1F51                     	;# 
  1259     1F52                     	;# 
  1260     1F53                     	;# 
  1261     1F54                     	;# 
  1262     1F55                     	;# 
  1263     1F65                     	;# 
  1264     1F66                     	;# 
  1265     1F67                     	;# 
  1266     1F68                     	;# 
  1267     1F69                     	;# 
  1268     1F6A                     	;# 
  1269     1F6B                     	;# 
  1270     1FE4                     	;# 
  1271     1FE5                     	;# 
  1272     1FE6                     	;# 
  1273     1FE7                     	;# 
  1274     1FE8                     	;# 
  1275     1FE8                     	;# 
  1276     1FE9                     	;# 
  1277     1FEA                     	;# 
  1278     1FEB                     	;# 
  1279     1FED                     	;# 
  1280     1FEE                     	;# 
  1281     1FEF                     	;# 
  1282     0000                     	;# 
  1283     0001                     	;# 
  1284     0002                     	;# 
  1285     0003                     	;# 
  1286     0004                     	;# 
  1287     0005                     	;# 
  1288     0006                     	;# 
  1289     0007                     	;# 
  1290     0008                     	;# 
  1291     0009                     	;# 
  1292     000A                     	;# 
  1293     000B                     	;# 
  1294     000C                     	;# 
  1295     000D                     	;# 
  1296     000E                     	;# 
  1297     0010                     	;# 
  1298     0012                     	;# 
  1299     0013                     	;# 
  1300     0014                     	;# 
  1301     0016                     	;# 
  1302     0018                     	;# 
  1303     0019                     	;# 
  1304     001A                     	;# 
  1305     001C                     	;# 
  1306     008C                     	;# 
  1307     008C                     	;# 
  1308     008D                     	;# 
  1309     008E                     	;# 
  1310     008E                     	;# 
  1311     008F                     	;# 
  1312     0090                     	;# 
  1313     0090                     	;# 
  1314     0091                     	;# 
  1315     0092                     	;# 
  1316     0092                     	;# 
  1317     0093                     	;# 
  1318     0094                     	;# 
  1319     0094                     	;# 
  1320     0095                     	;# 
  1321     0096                     	;# 
  1322     0096                     	;# 
  1323     0097                     	;# 
  1324     0098                     	;# 
  1325     0099                     	;# 
  1326     009A                     	;# 
  1327     009B                     	;# 
  1328     009B                     	;# 
  1329     009C                     	;# 
  1330     009D                     	;# 
  1331     009D                     	;# 
  1332     009E                     	;# 
  1333     009F                     	;# 
  1334     010C                     	;# 
  1335     010C                     	;# 
  1336     010D                     	;# 
  1337     010E                     	;# 
  1338     010F                     	;# 
  1339     010F                     	;# 
  1340     0110                     	;# 
  1341     0111                     	;# 
  1342     0112                     	;# 
  1343     0113                     	;# 
  1344     0114                     	;# 
  1345     0115                     	;# 
  1346     0116                     	;# 
  1347     0117                     	;# 
  1348     0118                     	;# 
  1349     0119                     	;# 
  1350     0119                     	;# 
  1351     0119                     	;# 
  1352     011A                     	;# 
  1353     011A                     	;# 
  1354     011A                     	;# 
  1355     011B                     	;# 
  1356     011B                     	;# 
  1357     011B                     	;# 
  1358     011B                     	;# 
  1359     011B                     	;# 
  1360     011C                     	;# 
  1361     011C                     	;# 
  1362     011C                     	;# 
  1363     011D                     	;# 
  1364     011D                     	;# 
  1365     011D                     	;# 
  1366     011E                     	;# 
  1367     011E                     	;# 
  1368     011E                     	;# 
  1369     011F                     	;# 
  1370     011F                     	;# 
  1371     011F                     	;# 
  1372     011F                     	;# 
  1373     011F                     	;# 
  1374     018C                     	;# 
  1375     018D                     	;# 
  1376     018E                     	;# 
  1377     018F                     	;# 
  1378     0190                     	;# 
  1379     0191                     	;# 
  1380     0192                     	;# 
  1381     0196                     	;# 
  1382     0197                     	;# 
  1383     0198                     	;# 
  1384     0199                     	;# 
  1385     019A                     	;# 
  1386     019B                     	;# 
  1387     019C                     	;# 
  1388     020C                     	;# 
  1389     020D                     	;# 
  1390     020E                     	;# 
  1391     020E                     	;# 
  1392     020F                     	;# 
  1393     020F                     	;# 
  1394     0210                     	;# 
  1395     0210                     	;# 
  1396     0211                     	;# 
  1397     0211                     	;# 
  1398     0212                     	;# 
  1399     0213                     	;# 
  1400     0214                     	;# 
  1401     0214                     	;# 
  1402     0215                     	;# 
  1403     0215                     	;# 
  1404     0216                     	;# 
  1405     0216                     	;# 
  1406     0217                     	;# 
  1407     0217                     	;# 
  1408     0218                     	;# 
  1409     0219                     	;# 
  1410     021A                     	;# 
  1411     021A                     	;# 
  1412     021B                     	;# 
  1413     021B                     	;# 
  1414     021C                     	;# 
  1415     021C                     	;# 
  1416     021D                     	;# 
  1417     021D                     	;# 
  1418     021E                     	;# 
  1419     021F                     	;# 
  1420     028C                     	;# 
  1421     028C                     	;# 
  1422     028D                     	;# 
  1423     028D                     	;# 
  1424     028E                     	;# 
  1425     028F                     	;# 
  1426     0290                     	;# 
  1427     0291                     	;# 
  1428     0292                     	;# 
  1429     0292                     	;# 
  1430     0293                     	;# 
  1431     0293                     	;# 
  1432     0294                     	;# 
  1433     0295                     	;# 
  1434     0296                     	;# 
  1435     0297                     	;# 
  1436     0298                     	;# 
  1437     0298                     	;# 
  1438     0299                     	;# 
  1439     0299                     	;# 
  1440     029A                     	;# 
  1441     029B                     	;# 
  1442     029C                     	;# 
  1443     029D                     	;# 
  1444     029F                     	;# 
  1445     030C                     	;# 
  1446     030C                     	;# 
  1447     030D                     	;# 
  1448     030E                     	;# 
  1449     030F                     	;# 
  1450     0310                     	;# 
  1451     0310                     	;# 
  1452     0311                     	;# 
  1453     0312                     	;# 
  1454     0313                     	;# 
  1455     0314                     	;# 
  1456     0314                     	;# 
  1457     0315                     	;# 
  1458     0316                     	;# 
  1459     0317                     	;# 
  1460     0318                     	;# 
  1461     0318                     	;# 
  1462     0319                     	;# 
  1463     031A                     	;# 
  1464     031B                     	;# 
  1465     031C                     	;# 
  1466     031C                     	;# 
  1467     031D                     	;# 
  1468     031E                     	;# 
  1469     031F                     	;# 
  1470     038C                     	;# 
  1471     038C                     	;# 
  1472     038D                     	;# 
  1473     038E                     	;# 
  1474     0390                     	;# 
  1475     0390                     	;# 
  1476     0391                     	;# 
  1477     0392                     	;# 
  1478     048C                     	;# 
  1479     048C                     	;# 
  1480     048D                     	;# 
  1481     048E                     	;# 
  1482     048F                     	;# 
  1483     048F                     	;# 
  1484     0490                     	;# 
  1485     0491                     	;# 
  1486     0492                     	;# 
  1487     0492                     	;# 
  1488     0493                     	;# 
  1489     0494                     	;# 
  1490     0495                     	;# 
  1491     0495                     	;# 
  1492     0496                     	;# 
  1493     0497                     	;# 
  1494     0498                     	;# 
  1495     0499                     	;# 
  1496     049A                     	;# 
  1497     049B                     	;# 
  1498     049C                     	;# 
  1499     049D                     	;# 
  1500     050C                     	;# 
  1501     050C                     	;# 
  1502     050D                     	;# 
  1503     050E                     	;# 
  1504     050F                     	;# 
  1505     050F                     	;# 
  1506     0510                     	;# 
  1507     0511                     	;# 
  1508     0512                     	;# 
  1509     0512                     	;# 
  1510     0513                     	;# 
  1511     0514                     	;# 
  1512     0515                     	;# 
  1513     0515                     	;# 
  1514     0516                     	;# 
  1515     0517                     	;# 
  1516     0518                     	;# 
  1517     0519                     	;# 
  1518     051A                     	;# 
  1519     051B                     	;# 
  1520     051C                     	;# 
  1521     051D                     	;# 
  1522     058C                     	;# 
  1523     058C                     	;# 
  1524     058D                     	;# 
  1525     058E                     	;# 
  1526     058F                     	;# 
  1527     058F                     	;# 
  1528     0590                     	;# 
  1529     0591                     	;# 
  1530     0592                     	;# 
  1531     0593                     	;# 
  1532     059C                     	;# 
  1533     059C                     	;# 
  1534     059D                     	;# 
  1535     059D                     	;# 
  1536     059E                     	;# 
  1537     059F                     	;# 
  1538     060C                     	;# 
  1539     060C                     	;# 
  1540     060D                     	;# 
  1541     060D                     	;# 
  1542     060E                     	;# 
  1543     060F                     	;# 
  1544     0610                     	;# 
  1545     0611                     	;# 
  1546     0612                     	;# 
  1547     0613                     	;# 
  1548     0614                     	;# 
  1549     0616                     	;# 
  1550     0616                     	;# 
  1551     0617                     	;# 
  1552     0617                     	;# 
  1553     0618                     	;# 
  1554     0619                     	;# 
  1555     061A                     	;# 
  1556     061B                     	;# 
  1557     061C                     	;# 
  1558     061D                     	;# 
  1559     061E                     	;# 
  1560     068C                     	;# 
  1561     068D                     	;# 
  1562     068E                     	;# 
  1563     068F                     	;# 
  1564     0690                     	;# 
  1565     0691                     	;# 
  1566     0692                     	;# 
  1567     0693                     	;# 
  1568     0694                     	;# 
  1569     070C                     	;# 
  1570     070D                     	;# 
  1571     070E                     	;# 
  1572     070F                     	;# 
  1573     0710                     	;# 
  1574     0711                     	;# 
  1575     0712                     	;# 
  1576     0713                     	;# 
  1577     0714                     	;# 
  1578     0716                     	;# 
  1579     0717                     	;# 
  1580     0718                     	;# 
  1581     0719                     	;# 
  1582     071A                     	;# 
  1583     071B                     	;# 
  1584     071C                     	;# 
  1585     071D                     	;# 
  1586     071E                     	;# 
  1587     0796                     	;# 
  1588     0797                     	;# 
  1589     0798                     	;# 
  1590     0799                     	;# 
  1591     079A                     	;# 
  1592     079B                     	;# 
  1593     079C                     	;# 
  1594     079D                     	;# 
  1595     080C                     	;# 
  1596     080D                     	;# 
  1597     080E                     	;# 
  1598     080F                     	;# 
  1599     0810                     	;# 
  1600     0811                     	;# 
  1601     0813                     	;# 
  1602     0814                     	;# 
  1603     081A                     	;# 
  1604     081A                     	;# 
  1605     081B                     	;# 
  1606     081C                     	;# 
  1607     081C                     	;# 
  1608     081D                     	;# 
  1609     081E                     	;# 
  1610     081F                     	;# 
  1611     088C                     	;# 
  1612     088D                     	;# 
  1613     088E                     	;# 
  1614     088F                     	;# 
  1615     0890                     	;# 
  1616     0891                     	;# 
  1617     0892                     	;# 
  1618     0893                     	;# 
  1619     0895                     	;# 
  1620     0896                     	;# 
  1621     0897                     	;# 
  1622     0898                     	;# 
  1623     0899                     	;# 
  1624     089A                     	;# 
  1625     089B                     	;# 
  1626     090C                     	;# 
  1627     090E                     	;# 
  1628     090F                     	;# 
  1629     091F                     	;# 
  1630     098F                     	;# 
  1631     098F                     	;# 
  1632     0990                     	;# 
  1633     0991                     	;# 
  1634     0992                     	;# 
  1635     0993                     	;# 
  1636     0994                     	;# 
  1637     0995                     	;# 
  1638     0996                     	;# 
  1639     0997                     	;# 
  1640     0A19                     	;# 
  1641     0A19                     	;# 
  1642     0A1A                     	;# 
  1643     0A1A                     	;# 
  1644     0A1B                     	;# 
  1645     0A1B                     	;# 
  1646     0A1B                     	;# 
  1647     0A1C                     	;# 
  1648     0A1C                     	;# 
  1649     0A1D                     	;# 
  1650     0A1D                     	;# 
  1651     0A1E                     	;# 
  1652     0A1E                     	;# 
  1653     0A1F                     	;# 
  1654     0A1F                     	;# 
  1655     0A1F                     	;# 
  1656     1E0F                     	;# 
  1657     1E10                     	;# 
  1658     1E11                     	;# 
  1659     1E12                     	;# 
  1660     1E13                     	;# 
  1661     1E14                     	;# 
  1662     1E15                     	;# 
  1663     1E16                     	;# 
  1664     1E17                     	;# 
  1665     1E18                     	;# 
  1666     1E19                     	;# 
  1667     1E1A                     	;# 
  1668     1E1B                     	;# 
  1669     1E1C                     	;# 
  1670     1E1D                     	;# 
  1671     1E1E                     	;# 
  1672     1E1F                     	;# 
  1673     1E20                     	;# 
  1674     1E21                     	;# 
  1675     1E22                     	;# 
  1676     1E23                     	;# 
  1677     1E24                     	;# 
  1678     1E25                     	;# 
  1679     1E26                     	;# 
  1680     1E27                     	;# 
  1681     1E28                     	;# 
  1682     1E29                     	;# 
  1683     1E2A                     	;# 
  1684     1E2B                     	;# 
  1685     1E2C                     	;# 
  1686     1E2D                     	;# 
  1687     1E2E                     	;# 
  1688     1E2F                     	;# 
  1689     1E30                     	;# 
  1690     1E31                     	;# 
  1691     1E32                     	;# 
  1692     1E33                     	;# 
  1693     1E34                     	;# 
  1694     1E35                     	;# 
  1695     1E36                     	;# 
  1696     1E37                     	;# 
  1697     1E8F                     	;# 
  1698     1E90                     	;# 
  1699     1E91                     	;# 
  1700     1E92                     	;# 
  1701     1E93                     	;# 
  1702     1E94                     	;# 
  1703     1E95                     	;# 
  1704     1E96                     	;# 
  1705     1E97                     	;# 
  1706     1E9C                     	;# 
  1707     1E9D                     	;# 
  1708     1E9E                     	;# 
  1709     1EA1                     	;# 
  1710     1EA2                     	;# 
  1711     1EA3                     	;# 
  1712     1EA4                     	;# 
  1713     1EA5                     	;# 
  1714     1EA9                     	;# 
  1715     1EAA                     	;# 
  1716     1EAB                     	;# 
  1717     1EAC                     	;# 
  1718     1EB1                     	;# 
  1719     1EB2                     	;# 
  1720     1EB3                     	;# 
  1721     1EB8                     	;# 
  1722     1EB9                     	;# 
  1723     1EBA                     	;# 
  1724     1EBB                     	;# 
  1725     1EBC                     	;# 
  1726     1EBD                     	;# 
  1727     1EBE                     	;# 
  1728     1EC3                     	;# 
  1729     1EC5                     	;# 
  1730     1EC6                     	;# 
  1731     1EC7                     	;# 
  1732     1EC8                     	;# 
  1733     1EC9                     	;# 
  1734     1ECA                     	;# 
  1735     1ECB                     	;# 
  1736     1ECC                     	;# 
  1737     1ECD                     	;# 
  1738     1ECE                     	;# 
  1739     1F10                     	;# 
  1740     1F11                     	;# 
  1741     1F12                     	;# 
  1742     1F13                     	;# 
  1743     1F14                     	;# 
  1744     1F15                     	;# 
  1745     1F16                     	;# 
  1746     1F17                     	;# 
  1747     1F18                     	;# 
  1748     1F19                     	;# 
  1749     1F1A                     	;# 
  1750     1F1B                     	;# 
  1751     1F1C                     	;# 
  1752     1F1D                     	;# 
  1753     1F1E                     	;# 
  1754     1F1F                     	;# 
  1755     1F20                     	;# 
  1756     1F21                     	;# 
  1757     1F22                     	;# 
  1758     1F23                     	;# 
  1759     1F24                     	;# 
  1760     1F25                     	;# 
  1761     1F26                     	;# 
  1762     1F27                     	;# 
  1763     1F38                     	;# 
  1764     1F39                     	;# 
  1765     1F3A                     	;# 
  1766     1F3B                     	;# 
  1767     1F3C                     	;# 
  1768     1F3D                     	;# 
  1769     1F3E                     	;# 
  1770     1F3F                     	;# 
  1771     1F43                     	;# 
  1772     1F44                     	;# 
  1773     1F45                     	;# 
  1774     1F46                     	;# 
  1775     1F47                     	;# 
  1776     1F48                     	;# 
  1777     1F49                     	;# 
  1778     1F4A                     	;# 
  1779     1F4E                     	;# 
  1780     1F4F                     	;# 
  1781     1F50                     	;# 
  1782     1F51                     	;# 
  1783     1F52                     	;# 
  1784     1F53                     	;# 
  1785     1F54                     	;# 
  1786     1F55                     	;# 
  1787     1F65                     	;# 
  1788     1F66                     	;# 
  1789     1F67                     	;# 
  1790     1F68                     	;# 
  1791     1F69                     	;# 
  1792     1F6A                     	;# 
  1793     1F6B                     	;# 
  1794     1FE4                     	;# 
  1795     1FE5                     	;# 
  1796     1FE6                     	;# 
  1797     1FE7                     	;# 
  1798     1FE8                     	;# 
  1799     1FE8                     	;# 
  1800     1FE9                     	;# 
  1801     1FEA                     	;# 
  1802     1FEB                     	;# 
  1803     1FED                     	;# 
  1804     1FEE                     	;# 
  1805     1FEF                     	;# 
  1806     0000                     	;# 
  1807     0001                     	;# 
  1808     0002                     	;# 
  1809     0003                     	;# 
  1810     0004                     	;# 
  1811     0005                     	;# 
  1812     0006                     	;# 
  1813     0007                     	;# 
  1814     0008                     	;# 
  1815     0009                     	;# 
  1816     000A                     	;# 
  1817     000B                     	;# 
  1818     000C                     	;# 
  1819     000D                     	;# 
  1820     000E                     	;# 
  1821     0010                     	;# 
  1822     0012                     	;# 
  1823     0013                     	;# 
  1824     0014                     	;# 
  1825     0016                     	;# 
  1826     0018                     	;# 
  1827     0019                     	;# 
  1828     001A                     	;# 
  1829     001C                     	;# 
  1830     008C                     	;# 
  1831     008C                     	;# 
  1832     008D                     	;# 
  1833     008E                     	;# 
  1834     008E                     	;# 
  1835     008F                     	;# 
  1836     0090                     	;# 
  1837     0090                     	;# 
  1838     0091                     	;# 
  1839     0092                     	;# 
  1840     0092                     	;# 
  1841     0093                     	;# 
  1842     0094                     	;# 
  1843     0094                     	;# 
  1844     0095                     	;# 
  1845     0096                     	;# 
  1846     0096                     	;# 
  1847     0097                     	;# 
  1848     0098                     	;# 
  1849     0099                     	;# 
  1850     009A                     	;# 
  1851     009B                     	;# 
  1852     009B                     	;# 
  1853     009C                     	;# 
  1854     009D                     	;# 
  1855     009D                     	;# 
  1856     009E                     	;# 
  1857     009F                     	;# 
  1858     010C                     	;# 
  1859     010C                     	;# 
  1860     010D                     	;# 
  1861     010E                     	;# 
  1862     010F                     	;# 
  1863     010F                     	;# 
  1864     0110                     	;# 
  1865     0111                     	;# 
  1866     0112                     	;# 
  1867     0113                     	;# 
  1868     0114                     	;# 
  1869     0115                     	;# 
  1870     0116                     	;# 
  1871     0117                     	;# 
  1872     0118                     	;# 
  1873     0119                     	;# 
  1874     0119                     	;# 
  1875     0119                     	;# 
  1876     011A                     	;# 
  1877     011A                     	;# 
  1878     011A                     	;# 
  1879     011B                     	;# 
  1880     011B                     	;# 
  1881     011B                     	;# 
  1882     011B                     	;# 
  1883     011B                     	;# 
  1884     011C                     	;# 
  1885     011C                     	;# 
  1886     011C                     	;# 
  1887     011D                     	;# 
  1888     011D                     	;# 
  1889     011D                     	;# 
  1890     011E                     	;# 
  1891     011E                     	;# 
  1892     011E                     	;# 
  1893     011F                     	;# 
  1894     011F                     	;# 
  1895     011F                     	;# 
  1896     011F                     	;# 
  1897     011F                     	;# 
  1898     018C                     	;# 
  1899     018D                     	;# 
  1900     018E                     	;# 
  1901     018F                     	;# 
  1902     0190                     	;# 
  1903     0191                     	;# 
  1904     0192                     	;# 
  1905     0196                     	;# 
  1906     0197                     	;# 
  1907     0198                     	;# 
  1908     0199                     	;# 
  1909     019A                     	;# 
  1910     019B                     	;# 
  1911     019C                     	;# 
  1912     020C                     	;# 
  1913     020D                     	;# 
  1914     020E                     	;# 
  1915     020E                     	;# 
  1916     020F                     	;# 
  1917     020F                     	;# 
  1918     0210                     	;# 
  1919     0210                     	;# 
  1920     0211                     	;# 
  1921     0211                     	;# 
  1922     0212                     	;# 
  1923     0213                     	;# 
  1924     0214                     	;# 
  1925     0214                     	;# 
  1926     0215                     	;# 
  1927     0215                     	;# 
  1928     0216                     	;# 
  1929     0216                     	;# 
  1930     0217                     	;# 
  1931     0217                     	;# 
  1932     0218                     	;# 
  1933     0219                     	;# 
  1934     021A                     	;# 
  1935     021A                     	;# 
  1936     021B                     	;# 
  1937     021B                     	;# 
  1938     021C                     	;# 
  1939     021C                     	;# 
  1940     021D                     	;# 
  1941     021D                     	;# 
  1942     021E                     	;# 
  1943     021F                     	;# 
  1944     028C                     	;# 
  1945     028C                     	;# 
  1946     028D                     	;# 
  1947     028D                     	;# 
  1948     028E                     	;# 
  1949     028F                     	;# 
  1950     0290                     	;# 
  1951     0291                     	;# 
  1952     0292                     	;# 
  1953     0292                     	;# 
  1954     0293                     	;# 
  1955     0293                     	;# 
  1956     0294                     	;# 
  1957     0295                     	;# 
  1958     0296                     	;# 
  1959     0297                     	;# 
  1960     0298                     	;# 
  1961     0298                     	;# 
  1962     0299                     	;# 
  1963     0299                     	;# 
  1964     029A                     	;# 
  1965     029B                     	;# 
  1966     029C                     	;# 
  1967     029D                     	;# 
  1968     029F                     	;# 
  1969     030C                     	;# 
  1970     030C                     	;# 
  1971     030D                     	;# 
  1972     030E                     	;# 
  1973     030F                     	;# 
  1974     0310                     	;# 
  1975     0310                     	;# 
  1976     0311                     	;# 
  1977     0312                     	;# 
  1978     0313                     	;# 
  1979     0314                     	;# 
  1980     0314                     	;# 
  1981     0315                     	;# 
  1982     0316                     	;# 
  1983     0317                     	;# 
  1984     0318                     	;# 
  1985     0318                     	;# 
  1986     0319                     	;# 
  1987     031A                     	;# 
  1988     031B                     	;# 
  1989     031C                     	;# 
  1990     031C                     	;# 
  1991     031D                     	;# 
  1992     031E                     	;# 
  1993     031F                     	;# 
  1994     038C                     	;# 
  1995     038C                     	;# 
  1996     038D                     	;# 
  1997     038E                     	;# 
  1998     0390                     	;# 
  1999     0390                     	;# 
  2000     0391                     	;# 
  2001     0392                     	;# 
  2002     048C                     	;# 
  2003     048C                     	;# 
  2004     048D                     	;# 
  2005     048E                     	;# 
  2006     048F                     	;# 
  2007     048F                     	;# 
  2008     0490                     	;# 
  2009     0491                     	;# 
  2010     0492                     	;# 
  2011     0492                     	;# 
  2012     0493                     	;# 
  2013     0494                     	;# 
  2014     0495                     	;# 
  2015     0495                     	;# 
  2016     0496                     	;# 
  2017     0497                     	;# 
  2018     0498                     	;# 
  2019     0499                     	;# 
  2020     049A                     	;# 
  2021     049B                     	;# 
  2022     049C                     	;# 
  2023     049D                     	;# 
  2024     050C                     	;# 
  2025     050C                     	;# 
  2026     050D                     	;# 
  2027     050E                     	;# 
  2028     050F                     	;# 
  2029     050F                     	;# 
  2030     0510                     	;# 
  2031     0511                     	;# 
  2032     0512                     	;# 
  2033     0512                     	;# 
  2034     0513                     	;# 
  2035     0514                     	;# 
  2036     0515                     	;# 
  2037     0515                     	;# 
  2038     0516                     	;# 
  2039     0517                     	;# 
  2040     0518                     	;# 
  2041     0519                     	;# 
  2042     051A                     	;# 
  2043     051B                     	;# 
  2044     051C                     	;# 
  2045     051D                     	;# 
  2046     058C                     	;# 
  2047     058C                     	;# 
  2048     058D                     	;# 
  2049     058E                     	;# 
  2050     058F                     	;# 
  2051     058F                     	;# 
  2052     0590                     	;# 
  2053     0591                     	;# 
  2054     0592                     	;# 
  2055     0593                     	;# 
  2056     059C                     	;# 
  2057     059C                     	;# 
  2058     059D                     	;# 
  2059     059D                     	;# 
  2060     059E                     	;# 
  2061     059F                     	;# 
  2062     060C                     	;# 
  2063     060C                     	;# 
  2064     060D                     	;# 
  2065     060D                     	;# 
  2066     060E                     	;# 
  2067     060F                     	;# 
  2068     0610                     	;# 
  2069     0611                     	;# 
  2070     0612                     	;# 
  2071     0613                     	;# 
  2072     0614                     	;# 
  2073     0616                     	;# 
  2074     0616                     	;# 
  2075     0617                     	;# 
  2076     0617                     	;# 
  2077     0618                     	;# 
  2078     0619                     	;# 
  2079     061A                     	;# 
  2080     061B                     	;# 
  2081     061C                     	;# 
  2082     061D                     	;# 
  2083     061E                     	;# 
  2084     068C                     	;# 
  2085     068D                     	;# 
  2086     068E                     	;# 
  2087     068F                     	;# 
  2088     0690                     	;# 
  2089     0691                     	;# 
  2090     0692                     	;# 
  2091     0693                     	;# 
  2092     0694                     	;# 
  2093     070C                     	;# 
  2094     070D                     	;# 
  2095     070E                     	;# 
  2096     070F                     	;# 
  2097     0710                     	;# 
  2098     0711                     	;# 
  2099     0712                     	;# 
  2100     0713                     	;# 
  2101     0714                     	;# 
  2102     0716                     	;# 
  2103     0717                     	;# 
  2104     0718                     	;# 
  2105     0719                     	;# 
  2106     071A                     	;# 
  2107     071B                     	;# 
  2108     071C                     	;# 
  2109     071D                     	;# 
  2110     071E                     	;# 
  2111     0796                     	;# 
  2112     0797                     	;# 
  2113     0798                     	;# 
  2114     0799                     	;# 
  2115     079A                     	;# 
  2116     079B                     	;# 
  2117     079C                     	;# 
  2118     079D                     	;# 
  2119     080C                     	;# 
  2120     080D                     	;# 
  2121     080E                     	;# 
  2122     080F                     	;# 
  2123     0810                     	;# 
  2124     0811                     	;# 
  2125     0813                     	;# 
  2126     0814                     	;# 
  2127     081A                     	;# 
  2128     081A                     	;# 
  2129     081B                     	;# 
  2130     081C                     	;# 
  2131     081C                     	;# 
  2132     081D                     	;# 
  2133     081E                     	;# 
  2134     081F                     	;# 
  2135     088C                     	;# 
  2136     088D                     	;# 
  2137     088E                     	;# 
  2138     088F                     	;# 
  2139     0890                     	;# 
  2140     0891                     	;# 
  2141     0892                     	;# 
  2142     0893                     	;# 
  2143     0895                     	;# 
  2144     0896                     	;# 
  2145     0897                     	;# 
  2146     0898                     	;# 
  2147     0899                     	;# 
  2148     089A                     	;# 
  2149     089B                     	;# 
  2150     090C                     	;# 
  2151     090E                     	;# 
  2152     090F                     	;# 
  2153     091F                     	;# 
  2154     098F                     	;# 
  2155     098F                     	;# 
  2156     0990                     	;# 
  2157     0991                     	;# 
  2158     0992                     	;# 
  2159     0993                     	;# 
  2160     0994                     	;# 
  2161     0995                     	;# 
  2162     0996                     	;# 
  2163     0997                     	;# 
  2164     0A19                     	;# 
  2165     0A19                     	;# 
  2166     0A1A                     	;# 
  2167     0A1A                     	;# 
  2168     0A1B                     	;# 
  2169     0A1B                     	;# 
  2170     0A1B                     	;# 
  2171     0A1C                     	;# 
  2172     0A1C                     	;# 
  2173     0A1D                     	;# 
  2174     0A1D                     	;# 
  2175     0A1E                     	;# 
  2176     0A1E                     	;# 
  2177     0A1F                     	;# 
  2178     0A1F                     	;# 
  2179     0A1F                     	;# 
  2180     1E0F                     	;# 
  2181     1E10                     	;# 
  2182     1E11                     	;# 
  2183     1E12                     	;# 
  2184     1E13                     	;# 
  2185     1E14                     	;# 
  2186     1E15                     	;# 
  2187     1E16                     	;# 
  2188     1E17                     	;# 
  2189     1E18                     	;# 
  2190     1E19                     	;# 
  2191     1E1A                     	;# 
  2192     1E1B                     	;# 
  2193     1E1C                     	;# 
  2194     1E1D                     	;# 
  2195     1E1E                     	;# 
  2196     1E1F                     	;# 
  2197     1E20                     	;# 
  2198     1E21                     	;# 
  2199     1E22                     	;# 
  2200     1E23                     	;# 
  2201     1E24                     	;# 
  2202     1E25                     	;# 
  2203     1E26                     	;# 
  2204     1E27                     	;# 
  2205     1E28                     	;# 
  2206     1E29                     	;# 
  2207     1E2A                     	;# 
  2208     1E2B                     	;# 
  2209     1E2C                     	;# 
  2210     1E2D                     	;# 
  2211     1E2E                     	;# 
  2212     1E2F                     	;# 
  2213     1E30                     	;# 
  2214     1E31                     	;# 
  2215     1E32                     	;# 
  2216     1E33                     	;# 
  2217     1E34                     	;# 
  2218     1E35                     	;# 
  2219     1E36                     	;# 
  2220     1E37                     	;# 
  2221     1E8F                     	;# 
  2222     1E90                     	;# 
  2223     1E91                     	;# 
  2224     1E92                     	;# 
  2225     1E93                     	;# 
  2226     1E94                     	;# 
  2227     1E95                     	;# 
  2228     1E96                     	;# 
  2229     1E97                     	;# 
  2230     1E9C                     	;# 
  2231     1E9D                     	;# 
  2232     1E9E                     	;# 
  2233     1EA1                     	;# 
  2234     1EA2                     	;# 
  2235     1EA3                     	;# 
  2236     1EA4                     	;# 
  2237     1EA5                     	;# 
  2238     1EA9                     	;# 
  2239     1EAA                     	;# 
  2240     1EAB                     	;# 
  2241     1EAC                     	;# 
  2242     1EB1                     	;# 
  2243     1EB2                     	;# 
  2244     1EB3                     	;# 
  2245     1EB8                     	;# 
  2246     1EB9                     	;# 
  2247     1EBA                     	;# 
  2248     1EBB                     	;# 
  2249     1EBC                     	;# 
  2250     1EBD                     	;# 
  2251     1EBE                     	;# 
  2252     1EC3                     	;# 
  2253     1EC5                     	;# 
  2254     1EC6                     	;# 
  2255     1EC7                     	;# 
  2256     1EC8                     	;# 
  2257     1EC9                     	;# 
  2258     1ECA                     	;# 
  2259     1ECB                     	;# 
  2260     1ECC                     	;# 
  2261     1ECD                     	;# 
  2262     1ECE                     	;# 
  2263     1F10                     	;# 
  2264     1F11                     	;# 
  2265     1F12                     	;# 
  2266     1F13                     	;# 
  2267     1F14                     	;# 
  2268     1F15                     	;# 
  2269     1F16                     	;# 
  2270     1F17                     	;# 
  2271     1F18                     	;# 
  2272     1F19                     	;# 
  2273     1F1A                     	;# 
  2274     1F1B                     	;# 
  2275     1F1C                     	;# 
  2276     1F1D                     	;# 
  2277     1F1E                     	;# 
  2278     1F1F                     	;# 
  2279     1F20                     	;# 
  2280     1F21                     	;# 
  2281     1F22                     	;# 
  2282     1F23                     	;# 
  2283     1F24                     	;# 
  2284     1F25                     	;# 
  2285     1F26                     	;# 
  2286     1F27                     	;# 
  2287     1F38                     	;# 
  2288     1F39                     	;# 
  2289     1F3A                     	;# 
  2290     1F3B                     	;# 
  2291     1F3C                     	;# 
  2292     1F3D                     	;# 
  2293     1F3E                     	;# 
  2294     1F3F                     	;# 
  2295     1F43                     	;# 
  2296     1F44                     	;# 
  2297     1F45                     	;# 
  2298     1F46                     	;# 
  2299     1F47                     	;# 
  2300     1F48                     	;# 
  2301     1F49                     	;# 
  2302     1F4A                     	;# 
  2303     1F4E                     	;# 
  2304     1F4F                     	;# 
  2305     1F50                     	;# 
  2306     1F51                     	;# 
  2307     1F52                     	;# 
  2308     1F53                     	;# 
  2309     1F54                     	;# 
  2310     1F55                     	;# 
  2311     1F65                     	;# 
  2312     1F66                     	;# 
  2313     1F67                     	;# 
  2314     1F68                     	;# 
  2315     1F69                     	;# 
  2316     1F6A                     	;# 
  2317     1F6B                     	;# 
  2318     1FE4                     	;# 
  2319     1FE5                     	;# 
  2320     1FE6                     	;# 
  2321     1FE7                     	;# 
  2322     1FE8                     	;# 
  2323     1FE8                     	;# 
  2324     1FE9                     	;# 
  2325     1FEA                     	;# 
  2326     1FEB                     	;# 
  2327     1FED                     	;# 
  2328     1FEE                     	;# 
  2329     1FEF                     	;# 
  2330     0000                     	;# 
  2331     0001                     	;# 
  2332     0002                     	;# 
  2333     0003                     	;# 
  2334     0004                     	;# 
  2335     0005                     	;# 
  2336     0006                     	;# 
  2337     0007                     	;# 
  2338     0008                     	;# 
  2339     0009                     	;# 
  2340     000A                     	;# 
  2341     000B                     	;# 
  2342     000C                     	;# 
  2343     000D                     	;# 
  2344     000E                     	;# 
  2345     0010                     	;# 
  2346     0012                     	;# 
  2347     0013                     	;# 
  2348     0014                     	;# 
  2349     0016                     	;# 
  2350     0018                     	;# 
  2351     0019                     	;# 
  2352     001A                     	;# 
  2353     001C                     	;# 
  2354     008C                     	;# 
  2355     008C                     	;# 
  2356     008D                     	;# 
  2357     008E                     	;# 
  2358     008E                     	;# 
  2359     008F                     	;# 
  2360     0090                     	;# 
  2361     0090                     	;# 
  2362     0091                     	;# 
  2363     0092                     	;# 
  2364     0092                     	;# 
  2365     0093                     	;# 
  2366     0094                     	;# 
  2367     0094                     	;# 
  2368     0095                     	;# 
  2369     0096                     	;# 
  2370     0096                     	;# 
  2371     0097                     	;# 
  2372     0098                     	;# 
  2373     0099                     	;# 
  2374     009A                     	;# 
  2375     009B                     	;# 
  2376     009B                     	;# 
  2377     009C                     	;# 
  2378     009D                     	;# 
  2379     009D                     	;# 
  2380     009E                     	;# 
  2381     009F                     	;# 
  2382     010C                     	;# 
  2383     010C                     	;# 
  2384     010D                     	;# 
  2385     010E                     	;# 
  2386     010F                     	;# 
  2387     010F                     	;# 
  2388     0110                     	;# 
  2389     0111                     	;# 
  2390     0112                     	;# 
  2391     0113                     	;# 
  2392     0114                     	;# 
  2393     0115                     	;# 
  2394     0116                     	;# 
  2395     0117                     	;# 
  2396     0118                     	;# 
  2397     0119                     	;# 
  2398     0119                     	;# 
  2399     0119                     	;# 
  2400     011A                     	;# 
  2401     011A                     	;# 
  2402     011A                     	;# 
  2403     011B                     	;# 
  2404     011B                     	;# 
  2405     011B                     	;# 
  2406     011B                     	;# 
  2407     011B                     	;# 
  2408     011C                     	;# 
  2409     011C                     	;# 
  2410     011C                     	;# 
  2411     011D                     	;# 
  2412     011D                     	;# 
  2413     011D                     	;# 
  2414     011E                     	;# 
  2415     011E                     	;# 
  2416     011E                     	;# 
  2417     011F                     	;# 
  2418     011F                     	;# 
  2419     011F                     	;# 
  2420     011F                     	;# 
  2421     011F                     	;# 
  2422     018C                     	;# 
  2423     018D                     	;# 
  2424     018E                     	;# 
  2425     018F                     	;# 
  2426     0190                     	;# 
  2427     0191                     	;# 
  2428     0192                     	;# 
  2429     0196                     	;# 
  2430     0197                     	;# 
  2431     0198                     	;# 
  2432     0199                     	;# 
  2433     019A                     	;# 
  2434     019B                     	;# 
  2435     019C                     	;# 
  2436     020C                     	;# 
  2437     020D                     	;# 
  2438     020E                     	;# 
  2439     020E                     	;# 
  2440     020F                     	;# 
  2441     020F                     	;# 
  2442     0210                     	;# 
  2443     0210                     	;# 
  2444     0211                     	;# 
  2445     0211                     	;# 
  2446     0212                     	;# 
  2447     0213                     	;# 
  2448     0214                     	;# 
  2449     0214                     	;# 
  2450     0215                     	;# 
  2451     0215                     	;# 
  2452     0216                     	;# 
  2453     0216                     	;# 
  2454     0217                     	;# 
  2455     0217                     	;# 
  2456     0218                     	;# 
  2457     0219                     	;# 
  2458     021A                     	;# 
  2459     021A                     	;# 
  2460     021B                     	;# 
  2461     021B                     	;# 
  2462     021C                     	;# 
  2463     021C                     	;# 
  2464     021D                     	;# 
  2465     021D                     	;# 
  2466     021E                     	;# 
  2467     021F                     	;# 
  2468     028C                     	;# 
  2469     028C                     	;# 
  2470     028D                     	;# 
  2471     028D                     	;# 
  2472     028E                     	;# 
  2473     028F                     	;# 
  2474     0290                     	;# 
  2475     0291                     	;# 
  2476     0292                     	;# 
  2477     0292                     	;# 
  2478     0293                     	;# 
  2479     0293                     	;# 
  2480     0294                     	;# 
  2481     0295                     	;# 
  2482     0296                     	;# 
  2483     0297                     	;# 
  2484     0298                     	;# 
  2485     0298                     	;# 
  2486     0299                     	;# 
  2487     0299                     	;# 
  2488     029A                     	;# 
  2489     029B                     	;# 
  2490     029C                     	;# 
  2491     029D                     	;# 
  2492     029F                     	;# 
  2493     030C                     	;# 
  2494     030C                     	;# 
  2495     030D                     	;# 
  2496     030E                     	;# 
  2497     030F                     	;# 
  2498     0310                     	;# 
  2499     0310                     	;# 
  2500     0311                     	;# 
  2501     0312                     	;# 
  2502     0313                     	;# 
  2503     0314                     	;# 
  2504     0314                     	;# 
  2505     0315                     	;# 
  2506     0316                     	;# 
  2507     0317                     	;# 
  2508     0318                     	;# 
  2509     0318                     	;# 
  2510     0319                     	;# 
  2511     031A                     	;# 
  2512     031B                     	;# 
  2513     031C                     	;# 
  2514     031C                     	;# 
  2515     031D                     	;# 
  2516     031E                     	;# 
  2517     031F                     	;# 
  2518     038C                     	;# 
  2519     038C                     	;# 
  2520     038D                     	;# 
  2521     038E                     	;# 
  2522     0390                     	;# 
  2523     0390                     	;# 
  2524     0391                     	;# 
  2525     0392                     	;# 
  2526     048C                     	;# 
  2527     048C                     	;# 
  2528     048D                     	;# 
  2529     048E                     	;# 
  2530     048F                     	;# 
  2531     048F                     	;# 
  2532     0490                     	;# 
  2533     0491                     	;# 
  2534     0492                     	;# 
  2535     0492                     	;# 
  2536     0493                     	;# 
  2537     0494                     	;# 
  2538     0495                     	;# 
  2539     0495                     	;# 
  2540     0496                     	;# 
  2541     0497                     	;# 
  2542     0498                     	;# 
  2543     0499                     	;# 
  2544     049A                     	;# 
  2545     049B                     	;# 
  2546     049C                     	;# 
  2547     049D                     	;# 
  2548     050C                     	;# 
  2549     050C                     	;# 
  2550     050D                     	;# 
  2551     050E                     	;# 
  2552     050F                     	;# 
  2553     050F                     	;# 
  2554     0510                     	;# 
  2555     0511                     	;# 
  2556     0512                     	;# 
  2557     0512                     	;# 
  2558     0513                     	;# 
  2559     0514                     	;# 
  2560     0515                     	;# 
  2561     0515                     	;# 
  2562     0516                     	;# 
  2563     0517                     	;# 
  2564     0518                     	;# 
  2565     0519                     	;# 
  2566     051A                     	;# 
  2567     051B                     	;# 
  2568     051C                     	;# 
  2569     051D                     	;# 
  2570     058C                     	;# 
  2571     058C                     	;# 
  2572     058D                     	;# 
  2573     058E                     	;# 
  2574     058F                     	;# 
  2575     058F                     	;# 
  2576     0590                     	;# 
  2577     0591                     	;# 
  2578     0592                     	;# 
  2579     0593                     	;# 
  2580     059C                     	;# 
  2581     059C                     	;# 
  2582     059D                     	;# 
  2583     059D                     	;# 
  2584     059E                     	;# 
  2585     059F                     	;# 
  2586     060C                     	;# 
  2587     060C                     	;# 
  2588     060D                     	;# 
  2589     060D                     	;# 
  2590     060E                     	;# 
  2591     060F                     	;# 
  2592     0610                     	;# 
  2593     0611                     	;# 
  2594     0612                     	;# 
  2595     0613                     	;# 
  2596     0614                     	;# 
  2597     0616                     	;# 
  2598     0616                     	;# 
  2599     0617                     	;# 
  2600     0617                     	;# 
  2601     0618                     	;# 
  2602     0619                     	;# 
  2603     061A                     	;# 
  2604     061B                     	;# 
  2605     061C                     	;# 
  2606     061D                     	;# 
  2607     061E                     	;# 
  2608     068C                     	;# 
  2609     068D                     	;# 
  2610     068E                     	;# 
  2611     068F                     	;# 
  2612     0690                     	;# 
  2613     0691                     	;# 
  2614     0692                     	;# 
  2615     0693                     	;# 
  2616     0694                     	;# 
  2617     070C                     	;# 
  2618     070D                     	;# 
  2619     070E                     	;# 
  2620     070F                     	;# 
  2621     0710                     	;# 
  2622     0711                     	;# 
  2623     0712                     	;# 
  2624     0713                     	;# 
  2625     0714                     	;# 
  2626     0716                     	;# 
  2627     0717                     	;# 
  2628     0718                     	;# 
  2629     0719                     	;# 
  2630     071A                     	;# 
  2631     071B                     	;# 
  2632     071C                     	;# 
  2633     071D                     	;# 
  2634     071E                     	;# 
  2635     0796                     	;# 
  2636     0797                     	;# 
  2637     0798                     	;# 
  2638     0799                     	;# 
  2639     079A                     	;# 
  2640     079B                     	;# 
  2641     079C                     	;# 
  2642     079D                     	;# 
  2643     080C                     	;# 
  2644     080D                     	;# 
  2645     080E                     	;# 
  2646     080F                     	;# 
  2647     0810                     	;# 
  2648     0811                     	;# 
  2649     0813                     	;# 
  2650     0814                     	;# 
  2651     081A                     	;# 
  2652     081A                     	;# 
  2653     081B                     	;# 
  2654     081C                     	;# 
  2655     081C                     	;# 
  2656     081D                     	;# 
  2657     081E                     	;# 
  2658     081F                     	;# 
  2659     088C                     	;# 
  2660     088D                     	;# 
  2661     088E                     	;# 
  2662     088F                     	;# 
  2663     0890                     	;# 
  2664     0891                     	;# 
  2665     0892                     	;# 
  2666     0893                     	;# 
  2667     0895                     	;# 
  2668     0896                     	;# 
  2669     0897                     	;# 
  2670     0898                     	;# 
  2671     0899                     	;# 
  2672     089A                     	;# 
  2673     089B                     	;# 
  2674     090C                     	;# 
  2675     090E                     	;# 
  2676     090F                     	;# 
  2677     091F                     	;# 
  2678     098F                     	;# 
  2679     098F                     	;# 
  2680     0990                     	;# 
  2681     0991                     	;# 
  2682     0992                     	;# 
  2683     0993                     	;# 
  2684     0994                     	;# 
  2685     0995                     	;# 
  2686     0996                     	;# 
  2687     0997                     	;# 
  2688     0A19                     	;# 
  2689     0A19                     	;# 
  2690     0A1A                     	;# 
  2691     0A1A                     	;# 
  2692     0A1B                     	;# 
  2693     0A1B                     	;# 
  2694     0A1B                     	;# 
  2695     0A1C                     	;# 
  2696     0A1C                     	;# 
  2697     0A1D                     	;# 
  2698     0A1D                     	;# 
  2699     0A1E                     	;# 
  2700     0A1E                     	;# 
  2701     0A1F                     	;# 
  2702     0A1F                     	;# 
  2703     0A1F                     	;# 
  2704     1E0F                     	;# 
  2705     1E10                     	;# 
  2706     1E11                     	;# 
  2707     1E12                     	;# 
  2708     1E13                     	;# 
  2709     1E14                     	;# 
  2710     1E15                     	;# 
  2711     1E16                     	;# 
  2712     1E17                     	;# 
  2713     1E18                     	;# 
  2714     1E19                     	;# 
  2715     1E1A                     	;# 
  2716     1E1B                     	;# 
  2717     1E1C                     	;# 
  2718     1E1D                     	;# 
  2719     1E1E                     	;# 
  2720     1E1F                     	;# 
  2721     1E20                     	;# 
  2722     1E21                     	;# 
  2723     1E22                     	;# 
  2724     1E23                     	;# 
  2725     1E24                     	;# 
  2726     1E25                     	;# 
  2727     1E26                     	;# 
  2728     1E27                     	;# 
  2729     1E28                     	;# 
  2730     1E29                     	;# 
  2731     1E2A                     	;# 
  2732     1E2B                     	;# 
  2733     1E2C                     	;# 
  2734     1E2D                     	;# 
  2735     1E2E                     	;# 
  2736     1E2F                     	;# 
  2737     1E30                     	;# 
  2738     1E31                     	;# 
  2739     1E32                     	;# 
  2740     1E33                     	;# 
  2741     1E34                     	;# 
  2742     1E35                     	;# 
  2743     1E36                     	;# 
  2744     1E37                     	;# 
  2745     1E8F                     	;# 
  2746     1E90                     	;# 
  2747     1E91                     	;# 
  2748     1E92                     	;# 
  2749     1E93                     	;# 
  2750     1E94                     	;# 
  2751     1E95                     	;# 
  2752     1E96                     	;# 
  2753     1E97                     	;# 
  2754     1E9C                     	;# 
  2755     1E9D                     	;# 
  2756     1E9E                     	;# 
  2757     1EA1                     	;# 
  2758     1EA2                     	;# 
  2759     1EA3                     	;# 
  2760     1EA4                     	;# 
  2761     1EA5                     	;# 
  2762     1EA9                     	;# 
  2763     1EAA                     	;# 
  2764     1EAB                     	;# 
  2765     1EAC                     	;# 
  2766     1EB1                     	;# 
  2767     1EB2                     	;# 
  2768     1EB3                     	;# 
  2769     1EB8                     	;# 
  2770     1EB9                     	;# 
  2771     1EBA                     	;# 
  2772     1EBB                     	;# 
  2773     1EBC                     	;# 
  2774     1EBD                     	;# 
  2775     1EBE                     	;# 
  2776     1EC3                     	;# 
  2777     1EC5                     	;# 
  2778     1EC6                     	;# 
  2779     1EC7                     	;# 
  2780     1EC8                     	;# 
  2781     1EC9                     	;# 
  2782     1ECA                     	;# 
  2783     1ECB                     	;# 
  2784     1ECC                     	;# 
  2785     1ECD                     	;# 
  2786     1ECE                     	;# 
  2787     1F10                     	;# 
  2788     1F11                     	;# 
  2789     1F12                     	;# 
  2790     1F13                     	;# 
  2791     1F14                     	;# 
  2792     1F15                     	;# 
  2793     1F16                     	;# 
  2794     1F17                     	;# 
  2795     1F18                     	;# 
  2796     1F19                     	;# 
  2797     1F1A                     	;# 
  2798     1F1B                     	;# 
  2799     1F1C                     	;# 
  2800     1F1D                     	;# 
  2801     1F1E                     	;# 
  2802     1F1F                     	;# 
  2803     1F20                     	;# 
  2804     1F21                     	;# 
  2805     1F22                     	;# 
  2806     1F23                     	;# 
  2807     1F24                     	;# 
  2808     1F25                     	;# 
  2809     1F26                     	;# 
  2810     1F27                     	;# 
  2811     1F38                     	;# 
  2812     1F39                     	;# 
  2813     1F3A                     	;# 
  2814     1F3B                     	;# 
  2815     1F3C                     	;# 
  2816     1F3D                     	;# 
  2817     1F3E                     	;# 
  2818     1F3F                     	;# 
  2819     1F43                     	;# 
  2820     1F44                     	;# 
  2821     1F45                     	;# 
  2822     1F46                     	;# 
  2823     1F47                     	;# 
  2824     1F48                     	;# 
  2825     1F49                     	;# 
  2826     1F4A                     	;# 
  2827     1F4E                     	;# 
  2828     1F4F                     	;# 
  2829     1F50                     	;# 
  2830     1F51                     	;# 
  2831     1F52                     	;# 
  2832     1F53                     	;# 
  2833     1F54                     	;# 
  2834     1F55                     	;# 
  2835     1F65                     	;# 
  2836     1F66                     	;# 
  2837     1F67                     	;# 
  2838     1F68                     	;# 
  2839     1F69                     	;# 
  2840     1F6A                     	;# 
  2841     1F6B                     	;# 
  2842     1FE4                     	;# 
  2843     1FE5                     	;# 
  2844     1FE6                     	;# 
  2845     1FE7                     	;# 
  2846     1FE8                     	;# 
  2847     1FE8                     	;# 
  2848     1FE9                     	;# 
  2849     1FEA                     	;# 
  2850     1FEB                     	;# 
  2851     1FED                     	;# 
  2852     1FEE                     	;# 
  2853     1FEF                     	;# 
  2854     0000                     	;# 
  2855     0001                     	;# 
  2856     0002                     	;# 
  2857     0003                     	;# 
  2858     0004                     	;# 
  2859     0005                     	;# 
  2860     0006                     	;# 
  2861     0007                     	;# 
  2862     0008                     	;# 
  2863     0009                     	;# 
  2864     000A                     	;# 
  2865     000B                     	;# 
  2866     000C                     	;# 
  2867     000D                     	;# 
  2868     000E                     	;# 
  2869     0010                     	;# 
  2870     0012                     	;# 
  2871     0013                     	;# 
  2872     0014                     	;# 
  2873     0016                     	;# 
  2874     0018                     	;# 
  2875     0019                     	;# 
  2876     001A                     	;# 
  2877     001C                     	;# 
  2878     008C                     	;# 
  2879     008C                     	;# 
  2880     008D                     	;# 
  2881     008E                     	;# 
  2882     008E                     	;# 
  2883     008F                     	;# 
  2884     0090                     	;# 
  2885     0090                     	;# 
  2886     0091                     	;# 
  2887     0092                     	;# 
  2888     0092                     	;# 
  2889     0093                     	;# 
  2890     0094                     	;# 
  2891     0094                     	;# 
  2892     0095                     	;# 
  2893     0096                     	;# 
  2894     0096                     	;# 
  2895     0097                     	;# 
  2896     0098                     	;# 
  2897     0099                     	;# 
  2898     009A                     	;# 
  2899     009B                     	;# 
  2900     009B                     	;# 
  2901     009C                     	;# 
  2902     009D                     	;# 
  2903     009D                     	;# 
  2904     009E                     	;# 
  2905     009F                     	;# 
  2906     010C                     	;# 
  2907     010C                     	;# 
  2908     010D                     	;# 
  2909     010E                     	;# 
  2910     010F                     	;# 
  2911     010F                     	;# 
  2912     0110                     	;# 
  2913     0111                     	;# 
  2914     0112                     	;# 
  2915     0113                     	;# 
  2916     0114                     	;# 
  2917     0115                     	;# 
  2918     0116                     	;# 
  2919     0117                     	;# 
  2920     0118                     	;# 
  2921     0119                     	;# 
  2922     0119                     	;# 
  2923     0119                     	;# 
  2924     011A                     	;# 
  2925     011A                     	;# 
  2926     011A                     	;# 
  2927     011B                     	;# 
  2928     011B                     	;# 
  2929     011B                     	;# 
  2930     011B                     	;# 
  2931     011B                     	;# 
  2932     011C                     	;# 
  2933     011C                     	;# 
  2934     011C                     	;# 
  2935     011D                     	;# 
  2936     011D                     	;# 
  2937     011D                     	;# 
  2938     011E                     	;# 
  2939     011E                     	;# 
  2940     011E                     	;# 
  2941     011F                     	;# 
  2942     011F                     	;# 
  2943     011F                     	;# 
  2944     011F                     	;# 
  2945     011F                     	;# 
  2946     018C                     	;# 
  2947     018D                     	;# 
  2948     018E                     	;# 
  2949     018F                     	;# 
  2950     0190                     	;# 
  2951     0191                     	;# 
  2952     0192                     	;# 
  2953     0196                     	;# 
  2954     0197                     	;# 
  2955     0198                     	;# 
  2956     0199                     	;# 
  2957     019A                     	;# 
  2958     019B                     	;# 
  2959     019C                     	;# 
  2960     020C                     	;# 
  2961     020D                     	;# 
  2962     020E                     	;# 
  2963     020E                     	;# 
  2964     020F                     	;# 
  2965     020F                     	;# 
  2966     0210                     	;# 
  2967     0210                     	;# 
  2968     0211                     	;# 
  2969     0211                     	;# 
  2970     0212                     	;# 
  2971     0213                     	;# 
  2972     0214                     	;# 
  2973     0214                     	;# 
  2974     0215                     	;# 
  2975     0215                     	;# 
  2976     0216                     	;# 
  2977     0216                     	;# 
  2978     0217                     	;# 
  2979     0217                     	;# 
  2980     0218                     	;# 
  2981     0219                     	;# 
  2982     021A                     	;# 
  2983     021A                     	;# 
  2984     021B                     	;# 
  2985     021B                     	;# 
  2986     021C                     	;# 
  2987     021C                     	;# 
  2988     021D                     	;# 
  2989     021D                     	;# 
  2990     021E                     	;# 
  2991     021F                     	;# 
  2992     028C                     	;# 
  2993     028C                     	;# 
  2994     028D                     	;# 
  2995     028D                     	;# 
  2996     028E                     	;# 
  2997     028F                     	;# 
  2998     0290                     	;# 
  2999     0291                     	;# 
  3000     0292                     	;# 
  3001     0292                     	;# 
  3002     0293                     	;# 
  3003     0293                     	;# 
  3004     0294                     	;# 
  3005     0295                     	;# 
  3006     0296                     	;# 
  3007     0297                     	;# 
  3008     0298                     	;# 
  3009     0298                     	;# 
  3010     0299                     	;# 
  3011     0299                     	;# 
  3012     029A                     	;# 
  3013     029B                     	;# 
  3014     029C                     	;# 
  3015     029D                     	;# 
  3016     029F                     	;# 
  3017     030C                     	;# 
  3018     030C                     	;# 
  3019     030D                     	;# 
  3020     030E                     	;# 
  3021     030F                     	;# 
  3022     0310                     	;# 
  3023     0310                     	;# 
  3024     0311                     	;# 
  3025     0312                     	;# 
  3026     0313                     	;# 
  3027     0314                     	;# 
  3028     0314                     	;# 
  3029     0315                     	;# 
  3030     0316                     	;# 
  3031     0317                     	;# 
  3032     0318                     	;# 
  3033     0318                     	;# 
  3034     0319                     	;# 
  3035     031A                     	;# 
  3036     031B                     	;# 
  3037     031C                     	;# 
  3038     031C                     	;# 
  3039     031D                     	;# 
  3040     031E                     	;# 
  3041     031F                     	;# 
  3042     038C                     	;# 
  3043     038C                     	;# 
  3044     038D                     	;# 
  3045     038E                     	;# 
  3046     0390                     	;# 
  3047     0390                     	;# 
  3048     0391                     	;# 
  3049     0392                     	;# 
  3050     048C                     	;# 
  3051     048C                     	;# 
  3052     048D                     	;# 
  3053     048E                     	;# 
  3054     048F                     	;# 
  3055     048F                     	;# 
  3056     0490                     	;# 
  3057     0491                     	;# 
  3058     0492                     	;# 
  3059     0492                     	;# 
  3060     0493                     	;# 
  3061     0494                     	;# 
  3062     0495                     	;# 
  3063     0495                     	;# 
  3064     0496                     	;# 
  3065     0497                     	;# 
  3066     0498                     	;# 
  3067     0499                     	;# 
  3068     049A                     	;# 
  3069     049B                     	;# 
  3070     049C                     	;# 
  3071     049D                     	;# 
  3072     050C                     	;# 
  3073     050C                     	;# 
  3074     050D                     	;# 
  3075     050E                     	;# 
  3076     050F                     	;# 
  3077     050F                     	;# 
  3078     0510                     	;# 
  3079     0511                     	;# 
  3080     0512                     	;# 
  3081     0512                     	;# 
  3082     0513                     	;# 
  3083     0514                     	;# 
  3084     0515                     	;# 
  3085     0515                     	;# 
  3086     0516                     	;# 
  3087     0517                     	;# 
  3088     0518                     	;# 
  3089     0519                     	;# 
  3090     051A                     	;# 
  3091     051B                     	;# 
  3092     051C                     	;# 
  3093     051D                     	;# 
  3094     058C                     	;# 
  3095     058C                     	;# 
  3096     058D                     	;# 
  3097     058E                     	;# 
  3098     058F                     	;# 
  3099     058F                     	;# 
  3100     0590                     	;# 
  3101     0591                     	;# 
  3102     0592                     	;# 
  3103     0593                     	;# 
  3104     059C                     	;# 
  3105     059C                     	;# 
  3106     059D                     	;# 
  3107     059D                     	;# 
  3108     059E                     	;# 
  3109     059F                     	;# 
  3110     060C                     	;# 
  3111     060C                     	;# 
  3112     060D                     	;# 
  3113     060D                     	;# 
  3114     060E                     	;# 
  3115     060F                     	;# 
  3116     0610                     	;# 
  3117     0611                     	;# 
  3118     0612                     	;# 
  3119     0613                     	;# 
  3120     0614                     	;# 
  3121     0616                     	;# 
  3122     0616                     	;# 
  3123     0617                     	;# 
  3124     0617                     	;# 
  3125     0618                     	;# 
  3126     0619                     	;# 
  3127     061A                     	;# 
  3128     061B                     	;# 
  3129     061C                     	;# 
  3130     061D                     	;# 
  3131     061E                     	;# 
  3132     068C                     	;# 
  3133     068D                     	;# 
  3134     068E                     	;# 
  3135     068F                     	;# 
  3136     0690                     	;# 
  3137     0691                     	;# 
  3138     0692                     	;# 
  3139     0693                     	;# 
  3140     0694                     	;# 
  3141     070C                     	;# 
  3142     070D                     	;# 
  3143     070E                     	;# 
  3144     070F                     	;# 
  3145     0710                     	;# 
  3146     0711                     	;# 
  3147     0712                     	;# 
  3148     0713                     	;# 
  3149     0714                     	;# 
  3150     0716                     	;# 
  3151     0717                     	;# 
  3152     0718                     	;# 
  3153     0719                     	;# 
  3154     071A                     	;# 
  3155     071B                     	;# 
  3156     071C                     	;# 
  3157     071D                     	;# 
  3158     071E                     	;# 
  3159     0796                     	;# 
  3160     0797                     	;# 
  3161     0798                     	;# 
  3162     0799                     	;# 
  3163     079A                     	;# 
  3164     079B                     	;# 
  3165     079C                     	;# 
  3166     079D                     	;# 
  3167     080C                     	;# 
  3168     080D                     	;# 
  3169     080E                     	;# 
  3170     080F                     	;# 
  3171     0810                     	;# 
  3172     0811                     	;# 
  3173     0813                     	;# 
  3174     0814                     	;# 
  3175     081A                     	;# 
  3176     081A                     	;# 
  3177     081B                     	;# 
  3178     081C                     	;# 
  3179     081C                     	;# 
  3180     081D                     	;# 
  3181     081E                     	;# 
  3182     081F                     	;# 
  3183     088C                     	;# 
  3184     088D                     	;# 
  3185     088E                     	;# 
  3186     088F                     	;# 
  3187     0890                     	;# 
  3188     0891                     	;# 
  3189     0892                     	;# 
  3190     0893                     	;# 
  3191     0895                     	;# 
  3192     0896                     	;# 
  3193     0897                     	;# 
  3194     0898                     	;# 
  3195     0899                     	;# 
  3196     089A                     	;# 
  3197     089B                     	;# 
  3198     090C                     	;# 
  3199     090E                     	;# 
  3200     090F                     	;# 
  3201     091F                     	;# 
  3202     098F                     	;# 
  3203     098F                     	;# 
  3204     0990                     	;# 
  3205     0991                     	;# 
  3206     0992                     	;# 
  3207     0993                     	;# 
  3208     0994                     	;# 
  3209     0995                     	;# 
  3210     0996                     	;# 
  3211     0997                     	;# 
  3212     0A19                     	;# 
  3213     0A19                     	;# 
  3214     0A1A                     	;# 
  3215     0A1A                     	;# 
  3216     0A1B                     	;# 
  3217     0A1B                     	;# 
  3218     0A1B                     	;# 
  3219     0A1C                     	;# 
  3220     0A1C                     	;# 
  3221     0A1D                     	;# 
  3222     0A1D                     	;# 
  3223     0A1E                     	;# 
  3224     0A1E                     	;# 
  3225     0A1F                     	;# 
  3226     0A1F                     	;# 
  3227     0A1F                     	;# 
  3228     1E0F                     	;# 
  3229     1E10                     	;# 
  3230     1E11                     	;# 
  3231     1E12                     	;# 
  3232     1E13                     	;# 
  3233     1E14                     	;# 
  3234     1E15                     	;# 
  3235     1E16                     	;# 
  3236     1E17                     	;# 
  3237     1E18                     	;# 
  3238     1E19                     	;# 
  3239     1E1A                     	;# 
  3240     1E1B                     	;# 
  3241     1E1C                     	;# 
  3242     1E1D                     	;# 
  3243     1E1E                     	;# 
  3244     1E1F                     	;# 
  3245     1E20                     	;# 
  3246     1E21                     	;# 
  3247     1E22                     	;# 
  3248     1E23                     	;# 
  3249     1E24                     	;# 
  3250     1E25                     	;# 
  3251     1E26                     	;# 
  3252     1E27                     	;# 
  3253     1E28                     	;# 
  3254     1E29                     	;# 
  3255     1E2A                     	;# 
  3256     1E2B                     	;# 
  3257     1E2C                     	;# 
  3258     1E2D                     	;# 
  3259     1E2E                     	;# 
  3260     1E2F                     	;# 
  3261     1E30                     	;# 
  3262     1E31                     	;# 
  3263     1E32                     	;# 
  3264     1E33                     	;# 
  3265     1E34                     	;# 
  3266     1E35                     	;# 
  3267     1E36                     	;# 
  3268     1E37                     	;# 
  3269     1E8F                     	;# 
  3270     1E90                     	;# 
  3271     1E91                     	;# 
  3272     1E92                     	;# 
  3273     1E93                     	;# 
  3274     1E94                     	;# 
  3275     1E95                     	;# 
  3276     1E96                     	;# 
  3277     1E97                     	;# 
  3278     1E9C                     	;# 
  3279     1E9D                     	;# 
  3280     1E9E                     	;# 
  3281     1EA1                     	;# 
  3282     1EA2                     	;# 
  3283     1EA3                     	;# 
  3284     1EA4                     	;# 
  3285     1EA5                     	;# 
  3286     1EA9                     	;# 
  3287     1EAA                     	;# 
  3288     1EAB                     	;# 
  3289     1EAC                     	;# 
  3290     1EB1                     	;# 
  3291     1EB2                     	;# 
  3292     1EB3                     	;# 
  3293     1EB8                     	;# 
  3294     1EB9                     	;# 
  3295     1EBA                     	;# 
  3296     1EBB                     	;# 
  3297     1EBC                     	;# 
  3298     1EBD                     	;# 
  3299     1EBE                     	;# 
  3300     1EC3                     	;# 
  3301     1EC5                     	;# 
  3302     1EC6                     	;# 
  3303     1EC7                     	;# 
  3304     1EC8                     	;# 
  3305     1EC9                     	;# 
  3306     1ECA                     	;# 
  3307     1ECB                     	;# 
  3308     1ECC                     	;# 
  3309     1ECD                     	;# 
  3310     1ECE                     	;# 
  3311     1F10                     	;# 
  3312     1F11                     	;# 
  3313     1F12                     	;# 
  3314     1F13                     	;# 
  3315     1F14                     	;# 
  3316     1F15                     	;# 
  3317     1F16                     	;# 
  3318     1F17                     	;# 
  3319     1F18                     	;# 
  3320     1F19                     	;# 
  3321     1F1A                     	;# 
  3322     1F1B                     	;# 
  3323     1F1C                     	;# 
  3324     1F1D                     	;# 
  3325     1F1E                     	;# 
  3326     1F1F                     	;# 
  3327     1F20                     	;# 
  3328     1F21                     	;# 
  3329     1F22                     	;# 
  3330     1F23                     	;# 
  3331     1F24                     	;# 
  3332     1F25                     	;# 
  3333     1F26                     	;# 
  3334     1F27                     	;# 
  3335     1F38                     	;# 
  3336     1F39                     	;# 
  3337     1F3A                     	;# 
  3338     1F3B                     	;# 
  3339     1F3C                     	;# 
  3340     1F3D                     	;# 
  3341     1F3E                     	;# 
  3342     1F3F                     	;# 
  3343     1F43                     	;# 
  3344     1F44                     	;# 
  3345     1F45                     	;# 
  3346     1F46                     	;# 
  3347     1F47                     	;# 
  3348     1F48                     	;# 
  3349     1F49                     	;# 
  3350     1F4A                     	;# 
  3351     1F4E                     	;# 
  3352     1F4F                     	;# 
  3353     1F50                     	;# 
  3354     1F51                     	;# 
  3355     1F52                     	;# 
  3356     1F53                     	;# 
  3357     1F54                     	;# 
  3358     1F55                     	;# 
  3359     1F65                     	;# 
  3360     1F66                     	;# 
  3361     1F67                     	;# 
  3362     1F68                     	;# 
  3363     1F69                     	;# 
  3364     1F6A                     	;# 
  3365     1F6B                     	;# 
  3366     1FE4                     	;# 
  3367     1FE5                     	;# 
  3368     1FE6                     	;# 
  3369     1FE7                     	;# 
  3370     1FE8                     	;# 
  3371     1FE8                     	;# 
  3372     1FE9                     	;# 
  3373     1FEA                     	;# 
  3374     1FEB                     	;# 
  3375     1FED                     	;# 
  3376     1FEE                     	;# 
  3377     1FEF                     	;# 
  3378     0000                     	;# 
  3379     0001                     	;# 
  3380     0002                     	;# 
  3381     0003                     	;# 
  3382     0004                     	;# 
  3383     0005                     	;# 
  3384     0006                     	;# 
  3385     0007                     	;# 
  3386     0008                     	;# 
  3387     0009                     	;# 
  3388     000A                     	;# 
  3389     000B                     	;# 
  3390     000C                     	;# 
  3391     000D                     	;# 
  3392     000E                     	;# 
  3393     0010                     	;# 
  3394     0012                     	;# 
  3395     0013                     	;# 
  3396     0014                     	;# 
  3397     0016                     	;# 
  3398     0018                     	;# 
  3399     0019                     	;# 
  3400     001A                     	;# 
  3401     001C                     	;# 
  3402     008C                     	;# 
  3403     008C                     	;# 
  3404     008D                     	;# 
  3405     008E                     	;# 
  3406     008E                     	;# 
  3407     008F                     	;# 
  3408     0090                     	;# 
  3409     0090                     	;# 
  3410     0091                     	;# 
  3411     0092                     	;# 
  3412     0092                     	;# 
  3413     0093                     	;# 
  3414     0094                     	;# 
  3415     0094                     	;# 
  3416     0095                     	;# 
  3417     0096                     	;# 
  3418     0096                     	;# 
  3419     0097                     	;# 
  3420     0098                     	;# 
  3421     0099                     	;# 
  3422     009A                     	;# 
  3423     009B                     	;# 
  3424     009B                     	;# 
  3425     009C                     	;# 
  3426     009D                     	;# 
  3427     009D                     	;# 
  3428     009E                     	;# 
  3429     009F                     	;# 
  3430     010C                     	;# 
  3431     010C                     	;# 
  3432     010D                     	;# 
  3433     010E                     	;# 
  3434     010F                     	;# 
  3435     010F                     	;# 
  3436     0110                     	;# 
  3437     0111                     	;# 
  3438     0112                     	;# 
  3439     0113                     	;# 
  3440     0114                     	;# 
  3441     0115                     	;# 
  3442     0116                     	;# 
  3443     0117                     	;# 
  3444     0118                     	;# 
  3445     0119                     	;# 
  3446     0119                     	;# 
  3447     0119                     	;# 
  3448     011A                     	;# 
  3449     011A                     	;# 
  3450     011A                     	;# 
  3451     011B                     	;# 
  3452     011B                     	;# 
  3453     011B                     	;# 
  3454     011B                     	;# 
  3455     011B                     	;# 
  3456     011C                     	;# 
  3457     011C                     	;# 
  3458     011C                     	;# 
  3459     011D                     	;# 
  3460     011D                     	;# 
  3461     011D                     	;# 
  3462     011E                     	;# 
  3463     011E                     	;# 
  3464     011E                     	;# 
  3465     011F                     	;# 
  3466     011F                     	;# 
  3467     011F                     	;# 
  3468     011F                     	;# 
  3469     011F                     	;# 
  3470     018C                     	;# 
  3471     018D                     	;# 
  3472     018E                     	;# 
  3473     018F                     	;# 
  3474     0190                     	;# 
  3475     0191                     	;# 
  3476     0192                     	;# 
  3477     0196                     	;# 
  3478     0197                     	;# 
  3479     0198                     	;# 
  3480     0199                     	;# 
  3481     019A                     	;# 
  3482     019B                     	;# 
  3483     019C                     	;# 
  3484     020C                     	;# 
  3485     020D                     	;# 
  3486     020E                     	;# 
  3487     020E                     	;# 
  3488     020F                     	;# 
  3489     020F                     	;# 
  3490     0210                     	;# 
  3491     0210                     	;# 
  3492     0211                     	;# 
  3493     0211                     	;# 
  3494     0212                     	;# 
  3495     0213                     	;# 
  3496     0214                     	;# 
  3497     0214                     	;# 
  3498     0215                     	;# 
  3499     0215                     	;# 
  3500     0216                     	;# 
  3501     0216                     	;# 
  3502     0217                     	;# 
  3503     0217                     	;# 
  3504     0218                     	;# 
  3505     0219                     	;# 
  3506     021A                     	;# 
  3507     021A                     	;# 
  3508     021B                     	;# 
  3509     021B                     	;# 
  3510     021C                     	;# 
  3511     021C                     	;# 
  3512     021D                     	;# 
  3513     021D                     	;# 
  3514     021E                     	;# 
  3515     021F                     	;# 
  3516     028C                     	;# 
  3517     028C                     	;# 
  3518     028D                     	;# 
  3519     028D                     	;# 
  3520     028E                     	;# 
  3521     028F                     	;# 
  3522     0290                     	;# 
  3523     0291                     	;# 
  3524     0292                     	;# 
  3525     0292                     	;# 
  3526     0293                     	;# 
  3527     0293                     	;# 
  3528     0294                     	;# 
  3529     0295                     	;# 
  3530     0296                     	;# 
  3531     0297                     	;# 
  3532     0298                     	;# 
  3533     0298                     	;# 
  3534     0299                     	;# 
  3535     0299                     	;# 
  3536     029A                     	;# 
  3537     029B                     	;# 
  3538     029C                     	;# 
  3539     029D                     	;# 
  3540     029F                     	;# 
  3541     030C                     	;# 
  3542     030C                     	;# 
  3543     030D                     	;# 
  3544     030E                     	;# 
  3545     030F                     	;# 
  3546     0310                     	;# 
  3547     0310                     	;# 
  3548     0311                     	;# 
  3549     0312                     	;# 
  3550     0313                     	;# 
  3551     0314                     	;# 
  3552     0314                     	;# 
  3553     0315                     	;# 
  3554     0316                     	;# 
  3555     0317                     	;# 
  3556     0318                     	;# 
  3557     0318                     	;# 
  3558     0319                     	;# 
  3559     031A                     	;# 
  3560     031B                     	;# 
  3561     031C                     	;# 
  3562     031C                     	;# 
  3563     031D                     	;# 
  3564     031E                     	;# 
  3565     031F                     	;# 
  3566     038C                     	;# 
  3567     038C                     	;# 
  3568     038D                     	;# 
  3569     038E                     	;# 
  3570     0390                     	;# 
  3571     0390                     	;# 
  3572     0391                     	;# 
  3573     0392                     	;# 
  3574     048C                     	;# 
  3575     048C                     	;# 
  3576     048D                     	;# 
  3577     048E                     	;# 
  3578     048F                     	;# 
  3579     048F                     	;# 
  3580     0490                     	;# 
  3581     0491                     	;# 
  3582     0492                     	;# 
  3583     0492                     	;# 
  3584     0493                     	;# 
  3585     0494                     	;# 
  3586     0495                     	;# 
  3587     0495                     	;# 
  3588     0496                     	;# 
  3589     0497                     	;# 
  3590     0498                     	;# 
  3591     0499                     	;# 
  3592     049A                     	;# 
  3593     049B                     	;# 
  3594     049C                     	;# 
  3595     049D                     	;# 
  3596     050C                     	;# 
  3597     050C                     	;# 
  3598     050D                     	;# 
  3599     050E                     	;# 
  3600     050F                     	;# 
  3601     050F                     	;# 
  3602     0510                     	;# 
  3603     0511                     	;# 
  3604     0512                     	;# 
  3605     0512                     	;# 
  3606     0513                     	;# 
  3607     0514                     	;# 
  3608     0515                     	;# 
  3609     0515                     	;# 
  3610     0516                     	;# 
  3611     0517                     	;# 
  3612     0518                     	;# 
  3613     0519                     	;# 
  3614     051A                     	;# 
  3615     051B                     	;# 
  3616     051C                     	;# 
  3617     051D                     	;# 
  3618     058C                     	;# 
  3619     058C                     	;# 
  3620     058D                     	;# 
  3621     058E                     	;# 
  3622     058F                     	;# 
  3623     058F                     	;# 
  3624     0590                     	;# 
  3625     0591                     	;# 
  3626     0592                     	;# 
  3627     0593                     	;# 
  3628     059C                     	;# 
  3629     059C                     	;# 
  3630     059D                     	;# 
  3631     059D                     	;# 
  3632     059E                     	;# 
  3633     059F                     	;# 
  3634     060C                     	;# 
  3635     060C                     	;# 
  3636     060D                     	;# 
  3637     060D                     	;# 
  3638     060E                     	;# 
  3639     060F                     	;# 
  3640     0610                     	;# 
  3641     0611                     	;# 
  3642     0612                     	;# 
  3643     0613                     	;# 
  3644     0614                     	;# 
  3645     0616                     	;# 
  3646     0616                     	;# 
  3647     0617                     	;# 
  3648     0617                     	;# 
  3649     0618                     	;# 
  3650     0619                     	;# 
  3651     061A                     	;# 
  3652     061B                     	;# 
  3653     061C                     	;# 
  3654     061D                     	;# 
  3655     061E                     	;# 
  3656     068C                     	;# 
  3657     068D                     	;# 
  3658     068E                     	;# 
  3659     068F                     	;# 
  3660     0690                     	;# 
  3661     0691                     	;# 
  3662     0692                     	;# 
  3663     0693                     	;# 
  3664     0694                     	;# 
  3665     070C                     	;# 
  3666     070D                     	;# 
  3667     070E                     	;# 
  3668     070F                     	;# 
  3669     0710                     	;# 
  3670     0711                     	;# 
  3671     0712                     	;# 
  3672     0713                     	;# 
  3673     0714                     	;# 
  3674     0716                     	;# 
  3675     0717                     	;# 
  3676     0718                     	;# 
  3677     0719                     	;# 
  3678     071A                     	;# 
  3679     071B                     	;# 
  3680     071C                     	;# 
  3681     071D                     	;# 
  3682     071E                     	;# 
  3683     0796                     	;# 
  3684     0797                     	;# 
  3685     0798                     	;# 
  3686     0799                     	;# 
  3687     079A                     	;# 
  3688     079B                     	;# 
  3689     079C                     	;# 
  3690     079D                     	;# 
  3691     080C                     	;# 
  3692     080D                     	;# 
  3693     080E                     	;# 
  3694     080F                     	;# 
  3695     0810                     	;# 
  3696     0811                     	;# 
  3697     0813                     	;# 
  3698     0814                     	;# 
  3699     081A                     	;# 
  3700     081A                     	;# 
  3701     081B                     	;# 
  3702     081C                     	;# 
  3703     081C                     	;# 
  3704     081D                     	;# 
  3705     081E                     	;# 
  3706     081F                     	;# 
  3707     088C                     	;# 
  3708     088D                     	;# 
  3709     088E                     	;# 
  3710     088F                     	;# 
  3711     0890                     	;# 
  3712     0891                     	;# 
  3713     0892                     	;# 
  3714     0893                     	;# 
  3715     0895                     	;# 
  3716     0896                     	;# 
  3717     0897                     	;# 
  3718     0898                     	;# 
  3719     0899                     	;# 
  3720     089A                     	;# 
  3721     089B                     	;# 
  3722     090C                     	;# 
  3723     090E                     	;# 
  3724     090F                     	;# 
  3725     091F                     	;# 
  3726     098F                     	;# 
  3727     098F                     	;# 
  3728     0990                     	;# 
  3729     0991                     	;# 
  3730     0992                     	;# 
  3731     0993                     	;# 
  3732     0994                     	;# 
  3733     0995                     	;# 
  3734     0996                     	;# 
  3735     0997                     	;# 
  3736     0A19                     	;# 
  3737     0A19                     	;# 
  3738     0A1A                     	;# 
  3739     0A1A                     	;# 
  3740     0A1B                     	;# 
  3741     0A1B                     	;# 
  3742     0A1B                     	;# 
  3743     0A1C                     	;# 
  3744     0A1C                     	;# 
  3745     0A1D                     	;# 
  3746     0A1D                     	;# 
  3747     0A1E                     	;# 
  3748     0A1E                     	;# 
  3749     0A1F                     	;# 
  3750     0A1F                     	;# 
  3751     0A1F                     	;# 
  3752     1E0F                     	;# 
  3753     1E10                     	;# 
  3754     1E11                     	;# 
  3755     1E12                     	;# 
  3756     1E13                     	;# 
  3757     1E14                     	;# 
  3758     1E15                     	;# 
  3759     1E16                     	;# 
  3760     1E17                     	;# 
  3761     1E18                     	;# 
  3762     1E19                     	;# 
  3763     1E1A                     	;# 
  3764     1E1B                     	;# 
  3765     1E1C                     	;# 
  3766     1E1D                     	;# 
  3767     1E1E                     	;# 
  3768     1E1F                     	;# 
  3769     1E20                     	;# 
  3770     1E21                     	;# 
  3771     1E22                     	;# 
  3772     1E23                     	;# 
  3773     1E24                     	;# 
  3774     1E25                     	;# 
  3775     1E26                     	;# 
  3776     1E27                     	;# 
  3777     1E28                     	;# 
  3778     1E29                     	;# 
  3779     1E2A                     	;# 
  3780     1E2B                     	;# 
  3781     1E2C                     	;# 
  3782     1E2D                     	;# 
  3783     1E2E                     	;# 
  3784     1E2F                     	;# 
  3785     1E30                     	;# 
  3786     1E31                     	;# 
  3787     1E32                     	;# 
  3788     1E33                     	;# 
  3789     1E34                     	;# 
  3790     1E35                     	;# 
  3791     1E36                     	;# 
  3792     1E37                     	;# 
  3793     1E8F                     	;# 
  3794     1E90                     	;# 
  3795     1E91                     	;# 
  3796     1E92                     	;# 
  3797     1E93                     	;# 
  3798     1E94                     	;# 
  3799     1E95                     	;# 
  3800     1E96                     	;# 
  3801     1E97                     	;# 
  3802     1E9C                     	;# 
  3803     1E9D                     	;# 
  3804     1E9E                     	;# 
  3805     1EA1                     	;# 
  3806     1EA2                     	;# 
  3807     1EA3                     	;# 
  3808     1EA4                     	;# 
  3809     1EA5                     	;# 
  3810     1EA9                     	;# 
  3811     1EAA                     	;# 
  3812     1EAB                     	;# 
  3813     1EAC                     	;# 
  3814     1EB1                     	;# 
  3815     1EB2                     	;# 
  3816     1EB3                     	;# 
  3817     1EB8                     	;# 
  3818     1EB9                     	;# 
  3819     1EBA                     	;# 
  3820     1EBB                     	;# 
  3821     1EBC                     	;# 
  3822     1EBD                     	;# 
  3823     1EBE                     	;# 
  3824     1EC3                     	;# 
  3825     1EC5                     	;# 
  3826     1EC6                     	;# 
  3827     1EC7                     	;# 
  3828     1EC8                     	;# 
  3829     1EC9                     	;# 
  3830     1ECA                     	;# 
  3831     1ECB                     	;# 
  3832     1ECC                     	;# 
  3833     1ECD                     	;# 
  3834     1ECE                     	;# 
  3835     1F10                     	;# 
  3836     1F11                     	;# 
  3837     1F12                     	;# 
  3838     1F13                     	;# 
  3839     1F14                     	;# 
  3840     1F15                     	;# 
  3841     1F16                     	;# 
  3842     1F17                     	;# 
  3843     1F18                     	;# 
  3844     1F19                     	;# 
  3845     1F1A                     	;# 
  3846     1F1B                     	;# 
  3847     1F1C                     	;# 
  3848     1F1D                     	;# 
  3849     1F1E                     	;# 
  3850     1F1F                     	;# 
  3851     1F20                     	;# 
  3852     1F21                     	;# 
  3853     1F22                     	;# 
  3854     1F23                     	;# 
  3855     1F24                     	;# 
  3856     1F25                     	;# 
  3857     1F26                     	;# 
  3858     1F27                     	;# 
  3859     1F38                     	;# 
  3860     1F39                     	;# 
  3861     1F3A                     	;# 
  3862     1F3B                     	;# 
  3863     1F3C                     	;# 
  3864     1F3D                     	;# 
  3865     1F3E                     	;# 
  3866     1F3F                     	;# 
  3867     1F43                     	;# 
  3868     1F44                     	;# 
  3869     1F45                     	;# 
  3870     1F46                     	;# 
  3871     1F47                     	;# 
  3872     1F48                     	;# 
  3873     1F49                     	;# 
  3874     1F4A                     	;# 
  3875     1F4E                     	;# 
  3876     1F4F                     	;# 
  3877     1F50                     	;# 
  3878     1F51                     	;# 
  3879     1F52                     	;# 
  3880     1F53                     	;# 
  3881     1F54                     	;# 
  3882     1F55                     	;# 
  3883     1F65                     	;# 
  3884     1F66                     	;# 
  3885     1F67                     	;# 
  3886     1F68                     	;# 
  3887     1F69                     	;# 
  3888     1F6A                     	;# 
  3889     1F6B                     	;# 
  3890     1FE4                     	;# 
  3891     1FE5                     	;# 
  3892     1FE6                     	;# 
  3893     1FE7                     	;# 
  3894     1FE8                     	;# 
  3895     1FE8                     	;# 
  3896     1FE9                     	;# 
  3897     1FEA                     	;# 
  3898     1FEB                     	;# 
  3899     1FED                     	;# 
  3900     1FEE                     	;# 
  3901     1FEF                     	;# 
  3902     0000                     	;# 
  3903     0001                     	;# 
  3904     0002                     	;# 
  3905     0003                     	;# 
  3906     0004                     	;# 
  3907     0005                     	;# 
  3908     0006                     	;# 
  3909     0007                     	;# 
  3910     0008                     	;# 
  3911     0009                     	;# 
  3912     000A                     	;# 
  3913     000B                     	;# 
  3914     000C                     	;# 
  3915     000D                     	;# 
  3916     000E                     	;# 
  3917     0010                     	;# 
  3918     0012                     	;# 
  3919     0013                     	;# 
  3920     0014                     	;# 
  3921     0016                     	;# 
  3922     0018                     	;# 
  3923     0019                     	;# 
  3924     001A                     	;# 
  3925     001C                     	;# 
  3926     008C                     	;# 
  3927     008C                     	;# 
  3928     008D                     	;# 
  3929     008E                     	;# 
  3930     008E                     	;# 
  3931     008F                     	;# 
  3932     0090                     	;# 
  3933     0090                     	;# 
  3934     0091                     	;# 
  3935     0092                     	;# 
  3936     0092                     	;# 
  3937     0093                     	;# 
  3938     0094                     	;# 
  3939     0094                     	;# 
  3940     0095                     	;# 
  3941     0096                     	;# 
  3942     0096                     	;# 
  3943     0097                     	;# 
  3944     0098                     	;# 
  3945     0099                     	;# 
  3946     009A                     	;# 
  3947     009B                     	;# 
  3948     009B                     	;# 
  3949     009C                     	;# 
  3950     009D                     	;# 
  3951     009D                     	;# 
  3952     009E                     	;# 
  3953     009F                     	;# 
  3954     010C                     	;# 
  3955     010C                     	;# 
  3956     010D                     	;# 
  3957     010E                     	;# 
  3958     010F                     	;# 
  3959     010F                     	;# 
  3960     0110                     	;# 
  3961     0111                     	;# 
  3962     0112                     	;# 
  3963     0113                     	;# 
  3964     0114                     	;# 
  3965     0115                     	;# 
  3966     0116                     	;# 
  3967     0117                     	;# 
  3968     0118                     	;# 
  3969     0119                     	;# 
  3970     0119                     	;# 
  3971     0119                     	;# 
  3972     011A                     	;# 
  3973     011A                     	;# 
  3974     011A                     	;# 
  3975     011B                     	;# 
  3976     011B                     	;# 
  3977     011B                     	;# 
  3978     011B                     	;# 
  3979     011B                     	;# 
  3980     011C                     	;# 
  3981     011C                     	;# 
  3982     011C                     	;# 
  3983     011D                     	;# 
  3984     011D                     	;# 
  3985     011D                     	;# 
  3986     011E                     	;# 
  3987     011E                     	;# 
  3988     011E                     	;# 
  3989     011F                     	;# 
  3990     011F                     	;# 
  3991     011F                     	;# 
  3992     011F                     	;# 
  3993     011F                     	;# 
  3994     018C                     	;# 
  3995     018D                     	;# 
  3996     018E                     	;# 
  3997     018F                     	;# 
  3998     0190                     	;# 
  3999     0191                     	;# 
  4000     0192                     	;# 
  4001     0196                     	;# 
  4002     0197                     	;# 
  4003     0198                     	;# 
  4004     0199                     	;# 
  4005     019A                     	;# 
  4006     019B                     	;# 
  4007     019C                     	;# 
  4008     020C                     	;# 
  4009     020D                     	;# 
  4010     020E                     	;# 
  4011     020E                     	;# 
  4012     020F                     	;# 
  4013     020F                     	;# 
  4014     0210                     	;# 
  4015     0210                     	;# 
  4016     0211                     	;# 
  4017     0211                     	;# 
  4018     0212                     	;# 
  4019     0213                     	;# 
  4020     0214                     	;# 
  4021     0214                     	;# 
  4022     0215                     	;# 
  4023     0215                     	;# 
  4024     0216                     	;# 
  4025     0216                     	;# 
  4026     0217                     	;# 
  4027     0217                     	;# 
  4028     0218                     	;# 
  4029     0219                     	;# 
  4030     021A                     	;# 
  4031     021A                     	;# 
  4032     021B                     	;# 
  4033     021B                     	;# 
  4034     021C                     	;# 
  4035     021C                     	;# 
  4036     021D                     	;# 
  4037     021D                     	;# 
  4038     021E                     	;# 
  4039     021F                     	;# 
  4040     028C                     	;# 
  4041     028C                     	;# 
  4042     028D                     	;# 
  4043     028D                     	;# 
  4044     028E                     	;# 
  4045     028F                     	;# 
  4046     0290                     	;# 
  4047     0291                     	;# 
  4048     0292                     	;# 
  4049     0292                     	;# 
  4050     0293                     	;# 
  4051     0293                     	;# 
  4052     0294                     	;# 
  4053     0295                     	;# 
  4054     0296                     	;# 
  4055     0297                     	;# 
  4056     0298                     	;# 
  4057     0298                     	;# 
  4058     0299                     	;# 
  4059     0299                     	;# 
  4060     029A                     	;# 
  4061     029B                     	;# 
  4062     029C                     	;# 
  4063     029D                     	;# 
  4064     029F                     	;# 
  4065     030C                     	;# 
  4066     030C                     	;# 
  4067     030D                     	;# 
  4068     030E                     	;# 
  4069     030F                     	;# 
  4070     0310                     	;# 
  4071     0310                     	;# 
  4072     0311                     	;# 
  4073     0312                     	;# 
  4074     0313                     	;# 
  4075     0314                     	;# 
  4076     0314                     	;# 
  4077     0315                     	;# 
  4078     0316                     	;# 
  4079     0317                     	;# 
  4080     0318                     	;# 
  4081     0318                     	;# 
  4082     0319                     	;# 
  4083     031A                     	;# 
  4084     031B                     	;# 
  4085     031C                     	;# 
  4086     031C                     	;# 
  4087     031D                     	;# 
  4088     031E                     	;# 
  4089     031F                     	;# 
  4090     038C                     	;# 
  4091     038C                     	;# 
  4092     038D                     	;# 
  4093     038E                     	;# 
  4094     0390                     	;# 
  4095     0390                     	;# 
  4096     0391                     	;# 
  4097     0392                     	;# 
  4098     048C                     	;# 
  4099     048C                     	;# 
  4100     048D                     	;# 
  4101     048E                     	;# 
  4102     048F                     	;# 
  4103     048F                     	;# 
  4104     0490                     	;# 
  4105     0491                     	;# 
  4106     0492                     	;# 
  4107     0492                     	;# 
  4108     0493                     	;# 
  4109     0494                     	;# 
  4110     0495                     	;# 
  4111     0495                     	;# 
  4112     0496                     	;# 
  4113     0497                     	;# 
  4114     0498                     	;# 
  4115     0499                     	;# 
  4116     049A                     	;# 
  4117     049B                     	;# 
  4118     049C                     	;# 
  4119     049D                     	;# 
  4120     050C                     	;# 
  4121     050C                     	;# 
  4122     050D                     	;# 
  4123     050E                     	;# 
  4124     050F                     	;# 
  4125     050F                     	;# 
  4126     0510                     	;# 
  4127     0511                     	;# 
  4128     0512                     	;# 
  4129     0512                     	;# 
  4130     0513                     	;# 
  4131     0514                     	;# 
  4132     0515                     	;# 
  4133     0515                     	;# 
  4134     0516                     	;# 
  4135     0517                     	;# 
  4136     0518                     	;# 
  4137     0519                     	;# 
  4138     051A                     	;# 
  4139     051B                     	;# 
  4140     051C                     	;# 
  4141     051D                     	;# 
  4142     058C                     	;# 
  4143     058C                     	;# 
  4144     058D                     	;# 
  4145     058E                     	;# 
  4146     058F                     	;# 
  4147     058F                     	;# 
  4148     0590                     	;# 
  4149     0591                     	;# 
  4150     0592                     	;# 
  4151     0593                     	;# 
  4152     059C                     	;# 
  4153     059C                     	;# 
  4154     059D                     	;# 
  4155     059D                     	;# 
  4156     059E                     	;# 
  4157     059F                     	;# 
  4158     060C                     	;# 
  4159     060C                     	;# 
  4160     060D                     	;# 
  4161     060D                     	;# 
  4162     060E                     	;# 
  4163     060F                     	;# 
  4164     0610                     	;# 
  4165     0611                     	;# 
  4166     0612                     	;# 
  4167     0613                     	;# 
  4168     0614                     	;# 
  4169     0616                     	;# 
  4170     0616                     	;# 
  4171     0617                     	;# 
  4172     0617                     	;# 
  4173     0618                     	;# 
  4174     0619                     	;# 
  4175     061A                     	;# 
  4176     061B                     	;# 
  4177     061C                     	;# 
  4178     061D                     	;# 
  4179     061E                     	;# 
  4180     068C                     	;# 
  4181     068D                     	;# 
  4182     068E                     	;# 
  4183     068F                     	;# 
  4184     0690                     	;# 
  4185     0691                     	;# 
  4186     0692                     	;# 
  4187     0693                     	;# 
  4188     0694                     	;# 
  4189     070C                     	;# 
  4190     070D                     	;# 
  4191     070E                     	;# 
  4192     070F                     	;# 
  4193     0710                     	;# 
  4194     0711                     	;# 
  4195     0712                     	;# 
  4196     0713                     	;# 
  4197     0714                     	;# 
  4198     0716                     	;# 
  4199     0717                     	;# 
  4200     0718                     	;# 
  4201     0719                     	;# 
  4202     071A                     	;# 
  4203     071B                     	;# 
  4204     071C                     	;# 
  4205     071D                     	;# 
  4206     071E                     	;# 
  4207     0796                     	;# 
  4208     0797                     	;# 
  4209     0798                     	;# 
  4210     0799                     	;# 
  4211     079A                     	;# 
  4212     079B                     	;# 
  4213     079C                     	;# 
  4214     079D                     	;# 
  4215     080C                     	;# 
  4216     080D                     	;# 
  4217     080E                     	;# 
  4218     080F                     	;# 
  4219     0810                     	;# 
  4220     0811                     	;# 
  4221     0813                     	;# 
  4222     0814                     	;# 
  4223     081A                     	;# 
  4224     081A                     	;# 
  4225     081B                     	;# 
  4226     081C                     	;# 
  4227     081C                     	;# 
  4228     081D                     	;# 
  4229     081E                     	;# 
  4230     081F                     	;# 
  4231     088C                     	;# 
  4232     088D                     	;# 
  4233     088E                     	;# 
  4234     088F                     	;# 
  4235     0890                     	;# 
  4236     0891                     	;# 
  4237     0892                     	;# 
  4238     0893                     	;# 
  4239     0895                     	;# 
  4240     0896                     	;# 
  4241     0897                     	;# 
  4242     0898                     	;# 
  4243     0899                     	;# 
  4244     089A                     	;# 
  4245     089B                     	;# 
  4246     090C                     	;# 
  4247     090E                     	;# 
  4248     090F                     	;# 
  4249     091F                     	;# 
  4250     098F                     	;# 
  4251     098F                     	;# 
  4252     0990                     	;# 
  4253     0991                     	;# 
  4254     0992                     	;# 
  4255     0993                     	;# 
  4256     0994                     	;# 
  4257     0995                     	;# 
  4258     0996                     	;# 
  4259     0997                     	;# 
  4260     0A19                     	;# 
  4261     0A19                     	;# 
  4262     0A1A                     	;# 
  4263     0A1A                     	;# 
  4264     0A1B                     	;# 
  4265     0A1B                     	;# 
  4266     0A1B                     	;# 
  4267     0A1C                     	;# 
  4268     0A1C                     	;# 
  4269     0A1D                     	;# 
  4270     0A1D                     	;# 
  4271     0A1E                     	;# 
  4272     0A1E                     	;# 
  4273     0A1F                     	;# 
  4274     0A1F                     	;# 
  4275     0A1F                     	;# 
  4276     1E0F                     	;# 
  4277     1E10                     	;# 
  4278     1E11                     	;# 
  4279     1E12                     	;# 
  4280     1E13                     	;# 
  4281     1E14                     	;# 
  4282     1E15                     	;# 
  4283     1E16                     	;# 
  4284     1E17                     	;# 
  4285     1E18                     	;# 
  4286     1E19                     	;# 
  4287     1E1A                     	;# 
  4288     1E1B                     	;# 
  4289     1E1C                     	;# 
  4290     1E1D                     	;# 
  4291     1E1E                     	;# 
  4292     1E1F                     	;# 
  4293     1E20                     	;# 
  4294     1E21                     	;# 
  4295     1E22                     	;# 
  4296     1E23                     	;# 
  4297     1E24                     	;# 
  4298     1E25                     	;# 
  4299     1E26                     	;# 
  4300     1E27                     	;# 
  4301     1E28                     	;# 
  4302     1E29                     	;# 
  4303     1E2A                     	;# 
  4304     1E2B                     	;# 
  4305     1E2C                     	;# 
  4306     1E2D                     	;# 
  4307     1E2E                     	;# 
  4308     1E2F                     	;# 
  4309     1E30                     	;# 
  4310     1E31                     	;# 
  4311     1E32                     	;# 
  4312     1E33                     	;# 
  4313     1E34                     	;# 
  4314     1E35                     	;# 
  4315     1E36                     	;# 
  4316     1E37                     	;# 
  4317     1E8F                     	;# 
  4318     1E90                     	;# 
  4319     1E91                     	;# 
  4320     1E92                     	;# 
  4321     1E93                     	;# 
  4322     1E94                     	;# 
  4323     1E95                     	;# 
  4324     1E96                     	;# 
  4325     1E97                     	;# 
  4326     1E9C                     	;# 
  4327     1E9D                     	;# 
  4328     1E9E                     	;# 
  4329     1EA1                     	;# 
  4330     1EA2                     	;# 
  4331     1EA3                     	;# 
  4332     1EA4                     	;# 
  4333     1EA5                     	;# 
  4334     1EA9                     	;# 
  4335     1EAA                     	;# 
  4336     1EAB                     	;# 
  4337     1EAC                     	;# 
  4338     1EB1                     	;# 
  4339     1EB2                     	;# 
  4340     1EB3                     	;# 
  4341     1EB8                     	;# 
  4342     1EB9                     	;# 
  4343     1EBA                     	;# 
  4344     1EBB                     	;# 
  4345     1EBC                     	;# 
  4346     1EBD                     	;# 
  4347     1EBE                     	;# 
  4348     1EC3                     	;# 
  4349     1EC5                     	;# 
  4350     1EC6                     	;# 
  4351     1EC7                     	;# 
  4352     1EC8                     	;# 
  4353     1EC9                     	;# 
  4354     1ECA                     	;# 
  4355     1ECB                     	;# 
  4356     1ECC                     	;# 
  4357     1ECD                     	;# 
  4358     1ECE                     	;# 
  4359     1F10                     	;# 
  4360     1F11                     	;# 
  4361     1F12                     	;# 
  4362     1F13                     	;# 
  4363     1F14                     	;# 
  4364     1F15                     	;# 
  4365     1F16                     	;# 
  4366     1F17                     	;# 
  4367     1F18                     	;# 
  4368     1F19                     	;# 
  4369     1F1A                     	;# 
  4370     1F1B                     	;# 
  4371     1F1C                     	;# 
  4372     1F1D                     	;# 
  4373     1F1E                     	;# 
  4374     1F1F                     	;# 
  4375     1F20                     	;# 
  4376     1F21                     	;# 
  4377     1F22                     	;# 
  4378     1F23                     	;# 
  4379     1F24                     	;# 
  4380     1F25                     	;# 
  4381     1F26                     	;# 
  4382     1F27                     	;# 
  4383     1F38                     	;# 
  4384     1F39                     	;# 
  4385     1F3A                     	;# 
  4386     1F3B                     	;# 
  4387     1F3C                     	;# 
  4388     1F3D                     	;# 
  4389     1F3E                     	;# 
  4390     1F3F                     	;# 
  4391     1F43                     	;# 
  4392     1F44                     	;# 
  4393     1F45                     	;# 
  4394     1F46                     	;# 
  4395     1F47                     	;# 
  4396     1F48                     	;# 
  4397     1F49                     	;# 
  4398     1F4A                     	;# 
  4399     1F4E                     	;# 
  4400     1F4F                     	;# 
  4401     1F50                     	;# 
  4402     1F51                     	;# 
  4403     1F52                     	;# 
  4404     1F53                     	;# 
  4405     1F54                     	;# 
  4406     1F55                     	;# 
  4407     1F65                     	;# 
  4408     1F66                     	;# 
  4409     1F67                     	;# 
  4410     1F68                     	;# 
  4411     1F69                     	;# 
  4412     1F6A                     	;# 
  4413     1F6B                     	;# 
  4414     1FE4                     	;# 
  4415     1FE5                     	;# 
  4416     1FE6                     	;# 
  4417     1FE7                     	;# 
  4418     1FE8                     	;# 
  4419     1FE8                     	;# 
  4420     1FE9                     	;# 
  4421     1FEA                     	;# 
  4422     1FEB                     	;# 
  4423     1FED                     	;# 
  4424     1FEE                     	;# 
  4425     1FEF                     	;# 
  4426     0000                     	;# 
  4427     0001                     	;# 
  4428     0002                     	;# 
  4429     0003                     	;# 
  4430     0004                     	;# 
  4431     0005                     	;# 
  4432     0006                     	;# 
  4433     0007                     	;# 
  4434     0008                     	;# 
  4435     0009                     	;# 
  4436     000A                     	;# 
  4437     000B                     	;# 
  4438     000C                     	;# 
  4439     000D                     	;# 
  4440     000E                     	;# 
  4441     0010                     	;# 
  4442     0012                     	;# 
  4443     0013                     	;# 
  4444     0014                     	;# 
  4445     0016                     	;# 
  4446     0018                     	;# 
  4447     0019                     	;# 
  4448     001A                     	;# 
  4449     001C                     	;# 
  4450     008C                     	;# 
  4451     008C                     	;# 
  4452     008D                     	;# 
  4453     008E                     	;# 
  4454     008E                     	;# 
  4455     008F                     	;# 
  4456     0090                     	;# 
  4457     0090                     	;# 
  4458     0091                     	;# 
  4459     0092                     	;# 
  4460     0092                     	;# 
  4461     0093                     	;# 
  4462     0094                     	;# 
  4463     0094                     	;# 
  4464     0095                     	;# 
  4465     0096                     	;# 
  4466     0096                     	;# 
  4467     0097                     	;# 
  4468     0098                     	;# 
  4469     0099                     	;# 
  4470     009A                     	;# 
  4471     009B                     	;# 
  4472     009B                     	;# 
  4473     009C                     	;# 
  4474     009D                     	;# 
  4475     009D                     	;# 
  4476     009E                     	;# 
  4477     009F                     	;# 
  4478     010C                     	;# 
  4479     010C                     	;# 
  4480     010D                     	;# 
  4481     010E                     	;# 
  4482     010F                     	;# 
  4483     010F                     	;# 
  4484     0110                     	;# 
  4485     0111                     	;# 
  4486     0112                     	;# 
  4487     0113                     	;# 
  4488     0114                     	;# 
  4489     0115                     	;# 
  4490     0116                     	;# 
  4491     0117                     	;# 
  4492     0118                     	;# 
  4493     0119                     	;# 
  4494     0119                     	;# 
  4495     0119                     	;# 
  4496     011A                     	;# 
  4497     011A                     	;# 
  4498     011A                     	;# 
  4499     011B                     	;# 
  4500     011B                     	;# 
  4501     011B                     	;# 
  4502     011B                     	;# 
  4503     011B                     	;# 
  4504     011C                     	;# 
  4505     011C                     	;# 
  4506     011C                     	;# 
  4507     011D                     	;# 
  4508     011D                     	;# 
  4509     011D                     	;# 
  4510     011E                     	;# 
  4511     011E                     	;# 
  4512     011E                     	;# 
  4513     011F                     	;# 
  4514     011F                     	;# 
  4515     011F                     	;# 
  4516     011F                     	;# 
  4517     011F                     	;# 
  4518     018C                     	;# 
  4519     018D                     	;# 
  4520     018E                     	;# 
  4521     018F                     	;# 
  4522     0190                     	;# 
  4523     0191                     	;# 
  4524     0192                     	;# 
  4525     0196                     	;# 
  4526     0197                     	;# 
  4527     0198                     	;# 
  4528     0199                     	;# 
  4529     019A                     	;# 
  4530     019B                     	;# 
  4531     019C                     	;# 
  4532     020C                     	;# 
  4533     020D                     	;# 
  4534     020E                     	;# 
  4535     020E                     	;# 
  4536     020F                     	;# 
  4537     020F                     	;# 
  4538     0210                     	;# 
  4539     0210                     	;# 
  4540     0211                     	;# 
  4541     0211                     	;# 
  4542     0212                     	;# 
  4543     0213                     	;# 
  4544     0214                     	;# 
  4545     0214                     	;# 
  4546     0215                     	;# 
  4547     0215                     	;# 
  4548     0216                     	;# 
  4549     0216                     	;# 
  4550     0217                     	;# 
  4551     0217                     	;# 
  4552     0218                     	;# 
  4553     0219                     	;# 
  4554     021A                     	;# 
  4555     021A                     	;# 
  4556     021B                     	;# 
  4557     021B                     	;# 
  4558     021C                     	;# 
  4559     021C                     	;# 
  4560     021D                     	;# 
  4561     021D                     	;# 
  4562     021E                     	;# 
  4563     021F                     	;# 
  4564     028C                     	;# 
  4565     028C                     	;# 
  4566     028D                     	;# 
  4567     028D                     	;# 
  4568     028E                     	;# 
  4569     028F                     	;# 
  4570     0290                     	;# 
  4571     0291                     	;# 
  4572     0292                     	;# 
  4573     0292                     	;# 
  4574     0293                     	;# 
  4575     0293                     	;# 
  4576     0294                     	;# 
  4577     0295                     	;# 
  4578     0296                     	;# 
  4579     0297                     	;# 
  4580     0298                     	;# 
  4581     0298                     	;# 
  4582     0299                     	;# 
  4583     0299                     	;# 
  4584     029A                     	;# 
  4585     029B                     	;# 
  4586     029C                     	;# 
  4587     029D                     	;# 
  4588     029F                     	;# 
  4589     030C                     	;# 
  4590     030C                     	;# 
  4591     030D                     	;# 
  4592     030E                     	;# 
  4593     030F                     	;# 
  4594     0310                     	;# 
  4595     0310                     	;# 
  4596     0311                     	;# 
  4597     0312                     	;# 
  4598     0313                     	;# 
  4599     0314                     	;# 
  4600     0314                     	;# 
  4601     0315                     	;# 
  4602     0316                     	;# 
  4603     0317                     	;# 
  4604     0318                     	;# 
  4605     0318                     	;# 
  4606     0319                     	;# 
  4607     031A                     	;# 
  4608     031B                     	;# 
  4609     031C                     	;# 
  4610     031C                     	;# 
  4611     031D                     	;# 
  4612     031E                     	;# 
  4613     031F                     	;# 
  4614     038C                     	;# 
  4615     038C                     	;# 
  4616     038D                     	;# 
  4617     038E                     	;# 
  4618     0390                     	;# 
  4619     0390                     	;# 
  4620     0391                     	;# 
  4621     0392                     	;# 
  4622     048C                     	;# 
  4623     048C                     	;# 
  4624     048D                     	;# 
  4625     048E                     	;# 
  4626     048F                     	;# 
  4627     048F                     	;# 
  4628     0490                     	;# 
  4629     0491                     	;# 
  4630     0492                     	;# 
  4631     0492                     	;# 
  4632     0493                     	;# 
  4633     0494                     	;# 
  4634     0495                     	;# 
  4635     0495                     	;# 
  4636     0496                     	;# 
  4637     0497                     	;# 
  4638     0498                     	;# 
  4639     0499                     	;# 
  4640     049A                     	;# 
  4641     049B                     	;# 
  4642     049C                     	;# 
  4643     049D                     	;# 
  4644     050C                     	;# 
  4645     050C                     	;# 
  4646     050D                     	;# 
  4647     050E                     	;# 
  4648     050F                     	;# 
  4649     050F                     	;# 
  4650     0510                     	;# 
  4651     0511                     	;# 
  4652     0512                     	;# 
  4653     0512                     	;# 
  4654     0513                     	;# 
  4655     0514                     	;# 
  4656     0515                     	;# 
  4657     0515                     	;# 
  4658     0516                     	;# 
  4659     0517                     	;# 
  4660     0518                     	;# 
  4661     0519                     	;# 
  4662     051A                     	;# 
  4663     051B                     	;# 
  4664     051C                     	;# 
  4665     051D                     	;# 
  4666     058C                     	;# 
  4667     058C                     	;# 
  4668     058D                     	;# 
  4669     058E                     	;# 
  4670     058F                     	;# 
  4671     058F                     	;# 
  4672     0590                     	;# 
  4673     0591                     	;# 
  4674     0592                     	;# 
  4675     0593                     	;# 
  4676     059C                     	;# 
  4677     059C                     	;# 
  4678     059D                     	;# 
  4679     059D                     	;# 
  4680     059E                     	;# 
  4681     059F                     	;# 
  4682     060C                     	;# 
  4683     060C                     	;# 
  4684     060D                     	;# 
  4685     060D                     	;# 
  4686     060E                     	;# 
  4687     060F                     	;# 
  4688     0610                     	;# 
  4689     0611                     	;# 
  4690     0612                     	;# 
  4691     0613                     	;# 
  4692     0614                     	;# 
  4693     0616                     	;# 
  4694     0616                     	;# 
  4695     0617                     	;# 
  4696     0617                     	;# 
  4697     0618                     	;# 
  4698     0619                     	;# 
  4699     061A                     	;# 
  4700     061B                     	;# 
  4701     061C                     	;# 
  4702     061D                     	;# 
  4703     061E                     	;# 
  4704     068C                     	;# 
  4705     068D                     	;# 
  4706     068E                     	;# 
  4707     068F                     	;# 
  4708     0690                     	;# 
  4709     0691                     	;# 
  4710     0692                     	;# 
  4711     0693                     	;# 
  4712     0694                     	;# 
  4713     070C                     	;# 
  4714     070D                     	;# 
  4715     070E                     	;# 
  4716     070F                     	;# 
  4717     0710                     	;# 
  4718     0711                     	;# 
  4719     0712                     	;# 
  4720     0713                     	;# 
  4721     0714                     	;# 
  4722     0716                     	;# 
  4723     0717                     	;# 
  4724     0718                     	;# 
  4725     0719                     	;# 
  4726     071A                     	;# 
  4727     071B                     	;# 
  4728     071C                     	;# 
  4729     071D                     	;# 
  4730     071E                     	;# 
  4731     0796                     	;# 
  4732     0797                     	;# 
  4733     0798                     	;# 
  4734     0799                     	;# 
  4735     079A                     	;# 
  4736     079B                     	;# 
  4737     079C                     	;# 
  4738     079D                     	;# 
  4739     080C                     	;# 
  4740     080D                     	;# 
  4741     080E                     	;# 
  4742     080F                     	;# 
  4743     0810                     	;# 
  4744     0811                     	;# 
  4745     0813                     	;# 
  4746     0814                     	;# 
  4747     081A                     	;# 
  4748     081A                     	;# 
  4749     081B                     	;# 
  4750     081C                     	;# 
  4751     081C                     	;# 
  4752     081D                     	;# 
  4753     081E                     	;# 
  4754     081F                     	;# 
  4755     088C                     	;# 
  4756     088D                     	;# 
  4757     088E                     	;# 
  4758     088F                     	;# 
  4759     0890                     	;# 
  4760     0891                     	;# 
  4761     0892                     	;# 
  4762     0893                     	;# 
  4763     0895                     	;# 
  4764     0896                     	;# 
  4765     0897                     	;# 
  4766     0898                     	;# 
  4767     0899                     	;# 
  4768     089A                     	;# 
  4769     089B                     	;# 
  4770     090C                     	;# 
  4771     090E                     	;# 
  4772     090F                     	;# 
  4773     091F                     	;# 
  4774     098F                     	;# 
  4775     098F                     	;# 
  4776     0990                     	;# 
  4777     0991                     	;# 
  4778     0992                     	;# 
  4779     0993                     	;# 
  4780     0994                     	;# 
  4781     0995                     	;# 
  4782     0996                     	;# 
  4783     0997                     	;# 
  4784     0A19                     	;# 
  4785     0A19                     	;# 
  4786     0A1A                     	;# 
  4787     0A1A                     	;# 
  4788     0A1B                     	;# 
  4789     0A1B                     	;# 
  4790     0A1B                     	;# 
  4791     0A1C                     	;# 
  4792     0A1C                     	;# 
  4793     0A1D                     	;# 
  4794     0A1D                     	;# 
  4795     0A1E                     	;# 
  4796     0A1E                     	;# 
  4797     0A1F                     	;# 
  4798     0A1F                     	;# 
  4799     0A1F                     	;# 
  4800     1E0F                     	;# 
  4801     1E10                     	;# 
  4802     1E11                     	;# 
  4803     1E12                     	;# 
  4804     1E13                     	;# 
  4805     1E14                     	;# 
  4806     1E15                     	;# 
  4807     1E16                     	;# 
  4808     1E17                     	;# 
  4809     1E18                     	;# 
  4810     1E19                     	;# 
  4811     1E1A                     	;# 
  4812     1E1B                     	;# 
  4813     1E1C                     	;# 
  4814     1E1D                     	;# 
  4815     1E1E                     	;# 
  4816     1E1F                     	;# 
  4817     1E20                     	;# 
  4818     1E21                     	;# 
  4819     1E22                     	;# 
  4820     1E23                     	;# 
  4821     1E24                     	;# 
  4822     1E25                     	;# 
  4823     1E26                     	;# 
  4824     1E27                     	;# 
  4825     1E28                     	;# 
  4826     1E29                     	;# 
  4827     1E2A                     	;# 
  4828     1E2B                     	;# 
  4829     1E2C                     	;# 
  4830     1E2D                     	;# 
  4831     1E2E                     	;# 
  4832     1E2F                     	;# 
  4833     1E30                     	;# 
  4834     1E31                     	;# 
  4835     1E32                     	;# 
  4836     1E33                     	;# 
  4837     1E34                     	;# 
  4838     1E35                     	;# 
  4839     1E36                     	;# 
  4840     1E37                     	;# 
  4841     1E8F                     	;# 
  4842     1E90                     	;# 
  4843     1E91                     	;# 
  4844     1E92                     	;# 
  4845     1E93                     	;# 
  4846     1E94                     	;# 
  4847     1E95                     	;# 
  4848     1E96                     	;# 
  4849     1E97                     	;# 
  4850     1E9C                     	;# 
  4851     1E9D                     	;# 
  4852     1E9E                     	;# 
  4853     1EA1                     	;# 
  4854     1EA2                     	;# 
  4855     1EA3                     	;# 
  4856     1EA4                     	;# 
  4857     1EA5                     	;# 
  4858     1EA9                     	;# 
  4859     1EAA                     	;# 
  4860     1EAB                     	;# 
  4861     1EAC                     	;# 
  4862     1EB1                     	;# 
  4863     1EB2                     	;# 
  4864     1EB3                     	;# 
  4865     1EB8                     	;# 
  4866     1EB9                     	;# 
  4867     1EBA                     	;# 
  4868     1EBB                     	;# 
  4869     1EBC                     	;# 
  4870     1EBD                     	;# 
  4871     1EBE                     	;# 
  4872     1EC3                     	;# 
  4873     1EC5                     	;# 
  4874     1EC6                     	;# 
  4875     1EC7                     	;# 
  4876     1EC8                     	;# 
  4877     1EC9                     	;# 
  4878     1ECA                     	;# 
  4879     1ECB                     	;# 
  4880     1ECC                     	;# 
  4881     1ECD                     	;# 
  4882     1ECE                     	;# 
  4883     1F10                     	;# 
  4884     1F11                     	;# 
  4885     1F12                     	;# 
  4886     1F13                     	;# 
  4887     1F14                     	;# 
  4888     1F15                     	;# 
  4889     1F16                     	;# 
  4890     1F17                     	;# 
  4891     1F18                     	;# 
  4892     1F19                     	;# 
  4893     1F1A                     	;# 
  4894     1F1B                     	;# 
  4895     1F1C                     	;# 
  4896     1F1D                     	;# 
  4897     1F1E                     	;# 
  4898     1F1F                     	;# 
  4899     1F20                     	;# 
  4900     1F21                     	;# 
  4901     1F22                     	;# 
  4902     1F23                     	;# 
  4903     1F24                     	;# 
  4904     1F25                     	;# 
  4905     1F26                     	;# 
  4906     1F27                     	;# 
  4907     1F38                     	;# 
  4908     1F39                     	;# 
  4909     1F3A                     	;# 
  4910     1F3B                     	;# 
  4911     1F3C                     	;# 
  4912     1F3D                     	;# 
  4913     1F3E                     	;# 
  4914     1F3F                     	;# 
  4915     1F43                     	;# 
  4916     1F44                     	;# 
  4917     1F45                     	;# 
  4918     1F46                     	;# 
  4919     1F47                     	;# 
  4920     1F48                     	;# 
  4921     1F49                     	;# 
  4922     1F4A                     	;# 
  4923     1F4E                     	;# 
  4924     1F4F                     	;# 
  4925     1F50                     	;# 
  4926     1F51                     	;# 
  4927     1F52                     	;# 
  4928     1F53                     	;# 
  4929     1F54                     	;# 
  4930     1F55                     	;# 
  4931     1F65                     	;# 
  4932     1F66                     	;# 
  4933     1F67                     	;# 
  4934     1F68                     	;# 
  4935     1F69                     	;# 
  4936     1F6A                     	;# 
  4937     1F6B                     	;# 
  4938     1FE4                     	;# 
  4939     1FE5                     	;# 
  4940     1FE6                     	;# 
  4941     1FE7                     	;# 
  4942     1FE8                     	;# 
  4943     1FE8                     	;# 
  4944     1FE9                     	;# 
  4945     1FEA                     	;# 
  4946     1FEB                     	;# 
  4947     1FED                     	;# 
  4948     1FEE                     	;# 
  4949     1FEF                     	;# 
  4950     0000                     	;# 
  4951     0001                     	;# 
  4952     0002                     	;# 
  4953     0003                     	;# 
  4954     0004                     	;# 
  4955     0005                     	;# 
  4956     0006                     	;# 
  4957     0007                     	;# 
  4958     0008                     	;# 
  4959     0009                     	;# 
  4960     000A                     	;# 
  4961     000B                     	;# 
  4962     000C                     	;# 
  4963     000D                     	;# 
  4964     000E                     	;# 
  4965     0010                     	;# 
  4966     0012                     	;# 
  4967     0013                     	;# 
  4968     0014                     	;# 
  4969     0016                     	;# 
  4970     0018                     	;# 
  4971     0019                     	;# 
  4972     001A                     	;# 
  4973     001C                     	;# 
  4974     008C                     	;# 
  4975     008C                     	;# 
  4976     008D                     	;# 
  4977     008E                     	;# 
  4978     008E                     	;# 
  4979     008F                     	;# 
  4980     0090                     	;# 
  4981     0090                     	;# 
  4982     0091                     	;# 
  4983     0092                     	;# 
  4984     0092                     	;# 
  4985     0093                     	;# 
  4986     0094                     	;# 
  4987     0094                     	;# 
  4988     0095                     	;# 
  4989     0096                     	;# 
  4990     0096                     	;# 
  4991     0097                     	;# 
  4992     0098                     	;# 
  4993     0099                     	;# 
  4994     009A                     	;# 
  4995     009B                     	;# 
  4996     009B                     	;# 
  4997     009C                     	;# 
  4998     009D                     	;# 
  4999     009D                     	;# 
  5000     009E                     	;# 
  5001     009F                     	;# 
  5002     010C                     	;# 
  5003     010C                     	;# 
  5004     010D                     	;# 
  5005     010E                     	;# 
  5006     010F                     	;# 
  5007     010F                     	;# 
  5008     0110                     	;# 
  5009     0111                     	;# 
  5010     0112                     	;# 
  5011     0113                     	;# 
  5012     0114                     	;# 
  5013     0115                     	;# 
  5014     0116                     	;# 
  5015     0117                     	;# 
  5016     0118                     	;# 
  5017     0119                     	;# 
  5018     0119                     	;# 
  5019     0119                     	;# 
  5020     011A                     	;# 
  5021     011A                     	;# 
  5022     011A                     	;# 
  5023     011B                     	;# 
  5024     011B                     	;# 
  5025     011B                     	;# 
  5026     011B                     	;# 
  5027     011B                     	;# 
  5028     011C                     	;# 
  5029     011C                     	;# 
  5030     011C                     	;# 
  5031     011D                     	;# 
  5032     011D                     	;# 
  5033     011D                     	;# 
  5034     011E                     	;# 
  5035     011E                     	;# 
  5036     011E                     	;# 
  5037     011F                     	;# 
  5038     011F                     	;# 
  5039     011F                     	;# 
  5040     011F                     	;# 
  5041     011F                     	;# 
  5042     018C                     	;# 
  5043     018D                     	;# 
  5044     018E                     	;# 
  5045     018F                     	;# 
  5046     0190                     	;# 
  5047     0191                     	;# 
  5048     0192                     	;# 
  5049     0196                     	;# 
  5050     0197                     	;# 
  5051     0198                     	;# 
  5052     0199                     	;# 
  5053     019A                     	;# 
  5054     019B                     	;# 
  5055     019C                     	;# 
  5056     020C                     	;# 
  5057     020D                     	;# 
  5058     020E                     	;# 
  5059     020E                     	;# 
  5060     020F                     	;# 
  5061     020F                     	;# 
  5062     0210                     	;# 
  5063     0210                     	;# 
  5064     0211                     	;# 
  5065     0211                     	;# 
  5066     0212                     	;# 
  5067     0213                     	;# 
  5068     0214                     	;# 
  5069     0214                     	;# 
  5070     0215                     	;# 
  5071     0215                     	;# 
  5072     0216                     	;# 
  5073     0216                     	;# 
  5074     0217                     	;# 
  5075     0217                     	;# 
  5076     0218                     	;# 
  5077     0219                     	;# 
  5078     021A                     	;# 
  5079     021A                     	;# 
  5080     021B                     	;# 
  5081     021B                     	;# 
  5082     021C                     	;# 
  5083     021C                     	;# 
  5084     021D                     	;# 
  5085     021D                     	;# 
  5086     021E                     	;# 
  5087     021F                     	;# 
  5088     028C                     	;# 
  5089     028C                     	;# 
  5090     028D                     	;# 
  5091     028D                     	;# 
  5092     028E                     	;# 
  5093     028F                     	;# 
  5094     0290                     	;# 
  5095     0291                     	;# 
  5096     0292                     	;# 
  5097     0292                     	;# 
  5098     0293                     	;# 
  5099     0293                     	;# 
  5100     0294                     	;# 
  5101     0295                     	;# 
  5102     0296                     	;# 
  5103     0297                     	;# 
  5104     0298                     	;# 
  5105     0298                     	;# 
  5106     0299                     	;# 
  5107     0299                     	;# 
  5108     029A                     	;# 
  5109     029B                     	;# 
  5110     029C                     	;# 
  5111     029D                     	;# 
  5112     029F                     	;# 
  5113     030C                     	;# 
  5114     030C                     	;# 
  5115     030D                     	;# 
  5116     030E                     	;# 
  5117     030F                     	;# 
  5118     0310                     	;# 
  5119     0310                     	;# 
  5120     0311                     	;# 
  5121     0312                     	;# 
  5122     0313                     	;# 
  5123     0314                     	;# 
  5124     0314                     	;# 
  5125     0315                     	;# 
  5126     0316                     	;# 
  5127     0317                     	;# 
  5128     0318                     	;# 
  5129     0318                     	;# 
  5130     0319                     	;# 
  5131     031A                     	;# 
  5132     031B                     	;# 
  5133     031C                     	;# 
  5134     031C                     	;# 
  5135     031D                     	;# 
  5136     031E                     	;# 
  5137     031F                     	;# 
  5138     038C                     	;# 
  5139     038C                     	;# 
  5140     038D                     	;# 
  5141     038E                     	;# 
  5142     0390                     	;# 
  5143     0390                     	;# 
  5144     0391                     	;# 
  5145     0392                     	;# 
  5146     048C                     	;# 
  5147     048C                     	;# 
  5148     048D                     	;# 
  5149     048E                     	;# 
  5150     048F                     	;# 
  5151     048F                     	;# 
  5152     0490                     	;# 
  5153     0491                     	;# 
  5154     0492                     	;# 
  5155     0492                     	;# 
  5156     0493                     	;# 
  5157     0494                     	;# 
  5158     0495                     	;# 
  5159     0495                     	;# 
  5160     0496                     	;# 
  5161     0497                     	;# 
  5162     0498                     	;# 
  5163     0499                     	;# 
  5164     049A                     	;# 
  5165     049B                     	;# 
  5166     049C                     	;# 
  5167     049D                     	;# 
  5168     050C                     	;# 
  5169     050C                     	;# 
  5170     050D                     	;# 
  5171     050E                     	;# 
  5172     050F                     	;# 
  5173     050F                     	;# 
  5174     0510                     	;# 
  5175     0511                     	;# 
  5176     0512                     	;# 
  5177     0512                     	;# 
  5178     0513                     	;# 
  5179     0514                     	;# 
  5180     0515                     	;# 
  5181     0515                     	;# 
  5182     0516                     	;# 
  5183     0517                     	;# 
  5184     0518                     	;# 
  5185     0519                     	;# 
  5186     051A                     	;# 
  5187     051B                     	;# 
  5188     051C                     	;# 
  5189     051D                     	;# 
  5190     058C                     	;# 
  5191     058C                     	;# 
  5192     058D                     	;# 
  5193     058E                     	;# 
  5194     058F                     	;# 
  5195     058F                     	;# 
  5196     0590                     	;# 
  5197     0591                     	;# 
  5198     0592                     	;# 
  5199     0593                     	;# 
  5200     059C                     	;# 
  5201     059C                     	;# 
  5202     059D                     	;# 
  5203     059D                     	;# 
  5204     059E                     	;# 
  5205     059F                     	;# 
  5206     060C                     	;# 
  5207     060C                     	;# 
  5208     060D                     	;# 
  5209     060D                     	;# 
  5210     060E                     	;# 
  5211     060F                     	;# 
  5212     0610                     	;# 
  5213     0611                     	;# 
  5214     0612                     	;# 
  5215     0613                     	;# 
  5216     0614                     	;# 
  5217     0616                     	;# 
  5218     0616                     	;# 
  5219     0617                     	;# 
  5220     0617                     	;# 
  5221     0618                     	;# 
  5222     0619                     	;# 
  5223     061A                     	;# 
  5224     061B                     	;# 
  5225     061C                     	;# 
  5226     061D                     	;# 
  5227     061E                     	;# 
  5228     068C                     	;# 
  5229     068D                     	;# 
  5230     068E                     	;# 
  5231     068F                     	;# 
  5232     0690                     	;# 
  5233     0691                     	;# 
  5234     0692                     	;# 
  5235     0693                     	;# 
  5236     0694                     	;# 
  5237     070C                     	;# 
  5238     070D                     	;# 
  5239     070E                     	;# 
  5240     070F                     	;# 
  5241     0710                     	;# 
  5242     0711                     	;# 
  5243     0712                     	;# 
  5244     0713                     	;# 
  5245     0714                     	;# 
  5246     0716                     	;# 
  5247     0717                     	;# 
  5248     0718                     	;# 
  5249     0719                     	;# 
  5250     071A                     	;# 
  5251     071B                     	;# 
  5252     071C                     	;# 
  5253     071D                     	;# 
  5254     071E                     	;# 
  5255     0796                     	;# 
  5256     0797                     	;# 
  5257     0798                     	;# 
  5258     0799                     	;# 
  5259     079A                     	;# 
  5260     079B                     	;# 
  5261     079C                     	;# 
  5262     079D                     	;# 
  5263     080C                     	;# 
  5264     080D                     	;# 
  5265     080E                     	;# 
  5266     080F                     	;# 
  5267     0810                     	;# 
  5268     0811                     	;# 
  5269     0813                     	;# 
  5270     0814                     	;# 
  5271     081A                     	;# 
  5272     081A                     	;# 
  5273     081B                     	;# 
  5274     081C                     	;# 
  5275     081C                     	;# 
  5276     081D                     	;# 
  5277     081E                     	;# 
  5278     081F                     	;# 
  5279     088C                     	;# 
  5280     088D                     	;# 
  5281     088E                     	;# 
  5282     088F                     	;# 
  5283     0890                     	;# 
  5284     0891                     	;# 
  5285     0892                     	;# 
  5286     0893                     	;# 
  5287     0895                     	;# 
  5288     0896                     	;# 
  5289     0897                     	;# 
  5290     0898                     	;# 
  5291     0899                     	;# 
  5292     089A                     	;# 
  5293     089B                     	;# 
  5294     090C                     	;# 
  5295     090E                     	;# 
  5296     090F                     	;# 
  5297     091F                     	;# 
  5298     098F                     	;# 
  5299     098F                     	;# 
  5300     0990                     	;# 
  5301     0991                     	;# 
  5302     0992                     	;# 
  5303     0993                     	;# 
  5304     0994                     	;# 
  5305     0995                     	;# 
  5306     0996                     	;# 
  5307     0997                     	;# 
  5308     0A19                     	;# 
  5309     0A19                     	;# 
  5310     0A1A                     	;# 
  5311     0A1A                     	;# 
  5312     0A1B                     	;# 
  5313     0A1B                     	;# 
  5314     0A1B                     	;# 
  5315     0A1C                     	;# 
  5316     0A1C                     	;# 
  5317     0A1D                     	;# 
  5318     0A1D                     	;# 
  5319     0A1E                     	;# 
  5320     0A1E                     	;# 
  5321     0A1F                     	;# 
  5322     0A1F                     	;# 
  5323     0A1F                     	;# 
  5324     1E0F                     	;# 
  5325     1E10                     	;# 
  5326     1E11                     	;# 
  5327     1E12                     	;# 
  5328     1E13                     	;# 
  5329     1E14                     	;# 
  5330     1E15                     	;# 
  5331     1E16                     	;# 
  5332     1E17                     	;# 
  5333     1E18                     	;# 
  5334     1E19                     	;# 
  5335     1E1A                     	;# 
  5336     1E1B                     	;# 
  5337     1E1C                     	;# 
  5338     1E1D                     	;# 
  5339     1E1E                     	;# 
  5340     1E1F                     	;# 
  5341     1E20                     	;# 
  5342     1E21                     	;# 
  5343     1E22                     	;# 
  5344     1E23                     	;# 
  5345     1E24                     	;# 
  5346     1E25                     	;# 
  5347     1E26                     	;# 
  5348     1E27                     	;# 
  5349     1E28                     	;# 
  5350     1E29                     	;# 
  5351     1E2A                     	;# 
  5352     1E2B                     	;# 
  5353     1E2C                     	;# 
  5354     1E2D                     	;# 
  5355     1E2E                     	;# 
  5356     1E2F                     	;# 
  5357     1E30                     	;# 
  5358     1E31                     	;# 
  5359     1E32                     	;# 
  5360     1E33                     	;# 
  5361     1E34                     	;# 
  5362     1E35                     	;# 
  5363     1E36                     	;# 
  5364     1E37                     	;# 
  5365     1E8F                     	;# 
  5366     1E90                     	;# 
  5367     1E91                     	;# 
  5368     1E92                     	;# 
  5369     1E93                     	;# 
  5370     1E94                     	;# 
  5371     1E95                     	;# 
  5372     1E96                     	;# 
  5373     1E97                     	;# 
  5374     1E9C                     	;# 
  5375     1E9D                     	;# 
  5376     1E9E                     	;# 
  5377     1EA1                     	;# 
  5378     1EA2                     	;# 
  5379     1EA3                     	;# 
  5380     1EA4                     	;# 
  5381     1EA5                     	;# 
  5382     1EA9                     	;# 
  5383     1EAA                     	;# 
  5384     1EAB                     	;# 
  5385     1EAC                     	;# 
  5386     1EB1                     	;# 
  5387     1EB2                     	;# 
  5388     1EB3                     	;# 
  5389     1EB8                     	;# 
  5390     1EB9                     	;# 
  5391     1EBA                     	;# 
  5392     1EBB                     	;# 
  5393     1EBC                     	;# 
  5394     1EBD                     	;# 
  5395     1EBE                     	;# 
  5396     1EC3                     	;# 
  5397     1EC5                     	;# 
  5398     1EC6                     	;# 
  5399     1EC7                     	;# 
  5400     1EC8                     	;# 
  5401     1EC9                     	;# 
  5402     1ECA                     	;# 
  5403     1ECB                     	;# 
  5404     1ECC                     	;# 
  5405     1ECD                     	;# 
  5406     1ECE                     	;# 
  5407     1F10                     	;# 
  5408     1F11                     	;# 
  5409     1F12                     	;# 
  5410     1F13                     	;# 
  5411     1F14                     	;# 
  5412     1F15                     	;# 
  5413     1F16                     	;# 
  5414     1F17                     	;# 
  5415     1F18                     	;# 
  5416     1F19                     	;# 
  5417     1F1A                     	;# 
  5418     1F1B                     	;# 
  5419     1F1C                     	;# 
  5420     1F1D                     	;# 
  5421     1F1E                     	;# 
  5422     1F1F                     	;# 
  5423     1F20                     	;# 
  5424     1F21                     	;# 
  5425     1F22                     	;# 
  5426     1F23                     	;# 
  5427     1F24                     	;# 
  5428     1F25                     	;# 
  5429     1F26                     	;# 
  5430     1F27                     	;# 
  5431     1F38                     	;# 
  5432     1F39                     	;# 
  5433     1F3A                     	;# 
  5434     1F3B                     	;# 
  5435     1F3C                     	;# 
  5436     1F3D                     	;# 
  5437     1F3E                     	;# 
  5438     1F3F                     	;# 
  5439     1F43                     	;# 
  5440     1F44                     	;# 
  5441     1F45                     	;# 
  5442     1F46                     	;# 
  5443     1F47                     	;# 
  5444     1F48                     	;# 
  5445     1F49                     	;# 
  5446     1F4A                     	;# 
  5447     1F4E                     	;# 
  5448     1F4F                     	;# 
  5449     1F50                     	;# 
  5450     1F51                     	;# 
  5451     1F52                     	;# 
  5452     1F53                     	;# 
  5453     1F54                     	;# 
  5454     1F55                     	;# 
  5455     1F65                     	;# 
  5456     1F66                     	;# 
  5457     1F67                     	;# 
  5458     1F68                     	;# 
  5459     1F69                     	;# 
  5460     1F6A                     	;# 
  5461     1F6B                     	;# 
  5462     1FE4                     	;# 
  5463     1FE5                     	;# 
  5464     1FE6                     	;# 
  5465     1FE7                     	;# 
  5466     1FE8                     	;# 
  5467     1FE8                     	;# 
  5468     1FE9                     	;# 
  5469     1FEA                     	;# 
  5470     1FEB                     	;# 
  5471     1FED                     	;# 
  5472     1FEE                     	;# 
  5473     1FEF                     	;# 
  5474     0000                     	;# 
  5475     0001                     	;# 
  5476     0002                     	;# 
  5477     0003                     	;# 
  5478     0004                     	;# 
  5479     0005                     	;# 
  5480     0006                     	;# 
  5481     0007                     	;# 
  5482     0008                     	;# 
  5483     0009                     	;# 
  5484     000A                     	;# 
  5485     000B                     	;# 
  5486     000C                     	;# 
  5487     000D                     	;# 
  5488     000E                     	;# 
  5489     0010                     	;# 
  5490     0012                     	;# 
  5491     0013                     	;# 
  5492     0014                     	;# 
  5493     0016                     	;# 
  5494     0018                     	;# 
  5495     0019                     	;# 
  5496     001A                     	;# 
  5497     001C                     	;# 
  5498     008C                     	;# 
  5499     008C                     	;# 
  5500     008D                     	;# 
  5501     008E                     	;# 
  5502     008E                     	;# 
  5503     008F                     	;# 
  5504     0090                     	;# 
  5505     0090                     	;# 
  5506     0091                     	;# 
  5507     0092                     	;# 
  5508     0092                     	;# 
  5509     0093                     	;# 
  5510     0094                     	;# 
  5511     0094                     	;# 
  5512     0095                     	;# 
  5513     0096                     	;# 
  5514     0096                     	;# 
  5515     0097                     	;# 
  5516     0098                     	;# 
  5517     0099                     	;# 
  5518     009A                     	;# 
  5519     009B                     	;# 
  5520     009B                     	;# 
  5521     009C                     	;# 
  5522     009D                     	;# 
  5523     009D                     	;# 
  5524     009E                     	;# 
  5525     009F                     	;# 
  5526     010C                     	;# 
  5527     010C                     	;# 
  5528     010D                     	;# 
  5529     010E                     	;# 
  5530     010F                     	;# 
  5531     010F                     	;# 
  5532     0110                     	;# 
  5533     0111                     	;# 
  5534     0112                     	;# 
  5535     0113                     	;# 
  5536     0114                     	;# 
  5537     0115                     	;# 
  5538     0116                     	;# 
  5539     0117                     	;# 
  5540     0118                     	;# 
  5541     0119                     	;# 
  5542     0119                     	;# 
  5543     0119                     	;# 
  5544     011A                     	;# 
  5545     011A                     	;# 
  5546     011A                     	;# 
  5547     011B                     	;# 
  5548     011B                     	;# 
  5549     011B                     	;# 
  5550     011B                     	;# 
  5551     011B                     	;# 
  5552     011C                     	;# 
  5553     011C                     	;# 
  5554     011C                     	;# 
  5555     011D                     	;# 
  5556     011D                     	;# 
  5557     011D                     	;# 
  5558     011E                     	;# 
  5559     011E                     	;# 
  5560     011E                     	;# 
  5561     011F                     	;# 
  5562     011F                     	;# 
  5563     011F                     	;# 
  5564     011F                     	;# 
  5565     011F                     	;# 
  5566     018C                     	;# 
  5567     018D                     	;# 
  5568     018E                     	;# 
  5569     018F                     	;# 
  5570     0190                     	;# 
  5571     0191                     	;# 
  5572     0192                     	;# 
  5573     0196                     	;# 
  5574     0197                     	;# 
  5575     0198                     	;# 
  5576     0199                     	;# 
  5577     019A                     	;# 
  5578     019B                     	;# 
  5579     019C                     	;# 
  5580     020C                     	;# 
  5581     020D                     	;# 
  5582     020E                     	;# 
  5583     020E                     	;# 
  5584     020F                     	;# 
  5585     020F                     	;# 
  5586     0210                     	;# 
  5587     0210                     	;# 
  5588     0211                     	;# 
  5589     0211                     	;# 
  5590     0212                     	;# 
  5591     0213                     	;# 
  5592     0214                     	;# 
  5593     0214                     	;# 
  5594     0215                     	;# 
  5595     0215                     	;# 
  5596     0216                     	;# 
  5597     0216                     	;# 
  5598     0217                     	;# 
  5599     0217                     	;# 
  5600     0218                     	;# 
  5601     0219                     	;# 
  5602     021A                     	;# 
  5603     021A                     	;# 
  5604     021B                     	;# 
  5605     021B                     	;# 
  5606     021C                     	;# 
  5607     021C                     	;# 
  5608     021D                     	;# 
  5609     021D                     	;# 
  5610     021E                     	;# 
  5611     021F                     	;# 
  5612     028C                     	;# 
  5613     028C                     	;# 
  5614     028D                     	;# 
  5615     028D                     	;# 
  5616     028E                     	;# 
  5617     028F                     	;# 
  5618     0290                     	;# 
  5619     0291                     	;# 
  5620     0292                     	;# 
  5621     0292                     	;# 
  5622     0293                     	;# 
  5623     0293                     	;# 
  5624     0294                     	;# 
  5625     0295                     	;# 
  5626     0296                     	;# 
  5627     0297                     	;# 
  5628     0298                     	;# 
  5629     0298                     	;# 
  5630     0299                     	;# 
  5631     0299                     	;# 
  5632     029A                     	;# 
  5633     029B                     	;# 
  5634     029C                     	;# 
  5635     029D                     	;# 
  5636     029F                     	;# 
  5637     030C                     	;# 
  5638     030C                     	;# 
  5639     030D                     	;# 
  5640     030E                     	;# 
  5641     030F                     	;# 
  5642     0310                     	;# 
  5643     0310                     	;# 
  5644     0311                     	;# 
  5645     0312                     	;# 
  5646     0313                     	;# 
  5647     0314                     	;# 
  5648     0314                     	;# 
  5649     0315                     	;# 
  5650     0316                     	;# 
  5651     0317                     	;# 
  5652     0318                     	;# 
  5653     0318                     	;# 
  5654     0319                     	;# 
  5655     031A                     	;# 
  5656     031B                     	;# 
  5657     031C                     	;# 
  5658     031C                     	;# 
  5659     031D                     	;# 
  5660     031E                     	;# 
  5661     031F                     	;# 
  5662     038C                     	;# 
  5663     038C                     	;# 
  5664     038D                     	;# 
  5665     038E                     	;# 
  5666     0390                     	;# 
  5667     0390                     	;# 
  5668     0391                     	;# 
  5669     0392                     	;# 
  5670     048C                     	;# 
  5671     048C                     	;# 
  5672     048D                     	;# 
  5673     048E                     	;# 
  5674     048F                     	;# 
  5675     048F                     	;# 
  5676     0490                     	;# 
  5677     0491                     	;# 
  5678     0492                     	;# 
  5679     0492                     	;# 
  5680     0493                     	;# 
  5681     0494                     	;# 
  5682     0495                     	;# 
  5683     0495                     	;# 
  5684     0496                     	;# 
  5685     0497                     	;# 
  5686     0498                     	;# 
  5687     0499                     	;# 
  5688     049A                     	;# 
  5689     049B                     	;# 
  5690     049C                     	;# 
  5691     049D                     	;# 
  5692     050C                     	;# 
  5693     050C                     	;# 
  5694     050D                     	;# 
  5695     050E                     	;# 
  5696     050F                     	;# 
  5697     050F                     	;# 
  5698     0510                     	;# 
  5699     0511                     	;# 
  5700     0512                     	;# 
  5701     0512                     	;# 
  5702     0513                     	;# 
  5703     0514                     	;# 
  5704     0515                     	;# 
  5705     0515                     	;# 
  5706     0516                     	;# 
  5707     0517                     	;# 
  5708     0518                     	;# 
  5709     0519                     	;# 
  5710     051A                     	;# 
  5711     051B                     	;# 
  5712     051C                     	;# 
  5713     051D                     	;# 
  5714     058C                     	;# 
  5715     058C                     	;# 
  5716     058D                     	;# 
  5717     058E                     	;# 
  5718     058F                     	;# 
  5719     058F                     	;# 
  5720     0590                     	;# 
  5721     0591                     	;# 
  5722     0592                     	;# 
  5723     0593                     	;# 
  5724     059C                     	;# 
  5725     059C                     	;# 
  5726     059D                     	;# 
  5727     059D                     	;# 
  5728     059E                     	;# 
  5729     059F                     	;# 
  5730     060C                     	;# 
  5731     060C                     	;# 
  5732     060D                     	;# 
  5733     060D                     	;# 
  5734     060E                     	;# 
  5735     060F                     	;# 
  5736     0610                     	;# 
  5737     0611                     	;# 
  5738     0612                     	;# 
  5739     0613                     	;# 
  5740     0614                     	;# 
  5741     0616                     	;# 
  5742     0616                     	;# 
  5743     0617                     	;# 
  5744     0617                     	;# 
  5745     0618                     	;# 
  5746     0619                     	;# 
  5747     061A                     	;# 
  5748     061B                     	;# 
  5749     061C                     	;# 
  5750     061D                     	;# 
  5751     061E                     	;# 
  5752     068C                     	;# 
  5753     068D                     	;# 
  5754     068E                     	;# 
  5755     068F                     	;# 
  5756     0690                     	;# 
  5757     0691                     	;# 
  5758     0692                     	;# 
  5759     0693                     	;# 
  5760     0694                     	;# 
  5761     070C                     	;# 
  5762     070D                     	;# 
  5763     070E                     	;# 
  5764     070F                     	;# 
  5765     0710                     	;# 
  5766     0711                     	;# 
  5767     0712                     	;# 
  5768     0713                     	;# 
  5769     0714                     	;# 
  5770     0716                     	;# 
  5771     0717                     	;# 
  5772     0718                     	;# 
  5773     0719                     	;# 
  5774     071A                     	;# 
  5775     071B                     	;# 
  5776     071C                     	;# 
  5777     071D                     	;# 
  5778     071E                     	;# 
  5779     0796                     	;# 
  5780     0797                     	;# 
  5781     0798                     	;# 
  5782     0799                     	;# 
  5783     079A                     	;# 
  5784     079B                     	;# 
  5785     079C                     	;# 
  5786     079D                     	;# 
  5787     080C                     	;# 
  5788     080D                     	;# 
  5789     080E                     	;# 
  5790     080F                     	;# 
  5791     0810                     	;# 
  5792     0811                     	;# 
  5793     0813                     	;# 
  5794     0814                     	;# 
  5795     081A                     	;# 
  5796     081A                     	;# 
  5797     081B                     	;# 
  5798     081C                     	;# 
  5799     081C                     	;# 
  5800     081D                     	;# 
  5801     081E                     	;# 
  5802     081F                     	;# 
  5803     088C                     	;# 
  5804     088D                     	;# 
  5805     088E                     	;# 
  5806     088F                     	;# 
  5807     0890                     	;# 
  5808     0891                     	;# 
  5809     0892                     	;# 
  5810     0893                     	;# 
  5811     0895                     	;# 
  5812     0896                     	;# 
  5813     0897                     	;# 
  5814     0898                     	;# 
  5815     0899                     	;# 
  5816     089A                     	;# 
  5817     089B                     	;# 
  5818     090C                     	;# 
  5819     090E                     	;# 
  5820     090F                     	;# 
  5821     091F                     	;# 
  5822     098F                     	;# 
  5823     098F                     	;# 
  5824     0990                     	;# 
  5825     0991                     	;# 
  5826     0992                     	;# 
  5827     0993                     	;# 
  5828     0994                     	;# 
  5829     0995                     	;# 
  5830     0996                     	;# 
  5831     0997                     	;# 
  5832     0A19                     	;# 
  5833     0A19                     	;# 
  5834     0A1A                     	;# 
  5835     0A1A                     	;# 
  5836     0A1B                     	;# 
  5837     0A1B                     	;# 
  5838     0A1B                     	;# 
  5839     0A1C                     	;# 
  5840     0A1C                     	;# 
  5841     0A1D                     	;# 
  5842     0A1D                     	;# 
  5843     0A1E                     	;# 
  5844     0A1E                     	;# 
  5845     0A1F                     	;# 
  5846     0A1F                     	;# 
  5847     0A1F                     	;# 
  5848     1E0F                     	;# 
  5849     1E10                     	;# 
  5850     1E11                     	;# 
  5851     1E12                     	;# 
  5852     1E13                     	;# 
  5853     1E14                     	;# 
  5854     1E15                     	;# 
  5855     1E16                     	;# 
  5856     1E17                     	;# 
  5857     1E18                     	;# 
  5858     1E19                     	;# 
  5859     1E1A                     	;# 
  5860     1E1B                     	;# 
  5861     1E1C                     	;# 
  5862     1E1D                     	;# 
  5863     1E1E                     	;# 
  5864     1E1F                     	;# 
  5865     1E20                     	;# 
  5866     1E21                     	;# 
  5867     1E22                     	;# 
  5868     1E23                     	;# 
  5869     1E24                     	;# 
  5870     1E25                     	;# 
  5871     1E26                     	;# 
  5872     1E27                     	;# 
  5873     1E28                     	;# 
  5874     1E29                     	;# 
  5875     1E2A                     	;# 
  5876     1E2B                     	;# 
  5877     1E2C                     	;# 
  5878     1E2D                     	;# 
  5879     1E2E                     	;# 
  5880     1E2F                     	;# 
  5881     1E30                     	;# 
  5882     1E31                     	;# 
  5883     1E32                     	;# 
  5884     1E33                     	;# 
  5885     1E34                     	;# 
  5886     1E35                     	;# 
  5887     1E36                     	;# 
  5888     1E37                     	;# 
  5889     1E8F                     	;# 
  5890     1E90                     	;# 
  5891     1E91                     	;# 
  5892     1E92                     	;# 
  5893     1E93                     	;# 
  5894     1E94                     	;# 
  5895     1E95                     	;# 
  5896     1E96                     	;# 
  5897     1E97                     	;# 
  5898     1E9C                     	;# 
  5899     1E9D                     	;# 
  5900     1E9E                     	;# 
  5901     1EA1                     	;# 
  5902     1EA2                     	;# 
  5903     1EA3                     	;# 
  5904     1EA4                     	;# 
  5905     1EA5                     	;# 
  5906     1EA9                     	;# 
  5907     1EAA                     	;# 
  5908     1EAB                     	;# 
  5909     1EAC                     	;# 
  5910     1EB1                     	;# 
  5911     1EB2                     	;# 
  5912     1EB3                     	;# 
  5913     1EB8                     	;# 
  5914     1EB9                     	;# 
  5915     1EBA                     	;# 
  5916     1EBB                     	;# 
  5917     1EBC                     	;# 
  5918     1EBD                     	;# 
  5919     1EBE                     	;# 
  5920     1EC3                     	;# 
  5921     1EC5                     	;# 
  5922     1EC6                     	;# 
  5923     1EC7                     	;# 
  5924     1EC8                     	;# 
  5925     1EC9                     	;# 
  5926     1ECA                     	;# 
  5927     1ECB                     	;# 
  5928     1ECC                     	;# 
  5929     1ECD                     	;# 
  5930     1ECE                     	;# 
  5931     1F10                     	;# 
  5932     1F11                     	;# 
  5933     1F12                     	;# 
  5934     1F13                     	;# 
  5935     1F14                     	;# 
  5936     1F15                     	;# 
  5937     1F16                     	;# 
  5938     1F17                     	;# 
  5939     1F18                     	;# 
  5940     1F19                     	;# 
  5941     1F1A                     	;# 
  5942     1F1B                     	;# 
  5943     1F1C                     	;# 
  5944     1F1D                     	;# 
  5945     1F1E                     	;# 
  5946     1F1F                     	;# 
  5947     1F20                     	;# 
  5948     1F21                     	;# 
  5949     1F22                     	;# 
  5950     1F23                     	;# 
  5951     1F24                     	;# 
  5952     1F25                     	;# 
  5953     1F26                     	;# 
  5954     1F27                     	;# 
  5955     1F38                     	;# 
  5956     1F39                     	;# 
  5957     1F3A                     	;# 
  5958     1F3B                     	;# 
  5959     1F3C                     	;# 
  5960     1F3D                     	;# 
  5961     1F3E                     	;# 
  5962     1F3F                     	;# 
  5963     1F43                     	;# 
  5964     1F44                     	;# 
  5965     1F45                     	;# 
  5966     1F46                     	;# 
  5967     1F47                     	;# 
  5968     1F48                     	;# 
  5969     1F49                     	;# 
  5970     1F4A                     	;# 
  5971     1F4E                     	;# 
  5972     1F4F                     	;# 
  5973     1F50                     	;# 
  5974     1F51                     	;# 
  5975     1F52                     	;# 
  5976     1F53                     	;# 
  5977     1F54                     	;# 
  5978     1F55                     	;# 
  5979     1F65                     	;# 
  5980     1F66                     	;# 
  5981     1F67                     	;# 
  5982     1F68                     	;# 
  5983     1F69                     	;# 
  5984     1F6A                     	;# 
  5985     1F6B                     	;# 
  5986     1FE4                     	;# 
  5987     1FE5                     	;# 
  5988     1FE6                     	;# 
  5989     1FE7                     	;# 
  5990     1FE8                     	;# 
  5991     1FE8                     	;# 
  5992     1FE9                     	;# 
  5993     1FEA                     	;# 
  5994     1FEB                     	;# 
  5995     1FED                     	;# 
  5996     1FEE                     	;# 
  5997     1FEF                     	;# 
  5998     0000                     	;# 
  5999     0001                     	;# 
  6000     0002                     	;# 
  6001     0003                     	;# 
  6002     0004                     	;# 
  6003     0005                     	;# 
  6004     0006                     	;# 
  6005     0007                     	;# 
  6006     0008                     	;# 
  6007     0009                     	;# 
  6008     000A                     	;# 
  6009     000B                     	;# 
  6010     000C                     	;# 
  6011     000D                     	;# 
  6012     000E                     	;# 
  6013     0010                     	;# 
  6014     0012                     	;# 
  6015     0013                     	;# 
  6016     0014                     	;# 
  6017     0016                     	;# 
  6018     0018                     	;# 
  6019     0019                     	;# 
  6020     001A                     	;# 
  6021     001C                     	;# 
  6022     008C                     	;# 
  6023     008C                     	;# 
  6024     008D                     	;# 
  6025     008E                     	;# 
  6026     008E                     	;# 
  6027     008F                     	;# 
  6028     0090                     	;# 
  6029     0090                     	;# 
  6030     0091                     	;# 
  6031     0092                     	;# 
  6032     0092                     	;# 
  6033     0093                     	;# 
  6034     0094                     	;# 
  6035     0094                     	;# 
  6036     0095                     	;# 
  6037     0096                     	;# 
  6038     0096                     	;# 
  6039     0097                     	;# 
  6040     0098                     	;# 
  6041     0099                     	;# 
  6042     009A                     	;# 
  6043     009B                     	;# 
  6044     009B                     	;# 
  6045     009C                     	;# 
  6046     009D                     	;# 
  6047     009D                     	;# 
  6048     009E                     	;# 
  6049     009F                     	;# 
  6050     010C                     	;# 
  6051     010C                     	;# 
  6052     010D                     	;# 
  6053     010E                     	;# 
  6054     010F                     	;# 
  6055     010F                     	;# 
  6056     0110                     	;# 
  6057     0111                     	;# 
  6058     0112                     	;# 
  6059     0113                     	;# 
  6060     0114                     	;# 
  6061     0115                     	;# 
  6062     0116                     	;# 
  6063     0117                     	;# 
  6064     0118                     	;# 
  6065     0119                     	;# 
  6066     0119                     	;# 
  6067     0119                     	;# 
  6068     011A                     	;# 
  6069     011A                     	;# 
  6070     011A                     	;# 
  6071     011B                     	;# 
  6072     011B                     	;# 
  6073     011B                     	;# 
  6074     011B                     	;# 
  6075     011B                     	;# 
  6076     011C                     	;# 
  6077     011C                     	;# 
  6078     011C                     	;# 
  6079     011D                     	;# 
  6080     011D                     	;# 
  6081     011D                     	;# 
  6082     011E                     	;# 
  6083     011E                     	;# 
  6084     011E                     	;# 
  6085     011F                     	;# 
  6086     011F                     	;# 
  6087     011F                     	;# 
  6088     011F                     	;# 
  6089     011F                     	;# 
  6090     018C                     	;# 
  6091     018D                     	;# 
  6092     018E                     	;# 
  6093     018F                     	;# 
  6094     0190                     	;# 
  6095     0191                     	;# 
  6096     0192                     	;# 
  6097     0196                     	;# 
  6098     0197                     	;# 
  6099     0198                     	;# 
  6100     0199                     	;# 
  6101     019A                     	;# 
  6102     019B                     	;# 
  6103     019C                     	;# 
  6104     020C                     	;# 
  6105     020D                     	;# 
  6106     020E                     	;# 
  6107     020E                     	;# 
  6108     020F                     	;# 
  6109     020F                     	;# 
  6110     0210                     	;# 
  6111     0210                     	;# 
  6112     0211                     	;# 
  6113     0211                     	;# 
  6114     0212                     	;# 
  6115     0213                     	;# 
  6116     0214                     	;# 
  6117     0214                     	;# 
  6118     0215                     	;# 
  6119     0215                     	;# 
  6120     0216                     	;# 
  6121     0216                     	;# 
  6122     0217                     	;# 
  6123     0217                     	;# 
  6124     0218                     	;# 
  6125     0219                     	;# 
  6126     021A                     	;# 
  6127     021A                     	;# 
  6128     021B                     	;# 
  6129     021B                     	;# 
  6130     021C                     	;# 
  6131     021C                     	;# 
  6132     021D                     	;# 
  6133     021D                     	;# 
  6134     021E                     	;# 
  6135     021F                     	;# 
  6136     028C                     	;# 
  6137     028C                     	;# 
  6138     028D                     	;# 
  6139     028D                     	;# 
  6140     028E                     	;# 
  6141     028F                     	;# 
  6142     0290                     	;# 
  6143     0291                     	;# 
  6144     0292                     	;# 
  6145     0292                     	;# 
  6146     0293                     	;# 
  6147     0293                     	;# 
  6148     0294                     	;# 
  6149     0295                     	;# 
  6150     0296                     	;# 
  6151     0297                     	;# 
  6152     0298                     	;# 
  6153     0298                     	;# 
  6154     0299                     	;# 
  6155     0299                     	;# 
  6156     029A                     	;# 
  6157     029B                     	;# 
  6158     029C                     	;# 
  6159     029D                     	;# 
  6160     029F                     	;# 
  6161     030C                     	;# 
  6162     030C                     	;# 
  6163     030D                     	;# 
  6164     030E                     	;# 
  6165     030F                     	;# 
  6166     0310                     	;# 
  6167     0310                     	;# 
  6168     0311                     	;# 
  6169     0312                     	;# 
  6170     0313                     	;# 
  6171     0314                     	;# 
  6172     0314                     	;# 
  6173     0315                     	;# 
  6174     0316                     	;# 
  6175     0317                     	;# 
  6176     0318                     	;# 
  6177     0318                     	;# 
  6178     0319                     	;# 
  6179     031A                     	;# 
  6180     031B                     	;# 
  6181     031C                     	;# 
  6182     031C                     	;# 
  6183     031D                     	;# 
  6184     031E                     	;# 
  6185     031F                     	;# 
  6186     038C                     	;# 
  6187     038C                     	;# 
  6188     038D                     	;# 
  6189     038E                     	;# 
  6190     0390                     	;# 
  6191     0390                     	;# 
  6192     0391                     	;# 
  6193     0392                     	;# 
  6194     048C                     	;# 
  6195     048C                     	;# 
  6196     048D                     	;# 
  6197     048E                     	;# 
  6198     048F                     	;# 
  6199     048F                     	;# 
  6200     0490                     	;# 
  6201     0491                     	;# 
  6202     0492                     	;# 
  6203     0492                     	;# 
  6204     0493                     	;# 
  6205     0494                     	;# 
  6206     0495                     	;# 
  6207     0495                     	;# 
  6208     0496                     	;# 
  6209     0497                     	;# 
  6210     0498                     	;# 
  6211     0499                     	;# 
  6212     049A                     	;# 
  6213     049B                     	;# 
  6214     049C                     	;# 
  6215     049D                     	;# 
  6216     050C                     	;# 
  6217     050C                     	;# 
  6218     050D                     	;# 
  6219     050E                     	;# 
  6220     050F                     	;# 
  6221     050F                     	;# 
  6222     0510                     	;# 
  6223     0511                     	;# 
  6224     0512                     	;# 
  6225     0512                     	;# 
  6226     0513                     	;# 
  6227     0514                     	;# 
  6228     0515                     	;# 
  6229     0515                     	;# 
  6230     0516                     	;# 
  6231     0517                     	;# 
  6232     0518                     	;# 
  6233     0519                     	;# 
  6234     051A                     	;# 
  6235     051B                     	;# 
  6236     051C                     	;# 
  6237     051D                     	;# 
  6238     058C                     	;# 
  6239     058C                     	;# 
  6240     058D                     	;# 
  6241     058E                     	;# 
  6242     058F                     	;# 
  6243     058F                     	;# 
  6244     0590                     	;# 
  6245     0591                     	;# 
  6246     0592                     	;# 
  6247     0593                     	;# 
  6248     059C                     	;# 
  6249     059C                     	;# 
  6250     059D                     	;# 
  6251     059D                     	;# 
  6252     059E                     	;# 
  6253     059F                     	;# 
  6254     060C                     	;# 
  6255     060C                     	;# 
  6256     060D                     	;# 
  6257     060D                     	;# 
  6258     060E                     	;# 
  6259     060F                     	;# 
  6260     0610                     	;# 
  6261     0611                     	;# 
  6262     0612                     	;# 
  6263     0613                     	;# 
  6264     0614                     	;# 
  6265     0616                     	;# 
  6266     0616                     	;# 
  6267     0617                     	;# 
  6268     0617                     	;# 
  6269     0618                     	;# 
  6270     0619                     	;# 
  6271     061A                     	;# 
  6272     061B                     	;# 
  6273     061C                     	;# 
  6274     061D                     	;# 
  6275     061E                     	;# 
  6276     068C                     	;# 
  6277     068D                     	;# 
  6278     068E                     	;# 
  6279     068F                     	;# 
  6280     0690                     	;# 
  6281     0691                     	;# 
  6282     0692                     	;# 
  6283     0693                     	;# 
  6284     0694                     	;# 
  6285     070C                     	;# 
  6286     070D                     	;# 
  6287     070E                     	;# 
  6288     070F                     	;# 
  6289     0710                     	;# 
  6290     0711                     	;# 
  6291     0712                     	;# 
  6292     0713                     	;# 
  6293     0714                     	;# 
  6294     0716                     	;# 
  6295     0717                     	;# 
  6296     0718                     	;# 
  6297     0719                     	;# 
  6298     071A                     	;# 
  6299     071B                     	;# 
  6300     071C                     	;# 
  6301     071D                     	;# 
  6302     071E                     	;# 
  6303     0796                     	;# 
  6304     0797                     	;# 
  6305     0798                     	;# 
  6306     0799                     	;# 
  6307     079A                     	;# 
  6308     079B                     	;# 
  6309     079C                     	;# 
  6310     079D                     	;# 
  6311     080C                     	;# 
  6312     080D                     	;# 
  6313     080E                     	;# 
  6314     080F                     	;# 
  6315     0810                     	;# 
  6316     0811                     	;# 
  6317     0813                     	;# 
  6318     0814                     	;# 
  6319     081A                     	;# 
  6320     081A                     	;# 
  6321     081B                     	;# 
  6322     081C                     	;# 
  6323     081C                     	;# 
  6324     081D                     	;# 
  6325     081E                     	;# 
  6326     081F                     	;# 
  6327     088C                     	;# 
  6328     088D                     	;# 
  6329     088E                     	;# 
  6330     088F                     	;# 
  6331     0890                     	;# 
  6332     0891                     	;# 
  6333     0892                     	;# 
  6334     0893                     	;# 
  6335     0895                     	;# 
  6336     0896                     	;# 
  6337     0897                     	;# 
  6338     0898                     	;# 
  6339     0899                     	;# 
  6340     089A                     	;# 
  6341     089B                     	;# 
  6342     090C                     	;# 
  6343     090E                     	;# 
  6344     090F                     	;# 
  6345     091F                     	;# 
  6346     098F                     	;# 
  6347     098F                     	;# 
  6348     0990                     	;# 
  6349     0991                     	;# 
  6350     0992                     	;# 
  6351     0993                     	;# 
  6352     0994                     	;# 
  6353     0995                     	;# 
  6354     0996                     	;# 
  6355     0997                     	;# 
  6356     0A19                     	;# 
  6357     0A19                     	;# 
  6358     0A1A                     	;# 
  6359     0A1A                     	;# 
  6360     0A1B                     	;# 
  6361     0A1B                     	;# 
  6362     0A1B                     	;# 
  6363     0A1C                     	;# 
  6364     0A1C                     	;# 
  6365     0A1D                     	;# 
  6366     0A1D                     	;# 
  6367     0A1E                     	;# 
  6368     0A1E                     	;# 
  6369     0A1F                     	;# 
  6370     0A1F                     	;# 
  6371     0A1F                     	;# 
  6372     1E0F                     	;# 
  6373     1E10                     	;# 
  6374     1E11                     	;# 
  6375     1E12                     	;# 
  6376     1E13                     	;# 
  6377     1E14                     	;# 
  6378     1E15                     	;# 
  6379     1E16                     	;# 
  6380     1E17                     	;# 
  6381     1E18                     	;# 
  6382     1E19                     	;# 
  6383     1E1A                     	;# 
  6384     1E1B                     	;# 
  6385     1E1C                     	;# 
  6386     1E1D                     	;# 
  6387     1E1E                     	;# 
  6388     1E1F                     	;# 
  6389     1E20                     	;# 
  6390     1E21                     	;# 
  6391     1E22                     	;# 
  6392     1E23                     	;# 
  6393     1E24                     	;# 
  6394     1E25                     	;# 
  6395     1E26                     	;# 
  6396     1E27                     	;# 
  6397     1E28                     	;# 
  6398     1E29                     	;# 
  6399     1E2A                     	;# 
  6400     1E2B                     	;# 
  6401     1E2C                     	;# 
  6402     1E2D                     	;# 
  6403     1E2E                     	;# 
  6404     1E2F                     	;# 
  6405     1E30                     	;# 
  6406     1E31                     	;# 
  6407     1E32                     	;# 
  6408     1E33                     	;# 
  6409     1E34                     	;# 
  6410     1E35                     	;# 
  6411     1E36                     	;# 
  6412     1E37                     	;# 
  6413     1E8F                     	;# 
  6414     1E90                     	;# 
  6415     1E91                     	;# 
  6416     1E92                     	;# 
  6417     1E93                     	;# 
  6418     1E94                     	;# 
  6419     1E95                     	;# 
  6420     1E96                     	;# 
  6421     1E97                     	;# 
  6422     1E9C                     	;# 
  6423     1E9D                     	;# 
  6424     1E9E                     	;# 
  6425     1EA1                     	;# 
  6426     1EA2                     	;# 
  6427     1EA3                     	;# 
  6428     1EA4                     	;# 
  6429     1EA5                     	;# 
  6430     1EA9                     	;# 
  6431     1EAA                     	;# 
  6432     1EAB                     	;# 
  6433     1EAC                     	;# 
  6434     1EB1                     	;# 
  6435     1EB2                     	;# 
  6436     1EB3                     	;# 
  6437     1EB8                     	;# 
  6438     1EB9                     	;# 
  6439     1EBA                     	;# 
  6440     1EBB                     	;# 
  6441     1EBC                     	;# 
  6442     1EBD                     	;# 
  6443     1EBE                     	;# 
  6444     1EC3                     	;# 
  6445     1EC5                     	;# 
  6446     1EC6                     	;# 
  6447     1EC7                     	;# 
  6448     1EC8                     	;# 
  6449     1EC9                     	;# 
  6450     1ECA                     	;# 
  6451     1ECB                     	;# 
  6452     1ECC                     	;# 
  6453     1ECD                     	;# 
  6454     1ECE                     	;# 
  6455     1F10                     	;# 
  6456     1F11                     	;# 
  6457     1F12                     	;# 
  6458     1F13                     	;# 
  6459     1F14                     	;# 
  6460     1F15                     	;# 
  6461     1F16                     	;# 
  6462     1F17                     	;# 
  6463     1F18                     	;# 
  6464     1F19                     	;# 
  6465     1F1A                     	;# 
  6466     1F1B                     	;# 
  6467     1F1C                     	;# 
  6468     1F1D                     	;# 
  6469     1F1E                     	;# 
  6470     1F1F                     	;# 
  6471     1F20                     	;# 
  6472     1F21                     	;# 
  6473     1F22                     	;# 
  6474     1F23                     	;# 
  6475     1F24                     	;# 
  6476     1F25                     	;# 
  6477     1F26                     	;# 
  6478     1F27                     	;# 
  6479     1F38                     	;# 
  6480     1F39                     	;# 
  6481     1F3A                     	;# 
  6482     1F3B                     	;# 
  6483     1F3C                     	;# 
  6484     1F3D                     	;# 
  6485     1F3E                     	;# 
  6486     1F3F                     	;# 
  6487     1F43                     	;# 
  6488     1F44                     	;# 
  6489     1F45                     	;# 
  6490     1F46                     	;# 
  6491     1F47                     	;# 
  6492     1F48                     	;# 
  6493     1F49                     	;# 
  6494     1F4A                     	;# 
  6495     1F4E                     	;# 
  6496     1F4F                     	;# 
  6497     1F50                     	;# 
  6498     1F51                     	;# 
  6499     1F52                     	;# 
  6500     1F53                     	;# 
  6501     1F54                     	;# 
  6502     1F55                     	;# 
  6503     1F65                     	;# 
  6504     1F66                     	;# 
  6505     1F67                     	;# 
  6506     1F68                     	;# 
  6507     1F69                     	;# 
  6508     1F6A                     	;# 
  6509     1F6B                     	;# 
  6510     1FE4                     	;# 
  6511     1FE5                     	;# 
  6512     1FE6                     	;# 
  6513     1FE7                     	;# 
  6514     1FE8                     	;# 
  6515     1FE8                     	;# 
  6516     1FE9                     	;# 
  6517     1FEA                     	;# 
  6518     1FEB                     	;# 
  6519     1FED                     	;# 
  6520     1FEE                     	;# 
  6521     1FEF                     	;# 
  6522     0000                     	;# 
  6523     0001                     	;# 
  6524     0002                     	;# 
  6525     0003                     	;# 
  6526     0004                     	;# 
  6527     0005                     	;# 
  6528     0006                     	;# 
  6529     0007                     	;# 
  6530     0008                     	;# 
  6531     0009                     	;# 
  6532     000A                     	;# 
  6533     000B                     	;# 
  6534     000C                     	;# 
  6535     000D                     	;# 
  6536     000E                     	;# 
  6537     0010                     	;# 
  6538     0012                     	;# 
  6539     0013                     	;# 
  6540     0014                     	;# 
  6541     0016                     	;# 
  6542     0018                     	;# 
  6543     0019                     	;# 
  6544     001A                     	;# 
  6545     001C                     	;# 
  6546     008C                     	;# 
  6547     008C                     	;# 
  6548     008D                     	;# 
  6549     008E                     	;# 
  6550     008E                     	;# 
  6551     008F                     	;# 
  6552     0090                     	;# 
  6553     0090                     	;# 
  6554     0091                     	;# 
  6555     0092                     	;# 
  6556     0092                     	;# 
  6557     0093                     	;# 
  6558     0094                     	;# 
  6559     0094                     	;# 
  6560     0095                     	;# 
  6561     0096                     	;# 
  6562     0096                     	;# 
  6563     0097                     	;# 
  6564     0098                     	;# 
  6565     0099                     	;# 
  6566     009A                     	;# 
  6567     009B                     	;# 
  6568     009B                     	;# 
  6569     009C                     	;# 
  6570     009D                     	;# 
  6571     009D                     	;# 
  6572     009E                     	;# 
  6573     009F                     	;# 
  6574     010C                     	;# 
  6575     010C                     	;# 
  6576     010D                     	;# 
  6577     010E                     	;# 
  6578     010F                     	;# 
  6579     010F                     	;# 
  6580     0110                     	;# 
  6581     0111                     	;# 
  6582     0112                     	;# 
  6583     0113                     	;# 
  6584     0114                     	;# 
  6585     0115                     	;# 
  6586     0116                     	;# 
  6587     0117                     	;# 
  6588     0118                     	;# 
  6589     0119                     	;# 
  6590     0119                     	;# 
  6591     0119                     	;# 
  6592     011A                     	;# 
  6593     011A                     	;# 
  6594     011A                     	;# 
  6595     011B                     	;# 
  6596     011B                     	;# 
  6597     011B                     	;# 
  6598     011B                     	;# 
  6599     011B                     	;# 
  6600     011C                     	;# 
  6601     011C                     	;# 
  6602     011C                     	;# 
  6603     011D                     	;# 
  6604     011D                     	;# 
  6605     011D                     	;# 
  6606     011E                     	;# 
  6607     011E                     	;# 
  6608     011E                     	;# 
  6609     011F                     	;# 
  6610     011F                     	;# 
  6611     011F                     	;# 
  6612     011F                     	;# 
  6613     011F                     	;# 
  6614     018C                     	;# 
  6615     018D                     	;# 
  6616     018E                     	;# 
  6617     018F                     	;# 
  6618     0190                     	;# 
  6619     0191                     	;# 
  6620     0192                     	;# 
  6621     0196                     	;# 
  6622     0197                     	;# 
  6623     0198                     	;# 
  6624     0199                     	;# 
  6625     019A                     	;# 
  6626     019B                     	;# 
  6627     019C                     	;# 
  6628     020C                     	;# 
  6629     020D                     	;# 
  6630     020E                     	;# 
  6631     020E                     	;# 
  6632     020F                     	;# 
  6633     020F                     	;# 
  6634     0210                     	;# 
  6635     0210                     	;# 
  6636     0211                     	;# 
  6637     0211                     	;# 
  6638     0212                     	;# 
  6639     0213                     	;# 
  6640     0214                     	;# 
  6641     0214                     	;# 
  6642     0215                     	;# 
  6643     0215                     	;# 
  6644     0216                     	;# 
  6645     0216                     	;# 
  6646     0217                     	;# 
  6647     0217                     	;# 
  6648     0218                     	;# 
  6649     0219                     	;# 
  6650     021A                     	;# 
  6651     021A                     	;# 
  6652     021B                     	;# 
  6653     021B                     	;# 
  6654     021C                     	;# 
  6655     021C                     	;# 
  6656     021D                     	;# 
  6657     021D                     	;# 
  6658     021E                     	;# 
  6659     021F                     	;# 
  6660     028C                     	;# 
  6661     028C                     	;# 
  6662     028D                     	;# 
  6663     028D                     	;# 
  6664     028E                     	;# 
  6665     028F                     	;# 
  6666     0290                     	;# 
  6667     0291                     	;# 
  6668     0292                     	;# 
  6669     0292                     	;# 
  6670     0293                     	;# 
  6671     0293                     	;# 
  6672     0294                     	;# 
  6673     0295                     	;# 
  6674     0296                     	;# 
  6675     0297                     	;# 
  6676     0298                     	;# 
  6677     0298                     	;# 
  6678     0299                     	;# 
  6679     0299                     	;# 
  6680     029A                     	;# 
  6681     029B                     	;# 
  6682     029C                     	;# 
  6683     029D                     	;# 
  6684     029F                     	;# 
  6685     030C                     	;# 
  6686     030C                     	;# 
  6687     030D                     	;# 
  6688     030E                     	;# 
  6689     030F                     	;# 
  6690     0310                     	;# 
  6691     0310                     	;# 
  6692     0311                     	;# 
  6693     0312                     	;# 
  6694     0313                     	;# 
  6695     0314                     	;# 
  6696     0314                     	;# 
  6697     0315                     	;# 
  6698     0316                     	;# 
  6699     0317                     	;# 
  6700     0318                     	;# 
  6701     0318                     	;# 
  6702     0319                     	;# 
  6703     031A                     	;# 
  6704     031B                     	;# 
  6705     031C                     	;# 
  6706     031C                     	;# 
  6707     031D                     	;# 
  6708     031E                     	;# 
  6709     031F                     	;# 
  6710     038C                     	;# 
  6711     038C                     	;# 
  6712     038D                     	;# 
  6713     038E                     	;# 
  6714     0390                     	;# 
  6715     0390                     	;# 
  6716     0391                     	;# 
  6717     0392                     	;# 
  6718     048C                     	;# 
  6719     048C                     	;# 
  6720     048D                     	;# 
  6721     048E                     	;# 
  6722     048F                     	;# 
  6723     048F                     	;# 
  6724     0490                     	;# 
  6725     0491                     	;# 
  6726     0492                     	;# 
  6727     0492                     	;# 
  6728     0493                     	;# 
  6729     0494                     	;# 
  6730     0495                     	;# 
  6731     0495                     	;# 
  6732     0496                     	;# 
  6733     0497                     	;# 
  6734     0498                     	;# 
  6735     0499                     	;# 
  6736     049A                     	;# 
  6737     049B                     	;# 
  6738     049C                     	;# 
  6739     049D                     	;# 
  6740     050C                     	;# 
  6741     050C                     	;# 
  6742     050D                     	;# 
  6743     050E                     	;# 
  6744     050F                     	;# 
  6745     050F                     	;# 
  6746     0510                     	;# 
  6747     0511                     	;# 
  6748     0512                     	;# 
  6749     0512                     	;# 
  6750     0513                     	;# 
  6751     0514                     	;# 
  6752     0515                     	;# 
  6753     0515                     	;# 
  6754     0516                     	;# 
  6755     0517                     	;# 
  6756     0518                     	;# 
  6757     0519                     	;# 
  6758     051A                     	;# 
  6759     051B                     	;# 
  6760     051C                     	;# 
  6761     051D                     	;# 
  6762     058C                     	;# 
  6763     058C                     	;# 
  6764     058D                     	;# 
  6765     058E                     	;# 
  6766     058F                     	;# 
  6767     058F                     	;# 
  6768     0590                     	;# 
  6769     0591                     	;# 
  6770     0592                     	;# 
  6771     0593                     	;# 
  6772     059C                     	;# 
  6773     059C                     	;# 
  6774     059D                     	;# 
  6775     059D                     	;# 
  6776     059E                     	;# 
  6777     059F                     	;# 
  6778     060C                     	;# 
  6779     060C                     	;# 
  6780     060D                     	;# 
  6781     060D                     	;# 
  6782     060E                     	;# 
  6783     060F                     	;# 
  6784     0610                     	;# 
  6785     0611                     	;# 
  6786     0612                     	;# 
  6787     0613                     	;# 
  6788     0614                     	;# 
  6789     0616                     	;# 
  6790     0616                     	;# 
  6791     0617                     	;# 
  6792     0617                     	;# 
  6793     0618                     	;# 
  6794     0619                     	;# 
  6795     061A                     	;# 
  6796     061B                     	;# 
  6797     061C                     	;# 
  6798     061D                     	;# 
  6799     061E                     	;# 
  6800     068C                     	;# 
  6801     068D                     	;# 
  6802     068E                     	;# 
  6803     068F                     	;# 
  6804     0690                     	;# 
  6805     0691                     	;# 
  6806     0692                     	;# 
  6807     0693                     	;# 
  6808     0694                     	;# 
  6809     070C                     	;# 
  6810     070D                     	;# 
  6811     070E                     	;# 
  6812     070F                     	;# 
  6813     0710                     	;# 
  6814     0711                     	;# 
  6815     0712                     	;# 
  6816     0713                     	;# 
  6817     0714                     	;# 
  6818     0716                     	;# 
  6819     0717                     	;# 
  6820     0718                     	;# 
  6821     0719                     	;# 
  6822     071A                     	;# 
  6823     071B                     	;# 
  6824     071C                     	;# 
  6825     071D                     	;# 
  6826     071E                     	;# 
  6827     0796                     	;# 
  6828     0797                     	;# 
  6829     0798                     	;# 
  6830     0799                     	;# 
  6831     079A                     	;# 
  6832     079B                     	;# 
  6833     079C                     	;# 
  6834     079D                     	;# 
  6835     080C                     	;# 
  6836     080D                     	;# 
  6837     080E                     	;# 
  6838     080F                     	;# 
  6839     0810                     	;# 
  6840     0811                     	;# 
  6841     0813                     	;# 
  6842     0814                     	;# 
  6843     081A                     	;# 
  6844     081A                     	;# 
  6845     081B                     	;# 
  6846     081C                     	;# 
  6847     081C                     	;# 
  6848     081D                     	;# 
  6849     081E                     	;# 
  6850     081F                     	;# 
  6851     088C                     	;# 
  6852     088D                     	;# 
  6853     088E                     	;# 
  6854     088F                     	;# 
  6855     0890                     	;# 
  6856     0891                     	;# 
  6857     0892                     	;# 
  6858     0893                     	;# 
  6859     0895                     	;# 
  6860     0896                     	;# 
  6861     0897                     	;# 
  6862     0898                     	;# 
  6863     0899                     	;# 
  6864     089A                     	;# 
  6865     089B                     	;# 
  6866     090C                     	;# 
  6867     090E                     	;# 
  6868     090F                     	;# 
  6869     091F                     	;# 
  6870     098F                     	;# 
  6871     098F                     	;# 
  6872     0990                     	;# 
  6873     0991                     	;# 
  6874     0992                     	;# 
  6875     0993                     	;# 
  6876     0994                     	;# 
  6877     0995                     	;# 
  6878     0996                     	;# 
  6879     0997                     	;# 
  6880     0A19                     	;# 
  6881     0A19                     	;# 
  6882     0A1A                     	;# 
  6883     0A1A                     	;# 
  6884     0A1B                     	;# 
  6885     0A1B                     	;# 
  6886     0A1B                     	;# 
  6887     0A1C                     	;# 
  6888     0A1C                     	;# 
  6889     0A1D                     	;# 
  6890     0A1D                     	;# 
  6891     0A1E                     	;# 
  6892     0A1E                     	;# 
  6893     0A1F                     	;# 
  6894     0A1F                     	;# 
  6895     0A1F                     	;# 
  6896     1E0F                     	;# 
  6897     1E10                     	;# 
  6898     1E11                     	;# 
  6899     1E12                     	;# 
  6900     1E13                     	;# 
  6901     1E14                     	;# 
  6902     1E15                     	;# 
  6903     1E16                     	;# 
  6904     1E17                     	;# 
  6905     1E18                     	;# 
  6906     1E19                     	;# 
  6907     1E1A                     	;# 
  6908     1E1B                     	;# 
  6909     1E1C                     	;# 
  6910     1E1D                     	;# 
  6911     1E1E                     	;# 
  6912     1E1F                     	;# 
  6913     1E20                     	;# 
  6914     1E21                     	;# 
  6915     1E22                     	;# 
  6916     1E23                     	;# 
  6917     1E24                     	;# 
  6918     1E25                     	;# 
  6919     1E26                     	;# 
  6920     1E27                     	;# 
  6921     1E28                     	;# 
  6922     1E29                     	;# 
  6923     1E2A                     	;# 
  6924     1E2B                     	;# 
  6925     1E2C                     	;# 
  6926     1E2D                     	;# 
  6927     1E2E                     	;# 
  6928     1E2F                     	;# 
  6929     1E30                     	;# 
  6930     1E31                     	;# 
  6931     1E32                     	;# 
  6932     1E33                     	;# 
  6933     1E34                     	;# 
  6934     1E35                     	;# 
  6935     1E36                     	;# 
  6936     1E37                     	;# 
  6937     1E8F                     	;# 
  6938     1E90                     	;# 
  6939     1E91                     	;# 
  6940     1E92                     	;# 
  6941     1E93                     	;# 
  6942     1E94                     	;# 
  6943     1E95                     	;# 
  6944     1E96                     	;# 
  6945     1E97                     	;# 
  6946     1E9C                     	;# 
  6947     1E9D                     	;# 
  6948     1E9E                     	;# 
  6949     1EA1                     	;# 
  6950     1EA2                     	;# 
  6951     1EA3                     	;# 
  6952     1EA4                     	;# 
  6953     1EA5                     	;# 
  6954     1EA9                     	;# 
  6955     1EAA                     	;# 
  6956     1EAB                     	;# 
  6957     1EAC                     	;# 
  6958     1EB1                     	;# 
  6959     1EB2                     	;# 
  6960     1EB3                     	;# 
  6961     1EB8                     	;# 
  6962     1EB9                     	;# 
  6963     1EBA                     	;# 
  6964     1EBB                     	;# 
  6965     1EBC                     	;# 
  6966     1EBD                     	;# 
  6967     1EBE                     	;# 
  6968     1EC3                     	;# 
  6969     1EC5                     	;# 
  6970     1EC6                     	;# 
  6971     1EC7                     	;# 
  6972     1EC8                     	;# 
  6973     1EC9                     	;# 
  6974     1ECA                     	;# 
  6975     1ECB                     	;# 
  6976     1ECC                     	;# 
  6977     1ECD                     	;# 
  6978     1ECE                     	;# 
  6979     1F10                     	;# 
  6980     1F11                     	;# 
  6981     1F12                     	;# 
  6982     1F13                     	;# 
  6983     1F14                     	;# 
  6984     1F15                     	;# 
  6985     1F16                     	;# 
  6986     1F17                     	;# 
  6987     1F18                     	;# 
  6988     1F19                     	;# 
  6989     1F1A                     	;# 
  6990     1F1B                     	;# 
  6991     1F1C                     	;# 
  6992     1F1D                     	;# 
  6993     1F1E                     	;# 
  6994     1F1F                     	;# 
  6995     1F20                     	;# 
  6996     1F21                     	;# 
  6997     1F22                     	;# 
  6998     1F23                     	;# 
  6999     1F24                     	;# 
  7000     1F25                     	;# 
  7001     1F26                     	;# 
  7002     1F27                     	;# 
  7003     1F38                     	;# 
  7004     1F39                     	;# 
  7005     1F3A                     	;# 
  7006     1F3B                     	;# 
  7007     1F3C                     	;# 
  7008     1F3D                     	;# 
  7009     1F3E                     	;# 
  7010     1F3F                     	;# 
  7011     1F43                     	;# 
  7012     1F44                     	;# 
  7013     1F45                     	;# 
  7014     1F46                     	;# 
  7015     1F47                     	;# 
  7016     1F48                     	;# 
  7017     1F49                     	;# 
  7018     1F4A                     	;# 
  7019     1F4E                     	;# 
  7020     1F4F                     	;# 
  7021     1F50                     	;# 
  7022     1F51                     	;# 
  7023     1F52                     	;# 
  7024     1F53                     	;# 
  7025     1F54                     	;# 
  7026     1F55                     	;# 
  7027     1F65                     	;# 
  7028     1F66                     	;# 
  7029     1F67                     	;# 
  7030     1F68                     	;# 
  7031     1F69                     	;# 
  7032     1F6A                     	;# 
  7033     1F6B                     	;# 
  7034     1FE4                     	;# 
  7035     1FE5                     	;# 
  7036     1FE6                     	;# 
  7037     1FE7                     	;# 
  7038     1FE8                     	;# 
  7039     1FE8                     	;# 
  7040     1FE9                     	;# 
  7041     1FEA                     	;# 
  7042     1FEB                     	;# 
  7043     1FED                     	;# 
  7044     1FEE                     	;# 
  7045     1FEF                     	;# 
  7046     0000                     	;# 
  7047     0001                     	;# 
  7048     0002                     	;# 
  7049     0003                     	;# 
  7050     0004                     	;# 
  7051     0005                     	;# 
  7052     0006                     	;# 
  7053     0007                     	;# 
  7054     0008                     	;# 
  7055     0009                     	;# 
  7056     000A                     	;# 
  7057     000B                     	;# 
  7058     000C                     	;# 
  7059     000D                     	;# 
  7060     000E                     	;# 
  7061     0010                     	;# 
  7062     0012                     	;# 
  7063     0013                     	;# 
  7064     0014                     	;# 
  7065     0016                     	;# 
  7066     0018                     	;# 
  7067     0019                     	;# 
  7068     001A                     	;# 
  7069     001C                     	;# 
  7070     008C                     	;# 
  7071     008C                     	;# 
  7072     008D                     	;# 
  7073     008E                     	;# 
  7074     008E                     	;# 
  7075     008F                     	;# 
  7076     0090                     	;# 
  7077     0090                     	;# 
  7078     0091                     	;# 
  7079     0092                     	;# 
  7080     0092                     	;# 
  7081     0093                     	;# 
  7082     0094                     	;# 
  7083     0094                     	;# 
  7084     0095                     	;# 
  7085     0096                     	;# 
  7086     0096                     	;# 
  7087     0097                     	;# 
  7088     0098                     	;# 
  7089     0099                     	;# 
  7090     009A                     	;# 
  7091     009B                     	;# 
  7092     009B                     	;# 
  7093     009C                     	;# 
  7094     009D                     	;# 
  7095     009D                     	;# 
  7096     009E                     	;# 
  7097     009F                     	;# 
  7098     010C                     	;# 
  7099     010C                     	;# 
  7100     010D                     	;# 
  7101     010E                     	;# 
  7102     010F                     	;# 
  7103     010F                     	;# 
  7104     0110                     	;# 
  7105     0111                     	;# 
  7106     0112                     	;# 
  7107     0113                     	;# 
  7108     0114                     	;# 
  7109     0115                     	;# 
  7110     0116                     	;# 
  7111     0117                     	;# 
  7112     0118                     	;# 
  7113     0119                     	;# 
  7114     0119                     	;# 
  7115     0119                     	;# 
  7116     011A                     	;# 
  7117     011A                     	;# 
  7118     011A                     	;# 
  7119     011B                     	;# 
  7120     011B                     	;# 
  7121     011B                     	;# 
  7122     011B                     	;# 
  7123     011B                     	;# 
  7124     011C                     	;# 
  7125     011C                     	;# 
  7126     011C                     	;# 
  7127     011D                     	;# 
  7128     011D                     	;# 
  7129     011D                     	;# 
  7130     011E                     	;# 
  7131     011E                     	;# 
  7132     011E                     	;# 
  7133     011F                     	;# 
  7134     011F                     	;# 
  7135     011F                     	;# 
  7136     011F                     	;# 
  7137     011F                     	;# 
  7138     018C                     	;# 
  7139     018D                     	;# 
  7140     018E                     	;# 
  7141     018F                     	;# 
  7142     0190                     	;# 
  7143     0191                     	;# 
  7144     0192                     	;# 
  7145     0196                     	;# 
  7146     0197                     	;# 
  7147     0198                     	;# 
  7148     0199                     	;# 
  7149     019A                     	;# 
  7150     019B                     	;# 
  7151     019C                     	;# 
  7152     020C                     	;# 
  7153     020D                     	;# 
  7154     020E                     	;# 
  7155     020E                     	;# 
  7156     020F                     	;# 
  7157     020F                     	;# 
  7158     0210                     	;# 
  7159     0210                     	;# 
  7160     0211                     	;# 
  7161     0211                     	;# 
  7162     0212                     	;# 
  7163     0213                     	;# 
  7164     0214                     	;# 
  7165     0214                     	;# 
  7166     0215                     	;# 
  7167     0215                     	;# 
  7168     0216                     	;# 
  7169     0216                     	;# 
  7170     0217                     	;# 
  7171     0217                     	;# 
  7172     0218                     	;# 
  7173     0219                     	;# 
  7174     021A                     	;# 
  7175     021A                     	;# 
  7176     021B                     	;# 
  7177     021B                     	;# 
  7178     021C                     	;# 
  7179     021C                     	;# 
  7180     021D                     	;# 
  7181     021D                     	;# 
  7182     021E                     	;# 
  7183     021F                     	;# 
  7184     028C                     	;# 
  7185     028C                     	;# 
  7186     028D                     	;# 
  7187     028D                     	;# 
  7188     028E                     	;# 
  7189     028F                     	;# 
  7190     0290                     	;# 
  7191     0291                     	;# 
  7192     0292                     	;# 
  7193     0292                     	;# 
  7194     0293                     	;# 
  7195     0293                     	;# 
  7196     0294                     	;# 
  7197     0295                     	;# 
  7198     0296                     	;# 
  7199     0297                     	;# 
  7200     0298                     	;# 
  7201     0298                     	;# 
  7202     0299                     	;# 
  7203     0299                     	;# 
  7204     029A                     	;# 
  7205     029B                     	;# 
  7206     029C                     	;# 
  7207     029D                     	;# 
  7208     029F                     	;# 
  7209     030C                     	;# 
  7210     030C                     	;# 
  7211     030D                     	;# 
  7212     030E                     	;# 
  7213     030F                     	;# 
  7214     0310                     	;# 
  7215     0310                     	;# 
  7216     0311                     	;# 
  7217     0312                     	;# 
  7218     0313                     	;# 
  7219     0314                     	;# 
  7220     0314                     	;# 
  7221     0315                     	;# 
  7222     0316                     	;# 
  7223     0317                     	;# 
  7224     0318                     	;# 
  7225     0318                     	;# 
  7226     0319                     	;# 
  7227     031A                     	;# 
  7228     031B                     	;# 
  7229     031C                     	;# 
  7230     031C                     	;# 
  7231     031D                     	;# 
  7232     031E                     	;# 
  7233     031F                     	;# 
  7234     038C                     	;# 
  7235     038C                     	;# 
  7236     038D                     	;# 
  7237     038E                     	;# 
  7238     0390                     	;# 
  7239     0390                     	;# 
  7240     0391                     	;# 
  7241     0392                     	;# 
  7242     048C                     	;# 
  7243     048C                     	;# 
  7244     048D                     	;# 
  7245     048E                     	;# 
  7246     048F                     	;# 
  7247     048F                     	;# 
  7248     0490                     	;# 
  7249     0491                     	;# 
  7250     0492                     	;# 
  7251     0492                     	;# 
  7252     0493                     	;# 
  7253     0494                     	;# 
  7254     0495                     	;# 
  7255     0495                     	;# 
  7256     0496                     	;# 
  7257     0497                     	;# 
  7258     0498                     	;# 
  7259     0499                     	;# 
  7260     049A                     	;# 
  7261     049B                     	;# 
  7262     049C                     	;# 
  7263     049D                     	;# 
  7264     050C                     	;# 
  7265     050C                     	;# 
  7266     050D                     	;# 
  7267     050E                     	;# 
  7268     050F                     	;# 
  7269     050F                     	;# 
  7270     0510                     	;# 
  7271     0511                     	;# 
  7272     0512                     	;# 
  7273     0512                     	;# 
  7274     0513                     	;# 
  7275     0514                     	;# 
  7276     0515                     	;# 
  7277     0515                     	;# 
  7278     0516                     	;# 
  7279     0517                     	;# 
  7280     0518                     	;# 
  7281     0519                     	;# 
  7282     051A                     	;# 
  7283     051B                     	;# 
  7284     051C                     	;# 
  7285     051D                     	;# 
  7286     058C                     	;# 
  7287     058C                     	;# 
  7288     058D                     	;# 
  7289     058E                     	;# 
  7290     058F                     	;# 
  7291     058F                     	;# 
  7292     0590                     	;# 
  7293     0591                     	;# 
  7294     0592                     	;# 
  7295     0593                     	;# 
  7296     059C                     	;# 
  7297     059C                     	;# 
  7298     059D                     	;# 
  7299     059D                     	;# 
  7300     059E                     	;# 
  7301     059F                     	;# 
  7302     060C                     	;# 
  7303     060C                     	;# 
  7304     060D                     	;# 
  7305     060D                     	;# 
  7306     060E                     	;# 
  7307     060F                     	;# 
  7308     0610                     	;# 
  7309     0611                     	;# 
  7310     0612                     	;# 
  7311     0613                     	;# 
  7312     0614                     	;# 
  7313     0616                     	;# 
  7314     0616                     	;# 
  7315     0617                     	;# 
  7316     0617                     	;# 
  7317     0618                     	;# 
  7318     0619                     	;# 
  7319     061A                     	;# 
  7320     061B                     	;# 
  7321     061C                     	;# 
  7322     061D                     	;# 
  7323     061E                     	;# 
  7324     068C                     	;# 
  7325     068D                     	;# 
  7326     068E                     	;# 
  7327     068F                     	;# 
  7328     0690                     	;# 
  7329     0691                     	;# 
  7330     0692                     	;# 
  7331     0693                     	;# 
  7332     0694                     	;# 
  7333     070C                     	;# 
  7334     070D                     	;# 
  7335     070E                     	;# 
  7336     070F                     	;# 
  7337     0710                     	;# 
  7338     0711                     	;# 
  7339     0712                     	;# 
  7340     0713                     	;# 
  7341     0714                     	;# 
  7342     0716                     	;# 
  7343     0717                     	;# 
  7344     0718                     	;# 
  7345     0719                     	;# 
  7346     071A                     	;# 
  7347     071B                     	;# 
  7348     071C                     	;# 
  7349     071D                     	;# 
  7350     071E                     	;# 
  7351     0796                     	;# 
  7352     0797                     	;# 
  7353     0798                     	;# 
  7354     0799                     	;# 
  7355     079A                     	;# 
  7356     079B                     	;# 
  7357     079C                     	;# 
  7358     079D                     	;# 
  7359     080C                     	;# 
  7360     080D                     	;# 
  7361     080E                     	;# 
  7362     080F                     	;# 
  7363     0810                     	;# 
  7364     0811                     	;# 
  7365     0813                     	;# 
  7366     0814                     	;# 
  7367     081A                     	;# 
  7368     081A                     	;# 
  7369     081B                     	;# 
  7370     081C                     	;# 
  7371     081C                     	;# 
  7372     081D                     	;# 
  7373     081E                     	;# 
  7374     081F                     	;# 
  7375     088C                     	;# 
  7376     088D                     	;# 
  7377     088E                     	;# 
  7378     088F                     	;# 
  7379     0890                     	;# 
  7380     0891                     	;# 
  7381     0892                     	;# 
  7382     0893                     	;# 
  7383     0895                     	;# 
  7384     0896                     	;# 
  7385     0897                     	;# 
  7386     0898                     	;# 
  7387     0899                     	;# 
  7388     089A                     	;# 
  7389     089B                     	;# 
  7390     090C                     	;# 
  7391     090E                     	;# 
  7392     090F                     	;# 
  7393     091F                     	;# 
  7394     098F                     	;# 
  7395     098F                     	;# 
  7396     0990                     	;# 
  7397     0991                     	;# 
  7398     0992                     	;# 
  7399     0993                     	;# 
  7400     0994                     	;# 
  7401     0995                     	;# 
  7402     0996                     	;# 
  7403     0997                     	;# 
  7404     0A19                     	;# 
  7405     0A19                     	;# 
  7406     0A1A                     	;# 
  7407     0A1A                     	;# 
  7408     0A1B                     	;# 
  7409     0A1B                     	;# 
  7410     0A1B                     	;# 
  7411     0A1C                     	;# 
  7412     0A1C                     	;# 
  7413     0A1D                     	;# 
  7414     0A1D                     	;# 
  7415     0A1E                     	;# 
  7416     0A1E                     	;# 
  7417     0A1F                     	;# 
  7418     0A1F                     	;# 
  7419     0A1F                     	;# 
  7420     1E0F                     	;# 
  7421     1E10                     	;# 
  7422     1E11                     	;# 
  7423     1E12                     	;# 
  7424     1E13                     	;# 
  7425     1E14                     	;# 
  7426     1E15                     	;# 
  7427     1E16                     	;# 
  7428     1E17                     	;# 
  7429     1E18                     	;# 
  7430     1E19                     	;# 
  7431     1E1A                     	;# 
  7432     1E1B                     	;# 
  7433     1E1C                     	;# 
  7434     1E1D                     	;# 
  7435     1E1E                     	;# 
  7436     1E1F                     	;# 
  7437     1E20                     	;# 
  7438     1E21                     	;# 
  7439     1E22                     	;# 
  7440     1E23                     	;# 
  7441     1E24                     	;# 
  7442     1E25                     	;# 
  7443     1E26                     	;# 
  7444     1E27                     	;# 
  7445     1E28                     	;# 
  7446     1E29                     	;# 
  7447     1E2A                     	;# 
  7448     1E2B                     	;# 
  7449     1E2C                     	;# 
  7450     1E2D                     	;# 
  7451     1E2E                     	;# 
  7452     1E2F                     	;# 
  7453     1E30                     	;# 
  7454     1E31                     	;# 
  7455     1E32                     	;# 
  7456     1E33                     	;# 
  7457     1E34                     	;# 
  7458     1E35                     	;# 
  7459     1E36                     	;# 
  7460     1E37                     	;# 
  7461     1E8F                     	;# 
  7462     1E90                     	;# 
  7463     1E91                     	;# 
  7464     1E92                     	;# 
  7465     1E93                     	;# 
  7466     1E94                     	;# 
  7467     1E95                     	;# 
  7468     1E96                     	;# 
  7469     1E97                     	;# 
  7470     1E9C                     	;# 
  7471     1E9D                     	;# 
  7472     1E9E                     	;# 
  7473     1EA1                     	;# 
  7474     1EA2                     	;# 
  7475     1EA3                     	;# 
  7476     1EA4                     	;# 
  7477     1EA5                     	;# 
  7478     1EA9                     	;# 
  7479     1EAA                     	;# 
  7480     1EAB                     	;# 
  7481     1EAC                     	;# 
  7482     1EB1                     	;# 
  7483     1EB2                     	;# 
  7484     1EB3                     	;# 
  7485     1EB8                     	;# 
  7486     1EB9                     	;# 
  7487     1EBA                     	;# 
  7488     1EBB                     	;# 
  7489     1EBC                     	;# 
  7490     1EBD                     	;# 
  7491     1EBE                     	;# 
  7492     1EC3                     	;# 
  7493     1EC5                     	;# 
  7494     1EC6                     	;# 
  7495     1EC7                     	;# 
  7496     1EC8                     	;# 
  7497     1EC9                     	;# 
  7498     1ECA                     	;# 
  7499     1ECB                     	;# 
  7500     1ECC                     	;# 
  7501     1ECD                     	;# 
  7502     1ECE                     	;# 
  7503     1F10                     	;# 
  7504     1F11                     	;# 
  7505     1F12                     	;# 
  7506     1F13                     	;# 
  7507     1F14                     	;# 
  7508     1F15                     	;# 
  7509     1F16                     	;# 
  7510     1F17                     	;# 
  7511     1F18                     	;# 
  7512     1F19                     	;# 
  7513     1F1A                     	;# 
  7514     1F1B                     	;# 
  7515     1F1C                     	;# 
  7516     1F1D                     	;# 
  7517     1F1E                     	;# 
  7518     1F1F                     	;# 
  7519     1F20                     	;# 
  7520     1F21                     	;# 
  7521     1F22                     	;# 
  7522     1F23                     	;# 
  7523     1F24                     	;# 
  7524     1F25                     	;# 
  7525     1F26                     	;# 
  7526     1F27                     	;# 
  7527     1F38                     	;# 
  7528     1F39                     	;# 
  7529     1F3A                     	;# 
  7530     1F3B                     	;# 
  7531     1F3C                     	;# 
  7532     1F3D                     	;# 
  7533     1F3E                     	;# 
  7534     1F3F                     	;# 
  7535     1F43                     	;# 
  7536     1F44                     	;# 
  7537     1F45                     	;# 
  7538     1F46                     	;# 
  7539     1F47                     	;# 
  7540     1F48                     	;# 
  7541     1F49                     	;# 
  7542     1F4A                     	;# 
  7543     1F4E                     	;# 
  7544     1F4F                     	;# 
  7545     1F50                     	;# 
  7546     1F51                     	;# 
  7547     1F52                     	;# 
  7548     1F53                     	;# 
  7549     1F54                     	;# 
  7550     1F55                     	;# 
  7551     1F65                     	;# 
  7552     1F66                     	;# 
  7553     1F67                     	;# 
  7554     1F68                     	;# 
  7555     1F69                     	;# 
  7556     1F6A                     	;# 
  7557     1F6B                     	;# 
  7558     1FE4                     	;# 
  7559     1FE5                     	;# 
  7560     1FE6                     	;# 
  7561     1FE7                     	;# 
  7562     1FE8                     	;# 
  7563     1FE8                     	;# 
  7564     1FE9                     	;# 
  7565     1FEA                     	;# 
  7566     1FEB                     	;# 
  7567     1FED                     	;# 
  7568     1FEE                     	;# 
  7569     1FEF                     	;# 
  7570     0000                     	;# 
  7571     0001                     	;# 
  7572     0002                     	;# 
  7573     0003                     	;# 
  7574     0004                     	;# 
  7575     0005                     	;# 
  7576     0006                     	;# 
  7577     0007                     	;# 
  7578     0008                     	;# 
  7579     0009                     	;# 
  7580     000A                     	;# 
  7581     000B                     	;# 
  7582     000C                     	;# 
  7583     000D                     	;# 
  7584     000E                     	;# 
  7585     0010                     	;# 
  7586     0012                     	;# 
  7587     0013                     	;# 
  7588     0014                     	;# 
  7589     0016                     	;# 
  7590     0018                     	;# 
  7591     0019                     	;# 
  7592     001A                     	;# 
  7593     001C                     	;# 
  7594     008C                     	;# 
  7595     008C                     	;# 
  7596     008D                     	;# 
  7597     008E                     	;# 
  7598     008E                     	;# 
  7599     008F                     	;# 
  7600     0090                     	;# 
  7601     0090                     	;# 
  7602     0091                     	;# 
  7603     0092                     	;# 
  7604     0092                     	;# 
  7605     0093                     	;# 
  7606     0094                     	;# 
  7607     0094                     	;# 
  7608     0095                     	;# 
  7609     0096                     	;# 
  7610     0096                     	;# 
  7611     0097                     	;# 
  7612     0098                     	;# 
  7613     0099                     	;# 
  7614     009A                     	;# 
  7615     009B                     	;# 
  7616     009B                     	;# 
  7617     009C                     	;# 
  7618     009D                     	;# 
  7619     009D                     	;# 
  7620     009E                     	;# 
  7621     009F                     	;# 
  7622     010C                     	;# 
  7623     010C                     	;# 
  7624     010D                     	;# 
  7625     010E                     	;# 
  7626     010F                     	;# 
  7627     010F                     	;# 
  7628     0110                     	;# 
  7629     0111                     	;# 
  7630     0112                     	;# 
  7631     0113                     	;# 
  7632     0114                     	;# 
  7633     0115                     	;# 
  7634     0116                     	;# 
  7635     0117                     	;# 
  7636     0118                     	;# 
  7637     0119                     	;# 
  7638     0119                     	;# 
  7639     0119                     	;# 
  7640     011A                     	;# 
  7641     011A                     	;# 
  7642     011A                     	;# 
  7643     011B                     	;# 
  7644     011B                     	;# 
  7645     011B                     	;# 
  7646     011B                     	;# 
  7647     011B                     	;# 
  7648     011C                     	;# 
  7649     011C                     	;# 
  7650     011C                     	;# 
  7651     011D                     	;# 
  7652     011D                     	;# 
  7653     011D                     	;# 
  7654     011E                     	;# 
  7655     011E                     	;# 
  7656     011E                     	;# 
  7657     011F                     	;# 
  7658     011F                     	;# 
  7659     011F                     	;# 
  7660     011F                     	;# 
  7661     011F                     	;# 
  7662     018C                     	;# 
  7663     018D                     	;# 
  7664     018E                     	;# 
  7665     018F                     	;# 
  7666     0190                     	;# 
  7667     0191                     	;# 
  7668     0192                     	;# 
  7669     0196                     	;# 
  7670     0197                     	;# 
  7671     0198                     	;# 
  7672     0199                     	;# 
  7673     019A                     	;# 
  7674     019B                     	;# 
  7675     019C                     	;# 
  7676     020C                     	;# 
  7677     020D                     	;# 
  7678     020E                     	;# 
  7679     020E                     	;# 
  7680     020F                     	;# 
  7681     020F                     	;# 
  7682     0210                     	;# 
  7683     0210                     	;# 
  7684     0211                     	;# 
  7685     0211                     	;# 
  7686     0212                     	;# 
  7687     0213                     	;# 
  7688     0214                     	;# 
  7689     0214                     	;# 
  7690     0215                     	;# 
  7691     0215                     	;# 
  7692     0216                     	;# 
  7693     0216                     	;# 
  7694     0217                     	;# 
  7695     0217                     	;# 
  7696     0218                     	;# 
  7697     0219                     	;# 
  7698     021A                     	;# 
  7699     021A                     	;# 
  7700     021B                     	;# 
  7701     021B                     	;# 
  7702     021C                     	;# 
  7703     021C                     	;# 
  7704     021D                     	;# 
  7705     021D                     	;# 
  7706     021E                     	;# 
  7707     021F                     	;# 
  7708     028C                     	;# 
  7709     028C                     	;# 
  7710     028D                     	;# 
  7711     028D                     	;# 
  7712     028E                     	;# 
  7713     028F                     	;# 
  7714     0290                     	;# 
  7715     0291                     	;# 
  7716     0292                     	;# 
  7717     0292                     	;# 
  7718     0293                     	;# 
  7719     0293                     	;# 
  7720     0294                     	;# 
  7721     0295                     	;# 
  7722     0296                     	;# 
  7723     0297                     	;# 
  7724     0298                     	;# 
  7725     0298                     	;# 
  7726     0299                     	;# 
  7727     0299                     	;# 
  7728     029A                     	;# 
  7729     029B                     	;# 
  7730     029C                     	;# 
  7731     029D                     	;# 
  7732     029F                     	;# 
  7733     030C                     	;# 
  7734     030C                     	;# 
  7735     030D                     	;# 
  7736     030E                     	;# 
  7737     030F                     	;# 
  7738     0310                     	;# 
  7739     0310                     	;# 
  7740     0311                     	;# 
  7741     0312                     	;# 
  7742     0313                     	;# 
  7743     0314                     	;# 
  7744     0314                     	;# 
  7745     0315                     	;# 
  7746     0316                     	;# 
  7747     0317                     	;# 
  7748     0318                     	;# 
  7749     0318                     	;# 
  7750     0319                     	;# 
  7751     031A                     	;# 
  7752     031B                     	;# 
  7753     031C                     	;# 
  7754     031C                     	;# 
  7755     031D                     	;# 
  7756     031E                     	;# 
  7757     031F                     	;# 
  7758     038C                     	;# 
  7759     038C                     	;# 
  7760     038D                     	;# 
  7761     038E                     	;# 
  7762     0390                     	;# 
  7763     0390                     	;# 
  7764     0391                     	;# 
  7765     0392                     	;# 
  7766     048C                     	;# 
  7767     048C                     	;# 
  7768     048D                     	;# 
  7769     048E                     	;# 
  7770     048F                     	;# 
  7771     048F                     	;# 
  7772     0490                     	;# 
  7773     0491                     	;# 
  7774     0492                     	;# 
  7775     0492                     	;# 
  7776     0493                     	;# 
  7777     0494                     	;# 
  7778     0495                     	;# 
  7779     0495                     	;# 
  7780     0496                     	;# 
  7781     0497                     	;# 
  7782     0498                     	;# 
  7783     0499                     	;# 
  7784     049A                     	;# 
  7785     049B                     	;# 
  7786     049C                     	;# 
  7787     049D                     	;# 
  7788     050C                     	;# 
  7789     050C                     	;# 
  7790     050D                     	;# 
  7791     050E                     	;# 
  7792     050F                     	;# 
  7793     050F                     	;# 
  7794     0510                     	;# 
  7795     0511                     	;# 
  7796     0512                     	;# 
  7797     0512                     	;# 
  7798     0513                     	;# 
  7799     0514                     	;# 
  7800     0515                     	;# 
  7801     0515                     	;# 
  7802     0516                     	;# 
  7803     0517                     	;# 
  7804     0518                     	;# 
  7805     0519                     	;# 
  7806     051A                     	;# 
  7807     051B                     	;# 
  7808     051C                     	;# 
  7809     051D                     	;# 
  7810     058C                     	;# 
  7811     058C                     	;# 
  7812     058D                     	;# 
  7813     058E                     	;# 
  7814     058F                     	;# 
  7815     058F                     	;# 
  7816     0590                     	;# 
  7817     0591                     	;# 
  7818     0592                     	;# 
  7819     0593                     	;# 
  7820     059C                     	;# 
  7821     059C                     	;# 
  7822     059D                     	;# 
  7823     059D                     	;# 
  7824     059E                     	;# 
  7825     059F                     	;# 
  7826     060C                     	;# 
  7827     060C                     	;# 
  7828     060D                     	;# 
  7829     060D                     	;# 
  7830     060E                     	;# 
  7831     060F                     	;# 
  7832     0610                     	;# 
  7833     0611                     	;# 
  7834     0612                     	;# 
  7835     0613                     	;# 
  7836     0614                     	;# 
  7837     0616                     	;# 
  7838     0616                     	;# 
  7839     0617                     	;# 
  7840     0617                     	;# 
  7841     0618                     	;# 
  7842     0619                     	;# 
  7843     061A                     	;# 
  7844     061B                     	;# 
  7845     061C                     	;# 
  7846     061D                     	;# 
  7847     061E                     	;# 
  7848     068C                     	;# 
  7849     068D                     	;# 
  7850     068E                     	;# 
  7851     068F                     	;# 
  7852     0690                     	;# 
  7853     0691                     	;# 
  7854     0692                     	;# 
  7855     0693                     	;# 
  7856     0694                     	;# 
  7857     070C                     	;# 
  7858     070D                     	;# 
  7859     070E                     	;# 
  7860     070F                     	;# 
  7861     0710                     	;# 
  7862     0711                     	;# 
  7863     0712                     	;# 
  7864     0713                     	;# 
  7865     0714                     	;# 
  7866     0716                     	;# 
  7867     0717                     	;# 
  7868     0718                     	;# 
  7869     0719                     	;# 
  7870     071A                     	;# 
  7871     071B                     	;# 
  7872     071C                     	;# 
  7873     071D                     	;# 
  7874     071E                     	;# 
  7875     0796                     	;# 
  7876     0797                     	;# 
  7877     0798                     	;# 
  7878     0799                     	;# 
  7879     079A                     	;# 
  7880     079B                     	;# 
  7881     079C                     	;# 
  7882     079D                     	;# 
  7883     080C                     	;# 
  7884     080D                     	;# 
  7885     080E                     	;# 
  7886     080F                     	;# 
  7887     0810                     	;# 
  7888     0811                     	;# 
  7889     0813                     	;# 
  7890     0814                     	;# 
  7891     081A                     	;# 
  7892     081A                     	;# 
  7893     081B                     	;# 
  7894     081C                     	;# 
  7895     081C                     	;# 
  7896     081D                     	;# 
  7897     081E                     	;# 
  7898     081F                     	;# 
  7899     088C                     	;# 
  7900     088D                     	;# 
  7901     088E                     	;# 
  7902     088F                     	;# 
  7903     0890                     	;# 
  7904     0891                     	;# 
  7905     0892                     	;# 
  7906     0893                     	;# 
  7907     0895                     	;# 
  7908     0896                     	;# 
  7909     0897                     	;# 
  7910     0898                     	;# 
  7911     0899                     	;# 
  7912     089A                     	;# 
  7913     089B                     	;# 
  7914     090C                     	;# 
  7915     090E                     	;# 
  7916     090F                     	;# 
  7917     091F                     	;# 
  7918     098F                     	;# 
  7919     098F                     	;# 
  7920     0990                     	;# 
  7921     0991                     	;# 
  7922     0992                     	;# 
  7923     0993                     	;# 
  7924     0994                     	;# 
  7925     0995                     	;# 
  7926     0996                     	;# 
  7927     0997                     	;# 
  7928     0A19                     	;# 
  7929     0A19                     	;# 
  7930     0A1A                     	;# 
  7931     0A1A                     	;# 
  7932     0A1B                     	;# 
  7933     0A1B                     	;# 
  7934     0A1B                     	;# 
  7935     0A1C                     	;# 
  7936     0A1C                     	;# 
  7937     0A1D                     	;# 
  7938     0A1D                     	;# 
  7939     0A1E                     	;# 
  7940     0A1E                     	;# 
  7941     0A1F                     	;# 
  7942     0A1F                     	;# 
  7943     0A1F                     	;# 
  7944     1E0F                     	;# 
  7945     1E10                     	;# 
  7946     1E11                     	;# 
  7947     1E12                     	;# 
  7948     1E13                     	;# 
  7949     1E14                     	;# 
  7950     1E15                     	;# 
  7951     1E16                     	;# 
  7952     1E17                     	;# 
  7953     1E18                     	;# 
  7954     1E19                     	;# 
  7955     1E1A                     	;# 
  7956     1E1B                     	;# 
  7957     1E1C                     	;# 
  7958     1E1D                     	;# 
  7959     1E1E                     	;# 
  7960     1E1F                     	;# 
  7961     1E20                     	;# 
  7962     1E21                     	;# 
  7963     1E22                     	;# 
  7964     1E23                     	;# 
  7965     1E24                     	;# 
  7966     1E25                     	;# 
  7967     1E26                     	;# 
  7968     1E27                     	;# 
  7969     1E28                     	;# 
  7970     1E29                     	;# 
  7971     1E2A                     	;# 
  7972     1E2B                     	;# 
  7973     1E2C                     	;# 
  7974     1E2D                     	;# 
  7975     1E2E                     	;# 
  7976     1E2F                     	;# 
  7977     1E30                     	;# 
  7978     1E31                     	;# 
  7979     1E32                     	;# 
  7980     1E33                     	;# 
  7981     1E34                     	;# 
  7982     1E35                     	;# 
  7983     1E36                     	;# 
  7984     1E37                     	;# 
  7985     1E8F                     	;# 
  7986     1E90                     	;# 
  7987     1E91                     	;# 
  7988     1E92                     	;# 
  7989     1E93                     	;# 
  7990     1E94                     	;# 
  7991     1E95                     	;# 
  7992     1E96                     	;# 
  7993     1E97                     	;# 
  7994     1E9C                     	;# 
  7995     1E9D                     	;# 
  7996     1E9E                     	;# 
  7997     1EA1                     	;# 
  7998     1EA2                     	;# 
  7999     1EA3                     	;# 
  8000     1EA4                     	;# 
  8001     1EA5                     	;# 
  8002     1EA9                     	;# 
  8003     1EAA                     	;# 
  8004     1EAB                     	;# 
  8005     1EAC                     	;# 
  8006     1EB1                     	;# 
  8007     1EB2                     	;# 
  8008     1EB3                     	;# 
  8009     1EB8                     	;# 
  8010     1EB9                     	;# 
  8011     1EBA                     	;# 
  8012     1EBB                     	;# 
  8013     1EBC                     	;# 
  8014     1EBD                     	;# 
  8015     1EBE                     	;# 
  8016     1EC3                     	;# 
  8017     1EC5                     	;# 
  8018     1EC6                     	;# 
  8019     1EC7                     	;# 
  8020     1EC8                     	;# 
  8021     1EC9                     	;# 
  8022     1ECA                     	;# 
  8023     1ECB                     	;# 
  8024     1ECC                     	;# 
  8025     1ECD                     	;# 
  8026     1ECE                     	;# 
  8027     1F10                     	;# 
  8028     1F11                     	;# 
  8029     1F12                     	;# 
  8030     1F13                     	;# 
  8031     1F14                     	;# 
  8032     1F15                     	;# 
  8033     1F16                     	;# 
  8034     1F17                     	;# 
  8035     1F18                     	;# 
  8036     1F19                     	;# 
  8037     1F1A                     	;# 
  8038     1F1B                     	;# 
  8039     1F1C                     	;# 
  8040     1F1D                     	;# 
  8041     1F1E                     	;# 
  8042     1F1F                     	;# 
  8043     1F20                     	;# 
  8044     1F21                     	;# 
  8045     1F22                     	;# 
  8046     1F23                     	;# 
  8047     1F24                     	;# 
  8048     1F25                     	;# 
  8049     1F26                     	;# 
  8050     1F27                     	;# 
  8051     1F38                     	;# 
  8052     1F39                     	;# 
  8053     1F3A                     	;# 
  8054     1F3B                     	;# 
  8055     1F3C                     	;# 
  8056     1F3D                     	;# 
  8057     1F3E                     	;# 
  8058     1F3F                     	;# 
  8059     1F43                     	;# 
  8060     1F44                     	;# 
  8061     1F45                     	;# 
  8062     1F46                     	;# 
  8063     1F47                     	;# 
  8064     1F48                     	;# 
  8065     1F49                     	;# 
  8066     1F4A                     	;# 
  8067     1F4E                     	;# 
  8068     1F4F                     	;# 
  8069     1F50                     	;# 
  8070     1F51                     	;# 
  8071     1F52                     	;# 
  8072     1F53                     	;# 
  8073     1F54                     	;# 
  8074     1F55                     	;# 
  8075     1F65                     	;# 
  8076     1F66                     	;# 
  8077     1F67                     	;# 
  8078     1F68                     	;# 
  8079     1F69                     	;# 
  8080     1F6A                     	;# 
  8081     1F6B                     	;# 
  8082     1FE4                     	;# 
  8083     1FE5                     	;# 
  8084     1FE6                     	;# 
  8085     1FE7                     	;# 
  8086     1FE8                     	;# 
  8087     1FE8                     	;# 
  8088     1FE9                     	;# 
  8089     1FEA                     	;# 
  8090     1FEB                     	;# 
  8091     1FED                     	;# 
  8092     1FEE                     	;# 
  8093     1FEF                     	;# 
  8094     0000                     	;# 
  8095     0001                     	;# 
  8096     0002                     	;# 
  8097     0003                     	;# 
  8098     0004                     	;# 
  8099     0005                     	;# 
  8100     0006                     	;# 
  8101     0007                     	;# 
  8102     0008                     	;# 
  8103     0009                     	;# 
  8104     000A                     	;# 
  8105     000B                     	;# 
  8106     000C                     	;# 
  8107     000D                     	;# 
  8108     000E                     	;# 
  8109     0010                     	;# 
  8110     0012                     	;# 
  8111     0013                     	;# 
  8112     0014                     	;# 
  8113     0016                     	;# 
  8114     0018                     	;# 
  8115     0019                     	;# 
  8116     001A                     	;# 
  8117     001C                     	;# 
  8118     008C                     	;# 
  8119     008C                     	;# 
  8120     008D                     	;# 
  8121     008E                     	;# 
  8122     008E                     	;# 
  8123     008F                     	;# 
  8124     0090                     	;# 
  8125     0090                     	;# 
  8126     0091                     	;# 
  8127     0092                     	;# 
  8128     0092                     	;# 
  8129     0093                     	;# 
  8130     0094                     	;# 
  8131     0094                     	;# 
  8132     0095                     	;# 
  8133     0096                     	;# 
  8134     0096                     	;# 
  8135     0097                     	;# 
  8136     0098                     	;# 
  8137     0099                     	;# 
  8138     009A                     	;# 
  8139     009B                     	;# 
  8140     009B                     	;# 
  8141     009C                     	;# 
  8142     009D                     	;# 
  8143     009D                     	;# 
  8144     009E                     	;# 
  8145     009F                     	;# 
  8146     010C                     	;# 
  8147     010C                     	;# 
  8148     010D                     	;# 
  8149     010E                     	;# 
  8150     010F                     	;# 
  8151     010F                     	;# 
  8152     0110                     	;# 
  8153     0111                     	;# 
  8154     0112                     	;# 
  8155     0113                     	;# 
  8156     0114                     	;# 
  8157     0115                     	;# 
  8158     0116                     	;# 
  8159     0117                     	;# 
  8160     0118                     	;# 
  8161     0119                     	;# 
  8162     0119                     	;# 
  8163     0119                     	;# 
  8164     011A                     	;# 
  8165     011A                     	;# 
  8166     011A                     	;# 
  8167     011B                     	;# 
  8168     011B                     	;# 
  8169     011B                     	;# 
  8170     011B                     	;# 
  8171     011B                     	;# 
  8172     011C                     	;# 
  8173     011C                     	;# 
  8174     011C                     	;# 
  8175     011D                     	;# 
  8176     011D                     	;# 
  8177     011D                     	;# 
  8178     011E                     	;# 
  8179     011E                     	;# 
  8180     011E                     	;# 
  8181     011F                     	;# 
  8182     011F                     	;# 
  8183     011F                     	;# 
  8184     011F                     	;# 
  8185     011F                     	;# 
  8186     018C                     	;# 
  8187     018D                     	;# 
  8188     018E                     	;# 
  8189     018F                     	;# 
  8190     0190                     	;# 
  8191     0191                     	;# 
  8192     0192                     	;# 
  8193     0196                     	;# 
  8194     0197                     	;# 
  8195     0198                     	;# 
  8196     0199                     	;# 
  8197     019A                     	;# 
  8198     019B                     	;# 
  8199     019C                     	;# 
  8200     020C                     	;# 
  8201     020D                     	;# 
  8202     020E                     	;# 
  8203     020E                     	;# 
  8204     020F                     	;# 
  8205     020F                     	;# 
  8206     0210                     	;# 
  8207     0210                     	;# 
  8208     0211                     	;# 
  8209     0211                     	;# 
  8210     0212                     	;# 
  8211     0213                     	;# 
  8212     0214                     	;# 
  8213     0214                     	;# 
  8214     0215                     	;# 
  8215     0215                     	;# 
  8216     0216                     	;# 
  8217     0216                     	;# 
  8218     0217                     	;# 
  8219     0217                     	;# 
  8220     0218                     	;# 
  8221     0219                     	;# 
  8222     021A                     	;# 
  8223     021A                     	;# 
  8224     021B                     	;# 
  8225     021B                     	;# 
  8226     021C                     	;# 
  8227     021C                     	;# 
  8228     021D                     	;# 
  8229     021D                     	;# 
  8230     021E                     	;# 
  8231     021F                     	;# 
  8232     028C                     	;# 
  8233     028C                     	;# 
  8234     028D                     	;# 
  8235     028D                     	;# 
  8236     028E                     	;# 
  8237     028F                     	;# 
  8238     0290                     	;# 
  8239     0291                     	;# 
  8240     0292                     	;# 
  8241     0292                     	;# 
  8242     0293                     	;# 
  8243     0293                     	;# 
  8244     0294                     	;# 
  8245     0295                     	;# 
  8246     0296                     	;# 
  8247     0297                     	;# 
  8248     0298                     	;# 
  8249     0298                     	;# 
  8250     0299                     	;# 
  8251     0299                     	;# 
  8252     029A                     	;# 
  8253     029B                     	;# 
  8254     029C                     	;# 
  8255     029D                     	;# 
  8256     029F                     	;# 
  8257     030C                     	;# 
  8258     030C                     	;# 
  8259     030D                     	;# 
  8260     030E                     	;# 
  8261     030F                     	;# 
  8262     0310                     	;# 
  8263     0310                     	;# 
  8264     0311                     	;# 
  8265     0312                     	;# 
  8266     0313                     	;# 
  8267     0314                     	;# 
  8268     0314                     	;# 
  8269     0315                     	;# 
  8270     0316                     	;# 
  8271     0317                     	;# 
  8272     0318                     	;# 
  8273     0318                     	;# 
  8274     0319                     	;# 
  8275     031A                     	;# 
  8276     031B                     	;# 
  8277     031C                     	;# 
  8278     031C                     	;# 
  8279     031D                     	;# 
  8280     031E                     	;# 
  8281     031F                     	;# 
  8282     038C                     	;# 
  8283     038C                     	;# 
  8284     038D                     	;# 
  8285     038E                     	;# 
  8286     0390                     	;# 
  8287     0390                     	;# 
  8288     0391                     	;# 
  8289     0392                     	;# 
  8290     048C                     	;# 
  8291     048C                     	;# 
  8292     048D                     	;# 
  8293     048E                     	;# 
  8294     048F                     	;# 
  8295     048F                     	;# 
  8296     0490                     	;# 
  8297     0491                     	;# 
  8298     0492                     	;# 
  8299     0492                     	;# 
  8300     0493                     	;# 
  8301     0494                     	;# 
  8302     0495                     	;# 
  8303     0495                     	;# 
  8304     0496                     	;# 
  8305     0497                     	;# 
  8306     0498                     	;# 
  8307     0499                     	;# 
  8308     049A                     	;# 
  8309     049B                     	;# 
  8310     049C                     	;# 
  8311     049D                     	;# 
  8312     050C                     	;# 
  8313     050C                     	;# 
  8314     050D                     	;# 
  8315     050E                     	;# 
  8316     050F                     	;# 
  8317     050F                     	;# 
  8318     0510                     	;# 
  8319     0511                     	;# 
  8320     0512                     	;# 
  8321     0512                     	;# 
  8322     0513                     	;# 
  8323     0514                     	;# 
  8324     0515                     	;# 
  8325     0515                     	;# 
  8326     0516                     	;# 
  8327     0517                     	;# 
  8328     0518                     	;# 
  8329     0519                     	;# 
  8330     051A                     	;# 
  8331     051B                     	;# 
  8332     051C                     	;# 
  8333     051D                     	;# 
  8334     058C                     	;# 
  8335     058C                     	;# 
  8336     058D                     	;# 
  8337     058E                     	;# 
  8338     058F                     	;# 
  8339     058F                     	;# 
  8340     0590                     	;# 
  8341     0591                     	;# 
  8342     0592                     	;# 
  8343     0593                     	;# 
  8344     059C                     	;# 
  8345     059C                     	;# 
  8346     059D                     	;# 
  8347     059D                     	;# 
  8348     059E                     	;# 
  8349     059F                     	;# 
  8350     060C                     	;# 
  8351     060C                     	;# 
  8352     060D                     	;# 
  8353     060D                     	;# 
  8354     060E                     	;# 
  8355     060F                     	;# 
  8356     0610                     	;# 
  8357     0611                     	;# 
  8358     0612                     	;# 
  8359     0613                     	;# 
  8360     0614                     	;# 
  8361     0616                     	;# 
  8362     0616                     	;# 
  8363     0617                     	;# 
  8364     0617                     	;# 
  8365     0618                     	;# 
  8366     0619                     	;# 
  8367     061A                     	;# 
  8368     061B                     	;# 
  8369     061C                     	;# 
  8370     061D                     	;# 
  8371     061E                     	;# 
  8372     068C                     	;# 
  8373     068D                     	;# 
  8374     068E                     	;# 
  8375     068F                     	;# 
  8376     0690                     	;# 
  8377     0691                     	;# 
  8378     0692                     	;# 
  8379     0693                     	;# 
  8380     0694                     	;# 
  8381     070C                     	;# 
  8382     070D                     	;# 
  8383     070E                     	;# 
  8384     070F                     	;# 
  8385     0710                     	;# 
  8386     0711                     	;# 
  8387     0712                     	;# 
  8388     0713                     	;# 
  8389     0714                     	;# 
  8390     0716                     	;# 
  8391     0717                     	;# 
  8392     0718                     	;# 
  8393     0719                     	;# 
  8394     071A                     	;# 
  8395     071B                     	;# 
  8396     071C                     	;# 
  8397     071D                     	;# 
  8398     071E                     	;# 
  8399     0796                     	;# 
  8400     0797                     	;# 
  8401     0798                     	;# 
  8402     0799                     	;# 
  8403     079A                     	;# 
  8404     079B                     	;# 
  8405     079C                     	;# 
  8406     079D                     	;# 
  8407     080C                     	;# 
  8408     080D                     	;# 
  8409     080E                     	;# 
  8410     080F                     	;# 
  8411     0810                     	;# 
  8412     0811                     	;# 
  8413     0813                     	;# 
  8414     0814                     	;# 
  8415     081A                     	;# 
  8416     081A                     	;# 
  8417     081B                     	;# 
  8418     081C                     	;# 
  8419     081C                     	;# 
  8420     081D                     	;# 
  8421     081E                     	;# 
  8422     081F                     	;# 
  8423     088C                     	;# 
  8424     088D                     	;# 
  8425     088E                     	;# 
  8426     088F                     	;# 
  8427     0890                     	;# 
  8428     0891                     	;# 
  8429     0892                     	;# 
  8430     0893                     	;# 
  8431     0895                     	;# 
  8432     0896                     	;# 
  8433     0897                     	;# 
  8434     0898                     	;# 
  8435     0899                     	;# 
  8436     089A                     	;# 
  8437     089B                     	;# 
  8438     090C                     	;# 
  8439     090E                     	;# 
  8440     090F                     	;# 
  8441     091F                     	;# 
  8442     098F                     	;# 
  8443     098F                     	;# 
  8444     0990                     	;# 
  8445     0991                     	;# 
  8446     0992                     	;# 
  8447     0993                     	;# 
  8448     0994                     	;# 
  8449     0995                     	;# 
  8450     0996                     	;# 
  8451     0997                     	;# 
  8452     0A19                     	;# 
  8453     0A19                     	;# 
  8454     0A1A                     	;# 
  8455     0A1A                     	;# 
  8456     0A1B                     	;# 
  8457     0A1B                     	;# 
  8458     0A1B                     	;# 
  8459     0A1C                     	;# 
  8460     0A1C                     	;# 
  8461     0A1D                     	;# 
  8462     0A1D                     	;# 
  8463     0A1E                     	;# 
  8464     0A1E                     	;# 
  8465     0A1F                     	;# 
  8466     0A1F                     	;# 
  8467     0A1F                     	;# 
  8468     1E0F                     	;# 
  8469     1E10                     	;# 
  8470     1E11                     	;# 
  8471     1E12                     	;# 
  8472     1E13                     	;# 
  8473     1E14                     	;# 
  8474     1E15                     	;# 
  8475     1E16                     	;# 
  8476     1E17                     	;# 
  8477     1E18                     	;# 
  8478     1E19                     	;# 
  8479     1E1A                     	;# 
  8480     1E1B                     	;# 
  8481     1E1C                     	;# 
  8482     1E1D                     	;# 
  8483     1E1E                     	;# 
  8484     1E1F                     	;# 
  8485     1E20                     	;# 
  8486     1E21                     	;# 
  8487     1E22                     	;# 
  8488     1E23                     	;# 
  8489     1E24                     	;# 
  8490     1E25                     	;# 
  8491     1E26                     	;# 
  8492     1E27                     	;# 
  8493     1E28                     	;# 
  8494     1E29                     	;# 
  8495     1E2A                     	;# 
  8496     1E2B                     	;# 
  8497     1E2C                     	;# 
  8498     1E2D                     	;# 
  8499     1E2E                     	;# 
  8500     1E2F                     	;# 
  8501     1E30                     	;# 
  8502     1E31                     	;# 
  8503     1E32                     	;# 
  8504     1E33                     	;# 
  8505     1E34                     	;# 
  8506     1E35                     	;# 
  8507     1E36                     	;# 
  8508     1E37                     	;# 
  8509     1E8F                     	;# 
  8510     1E90                     	;# 
  8511     1E91                     	;# 
  8512     1E92                     	;# 
  8513     1E93                     	;# 
  8514     1E94                     	;# 
  8515     1E95                     	;# 
  8516     1E96                     	;# 
  8517     1E97                     	;# 
  8518     1E9C                     	;# 
  8519     1E9D                     	;# 
  8520     1E9E                     	;# 
  8521     1EA1                     	;# 
  8522     1EA2                     	;# 
  8523     1EA3                     	;# 
  8524     1EA4                     	;# 
  8525     1EA5                     	;# 
  8526     1EA9                     	;# 
  8527     1EAA                     	;# 
  8528     1EAB                     	;# 
  8529     1EAC                     	;# 
  8530     1EB1                     	;# 
  8531     1EB2                     	;# 
  8532     1EB3                     	;# 
  8533     1EB8                     	;# 
  8534     1EB9                     	;# 
  8535     1EBA                     	;# 
  8536     1EBB                     	;# 
  8537     1EBC                     	;# 
  8538     1EBD                     	;# 
  8539     1EBE                     	;# 
  8540     1EC3                     	;# 
  8541     1EC5                     	;# 
  8542     1EC6                     	;# 
  8543     1EC7                     	;# 
  8544     1EC8                     	;# 
  8545     1EC9                     	;# 
  8546     1ECA                     	;# 
  8547     1ECB                     	;# 
  8548     1ECC                     	;# 
  8549     1ECD                     	;# 
  8550     1ECE                     	;# 
  8551     1F10                     	;# 
  8552     1F11                     	;# 
  8553     1F12                     	;# 
  8554     1F13                     	;# 
  8555     1F14                     	;# 
  8556     1F15                     	;# 
  8557     1F16                     	;# 
  8558     1F17                     	;# 
  8559     1F18                     	;# 
  8560     1F19                     	;# 
  8561     1F1A                     	;# 
  8562     1F1B                     	;# 
  8563     1F1C                     	;# 
  8564     1F1D                     	;# 
  8565     1F1E                     	;# 
  8566     1F1F                     	;# 
  8567     1F20                     	;# 
  8568     1F21                     	;# 
  8569     1F22                     	;# 
  8570     1F23                     	;# 
  8571     1F24                     	;# 
  8572     1F25                     	;# 
  8573     1F26                     	;# 
  8574     1F27                     	;# 
  8575     1F38                     	;# 
  8576     1F39                     	;# 
  8577     1F3A                     	;# 
  8578     1F3B                     	;# 
  8579     1F3C                     	;# 
  8580     1F3D                     	;# 
  8581     1F3E                     	;# 
  8582     1F3F                     	;# 
  8583     1F43                     	;# 
  8584     1F44                     	;# 
  8585     1F45                     	;# 
  8586     1F46                     	;# 
  8587     1F47                     	;# 
  8588     1F48                     	;# 
  8589     1F49                     	;# 
  8590     1F4A                     	;# 
  8591     1F4E                     	;# 
  8592     1F4F                     	;# 
  8593     1F50                     	;# 
  8594     1F51                     	;# 
  8595     1F52                     	;# 
  8596     1F53                     	;# 
  8597     1F54                     	;# 
  8598     1F55                     	;# 
  8599     1F65                     	;# 
  8600     1F66                     	;# 
  8601     1F67                     	;# 
  8602     1F68                     	;# 
  8603     1F69                     	;# 
  8604     1F6A                     	;# 
  8605     1F6B                     	;# 
  8606     1FE4                     	;# 
  8607     1FE5                     	;# 
  8608     1FE6                     	;# 
  8609     1FE7                     	;# 
  8610     1FE8                     	;# 
  8611     1FE8                     	;# 
  8612     1FE9                     	;# 
  8613     1FEA                     	;# 
  8614     1FEB                     	;# 
  8615     1FED                     	;# 
  8616     1FEE                     	;# 
  8617     1FEF                     	;# 
  8618     0000                     	;# 
  8619     0001                     	;# 
  8620     0002                     	;# 
  8621     0003                     	;# 
  8622     0004                     	;# 
  8623     0005                     	;# 
  8624     0006                     	;# 
  8625     0007                     	;# 
  8626     0008                     	;# 
  8627     0009                     	;# 
  8628     000A                     	;# 
  8629     000B                     	;# 
  8630     000C                     	;# 
  8631     000D                     	;# 
  8632     000E                     	;# 
  8633     0010                     	;# 
  8634     0012                     	;# 
  8635     0013                     	;# 
  8636     0014                     	;# 
  8637     0016                     	;# 
  8638     0018                     	;# 
  8639     0019                     	;# 
  8640     001A                     	;# 
  8641     001C                     	;# 
  8642     008C                     	;# 
  8643     008C                     	;# 
  8644     008D                     	;# 
  8645     008E                     	;# 
  8646     008E                     	;# 
  8647     008F                     	;# 
  8648     0090                     	;# 
  8649     0090                     	;# 
  8650     0091                     	;# 
  8651     0092                     	;# 
  8652     0092                     	;# 
  8653     0093                     	;# 
  8654     0094                     	;# 
  8655     0094                     	;# 
  8656     0095                     	;# 
  8657     0096                     	;# 
  8658     0096                     	;# 
  8659     0097                     	;# 
  8660     0098                     	;# 
  8661     0099                     	;# 
  8662     009A                     	;# 
  8663     009B                     	;# 
  8664     009B                     	;# 
  8665     009C                     	;# 
  8666     009D                     	;# 
  8667     009D                     	;# 
  8668     009E                     	;# 
  8669     009F                     	;# 
  8670     010C                     	;# 
  8671     010C                     	;# 
  8672     010D                     	;# 
  8673     010E                     	;# 
  8674     010F                     	;# 
  8675     010F                     	;# 
  8676     0110                     	;# 
  8677     0111                     	;# 
  8678     0112                     	;# 
  8679     0113                     	;# 
  8680     0114                     	;# 
  8681     0115                     	;# 
  8682     0116                     	;# 
  8683     0117                     	;# 
  8684     0118                     	;# 
  8685     0119                     	;# 
  8686     0119                     	;# 
  8687     0119                     	;# 
  8688     011A                     	;# 
  8689     011A                     	;# 
  8690     011A                     	;# 
  8691     011B                     	;# 
  8692     011B                     	;# 
  8693     011B                     	;# 
  8694     011B                     	;# 
  8695     011B                     	;# 
  8696     011C                     	;# 
  8697     011C                     	;# 
  8698     011C                     	;# 
  8699     011D                     	;# 
  8700     011D                     	;# 
  8701     011D                     	;# 
  8702     011E                     	;# 
  8703     011E                     	;# 
  8704     011E                     	;# 
  8705     011F                     	;# 
  8706     011F                     	;# 
  8707     011F                     	;# 
  8708     011F                     	;# 
  8709     011F                     	;# 
  8710     018C                     	;# 
  8711     018D                     	;# 
  8712     018E                     	;# 
  8713     018F                     	;# 
  8714     0190                     	;# 
  8715     0191                     	;# 
  8716     0192                     	;# 
  8717     0196                     	;# 
  8718     0197                     	;# 
  8719     0198                     	;# 
  8720     0199                     	;# 
  8721     019A                     	;# 
  8722     019B                     	;# 
  8723     019C                     	;# 
  8724     020C                     	;# 
  8725     020D                     	;# 
  8726     020E                     	;# 
  8727     020E                     	;# 
  8728     020F                     	;# 
  8729     020F                     	;# 
  8730     0210                     	;# 
  8731     0210                     	;# 
  8732     0211                     	;# 
  8733     0211                     	;# 
  8734     0212                     	;# 
  8735     0213                     	;# 
  8736     0214                     	;# 
  8737     0214                     	;# 
  8738     0215                     	;# 
  8739     0215                     	;# 
  8740     0216                     	;# 
  8741     0216                     	;# 
  8742     0217                     	;# 
  8743     0217                     	;# 
  8744     0218                     	;# 
  8745     0219                     	;# 
  8746     021A                     	;# 
  8747     021A                     	;# 
  8748     021B                     	;# 
  8749     021B                     	;# 
  8750     021C                     	;# 
  8751     021C                     	;# 
  8752     021D                     	;# 
  8753     021D                     	;# 
  8754     021E                     	;# 
  8755     021F                     	;# 
  8756     028C                     	;# 
  8757     028C                     	;# 
  8758     028D                     	;# 
  8759     028D                     	;# 
  8760     028E                     	;# 
  8761     028F                     	;# 
  8762     0290                     	;# 
  8763     0291                     	;# 
  8764     0292                     	;# 
  8765     0292                     	;# 
  8766     0293                     	;# 
  8767     0293                     	;# 
  8768     0294                     	;# 
  8769     0295                     	;# 
  8770     0296                     	;# 
  8771     0297                     	;# 
  8772     0298                     	;# 
  8773     0298                     	;# 
  8774     0299                     	;# 
  8775     0299                     	;# 
  8776     029A                     	;# 
  8777     029B                     	;# 
  8778     029C                     	;# 
  8779     029D                     	;# 
  8780     029F                     	;# 
  8781     030C                     	;# 
  8782     030C                     	;# 
  8783     030D                     	;# 
  8784     030E                     	;# 
  8785     030F                     	;# 
  8786     0310                     	;# 
  8787     0310                     	;# 
  8788     0311                     	;# 
  8789     0312                     	;# 
  8790     0313                     	;# 
  8791     0314                     	;# 
  8792     0314                     	;# 
  8793     0315                     	;# 
  8794     0316                     	;# 
  8795     0317                     	;# 
  8796     0318                     	;# 
  8797     0318                     	;# 
  8798     0319                     	;# 
  8799     031A                     	;# 
  8800     031B                     	;# 
  8801     031C                     	;# 
  8802     031C                     	;# 
  8803     031D                     	;# 
  8804     031E                     	;# 
  8805     031F                     	;# 
  8806     038C                     	;# 
  8807     038C                     	;# 
  8808     038D                     	;# 
  8809     038E                     	;# 
  8810     0390                     	;# 
  8811     0390                     	;# 
  8812     0391                     	;# 
  8813     0392                     	;# 
  8814     048C                     	;# 
  8815     048C                     	;# 
  8816     048D                     	;# 
  8817     048E                     	;# 
  8818     048F                     	;# 
  8819     048F                     	;# 
  8820     0490                     	;# 
  8821     0491                     	;# 
  8822     0492                     	;# 
  8823     0492                     	;# 
  8824     0493                     	;# 
  8825     0494                     	;# 
  8826     0495                     	;# 
  8827     0495                     	;# 
  8828     0496                     	;# 
  8829     0497                     	;# 
  8830     0498                     	;# 
  8831     0499                     	;# 
  8832     049A                     	;# 
  8833     049B                     	;# 
  8834     049C                     	;# 
  8835     049D                     	;# 
  8836     050C                     	;# 
  8837     050C                     	;# 
  8838     050D                     	;# 
  8839     050E                     	;# 
  8840     050F                     	;# 
  8841     050F                     	;# 
  8842     0510                     	;# 
  8843     0511                     	;# 
  8844     0512                     	;# 
  8845     0512                     	;# 
  8846     0513                     	;# 
  8847     0514                     	;# 
  8848     0515                     	;# 
  8849     0515                     	;# 
  8850     0516                     	;# 
  8851     0517                     	;# 
  8852     0518                     	;# 
  8853     0519                     	;# 
  8854     051A                     	;# 
  8855     051B                     	;# 
  8856     051C                     	;# 
  8857     051D                     	;# 
  8858     058C                     	;# 
  8859     058C                     	;# 
  8860     058D                     	;# 
  8861     058E                     	;# 
  8862     058F                     	;# 
  8863     058F                     	;# 
  8864     0590                     	;# 
  8865     0591                     	;# 
  8866     0592                     	;# 
  8867     0593                     	;# 
  8868     059C                     	;# 
  8869     059C                     	;# 
  8870     059D                     	;# 
  8871     059D                     	;# 
  8872     059E                     	;# 
  8873     059F                     	;# 
  8874     060C                     	;# 
  8875     060C                     	;# 
  8876     060D                     	;# 
  8877     060D                     	;# 
  8878     060E                     	;# 
  8879     060F                     	;# 
  8880     0610                     	;# 
  8881     0611                     	;# 
  8882     0612                     	;# 
  8883     0613                     	;# 
  8884     0614                     	;# 
  8885     0616                     	;# 
  8886     0616                     	;# 
  8887     0617                     	;# 
  8888     0617                     	;# 
  8889     0618                     	;# 
  8890     0619                     	;# 
  8891     061A                     	;# 
  8892     061B                     	;# 
  8893     061C                     	;# 
  8894     061D                     	;# 
  8895     061E                     	;# 
  8896     068C                     	;# 
  8897     068D                     	;# 
  8898     068E                     	;# 
  8899     068F                     	;# 
  8900     0690                     	;# 
  8901     0691                     	;# 
  8902     0692                     	;# 
  8903     0693                     	;# 
  8904     0694                     	;# 
  8905     070C                     	;# 
  8906     070D                     	;# 
  8907     070E                     	;# 
  8908     070F                     	;# 
  8909     0710                     	;# 
  8910     0711                     	;# 
  8911     0712                     	;# 
  8912     0713                     	;# 
  8913     0714                     	;# 
  8914     0716                     	;# 
  8915     0717                     	;# 
  8916     0718                     	;# 
  8917     0719                     	;# 
  8918     071A                     	;# 
  8919     071B                     	;# 
  8920     071C                     	;# 
  8921     071D                     	;# 
  8922     071E                     	;# 
  8923     0796                     	;# 
  8924     0797                     	;# 
  8925     0798                     	;# 
  8926     0799                     	;# 
  8927     079A                     	;# 
  8928     079B                     	;# 
  8929     079C                     	;# 
  8930     079D                     	;# 
  8931     080C                     	;# 
  8932     080D                     	;# 
  8933     080E                     	;# 
  8934     080F                     	;# 
  8935     0810                     	;# 
  8936     0811                     	;# 
  8937     0813                     	;# 
  8938     0814                     	;# 
  8939     081A                     	;# 
  8940     081A                     	;# 
  8941     081B                     	;# 
  8942     081C                     	;# 
  8943     081C                     	;# 
  8944     081D                     	;# 
  8945     081E                     	;# 
  8946     081F                     	;# 
  8947     088C                     	;# 
  8948     088D                     	;# 
  8949     088E                     	;# 
  8950     088F                     	;# 
  8951     0890                     	;# 
  8952     0891                     	;# 
  8953     0892                     	;# 
  8954     0893                     	;# 
  8955     0895                     	;# 
  8956     0896                     	;# 
  8957     0897                     	;# 
  8958     0898                     	;# 
  8959     0899                     	;# 
  8960     089A                     	;# 
  8961     089B                     	;# 
  8962     090C                     	;# 
  8963     090E                     	;# 
  8964     090F                     	;# 
  8965     091F                     	;# 
  8966     098F                     	;# 
  8967     098F                     	;# 
  8968     0990                     	;# 
  8969     0991                     	;# 
  8970     0992                     	;# 
  8971     0993                     	;# 
  8972     0994                     	;# 
  8973     0995                     	;# 
  8974     0996                     	;# 
  8975     0997                     	;# 
  8976     0A19                     	;# 
  8977     0A19                     	;# 
  8978     0A1A                     	;# 
  8979     0A1A                     	;# 
  8980     0A1B                     	;# 
  8981     0A1B                     	;# 
  8982     0A1B                     	;# 
  8983     0A1C                     	;# 
  8984     0A1C                     	;# 
  8985     0A1D                     	;# 
  8986     0A1D                     	;# 
  8987     0A1E                     	;# 
  8988     0A1E                     	;# 
  8989     0A1F                     	;# 
  8990     0A1F                     	;# 
  8991     0A1F                     	;# 
  8992     1E0F                     	;# 
  8993     1E10                     	;# 
  8994     1E11                     	;# 
  8995     1E12                     	;# 
  8996     1E13                     	;# 
  8997     1E14                     	;# 
  8998     1E15                     	;# 
  8999     1E16                     	;# 
  9000     1E17                     	;# 
  9001     1E18                     	;# 
  9002     1E19                     	;# 
  9003     1E1A                     	;# 
  9004     1E1B                     	;# 
  9005     1E1C                     	;# 
  9006     1E1D                     	;# 
  9007     1E1E                     	;# 
  9008     1E1F                     	;# 
  9009     1E20                     	;# 
  9010     1E21                     	;# 
  9011     1E22                     	;# 
  9012     1E23                     	;# 
  9013     1E24                     	;# 
  9014     1E25                     	;# 
  9015     1E26                     	;# 
  9016     1E27                     	;# 
  9017     1E28                     	;# 
  9018     1E29                     	;# 
  9019     1E2A                     	;# 
  9020     1E2B                     	;# 
  9021     1E2C                     	;# 
  9022     1E2D                     	;# 
  9023     1E2E                     	;# 
  9024     1E2F                     	;# 
  9025     1E30                     	;# 
  9026     1E31                     	;# 
  9027     1E32                     	;# 
  9028     1E33                     	;# 
  9029     1E34                     	;# 
  9030     1E35                     	;# 
  9031     1E36                     	;# 
  9032     1E37                     	;# 
  9033     1E8F                     	;# 
  9034     1E90                     	;# 
  9035     1E91                     	;# 
  9036     1E92                     	;# 
  9037     1E93                     	;# 
  9038     1E94                     	;# 
  9039     1E95                     	;# 
  9040     1E96                     	;# 
  9041     1E97                     	;# 
  9042     1E9C                     	;# 
  9043     1E9D                     	;# 
  9044     1E9E                     	;# 
  9045     1EA1                     	;# 
  9046     1EA2                     	;# 
  9047     1EA3                     	;# 
  9048     1EA4                     	;# 
  9049     1EA5                     	;# 
  9050     1EA9                     	;# 
  9051     1EAA                     	;# 
  9052     1EAB                     	;# 
  9053     1EAC                     	;# 
  9054     1EB1                     	;# 
  9055     1EB2                     	;# 
  9056     1EB3                     	;# 
  9057     1EB8                     	;# 
  9058     1EB9                     	;# 
  9059     1EBA                     	;# 
  9060     1EBB                     	;# 
  9061     1EBC                     	;# 
  9062     1EBD                     	;# 
  9063     1EBE                     	;# 
  9064     1EC3                     	;# 
  9065     1EC5                     	;# 
  9066     1EC6                     	;# 
  9067     1EC7                     	;# 
  9068     1EC8                     	;# 
  9069     1EC9                     	;# 
  9070     1ECA                     	;# 
  9071     1ECB                     	;# 
  9072     1ECC                     	;# 
  9073     1ECD                     	;# 
  9074     1ECE                     	;# 
  9075     1F10                     	;# 
  9076     1F11                     	;# 
  9077     1F12                     	;# 
  9078     1F13                     	;# 
  9079     1F14                     	;# 
  9080     1F15                     	;# 
  9081     1F16                     	;# 
  9082     1F17                     	;# 
  9083     1F18                     	;# 
  9084     1F19                     	;# 
  9085     1F1A                     	;# 
  9086     1F1B                     	;# 
  9087     1F1C                     	;# 
  9088     1F1D                     	;# 
  9089     1F1E                     	;# 
  9090     1F1F                     	;# 
  9091     1F20                     	;# 
  9092     1F21                     	;# 
  9093     1F22                     	;# 
  9094     1F23                     	;# 
  9095     1F24                     	;# 
  9096     1F25                     	;# 
  9097     1F26                     	;# 
  9098     1F27                     	;# 
  9099     1F38                     	;# 
  9100     1F39                     	;# 
  9101     1F3A                     	;# 
  9102     1F3B                     	;# 
  9103     1F3C                     	;# 
  9104     1F3D                     	;# 
  9105     1F3E                     	;# 
  9106     1F3F                     	;# 
  9107     1F43                     	;# 
  9108     1F44                     	;# 
  9109     1F45                     	;# 
  9110     1F46                     	;# 
  9111     1F47                     	;# 
  9112     1F48                     	;# 
  9113     1F49                     	;# 
  9114     1F4A                     	;# 
  9115     1F4E                     	;# 
  9116     1F4F                     	;# 
  9117     1F50                     	;# 
  9118     1F51                     	;# 
  9119     1F52                     	;# 
  9120     1F53                     	;# 
  9121     1F54                     	;# 
  9122     1F55                     	;# 
  9123     1F65                     	;# 
  9124     1F66                     	;# 
  9125     1F67                     	;# 
  9126     1F68                     	;# 
  9127     1F69                     	;# 
  9128     1F6A                     	;# 
  9129     1F6B                     	;# 
  9130     1FE4                     	;# 
  9131     1FE5                     	;# 
  9132     1FE6                     	;# 
  9133     1FE7                     	;# 
  9134     1FE8                     	;# 
  9135     1FE8                     	;# 
  9136     1FE9                     	;# 
  9137     1FEA                     	;# 
  9138     1FEB                     	;# 
  9139     1FED                     	;# 
  9140     1FEE                     	;# 
  9141     1FEF                     	;# 
  9142     0000                     	;# 
  9143     0001                     	;# 
  9144     0002                     	;# 
  9145     0003                     	;# 
  9146     0004                     	;# 
  9147     0005                     	;# 
  9148     0006                     	;# 
  9149     0007                     	;# 
  9150     0008                     	;# 
  9151     0009                     	;# 
  9152     000A                     	;# 
  9153     000B                     	;# 
  9154     000C                     	;# 
  9155     000D                     	;# 
  9156     000E                     	;# 
  9157     0010                     	;# 
  9158     0012                     	;# 
  9159     0013                     	;# 
  9160     0014                     	;# 
  9161     0016                     	;# 
  9162     0018                     	;# 
  9163     0019                     	;# 
  9164     001A                     	;# 
  9165     001C                     	;# 
  9166     008C                     	;# 
  9167     008C                     	;# 
  9168     008D                     	;# 
  9169     008E                     	;# 
  9170     008E                     	;# 
  9171     008F                     	;# 
  9172     0090                     	;# 
  9173     0090                     	;# 
  9174     0091                     	;# 
  9175     0092                     	;# 
  9176     0092                     	;# 
  9177     0093                     	;# 
  9178     0094                     	;# 
  9179     0094                     	;# 
  9180     0095                     	;# 
  9181     0096                     	;# 
  9182     0096                     	;# 
  9183     0097                     	;# 
  9184     0098                     	;# 
  9185     0099                     	;# 
  9186     009A                     	;# 
  9187     009B                     	;# 
  9188     009B                     	;# 
  9189     009C                     	;# 
  9190     009D                     	;# 
  9191     009D                     	;# 
  9192     009E                     	;# 
  9193     009F                     	;# 
  9194     010C                     	;# 
  9195     010C                     	;# 
  9196     010D                     	;# 
  9197     010E                     	;# 
  9198     010F                     	;# 
  9199     010F                     	;# 
  9200     0110                     	;# 
  9201     0111                     	;# 
  9202     0112                     	;# 
  9203     0113                     	;# 
  9204     0114                     	;# 
  9205     0115                     	;# 
  9206     0116                     	;# 
  9207     0117                     	;# 
  9208     0118                     	;# 
  9209     0119                     	;# 
  9210     0119                     	;# 
  9211     0119                     	;# 
  9212     011A                     	;# 
  9213     011A                     	;# 
  9214     011A                     	;# 
  9215     011B                     	;# 
  9216     011B                     	;# 
  9217     011B                     	;# 
  9218     011B                     	;# 
  9219     011B                     	;# 
  9220     011C                     	;# 
  9221     011C                     	;# 
  9222     011C                     	;# 
  9223     011D                     	;# 
  9224     011D                     	;# 
  9225     011D                     	;# 
  9226     011E                     	;# 
  9227     011E                     	;# 
  9228     011E                     	;# 
  9229     011F                     	;# 
  9230     011F                     	;# 
  9231     011F                     	;# 
  9232     011F                     	;# 
  9233     011F                     	;# 
  9234     018C                     	;# 
  9235     018D                     	;# 
  9236     018E                     	;# 
  9237     018F                     	;# 
  9238     0190                     	;# 
  9239     0191                     	;# 
  9240     0192                     	;# 
  9241     0196                     	;# 
  9242     0197                     	;# 
  9243     0198                     	;# 
  9244     0199                     	;# 
  9245     019A                     	;# 
  9246     019B                     	;# 
  9247     019C                     	;# 
  9248     020C                     	;# 
  9249     020D                     	;# 
  9250     020E                     	;# 
  9251     020E                     	;# 
  9252     020F                     	;# 
  9253     020F                     	;# 
  9254     0210                     	;# 
  9255     0210                     	;# 
  9256     0211                     	;# 
  9257     0211                     	;# 
  9258     0212                     	;# 
  9259     0213                     	;# 
  9260     0214                     	;# 
  9261     0214                     	;# 
  9262     0215                     	;# 
  9263     0215                     	;# 
  9264     0216                     	;# 
  9265     0216                     	;# 
  9266     0217                     	;# 
  9267     0217                     	;# 
  9268     0218                     	;# 
  9269     0219                     	;# 
  9270     021A                     	;# 
  9271     021A                     	;# 
  9272     021B                     	;# 
  9273     021B                     	;# 
  9274     021C                     	;# 
  9275     021C                     	;# 
  9276     021D                     	;# 
  9277     021D                     	;# 
  9278     021E                     	;# 
  9279     021F                     	;# 
  9280     028C                     	;# 
  9281     028C                     	;# 
  9282     028D                     	;# 
  9283     028D                     	;# 
  9284     028E                     	;# 
  9285     028F                     	;# 
  9286     0290                     	;# 
  9287     0291                     	;# 
  9288     0292                     	;# 
  9289     0292                     	;# 
  9290     0293                     	;# 
  9291     0293                     	;# 
  9292     0294                     	;# 
  9293     0295                     	;# 
  9294     0296                     	;# 
  9295     0297                     	;# 
  9296     0298                     	;# 
  9297     0298                     	;# 
  9298     0299                     	;# 
  9299     0299                     	;# 
  9300     029A                     	;# 
  9301     029B                     	;# 
  9302     029C                     	;# 
  9303     029D                     	;# 
  9304     029F                     	;# 
  9305     030C                     	;# 
  9306     030C                     	;# 
  9307     030D                     	;# 
  9308     030E                     	;# 
  9309     030F                     	;# 
  9310     0310                     	;# 
  9311     0310                     	;# 
  9312     0311                     	;# 
  9313     0312                     	;# 
  9314     0313                     	;# 
  9315     0314                     	;# 
  9316     0314                     	;# 
  9317     0315                     	;# 
  9318     0316                     	;# 
  9319     0317                     	;# 
  9320     0318                     	;# 
  9321     0318                     	;# 
  9322     0319                     	;# 
  9323     031A                     	;# 
  9324     031B                     	;# 
  9325     031C                     	;# 
  9326     031C                     	;# 
  9327     031D                     	;# 
  9328     031E                     	;# 
  9329     031F                     	;# 
  9330     038C                     	;# 
  9331     038C                     	;# 
  9332     038D                     	;# 
  9333     038E                     	;# 
  9334     0390                     	;# 
  9335     0390                     	;# 
  9336     0391                     	;# 
  9337     0392                     	;# 
  9338     048C                     	;# 
  9339     048C                     	;# 
  9340     048D                     	;# 
  9341     048E                     	;# 
  9342     048F                     	;# 
  9343     048F                     	;# 
  9344     0490                     	;# 
  9345     0491                     	;# 
  9346     0492                     	;# 
  9347     0492                     	;# 
  9348     0493                     	;# 
  9349     0494                     	;# 
  9350     0495                     	;# 
  9351     0495                     	;# 
  9352     0496                     	;# 
  9353     0497                     	;# 
  9354     0498                     	;# 
  9355     0499                     	;# 
  9356     049A                     	;# 
  9357     049B                     	;# 
  9358     049C                     	;# 
  9359     049D                     	;# 
  9360     050C                     	;# 
  9361     050C                     	;# 
  9362     050D                     	;# 
  9363     050E                     	;# 
  9364     050F                     	;# 
  9365     050F                     	;# 
  9366     0510                     	;# 
  9367     0511                     	;# 
  9368     0512                     	;# 
  9369     0512                     	;# 
  9370     0513                     	;# 
  9371     0514                     	;# 
  9372     0515                     	;# 
  9373     0515                     	;# 
  9374     0516                     	;# 
  9375     0517                     	;# 
  9376     0518                     	;# 
  9377     0519                     	;# 
  9378     051A                     	;# 
  9379     051B                     	;# 
  9380     051C                     	;# 
  9381     051D                     	;# 
  9382     058C                     	;# 
  9383     058C                     	;# 
  9384     058D                     	;# 
  9385     058E                     	;# 
  9386     058F                     	;# 
  9387     058F                     	;# 
  9388     0590                     	;# 
  9389     0591                     	;# 
  9390     0592                     	;# 
  9391     0593                     	;# 
  9392     059C                     	;# 
  9393     059C                     	;# 
  9394     059D                     	;# 
  9395     059D                     	;# 
  9396     059E                     	;# 
  9397     059F                     	;# 
  9398     060C                     	;# 
  9399     060C                     	;# 
  9400     060D                     	;# 
  9401     060D                     	;# 
  9402     060E                     	;# 
  9403     060F                     	;# 
  9404     0610                     	;# 
  9405     0611                     	;# 
  9406     0612                     	;# 
  9407     0613                     	;# 
  9408     0614                     	;# 
  9409     0616                     	;# 
  9410     0616                     	;# 
  9411     0617                     	;# 
  9412     0617                     	;# 
  9413     0618                     	;# 
  9414     0619                     	;# 
  9415     061A                     	;# 
  9416     061B                     	;# 
  9417     061C                     	;# 
  9418     061D                     	;# 
  9419     061E                     	;# 
  9420     068C                     	;# 
  9421     068D                     	;# 
  9422     068E                     	;# 
  9423     068F                     	;# 
  9424     0690                     	;# 
  9425     0691                     	;# 
  9426     0692                     	;# 
  9427     0693                     	;# 
  9428     0694                     	;# 
  9429     070C                     	;# 
  9430     070D                     	;# 
  9431     070E                     	;# 
  9432     070F                     	;# 
  9433     0710                     	;# 
  9434     0711                     	;# 
  9435     0712                     	;# 
  9436     0713                     	;# 
  9437     0714                     	;# 
  9438     0716                     	;# 
  9439     0717                     	;# 
  9440     0718                     	;# 
  9441     0719                     	;# 
  9442     071A                     	;# 
  9443     071B                     	;# 
  9444     071C                     	;# 
  9445     071D                     	;# 
  9446     071E                     	;# 
  9447     0796                     	;# 
  9448     0797                     	;# 
  9449     0798                     	;# 
  9450     0799                     	;# 
  9451     079A                     	;# 
  9452     079B                     	;# 
  9453     079C                     	;# 
  9454     079D                     	;# 
  9455     080C                     	;# 
  9456     080D                     	;# 
  9457     080E                     	;# 
  9458     080F                     	;# 
  9459     0810                     	;# 
  9460     0811                     	;# 
  9461     0813                     	;# 
  9462     0814                     	;# 
  9463     081A                     	;# 
  9464     081A                     	;# 
  9465     081B                     	;# 
  9466     081C                     	;# 
  9467     081C                     	;# 
  9468     081D                     	;# 
  9469     081E                     	;# 
  9470     081F                     	;# 
  9471     088C                     	;# 
  9472     088D                     	;# 
  9473     088E                     	;# 
  9474     088F                     	;# 
  9475     0890                     	;# 
  9476     0891                     	;# 
  9477     0892                     	;# 
  9478     0893                     	;# 
  9479     0895                     	;# 
  9480     0896                     	;# 
  9481     0897                     	;# 
  9482     0898                     	;# 
  9483     0899                     	;# 
  9484     089A                     	;# 
  9485     089B                     	;# 
  9486     090C                     	;# 
  9487     090E                     	;# 
  9488     090F                     	;# 
  9489     091F                     	;# 
  9490     098F                     	;# 
  9491     098F                     	;# 
  9492     0990                     	;# 
  9493     0991                     	;# 
  9494     0992                     	;# 
  9495     0993                     	;# 
  9496     0994                     	;# 
  9497     0995                     	;# 
  9498     0996                     	;# 
  9499     0997                     	;# 
  9500     0A19                     	;# 
  9501     0A19                     	;# 
  9502     0A1A                     	;# 
  9503     0A1A                     	;# 
  9504     0A1B                     	;# 
  9505     0A1B                     	;# 
  9506     0A1B                     	;# 
  9507     0A1C                     	;# 
  9508     0A1C                     	;# 
  9509     0A1D                     	;# 
  9510     0A1D                     	;# 
  9511     0A1E                     	;# 
  9512     0A1E                     	;# 
  9513     0A1F                     	;# 
  9514     0A1F                     	;# 
  9515     0A1F                     	;# 
  9516     1E0F                     	;# 
  9517     1E10                     	;# 
  9518     1E11                     	;# 
  9519     1E12                     	;# 
  9520     1E13                     	;# 
  9521     1E14                     	;# 
  9522     1E15                     	;# 
  9523     1E16                     	;# 
  9524     1E17                     	;# 
  9525     1E18                     	;# 
  9526     1E19                     	;# 
  9527     1E1A                     	;# 
  9528     1E1B                     	;# 
  9529     1E1C                     	;# 
  9530     1E1D                     	;# 
  9531     1E1E                     	;# 
  9532     1E1F                     	;# 
  9533     1E20                     	;# 
  9534     1E21                     	;# 
  9535     1E22                     	;# 
  9536     1E23                     	;# 
  9537     1E24                     	;# 
  9538     1E25                     	;# 
  9539     1E26                     	;# 
  9540     1E27                     	;# 
  9541     1E28                     	;# 
  9542     1E29                     	;# 
  9543     1E2A                     	;# 
  9544     1E2B                     	;# 
  9545     1E2C                     	;# 
  9546     1E2D                     	;# 
  9547     1E2E                     	;# 
  9548     1E2F                     	;# 
  9549     1E30                     	;# 
  9550     1E31                     	;# 
  9551     1E32                     	;# 
  9552     1E33                     	;# 
  9553     1E34                     	;# 
  9554     1E35                     	;# 
  9555     1E36                     	;# 
  9556     1E37                     	;# 
  9557     1E8F                     	;# 
  9558     1E90                     	;# 
  9559     1E91                     	;# 
  9560     1E92                     	;# 
  9561     1E93                     	;# 
  9562     1E94                     	;# 
  9563     1E95                     	;# 
  9564     1E96                     	;# 
  9565     1E97                     	;# 
  9566     1E9C                     	;# 
  9567     1E9D                     	;# 
  9568     1E9E                     	;# 
  9569     1EA1                     	;# 
  9570     1EA2                     	;# 
  9571     1EA3                     	;# 
  9572     1EA4                     	;# 
  9573     1EA5                     	;# 
  9574     1EA9                     	;# 
  9575     1EAA                     	;# 
  9576     1EAB                     	;# 
  9577     1EAC                     	;# 
  9578     1EB1                     	;# 
  9579     1EB2                     	;# 
  9580     1EB3                     	;# 
  9581     1EB8                     	;# 
  9582     1EB9                     	;# 
  9583     1EBA                     	;# 
  9584     1EBB                     	;# 
  9585     1EBC                     	;# 
  9586     1EBD                     	;# 
  9587     1EBE                     	;# 
  9588     1EC3                     	;# 
  9589     1EC5                     	;# 
  9590     1EC6                     	;# 
  9591     1EC7                     	;# 
  9592     1EC8                     	;# 
  9593     1EC9                     	;# 
  9594     1ECA                     	;# 
  9595     1ECB                     	;# 
  9596     1ECC                     	;# 
  9597     1ECD                     	;# 
  9598     1ECE                     	;# 
  9599     1F10                     	;# 
  9600     1F11                     	;# 
  9601     1F12                     	;# 
  9602     1F13                     	;# 
  9603     1F14                     	;# 
  9604     1F15                     	;# 
  9605     1F16                     	;# 
  9606     1F17                     	;# 
  9607     1F18                     	;# 
  9608     1F19                     	;# 
  9609     1F1A                     	;# 
  9610     1F1B                     	;# 
  9611     1F1C                     	;# 
  9612     1F1D                     	;# 
  9613     1F1E                     	;# 
  9614     1F1F                     	;# 
  9615     1F20                     	;# 
  9616     1F21                     	;# 
  9617     1F22                     	;# 
  9618     1F23                     	;# 
  9619     1F24                     	;# 
  9620     1F25                     	;# 
  9621     1F26                     	;# 
  9622     1F27                     	;# 
  9623     1F38                     	;# 
  9624     1F39                     	;# 
  9625     1F3A                     	;# 
  9626     1F3B                     	;# 
  9627     1F3C                     	;# 
  9628     1F3D                     	;# 
  9629     1F3E                     	;# 
  9630     1F3F                     	;# 
  9631     1F43                     	;# 
  9632     1F44                     	;# 
  9633     1F45                     	;# 
  9634     1F46                     	;# 
  9635     1F47                     	;# 
  9636     1F48                     	;# 
  9637     1F49                     	;# 
  9638     1F4A                     	;# 
  9639     1F4E                     	;# 
  9640     1F4F                     	;# 
  9641     1F50                     	;# 
  9642     1F51                     	;# 
  9643     1F52                     	;# 
  9644     1F53                     	;# 
  9645     1F54                     	;# 
  9646     1F55                     	;# 
  9647     1F65                     	;# 
  9648     1F66                     	;# 
  9649     1F67                     	;# 
  9650     1F68                     	;# 
  9651     1F69                     	;# 
  9652     1F6A                     	;# 
  9653     1F6B                     	;# 
  9654     1FE4                     	;# 
  9655     1FE5                     	;# 
  9656     1FE6                     	;# 
  9657     1FE7                     	;# 
  9658     1FE8                     	;# 
  9659     1FE8                     	;# 
  9660     1FE9                     	;# 
  9661     1FEA                     	;# 
  9662     1FEB                     	;# 
  9663     1FED                     	;# 
  9664     1FEE                     	;# 
  9665     1FEF                     	;# 
  9666                           
  9667 ;; Function _do_I2C_RESET is unused but had its address taken
  9668     0000                     
  9669 ;; Function _do_I2C_IDLE is unused but had its address taken
  9670     0000                     
  9671 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
  9672     0000                     
  9673 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
  9674     0000                     
  9675 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
  9676     0000                     
  9677 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
  9678     0000                     
  9679 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
  9680     0000                     
  9681 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
  9682     0000                     
  9683 ;; Function _do_I2C_RCEN is unused but had its address taken
  9684     0000                     
  9685 ;; Function _do_I2C_DO_ACK is unused but had its address taken
  9686     0000                     
  9687 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
  9688     0000                     
  9689 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
  9690     0000                     
  9691 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
  9692     0000                     
  9693 ;; Function _do_I2C_TX is unused but had its address taken
  9694     0000                     
  9695 ;; Function _do_I2C_RX is unused but had its address taken
  9696     0000                     
  9697 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
  9698     0000                     
  9699 ;; Function _i2c_ISR is unused but had its address taken
  9700     0000                     
  9701 ;; Function _i2c_busCollisionISR is unused but had its address taken
  9702     0000                     
  9703 ;; Function _returnStop is unused but had its address taken
  9704     0000                     
  9705 ;; Function _returnReset is unused but had its address taken
  9706     0000                     
  9707 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
  9708     0000                     
  9709 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  9710     0000                     
  9711                           	psect	idataBANK0
  9712     0002                     __pidataBANK0:
  9713                           
  9714                           ;initializer for RN487X_GetInputsValues@F12901
  9715     0002  3430               	retlw	48
  9716     0003  3430               	retlw	48
  9717                           
  9718                           	psect	idataBANK2
  9719     08F3                     __pidataBANK2:
  9720                           
  9721                           ;initializer for __hex
  9722     08F3  3430               	retlw	48
  9723     08F4  3431               	retlw	49
  9724     08F5  3432               	retlw	50
  9725     08F6  3433               	retlw	51
  9726     08F7  3434               	retlw	52
  9727     08F8  3435               	retlw	53
  9728     08F9  3436               	retlw	54
  9729     08FA  3437               	retlw	55
  9730     08FB  3438               	retlw	56
  9731     08FC  3439               	retlw	57
  9732     08FD  3441               	retlw	65
  9733     08FE  3442               	retlw	66
  9734     08FF  3443               	retlw	67
  9735     0900  3444               	retlw	68
  9736     0901  3445               	retlw	69
  9737     0902  3446               	retlw	70
  9738     0903  3400               	retlw	0
  9739                           
  9740                           	psect	stringtext1
  9741     1000                     __pstringtext1:
  9742     1000                     _uart:
  9743     1000  34D6               	retlw	low _EUSART1_Read
  9744     1001  340B               	retlw	high _EUSART1_Read
  9745     1002  3423               	retlw	low _EUSART1_Write
  9746     1003  340C               	retlw	high _EUSART1_Write
  9747     1004  3400               	retlw	0
  9748     1005  3400               	retlw	0
  9749     1006  3443               	retlw	low _EUSART1_is_rx_ready
  9750     1007  3417               	retlw	high _EUSART1_is_rx_ready
  9751     1008  34DB               	retlw	low _EUSART1_SetTxInterruptHandler
  9752     1009  3416               	retlw	high _EUSART1_SetTxInterruptHandler
  9753     100A  3447               	retlw	low _EUSART1_Receive_ISR
  9754     100B  340F               	retlw	high _EUSART1_Receive_ISR
  9755     100C  34D5               	retlw	low _EUSART1_SetRxInterruptHandler
  9756     100D  3416               	retlw	high _EUSART1_SetRxInterruptHandler
  9757     100E  3465               	retlw	low _EUSART1_is_tx_done
  9758     100F  3416               	retlw	high _EUSART1_is_tx_done
  9759     1010  34FC               	retlw	low _EUSART1_Transmit_ISR
  9760     1011  340A               	retlw	high _EUSART1_Transmit_ISR
  9761     1012  3484               	retlw	low _EUSART1_Initialize
  9762     1013  340F               	retlw	high _EUSART1_Initialize
  9763     1014  34B0               	retlw	low _EUSART2_Read
  9764     1015  340B               	retlw	high _EUSART2_Read
  9765     1016  34FC               	retlw	low _EUSART2_Write
  9766     1017  340B               	retlw	high _EUSART2_Write
  9767     1018  3400               	retlw	0
  9768     1019  3400               	retlw	0
  9769     101A  343A               	retlw	low _EUSART2_is_rx_ready
  9770     101B  3417               	retlw	high _EUSART2_is_rx_ready
  9771     101C  34F9               	retlw	low _EUSART2_SetTxInterruptHandler
  9772     101D  3416               	retlw	high _EUSART2_SetTxInterruptHandler
  9773     101E  340E               	retlw	low _EUSART2_Receive_ISR
  9774     101F  340F               	retlw	high _EUSART2_Receive_ISR
  9775     1020  34F3               	retlw	low _EUSART2_SetRxInterruptHandler
  9776     1021  3416               	retlw	high _EUSART2_SetRxInterruptHandler
  9777     1022  3461               	retlw	low _EUSART2_is_tx_done
  9778     1023  3416               	retlw	high _EUSART2_is_tx_done
  9779     1024  34DA               	retlw	low _EUSART2_Transmit_ISR
  9780     1025  340A               	retlw	high _EUSART2_Transmit_ISR
  9781     1026  34C2               	retlw	low _EUSART2_Initialize
  9782     1027  340F               	retlw	high _EUSART2_Initialize
  9783     1028                     __end_of_uart:
  9784                           
  9785                           	psect	stringtext2
  9786     1028                     __pstringtext2:
  9787     1028                     _i2c1_fsmStateTable:
  9788     1028  346E               	retlw	low _I2C1_DO_IDLE
  9789     1029  3416               	retlw	high _I2C1_DO_IDLE
  9790     102A  3431               	retlw	low _I2C1_DO_SEND_ADR_READ
  9791     102B  3417               	retlw	high _I2C1_DO_SEND_ADR_READ
  9792     102C  3418               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  9793     102D  3417               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  9794     102E  3421               	retlw	low _I2C1_DO_TX
  9795     102F  3405               	retlw	high _I2C1_DO_TX
  9796     1030  3477               	retlw	low _I2C1_DO_RX
  9797     1031  3407               	retlw	high _I2C1_DO_RX
  9798     1032  3411               	retlw	low _I2C1_DO_RCEN
  9799     1033  3417               	retlw	high _I2C1_DO_RCEN
  9800     1034  34C6               	retlw	low _I2C1_DO_TX_EMPTY
  9801     1035  340C               	retlw	high _I2C1_DO_TX_EMPTY
  9802     1036  3473               	retlw	low _I2C1_DO_SEND_RESTART_READ
  9803     1037  3416               	retlw	high _I2C1_DO_SEND_RESTART_READ
  9804     1038  3478               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  9805     1039  3416               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  9806     103A  347D               	retlw	low _I2C1_DO_SEND_RESTART
  9807     103B  3416               	retlw	high _I2C1_DO_SEND_RESTART
  9808     103C  3482               	retlw	low _I2C1_DO_SEND_STOP
  9809     103D  3416               	retlw	high _I2C1_DO_SEND_STOP
  9810     103E  3487               	retlw	low _I2C1_DO_RX_ACK
  9811     103F  3416               	retlw	high _I2C1_DO_RX_ACK
  9812     1040  348C               	retlw	low _I2C1_DO_RX_NACK_STOP
  9813     1041  3416               	retlw	high _I2C1_DO_RX_NACK_STOP
  9814     1042  3491               	retlw	low _I2C1_DO_RX_NACK_RESTART
  9815     1043  3416               	retlw	high _I2C1_DO_RX_NACK_RESTART
  9816     1044  3496               	retlw	low _I2C1_DO_RESET
  9817     1045  3416               	retlw	high _I2C1_DO_RESET
  9818     1046  344A               	retlw	low _I2C1_DO_ADDRESS_NACK
  9819     1047  340C               	retlw	high _I2C1_DO_ADDRESS_NACK
  9820     1048                     __end_of_i2c1_fsmStateTable:
  9821                           
  9822                           	psect	stringtext3
  9823     1048                     __pstringtext3:
  9824     1048                     _fsmStateTable:
  9825     1048  3400               	retlw	0
  9826     1049  3400               	retlw	0
  9827     104A  3400               	retlw	0
  9828     104B  3400               	retlw	0
  9829     104C  3400               	retlw	0
  9830     104D  3400               	retlw	0
  9831     104E  3400               	retlw	0
  9832     104F  3400               	retlw	0
  9833     1050  3400               	retlw	0
  9834     1051  3400               	retlw	0
  9835     1052  3400               	retlw	0
  9836     1053  3400               	retlw	0
  9837     1054  3400               	retlw	0
  9838     1055  3400               	retlw	0
  9839     1056  3400               	retlw	0
  9840     1057  3400               	retlw	0
  9841     1058  3400               	retlw	0
  9842     1059  3400               	retlw	0
  9843     105A  3400               	retlw	0
  9844     105B  3400               	retlw	0
  9845     105C  3400               	retlw	0
  9846     105D  3400               	retlw	0
  9847     105E  3400               	retlw	0
  9848     105F  3400               	retlw	0
  9849     1060  3400               	retlw	0
  9850     1061  3400               	retlw	0
  9851     1062  3400               	retlw	0
  9852     1063  3400               	retlw	0
  9853     1064  3400               	retlw	0
  9854     1065  3400               	retlw	0
  9855     1066  3400               	retlw	0
  9856     1067  3400               	retlw	0
  9857     1068                     __end_of_fsmStateTable:
  9858                           
  9859                           	psect	stringtext4
  9860     1068                     __pstringtext4:
  9861     1068                     _RN487X:
  9862     1068  34B3               	retlw	low _RN487X_Write
  9863     1069  3417               	retlw	high _RN487X_Write
  9864     106A  3455               	retlw	low _RN487X_Read@rn487x_interface$F1339
  9865     106B  3417               	retlw	high _RN487X_Read@rn487x_interface$F1339
  9866     106C  345F               	retlw	low _RN487X_is_tx_done
  9867     106D  3417               	retlw	high _RN487X_is_tx_done
  9868     106E  3469               	retlw	low _RN487X_is_rx_ready
  9869     106F  3417               	retlw	high _RN487X_is_rx_ready
  9870     1070  349D               	retlw	low _RN487X_IndicateRx
  9871     1071  3417               	retlw	high _RN487X_IndicateRx
  9872     1072  34A8               	retlw	low _RN487X_Reset
  9873     1073  3417               	retlw	high _RN487X_Reset
  9874     1074  34BF               	retlw	low _RN487X_SetSystemMode
  9875     1075  3417               	retlw	high _RN487X_SetSystemMode
  9876     1076  3420               	retlw	low _RN487X_Delay
  9877     1077  3417               	retlw	high _RN487X_Delay
  9878     1078  34F0               	retlw	low _RN487X_MessageHandler
  9879     1079  3406               	retlw	high _RN487X_MessageHandler
  9880     107A                     __end_of_RN487X:
  9881                           
  9882                           	psect	stringtext5
  9883     1832                     __pstringtext5:
  9884     1832                     _rn487x_driver_version:
  9885     1832  3422               	retlw	low (STR_1| (0+32768))
  9886     1833  3498               	retlw	high (STR_1| (0+32768))
  9887     1834                     __end_of_rn487x_driver_version:
  9888                           
  9889                           	psect	stringtext6
  9890     1834                     __pstringtext6:
  9891     1834                     _protocol_version_number:
  9892     1834  3422               	retlw	low (STR_1| (0+32768))
  9893     1835  3498               	retlw	high (STR_1| (0+32768))
  9894     1836                     __end_of_protocol_version_number:
  9895                           
  9896                           	psect	stringtext7
  9897     180C                     __pstringtext7:
  9898     180C                     RN487X_RebootCmd@reboot:
  9899     180C  3452               	retlw	82
  9900     180D  3465               	retlw	101
  9901     180E  3462               	retlw	98
  9902     180F  346F               	retlw	111
  9903     1810  346F               	retlw	111
  9904     1811  3474               	retlw	116
  9905     1812  3469               	retlw	105
  9906     1813  346E               	retlw	110
  9907     1814  3467               	retlw	103
  9908     1815  340D               	retlw	13
  9909     1816  340A               	retlw	10
  9910     1817                     __end_ofRN487X_RebootCmd@reboot:
  9911                           
  9912                           	psect	stringtext8
  9913     1828                     __pstringtext8:
  9914     1828                     RN487X_EnterDataMode@cmdPrompt:
  9915     1828  3445               	retlw	69
  9916     1829  344E               	retlw	78
  9917     182A  3444               	retlw	68
  9918     182B  340D               	retlw	13
  9919     182C  340A               	retlw	10
  9920     182D                     __end_ofRN487X_EnterDataMode@cmdPrompt:
  9921                           
  9922                           	psect	stringtext9
  9923     182D                     __pstringtext9:
  9924     182D                     RN487X_EnterCmdMode@cmdPrompt:
  9925     182D  3443               	retlw	67
  9926     182E  344D               	retlw	77
  9927     182F  3444               	retlw	68
  9928     1830  343E               	retlw	62
  9929     1831  3420               	retlw	32
  9930     1832                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
  9931                           
  9932                           	psect	nvBANK1
  9933     00ED                     __pnvBANK1:
  9934     00ED                     _IOCAF6_InterruptHandler:
  9935     00ED                     	ds	2
  9936                           
  9937                           	psect	nvBANK2
  9938     0144                     __pnvBANK2:
  9939     0144                     _EUSART1_ErrorHandler:
  9940     0144                     	ds	2
  9941     0146                     _EUSART1_OverrunErrorHandler:
  9942     0146                     	ds	2
  9943     0148                     _EUSART1_FramingErrorHandler:
  9944     0148                     	ds	2
  9945     014A                     _EUSART1_RxDefaultInterruptHandler:
  9946     014A                     	ds	2
  9947     014C                     _EUSART1_TxDefaultInterruptHandler:
  9948     014C                     	ds	2
  9949     014E                     _EUSART2_ErrorHandler:
  9950     014E                     	ds	2
  9951     0150                     _EUSART2_OverrunErrorHandler:
  9952     0150                     	ds	2
  9953     0152                     _EUSART2_FramingErrorHandler:
  9954     0152                     	ds	2
  9955     0154                     _EUSART2_RxDefaultInterruptHandler:
  9956     0154                     	ds	2
  9957     0156                     _EUSART2_TxDefaultInterruptHandler:
  9958     0156                     	ds	2
  9959     0014                     _TRISC	set	20
  9960     0013                     _TRISB	set	19
  9961     0012                     _TRISA	set	18
  9962     0016                     _TRISE	set	22
  9963     001A                     _LATC	set	26
  9964     0019                     _LATB	set	25
  9965     0018                     _LATA	set	24
  9966     001C                     _LATE	set	28
  9967     0012                     _TRISAbits	set	18
  9968     001A                     _LATCbits	set	26
  9969     000B                     _INTCONbits	set	11
  9970     0018                     _LATAbits	set	24
  9971     000C                     _PORTAbits	set	12
  9972     0119                     _RC1REG	set	281
  9973     011D                     _RC1STAbits	set	285
  9974     011A                     _TX1REG	set	282
  9975     011E                     _TX1STAbits	set	286
  9976     011C                     _SP1BRGH	set	284
  9977     011B                     _SP1BRGL	set	283
  9978     011E                     _TX1STA	set	286
  9979     011D                     _RC1STA	set	285
  9980     011F                     _BAUD1CON	set	287
  9981     018F                     _SSP1STATbits	set	399
  9982     018E                     _SSP1MSK	set	398
  9983     018C                     _SSP1BUF	set	396
  9984     0191                     _SSP1CON2bits	set	401
  9985     018D                     _SSP1ADD	set	397
  9986     0191                     _SSP1CON2	set	401
  9987     0190                     _SSP1CON1	set	400
  9988     018F                     _SSP1STAT	set	399
  9989     0190                     _SSP1CON1bits	set	400
  9990     059E                     _T0CON0bits	set	1438
  9991     059E                     _T0CON0	set	1438
  9992     059C                     _TMR0L	set	1436
  9993     059D                     _TMR0H	set	1437
  9994     059F                     _T0CON1	set	1439
  9995     070F                     _PIR3bits	set	1807
  9996     070C                     _PIR0bits	set	1804
  9997     0716                     _PIE0bits	set	1814
  9998     0719                     _PIE3bits	set	1817
  9999     079D                     _PMD7	set	1949
 10000     079C                     _PMD6	set	1948
 10001     079B                     _PMD5	set	1947
 10002     079A                     _PMD4	set	1946
 10003     0799                     _PMD3	set	1945
 10004     0798                     _PMD2	set	1944
 10005     0797                     _PMD1	set	1943
 10006     0796                     _PMD0	set	1942
 10007     0892                     _OSCTUNE	set	2194
 10008     0890                     _OSCSTAT	set	2192
 10009     0893                     _OSCFRQ	set	2195
 10010     0891                     _OSCEN	set	2193
 10011     088F                     _OSCCON3	set	2191
 10012     088D                     _OSCCON1	set	2189
 10013     0A19                     _RC2REG	set	2585
 10014     0A1D                     _RC2STAbits	set	2589
 10015     0A1A                     _TX2REG	set	2586
 10016     0A1E                     _TX2STAbits	set	2590
 10017     0A1C                     _SP2BRGH	set	2588
 10018     0A1B                     _SP2BRGL	set	2587
 10019     0A1E                     _TX2STA	set	2590
 10020     0A1D                     _RC2STA	set	2589
 10021     0A1F                     _BAUD2CON	set	2591
 10022     1ECB                     _RX1DTPPS	set	7883
 10023     1EC6                     _SSP1DATPPS	set	7878
 10024     1ECD                     _RX2DTPPS	set	7885
 10025     1EC5                     _SSP1CLKPPS	set	7877
 10026     1F1C                     _RB4PPS	set	7964
 10027     1F24                     _RC4PPS	set	7972
 10028     1F1A                     _RB2PPS	set	7962
 10029     1F19                     _RB1PPS	set	7961
 10030     1F3D                     _IOCAPbits	set	7997
 10031     1F3E                     _IOCANbits	set	7998
 10032     1F3F                     _IOCAFbits	set	7999
 10033     1F52                     _INLVLC	set	8018
 10034     1F47                     _INLVLB	set	8007
 10035     1F3C                     _INLVLA	set	7996
 10036     1F51                     _SLRCONC	set	8017
 10037     1F46                     _SLRCONB	set	8006
 10038     1F3B                     _SLRCONA	set	7995
 10039     1F50                     _ODCONC	set	8016
 10040     1F45                     _ODCONB	set	8005
 10041     1F3A                     _ODCONA	set	7994
 10042     1F66                     _ODCONE	set	8038
 10043     1F4F                     _WPUC	set	8015
 10044     1F39                     _WPUA	set	7993
 10045     1F44                     _WPUB	set	8004
 10046     1F65                     _WPUE	set	8037
 10047     1F38                     _ANSELA	set	7992
 10048     1F43                     _ANSELB	set	8003
 10049     1F4E                     _ANSELC	set	8014
 10050                           
 10051                           	psect	stringtext10
 10052     1800                     __pstringtext10:
 10053     1800                     STR_4:
 10054     1800  3453               	retlw	83	;'S'
 10055     1801  3454               	retlw	84	;'T'
 10056     1802  3452               	retlw	82	;'R'
 10057     1803  3445               	retlw	69	;'E'
 10058     1804  3441               	retlw	65	;'A'
 10059     1805  344D               	retlw	77	;'M'
 10060     1806  345F               	retlw	95	;'_'
 10061     1807  344F               	retlw	79	;'O'
 10062     1808  3450               	retlw	80	;'P'
 10063     1809  3445               	retlw	69	;'E'
 10064     180A  344E               	retlw	78	;'N'
 10065     180B  3400               	retlw	0
 10066                           
 10067                           	psect	stringtext11
 10068     1817                     __pstringtext11:
 10069     1817                     STR_2:
 10070     1817  3444               	retlw	68	;'D'
 10071     1818  3449               	retlw	73	;'I'
 10072     1819  3453               	retlw	83	;'S'
 10073     181A  3443               	retlw	67	;'C'
 10074     181B  344F               	retlw	79	;'O'
 10075     181C  344E               	retlw	78	;'N'
 10076     181D  344E               	retlw	78	;'N'
 10077     181E  3445               	retlw	69	;'E'
 10078     181F  3443               	retlw	67	;'C'
 10079     1820  3454               	retlw	84	;'T'
 10080     1821  3400               	retlw	0
 10081                           
 10082                           	psect	stringtext12
 10083     1822                     __pstringtext12:
 10084     1822                     STR_1:
 10085     1822  3431               	retlw	49	;'1'
 10086     1823  342E               	retlw	46	;'.'
 10087     1824  3431               	retlw	49	;'1'
 10088     1825  342E               	retlw	46	;'.'
 10089     1826  3430               	retlw	48	;'0'
 10090     1827  3400               	retlw	0
 10091                           
 10092                           	psect	stringtext13
 10093     0000                     __pstringtext13:
 10094     1822                     
 10095                           	psect	cinit
 10096     0057                     start_initialization:	
 10097                           ; #config settings
 10098                           
 10099     0057                     __initialization:
 10100                           
 10101                           ; Initialize objects allocated to BANK0
 10102     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10103     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10104     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10105     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10106                           
 10107                           ; Initialize objects allocated to BANK2
 10108     005F  30F3               	movlw	low __pidataBANK2
 10109     0060  0084               	movwf	4
 10110     0061  3088               	movlw	(high __pidataBANK2)| (0+128)
 10111     0062  0085               	movwf	5
 10112     0063  3058               	movlw	low __pdataBANK2
 10113     0064  0086               	movwf	6
 10114     0065  3001               	movlw	high __pdataBANK2
 10115     0066  0087               	movwf	7
 10116     0067  3011               	movlw	17
 10117     0068  3197  270B  3180   	fcall	init_ram
 10118                           
 10119                           ; Clear objects allocated to COMMON
 10120     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10121                           
 10122                           ; Clear objects allocated to BANK0
 10123     006C  3048               	movlw	low __pbssBANK0
 10124     006D  0084               	movwf	4
 10125     006E  3000               	movlw	high __pbssBANK0
 10126     006F  0085               	movwf	5
 10127     0070  3026               	movlw	38
 10128     0071  3197  2705  3180   	fcall	clear_ram0
 10129                           
 10130                           ; Clear objects allocated to BANK1
 10131     0074  30A0               	movlw	low __pbssBANK1
 10132     0075  0084               	movwf	4
 10133     0076  3000               	movlw	high __pbssBANK1
 10134     0077  0085               	movwf	5
 10135     0078  304D               	movlw	77
 10136     0079  3197  2705  3180   	fcall	clear_ram0
 10137                           
 10138                           ; Clear objects allocated to BANK2
 10139     007C  3020               	movlw	low __pbssBANK2
 10140     007D  0084               	movwf	4
 10141     007E  3001               	movlw	high __pbssBANK2
 10142     007F  0085               	movwf	5
 10143     0080  3024               	movlw	36
 10144     0081  3197  2705  3180   	fcall	clear_ram0
 10145                           
 10146                           ; Clear objects allocated to BANK3
 10147     0084  30A0               	movlw	low __pbssBANK3
 10148     0085  0084               	movwf	4
 10149     0086  3001               	movlw	high __pbssBANK3
 10150     0087  0085               	movwf	5
 10151     0088  3040               	movlw	64
 10152     0089  3197  2705  3180   	fcall	clear_ram0
 10153                           
 10154                           ; Clear objects allocated to BANK4
 10155     008C  3020               	movlw	low __pbssBANK4
 10156     008D  0084               	movwf	4
 10157     008E  3002               	movlw	high __pbssBANK4
 10158     008F  0085               	movwf	5
 10159     0090  3050               	movlw	80
 10160     0091  3197  2705  3180   	fcall	clear_ram0
 10161                           
 10162                           ; Clear objects allocated to BANK5
 10163     0094  30A0               	movlw	low __pbssBANK5
 10164     0095  0084               	movwf	4
 10165     0096  3002               	movlw	high __pbssBANK5
 10166     0097  0085               	movwf	5
 10167     0098  3050               	movlw	80
 10168     0099  3197  2705  3180   	fcall	clear_ram0
 10169                           
 10170                           ; Clear objects allocated to BANK6
 10171     009C  3020               	movlw	low __pbssBANK6
 10172     009D  0084               	movwf	4
 10173     009E  3003               	movlw	high __pbssBANK6
 10174     009F  0085               	movwf	5
 10175     00A0  3050               	movlw	80
 10176     00A1  3197  2705  3180   	fcall	clear_ram0
 10177     00A4                     end_of_initialization:	
 10178                           ;End of C runtime variable initialization code
 10179                           
 10180     00A4                     __end_of__initialization:
 10181     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10182     00A5  0140               	movlb	0
 10183     00A6  3180  28A8         	ljmp	_main	;jump to C main() function
 10184                           
 10185                           	psect	bssCOMMON
 10186     007C                     __pbssCOMMON:
 10187     007C                     _eusart2RxHead:
 10188     007C                     	ds	1
 10189                           
 10190                           	psect	bssBANK0
 10191     0048                     __pbssBANK0:
 10192     0048                     _timer0ReloadVal16bit:
 10193     0048                     	ds	2
 10194     004A                     _pHead:
 10195     004A                     	ds	2
 10196     004C                     _asyncBuffer:
 10197     004C                     	ds	2
 10198     004E                     _i2c1_driver_i2cISR:
 10199     004E                     	ds	2
 10200     0050                     _i2c1_driver_busCollisionISR:
 10201     0050                     	ds	2
 10202     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10203     0052                     	ds	2
 10204     0054                     _bitMap:
 10205     0054                     	ds	2
 10206     0056                     __deviceAddress:
 10207     0056                     	ds	1
 10208     0057                     _serialIndex:
 10209     0057                     	ds	1
 10210     0058                     _eusart1RxLastError:
 10211     0058                     	ds	1
 10212     0059                     _eusart1RxCount:
 10213     0059                     	ds	1
 10214     005A                     _eusart1RxTail:
 10215     005A                     	ds	1
 10216     005B                     _eusart1RxHead:
 10217     005B                     	ds	1
 10218     005C                     _eusart1TxBufferRemaining:
 10219     005C                     	ds	1
 10220     005D                     _eusart1TxTail:
 10221     005D                     	ds	1
 10222     005E                     _eusart1TxHead:
 10223     005E                     	ds	1
 10224     005F                     _eusart2RxLastError:
 10225     005F                     	ds	1
 10226     0060                     _eusart2RxCount:
 10227     0060                     	ds	1
 10228     0061                     _eusart2RxTail:
 10229     0061                     	ds	1
 10230     0062                     _eusart2TxBufferRemaining:
 10231     0062                     	ds	1
 10232     0063                     _eusart2TxTail:
 10233     0063                     	ds	1
 10234     0064                     _eusart2TxHead:
 10235     0064                     	ds	1
 10236     0065                     RN487X_FilterData@asyncBuffering:
 10237     0065                     	ds	1
 10238     0066                     _dataReady:
 10239     0066                     	ds	1
 10240     0067                     _peek:
 10241     0067                     	ds	1
 10242     0068                     _asyncBufferSize:
 10243     0068                     	ds	1
 10244     0069                     _connected:
 10245     0069                     	ds	1
 10246     006A                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10247     006A                     	ds	1
 10248     006B                     LIGHTBLUE_ParseIncomingPacket@length:
 10249     006B                     	ds	1
 10250     006C                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10251     006C                     	ds	1
 10252     006D                     _sequenceNumber:
 10253     006D                     	ds	1
 10254                           
 10255                           	psect	dataBANK0
 10256     006E                     __pdataBANK0:
 10257     006E                     RN487X_GetInputsValues@F12901:
 10258     006E                     	ds	2
 10259                           
 10260                           	psect	bssBANK1
 10261     00A0                     __pbssBANK1:
 10262     00A0                     _I2C1_Status:
 10263     00A0                     	ds	29
 10264     00BD                     _eusart1RxStatusBuffer:
 10265     00BD                     	ds	8
 10266     00C5                     _eusart1RxBuffer:
 10267     00C5                     	ds	8
 10268     00CD                     _eusart1TxBuffer:
 10269     00CD                     	ds	8
 10270     00D5                     _eusart2RxStatusBuffer:
 10271     00D5                     	ds	8
 10272     00DD                     _eusart2RxBuffer:
 10273     00DD                     	ds	8
 10274     00E5                     _eusart2TxBuffer:
 10275     00E5                     	ds	8
 10276                           
 10277                           	psect	bssBANK2
 10278     0120                     __pbssBANK2:
 10279     0120                     _i2c_status:
 10280     0120                     	ds	36
 10281                           
 10282                           	psect	dataBANK2
 10283     0158                     __pdataBANK2:
 10284     0158                     __hex:
 10285     0158                     	ds	17
 10286                           
 10287                           	psect	bssBANK3
 10288     01A0                     __pbssBANK3:
 10289     01A0                     _cmdBuf:
 10290     01A0                     	ds	64
 10291                           
 10292                           	psect	bssBANK4
 10293     0220                     __pbssBANK4:
 10294     0220                     _lightBlueSerial:
 10295     0220                     	ds	80
 10296                           
 10297                           	psect	bssBANK5
 10298     02A0                     __pbssBANK5:
 10299     02A0                     _statusBuffer:
 10300     02A0                     	ds	80
 10301                           
 10302                           	psect	bssBANK6
 10303     0320                     __pbssBANK6:
 10304     0320                     _statusBuffer@main$F3736:
 10305     0320                     	ds	80
 10306                           
 10307                           	psect	inittext
 10308     170B                     init_ram:
 10309     170B  00FE               	movwf	btemp
 10310     170C                     initloop:
 10311     170C  0012               	moviw fsr0++
 10312     170D  001E               	movwi fsr1++
 10313     170E  0BFE               	decfsz	btemp,f
 10314     170F  2F0C               	goto	initloop
 10315     1710  3400               	retlw	0
 10316                           
 10317                           	psect	clrtext
 10318     1705                     clear_ram0:	
 10319                           ;	Called with FSR0 containing the base address, and
 10320                           ;	WREG with the size to clear
 10321                           
 10322     1705  0064               	clrwdt	;clear the watchdog before getting into this loop
 10323     1706                     clrloop0:
 10324     1706  0180               	clrf	0	;clear RAM location pointed to by FSR
 10325     1707  3101               	addfsr 0,1
 10326     1708  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10327     1709  2F06               	goto	clrloop0	;have we reached the end yet?
 10328     170A  3400               	retlw	0	;all done for this memory range, return
 10329                           
 10330                           	psect	cstackBANK2
 10331     0169                     __pcstackBANK2:
 10332     0169                     ??_main:
 10333                           
 10334                           ; 1 bytes @ 0x0
 10335     0169                     	ds	1
 10336     016A                     _main$5367:
 10337                           
 10338                           ; 1 bytes @ 0x1
 10339     016A                     	ds	1
 10340                           
 10341                           	psect	cstackBANK1
 10342     00EF                     __pcstackBANK1:
 10343     00EF                     RN487X_FilterData@readChar:
 10344                           
 10345                           ; 1 bytes @ 0x0
 10346     00EF                     	ds	1
 10347                           
 10348                           	psect	cstackCOMMON
 10349     0070                     __pcstackCOMMON:
 10350     0070                     ?_BMA253_NewAccelDataRdyX:
 10351     0070                     ?_BMA253_NewAccelDataRdyY:	
 10352                           ; 1 bytes @ 0x0
 10353                           
 10354     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10355                           ; 1 bytes @ 0x0
 10356                           
 10357     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10358                           ; 1 bytes @ 0x0
 10359                           
 10360     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10361                           ; 1 bytes @ 0x0
 10362                           
 10363     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10364                           ; 1 bytes @ 0x0
 10365                           
 10366     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10367                           ; 1 bytes @ 0x0
 10368                           
 10369     0070                     ?_RN487X_EnterCmdMode:	
 10370                           ; 1 bytes @ 0x0
 10371                           
 10372     0070                     ?_RN487X_EnterDataMode:	
 10373                           ; 1 bytes @ 0x0
 10374                           
 10375     0070                     ?_EUSART1_Read:	
 10376                           ; 1 bytes @ 0x0
 10377                           
 10378     0070                     ?_EUSART1_is_rx_ready:	
 10379                           ; 1 bytes @ 0x0
 10380                           
 10381     0070                     ?_EUSART1_Receive_ISR:	
 10382                           ; 1 bytes @ 0x0
 10383                           
 10384     0070                     ?_EUSART1_is_tx_done:	
 10385                           ; 1 bytes @ 0x0
 10386                           
 10387     0070                     ?_EUSART1_Transmit_ISR:	
 10388                           ; 1 bytes @ 0x0
 10389                           
 10390     0070                     ??_EUSART1_Transmit_ISR:	
 10391                           ; 1 bytes @ 0x0
 10392                           
 10393     0070                     ?_EUSART1_Initialize:	
 10394                           ; 1 bytes @ 0x0
 10395                           
 10396     0070                     ?_EUSART2_Read:	
 10397                           ; 1 bytes @ 0x0
 10398                           
 10399     0070                     ?_EUSART2_is_rx_ready:	
 10400                           ; 1 bytes @ 0x0
 10401                           
 10402     0070                     ?_EUSART2_Receive_ISR:	
 10403                           ; 1 bytes @ 0x0
 10404                           
 10405     0070                     ?_EUSART2_is_tx_done:	
 10406                           ; 1 bytes @ 0x0
 10407                           
 10408     0070                     ?_EUSART2_Transmit_ISR:	
 10409                           ; 1 bytes @ 0x0
 10410                           
 10411     0070                     ??_EUSART2_Transmit_ISR:	
 10412                           ; 1 bytes @ 0x0
 10413                           
 10414     0070                     ?_EUSART2_Initialize:	
 10415                           ; 1 bytes @ 0x0
 10416                           
 10417     0070                     ?_I2C1_Open:	
 10418                           ; 1 bytes @ 0x0
 10419                           
 10420     0070                     ?_I2C1_MasterWrite:	
 10421                           ; 1 bytes @ 0x0
 10422                           
 10423     0070                     ?_I2C1_Close:	
 10424                           ; 1 bytes @ 0x0
 10425                           
 10426     0070                     ?_RN487X_IsConnected:	
 10427                           ; 1 bytes @ 0x0
 10428                           
 10429     0070                     ?_RN487X_Read:	
 10430                           ; 1 bytes @ 0x0
 10431                           
 10432     0070                     ?_RN487X_DataReady:	
 10433                           ; 1 bytes @ 0x0
 10434                           
 10435     0070                     ?_RN487X_Read@rn487x_interface$F1340:	
 10436                           ; 1 bytes @ 0x0
 10437                           
 10438     0070                     ?_RN487X_is_tx_done:	
 10439                           ; 1 bytes @ 0x0
 10440                           
 10441     0070                     ?_RN487X_is_rx_ready:	
 10442                           ; 1 bytes @ 0x0
 10443                           
 10444     0070                     ?_RN487X_FilterData:	
 10445                           ; 1 bytes @ 0x0
 10446                           
 10447     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10448                           ; 1 bytes @ 0x0
 10449                           
 10450     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 10451                           ; 1 bytes @ 0x0
 10452                           
 10453     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10454                           ; 1 bytes @ 0x0
 10455                           
 10456     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 10457                           ; 1 bytes @ 0x0
 10458                           
 10459     0070                     ?_EUSART2_DefaultErrorHandler:	
 10460                           ; 1 bytes @ 0x0
 10461                           
 10462     0070                     ?_EUSART2_RxDataHandler:	
 10463                           ; 1 bytes @ 0x0
 10464                           
 10465     0070                     ??_EUSART2_RxDataHandler:	
 10466                           ; 1 bytes @ 0x0
 10467                           
 10468     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10469                           ; 1 bytes @ 0x0
 10470                           
 10471     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 10472                           ; 1 bytes @ 0x0
 10473                           
 10474     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10475                           ; 1 bytes @ 0x0
 10476                           
 10477     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10478                           ; 1 bytes @ 0x0
 10479                           
 10480     0070                     ?_EUSART1_DefaultErrorHandler:	
 10481                           ; 1 bytes @ 0x0
 10482                           
 10483     0070                     ?_EUSART1_RxDataHandler:	
 10484                           ; 1 bytes @ 0x0
 10485                           
 10486     0070                     ??_EUSART1_RxDataHandler:	
 10487                           ; 1 bytes @ 0x0
 10488                           
 10489     0070                     ?_PIN_MANAGER_IOC:	
 10490                           ; 1 bytes @ 0x0
 10491                           
 10492     0070                     ??_PIN_MANAGER_IOC:	
 10493                           ; 1 bytes @ 0x0
 10494                           
 10495     0070                     ?_PMD_Initialize:	
 10496                           ; 1 bytes @ 0x0
 10497                           
 10498     0070                     ?_I2C1_Initialize:	
 10499                           ; 1 bytes @ 0x0
 10500                           
 10501     0070                     ?_PIN_MANAGER_Initialize:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504     0070                     ?_OSCILLATOR_Initialize:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507     0070                     ?_TMR0_Initialize:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516     0070                     ?_IOCAF6_ISR:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519     0070                     ??_IOCAF6_ISR:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522     0070                     ?_I2C1_DO_IDLE:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531     0070                     ?_I2C1_DO_TX:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534     0070                     ?_I2C1_DO_RX:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537     0070                     ?_I2C1_DO_RCEN:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540     0070                     ?_I2C1_DO_TX_EMPTY:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549     0070                     ?_I2C1_DO_SEND_RESTART:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552     0070                     ?_I2C1_DO_SEND_STOP:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555     0070                     ?_I2C1_DO_RX_ACK:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564     0070                     ?_I2C1_DO_RESET:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570     0070                     ?_I2C1_MasterClearIrq:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573     0070                     ?_I2C1_MasterOpen:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576     0070                     ?_I2C1_MasterDisableIrq:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579     0070                     ?_I2C1_MasterClose:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582     0070                     ?_I2C1_MasterStart:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585     0070                     ?_I2C1_Poller:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588     0070                     ?_I2C1_MasterWaitForEvent:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591     0070                     ?_I2C1_MasterFsm:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594     0070                     ?_I2C1_MasterIsNack:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597     0070                     ?_I2C1_MasterSendTxData:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600     0070                     ?_I2C1_MasterGetRxData:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603     0070                     ?_I2C1_MasterSendAck:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606     0070                     ?_I2C1_MasterStartRx:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609     0070                     ?_I2C1_MasterSetIrq:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612     0070                     ?_I2C1_MasterEnableRestart:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615     0070                     ?_I2C1_MasterStop:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618     0070                     ?_I2C1_MasterSendNack:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621     0070                     ?_BMA253_GetAccelDataX:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624     0070                     ?_BMA253_GetAccelDataY:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627     0070                     ?_BMA253_GetAccelDataZ:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630     0070                     ?_BMA253_GetAccelDataXYZ:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633     0070                     ?_MCP9844_GetTemperatureValue:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636     0070                     ?_LIGHTBLUE_Initialize:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642     0070                     ?_LIGHTBLUE_AccelSensor:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645     0070                     ?_LIGHTBLUE_PushButton:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648     0070                     ?_LIGHTBLUE_LedState:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654     0070                     ?_LIGHTBLUE_SendSerialData:	
 10655                           ; 1 bytes @ 0x0
 10656                           
 10657     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 10658                           ; 1 bytes @ 0x0
 10659                           
 10660     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 10661                           ; 1 bytes @ 0x0
 10662                           
 10663     0070                     ?_rn487x_PrintMessageStart:	
 10664                           ; 1 bytes @ 0x0
 10665                           
 10666     0070                     ?_rn487x_PrintMessageEnd:	
 10667                           ; 1 bytes @ 0x0
 10668                           
 10669     0070                     ?_rn487x_PrintIndicatorCharacters:	
 10670                           ; 1 bytes @ 0x0
 10671                           
 10672     0070                     ?_RN487X_Init:	
 10673                           ; 1 bytes @ 0x0
 10674                           
 10675     0070                     ?_RN487X_ReadDefaultResponse:	
 10676                           ; 1 bytes @ 0x0
 10677                           
 10678     0070                     ?_INTERRUPT_InterruptManager:	
 10679                           ; 1 bytes @ 0x0
 10680                           
 10681     0070                     ?_SYSTEM_Initialize:	
 10682                           ; 1 bytes @ 0x0
 10683                           
 10684     0070                     ?_TMR0_HasOverflowOccured:	
 10685                           ; 1 bytes @ 0x0
 10686                           
 10687     0070                     ?_I2C1_MasterOperation:	
 10688                           ; 1 bytes @ 0x0
 10689                           
 10690     0070                     ?_main:	
 10691                           ; 1 bytes @ 0x0
 10692                           
 10693                           
 10694                           ; 2 bytes @ 0x0
 10695     0070                     	ds	1
 10696     0071                     ??_LIGHTBLUE_GetButtonValue:
 10697     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 10698                           ; 1 bytes @ 0x1
 10699                           
 10700     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 10701                           ; 1 bytes @ 0x1
 10702                           
 10703     0071                     ??_EUSART1_Read:	
 10704                           ; 1 bytes @ 0x1
 10705                           
 10706     0071                     ?_EUSART1_Write:	
 10707                           ; 1 bytes @ 0x1
 10708                           
 10709     0071                     ??_EUSART1_is_rx_ready:	
 10710                           ; 1 bytes @ 0x1
 10711                           
 10712     0071                     ?_EUSART1_SetTxInterruptHandler:	
 10713                           ; 1 bytes @ 0x1
 10714                           
 10715     0071                     ??_EUSART1_Receive_ISR:	
 10716                           ; 1 bytes @ 0x1
 10717                           
 10718     0071                     ?_EUSART1_SetRxInterruptHandler:	
 10719                           ; 1 bytes @ 0x1
 10720                           
 10721     0071                     ??_EUSART1_is_tx_done:	
 10722                           ; 1 bytes @ 0x1
 10723                           
 10724     0071                     ??_EUSART2_Read:	
 10725                           ; 1 bytes @ 0x1
 10726                           
 10727     0071                     ?_EUSART2_Write:	
 10728                           ; 1 bytes @ 0x1
 10729                           
 10730     0071                     ??_EUSART2_is_rx_ready:	
 10731                           ; 1 bytes @ 0x1
 10732                           
 10733     0071                     ?_EUSART2_SetTxInterruptHandler:	
 10734                           ; 1 bytes @ 0x1
 10735                           
 10736     0071                     ??_EUSART2_Receive_ISR:	
 10737                           ; 1 bytes @ 0x1
 10738                           
 10739     0071                     ?_EUSART2_SetRxInterruptHandler:	
 10740                           ; 1 bytes @ 0x1
 10741                           
 10742     0071                     ??_EUSART2_is_tx_done:	
 10743                           ; 1 bytes @ 0x1
 10744                           
 10745     0071                     ?_I2C1_SetBuffer:	
 10746                           ; 1 bytes @ 0x1
 10747                           
 10748     0071                     ??_I2C1_Open:	
 10749                           ; 1 bytes @ 0x1
 10750                           
 10751     0071                     ??_I2C1_Close:	
 10752                           ; 1 bytes @ 0x1
 10753                           
 10754     0071                     ?_RN487X_SetAsyncMessageHandler:	
 10755                           ; 1 bytes @ 0x1
 10756                           
 10757     0071                     ??_RN487X_IsConnected:	
 10758                           ; 1 bytes @ 0x1
 10759                           
 10760     0071                     ??_RN487X_is_tx_done:	
 10761                           ; 1 bytes @ 0x1
 10762                           
 10763     0071                     ??_RN487X_is_rx_ready:	
 10764                           ; 1 bytes @ 0x1
 10765                           
 10766     0071                     ?_RN487X_IndicateRx:	
 10767                           ; 1 bytes @ 0x1
 10768                           
 10769     0071                     ?_RN487X_Reset:	
 10770                           ; 1 bytes @ 0x1
 10771                           
 10772     0071                     ?_RN487X_SetSystemMode:	
 10773                           ; 1 bytes @ 0x1
 10774                           
 10775     0071                     ?_DELAY_milliseconds:	
 10776                           ; 1 bytes @ 0x1
 10777                           
 10778     0071                     ?_strcpy:	
 10779                           ; 1 bytes @ 0x1
 10780                           
 10781     0071                     ?_EUSART2_SetFramingErrorHandler:	
 10782                           ; 1 bytes @ 0x1
 10783                           
 10784     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 10785                           ; 1 bytes @ 0x1
 10786                           
 10787     0071                     ?_EUSART2_SetErrorHandler:	
 10788                           ; 1 bytes @ 0x1
 10789                           
 10790     0071                     ??_EUSART2_DefaultErrorHandler:	
 10791                           ; 1 bytes @ 0x1
 10792                           
 10793     0071                     ?_EUSART1_SetFramingErrorHandler:	
 10794                           ; 1 bytes @ 0x1
 10795                           
 10796     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 10797                           ; 1 bytes @ 0x1
 10798                           
 10799     0071                     ?_EUSART1_SetErrorHandler:	
 10800                           ; 1 bytes @ 0x1
 10801                           
 10802     0071                     ??_EUSART1_DefaultErrorHandler:	
 10803                           ; 1 bytes @ 0x1
 10804                           
 10805     0071                     ??_PMD_Initialize:	
 10806                           ; 1 bytes @ 0x1
 10807                           
 10808     0071                     ??_I2C1_Initialize:	
 10809                           ; 1 bytes @ 0x1
 10810                           
 10811     0071                     ??_OSCILLATOR_Initialize:	
 10812                           ; 1 bytes @ 0x1
 10813                           
 10814     0071                     ??_TMR0_Initialize:	
 10815                           ; 1 bytes @ 0x1
 10816                           
 10817     0071                     ?_IOCAF6_SetInterruptHandler:	
 10818                           ; 1 bytes @ 0x1
 10819                           
 10820     0071                     ??_I2C1_DO_IDLE:	
 10821                           ; 1 bytes @ 0x1
 10822                           
 10823     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 10824                           ; 1 bytes @ 0x1
 10825                           
 10826     0071                     ??_I2C1_DO_RCEN:	
 10827                           ; 1 bytes @ 0x1
 10828                           
 10829     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 10830                           ; 1 bytes @ 0x1
 10831                           
 10832     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 10833                           ; 1 bytes @ 0x1
 10834                           
 10835     0071                     ??_I2C1_DO_SEND_RESTART:	
 10836                           ; 1 bytes @ 0x1
 10837                           
 10838     0071                     ??_I2C1_DO_SEND_STOP:	
 10839                           ; 1 bytes @ 0x1
 10840                           
 10841     0071                     ??_I2C1_DO_RX_ACK:	
 10842                           ; 1 bytes @ 0x1
 10843                           
 10844     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 10845                           ; 1 bytes @ 0x1
 10846                           
 10847     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 10848                           ; 1 bytes @ 0x1
 10849                           
 10850     0071                     ??_I2C1_DO_RESET:	
 10851                           ; 1 bytes @ 0x1
 10852                           
 10853     0071                     ??_I2C1_MasterClearIrq:	
 10854                           ; 1 bytes @ 0x1
 10855                           
 10856     0071                     ??_I2C1_MasterOpen:	
 10857                           ; 1 bytes @ 0x1
 10858                           
 10859     0071                     ??_I2C1_MasterDisableIrq:	
 10860                           ; 1 bytes @ 0x1
 10861                           
 10862     0071                     ??_I2C1_MasterClose:	
 10863                           ; 1 bytes @ 0x1
 10864                           
 10865     0071                     ??_I2C1_MasterStart:	
 10866                           ; 1 bytes @ 0x1
 10867                           
 10868     0071                     ?_I2C1_SetCallback:	
 10869                           ; 1 bytes @ 0x1
 10870                           
 10871     0071                     ??_I2C1_MasterWaitForEvent:	
 10872                           ; 1 bytes @ 0x1
 10873                           
 10874     0071                     ??_I2C1_MasterIsNack:	
 10875                           ; 1 bytes @ 0x1
 10876                           
 10877     0071                     ??_I2C1_MasterSendTxData:	
 10878                           ; 1 bytes @ 0x1
 10879                           
 10880     0071                     ??_I2C1_MasterGetRxData:	
 10881                           ; 1 bytes @ 0x1
 10882                           
 10883     0071                     ??_I2C1_MasterSendAck:	
 10884                           ; 1 bytes @ 0x1
 10885                           
 10886     0071                     ??_I2C1_MasterStartRx:	
 10887                           ; 1 bytes @ 0x1
 10888                           
 10889     0071                     ??_I2C1_MasterSetIrq:	
 10890                           ; 1 bytes @ 0x1
 10891                           
 10892     0071                     ??_I2C1_MasterEnableRestart:	
 10893                           ; 1 bytes @ 0x1
 10894                           
 10895     0071                     ??_I2C1_MasterStop:	
 10896                           ; 1 bytes @ 0x1
 10897                           
 10898     0071                     ??_I2C1_MasterSendNack:	
 10899                           ; 1 bytes @ 0x1
 10900                           
 10901     0071                     ??_LIGHTBLUE_Initialize:	
 10902                           ; 1 bytes @ 0x1
 10903                           
 10904     0071                     ??_INTERRUPT_InterruptManager:	
 10905                           ; 1 bytes @ 0x1
 10906                           
 10907     0071                     ??_TMR0_HasOverflowOccured:	
 10908                           ; 1 bytes @ 0x1
 10909                           
 10910     0071                     ?_strlen:	
 10911                           ; 1 bytes @ 0x1
 10912                           
 10913     0071                     ?_strncmp:	
 10914                           ; 2 bytes @ 0x1
 10915                           
 10916     0071                     ?_strchr:	
 10917                           ; 2 bytes @ 0x1
 10918                           
 10919     0071                     RN487X_Reset@value:	
 10920                           ; 2 bytes @ 0x1
 10921                           
 10922     0071                     RN487X_IndicateRx@value:	
 10923                           ; 1 bytes @ 0x1
 10924                           
 10925     0071                     RN487X_SetSystemMode@mode:	
 10926                           ; 1 bytes @ 0x1
 10927                           
 10928     0071                     EUSART2_Write@txData:	
 10929                           ; 1 bytes @ 0x1
 10930                           
 10931     0071                     EUSART1_Write@txData:	
 10932                           ; 1 bytes @ 0x1
 10933                           
 10934     0071                     I2C1_Open@address:	
 10935                           ; 1 bytes @ 0x1
 10936                           
 10937     0071                     I2C1_Close@returnValue:	
 10938                           ; 1 bytes @ 0x1
 10939                           
 10940     0071                     I2C1_MasterSendTxData@data:	
 10941                           ; 1 bytes @ 0x1
 10942                           
 10943     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 10944                           ; 1 bytes @ 0x1
 10945                           
 10946     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 10947                           ; 2 bytes @ 0x1
 10948                           
 10949     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 10950                           ; 2 bytes @ 0x1
 10951                           
 10952     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 10953                           ; 2 bytes @ 0x1
 10954                           
 10955     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 10956                           ; 2 bytes @ 0x1
 10957                           
 10958     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 10959                           ; 2 bytes @ 0x1
 10960                           
 10961     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10962                           ; 2 bytes @ 0x1
 10963                           
 10964     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10965                           ; 2 bytes @ 0x1
 10966                           
 10967     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 10968                           ; 2 bytes @ 0x1
 10969                           
 10970     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 10971                           ; 2 bytes @ 0x1
 10972                           
 10973     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10974                           ; 2 bytes @ 0x1
 10975                           
 10976     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 10977                           ; 2 bytes @ 0x1
 10978                           
 10979     0071                     I2C1_SetBuffer@bufferSize:	
 10980                           ; 2 bytes @ 0x1
 10981                           
 10982     0071                     I2C1_SetCallback@cb:	
 10983                           ; 2 bytes @ 0x1
 10984                           
 10985     0071                     DELAY_milliseconds@milliseconds:	
 10986                           ; 2 bytes @ 0x1
 10987                           
 10988     0071                     strcpy@src:	
 10989                           ; 2 bytes @ 0x1
 10990                           
 10991     0071                     strlen@s:	
 10992                           ; 2 bytes @ 0x1
 10993                           
 10994     0071                     strchr@s:	
 10995                           ; 2 bytes @ 0x1
 10996                           
 10997     0071                     strncmp@l:	
 10998                           ; 2 bytes @ 0x1
 10999                           
 11000                           
 11001                           ; 2 bytes @ 0x1
 11002     0071                     	ds	1
 11003     0072                     ??_EUSART1_Write:
 11004     0072                     ??_EUSART2_Write:	
 11005                           ; 1 bytes @ 0x2
 11006                           
 11007     0072                     ??_RN487X_IndicateRx:	
 11008                           ; 1 bytes @ 0x2
 11009                           
 11010     0072                     ??_RN487X_Reset:	
 11011                           ; 1 bytes @ 0x2
 11012                           
 11013     0072                     ??_RN487X_SetSystemMode:	
 11014                           ; 1 bytes @ 0x2
 11015                           
 11016     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11017                           ; 1 bytes @ 0x2
 11018                           
 11019     0072                     EUSART2_Read@readValue:	
 11020                           ; 1 bytes @ 0x2
 11021                           
 11022     0072                     EUSART1_Read@readValue:	
 11023                           ; 1 bytes @ 0x2
 11024                           
 11025     0072                     I2C1_Open@returnValue:	
 11026                           ; 1 bytes @ 0x2
 11027                           
 11028                           
 11029                           ; 1 bytes @ 0x2
 11030     0072                     	ds	1
 11031     0073                     ??_strlen:
 11032     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11033                           ; 1 bytes @ 0x3
 11034                           
 11035     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11036                           ; 1 bytes @ 0x3
 11037                           
 11038     0073                     ??_EUSART1_Initialize:	
 11039                           ; 1 bytes @ 0x3
 11040                           
 11041     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11042                           ; 1 bytes @ 0x3
 11043                           
 11044     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11045                           ; 1 bytes @ 0x3
 11046                           
 11047     0073                     ??_EUSART2_Initialize:	
 11048                           ; 1 bytes @ 0x3
 11049                           
 11050     0073                     ??_I2C1_SetBuffer:	
 11051                           ; 1 bytes @ 0x3
 11052                           
 11053     0073                     ??_RN487X_Read@rn487x_interface$F1342:	
 11054                           ; 1 bytes @ 0x3
 11055                           
 11056     0073                     ??_DELAY_milliseconds:	
 11057                           ; 1 bytes @ 0x3
 11058                           
 11059     0073                     ??_strcpy:	
 11060                           ; 1 bytes @ 0x3
 11061                           
 11062     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11063                           ; 1 bytes @ 0x3
 11064                           
 11065     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11066                           ; 1 bytes @ 0x3
 11067                           
 11068     0073                     ??_EUSART2_SetErrorHandler:	
 11069                           ; 1 bytes @ 0x3
 11070                           
 11071     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11072                           ; 1 bytes @ 0x3
 11073                           
 11074     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11075                           ; 1 bytes @ 0x3
 11076                           
 11077     0073                     ??_EUSART1_SetErrorHandler:	
 11078                           ; 1 bytes @ 0x3
 11079                           
 11080     0073                     ??_PIN_MANAGER_Initialize:	
 11081                           ; 1 bytes @ 0x3
 11082                           
 11083     0073                     ??_IOCAF6_SetInterruptHandler:	
 11084                           ; 1 bytes @ 0x3
 11085                           
 11086     0073                     ??_rn487x_PrintMessageStart:	
 11087                           ; 1 bytes @ 0x3
 11088                           
 11089     0073                     ??_rn487x_PrintMessageEnd:	
 11090                           ; 1 bytes @ 0x3
 11091                           
 11092     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11093                           ; 1 bytes @ 0x3
 11094                           
 11095     0073                     ?_RN487X_ReadMsg:	
 11096                           ; 1 bytes @ 0x3
 11097                           
 11098     0073                     ??_RN487X_ReadDefaultResponse:	
 11099                           ; 1 bytes @ 0x3
 11100                           
 11101     0073                     ??_SYSTEM_Initialize:	
 11102                           ; 1 bytes @ 0x3
 11103                           
 11104     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11105                           ; 1 bytes @ 0x3
 11106                           
 11107     0073                     RN487X_SetAsyncMessageHandler@len:	
 11108                           ; 1 bytes @ 0x3
 11109                           
 11110     0073                     I2C1_SetBuffer@buffer:	
 11111                           ; 1 bytes @ 0x3
 11112                           
 11113     0073                     I2C1_SetCallback@ptr:	
 11114                           ; 1 bytes @ 0x3
 11115                           
 11116     0073                     RN487X_ReadMsg@expectedMsg:	
 11117                           ; 1 bytes @ 0x3
 11118                           
 11119     0073                     strchr@c:	
 11120                           ; 2 bytes @ 0x3
 11121                           
 11122     0073                     strncmp@r:	
 11123                           ; 2 bytes @ 0x3
 11124                           
 11125     0073                     RN487X_ReadDefaultResponse@resp:	
 11126                           ; 2 bytes @ 0x3
 11127                           
 11128                           
 11129                           ; 3 bytes @ 0x3
 11130     0073                     	ds	1
 11131     0074                     ??_RN487X_SetAsyncMessageHandler:
 11132     0074                     ?_RN487X_Delay:	
 11133                           ; 1 bytes @ 0x4
 11134                           
 11135     0074                     ??_I2C1_SetCallback:	
 11136                           ; 1 bytes @ 0x4
 11137                           
 11138     0074                     I2C1_SetCallback@idx:	
 11139                           ; 1 bytes @ 0x4
 11140                           
 11141     0074                     RN487X_Delay@delayCount:	
 11142                           ; 1 bytes @ 0x4
 11143                           
 11144     0074                     strlen@a:	
 11145                           ; 2 bytes @ 0x4
 11146                           
 11147                           
 11148                           ; 2 bytes @ 0x4
 11149     0074                     	ds	1
 11150     0075                     ?_I2C1_SetDataCompleteCallback:
 11151     0075                     ?_I2C1_SetAddressNackCallback:	
 11152                           ; 1 bytes @ 0x5
 11153                           
 11154     0075                     ??_strchr:	
 11155                           ; 1 bytes @ 0x5
 11156                           
 11157     0075                     RN487X_ReadMsg@msgLen:	
 11158                           ; 1 bytes @ 0x5
 11159                           
 11160     0075                     strcpy@d:	
 11161                           ; 1 bytes @ 0x5
 11162                           
 11163     0075                     I2C1_SetDataCompleteCallback@cb:	
 11164                           ; 1 bytes @ 0x5
 11165                           
 11166     0075                     I2C1_SetAddressNackCallback@cb:	
 11167                           ; 2 bytes @ 0x5
 11168                           
 11169     0075                     strncmp@n:	
 11170                           ; 2 bytes @ 0x5
 11171                           
 11172                           
 11173                           ; 2 bytes @ 0x5
 11174     0075                     	ds	1
 11175     0076                     ?_LIGHTBLUE_SplitByte:
 11176     0076                     ?_RN487X_Write:	
 11177                           ; 1 bytes @ 0x6
 11178                           
 11179     0076                     ??_RN487X_Delay:	
 11180                           ; 1 bytes @ 0x6
 11181                           
 11182     0076                     ??_RN487X_Init:	
 11183                           ; 1 bytes @ 0x6
 11184                           
 11185     0076                     ??_RN487X_ReadMsg:	
 11186                           ; 1 bytes @ 0x6
 11187                           
 11188     0076                     LIGHTBLUE_SplitByte@value:	
 11189                           ; 1 bytes @ 0x6
 11190                           
 11191     0076                     RN487X_Write@txData:	
 11192                           ; 1 bytes @ 0x6
 11193                           
 11194     0076                     RN487X_ReadDefaultResponse@status:	
 11195                           ; 1 bytes @ 0x6
 11196                           
 11197     0076                     strcpy@dest:	
 11198                           ; 1 bytes @ 0x6
 11199                           
 11200                           
 11201                           ; 1 bytes @ 0x6
 11202     0076                     	ds	1
 11203     0077                     ?_LIGHTBLUE_SendPacket:
 11204     0077                     ??_LIGHTBLUE_SplitByte:	
 11205                           ; 1 bytes @ 0x7
 11206                           
 11207     0077                     ??_RN487X_Write:	
 11208                           ; 1 bytes @ 0x7
 11209                           
 11210     0077                     ??_strncmp:	
 11211                           ; 1 bytes @ 0x7
 11212                           
 11213     0077                     ??_LIGHTBLUE_SendSerialData:	
 11214                           ; 1 bytes @ 0x7
 11215                           
 11216     0077                     ?_rn487x_PrintMessage:	
 11217                           ; 1 bytes @ 0x7
 11218                           
 11219     0077                     ?_RN487X_SendCmd:	
 11220                           ; 1 bytes @ 0x7
 11221                           
 11222     0077                     LIGHTBLUE_SendPacket@payload:	
 11223                           ; 1 bytes @ 0x7
 11224                           
 11225     0077                     RN487X_SendCmd@cmdLen:	
 11226                           ; 1 bytes @ 0x7
 11227                           
 11228     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11229                           ; 1 bytes @ 0x7
 11230                           
 11231     0077                     rn487x_PrintMessage@passedMessage:	
 11232                           ; 1 bytes @ 0x7
 11233                           
 11234     0077                     I2C1_SetAddressNackCallback@ptr:	
 11235                           ; 2 bytes @ 0x7
 11236                           
 11237                           
 11238                           ; 2 bytes @ 0x7
 11239     0077                     	ds	1
 11240     0078                     ??_LIGHTBLUE_SendPacket:
 11241     0078                     ??_I2C1_SetDataCompleteCallback:	
 11242                           ; 1 bytes @ 0x8
 11243                           
 11244     0078                     ?_rd1RegCompleteHandler:	
 11245                           ; 1 bytes @ 0x8
 11246                           
 11247     0078                     ?_rd2RegCompleteHandler:	
 11248                           ; 1 bytes @ 0x8
 11249                           
 11250     0078                     ?_wr1RegCompleteHandler:	
 11251                           ; 1 bytes @ 0x8
 11252                           
 11253     0078                     ?_wr2RegCompleteHandler:	
 11254                           ; 1 bytes @ 0x8
 11255                           
 11256     0078                     ?_rdBlkRegCompleteHandler:	
 11257                           ; 1 bytes @ 0x8
 11258                           
 11259     0078                     ?_I2C1_CallbackReturnStop:	
 11260                           ; 1 bytes @ 0x8
 11261                           
 11262     0078                     ?_I2C1_CallbackReturnReset:	
 11263                           ; 1 bytes @ 0x8
 11264                           
 11265     0078                     ?_wr1RegCompleteHandler@strncmp$F4784:	
 11266                           ; 1 bytes @ 0x8
 11267                           
 11268     0078                     ?_rd1RegCompleteHandler@strncmp$F4790:	
 11269                           ; 1 bytes @ 0x8
 11270                           
 11271     0078                     ?_rd2RegCompleteHandler@strncmp$F4793:	
 11272                           ; 1 bytes @ 0x8
 11273                           
 11274     0078                     ?_wr2RegCompleteHandler@strncmp$F4796:	
 11275                           ; 1 bytes @ 0x8
 11276                           
 11277     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4802:	
 11278                           ; 1 bytes @ 0x8
 11279                           
 11280     0078                     ??_RN487X_SendCmd:	
 11281                           ; 1 bytes @ 0x8
 11282                           
 11283     0078                     ?_strstr:	
 11284                           ; 1 bytes @ 0x8
 11285                           
 11286     0078                     LIGHTBLUE_SendSerialData@length:	
 11287                           ; 2 bytes @ 0x8
 11288                           
 11289     0078                     LIGHTBLUE_SplitByte@payload:	
 11290                           ; 1 bytes @ 0x8
 11291                           
 11292     0078                     wr1RegCompleteHandler@p:	
 11293                           ; 1 bytes @ 0x8
 11294                           
 11295     0078                     rd1RegCompleteHandler@p:	
 11296                           ; 1 bytes @ 0x8
 11297                           
 11298     0078                     rd2RegCompleteHandler@p:	
 11299                           ; 1 bytes @ 0x8
 11300                           
 11301     0078                     wr2RegCompleteHandler@p:	
 11302                           ; 1 bytes @ 0x8
 11303                           
 11304     0078                     rdBlkRegCompleteHandler@p:	
 11305                           ; 1 bytes @ 0x8
 11306                           
 11307     0078                     rd1RegCompleteHandler@i2c1_master_example$F1197@ptr:	
 11308                           ; 1 bytes @ 0x8
 11309                           
 11310     0078                     rd2RegCompleteHandler@i2c1_master_example$F1208@ptr:	
 11311                           ; 1 bytes @ 0x8
 11312                           
 11313     0078                     wr1RegCompleteHandler@i2c1_master_example$F1214@ptr:	
 11314                           ; 1 bytes @ 0x8
 11315                           
 11316     0078                     wr2RegCompleteHandler@i2c1_master_example$F1220@ptr:	
 11317                           ; 1 bytes @ 0x8
 11318                           
 11319     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr:	
 11320                           ; 1 bytes @ 0x8
 11321                           
 11322     0078                     RN487X_ReadMsg@resp:	
 11323                           ; 1 bytes @ 0x8
 11324                           
 11325     0078                     I2C1_CallbackReturnStop@funPtr:	
 11326                           ; 1 bytes @ 0x8
 11327                           
 11328     0078                     I2C1_CallbackReturnReset@funPtr:	
 11329                           ; 1 bytes @ 0x8
 11330                           
 11331     0078                     strstr@h:	
 11332                           ; 1 bytes @ 0x8
 11333                           
 11334                           
 11335                           ; 2 bytes @ 0x8
 11336     0078                     	ds	1
 11337     0079                     ?_LIGHTBLUE_SplitWord:
 11338     0079                     ??_I2C1_SetAddressNackCallback:	
 11339                           ; 1 bytes @ 0x9
 11340                           
 11341     0079                     ??_rd1RegCompleteHandler:	
 11342                           ; 1 bytes @ 0x9
 11343                           
 11344     0079                     ??_rd2RegCompleteHandler:	
 11345                           ; 1 bytes @ 0x9
 11346                           
 11347     0079                     ??_wr1RegCompleteHandler:	
 11348                           ; 1 bytes @ 0x9
 11349                           
 11350     0079                     ??_wr2RegCompleteHandler:	
 11351                           ; 1 bytes @ 0x9
 11352                           
 11353     0079                     ??_rdBlkRegCompleteHandler:	
 11354                           ; 1 bytes @ 0x9
 11355                           
 11356     0079                     ??_I2C1_DO_TX:	
 11357                           ; 1 bytes @ 0x9
 11358                           
 11359     0079                     ??_I2C1_DO_RX:	
 11360                           ; 1 bytes @ 0x9
 11361                           
 11362     0079                     ??_I2C1_DO_TX_EMPTY:	
 11363                           ; 1 bytes @ 0x9
 11364                           
 11365     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11366                           ; 1 bytes @ 0x9
 11367                           
 11368     0079                     ??_I2C1_CallbackReturnStop:	
 11369                           ; 1 bytes @ 0x9
 11370                           
 11371     0079                     ??_I2C1_CallbackReturnReset:	
 11372                           ; 1 bytes @ 0x9
 11373                           
 11374     0079                     ??_wr1RegCompleteHandler@strncmp$F4786:	
 11375                           ; 1 bytes @ 0x9
 11376                           
 11377     0079                     ??_rd1RegCompleteHandler@strncmp$F4792:	
 11378                           ; 1 bytes @ 0x9
 11379                           
 11380     0079                     ??_rd2RegCompleteHandler@strncmp$F4795:	
 11381                           ; 1 bytes @ 0x9
 11382                           
 11383     0079                     ??_wr2RegCompleteHandler@strncmp$F4798:	
 11384                           ; 1 bytes @ 0x9
 11385                           
 11386     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4804:	
 11387                           ; 1 bytes @ 0x9
 11388                           
 11389     0079                     ??_rn487x_PrintMessage:	
 11390                           ; 1 bytes @ 0x9
 11391                           
 11392     0079                     LIGHTBLUE_SendSerialData@serialData:	
 11393                           ; 1 bytes @ 0x9
 11394                           
 11395     0079                     RN487X_SendCmd@index:	
 11396                           ; 1 bytes @ 0x9
 11397                           
 11398     0079                     RN487X_ReadMsg@index:	
 11399                           ; 1 bytes @ 0x9
 11400                           
 11401     0079                     LIGHTBLUE_SplitWord@value:	
 11402                           ; 1 bytes @ 0x9
 11403                           
 11404                           
 11405                           ; 2 bytes @ 0x9
 11406     0079                     	ds	1
 11407     007A                     LIGHTBLUE_SendPacket@packetID:
 11408     007A                     RN487X_SendCmd@cmd:	
 11409                           ; 1 bytes @ 0xA
 11410                           
 11411     007A                     strstr@n:	
 11412                           ; 1 bytes @ 0xA
 11413                           
 11414                           
 11415                           ; 2 bytes @ 0xA
 11416     007A                     	ds	1
 11417     007B                     ??_BMA253_NewAccelDataRdyX:
 11418     007B                     ??_i2c_read1ByteRegister:	
 11419                           ; 1 bytes @ 0xB
 11420                           
 11421     007B                     ??_BMA253_NewAccelDataRdyY:	
 11422                           ; 1 bytes @ 0xB
 11423                           
 11424     007B                     ??_BMA253_NewAccelDataRdyZ:	
 11425                           ; 1 bytes @ 0xB
 11426                           
 11427     007B                     ??_LIGHTBLUE_SplitWord:	
 11428                           ; 1 bytes @ 0xB
 11429                           
 11430     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 11431                           ; 1 bytes @ 0xB
 11432                           
 11433     007B                     ??_RN487X_EnterCmdMode:	
 11434                           ; 1 bytes @ 0xB
 11435                           
 11436     007B                     ??_RN487X_SetOutputs:	
 11437                           ; 1 bytes @ 0xB
 11438                           
 11439     007B                     ??_RN487X_EnterDataMode:	
 11440                           ; 1 bytes @ 0xB
 11441                           
 11442     007B                     ??_I2C1_MasterWrite:	
 11443                           ; 1 bytes @ 0xB
 11444                           
 11445     007B                     ??_I2C1_Poller:	
 11446                           ; 1 bytes @ 0xB
 11447                           
 11448     007B                     ??_MCP9844_GetTemperatureValue:	
 11449                           ; 1 bytes @ 0xB
 11450                           
 11451     007B                     ??_LIGHTBLUE_PushButton:	
 11452                           ; 1 bytes @ 0xB
 11453                           
 11454     007B                     ??_LIGHTBLUE_LedState:	
 11455                           ; 1 bytes @ 0xB
 11456                           
 11457     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 11458                           ; 1 bytes @ 0xB
 11459                           
 11460     007B                     ??_I2C1_MasterOperation:	
 11461                           ; 1 bytes @ 0xB
 11462                           
 11463     007B                     BMA253_NewAccelDataRdyX@xNewData:	
 11464                           ; 1 bytes @ 0xB
 11465                           
 11466     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 11467                           ; 1 bytes @ 0xB
 11468                           
 11469     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 11470                           ; 1 bytes @ 0xB
 11471                           
 11472     007B                     MCP9844_GetTemperatureValue@temperature:	
 11473                           ; 1 bytes @ 0xB
 11474                           
 11475     007B                     LIGHTBLUE_SplitWord@payload:	
 11476                           ; 1 bytes @ 0xB
 11477                           
 11478                           
 11479                           ; 1 bytes @ 0xB
 11480     007B                     	ds	1
 11481     007C                     ??_RN487X_Read:
 11482     007C                     ??_RN487X_DataReady:	
 11483                           ; 1 bytes @ 0xC
 11484                           
 11485     007C                     ??_RN487X_MessageHandler:	
 11486                           ; 1 bytes @ 0xC
 11487                           
 11488     007C                     ??_BMA253_GetAccelDataXYZ:	
 11489                           ; 1 bytes @ 0xC
 11490                           
 11491     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 11492                           ; 1 bytes @ 0xC
 11493                           
 11494     007C                     ??_LIGHTBLUE_AccelSensor:	
 11495                           ; 1 bytes @ 0xC
 11496                           
 11497                           
 11498                           	psect	cstackBANK0
 11499     0020                     __pcstackBANK0:	
 11500                           ; 1 bytes @ 0xC
 11501                           
 11502     0020                     ?_RN487X_SetOutputs:
 11503     0020                     ??_strstr:	
 11504                           ; 1 bytes @ 0x0
 11505                           
 11506     0020                     ??_I2C1_MasterFsm:	
 11507                           ; 1 bytes @ 0x0
 11508                           
 11509     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 11510                           ; 1 bytes @ 0x0
 11511                           
 11512     0020                     LIGHTBLUE_PushButton@button:	
 11513                           ; 1 bytes @ 0x0
 11514                           
 11515     0020                     RN487X_SetOutputs@bitMap:	
 11516                           ; 1 bytes @ 0x0
 11517                           
 11518     0020                     LIGHTBLUE_LedState@payload:	
 11519                           ; 2 bytes @ 0x0
 11520                           
 11521     0020                     rn487x_PrintMessage@printCharacter:	
 11522                           ; 3 bytes @ 0x0
 11523                           
 11524                           
 11525                           ; 32 bytes @ 0x0
 11526     0020                     	ds	1
 11527     0021                     LIGHTBLUE_PushButton@payload:
 11528                           
 11529                           ; 3 bytes @ 0x1
 11530     0021                     	ds	1
 11531     0022                     RN487X_SetOutputs@ioLowNibble:
 11532     0022                     I2C1_MasterOperation@read:	
 11533                           ; 1 bytes @ 0x2
 11534                           
 11535     0022                     strstr@nl:	
 11536                           ; 1 bytes @ 0x2
 11537                           
 11538     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 11539                           ; 2 bytes @ 0x2
 11540                           
 11541                           
 11542                           ; 19 bytes @ 0x2
 11543     0022                     	ds	1
 11544     0023                     LIGHTBLUE_LedState@led:
 11545     0023                     RN487X_SetOutputs@stateLowNibble:	
 11546                           ; 1 bytes @ 0x3
 11547                           
 11548     0023                     I2C1_MasterOperation@returnValue:	
 11549                           ; 1 bytes @ 0x3
 11550                           
 11551                           
 11552                           ; 1 bytes @ 0x3
 11553     0023                     	ds	1
 11554     0024                     ?_i2c_read1ByteRegister:
 11555     0024                     ?_i2c_read2ByteRegister:	
 11556                           ; 1 bytes @ 0x4
 11557                           
 11558     0024                     i2c_read1ByteRegister@reg:	
 11559                           ; 2 bytes @ 0x4
 11560                           
 11561     0024                     i2c_read2ByteRegister@reg:	
 11562                           ; 1 bytes @ 0x4
 11563                           
 11564     0024                     RN487X_SetOutputs@ioHighNibble:	
 11565                           ; 1 bytes @ 0x4
 11566                           
 11567                           
 11568                           ; 1 bytes @ 0x4
 11569     0024                     	ds	1
 11570     0025                     i2c_read1ByteRegister@address:
 11571     0025                     RN487X_SetOutputs@stateHighNibble:	
 11572                           ; 1 bytes @ 0x5
 11573                           
 11574                           
 11575                           ; 1 bytes @ 0x5
 11576     0025                     	ds	1
 11577     0026                     ??_i2c_read2ByteRegister:
 11578     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 11579                           ; 1 bytes @ 0x6
 11580                           
 11581     0026                     i2c_read1ByteRegister@e:	
 11582                           ; 1 bytes @ 0x6
 11583                           
 11584                           
 11585                           ; 1 bytes @ 0x6
 11586     0026                     	ds	1
 11587     0027                     ?_LIGHTBLUE_PerformAction:
 11588     0027                     LIGHTBLUE_PerformAction@data:	
 11589                           ; 1 bytes @ 0x7
 11590                           
 11591     0027                     i2c_read1ByteRegister@x:	
 11592                           ; 1 bytes @ 0x7
 11593                           
 11594                           
 11595                           ; 2 bytes @ 0x7
 11596     0027                     	ds	1
 11597     0028                     ??_LIGHTBLUE_PerformAction:
 11598                           
 11599                           ; 1 bytes @ 0x8
 11600     0028                     	ds	1
 11601     0029                     LIGHTBLUE_PerformAction@id:
 11602     0029                     i2c_read1ByteRegister@d2:	
 11603                           ; 1 bytes @ 0x9
 11604                           
 11605                           
 11606                           ; 1 bytes @ 0x9
 11607     0029                     	ds	1
 11608     002A                     ??_BMA253_GetAccelDataX:
 11609     002A                     ??_BMA253_GetAccelDataY:	
 11610                           ; 1 bytes @ 0xA
 11611                           
 11612     002A                     ??_BMA253_GetAccelDataZ:	
 11613                           ; 1 bytes @ 0xA
 11614                           
 11615     002A                     LIGHTBLUE_PerformAction@led:	
 11616                           ; 1 bytes @ 0xA
 11617                           
 11618     002A                     i2c_read2ByteRegister@address:	
 11619                           ; 1 bytes @ 0xA
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0xA
 11623     002A                     	ds	1
 11624     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 11625     002B                     i2c_read2ByteRegister@result:	
 11626                           ; 1 bytes @ 0xB
 11627                           
 11628                           
 11629                           ; 2 bytes @ 0xB
 11630     002B                     	ds	2
 11631     002D                     ?_MCP9844_CalcTemperature:
 11632     002D                     BMA253_GetAccelDataX@xAccelData:	
 11633                           ; 2 bytes @ 0xD
 11634                           
 11635     002D                     BMA253_GetAccelDataY@yAccelData:	
 11636                           ; 1 bytes @ 0xD
 11637                           
 11638     002D                     BMA253_GetAccelDataZ@zAccelData:	
 11639                           ; 1 bytes @ 0xD
 11640                           
 11641     002D                     _LIGHTBLUE_ParseIncomingPacket$421:	
 11642                           ; 1 bytes @ 0xD
 11643                           
 11644                           
 11645                           ; 2 bytes @ 0xD
 11646     002D                     	ds	1
 11647     002E                     BMA253_GetAccelDataX@lsbData:
 11648     002E                     BMA253_GetAccelDataY@lsbData:	
 11649                           ; 1 bytes @ 0xE
 11650                           
 11651     002E                     BMA253_GetAccelDataZ@lsbData:	
 11652                           ; 1 bytes @ 0xE
 11653                           
 11654                           
 11655                           ; 1 bytes @ 0xE
 11656     002E                     	ds	1
 11657     002F                     ??_MCP9844_CalcTemperature:
 11658     002F                     BMA253_GetAccelDataX@msbData:	
 11659                           ; 1 bytes @ 0xF
 11660                           
 11661     002F                     BMA253_GetAccelDataY@msbData:	
 11662                           ; 1 bytes @ 0xF
 11663                           
 11664     002F                     BMA253_GetAccelDataZ@msbData:	
 11665                           ; 1 bytes @ 0xF
 11666                           
 11667     002F                     _LIGHTBLUE_ParseIncomingPacket$422:	
 11668                           ; 1 bytes @ 0xF
 11669                           
 11670                           
 11671                           ; 2 bytes @ 0xF
 11672     002F                     	ds	1
 11673     0030                     BMA253_GetAccelDataXYZ@accelData:
 11674                           
 11675                           ; 1 bytes @ 0x10
 11676     0030                     	ds	1
 11677     0031                     BMA253_GetAccelDataXYZ@sensorValue:
 11678     0031                     _LIGHTBLUE_ParseIncomingPacket$423:	
 11679                           ; 2 bytes @ 0x11
 11680                           
 11681                           
 11682                           ; 2 bytes @ 0x11
 11683     0031                     	ds	2
 11684     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:
 11685     0033                     LIGHTBLUE_AccelSensor@payload:	
 11686                           ; 1 bytes @ 0x13
 11687                           
 11688                           
 11689                           ; 13 bytes @ 0x13
 11690     0033                     	ds	1
 11691     0034                     MCP9844_CalcTemperature@upperByte:
 11692                           
 11693                           ; 1 bytes @ 0x14
 11694     0034                     	ds	1
 11695     0035                     MCP9844_CalcTemperature@lowerByte:
 11696     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 11697                           ; 1 bytes @ 0x15
 11698                           
 11699                           
 11700                           ; 1 bytes @ 0x15
 11701     0035                     	ds	1
 11702     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 11703     0036                     MCP9844_CalcTemperature@temperatureData:	
 11704                           ; 1 bytes @ 0x16
 11705                           
 11706                           
 11707                           ; 2 bytes @ 0x16
 11708     0036                     	ds	2
 11709     0038                     LIGHTBLUE_TemperatureSensor@payload:
 11710                           
 11711                           ; 5 bytes @ 0x18
 11712     0038                     	ds	5
 11713     003D                     LIGHTBLUE_TemperatureSensor@temperature:
 11714                           
 11715                           ; 2 bytes @ 0x1D
 11716     003D                     	ds	3
 11717     0040                     rn487x_PrintMessage@messageIndex:
 11718     0040                     LIGHTBLUE_AccelSensor@accelData:	
 11719                           ; 1 bytes @ 0x20
 11720                           
 11721                           
 11722                           ; 6 bytes @ 0x20
 11723     0040                     	ds	1
 11724     0041                     ?_RN487X_MessageHandler:
 11725     0041                     RN487X_MessageHandler@message:	
 11726                           ; 1 bytes @ 0x21
 11727                           
 11728                           
 11729                           ; 2 bytes @ 0x21
 11730     0041                     	ds	2
 11731     0043                     RN487X_MessageHandler@messageType:
 11732                           
 11733                           ; 1 bytes @ 0x23
 11734     0043                     	ds	1
 11735     0044                     ??_RN487X_FilterData:
 11736                           
 11737                           ; 1 bytes @ 0x24
 11738     0044                     	ds	4
 11739                           
 11740                           	psect	maintext
 11741     00A8                     __pmaintext:	
 11742 ;;
 11743 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11744 ;;
 11745 ;; *************** function _main *****************
 11746 ;; Defined at:
 11747 ;;		line 71 in file "main.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  2  2034[None  ] int 
 11754 ;; Registers used:
 11755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11756 ;; Tracked objects:
 11757 ;;		On entry : B3F/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11762 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11763 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11764 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11765 ;;Total ram usage:        2 bytes
 11766 ;; Hardware stack levels required when called: 17
 11767 ;; This function calls:
 11768 ;;		_EUSART1_Read
 11769 ;;		_EUSART1_Write
 11770 ;;		_EUSART1_is_rx_ready
 11771 ;;		_EUSART2_Read
 11772 ;;		_EUSART2_Write
 11773 ;;		_EUSART2_is_rx_ready
 11774 ;;		_LIGHTBLUE_AccelSensor
 11775 ;;		_LIGHTBLUE_Initialize
 11776 ;;		_LIGHTBLUE_LedState
 11777 ;;		_LIGHTBLUE_ParseIncomingPacket
 11778 ;;		_LIGHTBLUE_PushButton
 11779 ;;		_LIGHTBLUE_SendProtocolVersion
 11780 ;;		_LIGHTBLUE_SendSerialData
 11781 ;;		_LIGHTBLUE_TemperatureSensor
 11782 ;;		_RN487X_DataReady
 11783 ;;		_RN487X_Init
 11784 ;;		_RN487X_IsConnected
 11785 ;;		_RN487X_Read
 11786 ;;		_RN487X_SetAsyncMessageHandler
 11787 ;;		_RN487X_Write
 11788 ;;		_SYSTEM_Initialize
 11789 ;;		_TMR0_HasOverflowOccured
 11790 ;; This function is called by:
 11791 ;;		Startup code after reset
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795     00A8                     _main:	
 11796                           ;psect for function _main
 11797                           
 11798     00A8                     l14326:	
 11799                           ;incstack = 0
 11800 ;; hardware stack exceeded
 11801                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11802                           
 11803                           
 11804                           ;main.c: 74:     SYSTEM_Initialize();
 11805     00A8  3189  2157  3180   	fcall	_SYSTEM_Initialize
 11806                           
 11807                           ;main.c: 75:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 11808     00AB  3020               	movlw	low _statusBuffer@main$F3736
 11809     00AC  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 11810     00AD  3003               	movlw	high _statusBuffer@main$F3736
 11811     00AE  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 11812     00AF  3050               	movlw	80
 11813     00B0  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 11814     00B1  3189  21E4  3180   	fcall	_RN487X_SetAsyncMessageHandler
 11815     00B4                     l14328:
 11816                           
 11817                           ;main.c: 78:     (INTCONbits.GIE = 1);
 11818     00B4  178B               	bsf	11,7	;volatile
 11819     00B5                     l14330:
 11820                           
 11821                           ;main.c: 81:     (INTCONbits.PEIE = 1);
 11822     00B5  170B               	bsf	11,6	;volatile
 11823     00B6                     l14332:
 11824                           
 11825                           ;main.c: 83:     RN487X_Init();
 11826     00B6  3184  246E  3180   	fcall	_RN487X_Init
 11827     00B9                     l14334:
 11828                           
 11829                           ;main.c: 84:     LIGHTBLUE_Initialize();
 11830     00B9  3196  26B1  3180   	fcall	_LIGHTBLUE_Initialize
 11831     00BC                     l14336:
 11832                           
 11833                           ;main.c: 87:     {;main.c: 88:         if (RN487X_IsConnected() == 1)
 11834     00BC  3196  2646  3180   	fcall	_RN487X_IsConnected
 11835     00BF  3A01               	xorlw	1
 11836     00C0  1D03               	skipz
 11837     00C1  28C3               	goto	u11341
 11838     00C2  28C4               	goto	u11340
 11839     00C3                     u11341:
 11840     00C3  2950               	goto	l2050
 11841     00C4                     u11340:
 11842     00C4                     l14338:
 11843                           
 11844                           ;main.c: 89:         {;main.c: 90:             if ((TMR0_HasOverflowOccured()) == 1)
 11845     00C4  3187  27FB  3180   	fcall	_TMR0_HasOverflowOccured
 11846     00C7  3A01               	xorlw	1
 11847     00C8  1D03               	skipz
 11848     00C9  28CB               	goto	u11351
 11849     00CA  28CC               	goto	u11350
 11850     00CB                     u11351:
 11851     00CB  28E4               	goto	l2039
 11852     00CC                     u11350:
 11853     00CC                     l14340:
 11854                           
 11855                           ;main.c: 91:             {;main.c: 92:                 (PIR0bits.TMR0IF = 0);
 11856     00CC  014E               	movlb	14	; select bank14
 11857     00CD  128C               	bcf	12,5	;volatile
 11858     00CE                     l14342:
 11859                           
 11860                           ;main.c: 94:                 LIGHTBLUE_TemperatureSensor();
 11861     00CE  3189  2141  3180   	fcall	_LIGHTBLUE_TemperatureSensor
 11862                           
 11863                           ;main.c: 95:                 LIGHTBLUE_AccelSensor();
 11864     00D1  318D  25AA  3180   	fcall	_LIGHTBLUE_AccelSensor
 11865                           
 11866                           ;main.c: 96:                 LIGHTBLUE_PushButton();
 11867     00D4  3189  2104  3180   	fcall	_LIGHTBLUE_PushButton
 11868                           
 11869                           ;main.c: 97:                 LIGHTBLUE_LedState();
 11870     00D7  318B  238A  3180   	fcall	_LIGHTBLUE_LedState
 11871                           
 11872                           ;main.c: 98:                 LIGHTBLUE_SendProtocolVersion();
 11873     00DA  318E  2637  3180   	fcall	_LIGHTBLUE_SendProtocolVersion
 11874                           
 11875                           ;main.c: 99:             }
 11876     00DD  28BC               	goto	l14336
 11877     00DE                     l14344:
 11878                           
 11879                           ;main.c: 103:                 {;main.c: 104:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 11880     00DE  3188  2000  3180   	fcall	_RN487X_Read
 11881     00E1  3181  217D  3180   	fcall	_LIGHTBLUE_ParseIncomingPacket
 11882     00E4                     l2039:	
 11883                           ;main.c: 105:                 }
 11884                           
 11885                           
 11886                           ;main.c: 102:                 while (RN487X_DataReady())
 11887     00E4  318A  227F  3180   	fcall	_RN487X_DataReady
 11888     00E7  3A00               	xorlw	0
 11889     00E8  1D03               	skipz
 11890     00E9  28EB               	goto	u11361
 11891     00EA  28EC               	goto	u11360
 11892     00EB                     u11361:
 11893     00EB  28DE               	goto	l14344
 11894     00EC                     u11360:
 11895     00EC  2931               	goto	l14362
 11896     00ED                     l14346:
 11897                           
 11898                           ;main.c: 107:                 {;main.c: 108:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 11899     00ED  3000               	movlw	low (_uart| (0+32768))
 11900     00EE  0084               	movwf	4
 11901     00EF  3090               	movlw	high (_uart| (0+32768))
 11902     00F0  0085               	movwf	5
 11903     00F1  3F01               	moviw [1]fsr0
 11904     00F2  008A               	movwf	10
 11905     00F3  3F00               	moviw [0]fsr0
 11906     00F4  000A               	callw
 11907     00F5  3180               	pagesel	$
 11908     00F6  0142               	movlb	2	; select bank2
 11909     00F7  00E9               	movwf	??_main^(0+256)
 11910     00F8  0140               	movlb	0	; select bank0
 11911     00F9  0857               	movf	_serialIndex,w
 11912     00FA  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11913     00FB  0086               	movwf	6
 11914     00FC  3002               	movlw	2	; select bank4/5
 11915     00FD  0087               	movwf	7
 11916     00FE  0142               	movlb	2	; select bank2
 11917     00FF  0869               	movf	??_main^(0+256),w
 11918     0100  0081               	movwf	1
 11919     0101                     l14348:
 11920                           
 11921                           ;main.c: 109:                     if ((lightBlueSerial[serialIndex] == '\r')
 11922     0101  0140               	movlb	0	; select bank0
 11923     0102  0857               	movf	_serialIndex,w
 11924     0103  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11925     0104  0086               	movwf	6
 11926     0105  3002               	movlw	2	; select bank4/5
 11927     0106  0087               	movwf	7
 11928     0107  300D               	movlw	13
 11929     0108  0601               	xorwf	1,w
 11930     0109  1903               	btfsc	3,2
 11931     010A  290C               	goto	u11371
 11932     010B  290D               	goto	u11370
 11933     010C                     u11371:
 11934     010C  291E               	goto	l14354
 11935     010D                     u11370:
 11936     010D                     l14350:
 11937     010D  0857               	movf	_serialIndex,w
 11938     010E  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11939     010F  0086               	movwf	6
 11940     0110  3002               	movlw	2	; select bank4/5
 11941     0111  0087               	movwf	7
 11942     0112  300A               	movlw	10
 11943     0113  0601               	xorwf	1,w
 11944     0114  1903               	btfsc	3,2
 11945     0115  2917               	goto	u11381
 11946     0116  2918               	goto	u11380
 11947     0117                     u11381:
 11948     0117  291E               	goto	l14354
 11949     0118                     u11380:
 11950     0118                     l14352:
 11951     0118  304F               	movlw	79
 11952     0119  0657               	xorwf	_serialIndex,w
 11953     011A  1D03               	btfss	3,2
 11954     011B  291D               	goto	u11391
 11955     011C  291E               	goto	u11390
 11956     011D                     u11391:
 11957     011D  292B               	goto	l14360
 11958     011E                     u11390:
 11959     011E                     l14354:
 11960                           
 11961                           ;main.c: 112:                     {;main.c: 113:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 11962     011E  0857               	movf	_serialIndex,w
 11963     011F  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11964     0120  0086               	movwf	6
 11965     0121  3002               	movlw	2	; select bank4/5
 11966     0122  0087               	movwf	7
 11967     0123  0181               	clrf	1
 11968     0124                     l14356:
 11969                           
 11970                           ;main.c: 114:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 11971     0124  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11972     0125  3182  2249  3180   	fcall	_LIGHTBLUE_SendSerialData
 11973     0128                     l14358:
 11974                           
 11975                           ;main.c: 115:                         serialIndex = 0;
 11976     0128  0140               	movlb	0	; select bank0
 11977     0129  01D7               	clrf	_serialIndex
 11978                           
 11979                           ;main.c: 116:                     }
 11980     012A  2931               	goto	l14362
 11981     012B                     l14360:
 11982                           
 11983                           ;main.c: 118:                     {;main.c: 119:                         serialIndex++;
 11984     012B  3001               	movlw	1
 11985     012C  0142               	movlb	2	; select bank2
 11986     012D  00E9               	movwf	??_main^(0+256)
 11987     012E  0869               	movf	??_main^(0+256),w
 11988     012F  0140               	movlb	0	; select bank0
 11989     0130  07D7               	addwf	_serialIndex,f
 11990     0131                     l14362:
 11991                           
 11992                           ;main.c: 106:                 while (uart[UART_CDC].DataReady())
 11993     0131  3006               	movlw	low ((_uart+6)| (0+32768))
 11994     0132  0084               	movwf	4
 11995     0133  3090               	movlw	high ((_uart+6)| (0+32768))
 11996     0134  0085               	movwf	5
 11997     0135  3F01               	moviw [1]fsr0
 11998     0136  008A               	movwf	10
 11999     0137  3F00               	moviw [0]fsr0
 12000     0138  000A               	callw
 12001     0139  3180               	pagesel	$
 12002     013A  3A00               	xorlw	0
 12003     013B  1D03               	skipz
 12004     013C  293E               	goto	u11401
 12005     013D  293F               	goto	u11400
 12006     013E                     u11401:
 12007     013E  28ED               	goto	l14346
 12008     013F                     u11400:
 12009     013F  28BC               	goto	l14336
 12010     0140                     l14364:
 12011                           
 12012                           ;main.c: 128:             {;main.c: 129:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12013     0140  3188  2000  3180   	fcall	_RN487X_Read
 12014     0143  0142               	movlb	2	; select bank2
 12015     0144  00EA               	movwf	_main$5367^(0+256)
 12016                           
 12017                           ;main.c: 128:             {;main.c: 129:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12018     0145  086A               	movf	_main$5367^(0+256),w
 12019     0146  00F1               	movwf	EUSART2_Write@txData
 12020     0147  3002               	movlw	low ((_uart+2)| (0+32768))
 12021     0148  0084               	movwf	4
 12022     0149  3090               	movlw	high ((_uart+2)| (0+32768))
 12023     014A  0085               	movwf	5
 12024     014B  3F01               	moviw [1]fsr0
 12025     014C  008A               	movwf	10
 12026     014D  3F00               	moviw [0]fsr0
 12027     014E  000A               	callw
 12028     014F  3180               	pagesel	$
 12029     0150                     l2050:	
 12030                           ;main.c: 130:             }
 12031                           
 12032                           
 12033                           ;main.c: 127:             while(RN487X_DataReady())
 12034     0150  318A  227F  3180   	fcall	_RN487X_DataReady
 12035     0153  3A00               	xorlw	0
 12036     0154  1D03               	skipz
 12037     0155  2957               	goto	u11411
 12038     0156  2958               	goto	u11410
 12039     0157                     u11411:
 12040     0157  2940               	goto	l14364
 12041     0158                     u11410:
 12042     0158  296C               	goto	l14368
 12043     0159                     l14366:
 12044                           
 12045                           ;main.c: 132:             {;main.c: 133:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12046     0159  3000               	movlw	low (_uart| (0+32768))
 12047     015A  0084               	movwf	4
 12048     015B  3090               	movlw	high (_uart| (0+32768))
 12049     015C  0085               	movwf	5
 12050     015D  3F01               	moviw [1]fsr0
 12051     015E  008A               	movwf	10
 12052     015F  3F00               	moviw [0]fsr0
 12053     0160  000A               	callw
 12054     0161  3180               	pagesel	$
 12055     0162  00F6               	movwf	RN487X_Write@txData
 12056     0163  3068               	movlw	low (_RN487X| (0+32768))
 12057     0164  0084               	movwf	4
 12058     0165  3090               	movlw	high (_RN487X| (0+32768))
 12059     0166  0085               	movwf	5
 12060     0167  3F01               	moviw [1]fsr0
 12061     0168  008A               	movwf	10
 12062     0169  3F00               	moviw [0]fsr0
 12063     016A  000A               	callw
 12064     016B  3180               	pagesel	$
 12065     016C                     l14368:
 12066                           
 12067                           ;main.c: 131:             while (uart[UART_CDC].DataReady())
 12068     016C  3006               	movlw	low ((_uart+6)| (0+32768))
 12069     016D  0084               	movwf	4
 12070     016E  3090               	movlw	high ((_uart+6)| (0+32768))
 12071     016F  0085               	movwf	5
 12072     0170  3F01               	moviw [1]fsr0
 12073     0171  008A               	movwf	10
 12074     0172  3F00               	moviw [0]fsr0
 12075     0173  000A               	callw
 12076     0174  3180               	pagesel	$
 12077     0175  3A00               	xorlw	0
 12078     0176  1D03               	skipz
 12079     0177  2979               	goto	u11421
 12080     0178  297A               	goto	u11420
 12081     0179                     u11421:
 12082     0179  2959               	goto	l14366
 12083     017A                     u11420:
 12084     017A  28BC               	goto	l14336
 12085     017B  3180  2855         	ljmp	start
 12086     017D                     __end_of_main:
 12087                           
 12088                           	psect	text1
 12089     07FB                     __ptext1:	
 12090 ;; *************** function _TMR0_HasOverflowOccured *****************
 12091 ;; Defined at:
 12092 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;		None
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  1    wreg      _Bool 
 12099 ;; Registers used:
 12100 ;;		wreg, status,2, status,0
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12110 ;;Total ram usage:        0 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; Hardware stack levels required when called: 4
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		_main
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120     07FB                     _TMR0_HasOverflowOccured:	
 12121                           ;psect for function _TMR0_HasOverflowOccured
 12122                           
 12123     07FB                     l13924:	
 12124                           ;incstack = 0
 12125                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 12126                           
 12127                           
 12128                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 12129     07FB  014E               	movlb	14	; select bank14
 12130     07FC  0E0C               	swapf	12,w	;volatile
 12131     07FD  0C89               	rrf	9,f
 12132     07FE  3901               	andlw	1
 12133     07FF                     l1489:
 12134     07FF  0008               	return
 12135     0800                     __end_of_TMR0_HasOverflowOccured:
 12136                           
 12137                           	psect	text2
 12138     0957                     __ptext2:	
 12139 ;; *************** function _SYSTEM_Initialize *****************
 12140 ;; Defined at:
 12141 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      void 
 12148 ;; Registers used:
 12149 ;;		wreg, status,2, status,0, pclath, cstack
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12159 ;;Total ram usage:        0 bytes
 12160 ;; Hardware stack levels used: 1
 12161 ;; Hardware stack levels required when called: 6
 12162 ;; This function calls:
 12163 ;;		_EUSART1_Initialize
 12164 ;;		_EUSART2_Initialize
 12165 ;;		_I2C1_Initialize
 12166 ;;		_OSCILLATOR_Initialize
 12167 ;;		_PIN_MANAGER_Initialize
 12168 ;;		_PMD_Initialize
 12169 ;;		_TMR0_Initialize
 12170 ;; This function is called by:
 12171 ;;		_main
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175     0957                     _SYSTEM_Initialize:	
 12176                           ;psect for function _SYSTEM_Initialize
 12177                           
 12178     0957                     l13910:	
 12179                           ;incstack = 0
 12180                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12181                           
 12182                           
 12183                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12184     0957  3197  277D  3189   	fcall	_PMD_Initialize
 12185     095A                     l13912:
 12186                           
 12187                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 12188     095A  3197  274C  3189   	fcall	_I2C1_Initialize
 12189     095D                     l13914:
 12190                           
 12191                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12192     095D  3186  265F  3189   	fcall	_PIN_MANAGER_Initialize
 12193     0960                     l13916:
 12194                           
 12195                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12196     0960  3197  2773  3189   	fcall	_OSCILLATOR_Initialize
 12197     0963                     l13918:
 12198                           
 12199                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 12200     0963  3189  2117  3189   	fcall	_TMR0_Initialize
 12201     0966                     l13920:
 12202                           
 12203                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 12204     0966  318F  2784  3189   	fcall	_EUSART1_Initialize
 12205     0969                     l13922:
 12206                           
 12207                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 12208     0969  318F  27C2  3189   	fcall	_EUSART2_Initialize
 12209     096C                     l1349:
 12210     096C  0008               	return
 12211     096D                     __end_of_SYSTEM_Initialize:
 12212                           
 12213                           	psect	text3
 12214     0917                     __ptext3:	
 12215 ;; *************** function _TMR0_Initialize *****************
 12216 ;; Defined at:
 12217 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used: 1
 12237 ;; Hardware stack levels required when called: 4
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_SYSTEM_Initialize
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245     0917                     _TMR0_Initialize:	
 12246                           ;psect for function _TMR0_Initialize
 12247                           
 12248     0917                     l13648:	
 12249                           ;incstack = 0
 12250                           ; Regs used in _TMR0_Initialize: [wreg]
 12251                           
 12252                           
 12253                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 12254     0917  3047               	movlw	71
 12255     0918  014B               	movlb	11	; select bank11
 12256     0919  009F               	movwf	31	;volatile
 12257                           
 12258                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 12259     091A  300B               	movlw	11
 12260     091B  009D               	movwf	29	;volatile
 12261                           
 12262                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 12263     091C  30DC               	movlw	220
 12264     091D  009C               	movwf	28	;volatile
 12265                           
 12266                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 12267     091E  081D               	movf	29,w	;volatile
 12268     091F  0140               	movlb	0	; select bank0
 12269     0920  00C9               	movwf	_timer0ReloadVal16bit+1	;volatile
 12270     0921  014B               	movlb	11	; select bank11
 12271     0922  081C               	movf	28,w	;volatile
 12272     0923  0140               	movlb	0	; select bank0
 12273     0924  00C8               	movwf	_timer0ReloadVal16bit	;volatile
 12274     0925                     l13650:
 12275                           
 12276                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 12277     0925  014E               	movlb	14	; select bank14
 12278     0926  128C               	bcf	12,5	;volatile
 12279                           
 12280                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 12281     0927  3090               	movlw	144
 12282     0928  014B               	movlb	11	; select bank11
 12283     0929  009E               	movwf	30	;volatile
 12284     092A                     l1471:
 12285     092A  0008               	return
 12286     092B                     __end_of_TMR0_Initialize:
 12287                           
 12288                           	psect	text4
 12289     177D                     __ptext4:	
 12290 ;; *************** function _PMD_Initialize *****************
 12291 ;; Defined at:
 12292 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12293 ;; Parameters:    Size  Location     Type
 12294 ;;		None
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;		None
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      void 
 12299 ;; Registers used:
 12300 ;;		status,2
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12310 ;;Total ram usage:        0 bytes
 12311 ;; Hardware stack levels used: 1
 12312 ;; Hardware stack levels required when called: 4
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		_SYSTEM_Initialize
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320     177D                     _PMD_Initialize:	
 12321                           ;psect for function _PMD_Initialize
 12322                           
 12323     177D                     l13562:	
 12324                           ;incstack = 0
 12325                           ; Regs used in _PMD_Initialize: [status,2]
 12326                           
 12327                           
 12328                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12329     177D  014F               	movlb	15	; select bank15
 12330     177E  0196               	clrf	22	;volatile
 12331                           
 12332                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12333     177F  0197               	clrf	23	;volatile
 12334                           
 12335                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12336     1780  0198               	clrf	24	;volatile
 12337                           
 12338                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12339     1781  0199               	clrf	25	;volatile
 12340                           
 12341                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12342     1782  019A               	clrf	26	;volatile
 12343                           
 12344                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12345     1783  019B               	clrf	27	;volatile
 12346                           
 12347                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 12348     1784  019C               	clrf	28	;volatile
 12349                           
 12350                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 12351     1785  019D               	clrf	29	;volatile
 12352     1786                     l1355:
 12353     1786  0008               	return
 12354     1787                     __end_of_PMD_Initialize:
 12355                           
 12356                           	psect	text5
 12357     065F                     __ptext5:	
 12358 ;; *************** function _PIN_MANAGER_Initialize *****************
 12359 ;; Defined at:
 12360 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0, pclath, cstack
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 5
 12381 ;; This function calls:
 12382 ;;		_IOCAF6_SetInterruptHandler
 12383 ;; This function is called by:
 12384 ;;		_SYSTEM_Initialize
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388     065F                     _PIN_MANAGER_Initialize:	
 12389                           ;psect for function _PIN_MANAGER_Initialize
 12390                           
 12391     065F                     l13572:	
 12392                           ;incstack = 0
 12393                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12394                           
 12395                           
 12396                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 12397     065F  0140               	movlb	0	; select bank0
 12398     0660  019C               	clrf	28	;volatile
 12399     0661                     l13574:
 12400                           
 12401                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 12402     0661  3031               	movlw	49
 12403     0662  0098               	movwf	24	;volatile
 12404     0663                     l13576:
 12405                           
 12406                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 12407     0663  0199               	clrf	25	;volatile
 12408                           
 12409                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 12410     0664  30C1               	movlw	193
 12411     0665  009A               	movwf	26	;volatile
 12412                           
 12413                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 12414     0666  3008               	movlw	8
 12415     0667  0096               	movwf	22	;volatile
 12416                           
 12417                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 12418     0668  30DE               	movlw	222
 12419     0669  0092               	movwf	18	;volatile
 12420                           
 12421                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 12422     066A  30EF               	movlw	239
 12423     066B  0093               	movwf	19	;volatile
 12424                           
 12425                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 12426     066C  3025               	movlw	37
 12427     066D  0094               	movwf	20	;volatile
 12428     066E                     l13578:
 12429                           
 12430                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 12431     066E  017E               	movlb	62	; select bank62
 12432     066F  01CE               	clrf	78	;volatile
 12433     0670                     l13580:
 12434                           
 12435                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 12436     0670  30C9               	movlw	201
 12437     0671  00C3               	movwf	67	;volatile
 12438     0672                     l13582:
 12439                           
 12440                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 12441     0672  300E               	movlw	14
 12442     0673  00B8               	movwf	56	;volatile
 12443     0674                     l13584:
 12444                           
 12445                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 12446     0674  01E5               	clrf	101	;volatile
 12447     0675                     l13586:
 12448                           
 12449                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 12450     0675  01C4               	clrf	68	;volatile
 12451     0676                     l13588:
 12452                           
 12453                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 12454     0676  01B9               	clrf	57	;volatile
 12455     0677                     l13590:
 12456                           
 12457                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 12458     0677  01CF               	clrf	79	;volatile
 12459     0678                     l13592:
 12460                           
 12461                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 12462     0678  01E6               	clrf	102	;volatile
 12463     0679                     l13594:
 12464                           
 12465                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 12466     0679  01BA               	clrf	58	;volatile
 12467     067A                     l13596:
 12468                           
 12469                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 12470     067A  01C5               	clrf	69	;volatile
 12471     067B                     l13598:
 12472                           
 12473                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 12474     067B  01D0               	clrf	80	;volatile
 12475     067C                     l13600:
 12476                           
 12477                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 12478     067C  30FF               	movlw	255
 12479     067D  00BB               	movwf	59	;volatile
 12480     067E                     l13602:
 12481                           
 12482                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 12483     067E  30FF               	movlw	255
 12484     067F  00C6               	movwf	70	;volatile
 12485     0680                     l13604:
 12486                           
 12487                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 12488     0680  30FF               	movlw	255
 12489     0681  00D1               	movwf	81	;volatile
 12490     0682                     l13606:
 12491                           
 12492                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 12493     0682  303F               	movlw	63
 12494     0683  00BC               	movwf	60	;volatile
 12495     0684                     l13608:
 12496                           
 12497                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 12498     0684  303F               	movlw	63
 12499     0685  00C7               	movwf	71	;volatile
 12500     0686                     l13610:
 12501                           
 12502                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 12503     0686  303F               	movlw	63
 12504     0687  00D2               	movwf	82	;volatile
 12505     0688                     l13612:
 12506                           
 12507                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 12508     0688  133F               	bcf	63,6	;volatile
 12509     0689                     l13614:
 12510                           
 12511                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 12512     0689  133E               	bcf	62,6	;volatile
 12513     068A                     l13616:
 12514                           
 12515                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 12516     068A  173D               	bsf	61,6	;volatile
 12517     068B                     l13618:
 12518                           
 12519                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 12520     068B  3026               	movlw	low _IOCAF6_DefaultInterruptHandler
 12521     068C  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 12522     068D  3016               	movlw	high _IOCAF6_DefaultInterruptHandler
 12523     068E  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 12524     068F  3196  26FF  3186   	fcall	_IOCAF6_SetInterruptHandler
 12525     0692                     l13620:
 12526                           
 12527                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 12528     0692  014E               	movlb	14	; select bank14
 12529     0693  1616               	bsf	22,4	;volatile
 12530     0694                     l13622:
 12531                           
 12532                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 12533     0694  3009               	movlw	9
 12534     0695  017D               	movlb	61	; select bank61
 12535     0696  00C5               	movwf	69	;volatile
 12536     0697                     l13624:
 12537                           
 12538                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 12539     0697  3013               	movlw	19
 12540     0698  017E               	movlb	62	; select bank62
 12541     0699  0099               	movwf	25	;volatile
 12542     069A                     l13626:
 12543                           
 12544                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 12545     069A  3014               	movlw	20
 12546     069B  009A               	movwf	26	;volatile
 12547     069C                     l13628:
 12548                           
 12549                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 12550     069C  3025               	movlw	37
 12551     069D  00A4               	movwf	36	;volatile
 12552     069E                     l13630:
 12553                           
 12554                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 12555     069E  300F               	movlw	15
 12556     069F  009C               	movwf	28	;volatile
 12557     06A0                     l13632:
 12558                           
 12559                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 12560     06A0  3015               	movlw	21
 12561     06A1  017D               	movlb	61	; select bank61
 12562     06A2  00CD               	movwf	77	;volatile
 12563     06A3                     l13634:
 12564                           
 12565                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 12566     06A3  300A               	movlw	10
 12567     06A4  00C6               	movwf	70	;volatile
 12568     06A5                     l13636:
 12569                           
 12570                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 12571     06A5  300D               	movlw	13
 12572     06A6  00CB               	movwf	75	;volatile
 12573     06A7                     l1440:
 12574     06A7  0008               	return
 12575     06A8                     __end_of_PIN_MANAGER_Initialize:
 12576                           
 12577                           	psect	text6
 12578     16FF                     __ptext6:	
 12579 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 12580 ;; Defined at:
 12581 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 12584 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;		None
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1    wreg      void 
 12589 ;; Registers used:
 12590 ;;		wreg
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12600 ;;Total ram usage:        2 bytes
 12601 ;; Hardware stack levels used: 1
 12602 ;; Hardware stack levels required when called: 4
 12603 ;; This function calls:
 12604 ;;		Nothing
 12605 ;; This function is called by:
 12606 ;;		_PIN_MANAGER_Initialize
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           
 12610     16FF                     _IOCAF6_SetInterruptHandler:	
 12611                           ;psect for function _IOCAF6_SetInterruptHandler
 12612                           
 12613     16FF                     l13374:	
 12614                           ;incstack = 0
 12615                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 12616                           
 12617                           
 12618                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 12619     16FF  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 12620     1700  0141               	movlb	1	; select bank1
 12621     1701  00EE               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 12622     1702  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 12623     1703  00ED               	movwf	_IOCAF6_InterruptHandler^(0+128)
 12624     1704                     l1451:
 12625     1704  0008               	return
 12626     1705                     __end_of_IOCAF6_SetInterruptHandler:
 12627                           
 12628                           	psect	text7
 12629     1773                     __ptext7:	
 12630 ;; *************** function _OSCILLATOR_Initialize *****************
 12631 ;; Defined at:
 12632 ;;		line 61 in file "mcc_generated_files/mcc.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;		None
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12650 ;;Total ram usage:        0 bytes
 12651 ;; Hardware stack levels used: 1
 12652 ;; Hardware stack levels required when called: 4
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_SYSTEM_Initialize
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660     1773                     _OSCILLATOR_Initialize:	
 12661                           ;psect for function _OSCILLATOR_Initialize
 12662                           
 12663     1773                     l13638:	
 12664                           ;incstack = 0
 12665                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12666                           
 12667                           
 12668                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 12669     1773  3060               	movlw	96
 12670     1774  0151               	movlb	17	; select bank17
 12671     1775  008D               	movwf	13	;volatile
 12672     1776                     l13640:
 12673                           
 12674                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 12675     1776  018F               	clrf	15	;volatile
 12676     1777                     l13642:
 12677                           
 12678                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 12679     1777  0191               	clrf	17	;volatile
 12680                           
 12681                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 12682     1778  3006               	movlw	6
 12683     1779  0093               	movwf	19	;volatile
 12684     177A                     l13644:
 12685                           
 12686                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 12687     177A  0190               	clrf	16	;volatile
 12688     177B                     l13646:
 12689                           
 12690                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12691     177B  0192               	clrf	18	;volatile
 12692     177C                     l1352:
 12693     177C  0008               	return
 12694     177D                     __end_of_OSCILLATOR_Initialize:
 12695                           
 12696                           	psect	text8
 12697     174C                     __ptext8:	
 12698 ;; *************** function _I2C1_Initialize *****************
 12699 ;; Defined at:
 12700 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;		None
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg, status,2
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12718 ;;Total ram usage:        0 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; Hardware stack levels required when called: 4
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_SYSTEM_Initialize
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728     174C                     _I2C1_Initialize:	
 12729                           ;psect for function _I2C1_Initialize
 12730                           
 12731     174C                     l13564:	
 12732                           ;incstack = 0
 12733                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12734                           
 12735                           
 12736                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 12737     174C  0143               	movlb	3	; select bank3
 12738     174D  018F               	clrf	15	;volatile
 12739     174E                     l13566:
 12740                           
 12741                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 12742     174E  3008               	movlw	8
 12743     174F  0090               	movwf	16	;volatile
 12744     1750                     l13568:
 12745                           
 12746                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 12747     1750  0191               	clrf	17	;volatile
 12748                           
 12749                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 12750     1751  304F               	movlw	79
 12751     1752  008D               	movwf	13	;volatile
 12752     1753                     l13570:
 12753                           
 12754                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 12755     1753  1290               	bcf	16,5	;volatile
 12756     1754                     l1739:
 12757     1754  0008               	return
 12758     1755                     __end_of_I2C1_Initialize:
 12759                           
 12760                           	psect	text9
 12761     0FC2                     __ptext9:	
 12762 ;; *************** function _EUSART2_Initialize *****************
 12763 ;; Defined at:
 12764 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0, pclath, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12782 ;;Total ram usage:        0 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; Hardware stack levels required when called: 5
 12785 ;; This function calls:
 12786 ;;		_EUSART2_SetErrorHandler
 12787 ;;		_EUSART2_SetFramingErrorHandler
 12788 ;;		_EUSART2_SetOverrunErrorHandler
 12789 ;;		_EUSART2_SetRxInterruptHandler
 12790 ;;		_EUSART2_SetTxInterruptHandler
 12791 ;; This function is called by:
 12792 ;;		_SYSTEM_Initialize
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796     0FC2                     _EUSART2_Initialize:	
 12797                           ;psect for function _EUSART2_Initialize
 12798                           
 12799     0FC2                     l13490:	
 12800                           ;incstack = 0
 12801                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12802                           
 12803                           
 12804                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 12805     0FC2  014E               	movlb	14	; select bank14
 12806     0FC3  1399               	bcf	25,7	;volatile
 12807     0FC4                     l13492:
 12808                           
 12809                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 12810     0FC4  300E               	movlw	low _EUSART2_Receive_ISR
 12811     0FC5  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 12812     0FC6  300F               	movlw	high _EUSART2_Receive_ISR
 12813     0FC7  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 12814     0FC8  3196  26F3  318F   	fcall	_EUSART2_SetRxInterruptHandler
 12815     0FCB                     l13494:
 12816                           
 12817                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 12818     0FCB  014E               	movlb	14	; select bank14
 12819     0FCC  1319               	bcf	25,6	;volatile
 12820                           
 12821                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 12822     0FCD  30DA               	movlw	low _EUSART2_Transmit_ISR
 12823     0FCE  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 12824     0FCF  300A               	movlw	high _EUSART2_Transmit_ISR
 12825     0FD0  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 12826     0FD1  3196  26F9  318F   	fcall	_EUSART2_SetTxInterruptHandler
 12827     0FD4                     l13496:
 12828                           
 12829                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 12830     0FD4  3008               	movlw	8
 12831     0FD5  0154               	movlb	20	; select bank20
 12832     0FD6  009F               	movwf	31	;volatile
 12833     0FD7                     l13498:
 12834                           
 12835                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 12836     0FD7  3090               	movlw	144
 12837     0FD8  009D               	movwf	29	;volatile
 12838     0FD9                     l13500:
 12839                           
 12840                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 12841     0FD9  3024               	movlw	36
 12842     0FDA  009E               	movwf	30	;volatile
 12843     0FDB                     l13502:
 12844                           
 12845                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 12846     0FDB  3040               	movlw	64
 12847     0FDC  009B               	movwf	27	;volatile
 12848     0FDD                     l13504:
 12849                           
 12850                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 12851     0FDD  3003               	movlw	3
 12852     0FDE  009C               	movwf	28	;volatile
 12853     0FDF                     l13506:
 12854                           
 12855                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 12856     0FDF  3025               	movlw	low _EUSART2_DefaultFramingErrorHandler
 12857     0FE0  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 12858     0FE1  3016               	movlw	high _EUSART2_DefaultFramingErrorHandler
 12859     0FE2  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 12860     0FE3  3196  26E7  318F   	fcall	_EUSART2_SetFramingErrorHandler
 12861     0FE6                     l13508:
 12862                           
 12863                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 12864     0FE6  3055               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 12865     0FE7  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 12866     0FE8  3016               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 12867     0FE9  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 12868     0FEA  3196  26ED  318F   	fcall	_EUSART2_SetOverrunErrorHandler
 12869     0FED                     l13510:
 12870                           
 12871                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 12872     0FED  3051               	movlw	low _EUSART2_DefaultErrorHandler
 12873     0FEE  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 12874     0FEF  3016               	movlw	high _EUSART2_DefaultErrorHandler
 12875     0FF0  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 12876     0FF1  3196  26E1  318F   	fcall	_EUSART2_SetErrorHandler
 12877     0FF4                     l13512:
 12878                           
 12879                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 12880     0FF4  0140               	movlb	0	; select bank0
 12881     0FF5  01DF               	clrf	_eusart2RxLastError	;volatile
 12882     0FF6                     l13514:
 12883                           
 12884                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 12885     0FF6  01E4               	clrf	_eusart2TxHead	;volatile
 12886     0FF7                     l13516:
 12887                           
 12888                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 12889     0FF7  01E3               	clrf	_eusart2TxTail	;volatile
 12890     0FF8                     l13518:
 12891                           
 12892                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 12893     0FF8  3008               	movlw	8
 12894     0FF9  00E2               	movwf	_eusart2TxBufferRemaining	;volatile
 12895                           
 12896                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 12897     0FFA  01FC               	clrf	_eusart2RxHead	;volatile
 12898                           
 12899                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 12900     0FFB  01E1               	clrf	_eusart2RxTail	;volatile
 12901                           
 12902                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 12903     0FFC  01E0               	clrf	_eusart2RxCount	;volatile
 12904     0FFD                     l13520:
 12905                           
 12906                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 12907     0FFD  014E               	movlb	14	; select bank14
 12908     0FFE  1799               	bsf	25,7	;volatile
 12909     0FFF                     l1048:
 12910     0FFF  0008               	return
 12911     1000                     __end_of_EUSART2_Initialize:
 12912                           
 12913                           	psect	text10
 12914     16F9                     __ptext10:	
 12915 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 12916 ;; Defined at:
 12917 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12920 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;		None
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  1    wreg      void 
 12925 ;; Registers used:
 12926 ;;		wreg
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12936 ;;Total ram usage:        2 bytes
 12937 ;; Hardware stack levels used: 1
 12938 ;; Hardware stack levels required when called: 4
 12939 ;; This function calls:
 12940 ;;		Nothing
 12941 ;; This function is called by:
 12942 ;;		_EUSART2_Initialize
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946     16F9                     _EUSART2_SetTxInterruptHandler:	
 12947                           ;psect for function _EUSART2_SetTxInterruptHandler
 12948                           
 12949     16F9                     l13336:	
 12950                           ;incstack = 0
 12951                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 12952                           
 12953                           
 12954                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12955     16F9  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 12956     16FA  0142               	movlb	2	; select bank2
 12957     16FB  00D7               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+256)
 12958     16FC  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 12959     16FD  00D6               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+256)
 12960     16FE                     l1114:
 12961     16FE  0008               	return
 12962     16FF                     __end_of_EUSART2_SetTxInterruptHandler:
 12963                           
 12964                           	psect	text11
 12965     16F3                     __ptext11:	
 12966 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 12967 ;; Defined at:
 12968 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12971 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;		None
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  1    wreg      void 
 12976 ;; Registers used:
 12977 ;;		wreg
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12987 ;;Total ram usage:        2 bytes
 12988 ;; Hardware stack levels used: 1
 12989 ;; Hardware stack levels required when called: 4
 12990 ;; This function calls:
 12991 ;;		Nothing
 12992 ;; This function is called by:
 12993 ;;		_EUSART2_Initialize
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997     16F3                     _EUSART2_SetRxInterruptHandler:	
 12998                           ;psect for function _EUSART2_SetRxInterruptHandler
 12999                           
 13000     16F3                     l13334:	
 13001                           ;incstack = 0
 13002                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 13003                           
 13004                           
 13005                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13006     16F3  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 13007     16F4  0142               	movlb	2	; select bank2
 13008     16F5  00D5               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256)
 13009     16F6  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 13010     16F7  00D4               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+256)
 13011     16F8                     l1117:
 13012     16F8  0008               	return
 13013     16F9                     __end_of_EUSART2_SetRxInterruptHandler:
 13014                           
 13015                           	psect	text12
 13016     16ED                     __ptext12:	
 13017 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 13018 ;; Defined at:
 13019 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13022 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;		None
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13038 ;;Total ram usage:        2 bytes
 13039 ;; Hardware stack levels used: 1
 13040 ;; Hardware stack levels required when called: 4
 13041 ;; This function calls:
 13042 ;;		Nothing
 13043 ;; This function is called by:
 13044 ;;		_EUSART2_Initialize
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048     16ED                     _EUSART2_SetOverrunErrorHandler:	
 13049                           ;psect for function _EUSART2_SetOverrunErrorHandler
 13050                           
 13051     16ED                     l13340:	
 13052                           ;incstack = 0
 13053                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 13054                           
 13055                           
 13056                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 13057     16ED  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 13058     16EE  0142               	movlb	2	; select bank2
 13059     16EF  00D1               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 13060     16F0  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 13061     16F1  00D0               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 13062     16F2                     l1108:
 13063     16F2  0008               	return
 13064     16F3                     __end_of_EUSART2_SetOverrunErrorHandler:
 13065                           
 13066                           	psect	text13
 13067     16E7                     __ptext13:	
 13068 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 13069 ;; Defined at:
 13070 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13073 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;		None
 13076 ;; Return value:  Size  Location     Type
 13077 ;;                  1    wreg      void 
 13078 ;; Registers used:
 13079 ;;		wreg
 13080 ;; Tracked objects:
 13081 ;;		On entry : 0/0
 13082 ;;		On exit  : 0/0
 13083 ;;		Unchanged: 0/0
 13084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13089 ;;Total ram usage:        2 bytes
 13090 ;; Hardware stack levels used: 1
 13091 ;; Hardware stack levels required when called: 4
 13092 ;; This function calls:
 13093 ;;		Nothing
 13094 ;; This function is called by:
 13095 ;;		_EUSART2_Initialize
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099     16E7                     _EUSART2_SetFramingErrorHandler:	
 13100                           ;psect for function _EUSART2_SetFramingErrorHandler
 13101                           
 13102     16E7                     l13338:	
 13103                           ;incstack = 0
 13104                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 13105                           
 13106                           
 13107                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 13108     16E7  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 13109     16E8  0142               	movlb	2	; select bank2
 13110     16E9  00D3               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 13111     16EA  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 13112     16EB  00D2               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 13113     16EC                     l1105:
 13114     16EC  0008               	return
 13115     16ED                     __end_of_EUSART2_SetFramingErrorHandler:
 13116                           
 13117                           	psect	text14
 13118     16E1                     __ptext14:	
 13119 ;; *************** function _EUSART2_SetErrorHandler *****************
 13120 ;; Defined at:
 13121 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13124 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;		None
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1    wreg      void 
 13129 ;; Registers used:
 13130 ;;		wreg
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;Total ram usage:        2 bytes
 13141 ;; Hardware stack levels used: 1
 13142 ;; Hardware stack levels required when called: 4
 13143 ;; This function calls:
 13144 ;;		Nothing
 13145 ;; This function is called by:
 13146 ;;		_EUSART2_Initialize
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150     16E1                     _EUSART2_SetErrorHandler:	
 13151                           ;psect for function _EUSART2_SetErrorHandler
 13152                           
 13153     16E1                     l13342:	
 13154                           ;incstack = 0
 13155                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 13156                           
 13157                           
 13158                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 13159     16E1  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 13160     16E2  0142               	movlb	2	; select bank2
 13161     16E3  00CF               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 13162     16E4  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 13163     16E5  00CE               	movwf	_EUSART2_ErrorHandler^(0+256)
 13164     16E6                     l1111:
 13165     16E6  0008               	return
 13166     16E7                     __end_of_EUSART2_SetErrorHandler:
 13167                           
 13168                           	psect	text15
 13169     0F84                     __ptext15:	
 13170 ;; *************** function _EUSART1_Initialize *****************
 13171 ;; Defined at:
 13172 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;		None
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, status,2, status,0, pclath, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;Total ram usage:        0 bytes
 13191 ;; Hardware stack levels used: 1
 13192 ;; Hardware stack levels required when called: 5
 13193 ;; This function calls:
 13194 ;;		_EUSART1_SetErrorHandler
 13195 ;;		_EUSART1_SetFramingErrorHandler
 13196 ;;		_EUSART1_SetOverrunErrorHandler
 13197 ;;		_EUSART1_SetRxInterruptHandler
 13198 ;;		_EUSART1_SetTxInterruptHandler
 13199 ;; This function is called by:
 13200 ;;		_SYSTEM_Initialize
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204     0F84                     _EUSART1_Initialize:	
 13205                           ;psect for function _EUSART1_Initialize
 13206                           
 13207     0F84                     l13526:	
 13208                           ;incstack = 0
 13209                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13210                           
 13211                           
 13212                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 13213     0F84  014E               	movlb	14	; select bank14
 13214     0F85  1299               	bcf	25,5	;volatile
 13215     0F86                     l13528:
 13216                           
 13217                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13218     0F86  3047               	movlw	low _EUSART1_Receive_ISR
 13219     0F87  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13220     0F88  300F               	movlw	high _EUSART1_Receive_ISR
 13221     0F89  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13222     0F8A  3196  26D5  318F   	fcall	_EUSART1_SetRxInterruptHandler
 13223     0F8D                     l13530:
 13224                           
 13225                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 13226     0F8D  014E               	movlb	14	; select bank14
 13227     0F8E  1219               	bcf	25,4	;volatile
 13228                           
 13229                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 13230     0F8F  30FC               	movlw	low _EUSART1_Transmit_ISR
 13231     0F90  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 13232     0F91  300A               	movlw	high _EUSART1_Transmit_ISR
 13233     0F92  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 13234     0F93  3196  26DB  318F   	fcall	_EUSART1_SetTxInterruptHandler
 13235     0F96                     l13532:
 13236                           
 13237                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 13238     0F96  3008               	movlw	8
 13239     0F97  0142               	movlb	2	; select bank2
 13240     0F98  009F               	movwf	31	;volatile
 13241     0F99                     l13534:
 13242                           
 13243                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 13244     0F99  3090               	movlw	144
 13245     0F9A  009D               	movwf	29	;volatile
 13246     0F9B                     l13536:
 13247                           
 13248                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 13249     0F9B  3024               	movlw	36
 13250     0F9C  009E               	movwf	30	;volatile
 13251     0F9D                     l13538:
 13252                           
 13253                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 13254     0F9D  3040               	movlw	64
 13255     0F9E  009B               	movwf	27	;volatile
 13256     0F9F                     l13540:
 13257                           
 13258                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 13259     0F9F  3003               	movlw	3
 13260     0FA0  009C               	movwf	28	;volatile
 13261     0FA1                     l13542:
 13262                           
 13263                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13264     0FA1  3024               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13265     0FA2  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13266     0FA3  3016               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13267     0FA4  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13268     0FA5  3196  26C9  318F   	fcall	_EUSART1_SetFramingErrorHandler
 13269     0FA8                     l13544:
 13270                           
 13271                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13272     0FA8  304D               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13273     0FA9  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13274     0FAA  3016               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13275     0FAB  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13276     0FAC  3196  26CF  318F   	fcall	_EUSART1_SetOverrunErrorHandler
 13277     0FAF                     l13546:
 13278                           
 13279                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13280     0FAF  3049               	movlw	low _EUSART1_DefaultErrorHandler
 13281     0FB0  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13282     0FB1  3016               	movlw	high _EUSART1_DefaultErrorHandler
 13283     0FB2  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13284     0FB3  3196  26C3  318F   	fcall	_EUSART1_SetErrorHandler
 13285     0FB6                     l13548:
 13286                           
 13287                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 13288     0FB6  0140               	movlb	0	; select bank0
 13289     0FB7  01D8               	clrf	_eusart1RxLastError	;volatile
 13290     0FB8                     l13550:
 13291                           
 13292                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 13293     0FB8  01DE               	clrf	_eusart1TxHead	;volatile
 13294     0FB9                     l13552:
 13295                           
 13296                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 13297     0FB9  01DD               	clrf	_eusart1TxTail	;volatile
 13298     0FBA                     l13554:
 13299                           
 13300                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 13301     0FBA  3008               	movlw	8
 13302     0FBB  00DC               	movwf	_eusart1TxBufferRemaining	;volatile
 13303                           
 13304                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 13305     0FBC  01DB               	clrf	_eusart1RxHead	;volatile
 13306                           
 13307                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 13308     0FBD  01DA               	clrf	_eusart1RxTail	;volatile
 13309                           
 13310                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 13311     0FBE  01D9               	clrf	_eusart1RxCount	;volatile
 13312     0FBF                     l13556:
 13313                           
 13314                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 13315     0FBF  014E               	movlb	14	; select bank14
 13316     0FC0  1699               	bsf	25,5	;volatile
 13317     0FC1                     l1192:
 13318     0FC1  0008               	return
 13319     0FC2                     __end_of_EUSART1_Initialize:
 13320                           
 13321                           	psect	text16
 13322     16DB                     __ptext16:	
 13323 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 13324 ;; Defined at:
 13325 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13328 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 13329 ;; Auto vars:     Size  Location     Type
 13330 ;;		None
 13331 ;; Return value:  Size  Location     Type
 13332 ;;                  1    wreg      void 
 13333 ;; Registers used:
 13334 ;;		wreg
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13344 ;;Total ram usage:        2 bytes
 13345 ;; Hardware stack levels used: 1
 13346 ;; Hardware stack levels required when called: 4
 13347 ;; This function calls:
 13348 ;;		Nothing
 13349 ;; This function is called by:
 13350 ;;		_EUSART1_Initialize
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354     16DB                     _EUSART1_SetTxInterruptHandler:	
 13355                           ;psect for function _EUSART1_SetTxInterruptHandler
 13356                           
 13357     16DB                     l13356:	
 13358                           ;incstack = 0
 13359                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 13360                           
 13361                           
 13362                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13363     16DB  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 13364     16DC  0142               	movlb	2	; select bank2
 13365     16DD  00CD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 13366     16DE  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 13367     16DF  00CC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 13368     16E0                     l1264:
 13369     16E0  0008               	return
 13370     16E1                     __end_of_EUSART1_SetTxInterruptHandler:
 13371                           
 13372                           	psect	text17
 13373     16D5                     __ptext17:	
 13374 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13375 ;; Defined at:
 13376 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13379 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;Total ram usage:        2 bytes
 13396 ;; Hardware stack levels used: 1
 13397 ;; Hardware stack levels required when called: 4
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_EUSART1_Initialize
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405     16D5                     _EUSART1_SetRxInterruptHandler:	
 13406                           ;psect for function _EUSART1_SetRxInterruptHandler
 13407                           
 13408     16D5                     l13354:	
 13409                           ;incstack = 0
 13410                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13411                           
 13412                           
 13413                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13414     16D5  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13415     16D6  0142               	movlb	2	; select bank2
 13416     16D7  00CB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13417     16D8  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13418     16D9  00CA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13419     16DA                     l1267:
 13420     16DA  0008               	return
 13421     16DB                     __end_of_EUSART1_SetRxInterruptHandler:
 13422                           
 13423                           	psect	text18
 13424     16CF                     __ptext18:	
 13425 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13426 ;; Defined at:
 13427 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13430 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;		None
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  1    wreg      void 
 13435 ;; Registers used:
 13436 ;;		wreg
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;Total ram usage:        2 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 4
 13449 ;; This function calls:
 13450 ;;		Nothing
 13451 ;; This function is called by:
 13452 ;;		_EUSART1_Initialize
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456     16CF                     _EUSART1_SetOverrunErrorHandler:	
 13457                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13458                           
 13459     16CF                     l13360:	
 13460                           ;incstack = 0
 13461                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13462                           
 13463                           
 13464                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 13465     16CF  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13466     16D0  0142               	movlb	2	; select bank2
 13467     16D1  00C7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 13468     16D2  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13469     16D3  00C6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 13470     16D4                     l1258:
 13471     16D4  0008               	return
 13472     16D5                     __end_of_EUSART1_SetOverrunErrorHandler:
 13473                           
 13474                           	psect	text19
 13475     16C9                     __ptext19:	
 13476 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13477 ;; Defined at:
 13478 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13481 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;		None
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  1    wreg      void 
 13486 ;; Registers used:
 13487 ;;		wreg
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;Total ram usage:        2 bytes
 13498 ;; Hardware stack levels used: 1
 13499 ;; Hardware stack levels required when called: 4
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_EUSART1_Initialize
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507     16C9                     _EUSART1_SetFramingErrorHandler:	
 13508                           ;psect for function _EUSART1_SetFramingErrorHandler
 13509                           
 13510     16C9                     l13358:	
 13511                           ;incstack = 0
 13512                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13513                           
 13514                           
 13515                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 13516     16C9  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13517     16CA  0142               	movlb	2	; select bank2
 13518     16CB  00C9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 13519     16CC  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13520     16CD  00C8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 13521     16CE                     l1255:
 13522     16CE  0008               	return
 13523     16CF                     __end_of_EUSART1_SetFramingErrorHandler:
 13524                           
 13525                           	psect	text20
 13526     16C3                     __ptext20:	
 13527 ;; *************** function _EUSART1_SetErrorHandler *****************
 13528 ;; Defined at:
 13529 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13532 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13548 ;;Total ram usage:        2 bytes
 13549 ;; Hardware stack levels used: 1
 13550 ;; Hardware stack levels required when called: 4
 13551 ;; This function calls:
 13552 ;;		Nothing
 13553 ;; This function is called by:
 13554 ;;		_EUSART1_Initialize
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558     16C3                     _EUSART1_SetErrorHandler:	
 13559                           ;psect for function _EUSART1_SetErrorHandler
 13560                           
 13561     16C3                     l13362:	
 13562                           ;incstack = 0
 13563                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13564                           
 13565                           
 13566                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 13567     16C3  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13568     16C4  0142               	movlb	2	; select bank2
 13569     16C5  00C5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 13570     16C6  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13571     16C7  00C4               	movwf	_EUSART1_ErrorHandler^(0+256)
 13572     16C8                     l1261:
 13573     16C8  0008               	return
 13574     16C9                     __end_of_EUSART1_SetErrorHandler:
 13575                           
 13576                           	psect	text21
 13577     09E4                     __ptext21:	
 13578 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 13579 ;; Defined at:
 13580 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 13583 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), 
 13584 ;;  len             1    3[COMMON] unsigned char 
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      _Bool 
 13589 ;; Registers used:
 13590 ;;		wreg, status,2, status,0
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13596 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13600 ;;Total ram usage:        3 bytes
 13601 ;; Hardware stack levels used: 1
 13602 ;; Hardware stack levels required when called: 4
 13603 ;; This function calls:
 13604 ;;		Nothing
 13605 ;; This function is called by:
 13606 ;;		_main
 13607 ;;		_RN487X_Example_Initialized
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611     09E4                     _RN487X_SetAsyncMessageHandler:	
 13612                           ;psect for function _RN487X_SetAsyncMessageHandler
 13613                           
 13614     09E4                     l13804:	
 13615                           ;incstack = 0
 13616                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 13617                           
 13618                           
 13619                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 13620     09E4  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 13621     09E5  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 13622     09E6  1903               	btfsc	3,2
 13623     09E7  29E9               	goto	u10721
 13624     09E8  29EA               	goto	u10720
 13625     09E9                     u10721:
 13626     09E9  29FA               	goto	l13818
 13627     09EA                     u10720:
 13628     09EA                     l13806:
 13629     09EA  3002               	movlw	2
 13630     09EB  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 13631     09EC  1C03               	skipc
 13632     09ED  29EF               	goto	u10731
 13633     09EE  29F0               	goto	u10730
 13634     09EF                     u10731:
 13635     09EF  29FA               	goto	l13818
 13636     09F0                     u10730:
 13637     09F0                     l13808:
 13638                           
 13639                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 13640     09F0  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 13641     09F1  0140               	movlb	0	; select bank0
 13642     09F2  00CD               	movwf	_asyncBuffer+1
 13643     09F3  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 13644     09F4  00CC               	movwf	_asyncBuffer
 13645     09F5                     l13810:
 13646                           
 13647                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 13648     09F5  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 13649     09F6  3EFF               	addlw	255
 13650     09F7  00E8               	movwf	_asyncBufferSize
 13651     09F8                     l13812:
 13652                           
 13653                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 13654     09F8  3001               	movlw	1
 13655     09F9  29FB               	goto	l949
 13656     09FA                     l13818:
 13657                           
 13658                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 13659     09FA  3000               	movlw	0
 13660     09FB                     l949:
 13661     09FB  0008               	return
 13662     09FC                     __end_of_RN487X_SetAsyncMessageHandler:
 13663                           
 13664                           	psect	text22
 13665     0800                     __ptext22:	
 13666 ;; *************** function _RN487X_Read *****************
 13667 ;; Defined at:
 13668 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;		None
 13671 ;; Auto vars:     Size  Location     Type
 13672 ;;		None
 13673 ;; Return value:  Size  Location     Type
 13674 ;;                  1    wreg      unsigned char 
 13675 ;; Registers used:
 13676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13677 ;; Tracked objects:
 13678 ;;		On entry : 0/0
 13679 ;;		On exit  : 0/0
 13680 ;;		Unchanged: 0/0
 13681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13686 ;;Total ram usage:        0 bytes
 13687 ;; Hardware stack levels used: 1
 13688 ;; Hardware stack levels required when called: 9
 13689 ;; This function calls:
 13690 ;;		_RN487X_DataReady
 13691 ;; This function is called by:
 13692 ;;		_main
 13693 ;;		_RN487X_Example_TransparentUart
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697     0800                     _RN487X_Read:	
 13698                           ;psect for function _RN487X_Read
 13699                           
 13700     0800                     l13826:	
 13701                           ;incstack = 0
 13702                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13703                           
 13704     0800                     l13828:	
 13705                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 13706                           
 13707     0800  318A  227F  3188   	fcall	_RN487X_DataReady
 13708     0803  3A00               	xorlw	0
 13709     0804  1903               	skipnz
 13710     0805  2807               	goto	u10741
 13711     0806  2808               	goto	u10740
 13712     0807                     u10741:
 13713     0807  2800               	goto	l13828
 13714     0808                     u10740:
 13715     0808                     l13830:
 13716                           
 13717                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 13718     0808  0140               	movlb	0	; select bank0
 13719     0809  01E6               	clrf	_dataReady
 13720     080A                     l13832:
 13721                           
 13722                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 13723     080A  0867               	movf	_peek,w
 13724     080B                     l961:
 13725     080B  0008               	return
 13726     080C                     __end_of_RN487X_Read:
 13727                           
 13728                           	psect	text23
 13729     0A7F                     __ptext23:	
 13730 ;; *************** function _RN487X_DataReady *****************
 13731 ;; Defined at:
 13732 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      _Bool 
 13739 ;; Registers used:
 13740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13741 ;; Tracked objects:
 13742 ;;		On entry : 0/0
 13743 ;;		On exit  : 0/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13750 ;;Total ram usage:        0 bytes
 13751 ;; Hardware stack levels used: 1
 13752 ;; Hardware stack levels required when called: 8
 13753 ;; This function calls:
 13754 ;;		_RN487X_FilterData
 13755 ;;		_RN487X_is_rx_ready
 13756 ;; This function is called by:
 13757 ;;		_RN487X_Read
 13758 ;;		_main
 13759 ;;		_RN487X_Example_TransparentUart
 13760 ;; This function uses a non-reentrant model
 13761 ;;
 13762                           
 13763     0A7F                     _RN487X_DataReady:	
 13764                           ;psect for function _RN487X_DataReady
 13765                           
 13766     0A7F                     l13468:	
 13767                           ;incstack = 0
 13768                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13769                           
 13770                           
 13771                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 13772     0A7F  0140               	movlb	0	; select bank0
 13773     0A80  0866               	movf	_dataReady,w
 13774     0A81  1903               	btfsc	3,2
 13775     0A82  2A84               	goto	u10541
 13776     0A83  2A85               	goto	u10540
 13777     0A84                     u10541:
 13778     0A84  2A87               	goto	l13474
 13779     0A85                     u10540:
 13780     0A85                     l13470:
 13781                           
 13782                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 13783     0A85  3001               	movlw	1
 13784     0A86  2A9A               	goto	l954
 13785     0A87                     l13474:
 13786                           
 13787                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 13788     0A87  306E               	movlw	low ((_RN487X+6)| (0+32768))
 13789     0A88  0084               	movwf	4
 13790     0A89  3090               	movlw	high ((_RN487X+6)| (0+32768))
 13791     0A8A  0085               	movwf	5
 13792     0A8B  3F01               	moviw [1]fsr0
 13793     0A8C  008A               	movwf	10
 13794     0A8D  3F00               	moviw [0]fsr0
 13795     0A8E  000A               	callw
 13796     0A8F  318A               	pagesel	$
 13797     0A90  3A00               	xorlw	0
 13798     0A91  1903               	skipnz
 13799     0A92  2A94               	goto	u10551
 13800     0A93  2A95               	goto	u10550
 13801     0A94                     u10551:
 13802     0A94  2A99               	goto	l13480
 13803     0A95                     u10550:
 13804     0A95                     l13476:
 13805                           
 13806                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 13807     0A95  3184  2407  318A   	fcall	_RN487X_FilterData
 13808     0A98  2A9A               	goto	l954
 13809     0A99                     l13480:
 13810                           
 13811                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 13812     0A99  3000               	movlw	0
 13813     0A9A                     l954:
 13814     0A9A  0008               	return
 13815     0A9B                     __end_of_RN487X_DataReady:
 13816                           
 13817                           	psect	text24
 13818     0407                     __ptext24:	
 13819 ;; *************** function _RN487X_FilterData *****************
 13820 ;; Defined at:
 13821 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;		None
 13824 ;; Auto vars:     Size  Location     Type
 13825 ;;  readChar        1    0[BANK1 ] unsigned char 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  1    wreg      _Bool 
 13828 ;; Registers used:
 13829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13836 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13838 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13839 ;;Total ram usage:        5 bytes
 13840 ;; Hardware stack levels used: 1
 13841 ;; Hardware stack levels required when called: 7
 13842 ;; This function calls:
 13843 ;;		_RN487X_MessageHandler
 13844 ;;		_RN487X_Read@rn487x_interface$F1339
 13845 ;; This function is called by:
 13846 ;;		_RN487X_DataReady
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           
 13850     0407                     _RN487X_FilterData:	
 13851                           ;psect for function _RN487X_FilterData
 13852                           
 13853     0407                     l13306:	
 13854                           ;incstack = 0
 13855                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13856                           
 13857                           
 13858                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 13859     0407  306A               	movlw	low ((_RN487X+2)| (0+32768))
 13860     0408  0084               	movwf	4
 13861     0409  3090               	movlw	high ((_RN487X+2)| (0+32768))
 13862     040A  0085               	movwf	5
 13863     040B  3F01               	moviw [1]fsr0
 13864     040C  008A               	movwf	10
 13865     040D  3F00               	moviw [0]fsr0
 13866     040E  000A               	callw
 13867     040F  3184               	pagesel	$
 13868     0410  0141               	movlb	1	; select bank1
 13869     0411  00EF               	movwf	RN487X_FilterData@readChar^(0+128)
 13870     0412                     l13308:
 13871                           
 13872                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 13873     0412  0140               	movlb	0	; select bank0
 13874     0413  0365               	decf	RN487X_FilterData@asyncBuffering,w
 13875     0414  1D03               	btfss	3,2
 13876     0415  2C17               	goto	u10341
 13877     0416  2C18               	goto	u10340
 13878     0417                     u10341:
 13879     0417  2C55               	goto	l13324
 13880     0418                     u10340:
 13881     0418                     l13310:
 13882                           
 13883                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 13884     0418  3025               	movlw	37
 13885     0419  0141               	movlb	1	; select bank1
 13886     041A  066F               	xorwf	RN487X_FilterData@readChar^(0+128),w
 13887     041B  1D03               	btfss	3,2
 13888     041C  2C1E               	goto	u10351
 13889     041D  2C1F               	goto	u10350
 13890     041E                     u10351:
 13891     041E  2C34               	goto	l13318
 13892     041F                     u10350:
 13893     041F                     l13312:
 13894                           
 13895                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 13896     041F  0140               	movlb	0	; select bank0
 13897     0420  01E5               	clrf	RN487X_FilterData@asyncBuffering
 13898     0421                     l13314:
 13899                           
 13900                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 13901     0421  084A               	movf	_pHead,w
 13902     0422  0086               	movwf	6
 13903     0423  084B               	movf	_pHead+1,w
 13904     0424  0087               	movwf	7
 13905     0425  0181               	clrf	1
 13906     0426                     l13316:
 13907                           
 13908                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 13909     0426  084D               	movf	_asyncBuffer+1,w
 13910     0427  00C2               	movwf	RN487X_MessageHandler@message+1
 13911     0428  084C               	movf	_asyncBuffer,w
 13912     0429  00C1               	movwf	RN487X_MessageHandler@message
 13913     042A  3078               	movlw	low ((_RN487X+16)| (0+32768))
 13914     042B  0084               	movwf	4
 13915     042C  3090               	movlw	high ((_RN487X+16)| (0+32768))
 13916     042D  0085               	movwf	5
 13917     042E  3F01               	moviw [1]fsr0
 13918     042F  008A               	movwf	10
 13919     0430  3F00               	moviw [0]fsr0
 13920     0431  000A               	callw
 13921     0432  3184               	pagesel	$
 13922                           
 13923                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 13924     0433  2C6B               	goto	l970
 13925     0434                     l13318:
 13926     0434  0140               	movlb	0	; select bank0
 13927     0435  0868               	movf	_asyncBufferSize,w
 13928     0436  00C4               	movwf	??_RN487X_FilterData
 13929     0437  01C5               	clrf	??_RN487X_FilterData+1
 13930     0438  0844               	movf	??_RN487X_FilterData,w
 13931     0439  074C               	addwf	_asyncBuffer,w
 13932     043A  00C6               	movwf	??_RN487X_FilterData+2
 13933     043B  0845               	movf	??_RN487X_FilterData+1,w
 13934     043C  3D4D               	addwfc	_asyncBuffer+1,w
 13935     043D  00C7               	movwf	??_RN487X_FilterData+3
 13936     043E  0847               	movf	??_RN487X_FilterData+3,w
 13937     043F  024B               	subwf	_pHead+1,w
 13938     0440  1D03               	skipz
 13939     0441  2C44               	goto	u10365
 13940     0442  0846               	movf	??_RN487X_FilterData+2,w
 13941     0443  024A               	subwf	_pHead,w
 13942     0444                     u10365:
 13943     0444  1803               	skipnc
 13944     0445  2C47               	goto	u10361
 13945     0446  2C48               	goto	u10360
 13946     0447                     u10361:
 13947     0447  2C6B               	goto	l970
 13948     0448                     u10360:
 13949     0448                     l13320:
 13950                           
 13951                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 13952     0448  084A               	movf	_pHead,w
 13953     0449  0086               	movwf	6
 13954     044A  084B               	movf	_pHead+1,w
 13955     044B  0087               	movwf	7
 13956     044C  0141               	movlb	1	; select bank1
 13957     044D  086F               	movf	RN487X_FilterData@readChar^(0+128),w
 13958     044E  0081               	movwf	1
 13959     044F                     l13322:
 13960     044F  3001               	movlw	1
 13961     0450  0140               	movlb	0	; select bank0
 13962     0451  07CA               	addwf	_pHead,f
 13963     0452  3000               	movlw	0
 13964     0453  3DCB               	addwfc	_pHead+1,f
 13965     0454  2C6B               	goto	l970
 13966     0455                     l13324:
 13967                           
 13968                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 13969     0455  3025               	movlw	37
 13970     0456  0141               	movlb	1	; select bank1
 13971     0457  066F               	xorwf	RN487X_FilterData@readChar^(0+128),w
 13972     0458  1D03               	btfss	3,2
 13973     0459  2C5B               	goto	u10371
 13974     045A  2C5C               	goto	u10370
 13975     045B                     u10371:
 13976     045B  2C64               	goto	l971
 13977     045C                     u10370:
 13978     045C                     l13326:
 13979                           
 13980                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 13981     045C  0140               	movlb	0	; select bank0
 13982     045D  01E5               	clrf	RN487X_FilterData@asyncBuffering
 13983     045E  0AE5               	incf	RN487X_FilterData@asyncBuffering,f
 13984     045F                     l13328:
 13985                           
 13986                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 13987     045F  084D               	movf	_asyncBuffer+1,w
 13988     0460  00CB               	movwf	_pHead+1
 13989     0461  084C               	movf	_asyncBuffer,w
 13990     0462  00CA               	movwf	_pHead
 13991                           
 13992                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 13993     0463  2C6B               	goto	l970
 13994     0464                     l971:	
 13995                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 13996                           
 13997                           
 13998                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 13999     0464  0140               	movlb	0	; select bank0
 14000     0465  01E6               	clrf	_dataReady
 14001     0466  0AE6               	incf	_dataReady,f
 14002     0467                     l13330:
 14003                           
 14004                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 14005     0467  0141               	movlb	1	; select bank1
 14006     0468  086F               	movf	RN487X_FilterData@readChar^(0+128),w
 14007     0469  0140               	movlb	0	; select bank0
 14008     046A  00E7               	movwf	_peek
 14009     046B                     l970:	
 14010                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 14011                           
 14012                           
 14013                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 14014     046B  0140               	movlb	0	; select bank0
 14015     046C  0866               	movf	_dataReady,w
 14016     046D                     l973:
 14017     046D  0008               	return
 14018     046E                     __end_of_RN487X_FilterData:
 14019                           
 14020                           	psect	text25
 14021     06F0                     __ptext25:	
 14022 ;; *************** function _RN487X_MessageHandler *****************
 14023 ;; Defined at:
 14024 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14025 ;; Parameters:    Size  Location     Type
 14026 ;;  message         2   33[BANK0 ] PTR unsigned char 
 14027 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  messageType     1   35[BANK0 ] enum E12962
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1    wreg      void 
 14032 ;; Registers used:
 14033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14042 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14043 ;;Total ram usage:        3 bytes
 14044 ;; Hardware stack levels used: 1
 14045 ;; Hardware stack levels required when called: 6
 14046 ;; This function calls:
 14047 ;;		_rn487x_PrintIndicatorCharacters
 14048 ;;		_rn487x_PrintMessage
 14049 ;;		_rn487x_PrintMessageEnd
 14050 ;;		_rn487x_PrintMessageStart
 14051 ;;		_strstr
 14052 ;; This function is called by:
 14053 ;;		_RN487X_FilterData
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057     06F0                     _RN487X_MessageHandler:	
 14058                           ;psect for function _RN487X_MessageHandler
 14059                           
 14060     06F0                     l13222:	
 14061                           ;incstack = 0
 14062                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14063                           
 14064                           
 14065                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 14066     06F0  318C  24F3  3186   	fcall	_rn487x_PrintMessageStart
 14067                           
 14068                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 14069     06F3  0140               	movlb	0	; select bank0
 14070     06F4  0842               	movf	RN487X_MessageHandler@message+1,w
 14071     06F5  00F9               	movwf	strstr@h+1
 14072     06F6  0841               	movf	RN487X_MessageHandler@message,w
 14073     06F7  00F8               	movwf	strstr@h
 14074     06F8  3017               	movlw	low (STR_2| (0+32768))
 14075     06F9  00FA               	movwf	strstr@n
 14076     06FA  3098               	movlw	high (STR_2| (0+32768))
 14077     06FB  00FB               	movwf	strstr@n+1
 14078     06FC  3184  24CC  3186   	fcall	_strstr
 14079     06FF  0878               	movf	?_strstr,w
 14080     0700  0479               	iorwf	?_strstr+1,w
 14081     0701  1903               	btfsc	3,2
 14082     0702  2F04               	goto	u10221
 14083     0703  2F05               	goto	u10220
 14084     0704                     u10221:
 14085     0704  2F09               	goto	l13226
 14086     0705                     u10220:
 14087     0705                     l13224:
 14088                           
 14089                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 14090     0705  0140               	movlb	0	; select bank0
 14091     0706  01C3               	clrf	RN487X_MessageHandler@messageType
 14092                           
 14093                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 14094     0707  01E9               	clrf	_connected
 14095                           
 14096                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 14097     0708  2F24               	goto	l13232
 14098     0709                     l13226:
 14099     0709  0140               	movlb	0	; select bank0
 14100     070A  0842               	movf	RN487X_MessageHandler@message+1,w
 14101     070B  00F9               	movwf	strstr@h+1
 14102     070C  0841               	movf	RN487X_MessageHandler@message,w
 14103     070D  00F8               	movwf	strstr@h
 14104     070E  3000               	movlw	low (STR_4| (0+32768))
 14105     070F  00FA               	movwf	strstr@n
 14106     0710  3098               	movlw	high (STR_4| (0+32768))
 14107     0711  00FB               	movwf	strstr@n+1
 14108     0712  3184  24CC  3186   	fcall	_strstr
 14109     0715  0878               	movf	?_strstr,w
 14110     0716  0479               	iorwf	?_strstr+1,w
 14111     0717  1903               	btfsc	3,2
 14112     0718  2F1A               	goto	u10231
 14113     0719  2F1B               	goto	u10230
 14114     071A                     u10231:
 14115     071A  2F21               	goto	l13230
 14116     071B                     u10230:
 14117     071B                     l13228:
 14118                           
 14119                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 14120     071B  0140               	movlb	0	; select bank0
 14121     071C  01C3               	clrf	RN487X_MessageHandler@messageType
 14122     071D  0AC3               	incf	RN487X_MessageHandler@messageType,f
 14123                           
 14124                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 14125     071E  01E9               	clrf	_connected
 14126     071F  0AE9               	incf	_connected,f
 14127                           
 14128                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 14129     0720  2F24               	goto	l13232
 14130     0721                     l13230:
 14131                           
 14132                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 14133     0721  3002               	movlw	2
 14134     0722  0140               	movlb	0	; select bank0
 14135     0723  00C3               	movwf	RN487X_MessageHandler@messageType
 14136     0724                     l13232:
 14137                           
 14138                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 14139     0724  0842               	movf	RN487X_MessageHandler@message+1,w
 14140     0725  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 14141     0726  0841               	movf	RN487X_MessageHandler@message,w
 14142     0727  00F7               	movwf	rn487x_PrintMessage@passedMessage
 14143     0728  318E  266B  3186   	fcall	_rn487x_PrintMessage
 14144     072B                     l13234:
 14145                           
 14146                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 14147     072B  3185  25C6  3186   	fcall	_rn487x_PrintMessageEnd
 14148     072E                     l13236:
 14149                           
 14150                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 14151     072E  0140               	movlb	0	; select bank0
 14152     072F  0843               	movf	RN487X_MessageHandler@messageType,w
 14153     0730  318B  231E  3186   	fcall	_rn487x_PrintIndicatorCharacters
 14154     0733                     l852:
 14155     0733  0008               	return
 14156     0734                     __end_of_RN487X_MessageHandler:
 14157                           
 14158                           	psect	text26
 14159     04CC                     __ptext26:	
 14160 ;; *************** function _strstr *****************
 14161 ;; Defined at:
 14162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;  h               2    8[COMMON] PTR const unsigned char 
 14165 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14166 ;;  n               2   10[COMMON] PTR const unsigned char 
 14167 ;;		 -> STR_5(12), STR_3(11), 
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;  nl              2    2[BANK0 ] unsigned int 
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  2    8[COMMON] PTR unsigned char 
 14172 ;; Registers used:
 14173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14182 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14183 ;;Total ram usage:        8 bytes
 14184 ;; Hardware stack levels used: 1
 14185 ;; Hardware stack levels required when called: 5
 14186 ;; This function calls:
 14187 ;;		_strchr
 14188 ;;		_strlen
 14189 ;;		_strncmp
 14190 ;; This function is called by:
 14191 ;;		_RN487X_MessageHandler
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195     04CC                     _strstr:	
 14196                           ;psect for function _strstr
 14197                           
 14198     04CC                     l13160:	
 14199                           ;incstack = 0
 14200                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14201                           
 14202     04CC  087A               	movf	strstr@n,w
 14203     04CD  047B               	iorwf	strstr@n+1,w
 14204     04CE  1903               	btfsc	3,2
 14205     04CF  2CD1               	goto	u10101
 14206     04D0  2CD2               	goto	u10100
 14207     04D1                     u10101:
 14208     04D1  2D1E               	goto	l13174
 14209     04D2                     u10100:
 14210     04D2                     l13162:
 14211     04D2  087B               	movf	strstr@n+1,w
 14212     04D3  00F2               	movwf	strlen@s+1
 14213     04D4  087A               	movf	strstr@n,w
 14214     04D5  00F1               	movwf	strlen@s
 14215     04D6  318A  2215  3184   	fcall	_strlen
 14216     04D9  0872               	movf	?_strlen+1,w
 14217     04DA  0140               	movlb	0	; select bank0
 14218     04DB  00A3               	movwf	strstr@nl+1
 14219     04DC  0871               	movf	?_strlen,w
 14220     04DD  00A2               	movwf	strstr@nl
 14221     04DE  2D0F               	goto	l13170
 14222     04DF                     l13164:
 14223     04DF  0879               	movf	strstr@h+1,w
 14224     04E0  00F2               	movwf	strncmp@l+1
 14225     04E1  0878               	movf	strstr@h,w
 14226     04E2  00F1               	movwf	strncmp@l
 14227     04E3  087B               	movf	strstr@n+1,w
 14228     04E4  00F4               	movwf	strncmp@r+1
 14229     04E5  087A               	movf	strstr@n,w
 14230     04E6  00F3               	movwf	strncmp@r
 14231     04E7  0140               	movlb	0	; select bank0
 14232     04E8  0823               	movf	strstr@nl+1,w
 14233     04E9  00F6               	movwf	strncmp@n+1
 14234     04EA  0822               	movf	strstr@nl,w
 14235     04EB  00F5               	movwf	strncmp@n
 14236     04EC  3185  2574  3184   	fcall	_strncmp
 14237     04EF  0871               	movf	?_strncmp,w
 14238     04F0  0472               	iorwf	?_strncmp+1,w
 14239     04F1  1D03               	btfss	3,2
 14240     04F2  2CF4               	goto	u10111
 14241     04F3  2CF5               	goto	u10110
 14242     04F4                     u10111:
 14243     04F4  2CF6               	goto	l13168
 14244     04F5                     u10110:
 14245     04F5                     l13166:
 14246     04F5  2D20               	goto	l3296
 14247     04F6                     l13168:
 14248     04F6  0878               	movf	strstr@h,w
 14249     04F7  3E01               	addlw	1
 14250     04F8  00F1               	movwf	strchr@s
 14251     04F9  3000               	movlw	0
 14252     04FA  3D79               	addwfc	strstr@h+1,w
 14253     04FB  00F2               	movwf	strchr@s+1
 14254     04FC  087A               	movf	strstr@n,w
 14255     04FD  0084               	movwf	4
 14256     04FE  087B               	movf	strstr@n+1,w
 14257     04FF  0085               	movwf	5
 14258     0500  0800               	movf	0,w	;code access
 14259     0501  0140               	movlb	0	; select bank0
 14260     0502  00A0               	movwf	??_strstr
 14261     0503  01A1               	clrf	??_strstr+1
 14262     0504  0820               	movf	??_strstr,w
 14263     0505  00F3               	movwf	strchr@c
 14264     0506  0821               	movf	??_strstr+1,w
 14265     0507  00F4               	movwf	strchr@c+1
 14266     0508  318A  229B  3184   	fcall	_strchr
 14267     050B  0872               	movf	?_strchr+1,w
 14268     050C  00F9               	movwf	strstr@h+1
 14269     050D  0871               	movf	?_strchr,w
 14270     050E  00F8               	movwf	strstr@h
 14271     050F                     l13170:
 14272     050F  0878               	movf	strstr@h,w
 14273     0510  0479               	iorwf	strstr@h+1,w
 14274     0511  1903               	btfsc	3,2
 14275     0512  2D14               	goto	u10121
 14276     0513  2D15               	goto	u10120
 14277     0514                     u10121:
 14278     0514  2D1E               	goto	l13174
 14279     0515                     u10120:
 14280     0515                     l13172:
 14281     0515  0878               	movf	strstr@h,w
 14282     0516  0086               	movwf	6
 14283     0517  0879               	movf	strstr@h+1,w
 14284     0518  0087               	movwf	7
 14285     0519  0801               	movf	1,w
 14286     051A  1D03               	btfss	3,2
 14287     051B  2D1D               	goto	u10131
 14288     051C  2D1E               	goto	u10130
 14289     051D                     u10131:
 14290     051D  2CDF               	goto	l13164
 14291     051E                     u10130:
 14292     051E                     l13174:
 14293     051E  01F8               	clrf	?_strstr
 14294     051F  01F9               	clrf	?_strstr+1
 14295     0520                     l3296:
 14296     0520  0008               	return
 14297     0521                     __end_of_strstr:
 14298                           
 14299                           	psect	text27
 14300     0574                     __ptext27:	
 14301 ;; *************** function _strncmp *****************
 14302 ;; Defined at:
 14303 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;  l               2    1[COMMON] PTR const unsigned char 
 14306 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14307 ;;  r               2    3[COMMON] PTR const unsigned char 
 14308 ;;		 -> STR_5(12), STR_3(11), 
 14309 ;;  n               2    5[COMMON] unsigned int 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;		None
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  2    1[COMMON] int 
 14314 ;; Registers used:
 14315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14321 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;Total ram usage:        7 bytes
 14326 ;; Hardware stack levels used: 1
 14327 ;; Hardware stack levels required when called: 4
 14328 ;; This function calls:
 14329 ;;		Nothing
 14330 ;; This function is called by:
 14331 ;;		_strstr
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335     0574                     _strncmp:	
 14336                           ;psect for function _strncmp
 14337                           
 14338     0574                     l13014:	
 14339                           ;incstack = 0
 14340                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 14341                           
 14342     0574  3001               	movlw	1
 14343     0575  02F5               	subwf	strncmp@n,f
 14344     0576  3000               	movlw	0
 14345     0577  3BF6               	subwfb	strncmp@n+1,f
 14346     0578  0A75               	incf	strncmp@n,w
 14347     0579  1D03               	skipz
 14348     057A  2D7F               	goto	u9941
 14349     057B  0A76               	incf	strncmp@n+1,w
 14350     057C  1D03               	btfss	3,2
 14351     057D  2D7F               	goto	u9941
 14352     057E  2D80               	goto	u9940
 14353     057F                     u9941:
 14354     057F  2D8F               	goto	l13022
 14355     0580                     u9940:
 14356     0580                     l13016:
 14357     0580  01F1               	clrf	?_strncmp
 14358     0581  01F2               	clrf	?_strncmp+1
 14359     0582  2DC5               	goto	l3309
 14360     0583                     l13020:
 14361     0583  3001               	movlw	1
 14362     0584  07F1               	addwf	strncmp@l,f
 14363     0585  3000               	movlw	0
 14364     0586  3DF2               	addwfc	strncmp@l+1,f
 14365     0587  3001               	movlw	1
 14366     0588  07F3               	addwf	strncmp@r,f
 14367     0589  3000               	movlw	0
 14368     058A  3DF4               	addwfc	strncmp@r+1,f
 14369     058B  3001               	movlw	1
 14370     058C  02F5               	subwf	strncmp@n,f
 14371     058D  3000               	movlw	0
 14372     058E  3BF6               	subwfb	strncmp@n+1,f
 14373     058F                     l13022:
 14374     058F  0871               	movf	strncmp@l,w
 14375     0590  0086               	movwf	6
 14376     0591  0872               	movf	strncmp@l+1,w
 14377     0592  0087               	movwf	7
 14378     0593  0801               	movf	1,w
 14379     0594  1903               	btfsc	3,2
 14380     0595  2D97               	goto	u9951
 14381     0596  2D98               	goto	u9950
 14382     0597                     u9951:
 14383     0597  2DB7               	goto	l13030
 14384     0598                     u9950:
 14385     0598                     l13024:
 14386     0598  0873               	movf	strncmp@r,w
 14387     0599  0084               	movwf	4
 14388     059A  0874               	movf	strncmp@r+1,w
 14389     059B  0085               	movwf	5
 14390     059C  0012               	moviw fsr0++
 14391     059D  1903               	btfsc	3,2
 14392     059E  2DA0               	goto	u9961
 14393     059F  2DA1               	goto	u9960
 14394     05A0                     u9961:
 14395     05A0  2DB7               	goto	l13030
 14396     05A1                     u9960:
 14397     05A1                     l13026:
 14398     05A1  0875               	movf	strncmp@n,w
 14399     05A2  0476               	iorwf	strncmp@n+1,w
 14400     05A3  1903               	btfsc	3,2
 14401     05A4  2DA6               	goto	u9971
 14402     05A5  2DA7               	goto	u9970
 14403     05A6                     u9971:
 14404     05A6  2DB7               	goto	l13030
 14405     05A7                     u9970:
 14406     05A7                     l13028:
 14407     05A7  0873               	movf	strncmp@r,w
 14408     05A8  0084               	movwf	4
 14409     05A9  0874               	movf	strncmp@r+1,w
 14410     05AA  0085               	movwf	5
 14411     05AB  0800               	movf	0,w	;code access
 14412     05AC  00F7               	movwf	??_strncmp
 14413     05AD  0871               	movf	strncmp@l,w
 14414     05AE  0086               	movwf	6
 14415     05AF  0872               	movf	strncmp@l+1,w
 14416     05B0  0087               	movwf	7
 14417     05B1  0801               	movf	1,w
 14418     05B2  0677               	xorwf	??_strncmp,w
 14419     05B3  1903               	skipnz
 14420     05B4  2DB6               	goto	u9981
 14421     05B5  2DB7               	goto	u9980
 14422     05B6                     u9981:
 14423     05B6  2D83               	goto	l13020
 14424     05B7                     u9980:
 14425     05B7                     l13030:
 14426     05B7  0871               	movf	strncmp@l,w
 14427     05B8  0086               	movwf	6
 14428     05B9  0872               	movf	strncmp@l+1,w
 14429     05BA  0087               	movwf	7
 14430     05BB  0873               	movf	strncmp@r,w
 14431     05BC  0084               	movwf	4
 14432     05BD  0874               	movf	strncmp@r+1,w
 14433     05BE  0085               	movwf	5
 14434     05BF  0800               	movf	0,w	;code access
 14435     05C0  0201               	subwf	1,w
 14436     05C1  00F1               	movwf	?_strncmp
 14437     05C2  01F2               	clrf	?_strncmp+1
 14438     05C3  1C03               	skipc
 14439     05C4  03F2               	decf	?_strncmp+1,f
 14440     05C5                     l3309:
 14441     05C5  0008               	return
 14442     05C6                     __end_of_strncmp:
 14443                           
 14444                           	psect	text28
 14445     0A9B                     __ptext28:	
 14446 ;; *************** function _strchr *****************
 14447 ;; Defined at:
 14448 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;  s               2    1[COMMON] PTR const unsigned char 
 14451 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14452 ;;  c               2    3[COMMON] int 
 14453 ;; Auto vars:     Size  Location     Type
 14454 ;;		None
 14455 ;; Return value:  Size  Location     Type
 14456 ;;                  2    1[COMMON] PTR unsigned char 
 14457 ;; Registers used:
 14458 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14459 ;; Tracked objects:
 14460 ;;		On entry : 0/0
 14461 ;;		On exit  : 0/0
 14462 ;;		Unchanged: 0/0
 14463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14468 ;;Total ram usage:        6 bytes
 14469 ;; Hardware stack levels used: 1
 14470 ;; Hardware stack levels required when called: 4
 14471 ;; This function calls:
 14472 ;;		Nothing
 14473 ;; This function is called by:
 14474 ;;		_strstr
 14475 ;; This function uses a non-reentrant model
 14476 ;;
 14477                           
 14478     0A9B                     _strchr:	
 14479                           ;psect for function _strchr
 14480                           
 14481     0A9B                     l3302:	
 14482                           ;incstack = 0
 14483                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 14484                           
 14485     0A9B                     l13034:
 14486     0A9B  0871               	movf	strchr@s,w
 14487     0A9C  0086               	movwf	6
 14488     0A9D  0872               	movf	strchr@s+1,w
 14489     0A9E  0087               	movwf	7
 14490     0A9F  0801               	movf	1,w
 14491     0AA0  0673               	xorwf	strchr@c,w
 14492     0AA1  1D03               	skipz
 14493     0AA2  2AA4               	goto	u9991
 14494     0AA3  2AA5               	goto	u9990
 14495     0AA4                     u9991:
 14496     0AA4  2AA6               	goto	l13038
 14497     0AA5                     u9990:
 14498     0AA5                     l13036:
 14499     0AA5  2AB8               	goto	l3304
 14500     0AA6                     l13038:
 14501     0AA6  0872               	movf	strchr@s+1,w
 14502     0AA7  00F6               	movwf	??_strchr+1
 14503     0AA8  0871               	movf	strchr@s,w
 14504     0AA9  00F5               	movwf	??_strchr
 14505     0AAA  0AF1               	incf	strchr@s,f
 14506     0AAB  1903               	skipnz
 14507     0AAC  0AF2               	incf	strchr@s+1,f
 14508     0AAD  0875               	movf	??_strchr,w
 14509     0AAE  0086               	movwf	6
 14510     0AAF  0876               	movf	??_strchr+1,w
 14511     0AB0  0087               	movwf	7
 14512     0AB1  0801               	movf	1,w
 14513     0AB2  1D03               	btfss	3,2
 14514     0AB3  2AB5               	goto	u10001
 14515     0AB4  2AB6               	goto	u10000
 14516     0AB5                     u10001:
 14517     0AB5  2A9B               	goto	l3302
 14518     0AB6                     u10000:
 14519     0AB6                     l13040:
 14520     0AB6  01F1               	clrf	?_strchr
 14521     0AB7  01F2               	clrf	?_strchr+1
 14522     0AB8                     l3304:
 14523     0AB8  0008               	return
 14524     0AB9                     __end_of_strchr:
 14525                           
 14526                           	psect	text29
 14527     0CF3                     __ptext29:	
 14528 ;; *************** function _rn487x_PrintMessageStart *****************
 14529 ;; Defined at:
 14530 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;		None
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  1    wreg      void 
 14537 ;; Registers used:
 14538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14548 ;;Total ram usage:        0 bytes
 14549 ;; Hardware stack levels used: 1
 14550 ;; Hardware stack levels required when called: 5
 14551 ;; This function calls:
 14552 ;;		_EUSART1_Write
 14553 ;;		_EUSART2_Write
 14554 ;; This function is called by:
 14555 ;;		_RN487X_MessageHandler
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559     0CF3                     _rn487x_PrintMessageStart:	
 14560                           ;psect for function _rn487x_PrintMessageStart
 14561                           
 14562     0CF3                     l13138:	
 14563                           ;incstack = 0
 14564                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14565                           
 14566                           
 14567                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 14568     0CF3  303C               	movlw	60
 14569     0CF4  00F1               	movwf	EUSART2_Write@txData
 14570     0CF5  3002               	movlw	low ((_uart+2)| (0+32768))
 14571     0CF6  0084               	movwf	4
 14572     0CF7  3090               	movlw	high ((_uart+2)| (0+32768))
 14573     0CF8  0085               	movwf	5
 14574     0CF9  3F01               	moviw [1]fsr0
 14575     0CFA  008A               	movwf	10
 14576     0CFB  3F00               	moviw [0]fsr0
 14577     0CFC  000A               	callw
 14578     0CFD  318C               	pagesel	$
 14579                           
 14580                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 14581     0CFE  303C               	movlw	60
 14582     0CFF  00F1               	movwf	EUSART2_Write@txData
 14583     0D00  3002               	movlw	low ((_uart+2)| (0+32768))
 14584     0D01  0084               	movwf	4
 14585     0D02  3090               	movlw	high ((_uart+2)| (0+32768))
 14586     0D03  0085               	movwf	5
 14587     0D04  3F01               	moviw [1]fsr0
 14588     0D05  008A               	movwf	10
 14589     0D06  3F00               	moviw [0]fsr0
 14590     0D07  000A               	callw
 14591     0D08  318C               	pagesel	$
 14592                           
 14593                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 14594     0D09  303C               	movlw	60
 14595     0D0A  00F1               	movwf	EUSART2_Write@txData
 14596     0D0B  3002               	movlw	low ((_uart+2)| (0+32768))
 14597     0D0C  0084               	movwf	4
 14598     0D0D  3090               	movlw	high ((_uart+2)| (0+32768))
 14599     0D0E  0085               	movwf	5
 14600     0D0F  3F01               	moviw [1]fsr0
 14601     0D10  008A               	movwf	10
 14602     0D11  3F00               	moviw [0]fsr0
 14603     0D12  000A               	callw
 14604     0D13  318C               	pagesel	$
 14605                           
 14606                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 14607     0D14  3020               	movlw	32
 14608     0D15  00F1               	movwf	EUSART2_Write@txData
 14609     0D16  3002               	movlw	low ((_uart+2)| (0+32768))
 14610     0D17  0084               	movwf	4
 14611     0D18  3090               	movlw	high ((_uart+2)| (0+32768))
 14612     0D19  0085               	movwf	5
 14613     0D1A  3F01               	moviw [1]fsr0
 14614     0D1B  008A               	movwf	10
 14615     0D1C  3F00               	moviw [0]fsr0
 14616     0D1D  000A               	callw
 14617     0D1E  318C               	pagesel	$
 14618     0D1F                     l829:
 14619     0D1F  0008               	return
 14620     0D20                     __end_of_rn487x_PrintMessageStart:
 14621                           
 14622                           	psect	text30
 14623     05C6                     __ptext30:	
 14624 ;; *************** function _rn487x_PrintMessageEnd *****************
 14625 ;; Defined at:
 14626 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;		None
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;		None
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  1    wreg      void 
 14633 ;; Registers used:
 14634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14644 ;;Total ram usage:        0 bytes
 14645 ;; Hardware stack levels used: 1
 14646 ;; Hardware stack levels required when called: 5
 14647 ;; This function calls:
 14648 ;;		_EUSART1_Write
 14649 ;;		_EUSART2_Write
 14650 ;; This function is called by:
 14651 ;;		_RN487X_MessageHandler
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655     05C6                     _rn487x_PrintMessageEnd:	
 14656                           ;psect for function _rn487x_PrintMessageEnd
 14657                           
 14658     05C6                     l13140:	
 14659                           ;incstack = 0
 14660                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14661                           
 14662                           
 14663                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 14664     05C6  3020               	movlw	32
 14665     05C7  00F1               	movwf	EUSART2_Write@txData
 14666     05C8  3002               	movlw	low ((_uart+2)| (0+32768))
 14667     05C9  0084               	movwf	4
 14668     05CA  3090               	movlw	high ((_uart+2)| (0+32768))
 14669     05CB  0085               	movwf	5
 14670     05CC  3F01               	moviw [1]fsr0
 14671     05CD  008A               	movwf	10
 14672     05CE  3F00               	moviw [0]fsr0
 14673     05CF  000A               	callw
 14674     05D0  3185               	pagesel	$
 14675                           
 14676                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 14677     05D1  303E               	movlw	62
 14678     05D2  00F1               	movwf	EUSART2_Write@txData
 14679     05D3  3002               	movlw	low ((_uart+2)| (0+32768))
 14680     05D4  0084               	movwf	4
 14681     05D5  3090               	movlw	high ((_uart+2)| (0+32768))
 14682     05D6  0085               	movwf	5
 14683     05D7  3F01               	moviw [1]fsr0
 14684     05D8  008A               	movwf	10
 14685     05D9  3F00               	moviw [0]fsr0
 14686     05DA  000A               	callw
 14687     05DB  3185               	pagesel	$
 14688                           
 14689                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 14690     05DC  303E               	movlw	62
 14691     05DD  00F1               	movwf	EUSART2_Write@txData
 14692     05DE  3002               	movlw	low ((_uart+2)| (0+32768))
 14693     05DF  0084               	movwf	4
 14694     05E0  3090               	movlw	high ((_uart+2)| (0+32768))
 14695     05E1  0085               	movwf	5
 14696     05E2  3F01               	moviw [1]fsr0
 14697     05E3  008A               	movwf	10
 14698     05E4  3F00               	moviw [0]fsr0
 14699     05E5  000A               	callw
 14700     05E6  3185               	pagesel	$
 14701                           
 14702                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 14703     05E7  303E               	movlw	62
 14704     05E8  00F1               	movwf	EUSART2_Write@txData
 14705     05E9  3002               	movlw	low ((_uart+2)| (0+32768))
 14706     05EA  0084               	movwf	4
 14707     05EB  3090               	movlw	high ((_uart+2)| (0+32768))
 14708     05EC  0085               	movwf	5
 14709     05ED  3F01               	moviw [1]fsr0
 14710     05EE  008A               	movwf	10
 14711     05EF  3F00               	moviw [0]fsr0
 14712     05F0  000A               	callw
 14713     05F1  3185               	pagesel	$
 14714                           
 14715                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 14716     05F2  3020               	movlw	32
 14717     05F3  00F1               	movwf	EUSART2_Write@txData
 14718     05F4  3002               	movlw	low ((_uart+2)| (0+32768))
 14719     05F5  0084               	movwf	4
 14720     05F6  3090               	movlw	high ((_uart+2)| (0+32768))
 14721     05F7  0085               	movwf	5
 14722     05F8  3F01               	moviw [1]fsr0
 14723     05F9  008A               	movwf	10
 14724     05FA  3F00               	moviw [0]fsr0
 14725     05FB  000A               	callw
 14726     05FC  3185               	pagesel	$
 14727                           
 14728                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 14729     05FD  300D               	movlw	13
 14730     05FE  00F1               	movwf	EUSART2_Write@txData
 14731     05FF  3002               	movlw	low ((_uart+2)| (0+32768))
 14732     0600  0084               	movwf	4
 14733     0601  3090               	movlw	high ((_uart+2)| (0+32768))
 14734     0602  0085               	movwf	5
 14735     0603  3F01               	moviw [1]fsr0
 14736     0604  008A               	movwf	10
 14737     0605  3F00               	moviw [0]fsr0
 14738     0606  000A               	callw
 14739     0607  3185               	pagesel	$
 14740                           
 14741                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 14742     0608  300A               	movlw	10
 14743     0609  00F1               	movwf	EUSART2_Write@txData
 14744     060A  3002               	movlw	low ((_uart+2)| (0+32768))
 14745     060B  0084               	movwf	4
 14746     060C  3090               	movlw	high ((_uart+2)| (0+32768))
 14747     060D  0085               	movwf	5
 14748     060E  3F01               	moviw [1]fsr0
 14749     060F  008A               	movwf	10
 14750     0610  3F00               	moviw [0]fsr0
 14751     0611  000A               	callw
 14752     0612  3185               	pagesel	$
 14753     0613                     l832:
 14754     0613  0008               	return
 14755     0614                     __end_of_rn487x_PrintMessageEnd:
 14756                           
 14757                           	psect	text31
 14758     0E6B                     __ptext31:	
 14759 ;; *************** function _rn487x_PrintMessage *****************
 14760 ;; Defined at:
 14761 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14762 ;; Parameters:    Size  Location     Type
 14763 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 14764 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 14767 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;Total ram usage:       37 bytes
 14782 ;; Hardware stack levels used: 1
 14783 ;; Hardware stack levels required when called: 5
 14784 ;; This function calls:
 14785 ;;		_EUSART1_Write
 14786 ;;		_EUSART2_Write
 14787 ;;		_strcpy
 14788 ;;		_strlen
 14789 ;; This function is called by:
 14790 ;;		_RN487X_MessageHandler
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794     0E6B                     _rn487x_PrintMessage:	
 14795                           ;psect for function _rn487x_PrintMessage
 14796                           
 14797     0E6B                     l13150:	
 14798                           ;incstack = 0
 14799                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14800                           
 14801                           
 14802                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 14803     0E6B  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 14804     0E6C  00F2               	movwf	strcpy@src+1
 14805     0E6D  0877               	movf	rn487x_PrintMessage@passedMessage,w
 14806     0E6E  00F1               	movwf	strcpy@src
 14807     0E6F  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 14808     0E70  318A  222E  318E   	fcall	_strcpy
 14809     0E73                     l13152:
 14810                           
 14811                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 14812     0E73  0140               	movlb	0	; select bank0
 14813     0E74  01C0               	clrf	rn487x_PrintMessage@messageIndex
 14814     0E75  2E8A               	goto	l13158
 14815     0E76                     l13154:
 14816                           
 14817                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 14818     0E76  0840               	movf	rn487x_PrintMessage@messageIndex,w
 14819     0E77  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 14820     0E78  0086               	movwf	6
 14821     0E79  0187               	clrf	7
 14822     0E7A  0801               	movf	1,w
 14823     0E7B  00F1               	movwf	EUSART2_Write@txData
 14824     0E7C  3002               	movlw	low ((_uart+2)| (0+32768))
 14825     0E7D  0084               	movwf	4
 14826     0E7E  3090               	movlw	high ((_uart+2)| (0+32768))
 14827     0E7F  0085               	movwf	5
 14828     0E80  3F01               	moviw [1]fsr0
 14829     0E81  008A               	movwf	10
 14830     0E82  3F00               	moviw [0]fsr0
 14831     0E83  000A               	callw
 14832     0E84  318E               	pagesel	$
 14833     0E85                     l13156:
 14834                           
 14835                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 14836     0E85  3001               	movlw	1
 14837     0E86  00F9               	movwf	??_rn487x_PrintMessage
 14838     0E87  0879               	movf	??_rn487x_PrintMessage,w
 14839     0E88  0140               	movlb	0	; select bank0
 14840     0E89  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 14841     0E8A                     l13158:
 14842     0E8A  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 14843     0E8B  00F2               	movwf	strlen@s+1
 14844     0E8C  0877               	movf	rn487x_PrintMessage@passedMessage,w
 14845     0E8D  00F1               	movwf	strlen@s
 14846     0E8E  318A  2215  318E   	fcall	_strlen
 14847     0E91  0140               	movlb	0	; select bank0
 14848     0E92  0840               	movf	rn487x_PrintMessage@messageIndex,w
 14849     0E93  00F9               	movwf	??_rn487x_PrintMessage
 14850     0E94  01FA               	clrf	??_rn487x_PrintMessage+1
 14851     0E95  0872               	movf	?_strlen+1,w
 14852     0E96  027A               	subwf	??_rn487x_PrintMessage+1,w
 14853     0E97  1D03               	skipz
 14854     0E98  2E9B               	goto	u10095
 14855     0E99  0871               	movf	?_strlen,w
 14856     0E9A  0279               	subwf	??_rn487x_PrintMessage,w
 14857     0E9B                     u10095:
 14858     0E9B  1C03               	skipc
 14859     0E9C  2E9E               	goto	u10091
 14860     0E9D  2E9F               	goto	u10090
 14861     0E9E                     u10091:
 14862     0E9E  2E76               	goto	l13154
 14863     0E9F                     u10090:
 14864     0E9F                     l845:
 14865     0E9F  0008               	return
 14866     0EA0                     __end_of_rn487x_PrintMessage:
 14867                           
 14868                           	psect	text32
 14869     0A2E                     __ptext32:	
 14870 ;; *************** function _strcpy *****************
 14871 ;; Defined at:
 14872 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;  dest            1    wreg     PTR unsigned char 
 14875 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14876 ;;  src             2    1[COMMON] PTR const unsigned char 
 14877 ;;		 -> statusBuffer@main$F3736(80), statusBuffer(80), NULL(0), 
 14878 ;; Auto vars:     Size  Location     Type
 14879 ;;  dest            1    6[COMMON] PTR unsigned char 
 14880 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14881 ;;  d               1    5[COMMON] PTR unsigned char 
 14882 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  1    wreg      PTR unsigned char 
 14885 ;; Registers used:
 14886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14896 ;;Total ram usage:        6 bytes
 14897 ;; Hardware stack levels used: 1
 14898 ;; Hardware stack levels required when called: 4
 14899 ;; This function calls:
 14900 ;;		Nothing
 14901 ;; This function is called by:
 14902 ;;		_rn487x_PrintMessage
 14903 ;; This function uses a non-reentrant model
 14904 ;;
 14905                           
 14906     0A2E                     _strcpy:	
 14907                           ;psect for function _strcpy
 14908                           
 14909                           
 14910                           ;incstack = 0
 14911                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 14912                           ;strcpy@dest stored from wreg
 14913     0A2E  00F6               	movwf	strcpy@dest
 14914     0A2F                     l12948:
 14915     0A2F  0876               	movf	strcpy@dest,w
 14916     0A30  00F5               	movwf	strcpy@d
 14917     0A31                     l12950:
 14918     0A31  0875               	movf	strcpy@d,w
 14919     0A32  0086               	movwf	6
 14920     0A33  0187               	clrf	7
 14921     0A34  0AF5               	incf	strcpy@d,f
 14922     0A35  0872               	movf	strcpy@src+1,w
 14923     0A36  00F4               	movwf	??_strcpy+1
 14924     0A37  0871               	movf	strcpy@src,w
 14925     0A38  00F3               	movwf	??_strcpy
 14926     0A39  0AF1               	incf	strcpy@src,f
 14927     0A3A  1903               	skipnz
 14928     0A3B  0AF2               	incf	strcpy@src+1,f
 14929     0A3C  0873               	movf	??_strcpy,w
 14930     0A3D  0084               	movwf	4
 14931     0A3E  0874               	movf	??_strcpy+1,w
 14932     0A3F  0085               	movwf	5
 14933     0A40  0800               	movf	0,w
 14934     0A41  3FC0               	movwi [0]fsr1
 14935     0A42  0889               	movf	9,f
 14936     0A43  1D03               	btfss	3,2
 14937     0A44  2A46               	goto	u9851
 14938     0A45  2A47               	goto	u9850
 14939     0A46                     u9851:
 14940     0A46  2A31               	goto	l12950
 14941     0A47                     u9850:
 14942     0A47                     l3277:
 14943     0A47  0008               	return
 14944     0A48                     __end_of_strcpy:
 14945                           
 14946                           	psect	text33
 14947     0B1E                     __ptext33:	
 14948 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 14949 ;; Defined at:
 14950 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;  messageType     1    wreg     enum E12962
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;  messageType     1    3[COMMON] enum E12962
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      void 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14968 ;;Total ram usage:        1 bytes
 14969 ;; Hardware stack levels used: 1
 14970 ;; Hardware stack levels required when called: 5
 14971 ;; This function calls:
 14972 ;;		_EUSART1_Write
 14973 ;;		_EUSART2_Write
 14974 ;; This function is called by:
 14975 ;;		_RN487X_MessageHandler
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979     0B1E                     _rn487x_PrintIndicatorCharacters:	
 14980                           ;psect for function _rn487x_PrintIndicatorCharacters
 14981                           
 14982                           
 14983                           ;incstack = 0
 14984                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14985                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 14986     0B1E  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 14987     0B1F                     l13142:
 14988                           
 14989                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 14990     0B1F  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 14991     0B20  1D03               	btfss	3,2
 14992     0B21  2B23               	goto	u10071
 14993     0B22  2B24               	goto	u10070
 14994     0B23                     u10071:
 14995     0B23  2B30               	goto	l13146
 14996     0B24                     u10070:
 14997     0B24                     l13144:
 14998                           
 14999                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 15000     0B24  305B               	movlw	91
 15001     0B25  00F1               	movwf	EUSART2_Write@txData
 15002     0B26  3002               	movlw	low ((_uart+2)| (0+32768))
 15003     0B27  0084               	movwf	4
 15004     0B28  3090               	movlw	high ((_uart+2)| (0+32768))
 15005     0B29  0085               	movwf	5
 15006     0B2A  3F01               	moviw [1]fsr0
 15007     0B2B  008A               	movwf	10
 15008     0B2C  3F00               	moviw [0]fsr0
 15009     0B2D  000A               	callw
 15010     0B2E  318B               	pagesel	$
 15011                           
 15012                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 15013     0B2F  2B40               	goto	l839
 15014     0B30                     l13146:
 15015     0B30  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 15016     0B31  1D03               	btfss	3,2
 15017     0B32  2B34               	goto	u10081
 15018     0B33  2B35               	goto	u10080
 15019     0B34                     u10081:
 15020     0B34  2B40               	goto	l839
 15021     0B35                     u10080:
 15022     0B35                     l13148:
 15023                           
 15024                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 15025     0B35  305D               	movlw	93
 15026     0B36  00F1               	movwf	EUSART2_Write@txData
 15027     0B37  3002               	movlw	low ((_uart+2)| (0+32768))
 15028     0B38  0084               	movwf	4
 15029     0B39  3090               	movlw	high ((_uart+2)| (0+32768))
 15030     0B3A  0085               	movwf	5
 15031     0B3B  3F01               	moviw [1]fsr0
 15032     0B3C  008A               	movwf	10
 15033     0B3D  3F00               	moviw [0]fsr0
 15034     0B3E  000A               	callw
 15035     0B3F  318B               	pagesel	$
 15036     0B40                     l839:	
 15037                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 15038                           
 15039     0B40  0008               	return
 15040     0B41                     __end_of_rn487x_PrintIndicatorCharacters:
 15041                           
 15042                           	psect	text34
 15043     1646                     __ptext34:	
 15044 ;; *************** function _RN487X_IsConnected *****************
 15045 ;; Defined at:
 15046 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;		None
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;		None
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      _Bool 
 15053 ;; Registers used:
 15054 ;;		wreg
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;Total ram usage:        0 bytes
 15065 ;; Hardware stack levels used: 1
 15066 ;; Hardware stack levels required when called: 4
 15067 ;; This function calls:
 15068 ;;		Nothing
 15069 ;; This function is called by:
 15070 ;;		_main
 15071 ;;		_RN487X_Example_TransparentUart
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075     1646                     _RN487X_IsConnected:	
 15076                           ;psect for function _RN487X_IsConnected
 15077                           
 15078     1646                     l13822:	
 15079                           ;incstack = 0
 15080                           ; Regs used in _RN487X_IsConnected: [wreg]
 15081                           
 15082                           
 15083                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 15084     1646  0140               	movlb	0	; select bank0
 15085     1647  0869               	movf	_connected,w
 15086     1648                     l780:
 15087     1648  0008               	return
 15088     1649                     __end_of_RN487X_IsConnected:
 15089                           
 15090                           	psect	text35
 15091     046E                     __ptext35:	
 15092 ;; *************** function _RN487X_Init *****************
 15093 ;; Defined at:
 15094 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;		None
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;		None
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  1    wreg      _Bool 
 15101 ;; Registers used:
 15102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;Total ram usage:        0 bytes
 15113 ;; Hardware stack levels used: 1
 15114 ;; Hardware stack levels required when called: 6
 15115 ;; This function calls:
 15116 ;;		_RN487X_Delay
 15117 ;;		_RN487X_IndicateRx
 15118 ;;		_RN487X_Read@rn487x_interface$F1339
 15119 ;;		_RN487X_Reset
 15120 ;;		_RN487X_SetSystemMode
 15121 ;;		_RN487X_is_rx_ready
 15122 ;; This function is called by:
 15123 ;;		_main
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127     046E                     _RN487X_Init:	
 15128                           ;psect for function _RN487X_Init
 15129                           
 15130     046E                     l13836:	
 15131                           ;incstack = 0
 15132                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15133                           
 15134                           
 15135                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 15136     046E  01F1               	clrf	RN487X_SetSystemMode@mode
 15137     046F  0AF1               	incf	RN487X_SetSystemMode@mode,f
 15138     0470  3074               	movlw	low ((_RN487X+12)| (0+32768))
 15139     0471  0084               	movwf	4
 15140     0472  3090               	movlw	high ((_RN487X+12)| (0+32768))
 15141     0473  0085               	movwf	5
 15142     0474  3F01               	moviw [1]fsr0
 15143     0475  008A               	movwf	10
 15144     0476  3F00               	moviw [0]fsr0
 15145     0477  000A               	callw
 15146     0478  3184               	pagesel	$
 15147                           
 15148                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 15149     0479  01F1               	clrf	RN487X_Reset@value
 15150     047A  0AF1               	incf	RN487X_Reset@value,f
 15151     047B  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15152     047C  0084               	movwf	4
 15153     047D  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15154     047E  0085               	movwf	5
 15155     047F  3F01               	moviw [1]fsr0
 15156     0480  008A               	movwf	10
 15157     0481  3F00               	moviw [0]fsr0
 15158     0482  000A               	callw
 15159     0483  3184               	pagesel	$
 15160                           
 15161                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 15162     0484  3001               	movlw	1
 15163     0485  00F4               	movwf	RN487X_Delay@delayCount
 15164     0486  3000               	movlw	0
 15165     0487  00F5               	movwf	RN487X_Delay@delayCount+1
 15166     0488  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15167     0489  0084               	movwf	4
 15168     048A  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15169     048B  0085               	movwf	5
 15170     048C  3F01               	moviw [1]fsr0
 15171     048D  008A               	movwf	10
 15172     048E  3F00               	moviw [0]fsr0
 15173     048F  000A               	callw
 15174     0490  3184               	pagesel	$
 15175                           
 15176                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 15177     0491  01F1               	clrf	RN487X_Reset@value
 15178     0492  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15179     0493  0084               	movwf	4
 15180     0494  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15181     0495  0085               	movwf	5
 15182     0496  3F01               	moviw [1]fsr0
 15183     0497  008A               	movwf	10
 15184     0498  3F00               	moviw [0]fsr0
 15185     0499  000A               	callw
 15186     049A  3184               	pagesel	$
 15187                           
 15188                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 15189     049B  01F1               	clrf	RN487X_IndicateRx@value
 15190     049C  0AF1               	incf	RN487X_IndicateRx@value,f
 15191     049D  3070               	movlw	low ((_RN487X+8)| (0+32768))
 15192     049E  0084               	movwf	4
 15193     049F  3090               	movlw	high ((_RN487X+8)| (0+32768))
 15194     04A0  0085               	movwf	5
 15195     04A1  3F01               	moviw [1]fsr0
 15196     04A2  008A               	movwf	10
 15197     04A3  3F00               	moviw [0]fsr0
 15198     04A4  000A               	callw
 15199     04A5  3184               	pagesel	$
 15200                           
 15201                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 15202     04A6  30C8               	movlw	200
 15203     04A7  00F4               	movwf	RN487X_Delay@delayCount
 15204     04A8  3000               	movlw	0
 15205     04A9  00F5               	movwf	RN487X_Delay@delayCount+1
 15206     04AA  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15207     04AB  0084               	movwf	4
 15208     04AC  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15209     04AD  0085               	movwf	5
 15210     04AE  3F01               	moviw [1]fsr0
 15211     04AF  008A               	movwf	10
 15212     04B0  3F00               	moviw [0]fsr0
 15213     04B1  000A               	callw
 15214     04B2  3184               	pagesel	$
 15215                           
 15216                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15217     04B3  2CBD               	goto	l13840
 15218     04B4                     l13838:
 15219                           
 15220                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 15221     04B4  306A               	movlw	low ((_RN487X+2)| (0+32768))
 15222     04B5  0084               	movwf	4
 15223     04B6  3090               	movlw	high ((_RN487X+2)| (0+32768))
 15224     04B7  0085               	movwf	5
 15225     04B8  3F01               	moviw [1]fsr0
 15226     04B9  008A               	movwf	10
 15227     04BA  3F00               	moviw [0]fsr0
 15228     04BB  000A               	callw
 15229     04BC  3184               	pagesel	$
 15230     04BD                     l13840:
 15231                           
 15232                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15233     04BD  306E               	movlw	low ((_RN487X+6)| (0+32768))
 15234     04BE  0084               	movwf	4
 15235     04BF  3090               	movlw	high ((_RN487X+6)| (0+32768))
 15236     04C0  0085               	movwf	5
 15237     04C1  3F01               	moviw [1]fsr0
 15238     04C2  008A               	movwf	10
 15239     04C3  3F00               	moviw [0]fsr0
 15240     04C4  000A               	callw
 15241     04C5  3184               	pagesel	$
 15242     04C6  3A00               	xorlw	0
 15243     04C7  1D03               	skipz
 15244     04C8  2CCA               	goto	u10751
 15245     04C9  2CCB               	goto	u10750
 15246     04CA                     u10751:
 15247     04CA  2CB4               	goto	l13838
 15248     04CB                     u10750:
 15249     04CB                     l876:
 15250     04CB  0008               	return
 15251     04CC                     __end_of_RN487X_Init:
 15252                           
 15253                           	psect	text36
 15254     1769                     __ptext36:	
 15255 ;; *************** function _RN487X_is_rx_ready *****************
 15256 ;; Defined at:
 15257 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;		None
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;		None
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  1    wreg      _Bool 
 15264 ;; Registers used:
 15265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15275 ;;Total ram usage:        0 bytes
 15276 ;; Hardware stack levels used: 1
 15277 ;; Hardware stack levels required when called: 5
 15278 ;; This function calls:
 15279 ;;		_EUSART1_is_rx_ready
 15280 ;;		_EUSART2_is_rx_ready
 15281 ;; This function is called by:
 15282 ;;		_RN487X_DataReady
 15283 ;;		_RN487X_Init
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           
 15287     1769                     _RN487X_is_rx_ready:	
 15288                           ;psect for function _RN487X_is_rx_ready
 15289                           
 15290     1769                     l13302:	
 15291                           ;incstack = 0
 15292                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15293                           
 15294                           
 15295                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 15296     1769  301A               	movlw	low ((_uart+26)| (0+32768))
 15297     176A  0084               	movwf	4
 15298     176B  3090               	movlw	high ((_uart+26)| (0+32768))
 15299     176C  0085               	movwf	5
 15300     176D  3F01               	moviw [1]fsr0
 15301     176E  008A               	movwf	10
 15302     176F  3F00               	moviw [0]fsr0
 15303     1770  000A               	callw
 15304     1771  3197               	pagesel	$
 15305     1772                     l792:
 15306     1772  0008               	return
 15307     1773                     __end_of_RN487X_is_rx_ready:
 15308                           
 15309                           	psect	text37
 15310     1743                     __ptext37:	
 15311 ;; *************** function _EUSART1_is_rx_ready *****************
 15312 ;; Defined at:
 15313 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;		None
 15316 ;; Auto vars:     Size  Location     Type
 15317 ;;		None
 15318 ;; Return value:  Size  Location     Type
 15319 ;;                  1    wreg      _Bool 
 15320 ;; Registers used:
 15321 ;;		wreg, status,2, status,0
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15331 ;;Total ram usage:        0 bytes
 15332 ;; Hardware stack levels used: 1
 15333 ;; Hardware stack levels required when called: 4
 15334 ;; This function calls:
 15335 ;;		Nothing
 15336 ;; This function is called by:
 15337 ;;		_RN487X_is_rx_ready
 15338 ;;		_RN487X_Example_TransparentUart
 15339 ;;		_main
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343     1743                     _EUSART1_is_rx_ready:	
 15344                           ;psect for function _EUSART1_is_rx_ready
 15345                           
 15346     1743                     l13242:	
 15347                           ;incstack = 0
 15348                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15349                           
 15350                           
 15351                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 15352     1743  0140               	movlb	0	; select bank0
 15353     1744  0859               	movf	_eusart1RxCount,w	;volatile
 15354     1745  1D03               	btfss	3,2
 15355     1746  2F48               	goto	u10261
 15356     1747  2F4A               	goto	u10260
 15357     1748                     u10261:
 15358     1748  3001               	movlw	1
 15359     1749  2F4B               	goto	u10270
 15360     174A                     u10260:
 15361     174A  3000               	movlw	0
 15362     174B                     u10270:
 15363     174B                     l1198:
 15364     174B  0008               	return
 15365     174C                     __end_of_EUSART1_is_rx_ready:
 15366                           
 15367                           	psect	text38
 15368     173A                     __ptext38:	
 15369 ;; *************** function _EUSART2_is_rx_ready *****************
 15370 ;; Defined at:
 15371 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;		None
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;		None
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  1    wreg      _Bool 
 15378 ;; Registers used:
 15379 ;;		wreg, status,2, status,0
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15389 ;;Total ram usage:        0 bytes
 15390 ;; Hardware stack levels used: 1
 15391 ;; Hardware stack levels required when called: 4
 15392 ;; This function calls:
 15393 ;;		Nothing
 15394 ;; This function is called by:
 15395 ;;		_RN487X_is_rx_ready
 15396 ;;		_RN487X_Example_TransparentUart
 15397 ;;		_main
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401     173A                     _EUSART2_is_rx_ready:	
 15402                           ;psect for function _EUSART2_is_rx_ready
 15403                           
 15404     173A                     l13238:	
 15405                           ;incstack = 0
 15406                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 15407                           
 15408                           
 15409                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 15410     173A  0140               	movlb	0	; select bank0
 15411     173B  0860               	movf	_eusart2RxCount,w	;volatile
 15412     173C  1D03               	btfss	3,2
 15413     173D  2F3F               	goto	u10241
 15414     173E  2F41               	goto	u10240
 15415     173F                     u10241:
 15416     173F  3001               	movlw	1
 15417     1740  2F42               	goto	u10250
 15418     1741                     u10240:
 15419     1741  3000               	movlw	0
 15420     1742                     u10250:
 15421     1742                     l1054:
 15422     1742  0008               	return
 15423     1743                     __end_of_EUSART2_is_rx_ready:
 15424                           
 15425                           	psect	text39
 15426     17BF                     __ptext39:	
 15427 ;; *************** function _RN487X_SetSystemMode *****************
 15428 ;; Defined at:
 15429 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  mode            1    1[COMMON] enum E204
 15432 ;; Auto vars:     Size  Location     Type
 15433 ;;		None
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		wreg, status,2, status,0
 15438 ;; Tracked objects:
 15439 ;;		On entry : 0/0
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15447 ;;Total ram usage:        1 bytes
 15448 ;; Hardware stack levels used: 1
 15449 ;; Hardware stack levels required when called: 4
 15450 ;; This function calls:
 15451 ;;		Nothing
 15452 ;; This function is called by:
 15453 ;;		_RN487X_Init
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457     17BF                     _RN487X_SetSystemMode:	
 15458                           ;psect for function _RN487X_SetSystemMode
 15459                           
 15460     17BF                     l816:	
 15461                           ;incstack = 0
 15462                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 15463                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 15464                           
 15465     17BF  0140               	movlb	0	; select bank0
 15466     17C0  1392               	bcf	18,7	;volatile
 15467     17C1                     l13488:
 15468                           
 15469                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 15470     17C1  0371               	decf	RN487X_SetSystemMode@mode,w
 15471     17C2  1D03               	btfss	3,2
 15472     17C3  2FC5               	goto	u10581
 15473     17C4  2FC6               	goto	u10580
 15474     17C5                     u10581:
 15475     17C5  2FC8               	goto	l822
 15476     17C6                     u10580:
 15477     17C6                     l819:	
 15478                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 15479                           
 15480     17C6  1798               	bsf	24,7	;volatile
 15481     17C7  2FC9               	goto	l824
 15482     17C8                     l822:	
 15483                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 15484                           
 15485     17C8  1398               	bcf	24,7	;volatile
 15486     17C9                     l824:	
 15487                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 15488                           
 15489     17C9  1792               	bsf	18,7	;volatile
 15490     17CA                     l826:
 15491     17CA  0008               	return
 15492     17CB                     __end_of_RN487X_SetSystemMode:
 15493                           
 15494                           	psect	text40
 15495     17A8                     __ptext40:	
 15496 ;; *************** function _RN487X_Reset *****************
 15497 ;; Defined at:
 15498 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;  value           1    1[COMMON] _Bool 
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      void 
 15505 ;; Registers used:
 15506 ;;		wreg, status,2, status,0
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15516 ;;Total ram usage:        1 bytes
 15517 ;; Hardware stack levels used: 1
 15518 ;; Hardware stack levels required when called: 4
 15519 ;; This function calls:
 15520 ;;		Nothing
 15521 ;; This function is called by:
 15522 ;;		_RN487X_Init
 15523 ;; This function uses a non-reentrant model
 15524 ;;
 15525                           
 15526     17A8                     _RN487X_Reset:	
 15527                           ;psect for function _RN487X_Reset
 15528                           
 15529     17A8                     l13484:	
 15530                           ;incstack = 0
 15531                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 15532                           
 15533                           
 15534                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 15535     17A8  0371               	decf	RN487X_Reset@value,w
 15536     17A9  1D03               	btfss	3,2
 15537     17AA  2FAC               	goto	u10561
 15538     17AB  2FAD               	goto	u10560
 15539     17AC                     u10561:
 15540     17AC  2FB0               	goto	l802
 15541     17AD                     u10560:
 15542     17AD                     l799:	
 15543                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 15544                           
 15545     17AD  0140               	movlb	0	; select bank0
 15546     17AE  1018               	bcf	24,0	;volatile
 15547     17AF  2FB2               	goto	l804
 15548     17B0                     l802:	
 15549                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 15550                           
 15551     17B0  0140               	movlb	0	; select bank0
 15552     17B1  1418               	bsf	24,0	;volatile
 15553     17B2                     l804:
 15554     17B2  0008               	return
 15555     17B3                     __end_of_RN487X_Reset:
 15556                           
 15557                           	psect	text41
 15558     179D                     __ptext41:	
 15559 ;; *************** function _RN487X_IndicateRx *****************
 15560 ;; Defined at:
 15561 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;  value           1    1[COMMON] _Bool 
 15564 ;; Auto vars:     Size  Location     Type
 15565 ;;		None
 15566 ;; Return value:  Size  Location     Type
 15567 ;;                  1    wreg      void 
 15568 ;; Registers used:
 15569 ;;		wreg, status,2, status,0
 15570 ;; Tracked objects:
 15571 ;;		On entry : 0/0
 15572 ;;		On exit  : 0/0
 15573 ;;		Unchanged: 0/0
 15574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15579 ;;Total ram usage:        1 bytes
 15580 ;; Hardware stack levels used: 1
 15581 ;; Hardware stack levels required when called: 4
 15582 ;; This function calls:
 15583 ;;		Nothing
 15584 ;; This function is called by:
 15585 ;;		_RN487X_Init
 15586 ;; This function uses a non-reentrant model
 15587 ;;
 15588                           
 15589     179D                     _RN487X_IndicateRx:	
 15590                           ;psect for function _RN487X_IndicateRx
 15591                           
 15592     179D                     l13486:	
 15593                           ;incstack = 0
 15594                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 15595                           
 15596                           
 15597                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 15598     179D  0371               	decf	RN487X_IndicateRx@value,w
 15599     179E  1D03               	btfss	3,2
 15600     179F  2FA1               	goto	u10571
 15601     17A0  2FA2               	goto	u10570
 15602     17A1                     u10571:
 15603     17A1  2FA5               	goto	l811
 15604     17A2                     u10570:
 15605     17A2                     l808:	
 15606                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 15607                           
 15608     17A2  0140               	movlb	0	; select bank0
 15609     17A3  131A               	bcf	26,6	;volatile
 15610     17A4  2FA7               	goto	l813
 15611     17A5                     l811:	
 15612                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 15613                           
 15614     17A5  0140               	movlb	0	; select bank0
 15615     17A6  171A               	bsf	26,6	;volatile
 15616     17A7                     l813:
 15617     17A7  0008               	return
 15618     17A8                     __end_of_RN487X_IndicateRx:
 15619                           
 15620                           	psect	text42
 15621     0941                     __ptext42:	
 15622 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 15623 ;; Defined at:
 15624 ;;		line 310 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;		None
 15627 ;; Auto vars:     Size  Location     Type
 15628 ;;  payload         5   24[BANK0 ] unsigned char [5]
 15629 ;;  temperature     2   29[BANK0 ] short 
 15630 ;; Return value:  Size  Location     Type
 15631 ;;                  1    wreg      void 
 15632 ;; Registers used:
 15633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15634 ;; Tracked objects:
 15635 ;;		On entry : 0/0
 15636 ;;		On exit  : 0/0
 15637 ;;		Unchanged: 0/0
 15638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15640 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15642 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;Total ram usage:        7 bytes
 15644 ;; Hardware stack levels used: 1
 15645 ;; Hardware stack levels required when called: 15
 15646 ;; This function calls:
 15647 ;;		_LIGHTBLUE_SendPacket
 15648 ;;		_LIGHTBLUE_SplitWord
 15649 ;;		_MCP9844_GetTemperatureValue
 15650 ;; This function is called by:
 15651 ;;		_main
 15652 ;; This function uses a non-reentrant model
 15653 ;;
 15654                           
 15655     0941                     _LIGHTBLUE_TemperatureSensor:	
 15656                           ;psect for function _LIGHTBLUE_TemperatureSensor
 15657                           
 15658     0941                     l13660:	
 15659                           ;incstack = 0
 15660                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15661                           
 15662                           
 15663                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 311:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 312:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     *payload = '\0';
 15664     0941  0140               	movlb	0	; select bank0
 15665     0942  01B8               	clrf	LIGHTBLUE_TemperatureSensor@payload
 15666     0943                     l13662:
 15667                           
 15668                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 315:     MCP9844_GetTemperatureVal
      +                          ue(&temperature);
 15669     0943  303D               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 15670     0944  3197  27E5  3189   	fcall	_MCP9844_GetTemperatureValue
 15671     0947                     l13664:
 15672                           
 15673                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 317:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 15674     0947  0140               	movlb	0	; select bank0
 15675     0948  083E               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 15676     0949  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 15677     094A  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 15678     094B  00F9               	movwf	LIGHTBLUE_SplitWord@value
 15679     094C  3038               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 15680     094D  3188  200C  3189   	fcall	_LIGHTBLUE_SplitWord
 15681     0950                     l13666:
 15682                           
 15683                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 319:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 15684     0950  3038               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 15685     0951  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 15686     0952  3054               	movlw	84
 15687     0953  3182  22F3  3189   	fcall	_LIGHTBLUE_SendPacket
 15688     0956                     l121:
 15689     0956  0008               	return
 15690     0957                     __end_of_LIGHTBLUE_TemperatureSensor:
 15691                           
 15692                           	psect	text43
 15693     17E5                     __ptext43:	
 15694 ;; *************** function _MCP9844_GetTemperatureValue *****************
 15695 ;; Defined at:
 15696 ;;		line 70 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;  temperature     1    wreg     PTR short 
 15699 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  temperature     1   11[COMMON] PTR short 
 15702 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 15703 ;; Return value:  Size  Location     Type
 15704 ;;                  1    wreg      void 
 15705 ;; Registers used:
 15706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15707 ;; Tracked objects:
 15708 ;;		On entry : 0/0
 15709 ;;		On exit  : 0/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15716 ;;Total ram usage:        1 bytes
 15717 ;; Hardware stack levels used: 1
 15718 ;; Hardware stack levels required when called: 14
 15719 ;; This function calls:
 15720 ;;		_MCP9844_CalcTemperature
 15721 ;; This function is called by:
 15722 ;;		_LIGHTBLUE_TemperatureSensor
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726     17E5                     _MCP9844_GetTemperatureValue:	
 15727                           ;psect for function _MCP9844_GetTemperatureValue
 15728                           
 15729                           
 15730                           ;incstack = 0
 15731                           ; Regs used in _MCP9844_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15732                           ;MCP9844_GetTemperatureValue@temperature stored from wreg
 15733     17E5  00FB               	movwf	MCP9844_GetTemperatureValue@temperature
 15734     17E6                     l13410:
 15735                           
 15736                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 70: void MCP9844_GetTemperatureV
      +                          alue(int16_t *temperature);mcc_generated_files/application/MCP9844_temp_sensor.c: 71: {;
      +                          mcc_generated_files/application/MCP9844_temp_sensor.c: 72:     *temperature = MCP9844_Ca
      +                          lcTemperature();
 15737     17E6  318B  2365  3197   	fcall	_MCP9844_CalcTemperature
 15738     17E9  087B               	movf	MCP9844_GetTemperatureValue@temperature,w
 15739     17EA  0086               	movwf	6
 15740     17EB  0187               	clrf	7
 15741     17EC  0140               	movlb	0	; select bank0
 15742     17ED  082D               	movf	?_MCP9844_CalcTemperature,w
 15743     17EE  3FC0               	movwi [0]fsr1
 15744     17EF  082E               	movf	?_MCP9844_CalcTemperature+1,w
 15745     17F0  3FC1               	movwi [1]fsr1
 15746     17F1                     l68:
 15747     17F1  0008               	return
 15748     17F2                     __end_of_MCP9844_GetTemperatureValue:
 15749                           
 15750                           	psect	text44
 15751     0B65                     __ptext44:	
 15752 ;; *************** function _MCP9844_CalcTemperature *****************
 15753 ;; Defined at:
 15754 ;;		line 75 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;		None
 15757 ;; Auto vars:     Size  Location     Type
 15758 ;;  temperatureD    2   22[BANK0 ] short 
 15759 ;;  lowerByte       1   21[BANK0 ] unsigned char 
 15760 ;;  upperByte       1   20[BANK0 ] unsigned char 
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  2   13[BANK0 ] short 
 15763 ;; Registers used:
 15764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15771 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15772 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15773 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15774 ;;Total ram usage:       11 bytes
 15775 ;; Hardware stack levels used: 1
 15776 ;; Hardware stack levels required when called: 13
 15777 ;; This function calls:
 15778 ;;		_i2c_read2ByteRegister
 15779 ;; This function is called by:
 15780 ;;		_MCP9844_GetTemperatureValue
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784     0B65                     _MCP9844_CalcTemperature:	
 15785                           ;psect for function _MCP9844_CalcTemperature
 15786                           
 15787     0B65                     l13270:	
 15788                           ;incstack = 0
 15789                           ; Regs used in _MCP9844_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15790                           
 15791                           
 15792                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 77:     int16_t temperatureData;
      +                          ;mcc_generated_files/application/MCP9844_temp_sensor.c: 78:     uint8_t upperByte;;mcc_g
      +                          enerated_files/application/MCP9844_temp_sensor.c: 79:     uint8_t lowerByte;;mcc_generat
      +                          ed_files/application/MCP9844_temp_sensor.c: 81:     temperatureData = i2c_read2ByteRegis
      +                          ter((0x18), (0x05));
 15793     0B65  3005               	movlw	5
 15794     0B66  0140               	movlb	0	; select bank0
 15795     0B67  00A4               	movwf	i2c_read2ByteRegister@reg
 15796     0B68  3018               	movlw	24
 15797     0B69  3187  2734  318B   	fcall	_i2c_read2ByteRegister
 15798     0B6C  0140               	movlb	0	; select bank0
 15799     0B6D  0825               	movf	?_i2c_read2ByteRegister+1,w
 15800     0B6E  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 15801     0B6F  0824               	movf	?_i2c_read2ByteRegister,w
 15802     0B70  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 15803     0B71                     l13272:
 15804                           
 15805                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 82:     upperByte = ((temperatur
      +                          eData & (0xFF00)) >> 8) & (0x1F);
 15806     0B71  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 15807     0B72  391F               	andlw	31
 15808     0B73  00B4               	movwf	MCP9844_CalcTemperature@upperByte
 15809     0B74                     l13274:
 15810                           
 15811                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 83:     lowerByte = (uint8_t)tem
      +                          peratureData;
 15812     0B74  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 15813     0B75  00B5               	movwf	MCP9844_CalcTemperature@lowerByte
 15814     0B76                     l13276:
 15815                           
 15816                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 85:     temperatureData = ((int1
      +                          6_t)(upperByte << 8) | lowerByte);
 15817     0B76  0835               	movf	MCP9844_CalcTemperature@lowerByte,w
 15818     0B77  00AF               	movwf	??_MCP9844_CalcTemperature
 15819     0B78  01B0               	clrf	??_MCP9844_CalcTemperature+1
 15820     0B79  0834               	movf	MCP9844_CalcTemperature@upperByte,w
 15821     0B7A  00B1               	movwf	??_MCP9844_CalcTemperature+2
 15822     0B7B  01B2               	clrf	??_MCP9844_CalcTemperature+3
 15823     0B7C  0831               	movf	??_MCP9844_CalcTemperature+2,w
 15824     0B7D  00B2               	movwf	??_MCP9844_CalcTemperature+3
 15825     0B7E  01B1               	clrf	??_MCP9844_CalcTemperature+2
 15826     0B7F  082F               	movf	??_MCP9844_CalcTemperature,w
 15827     0B80  0431               	iorwf	??_MCP9844_CalcTemperature+2,w
 15828     0B81  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 15829     0B82  0830               	movf	??_MCP9844_CalcTemperature+1,w
 15830     0B83  0432               	iorwf	??_MCP9844_CalcTemperature+3,w
 15831     0B84  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 15832     0B85                     l13278:
 15833                           
 15834                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 87:     return temperatureData;
 15835     0B85  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 15836     0B86  00AE               	movwf	?_MCP9844_CalcTemperature+1
 15837     0B87  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 15838     0B88  00AD               	movwf	?_MCP9844_CalcTemperature
 15839     0B89                     l71:
 15840     0B89  0008               	return
 15841     0B8A                     __end_of_MCP9844_CalcTemperature:
 15842                           
 15843                           	psect	text45
 15844     0734                     __ptext45:	
 15845 ;; *************** function _i2c_read2ByteRegister *****************
 15846 ;; Defined at:
 15847 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15848 ;; Parameters:    Size  Location     Type
 15849 ;;  address         1    wreg     unsigned char 
 15850 ;;  reg             1    4[BANK0 ] unsigned char 
 15851 ;; Auto vars:     Size  Location     Type
 15852 ;;  address         1   10[BANK0 ] unsigned char 
 15853 ;;  result          2   11[BANK0 ] unsigned short 
 15854 ;; Return value:  Size  Location     Type
 15855 ;;                  2    4[BANK0 ] unsigned short 
 15856 ;; Registers used:
 15857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15858 ;; Tracked objects:
 15859 ;;		On entry : 0/0
 15860 ;;		On exit  : 0/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15866 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15867 ;;Total ram usage:        9 bytes
 15868 ;; Hardware stack levels used: 1
 15869 ;; Hardware stack levels required when called: 12
 15870 ;; This function calls:
 15871 ;;		_I2C1_Close
 15872 ;;		_I2C1_MasterWrite
 15873 ;;		_I2C1_Open
 15874 ;;		_I2C1_SetAddressNackCallback
 15875 ;;		_I2C1_SetBuffer
 15876 ;;		_I2C1_SetDataCompleteCallback
 15877 ;; This function is called by:
 15878 ;;		_MCP9844_CalcTemperature
 15879 ;;		_MCP9844_GetManufacture
 15880 ;;		_MCP9844_GetDevice
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884     0734                     _i2c_read2ByteRegister:	
 15885                           ;psect for function _i2c_read2ByteRegister
 15886                           
 15887                           
 15888                           ;incstack = 0
 15889                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15890                           ;i2c_read2ByteRegister@address stored from wreg
 15891     0734  0140               	movlb	0	; select bank0
 15892     0735  00AA               	movwf	i2c_read2ByteRegister@address
 15893     0736                     l13196:
 15894     0736                     l13198:	
 15895                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 15896                           
 15897     0736  0140               	movlb	0	; select bank0
 15898     0737  082A               	movf	i2c_read2ByteRegister@address,w
 15899     0738  318E  26A0  3187   	fcall	_I2C1_Open
 15900     073B  3A00               	xorlw	0
 15901     073C  1903               	skipnz
 15902     073D  2F3F               	goto	u10201
 15903     073E  2F40               	goto	u10200
 15904     073F                     u10201:
 15905     073F  2F36               	goto	l13198
 15906     0740                     u10200:
 15907     0740                     l13200:
 15908                           
 15909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 15910     0740  306B               	movlw	low _rd2RegCompleteHandler
 15911     0741  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 15912     0742  3008               	movlw	high _rd2RegCompleteHandler
 15913     0743  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15914     0744  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 15915     0745  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 15916     0746  3197  2787  3187   	fcall	_I2C1_SetDataCompleteCallback
 15917     0749                     l13202:
 15918                           
 15919                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 15920     0749  3001               	movlw	1
 15921     074A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15922     074B  3000               	movlw	0
 15923     074C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15924     074D  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 15925     074E  3197  27F2  3187   	fcall	_I2C1_SetBuffer
 15926     0751                     l13204:
 15927                           
 15928                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 15929     0751  3000               	movlw	0
 15930     0752  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 15931     0753  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 15932     0754  3000               	movlw	0
 15933     0755  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 15934     0756  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 15935     0757  3197  2792  3187   	fcall	_I2C1_SetAddressNackCallback
 15936     075A                     l13206:
 15937                           
 15938                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 15939     075A  3196  269B  3187   	fcall	_I2C1_MasterWrite
 15940     075D                     l13208:	
 15941                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 15942                           
 15943     075D  3189  219C  3187   	fcall	_I2C1_Close
 15944     0760  3A01               	xorlw	1
 15945     0761  1903               	skipnz
 15946     0762  2F64               	goto	u10211
 15947     0763  2F65               	goto	u10210
 15948     0764                     u10211:
 15949     0764  2F5D               	goto	l13208
 15950     0765                     u10210:
 15951     0765                     l13210:
 15952                           
 15953                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 15954     0765  0140               	movlb	0	; select bank0
 15955     0766  082C               	movf	i2c_read2ByteRegister@result+1,w
 15956     0767  00A7               	movwf	??_i2c_read2ByteRegister+1
 15957     0768  082B               	movf	i2c_read2ByteRegister@result,w
 15958     0769  00A6               	movwf	??_i2c_read2ByteRegister
 15959     076A  0827               	movf	??_i2c_read2ByteRegister+1,w
 15960     076B  00A6               	movwf	??_i2c_read2ByteRegister
 15961     076C  01A7               	clrf	??_i2c_read2ByteRegister+1
 15962     076D  082B               	movf	i2c_read2ByteRegister@result,w
 15963     076E  00A9               	movwf	??_i2c_read2ByteRegister+3
 15964     076F  01A8               	clrf	??_i2c_read2ByteRegister+2
 15965     0770  0826               	movf	??_i2c_read2ByteRegister,w
 15966     0771  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 15967     0772  00A4               	movwf	?_i2c_read2ByteRegister
 15968     0773  0827               	movf	??_i2c_read2ByteRegister+1,w
 15969     0774  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 15970     0775  00A5               	movwf	?_i2c_read2ByteRegister+1
 15971     0776                     l543:
 15972     0776  0008               	return
 15973     0777                     __end_of_i2c_read2ByteRegister:
 15974                           
 15975                           	psect	text46
 15976     0249                     __ptext46:	
 15977 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 15978 ;; Defined at:
 15979 ;;		line 380 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  serialData      1    wreg     PTR unsigned char 
 15982 ;;		 -> lightBlueSerial(80), 
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;  serialData      1    9[COMMON] PTR unsigned char 
 15985 ;;		 -> lightBlueSerial(80), 
 15986 ;;  length          1    8[COMMON] unsigned char 
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  1    wreg      void 
 15989 ;; Registers used:
 15990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15991 ;; Tracked objects:
 15992 ;;		On entry : 0/0
 15993 ;;		On exit  : 0/0
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15999 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16000 ;;Total ram usage:        3 bytes
 16001 ;; Hardware stack levels used: 1
 16002 ;; Hardware stack levels required when called: 6
 16003 ;; This function calls:
 16004 ;;		_RN487X_Write
 16005 ;;		_strlen
 16006 ;; This function is called by:
 16007 ;;		_main
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011     0249                     _LIGHTBLUE_SendSerialData:	
 16012                           ;psect for function _LIGHTBLUE_SendSerialData
 16013                           
 16014                           
 16015                           ;incstack = 0
 16016                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16017                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 16018     0249  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 16019     024A                     l13714:
 16020                           
 16021                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:     uint8_t length = strlen(s
      +                          erialData) * 2;
 16022     024A  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16023     024B  00F1               	movwf	strlen@s
 16024     024C  3002               	movlw	2
 16025     024D  00F2               	movwf	strlen@s+1
 16026     024E  318A  2215  3182   	fcall	_strlen
 16027     0251  0871               	movf	?_strlen,w
 16028     0252  0709               	addwf	9,w
 16029     0253  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 16030     0254                     l13716:
 16031                           
 16032                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 383:     RN487X.Write(('['));
 16033     0254  305B               	movlw	91
 16034     0255  00F6               	movwf	RN487X_Write@txData
 16035     0256  3068               	movlw	low (_RN487X| (0+32768))
 16036     0257  0084               	movwf	4
 16037     0258  3090               	movlw	high (_RN487X| (0+32768))
 16038     0259  0085               	movwf	5
 16039     025A  3F01               	moviw [1]fsr0
 16040     025B  008A               	movwf	10
 16041     025C  3F00               	moviw [0]fsr0
 16042     025D  000A               	callw
 16043     025E  3182               	pagesel	$
 16044     025F                     l13718:
 16045                           
 16046                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 384:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 16047     025F  0140               	movlb	0	; select bank0
 16048     0260  086D               	movf	_sequenceNumber,w
 16049     0261  390F               	andlw	15
 16050     0262  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 16051     0263  0086               	movwf	6
 16052     0264  3001               	movlw	1	; select bank2/3
 16053     0265  0087               	movwf	7
 16054     0266  0801               	movf	1,w
 16055     0267  00F6               	movwf	RN487X_Write@txData
 16056     0268  3068               	movlw	low (_RN487X| (0+32768))
 16057     0269  0084               	movwf	4
 16058     026A  3090               	movlw	high (_RN487X| (0+32768))
 16059     026B  0085               	movwf	5
 16060     026C  3F01               	moviw [1]fsr0
 16061     026D  008A               	movwf	10
 16062     026E  3F00               	moviw [0]fsr0
 16063     026F  000A               	callw
 16064     0270  3182               	pagesel	$
 16065     0271                     l13720:
 16066     0271  3001               	movlw	1
 16067     0272  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16068     0273  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16069     0274  0140               	movlb	0	; select bank0
 16070     0275  07ED               	addwf	_sequenceNumber,f
 16071     0276                     l13722:
 16072                           
 16073                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 385:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 16074     0276  3053               	movlw	83
 16075     0277  00F6               	movwf	RN487X_Write@txData
 16076     0278  3068               	movlw	low (_RN487X| (0+32768))
 16077     0279  0084               	movwf	4
 16078     027A  3090               	movlw	high (_RN487X| (0+32768))
 16079     027B  0085               	movwf	5
 16080     027C  3F01               	moviw [1]fsr0
 16081     027D  008A               	movwf	10
 16082     027E  3F00               	moviw [0]fsr0
 16083     027F  000A               	callw
 16084     0280  3182               	pagesel	$
 16085     0281                     l13724:
 16086                           
 16087                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 16088     0281  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16089     0282  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16090     0283  3004               	movlw	4
 16091     0284                     u10615:
 16092     0284  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16093     0285  0B89               	decfsz	9,f
 16094     0286  2A84               	goto	u10615
 16095     0287  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16096     0288  390F               	andlw	15
 16097     0289  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 16098     028A  0086               	movwf	6
 16099     028B  3001               	movlw	1	; select bank2/3
 16100     028C  0087               	movwf	7
 16101     028D  0801               	movf	1,w
 16102     028E  00F6               	movwf	RN487X_Write@txData
 16103     028F  3068               	movlw	low (_RN487X| (0+32768))
 16104     0290  0084               	movwf	4
 16105     0291  3090               	movlw	high (_RN487X| (0+32768))
 16106     0292  0085               	movwf	5
 16107     0293  3F01               	moviw [1]fsr0
 16108     0294  008A               	movwf	10
 16109     0295  3F00               	moviw [0]fsr0
 16110     0296  000A               	callw
 16111     0297  3182               	pagesel	$
 16112     0298                     l13726:
 16113                           
 16114                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 387:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 16115     0298  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16116     0299  390F               	andlw	15
 16117     029A  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 16118     029B  0086               	movwf	6
 16119     029C  3001               	movlw	1	; select bank2/3
 16120     029D  0087               	movwf	7
 16121     029E  0801               	movf	1,w
 16122     029F  00F6               	movwf	RN487X_Write@txData
 16123     02A0  3068               	movlw	low (_RN487X| (0+32768))
 16124     02A1  0084               	movwf	4
 16125     02A2  3090               	movlw	high (_RN487X| (0+32768))
 16126     02A3  0085               	movwf	5
 16127     02A4  3F01               	moviw [1]fsr0
 16128     02A5  008A               	movwf	10
 16129     02A6  3F00               	moviw [0]fsr0
 16130     02A7  000A               	callw
 16131     02A8  3182               	pagesel	$
 16132                           
 16133                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     while (*serialData) {
 16134     02A9  2ADE               	goto	l13732
 16135     02AA                     l13728:
 16136                           
 16137                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 16138     02AA  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16139     02AB  0086               	movwf	6
 16140     02AC  3002               	movlw	2	; select bank4/5
 16141     02AD  0087               	movwf	7
 16142     02AE  0801               	movf	1,w
 16143     02AF  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16144     02B0  3004               	movlw	4
 16145     02B1                     u10625:
 16146     02B1  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16147     02B2  0B89               	decfsz	9,f
 16148     02B3  2AB1               	goto	u10625
 16149     02B4  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16150     02B5  390F               	andlw	15
 16151     02B6  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 16152     02B7  0086               	movwf	6
 16153     02B8  3001               	movlw	1	; select bank2/3
 16154     02B9  0087               	movwf	7
 16155     02BA  0801               	movf	1,w
 16156     02BB  00F6               	movwf	RN487X_Write@txData
 16157     02BC  3068               	movlw	low (_RN487X| (0+32768))
 16158     02BD  0084               	movwf	4
 16159     02BE  3090               	movlw	high (_RN487X| (0+32768))
 16160     02BF  0085               	movwf	5
 16161     02C0  3F01               	moviw [1]fsr0
 16162     02C1  008A               	movwf	10
 16163     02C2  3F00               	moviw [0]fsr0
 16164     02C3  000A               	callw
 16165     02C4  3182               	pagesel	$
 16166                           
 16167                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 16168     02C5  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16169     02C6  0086               	movwf	6
 16170     02C7  3002               	movlw	2	; select bank4/5
 16171     02C8  0087               	movwf	7
 16172     02C9  0801               	movf	1,w
 16173     02CA  390F               	andlw	15
 16174     02CB  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 16175     02CC  0086               	movwf	6
 16176     02CD  3001               	movlw	1	; select bank2/3
 16177     02CE  0087               	movwf	7
 16178     02CF  0801               	movf	1,w
 16179     02D0  00F6               	movwf	RN487X_Write@txData
 16180     02D1  3068               	movlw	low (_RN487X| (0+32768))
 16181     02D2  0084               	movwf	4
 16182     02D3  3090               	movlw	high (_RN487X| (0+32768))
 16183     02D4  0085               	movwf	5
 16184     02D5  3F01               	moviw [1]fsr0
 16185     02D6  008A               	movwf	10
 16186     02D7  3F00               	moviw [0]fsr0
 16187     02D8  000A               	callw
 16188     02D9  3182               	pagesel	$
 16189     02DA                     l13730:
 16190     02DA  3001               	movlw	1
 16191     02DB  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16192     02DC  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16193     02DD  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 16194     02DE                     l13732:
 16195                           
 16196                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     while (*serialData) {
 16197     02DE  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16198     02DF  0086               	movwf	6
 16199     02E0  3002               	movlw	2	; select bank4/5
 16200     02E1  0087               	movwf	7
 16201     02E2  0801               	movf	1,w
 16202     02E3  1D03               	btfss	3,2
 16203     02E4  2AE6               	goto	u10631
 16204     02E5  2AE7               	goto	u10630
 16205     02E6                     u10631:
 16206     02E6  2AAA               	goto	l13728
 16207     02E7                     u10630:
 16208     02E7                     l13734:
 16209                           
 16210                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((']'));
 16211     02E7  305D               	movlw	93
 16212     02E8  00F6               	movwf	RN487X_Write@txData
 16213     02E9  3068               	movlw	low (_RN487X| (0+32768))
 16214     02EA  0084               	movwf	4
 16215     02EB  3090               	movlw	high (_RN487X| (0+32768))
 16216     02EC  0085               	movwf	5
 16217     02ED  3F01               	moviw [1]fsr0
 16218     02EE  008A               	movwf	10
 16219     02EF  3F00               	moviw [0]fsr0
 16220     02F0  000A               	callw
 16221     02F1  3182               	pagesel	$
 16222     02F2                     l142:
 16223     02F2  0008               	return
 16224     02F3                     __end_of_LIGHTBLUE_SendSerialData:
 16225                           
 16226                           	psect	text47
 16227     0E37                     __ptext47:	
 16228 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 16229 ;; Defined at:
 16230 ;;		line 365 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;		None
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;  payload        19    2[BANK0 ] unsigned char [19]
 16235 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 16236 ;;  value           1   21[BANK0 ] unsigned char 
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16247 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16249 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16250 ;;Total ram usage:       23 bytes
 16251 ;; Hardware stack levels used: 1
 16252 ;; Hardware stack levels required when called: 7
 16253 ;; This function calls:
 16254 ;;		_LIGHTBLUE_SendPacket
 16255 ;;		_LIGHTBLUE_SplitByte
 16256 ;;		_strlen
 16257 ;; This function is called by:
 16258 ;;		_main
 16259 ;; This function uses a non-reentrant model
 16260 ;;
 16261                           
 16262     0E37                     _LIGHTBLUE_SendProtocolVersion:	
 16263                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 16264                           
 16265     0E37                     l13702:	
 16266                           ;incstack = 0
 16267                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16268                           
 16269                           
 16270                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 366:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 367:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 368:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 370:     *payload = '\0';
 16271     0E37  0140               	movlb	0	; select bank0
 16272     0E38  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 16273                           
 16274                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 372:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 16275     0E39  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 16276     0E3A  2E4F               	goto	l13710
 16277     0E3B                     l13704:
 16278                           
 16279                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 373:         value = protocol_vers
      +                          ion_number[dataIndex];
 16280     0E3B  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16281     0E3C  3E22               	addlw	low (STR_1| (0+32768))
 16282     0E3D  0084               	movwf	4
 16283     0E3E  3098               	movlw	high (STR_1| (0+32768))
 16284     0E3F  1803               	skipnc
 16285     0E40  3E01               	addlw	1
 16286     0E41  0085               	movwf	5
 16287     0E42  0800               	movf	0,w	;code access
 16288     0E43  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 16289     0E44                     l13706:
 16290                           
 16291                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 374:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 16292     0E44  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 16293     0E45  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16294     0E46  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16295     0E47  318E  2606  318E   	fcall	_LIGHTBLUE_SplitByte
 16296     0E4A                     l13708:
 16297                           
 16298                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 375:     }
 16299     0E4A  3001               	movlw	1
 16300     0E4B  0140               	movlb	0	; select bank0
 16301     0E4C  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 16302     0E4D  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 16303     0E4E  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 16304     0E4F                     l13710:
 16305     0E4F  3022               	movlw	low (STR_1| (0+32768))
 16306     0E50  00F1               	movwf	strlen@s
 16307     0E51  3098               	movlw	high (STR_1| (0+32768))
 16308     0E52  00F2               	movwf	strlen@s+1
 16309     0E53  318A  2215  318E   	fcall	_strlen
 16310     0E56  0140               	movlb	0	; select bank0
 16311     0E57  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16312     0E58  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 16313     0E59  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 16314     0E5A  0872               	movf	?_strlen+1,w
 16315     0E5B  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 16316     0E5C  1D03               	skipz
 16317     0E5D  2E60               	goto	u10605
 16318     0E5E  0871               	movf	?_strlen,w
 16319     0E5F  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 16320     0E60                     u10605:
 16321     0E60  1C03               	skipc
 16322     0E61  2E63               	goto	u10601
 16323     0E62  2E64               	goto	u10600
 16324     0E63                     u10601:
 16325     0E63  2E3B               	goto	l13704
 16326     0E64                     u10600:
 16327     0E64                     l13712:
 16328                           
 16329                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 16330     0E64  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16331     0E65  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 16332     0E66  3056               	movlw	86
 16333     0E67  3182  22F3  318E   	fcall	_LIGHTBLUE_SendPacket
 16334     0E6A                     l136:
 16335     0E6A  0008               	return
 16336     0E6B                     __end_of_LIGHTBLUE_SendProtocolVersion:
 16337                           
 16338                           	psect	text48
 16339     0904                     __ptext48:	
 16340 ;; *************** function _LIGHTBLUE_PushButton *****************
 16341 ;; Defined at:
 16342 ;;		line 337 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;		None
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;  payload         3    1[BANK0 ] unsigned char [3]
 16347 ;;  button          1    0[BANK0 ] unsigned char 
 16348 ;; Return value:  Size  Location     Type
 16349 ;;                  1    wreg      void 
 16350 ;; Registers used:
 16351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16352 ;; Tracked objects:
 16353 ;;		On entry : 0/0
 16354 ;;		On exit  : 0/0
 16355 ;;		Unchanged: 0/0
 16356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16358 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16361 ;;Total ram usage:        4 bytes
 16362 ;; Hardware stack levels used: 1
 16363 ;; Hardware stack levels required when called: 7
 16364 ;; This function calls:
 16365 ;;		_LIGHTBLUE_GetButtonValue
 16366 ;;		_LIGHTBLUE_SendPacket
 16367 ;;		_LIGHTBLUE_SplitByte
 16368 ;; This function is called by:
 16369 ;;		_main
 16370 ;; This function uses a non-reentrant model
 16371 ;;
 16372                           
 16373     0904                     _LIGHTBLUE_PushButton:	
 16374                           ;psect for function _LIGHTBLUE_PushButton
 16375                           
 16376     0904                     l13680:	
 16377                           ;incstack = 0
 16378                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16379                           
 16380                           
 16381                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 339:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 16382     0904  3196  26BD  3189   	fcall	_LIGHTBLUE_GetButtonValue
 16383     0907  0140               	movlb	0	; select bank0
 16384     0908  00A0               	movwf	LIGHTBLUE_PushButton@button
 16385     0909                     l13682:
 16386                           
 16387                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 341:     *payload = '\0';
 16388     0909  01A1               	clrf	LIGHTBLUE_PushButton@payload
 16389     090A                     l13684:
 16390                           
 16391                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 16392     090A  0820               	movf	LIGHTBLUE_PushButton@button,w
 16393     090B  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16394     090C  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16395     090D  318E  2606  3189   	fcall	_LIGHTBLUE_SplitByte
 16396     0910                     l13686:
 16397                           
 16398                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 344:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 16399     0910  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16400     0911  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 16401     0912  3050               	movlw	80
 16402     0913  3182  22F3  3189   	fcall	_LIGHTBLUE_SendPacket
 16403     0916                     l127:
 16404     0916  0008               	return
 16405     0917                     __end_of_LIGHTBLUE_PushButton:
 16406                           
 16407                           	psect	text49
 16408     16BD                     __ptext49:	
 16409 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 16410 ;; Defined at:
 16411 ;;		line 470 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;		None
 16414 ;; Auto vars:     Size  Location     Type
 16415 ;;		None
 16416 ;; Return value:  Size  Location     Type
 16417 ;;                  1    wreg      unsigned char 
 16418 ;; Registers used:
 16419 ;;		wreg, status,2, status,0
 16420 ;; Tracked objects:
 16421 ;;		On entry : 0/0
 16422 ;;		On exit  : 0/0
 16423 ;;		Unchanged: 0/0
 16424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16429 ;;Total ram usage:        0 bytes
 16430 ;; Hardware stack levels used: 1
 16431 ;; Hardware stack levels required when called: 4
 16432 ;; This function calls:
 16433 ;;		Nothing
 16434 ;; This function is called by:
 16435 ;;		_LIGHTBLUE_PushButton
 16436 ;; This function uses a non-reentrant model
 16437 ;;
 16438                           
 16439     16BD                     _LIGHTBLUE_GetButtonValue:	
 16440                           ;psect for function _LIGHTBLUE_GetButtonValue
 16441                           
 16442     16BD                     l13432:	
 16443                           ;incstack = 0
 16444                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 16445                           
 16446                           
 16447                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     return (0x01) - PORTAbits
      +                          .RA7;
 16448     16BD  0140               	movlb	0	; select bank0
 16449     16BE  0D0C               	rlf	12,w	;volatile
 16450     16BF  0D0C               	rlf	12,w	;volatile
 16451     16C0  3901               	andlw	1
 16452     16C1  3C01               	sublw	1
 16453     16C2                     l199:
 16454     16C2  0008               	return
 16455     16C3                     __end_of_LIGHTBLUE_GetButtonValue:
 16456                           
 16457                           	psect	text50
 16458     017D                     __ptext50:	
 16459 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 16460 ;; Defined at:
 16461 ;;		line 395 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  receivedByte    1    wreg     unsigned char 
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 16466 ;; Return value:  Size  Location     Type
 16467 ;;                  1    wreg      void 
 16468 ;; Registers used:
 16469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16476 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16478 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16479 ;;Total ram usage:        9 bytes
 16480 ;; Hardware stack levels used: 1
 16481 ;; Hardware stack levels required when called: 11
 16482 ;; This function calls:
 16483 ;;		_LIGHTBLUE_PerformAction
 16484 ;; This function is called by:
 16485 ;;		_main
 16486 ;; This function uses a non-reentrant model
 16487 ;;
 16488                           
 16489     017D                     _LIGHTBLUE_ParseIncomingPacket:	
 16490                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 16491                           
 16492                           
 16493                           ;incstack = 0
 16494                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16495                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 16496     017D  0140               	movlb	0	; select bank0
 16497     017E  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 16498     017F                     l13736:
 16499                           
 16500                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 398:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 399:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 401:   
      +                            switch (parserState) {
 16501     017F  2A29               	goto	l13796
 16502     0180                     l13738:
 16503                           
 16504                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 404:             parserState = PAC
      +                          KET_ID;
 16505     0180  3002               	movlw	2
 16506     0181  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16507                           
 16508                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 405:             break;
 16509     0182  2A48               	goto	l184
 16510     0183                     l13740:
 16511                           
 16512                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 407:             packetID = receiv
      +                          edByte;
 16513     0183  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16514     0184  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 16515                           
 16516                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 408:             parserState = PAY
      +                          LOAD_SIZE_0;
 16517     0185  3003               	movlw	3
 16518     0186  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16519                           
 16520                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             break;
 16521     0187  2A48               	goto	l184
 16522     0188                     l13742:
 16523                           
 16524                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16525     0188  303A               	movlw	58
 16526     0189  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16527     018A  1C03               	skipc
 16528     018B  298D               	goto	u10641
 16529     018C  298E               	goto	u10640
 16530     018D                     u10641:
 16531     018D  2997               	goto	l13746
 16532     018E                     u10640:
 16533     018E                     l13744:
 16534     018E  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16535     018F  395F               	andlw	95
 16536     0190  3EC9               	addlw	201
 16537     0191  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$421
 16538     0192  30FF               	movlw	255
 16539     0193  1803               	skipnc
 16540     0194  3000               	movlw	0
 16541     0195  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$421+1
 16542     0196  299E               	goto	l161
 16543     0197                     l13746:
 16544     0197  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16545     0198  3ED0               	addlw	208
 16546     0199  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$421
 16547     019A  30FF               	movlw	255
 16548     019B  1803               	skipnc
 16549     019C  3000               	movlw	0
 16550     019D  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$421+1
 16551     019E                     l161:
 16552     019E  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$421,w
 16553     019F  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16554                           
 16555                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             parserState = PAY
      +                          LOAD_SIZE_1;
 16556     01A0  3004               	movlw	4
 16557     01A1  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16558                           
 16559                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             break;
 16560     01A2  2A48               	goto	l184
 16561     01A3                     l13748:
 16562                           
 16563                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 415:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 16564     01A3  303A               	movlw	58
 16565     01A4  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16566     01A5  1C03               	skipc
 16567     01A6  29A8               	goto	u10651
 16568     01A7  29A9               	goto	u10650
 16569     01A8                     u10651:
 16570     01A8  29B2               	goto	l13752
 16571     01A9                     u10650:
 16572     01A9                     l13750:
 16573     01A9  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16574     01AA  395F               	andlw	95
 16575     01AB  3EC9               	addlw	201
 16576     01AC  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$422
 16577     01AD  30FF               	movlw	255
 16578     01AE  1803               	skipnc
 16579     01AF  3000               	movlw	0
 16580     01B0  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$422+1
 16581     01B1  29B9               	goto	l13754
 16582     01B2                     l13752:
 16583     01B2  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16584     01B3  3ED0               	addlw	208
 16585     01B4  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$422
 16586     01B5  30FF               	movlw	255
 16587     01B6  1803               	skipnc
 16588     01B7  3000               	movlw	0
 16589     01B8  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$422+1
 16590     01B9                     l13754:
 16591     01B9  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16592     01BA  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16593     01BB  3003               	movlw	3
 16594     01BC                     u10665:
 16595     01BC  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 16596     01BD  3EFF               	addlw	-1
 16597     01BE  1D03               	skipz
 16598     01BF  29BC               	goto	u10665
 16599     01C0  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 16600     01C1  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$422,w
 16601     01C2  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16602     01C3                     l13756:
 16603                           
 16604                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             parserState = PAY
      +                          LOAD_0;
 16605     01C3  3005               	movlw	5
 16606     01C4  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16607                           
 16608                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             break;
 16609     01C5  2A48               	goto	l184
 16610     01C6                     l13758:
 16611                           
 16612                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 419:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16613     01C6  303A               	movlw	58
 16614     01C7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16615     01C8  1C03               	skipc
 16616     01C9  29CB               	goto	u10671
 16617     01CA  29CC               	goto	u10670
 16618     01CB                     u10671:
 16619     01CB  29D5               	goto	l13762
 16620     01CC                     u10670:
 16621     01CC                     l13760:
 16622     01CC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16623     01CD  395F               	andlw	95
 16624     01CE  3EC9               	addlw	201
 16625     01CF  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16626     01D0  30FF               	movlw	255
 16627     01D1  1803               	skipnc
 16628     01D2  3000               	movlw	0
 16629     01D3  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16630     01D4  29DC               	goto	l13764
 16631     01D5                     l13762:
 16632     01D5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16633     01D6  3ED0               	addlw	208
 16634     01D7  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16635     01D8  30FF               	movlw	255
 16636     01D9  1803               	skipnc
 16637     01DA  3000               	movlw	0
 16638     01DB  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16639     01DC                     l13764:
 16640                           
 16641                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length--;
 16642     01DC  3001               	movlw	1
 16643     01DD  02EB               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 16644     01DE                     l13766:
 16645                           
 16646                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             if (length == 0) 
      +                          {
 16647     01DE  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16648     01DF  1D03               	btfss	3,2
 16649     01E0  29E2               	goto	u10681
 16650     01E1  29E3               	goto	u10680
 16651     01E2                     u10681:
 16652     01E2  29E5               	goto	l13770
 16653     01E3                     u10680:
 16654     01E3                     l13768:
 16655                           
 16656                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:                 parserState =
      +                           IDLE;
 16657     01E3  01EC               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 16658                           
 16659                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 423:             } else {
 16660     01E4  2A48               	goto	l184
 16661     01E5                     l13770:
 16662                           
 16663                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:                 parserState =
      +                           PAYLOAD_1;
 16664     01E5  3006               	movlw	6
 16665     01E6  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16666     01E7  2A48               	goto	l184
 16667     01E8                     l13772:
 16668                           
 16669                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16670     01E8  303A               	movlw	58
 16671     01E9  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16672     01EA  1C03               	skipc
 16673     01EB  29ED               	goto	u10691
 16674     01EC  29EE               	goto	u10690
 16675     01ED                     u10691:
 16676     01ED  29F7               	goto	l13776
 16677     01EE                     u10690:
 16678     01EE                     l13774:
 16679     01EE  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16680     01EF  395F               	andlw	95
 16681     01F0  3EC9               	addlw	201
 16682     01F1  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$423
 16683     01F2  30FF               	movlw	255
 16684     01F3  1803               	skipnc
 16685     01F4  3000               	movlw	0
 16686     01F5  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$423+1
 16687     01F6  29FE               	goto	l13778
 16688     01F7                     l13776:
 16689     01F7  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16690     01F8  3ED0               	addlw	208
 16691     01F9  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$423
 16692     01FA  30FF               	movlw	255
 16693     01FB  1803               	skipnc
 16694     01FC  3000               	movlw	0
 16695     01FD  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$423+1
 16696     01FE                     l13778:
 16697     01FE  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 16698     01FF  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 16699     0200  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 16700     0201  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16701     0202  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 16702     0203  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16703     0204  30F0               	movlw	240
 16704     0205  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16705     0206  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 16706     0207  390F               	andlw	15
 16707     0208  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16708     0209  30F0               	movlw	240
 16709     020A  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 16710     020B  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$423,w
 16711     020C  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 16712     020D  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16713     020E  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$423+1,w
 16714     020F  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 16715     0210  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16716     0211                     l13780:
 16717                           
 16718                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 16719     0211  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 16720     0212  00A7               	movwf	LIGHTBLUE_PerformAction@data
 16721     0213  086A               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 16722     0214  318E  26D6  3181   	fcall	_LIGHTBLUE_PerformAction
 16723     0217                     l13782:
 16724                           
 16725                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 430:             length--;
 16726     0217  3001               	movlw	1
 16727     0218  0140               	movlb	0	; select bank0
 16728     0219  02EB               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 16729     021A                     l13784:
 16730                           
 16731                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 431:             if (length == 0) 
      +                          {
 16732     021A  086B               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16733     021B  1D03               	btfss	3,2
 16734     021C  2A1E               	goto	u10701
 16735     021D  2A1F               	goto	u10700
 16736     021E                     u10701:
 16737     021E  29C3               	goto	l13756
 16738     021F                     u10700:
 16739     021F  29E3               	goto	l13768
 16740     0220                     l13790:
 16741                           
 16742                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 439:             if (receivedByte 
      +                          == ('[')) {
 16743     0220  305B               	movlw	91
 16744     0221  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16745     0222  1D03               	btfss	3,2
 16746     0223  2A25               	goto	u10711
 16747     0224  2A26               	goto	u10710
 16748     0225                     u10711:
 16749     0225  2A48               	goto	l184
 16750     0226                     u10710:
 16751     0226                     l13792:
 16752                           
 16753                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 440:                 parserState =
      +                           SEQUENCE_NUMBER;
 16754     0226  01EC               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 16755     0227  0AEC               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 16756     0228  2A48               	goto	l184
 16757     0229                     l13796:
 16758     0229  086C               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 16759     022A  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16760     022B  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 16761                           
 16762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16763                           ; Switch size 1, requested type "simple"
 16764                           ; Number of cases is 1, Range of values is 0 to 0
 16765                           ; switch strategies available:
 16766                           ; Name         Instructions Cycles
 16767                           ; simple_byte            4     3 (average)
 16768                           ; direct_byte            8     6 (fixed)
 16769                           ; jumptable            260     6 (fixed)
 16770                           ;	Chosen strategy is simple_byte
 16771     022C  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 16772     022D  3A00               	xorlw	0	; case 0
 16773     022E  1903               	skipnz
 16774     022F  2A31               	goto	l16484
 16775     0230  2A20               	goto	l13790
 16776     0231                     l16484:
 16777                           
 16778                           ; Switch size 1, requested type "simple"
 16779                           ; Number of cases is 7, Range of values is 0 to 6
 16780                           ; switch strategies available:
 16781                           ; Name         Instructions Cycles
 16782                           ; direct_byte           20     6 (fixed)
 16783                           ; simple_byte           22    12 (average)
 16784                           ; jumptable            260     6 (fixed)
 16785                           ;	Chosen strategy is simple_byte
 16786     0231  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 16787     0232  3A00               	xorlw	0	; case 0
 16788     0233  1903               	skipnz
 16789     0234  2A20               	goto	l13790
 16790     0235  3A01               	xorlw	1	; case 1
 16791     0236  1903               	skipnz
 16792     0237  2980               	goto	l13738
 16793     0238  3A03               	xorlw	3	; case 2
 16794     0239  1903               	skipnz
 16795     023A  2983               	goto	l13740
 16796     023B  3A01               	xorlw	1	; case 3
 16797     023C  1903               	skipnz
 16798     023D  2988               	goto	l13742
 16799     023E  3A07               	xorlw	7	; case 4
 16800     023F  1903               	skipnz
 16801     0240  29A3               	goto	l13748
 16802     0241  3A01               	xorlw	1	; case 5
 16803     0242  1903               	skipnz
 16804     0243  29C6               	goto	l13758
 16805     0244  3A03               	xorlw	3	; case 6
 16806     0245  1903               	skipnz
 16807     0246  29E8               	goto	l13772
 16808     0247  2A20               	goto	l13790
 16809     0248                     l184:
 16810     0248  0008               	return
 16811     0249                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 16812                           
 16813                           	psect	text51
 16814     0ED6                     __ptext51:	
 16815 ;; *************** function _LIGHTBLUE_PerformAction *****************
 16816 ;; Defined at:
 16817 ;;		line 494 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16818 ;; Parameters:    Size  Location     Type
 16819 ;;  id              1    wreg     unsigned char 
 16820 ;;  data            1    7[BANK0 ] unsigned char 
 16821 ;; Auto vars:     Size  Location     Type
 16822 ;;  id              1    9[BANK0 ] unsigned char 
 16823 ;;  led             1   10[BANK0 ] unsigned char 
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16836 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16837 ;;Total ram usage:        4 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; Hardware stack levels required when called: 10
 16840 ;; This function calls:
 16841 ;;		_EUSART1_Write
 16842 ;;		_EUSART2_Write
 16843 ;;		_LIGHTBLUE_SetErrorLedValue
 16844 ;; This function is called by:
 16845 ;;		_LIGHTBLUE_ParseIncomingPacket
 16846 ;; This function uses a non-reentrant model
 16847 ;;
 16848                           
 16849     0ED6                     _LIGHTBLUE_PerformAction:	
 16850                           ;psect for function _LIGHTBLUE_PerformAction
 16851                           
 16852                           
 16853                           ;incstack = 0
 16854                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16855                           ;LIGHTBLUE_PerformAction@id stored from wreg
 16856     0ED6  0140               	movlb	0	; select bank0
 16857     0ED7  00A9               	movwf	LIGHTBLUE_PerformAction@id
 16858     0ED8                     l13444:
 16859                           
 16860                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 497:     switch (id) {
 16861     0ED8  2F05               	goto	l13456
 16862     0ED9                     l13446:
 16863                           
 16864                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 499:             led = (data >> 4)
      +                           & (0x01);
 16865     0ED9  0827               	movf	LIGHTBLUE_PerformAction@data,w
 16866     0EDA  00A8               	movwf	??_LIGHTBLUE_PerformAction
 16867     0EDB  3004               	movlw	4
 16868     0EDC                     u10475:
 16869     0EDC  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 16870     0EDD  0B89               	decfsz	9,f
 16871     0EDE  2EDC               	goto	u10475
 16872     0EDF  0828               	movf	??_LIGHTBLUE_PerformAction,w
 16873     0EE0  3901               	andlw	1
 16874     0EE1  00AA               	movwf	LIGHTBLUE_PerformAction@led
 16875                           
 16876                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:             if (led == (0x00)
      +                          ) {
 16877     0EE2  082A               	movf	LIGHTBLUE_PerformAction@led,w
 16878     0EE3  1D03               	btfss	3,2
 16879     0EE4  2EE6               	goto	u10481
 16880     0EE5  2EE7               	goto	u10480
 16881     0EE6                     u10481:
 16882     0EE6  2EEF               	goto	l13450
 16883     0EE7                     u10480:
 16884     0EE7                     l13448:
 16885                           
 16886                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 501:                 if ((data & (
      +                          0x01)) == (0x00)) {
 16887     0EE7  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 16888     0EE8  2EEA               	goto	u10491
 16889     0EE9  2EEB               	goto	u10490
 16890     0EEA                     u10491:
 16891     0EEA  2EED               	goto	l221
 16892     0EEB                     u10490:
 16893     0EEB                     l218:	
 16894                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 502:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 16895                           
 16896     0EEB  1698               	bsf	24,5	;volatile
 16897     0EEC  2F0D               	goto	l227
 16898     0EED                     l221:	
 16899                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 16900                           
 16901     0EED  1298               	bcf	24,5	;volatile
 16902     0EEE  2F0D               	goto	l227
 16903     0EEF                     l13450:
 16904                           
 16905                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 16906     0EEF  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 16907     0EF0  2EF2               	goto	u10501
 16908     0EF1  2EF4               	goto	u10500
 16909     0EF2                     u10501:
 16910     0EF2  3001               	movlw	1
 16911     0EF3  2EF5               	goto	u10510
 16912     0EF4                     u10500:
 16913     0EF4  3000               	movlw	0
 16914     0EF5                     u10510:
 16915     0EF5  3188  2029  318E   	fcall	_LIGHTBLUE_SetErrorLedValue
 16916     0EF8  2F0D               	goto	l227
 16917     0EF9                     l13452:
 16918                           
 16919                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:             uart[UART_CDC].Wr
      +                          ite(data);
 16920     0EF9  0827               	movf	LIGHTBLUE_PerformAction@data,w
 16921     0EFA  00F1               	movwf	EUSART2_Write@txData
 16922     0EFB  3002               	movlw	low ((_uart+2)| (0+32768))
 16923     0EFC  0084               	movwf	4
 16924     0EFD  3090               	movlw	high ((_uart+2)| (0+32768))
 16925     0EFE  0085               	movwf	5
 16926     0EFF  3F01               	moviw [1]fsr0
 16927     0F00  008A               	movwf	10
 16928     0F01  3F00               	moviw [0]fsr0
 16929     0F02  000A               	callw
 16930     0F03  318E               	pagesel	$
 16931                           
 16932                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:             break;
 16933     0F04  2F0D               	goto	l227
 16934     0F05                     l13456:
 16935     0F05  0829               	movf	LIGHTBLUE_PerformAction@id,w
 16936                           
 16937                           ; Switch size 1, requested type "simple"
 16938                           ; Number of cases is 2, Range of values is 76 to 83
 16939                           ; switch strategies available:
 16940                           ; Name         Instructions Cycles
 16941                           ; simple_byte            7     4 (average)
 16942                           ; direct_byte           25     9 (fixed)
 16943                           ; jumptable            263     9 (fixed)
 16944                           ;	Chosen strategy is simple_byte
 16945     0F06  3A4C               	xorlw	76	; case 76
 16946     0F07  1903               	skipnz
 16947     0F08  2ED9               	goto	l13446
 16948     0F09  3A1F               	xorlw	31	; case 83
 16949     0F0A  1903               	skipnz
 16950     0F0B  2EF9               	goto	l13452
 16951     0F0C  2F0D               	goto	l227
 16952     0F0D                     l227:
 16953     0F0D  0008               	return
 16954     0F0E                     __end_of_LIGHTBLUE_PerformAction:
 16955                           
 16956                           	psect	text52
 16957     0829                     __ptext52:	
 16958 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 16959 ;; Defined at:
 16960 ;;		line 482 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16961 ;; Parameters:    Size  Location     Type
 16962 ;;  value           1    wreg     _Bool 
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;  value           1    6[BANK0 ] _Bool 
 16965 ;; Return value:  Size  Location     Type
 16966 ;;                  1    wreg      void 
 16967 ;; Registers used:
 16968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16969 ;; Tracked objects:
 16970 ;;		On entry : 0/0
 16971 ;;		On exit  : 0/0
 16972 ;;		Unchanged: 0/0
 16973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16977 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16978 ;;Total ram usage:        2 bytes
 16979 ;; Hardware stack levels used: 1
 16980 ;; Hardware stack levels required when called: 9
 16981 ;; This function calls:
 16982 ;;		_LIGHTBLUE_UpdateErrorLed
 16983 ;; This function is called by:
 16984 ;;		_LIGHTBLUE_PerformAction
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988     0829                     _LIGHTBLUE_SetErrorLedValue:	
 16989                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 16990                           
 16991                           
 16992                           ;incstack = 0
 16993                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16994                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 16995     0829  0140               	movlb	0	; select bank0
 16996     082A  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 16997     082B                     l13294:
 16998                           
 16999                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 17000     082B  3001               	movlw	1
 17001     082C  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 17002     082D  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 17003     082E  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 17004     082F  0855               	movf	_bitMap+1,w	;volatile
 17005     0830  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17006     0831  39FE               	andlw	-2
 17007     0832  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17008     0833  00D5               	movwf	_bitMap+1	;volatile
 17009     0834                     l13296:
 17010                           
 17011                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 17012     0834  318A  2263  3188   	fcall	_LIGHTBLUE_UpdateErrorLed
 17013     0837                     l208:
 17014     0837  0008               	return
 17015     0838                     __end_of_LIGHTBLUE_SetErrorLedValue:
 17016                           
 17017                           	psect	text53
 17018     0A63                     __ptext53:	
 17019 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 17020 ;; Defined at:
 17021 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17039 ;;Total ram usage:        0 bytes
 17040 ;; Hardware stack levels used: 1
 17041 ;; Hardware stack levels required when called: 8
 17042 ;; This function calls:
 17043 ;;		_RN487X_Delay
 17044 ;;		_RN487X_EnterCmdMode
 17045 ;;		_RN487X_EnterDataMode
 17046 ;;		_RN487X_SetOutputs
 17047 ;; This function is called by:
 17048 ;;		_LIGHTBLUE_SetErrorLedValue
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052     0A63                     _LIGHTBLUE_UpdateErrorLed:	
 17053                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 17054                           
 17055     0A63                     l13214:	
 17056                           ;incstack = 0
 17057                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17058                           
 17059                           
 17060                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     RN487X_EnterCmdMode();
 17061     0A63  3189  216D  318A   	fcall	_RN487X_EnterCmdMode
 17062     0A66                     l13216:
 17063                           
 17064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     RN487X.DelayMs((20));
 17065     0A66  3014               	movlw	20
 17066     0A67  00F4               	movwf	RN487X_Delay@delayCount
 17067     0A68  3000               	movlw	0
 17068     0A69  00F5               	movwf	RN487X_Delay@delayCount+1
 17069     0A6A  3076               	movlw	low ((_RN487X+14)| (0+32768))
 17070     0A6B  0084               	movwf	4
 17071     0A6C  3090               	movlw	high ((_RN487X+14)| (0+32768))
 17072     0A6D  0085               	movwf	5
 17073     0A6E  3F01               	moviw [1]fsr0
 17074     0A6F  008A               	movwf	10
 17075     0A70  3F00               	moviw [0]fsr0
 17076     0A71  000A               	callw
 17077     0A72  318A               	pagesel	$
 17078     0A73                     l13218:
 17079                           
 17080                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 490:     RN487X_SetOutputs(bitMap)
      +                          ;
 17081     0A73  0140               	movlb	0	; select bank0
 17082     0A74  0855               	movf	_bitMap+1,w	;volatile
 17083     0A75  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 17084     0A76  0854               	movf	_bitMap,w	;volatile
 17085     0A77  00A0               	movwf	RN487X_SetOutputs@bitMap
 17086     0A78  3186  26A8  318A   	fcall	_RN487X_SetOutputs
 17087     0A7B                     l13220:
 17088                           
 17089                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 491:     RN487X_EnterDataMode();
 17090     0A7B  318A  2248  318A   	fcall	_RN487X_EnterDataMode
 17091     0A7E                     l211:
 17092     0A7E  0008               	return
 17093     0A7F                     __end_of_LIGHTBLUE_UpdateErrorLed:
 17094                           
 17095                           	psect	text54
 17096     06A8                     __ptext54:	
 17097 ;; *************** function _RN487X_SetOutputs *****************
 17098 ;; Defined at:
 17099 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  bitMap          2    0[BANK0 ] struct .
 17102 ;; Auto vars:     Size  Location     Type
 17103 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 17104 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 17105 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 17106 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  1    wreg      _Bool 
 17109 ;; Registers used:
 17110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17117 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17120 ;;Total ram usage:        6 bytes
 17121 ;; Hardware stack levels used: 1
 17122 ;; Hardware stack levels required when called: 7
 17123 ;; This function calls:
 17124 ;;		_RN487X_ReadDefaultResponse
 17125 ;;		_RN487X_SendCmd
 17126 ;; This function is called by:
 17127 ;;		_LIGHTBLUE_UpdateErrorLed
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131     06A8                     _RN487X_SetOutputs:	
 17132                           ;psect for function _RN487X_SetOutputs
 17133                           
 17134     06A8                     l13082:	
 17135                           ;incstack = 0
 17136                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17137                           
 17138                           
 17139                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 17140     06A8  3030               	movlw	48
 17141     06A9  0140               	movlb	0	; select bank0
 17142     06AA  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 17143                           
 17144                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 17145     06AB  3030               	movlw	48
 17146     06AC  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 17147                           
 17148                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 17149     06AD  3030               	movlw	48
 17150     06AE  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 17151     06AF                     l13084:
 17152                           
 17153                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 17154     06AF  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 17155     06B0  2EB2               	goto	u10051
 17156     06B1  2EB3               	goto	u10050
 17157     06B2                     u10051:
 17158     06B2  2EB6               	goto	l13088
 17159     06B3                     u10050:
 17160     06B3                     l13086:
 17161                           
 17162                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 17163     06B3  3031               	movlw	49
 17164     06B4  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 17165                           
 17166                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 17167     06B5  2EB8               	goto	l13090
 17168     06B6                     l13088:
 17169                           
 17170                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 17171     06B6  3030               	movlw	48
 17172     06B7  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 17173     06B8                     l13090:
 17174                           
 17175                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 17176     06B8  0820               	movf	RN487X_SetOutputs@bitMap,w
 17177     06B9  390F               	andlw	15
 17178     06BA  3E30               	addlw	48
 17179     06BB  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 17180     06BC                     l13092:
 17181                           
 17182                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 17183     06BC  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 17184     06BD  2EBF               	goto	u10061
 17185     06BE  2EC0               	goto	u10060
 17186     06BF                     u10061:
 17187     06BF  2EC3               	goto	l13096
 17188     06C0                     u10060:
 17189     06C0                     l13094:
 17190                           
 17191                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 17192     06C0  3031               	movlw	49
 17193     06C1  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 17194                           
 17195                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 17196     06C2  2EC5               	goto	l13098
 17197     06C3                     l13096:
 17198                           
 17199                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 17200     06C3  3030               	movlw	48
 17201     06C4  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 17202     06C5                     l13098:
 17203                           
 17204                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 17205     06C5  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 17206     06C6  390F               	andlw	15
 17207     06C7  3E30               	addlw	48
 17208     06C8  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 17209     06C9                     l13100:
 17210                           
 17211                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 17212     06C9  307C               	movlw	124
 17213     06CA  0143               	movlb	3	; select bank3
 17214     06CB  00A0               	movwf	_cmdBuf^(0+384)
 17215     06CC                     l13102:
 17216                           
 17217                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 17218     06CC  304F               	movlw	79
 17219     06CD  00A1               	movwf	(_cmdBuf^(0+384)+1)
 17220     06CE                     l13104:
 17221                           
 17222                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 17223     06CE  302C               	movlw	44
 17224     06CF  00A2               	movwf	(_cmdBuf^(0+384)+2)
 17225     06D0                     l13106:
 17226                           
 17227                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 17228     06D0  0140               	movlb	0	; select bank0
 17229     06D1  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 17230     06D2  0143               	movlb	3	; select bank3
 17231     06D3  00A3               	movwf	(_cmdBuf^(0+384)+3)
 17232     06D4                     l13108:
 17233                           
 17234                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 17235     06D4  0140               	movlb	0	; select bank0
 17236     06D5  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 17237     06D6  0143               	movlb	3	; select bank3
 17238     06D7  00A4               	movwf	(_cmdBuf^(0+384)+4)
 17239     06D8                     l13110:
 17240                           
 17241                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 17242     06D8  302C               	movlw	44
 17243     06D9  00A5               	movwf	(_cmdBuf^(0+384)+5)
 17244     06DA                     l13112:
 17245                           
 17246                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 17247     06DA  0140               	movlb	0	; select bank0
 17248     06DB  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 17249     06DC  0143               	movlb	3	; select bank3
 17250     06DD  00A6               	movwf	(_cmdBuf^(0+384)+6)
 17251     06DE                     l13114:
 17252                           
 17253                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 17254     06DE  0140               	movlb	0	; select bank0
 17255     06DF  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 17256     06E0  0143               	movlb	3	; select bank3
 17257     06E1  00A7               	movwf	(_cmdBuf^(0+384)+7)
 17258     06E2                     l13116:
 17259                           
 17260                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 17261     06E2  300D               	movlw	13
 17262     06E3  00A8               	movwf	(_cmdBuf^(0+384)+8)
 17263     06E4                     l13118:
 17264                           
 17265                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 17266     06E4  300A               	movlw	10
 17267     06E5  00A9               	movwf	(_cmdBuf^(0+384)+9)
 17268     06E6                     l13120:
 17269                           
 17270                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 17271     06E6  300A               	movlw	10
 17272     06E7  00F7               	movwf	RN487X_SendCmd@cmdLen
 17273     06E8  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 17274     06E9  318D  25D8  3186   	fcall	_RN487X_SendCmd
 17275     06EC                     l13122:
 17276                           
 17277                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 17278     06EC  3183  237F  3186   	fcall	_RN487X_ReadDefaultResponse
 17279     06EF                     l930:
 17280     06EF  0008               	return
 17281     06F0                     __end_of_RN487X_SetOutputs:
 17282                           
 17283                           	psect	text55
 17284     037F                     __ptext55:	
 17285 ;; *************** function _RN487X_ReadDefaultResponse *****************
 17286 ;; Defined at:
 17287 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 17288 ;; Parameters:    Size  Location     Type
 17289 ;;		None
 17290 ;; Auto vars:     Size  Location     Type
 17291 ;;  resp            3    3[COMMON] unsigned char [3]
 17292 ;;  status          1    6[COMMON] _Bool 
 17293 ;; Return value:  Size  Location     Type
 17294 ;;                  1    wreg      _Bool 
 17295 ;; Registers used:
 17296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17305 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17306 ;;Total ram usage:        4 bytes
 17307 ;; Hardware stack levels used: 1
 17308 ;; Hardware stack levels required when called: 6
 17309 ;; This function calls:
 17310 ;;		_RN487X_Read@rn487x_interface$F1339
 17311 ;; This function is called by:
 17312 ;;		_RN487X_SetOutputs
 17313 ;;		_RN487X_Disconnect
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317     037F                     _RN487X_ReadDefaultResponse:	
 17318                           ;psect for function _RN487X_ReadDefaultResponse
 17319                           
 17320     037F                     l12980:	
 17321                           ;incstack = 0
 17322                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17323                           
 17324                           
 17325                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 17326     037F  01F6               	clrf	RN487X_ReadDefaultResponse@status
 17327     0380                     l12982:
 17328                           
 17329                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 17330     0380  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17331     0381  0084               	movwf	4
 17332     0382  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17333     0383  0085               	movwf	5
 17334     0384  3F01               	moviw [1]fsr0
 17335     0385  008A               	movwf	10
 17336     0386  3F00               	moviw [0]fsr0
 17337     0387  000A               	callw
 17338     0388  3183               	pagesel	$
 17339     0389  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 17340     038A                     l12984:
 17341                           
 17342                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 17343     038A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17344     038B  0084               	movwf	4
 17345     038C  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17346     038D  0085               	movwf	5
 17347     038E  3F01               	moviw [1]fsr0
 17348     038F  008A               	movwf	10
 17349     0390  3F00               	moviw [0]fsr0
 17350     0391  000A               	callw
 17351     0392  3183               	pagesel	$
 17352     0393  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 17353     0394                     l12986:
 17354                           
 17355                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 17356     0394  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17357     0395  0084               	movwf	4
 17358     0396  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17359     0397  0085               	movwf	5
 17360     0398  3F01               	moviw [1]fsr0
 17361     0399  008A               	movwf	10
 17362     039A  3F00               	moviw [0]fsr0
 17363     039B  000A               	callw
 17364     039C  3183               	pagesel	$
 17365     039D  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 17366                           
 17367                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 17368     039E  2BBE               	goto	l13006
 17369     039F                     l12988:
 17370                           
 17371                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 17372     039F  304F               	movlw	79
 17373     03A0  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 17374     03A1  1D03               	btfss	3,2
 17375     03A2  2BA4               	goto	u9901
 17376     03A3  2BA5               	goto	u9900
 17377     03A4                     u9901:
 17378     03A4  2BC6               	goto	l13008
 17379     03A5                     u9900:
 17380     03A5                     l12990:
 17381     03A5  304B               	movlw	75
 17382     03A6  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 17383     03A7  1D03               	btfss	3,2
 17384     03A8  2BAA               	goto	u9911
 17385     03A9  2BAB               	goto	u9910
 17386     03AA                     u9911:
 17387     03AA  2BC6               	goto	l13008
 17388     03AB                     u9910:
 17389     03AB                     l12992:
 17390                           
 17391                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 17392     03AB  01F6               	clrf	RN487X_ReadDefaultResponse@status
 17393     03AC  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 17394     03AD  2BC6               	goto	l13008
 17395     03AE                     l12994:
 17396                           
 17397                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 17398     03AE  3072               	movlw	114
 17399     03AF  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 17400     03B0  1D03               	btfss	3,2
 17401     03B1  2BB3               	goto	u9921
 17402     03B2  2BB4               	goto	u9920
 17403     03B3                     u9921:
 17404     03B3  2BC6               	goto	l13008
 17405     03B4                     u9920:
 17406     03B4                     l12996:
 17407     03B4  3072               	movlw	114
 17408     03B5  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 17409     03B6  1D03               	btfss	3,2
 17410     03B7  2BB9               	goto	u9931
 17411     03B8  2BBA               	goto	u9930
 17412     03B9                     u9931:
 17413     03B9  2BC6               	goto	l13008
 17414     03BA                     u9930:
 17415     03BA                     l12998:
 17416                           
 17417                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 17418     03BA  01F6               	clrf	RN487X_ReadDefaultResponse@status
 17419     03BB  2BC6               	goto	l13008
 17420     03BC                     l13000:
 17421                           
 17422                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 17423     03BC  3000               	movlw	0
 17424     03BD  2C06               	goto	l905
 17425     03BE                     l13006:
 17426     03BE  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 17427                           
 17428                           ; Switch size 1, requested type "simple"
 17429                           ; Number of cases is 2, Range of values is 65 to 69
 17430                           ; switch strategies available:
 17431                           ; Name         Instructions Cycles
 17432                           ; simple_byte            7     4 (average)
 17433                           ; direct_byte           19     9 (fixed)
 17434                           ; jumptable            263     9 (fixed)
 17435                           ;	Chosen strategy is simple_byte
 17436     03BF  3A41               	xorlw	65	; case 65
 17437     03C0  1903               	skipnz
 17438     03C1  2B9F               	goto	l12988
 17439     03C2  3A04               	xorlw	4	; case 69
 17440     03C3  1903               	skipnz
 17441     03C4  2BAE               	goto	l12994
 17442     03C5  2BBC               	goto	l13000
 17443     03C6                     l13008:
 17444                           
 17445                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 17446     03C6  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17447     03C7  0084               	movwf	4
 17448     03C8  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17449     03C9  0085               	movwf	5
 17450     03CA  3F01               	moviw [1]fsr0
 17451     03CB  008A               	movwf	10
 17452     03CC  3F00               	moviw [0]fsr0
 17453     03CD  000A               	callw
 17454     03CE  3183               	pagesel	$
 17455                           
 17456                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 17457     03CF  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17458     03D0  0084               	movwf	4
 17459     03D1  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17460     03D2  0085               	movwf	5
 17461     03D3  3F01               	moviw [1]fsr0
 17462     03D4  008A               	movwf	10
 17463     03D5  3F00               	moviw [0]fsr0
 17464     03D6  000A               	callw
 17465     03D7  3183               	pagesel	$
 17466                           
 17467                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 17468     03D8  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17469     03D9  0084               	movwf	4
 17470     03DA  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17471     03DB  0085               	movwf	5
 17472     03DC  3F01               	moviw [1]fsr0
 17473     03DD  008A               	movwf	10
 17474     03DE  3F00               	moviw [0]fsr0
 17475     03DF  000A               	callw
 17476     03E0  3183               	pagesel	$
 17477                           
 17478                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 17479     03E1  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17480     03E2  0084               	movwf	4
 17481     03E3  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17482     03E4  0085               	movwf	5
 17483     03E5  3F01               	moviw [1]fsr0
 17484     03E6  008A               	movwf	10
 17485     03E7  3F00               	moviw [0]fsr0
 17486     03E8  000A               	callw
 17487     03E9  3183               	pagesel	$
 17488                           
 17489                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 17490     03EA  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17491     03EB  0084               	movwf	4
 17492     03EC  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17493     03ED  0085               	movwf	5
 17494     03EE  3F01               	moviw [1]fsr0
 17495     03EF  008A               	movwf	10
 17496     03F0  3F00               	moviw [0]fsr0
 17497     03F1  000A               	callw
 17498     03F2  3183               	pagesel	$
 17499                           
 17500                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 17501     03F3  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17502     03F4  0084               	movwf	4
 17503     03F5  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17504     03F6  0085               	movwf	5
 17505     03F7  3F01               	moviw [1]fsr0
 17506     03F8  008A               	movwf	10
 17507     03F9  3F00               	moviw [0]fsr0
 17508     03FA  000A               	callw
 17509     03FB  3183               	pagesel	$
 17510                           
 17511                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 17512     03FC  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17513     03FD  0084               	movwf	4
 17514     03FE  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17515     03FF  0085               	movwf	5
 17516     0400  3F01               	moviw [1]fsr0
 17517     0401  008A               	movwf	10
 17518     0402  3F00               	moviw [0]fsr0
 17519     0403  000A               	callw
 17520     0404  3183               	pagesel	$
 17521     0405                     l13010:
 17522                           
 17523                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 17524     0405  0876               	movf	RN487X_ReadDefaultResponse@status,w
 17525     0406                     l905:
 17526     0406  0008               	return
 17527     0407                     __end_of_RN487X_ReadDefaultResponse:
 17528                           
 17529                           	psect	text56
 17530     0A48                     __ptext56:	
 17531 ;; *************** function _RN487X_EnterDataMode *****************
 17532 ;; Defined at:
 17533 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;		None
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;		None
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  1    wreg      _Bool 
 17540 ;; Registers used:
 17541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17551 ;;Total ram usage:        0 bytes
 17552 ;; Hardware stack levels used: 1
 17553 ;; Hardware stack levels required when called: 7
 17554 ;; This function calls:
 17555 ;;		_RN487X_ReadMsg
 17556 ;;		_RN487X_SendCmd
 17557 ;; This function is called by:
 17558 ;;		_LIGHTBLUE_UpdateErrorLed
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562     0A48                     _RN487X_EnterDataMode:	
 17563                           ;psect for function _RN487X_EnterDataMode
 17564                           
 17565     0A48                     l13126:	
 17566                           ;incstack = 0
 17567                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17568                           
 17569                           
 17570                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 17571     0A48  302D               	movlw	45
 17572     0A49  0143               	movlb	3	; select bank3
 17573     0A4A  00A0               	movwf	_cmdBuf^(0+384)
 17574                           
 17575                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 17576     0A4B  302D               	movlw	45
 17577     0A4C  00A1               	movwf	(_cmdBuf^(0+384)+1)
 17578                           
 17579                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 17580     0A4D  302D               	movlw	45
 17581     0A4E  00A2               	movwf	(_cmdBuf^(0+384)+2)
 17582                           
 17583                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 17584     0A4F  300D               	movlw	13
 17585     0A50  00A3               	movwf	(_cmdBuf^(0+384)+3)
 17586                           
 17587                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 17588     0A51  300A               	movlw	10
 17589     0A52  00A4               	movwf	(_cmdBuf^(0+384)+4)
 17590     0A53                     l13128:
 17591                           
 17592                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 17593     0A53  3005               	movlw	5
 17594     0A54  00F7               	movwf	RN487X_SendCmd@cmdLen
 17595     0A55  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 17596     0A56  318D  25D8  318A   	fcall	_RN487X_SendCmd
 17597     0A59                     l13130:
 17598                           
 17599                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 17600     0A59  3028               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17601     0A5A  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 17602     0A5B  3098               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17603     0A5C  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 17604     0A5D  3005               	movlw	5
 17605     0A5E  00F5               	movwf	RN487X_ReadMsg@msgLen
 17606     0A5F  318C  249B  318A   	fcall	_RN487X_ReadMsg
 17607     0A62                     l923:
 17608     0A62  0008               	return
 17609     0A63                     __end_of_RN487X_EnterDataMode:
 17610                           
 17611                           	psect	text57
 17612     096D                     __ptext57:	
 17613 ;; *************** function _RN487X_EnterCmdMode *****************
 17614 ;; Defined at:
 17615 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 17616 ;; Parameters:    Size  Location     Type
 17617 ;;		None
 17618 ;; Auto vars:     Size  Location     Type
 17619 ;;		None
 17620 ;; Return value:  Size  Location     Type
 17621 ;;                  1    wreg      _Bool 
 17622 ;; Registers used:
 17623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17624 ;; Tracked objects:
 17625 ;;		On entry : 0/0
 17626 ;;		On exit  : 0/0
 17627 ;;		Unchanged: 0/0
 17628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17633 ;;Total ram usage:        0 bytes
 17634 ;; Hardware stack levels used: 1
 17635 ;; Hardware stack levels required when called: 7
 17636 ;; This function calls:
 17637 ;;		_RN487X_ReadMsg
 17638 ;;		_RN487X_SendCmd
 17639 ;; This function is called by:
 17640 ;;		_LIGHTBLUE_UpdateErrorLed
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644     096D                     _RN487X_EnterCmdMode:	
 17645                           ;psect for function _RN487X_EnterCmdMode
 17646                           
 17647     096D                     l13074:	
 17648                           ;incstack = 0
 17649                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17650                           
 17651                           
 17652                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 17653     096D  3024               	movlw	36
 17654     096E  0143               	movlb	3	; select bank3
 17655     096F  00A0               	movwf	_cmdBuf^(0+384)
 17656                           
 17657                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 17658     0970  3024               	movlw	36
 17659     0971  00A1               	movwf	(_cmdBuf^(0+384)+1)
 17660                           
 17661                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 17662     0972  3024               	movlw	36
 17663     0973  00A2               	movwf	(_cmdBuf^(0+384)+2)
 17664     0974                     l13076:
 17665                           
 17666                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 17667     0974  3003               	movlw	3
 17668     0975  00F7               	movwf	RN487X_SendCmd@cmdLen
 17669     0976  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 17670     0977  318D  25D8  3189   	fcall	_RN487X_SendCmd
 17671     097A                     l13078:
 17672                           
 17673                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 17674     097A  302D               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 17675     097B  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 17676     097C  3098               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 17677     097D  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 17678     097E  3005               	movlw	5
 17679     097F  00F5               	movwf	RN487X_ReadMsg@msgLen
 17680     0980  318C  249B  3189   	fcall	_RN487X_ReadMsg
 17681     0983                     l918:
 17682     0983  0008               	return
 17683     0984                     __end_of_RN487X_EnterCmdMode:
 17684                           
 17685                           	psect	text58
 17686     0DD8                     __ptext58:	
 17687 ;; *************** function _RN487X_SendCmd *****************
 17688 ;; Defined at:
 17689 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 17690 ;; Parameters:    Size  Location     Type
 17691 ;;  cmd             1    wreg     PTR const unsigned char 
 17692 ;;		 -> cmdBuf(64), 
 17693 ;;  cmdLen          1    7[COMMON] unsigned char 
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 17696 ;;		 -> cmdBuf(64), 
 17697 ;;  index           1    9[COMMON] unsigned char 
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      void 
 17700 ;; Registers used:
 17701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17711 ;;Total ram usage:        4 bytes
 17712 ;; Hardware stack levels used: 1
 17713 ;; Hardware stack levels required when called: 6
 17714 ;; This function calls:
 17715 ;;		_RN487X_Write
 17716 ;;		_RN487X_is_tx_done
 17717 ;; This function is called by:
 17718 ;;		_RN487X_EnterCmdMode
 17719 ;;		_RN487X_EnterDataMode
 17720 ;;		_RN487X_SetOutputs
 17721 ;;		_RN487X_GetCmd
 17722 ;;		_RN487X_GetInputsValues
 17723 ;;		_RN487X_RebootCmd
 17724 ;;		_RN487X_Disconnect
 17725 ;; This function uses a non-reentrant model
 17726 ;;
 17727                           
 17728     0DD8                     _RN487X_SendCmd:	
 17729                           ;psect for function _RN487X_SendCmd
 17730                           
 17731                           
 17732                           ;incstack = 0
 17733                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17734                           ;RN487X_SendCmd@cmd stored from wreg
 17735     0DD8  00FA               	movwf	RN487X_SendCmd@cmd
 17736     0DD9                     l12952:
 17737                           
 17738                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 17739     0DD9  01F9               	clrf	RN487X_SendCmd@index
 17740                           
 17741                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 17742     0DDA  2DFF               	goto	l12960
 17743     0DDB                     l12954:
 17744                           
 17745                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 17746     0DDB  306C               	movlw	low ((_RN487X+4)| (0+32768))
 17747     0DDC  0084               	movwf	4
 17748     0DDD  3090               	movlw	high ((_RN487X+4)| (0+32768))
 17749     0DDE  0085               	movwf	5
 17750     0DDF  3F01               	moviw [1]fsr0
 17751     0DE0  008A               	movwf	10
 17752     0DE1  3F00               	moviw [0]fsr0
 17753     0DE2  000A               	callw
 17754     0DE3  318D               	pagesel	$
 17755     0DE4  3A00               	xorlw	0
 17756     0DE5  1903               	skipnz
 17757     0DE6  2DE8               	goto	u9861
 17758     0DE7  2DE9               	goto	u9860
 17759     0DE8                     u9861:
 17760     0DE8  2DFF               	goto	l12960
 17761     0DE9                     u9860:
 17762     0DE9                     l12956:
 17763                           
 17764                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 17765     0DE9  0879               	movf	RN487X_SendCmd@index,w
 17766     0DEA  077A               	addwf	RN487X_SendCmd@cmd,w
 17767     0DEB  00F8               	movwf	??_RN487X_SendCmd
 17768     0DEC  0878               	movf	??_RN487X_SendCmd,w
 17769     0DED  0086               	movwf	6
 17770     0DEE  3001               	movlw	1	; select bank2/3
 17771     0DEF  0087               	movwf	7
 17772     0DF0  0801               	movf	1,w
 17773     0DF1  00F6               	movwf	RN487X_Write@txData
 17774     0DF2  3068               	movlw	low (_RN487X| (0+32768))
 17775     0DF3  0084               	movwf	4
 17776     0DF4  3090               	movlw	high (_RN487X| (0+32768))
 17777     0DF5  0085               	movwf	5
 17778     0DF6  3F01               	moviw [1]fsr0
 17779     0DF7  008A               	movwf	10
 17780     0DF8  3F00               	moviw [0]fsr0
 17781     0DF9  000A               	callw
 17782     0DFA  318D               	pagesel	$
 17783     0DFB                     l12958:
 17784                           
 17785                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 17786     0DFB  3001               	movlw	1
 17787     0DFC  00F8               	movwf	??_RN487X_SendCmd
 17788     0DFD  0878               	movf	??_RN487X_SendCmd,w
 17789     0DFE  07F9               	addwf	RN487X_SendCmd@index,f
 17790     0DFF                     l12960:
 17791                           
 17792                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 17793     0DFF  0877               	movf	RN487X_SendCmd@cmdLen,w
 17794     0E00  0279               	subwf	RN487X_SendCmd@index,w
 17795     0E01  1C03               	skipc
 17796     0E02  2E04               	goto	u9871
 17797     0E03  2E05               	goto	u9870
 17798     0E04                     u9871:
 17799     0E04  2DDB               	goto	l12954
 17800     0E05                     u9870:
 17801     0E05                     l883:
 17802     0E05  0008               	return
 17803     0E06                     __end_of_RN487X_SendCmd:
 17804                           
 17805                           	psect	text59
 17806     175F                     __ptext59:	
 17807 ;; *************** function _RN487X_is_tx_done *****************
 17808 ;; Defined at:
 17809 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 17810 ;; Parameters:    Size  Location     Type
 17811 ;;		None
 17812 ;; Auto vars:     Size  Location     Type
 17813 ;;		None
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      _Bool 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17827 ;;Total ram usage:        0 bytes
 17828 ;; Hardware stack levels used: 1
 17829 ;; Hardware stack levels required when called: 5
 17830 ;; This function calls:
 17831 ;;		_EUSART1_is_tx_done
 17832 ;;		_EUSART2_is_tx_done
 17833 ;; This function is called by:
 17834 ;;		_RN487X_SendCmd
 17835 ;; This function uses a non-reentrant model
 17836 ;;
 17837                           
 17838     175F                     _RN487X_is_tx_done:	
 17839                           ;psect for function _RN487X_is_tx_done
 17840                           
 17841     175F                     l12836:	
 17842                           ;incstack = 0
 17843                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17844                           
 17845                           
 17846                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 17847     175F  3022               	movlw	low ((_uart+34)| (0+32768))
 17848     1760  0084               	movwf	4
 17849     1761  3090               	movlw	high ((_uart+34)| (0+32768))
 17850     1762  0085               	movwf	5
 17851     1763  3F01               	moviw [1]fsr0
 17852     1764  008A               	movwf	10
 17853     1765  3F00               	moviw [0]fsr0
 17854     1766  000A               	callw
 17855     1767  3197               	pagesel	$
 17856     1768                     l789:
 17857     1768  0008               	return
 17858     1769                     __end_of_RN487X_is_tx_done:
 17859                           
 17860                           	psect	text60
 17861     1665                     __ptext60:	
 17862 ;; *************** function _EUSART1_is_tx_done *****************
 17863 ;; Defined at:
 17864 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 17865 ;; Parameters:    Size  Location     Type
 17866 ;;		None
 17867 ;; Auto vars:     Size  Location     Type
 17868 ;;		None
 17869 ;; Return value:  Size  Location     Type
 17870 ;;                  1    wreg      _Bool 
 17871 ;; Registers used:
 17872 ;;		wreg, status,2, status,0
 17873 ;; Tracked objects:
 17874 ;;		On entry : 0/0
 17875 ;;		On exit  : 0/0
 17876 ;;		Unchanged: 0/0
 17877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17882 ;;Total ram usage:        0 bytes
 17883 ;; Hardware stack levels used: 1
 17884 ;; Hardware stack levels required when called: 4
 17885 ;; This function calls:
 17886 ;;		Nothing
 17887 ;; This function is called by:
 17888 ;;		_RN487X_is_tx_done
 17889 ;; This function uses a non-reentrant model
 17890 ;;
 17891                           
 17892     1665                     _EUSART1_is_tx_done:	
 17893                           ;psect for function _EUSART1_is_tx_done
 17894                           
 17895     1665                     l12776:	
 17896                           ;incstack = 0
 17897                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 17898                           
 17899                           
 17900                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 17901     1665  0142               	movlb	2	; select bank2
 17902     1666  0C1E               	rrf	30,w	;volatile
 17903     1667  3901               	andlw	1
 17904     1668                     l1201:
 17905     1668  0008               	return
 17906     1669                     __end_of_EUSART1_is_tx_done:
 17907                           
 17908                           	psect	text61
 17909     1661                     __ptext61:	
 17910 ;; *************** function _EUSART2_is_tx_done *****************
 17911 ;; Defined at:
 17912 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 17913 ;; Parameters:    Size  Location     Type
 17914 ;;		None
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;		None
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  1    wreg      _Bool 
 17919 ;; Registers used:
 17920 ;;		wreg, status,2, status,0
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17930 ;;Total ram usage:        0 bytes
 17931 ;; Hardware stack levels used: 1
 17932 ;; Hardware stack levels required when called: 4
 17933 ;; This function calls:
 17934 ;;		Nothing
 17935 ;; This function is called by:
 17936 ;;		_RN487X_is_tx_done
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940     1661                     _EUSART2_is_tx_done:	
 17941                           ;psect for function _EUSART2_is_tx_done
 17942                           
 17943     1661                     l12732:	
 17944                           ;incstack = 0
 17945                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 17946                           
 17947                           
 17948                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 17949     1661  0154               	movlb	20	; select bank20
 17950     1662  0C1E               	rrf	30,w	;volatile
 17951     1663  3901               	andlw	1
 17952     1664                     l1057:
 17953     1664  0008               	return
 17954     1665                     __end_of_EUSART2_is_tx_done:
 17955                           
 17956                           	psect	text62
 17957     0C9B                     __ptext62:	
 17958 ;; *************** function _RN487X_ReadMsg *****************
 17959 ;; Defined at:
 17960 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 17963 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 17964 ;;  msgLen          1    5[COMMON] unsigned char 
 17965 ;; Auto vars:     Size  Location     Type
 17966 ;;  index           1    9[COMMON] unsigned char 
 17967 ;;  resp            1    8[COMMON] unsigned char 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  1    wreg      _Bool 
 17970 ;; Registers used:
 17971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/0
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17977 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17980 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17981 ;;Total ram usage:        7 bytes
 17982 ;; Hardware stack levels used: 1
 17983 ;; Hardware stack levels required when called: 6
 17984 ;; This function calls:
 17985 ;;		_RN487X_Read@rn487x_interface$F1339
 17986 ;; This function is called by:
 17987 ;;		_RN487X_EnterCmdMode
 17988 ;;		_RN487X_EnterDataMode
 17989 ;;		_RN487X_GetInputsValues
 17990 ;;		_RN487X_RebootCmd
 17991 ;; This function uses a non-reentrant model
 17992 ;;
 17993                           
 17994     0C9B                     _RN487X_ReadMsg:	
 17995                           ;psect for function _RN487X_ReadMsg
 17996                           
 17997     0C9B                     l12962:	
 17998                           ;incstack = 0
 17999                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18000                           
 18001                           
 18002                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 18003     0C9B  01F9               	clrf	RN487X_ReadMsg@index
 18004     0C9C  2CBE               	goto	l12974
 18005     0C9D                     l12964:
 18006                           
 18007                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 18008     0C9D  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18009     0C9E  0084               	movwf	4
 18010     0C9F  3090               	movlw	high ((_RN487X+2)| (0+32768))
 18011     0CA0  0085               	movwf	5
 18012     0CA1  3F01               	moviw [1]fsr0
 18013     0CA2  008A               	movwf	10
 18014     0CA3  3F00               	moviw [0]fsr0
 18015     0CA4  000A               	callw
 18016     0CA5  318C               	pagesel	$
 18017     0CA6  00F8               	movwf	RN487X_ReadMsg@resp
 18018     0CA7                     l12966:
 18019                           
 18020                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 18021     0CA7  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 18022     0CA8  00F7               	movwf	??_RN487X_ReadMsg+1
 18023     0CA9  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 18024     0CAA  00F6               	movwf	??_RN487X_ReadMsg
 18025     0CAB  0879               	movf	RN487X_ReadMsg@index,w
 18026     0CAC  0776               	addwf	??_RN487X_ReadMsg,w
 18027     0CAD  0084               	movwf	4
 18028     0CAE  0877               	movf	??_RN487X_ReadMsg+1,w
 18029     0CAF  1803               	skipnc
 18030     0CB0  0A77               	incf	??_RN487X_ReadMsg+1,w
 18031     0CB1  0085               	movwf	5
 18032     0CB2  0800               	movf	0,w	;code access
 18033     0CB3  0678               	xorwf	RN487X_ReadMsg@resp,w
 18034     0CB4  1903               	skipnz
 18035     0CB5  2CB7               	goto	u9881
 18036     0CB6  2CB8               	goto	u9880
 18037     0CB7                     u9881:
 18038     0CB7  2CBA               	goto	l12972
 18039     0CB8                     u9880:
 18040     0CB8                     l12968:
 18041                           
 18042                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 18043     0CB8  3000               	movlw	0
 18044     0CB9  2CC5               	goto	l894
 18045     0CBA                     l12972:
 18046                           
 18047                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 18048     0CBA  3001               	movlw	1
 18049     0CBB  00F6               	movwf	??_RN487X_ReadMsg
 18050     0CBC  0876               	movf	??_RN487X_ReadMsg,w
 18051     0CBD  07F9               	addwf	RN487X_ReadMsg@index,f
 18052     0CBE                     l12974:
 18053     0CBE  0875               	movf	RN487X_ReadMsg@msgLen,w
 18054     0CBF  0279               	subwf	RN487X_ReadMsg@index,w
 18055     0CC0  1C03               	skipc
 18056     0CC1  2CC3               	goto	u9891
 18057     0CC2  2CC4               	goto	u9890
 18058     0CC3                     u9891:
 18059     0CC3  2C9D               	goto	l12964
 18060     0CC4                     u9890:
 18061     0CC4                     l12976:
 18062                           
 18063                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 18064     0CC4  3001               	movlw	1
 18065     0CC5                     l894:
 18066     0CC5  0008               	return
 18067     0CC6                     __end_of_RN487X_ReadMsg:
 18068                           
 18069                           	psect	text63
 18070     1755                     __ptext63:	
 18071 ;; *************** function _RN487X_Read@rn487x_interface$F1339 *****************
 18072 ;; Defined at:
 18073 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;		None
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;		None
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      unsigned char 
 18080 ;; Registers used:
 18081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18091 ;;Total ram usage:        0 bytes
 18092 ;; Hardware stack levels used: 1
 18093 ;; Hardware stack levels required when called: 5
 18094 ;; This function calls:
 18095 ;;		_EUSART1_Read
 18096 ;;		_EUSART2_Read
 18097 ;; This function is called by:
 18098 ;;		_RN487X_ReadMsg
 18099 ;;		_RN487X_ReadDefaultResponse
 18100 ;;		_RN487X_FilterData
 18101 ;;		_RN487X_Init
 18102 ;;		_RN487X_GetCmd
 18103 ;;		_RN487X_WaitForMsg
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107     1755                     _RN487X_Read@rn487x_interface$F1339:	
 18108                           ;psect for function _RN487X_Read@rn487x_interface$F1339
 18109                           
 18110     1755                     l12832:	
 18111                           ;incstack = 0
 18112                           ; Regs used in _RN487X_Read@rn487x_interface$F1339: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 18113                           
 18114                           
 18115                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 18116     1755  3014               	movlw	low ((_uart+20)| (0+32768))
 18117     1756  0084               	movwf	4
 18118     1757  3090               	movlw	high ((_uart+20)| (0+32768))
 18119     1758  0085               	movwf	5
 18120     1759  3F01               	moviw [1]fsr0
 18121     175A  008A               	movwf	10
 18122     175B  3F00               	moviw [0]fsr0
 18123     175C  000A               	callw
 18124     175D  3197               	pagesel	$
 18125     175E                     l786:
 18126     175E  0008               	return
 18127     175F                     __end_of_RN487X_Read@rn487x_interface$F1339:
 18128                           
 18129                           	psect	text64
 18130     0BD6                     __ptext64:	
 18131 ;; *************** function _EUSART1_Read *****************
 18132 ;; Defined at:
 18133 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;		None
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  readValue       1    2[COMMON] unsigned char 
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  1    wreg      unsigned char 
 18140 ;; Registers used:
 18141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;Total ram usage:        2 bytes
 18152 ;; Hardware stack levels used: 1
 18153 ;; Hardware stack levels required when called: 4
 18154 ;; This function calls:
 18155 ;;		Nothing
 18156 ;; This function is called by:
 18157 ;;		_getch
 18158 ;;		_RN487X_Read@rn487x_interface$F1339
 18159 ;;		_RN487X_Example_TransparentUart
 18160 ;;		_main
 18161 ;; This function uses a non-reentrant model
 18162 ;;
 18163                           
 18164     0BD6                     _EUSART1_Read:	
 18165                           ;psect for function _EUSART1_Read
 18166                           
 18167     0BD6                     l12780:	
 18168                           ;incstack = 0
 18169                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 18170                           
 18171     0BD6                     l12782:	
 18172                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18173                           
 18174                           
 18175                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18176     0BD6  0140               	movlb	0	; select bank0
 18177     0BD7  0859               	movf	_eusart1RxCount,w	;volatile
 18178     0BD8  1903               	btfsc	3,2
 18179     0BD9  2BDB               	goto	u9721
 18180     0BDA  2BDC               	goto	u9720
 18181     0BDB                     u9721:
 18182     0BDB  2BD6               	goto	l12782
 18183     0BDC                     u9720:
 18184     0BDC                     l12784:
 18185                           
 18186                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 18187     0BDC  085A               	movf	_eusart1RxTail,w	;volatile
 18188     0BDD  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 18189     0BDE  0086               	movwf	6
 18190     0BDF  0187               	clrf	7
 18191     0BE0  0801               	movf	1,w
 18192     0BE1  00D8               	movwf	_eusart1RxLastError	;volatile
 18193                           
 18194                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 18195     0BE2  085A               	movf	_eusart1RxTail,w
 18196     0BE3  3EC5               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 18197     0BE4  0086               	movwf	6
 18198     0BE5  0187               	clrf	7
 18199     0BE6  0801               	movf	1,w
 18200     0BE7  00F2               	movwf	EUSART1_Read@readValue
 18201     0BE8                     l12786:
 18202     0BE8  3001               	movlw	1
 18203     0BE9  00F1               	movwf	??_EUSART1_Read
 18204     0BEA  0871               	movf	??_EUSART1_Read,w
 18205     0BEB  07DA               	addwf	_eusart1RxTail,f	;volatile
 18206     0BEC                     l12788:
 18207                           
 18208                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 18209     0BEC  3008               	movlw	8
 18210     0BED  025A               	subwf	_eusart1RxTail,w	;volatile
 18211     0BEE  1C03               	skipc
 18212     0BEF  2BF1               	goto	u9731
 18213     0BF0  2BF2               	goto	u9730
 18214     0BF1                     u9731:
 18215     0BF1  2BF3               	goto	l12792
 18216     0BF2                     u9730:
 18217     0BF2                     l12790:
 18218                           
 18219                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 18220     0BF2  01DA               	clrf	_eusart1RxTail	;volatile
 18221     0BF3                     l12792:
 18222                           
 18223                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 18224     0BF3  014E               	movlb	14	; select bank14
 18225     0BF4  1299               	bcf	25,5	;volatile
 18226     0BF5                     l12794:
 18227                           
 18228                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 18229     0BF5  3001               	movlw	1
 18230     0BF6  0140               	movlb	0	; select bank0
 18231     0BF7  02D9               	subwf	_eusart1RxCount,f	;volatile
 18232     0BF8                     l12796:
 18233                           
 18234                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 18235     0BF8  014E               	movlb	14	; select bank14
 18236     0BF9  1699               	bsf	25,5	;volatile
 18237     0BFA                     l12798:
 18238                           
 18239                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 18240     0BFA  0872               	movf	EUSART1_Read@readValue,w
 18241     0BFB                     l1211:
 18242     0BFB  0008               	return
 18243     0BFC                     __end_of_EUSART1_Read:
 18244                           
 18245                           	psect	text65
 18246     0BB0                     __ptext65:	
 18247 ;; *************** function _EUSART2_Read *****************
 18248 ;; Defined at:
 18249 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;		None
 18252 ;; Auto vars:     Size  Location     Type
 18253 ;;  readValue       1    2[COMMON] unsigned char 
 18254 ;; Return value:  Size  Location     Type
 18255 ;;                  1    wreg      unsigned char 
 18256 ;; Registers used:
 18257 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18267 ;;Total ram usage:        2 bytes
 18268 ;; Hardware stack levels used: 1
 18269 ;; Hardware stack levels required when called: 4
 18270 ;; This function calls:
 18271 ;;		Nothing
 18272 ;; This function is called by:
 18273 ;;		_RN487X_Read@rn487x_interface$F1339
 18274 ;;		_RN487X_Example_TransparentUart
 18275 ;;		_main
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279     0BB0                     _EUSART2_Read:	
 18280                           ;psect for function _EUSART2_Read
 18281                           
 18282     0BB0                     l12736:	
 18283                           ;incstack = 0
 18284                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 18285                           
 18286     0BB0                     l12738:	
 18287                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 18288                           
 18289                           
 18290                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 18291     0BB0  0140               	movlb	0	; select bank0
 18292     0BB1  0860               	movf	_eusart2RxCount,w	;volatile
 18293     0BB2  1903               	btfsc	3,2
 18294     0BB3  2BB5               	goto	u9671
 18295     0BB4  2BB6               	goto	u9670
 18296     0BB5                     u9671:
 18297     0BB5  2BB0               	goto	l12738
 18298     0BB6                     u9670:
 18299     0BB6                     l12740:
 18300                           
 18301                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 18302     0BB6  0861               	movf	_eusart2RxTail,w	;volatile
 18303     0BB7  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 18304     0BB8  0086               	movwf	6
 18305     0BB9  0187               	clrf	7
 18306     0BBA  0801               	movf	1,w
 18307     0BBB  00DF               	movwf	_eusart2RxLastError	;volatile
 18308                           
 18309                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 18310     0BBC  0861               	movf	_eusart2RxTail,w
 18311     0BBD  3EDD               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 18312     0BBE  0086               	movwf	6
 18313     0BBF  0187               	clrf	7
 18314     0BC0  0801               	movf	1,w
 18315     0BC1  00F2               	movwf	EUSART2_Read@readValue
 18316     0BC2                     l12742:
 18317     0BC2  3001               	movlw	1
 18318     0BC3  00F1               	movwf	??_EUSART2_Read
 18319     0BC4  0871               	movf	??_EUSART2_Read,w
 18320     0BC5  07E1               	addwf	_eusart2RxTail,f	;volatile
 18321     0BC6                     l12744:
 18322                           
 18323                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 18324     0BC6  3008               	movlw	8
 18325     0BC7  0261               	subwf	_eusart2RxTail,w	;volatile
 18326     0BC8  1C03               	skipc
 18327     0BC9  2BCB               	goto	u9681
 18328     0BCA  2BCC               	goto	u9680
 18329     0BCB                     u9681:
 18330     0BCB  2BCD               	goto	l12748
 18331     0BCC                     u9680:
 18332     0BCC                     l12746:
 18333                           
 18334                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 18335     0BCC  01E1               	clrf	_eusart2RxTail	;volatile
 18336     0BCD                     l12748:
 18337                           
 18338                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 18339     0BCD  014E               	movlb	14	; select bank14
 18340     0BCE  1399               	bcf	25,7	;volatile
 18341     0BCF                     l12750:
 18342                           
 18343                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 18344     0BCF  3001               	movlw	1
 18345     0BD0  0140               	movlb	0	; select bank0
 18346     0BD1  02E0               	subwf	_eusart2RxCount,f	;volatile
 18347     0BD2                     l12752:
 18348                           
 18349                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 18350     0BD2  014E               	movlb	14	; select bank14
 18351     0BD3  1799               	bsf	25,7	;volatile
 18352     0BD4                     l12754:
 18353                           
 18354                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 18355     0BD4  0872               	movf	EUSART2_Read@readValue,w
 18356     0BD5                     l1067:
 18357     0BD5  0008               	return
 18358     0BD6                     __end_of_EUSART2_Read:
 18359                           
 18360                           	psect	text66
 18361     1720                     __ptext66:	
 18362 ;; *************** function _RN487X_Delay *****************
 18363 ;; Defined at:
 18364 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;  delayCount      2    4[COMMON] unsigned short 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      void 
 18371 ;; Registers used:
 18372 ;;		wreg, status,2, status,0, pclath, cstack
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18382 ;;Total ram usage:        2 bytes
 18383 ;; Hardware stack levels used: 1
 18384 ;; Hardware stack levels required when called: 5
 18385 ;; This function calls:
 18386 ;;		_DELAY_milliseconds
 18387 ;; This function is called by:
 18388 ;;		_LIGHTBLUE_UpdateErrorLed
 18389 ;;		_RN487X_Init
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393     1720                     _RN487X_Delay:	
 18394                           ;psect for function _RN487X_Delay
 18395                           
 18396     1720                     l13134:	
 18397                           ;incstack = 0
 18398                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 18399                           
 18400                           
 18401                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 18402     1720  0875               	movf	RN487X_Delay@delayCount+1,w
 18403     1721  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 18404     1722  0874               	movf	RN487X_Delay@delayCount,w
 18405     1723  00F1               	movwf	DELAY_milliseconds@milliseconds
 18406     1724  3189  212B  3197   	fcall	_DELAY_milliseconds
 18407     1727                     l795:
 18408     1727  0008               	return
 18409     1728                     __end_of_RN487X_Delay:
 18410                           
 18411                           	psect	text67
 18412     092B                     __ptext67:	
 18413 ;; *************** function _DELAY_milliseconds *****************
 18414 ;; Defined at:
 18415 ;;		line 38 in file "mcc_generated_files/delay.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;  milliseconds    2    1[COMMON] unsigned short 
 18418 ;; Auto vars:     Size  Location     Type
 18419 ;;		None
 18420 ;; Return value:  Size  Location     Type
 18421 ;;                  1    wreg      void 
 18422 ;; Registers used:
 18423 ;;		wreg, status,2, status,0
 18424 ;; Tracked objects:
 18425 ;;		On entry : 0/0
 18426 ;;		On exit  : 0/0
 18427 ;;		Unchanged: 0/0
 18428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18433 ;;Total ram usage:        3 bytes
 18434 ;; Hardware stack levels used: 1
 18435 ;; Hardware stack levels required when called: 4
 18436 ;; This function calls:
 18437 ;;		Nothing
 18438 ;; This function is called by:
 18439 ;;		_RN487X_Delay
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443     092B                     _DELAY_milliseconds:	
 18444                           ;psect for function _DELAY_milliseconds
 18445                           
 18446     092B                     l12942:	
 18447                           ;incstack = 0
 18448                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 18449                           
 18450                           
 18451                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18452     092B  2934               	goto	l12946
 18453     092C                     l12944:
 18454                           
 18455                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 18456     092C  300B               	movlw	11
 18457     092D  00F3               	movwf	??_DELAY_milliseconds
 18458     092E  3062               	movlw	98
 18459     092F                     u14157:
 18460     092F  0B89               	decfsz	9,f
 18461     0930  292F               	goto	u14157
 18462     0931  0BF3               	decfsz	??_DELAY_milliseconds,f
 18463     0932  292F               	goto	u14157
 18464     0933  3200               	nop2
 18465     0934                     l12946:
 18466                           
 18467                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18468     0934  3001               	movlw	1
 18469     0935  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 18470     0936  3000               	movlw	0
 18471     0937  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 18472     0938  0A71               	incf	DELAY_milliseconds@milliseconds,w
 18473     0939  1D03               	skipz
 18474     093A  293F               	goto	u9841
 18475     093B  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 18476     093C  1D03               	btfss	3,2
 18477     093D  293F               	goto	u9841
 18478     093E  2940               	goto	u9840
 18479     093F                     u9841:
 18480     093F  292C               	goto	l12944
 18481     0940                     u9840:
 18482     0940                     l1977:
 18483     0940  0008               	return
 18484     0941                     __end_of_DELAY_milliseconds:
 18485                           
 18486                           	psect	text68
 18487     0B8A                     __ptext68:	
 18488 ;; *************** function _LIGHTBLUE_LedState *****************
 18489 ;; Defined at:
 18490 ;;		line 347 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18491 ;; Parameters:    Size  Location     Type
 18492 ;;		None
 18493 ;; Auto vars:     Size  Location     Type
 18494 ;;  payload         3    0[BANK0 ] unsigned char [3]
 18495 ;;  led             1    3[BANK0 ] unsigned char 
 18496 ;; Return value:  Size  Location     Type
 18497 ;;                  1    wreg      void 
 18498 ;; Registers used:
 18499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18500 ;; Tracked objects:
 18501 ;;		On entry : 0/0
 18502 ;;		On exit  : 0/0
 18503 ;;		Unchanged: 0/0
 18504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18509 ;;Total ram usage:        4 bytes
 18510 ;; Hardware stack levels used: 1
 18511 ;; Hardware stack levels required when called: 7
 18512 ;; This function calls:
 18513 ;;		_LIGHTBLUE_GetDataLedValue
 18514 ;;		_LIGHTBLUE_GetErrorLedValue
 18515 ;;		_LIGHTBLUE_SendPacket
 18516 ;;		_LIGHTBLUE_SplitByte
 18517 ;; This function is called by:
 18518 ;;		_main
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522     0B8A                     _LIGHTBLUE_LedState:	
 18523                           ;psect for function _LIGHTBLUE_LedState
 18524                           
 18525     0B8A                     l13688:	
 18526                           ;incstack = 0
 18527                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18528                           
 18529                           
 18530                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 348:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 349:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 351:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 18531     0B8A  3196  26B7  318B   	fcall	_LIGHTBLUE_GetDataLedValue
 18532     0B8D  0140               	movlb	0	; select bank0
 18533     0B8E  00A3               	movwf	LIGHTBLUE_LedState@led
 18534     0B8F                     l13690:
 18535                           
 18536                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     *payload = '\0';
 18537     0B8F  01A0               	clrf	LIGHTBLUE_LedState@payload
 18538     0B90                     l13692:
 18539                           
 18540                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 354:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18541     0B90  0823               	movf	LIGHTBLUE_LedState@led,w
 18542     0B91  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18543     0B92  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18544     0B93  318E  2606  318B   	fcall	_LIGHTBLUE_SplitByte
 18545     0B96                     l13694:
 18546                           
 18547                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 356:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18548     0B96  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18549     0B97  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18550     0B98  304C               	movlw	76
 18551     0B99  3182  22F3  318B   	fcall	_LIGHTBLUE_SendPacket
 18552     0B9C                     l13696:
 18553                           
 18554                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 18555     0B9C  3196  26A0  318B   	fcall	_LIGHTBLUE_GetErrorLedValue
 18556     0B9F  3E10               	addlw	16
 18557     0BA0  0140               	movlb	0	; select bank0
 18558     0BA1  00A3               	movwf	LIGHTBLUE_LedState@led
 18559                           
 18560                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     *payload = '\0';
 18561     0BA2  01A0               	clrf	LIGHTBLUE_LedState@payload
 18562     0BA3                     l13698:
 18563                           
 18564                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 360:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18565     0BA3  0823               	movf	LIGHTBLUE_LedState@led,w
 18566     0BA4  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18567     0BA5  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18568     0BA6  318E  2606  318B   	fcall	_LIGHTBLUE_SplitByte
 18569     0BA9                     l13700:
 18570                           
 18571                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 362:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18572     0BA9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18573     0BAA  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18574     0BAB  304C               	movlw	76
 18575     0BAC  3182  22F3  318B   	fcall	_LIGHTBLUE_SendPacket
 18576     0BAF                     l130:
 18577     0BAF  0008               	return
 18578     0BB0                     __end_of_LIGHTBLUE_LedState:
 18579                           
 18580                           	psect	text69
 18581     16A0                     __ptext69:	
 18582 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 18583 ;; Defined at:
 18584 ;;		line 478 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18585 ;; Parameters:    Size  Location     Type
 18586 ;;		None
 18587 ;; Auto vars:     Size  Location     Type
 18588 ;;		None
 18589 ;; Return value:  Size  Location     Type
 18590 ;;                  1    wreg      unsigned char 
 18591 ;; Registers used:
 18592 ;;		wreg, status,2, status,0
 18593 ;; Tracked objects:
 18594 ;;		On entry : 0/0
 18595 ;;		On exit  : 0/0
 18596 ;;		Unchanged: 0/0
 18597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18602 ;;Total ram usage:        0 bytes
 18603 ;; Hardware stack levels used: 1
 18604 ;; Hardware stack levels required when called: 4
 18605 ;; This function calls:
 18606 ;;		Nothing
 18607 ;; This function is called by:
 18608 ;;		_LIGHTBLUE_LedState
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612     16A0                     _LIGHTBLUE_GetErrorLedValue:	
 18613                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 18614                           
 18615     16A0                     l13440:	
 18616                           ;incstack = 0
 18617                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 18618                           
 18619                           
 18620                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 479:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 18621     16A0  0140               	movlb	0	; select bank0
 18622     16A1  0855               	movf	_bitMap+1,w	;volatile
 18623     16A2  3901               	andlw	1
 18624     16A3  3C01               	sublw	1
 18625     16A4                     l205:
 18626     16A4  0008               	return
 18627     16A5                     __end_of_LIGHTBLUE_GetErrorLedValue:
 18628                           
 18629                           	psect	text70
 18630     16B7                     __ptext70:	
 18631 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 18632 ;; Defined at:
 18633 ;;		line 474 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;		None
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;		None
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      unsigned char 
 18640 ;; Registers used:
 18641 ;;		wreg, status,2, status,0
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18651 ;;Total ram usage:        0 bytes
 18652 ;; Hardware stack levels used: 1
 18653 ;; Hardware stack levels required when called: 4
 18654 ;; This function calls:
 18655 ;;		Nothing
 18656 ;; This function is called by:
 18657 ;;		_LIGHTBLUE_LedState
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661     16B7                     _LIGHTBLUE_GetDataLedValue:	
 18662                           ;psect for function _LIGHTBLUE_GetDataLedValue
 18663                           
 18664     16B7                     l13436:	
 18665                           ;incstack = 0
 18666                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 18667                           
 18668                           
 18669                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 475:     return (0x01) - PORTAbits
      +                          .RA5;
 18670     16B7  0140               	movlb	0	; select bank0
 18671     16B8  0E0C               	swapf	12,w	;volatile
 18672     16B9  0C89               	rrf	9,f
 18673     16BA  3901               	andlw	1
 18674     16BB  3C01               	sublw	1
 18675     16BC                     l202:
 18676     16BC  0008               	return
 18677     16BD                     __end_of_LIGHTBLUE_GetDataLedValue:
 18678                           
 18679                           	psect	text71
 18680     16B1                     __ptext71:	
 18681 ;; *************** function _LIGHTBLUE_Initialize *****************
 18682 ;; Defined at:
 18683 ;;		line 305 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18684 ;; Parameters:    Size  Location     Type
 18685 ;;		None
 18686 ;; Auto vars:     Size  Location     Type
 18687 ;;		None
 18688 ;; Return value:  Size  Location     Type
 18689 ;;                  1    wreg      void 
 18690 ;; Registers used:
 18691 ;;		wreg
 18692 ;; Tracked objects:
 18693 ;;		On entry : 0/0
 18694 ;;		On exit  : 0/0
 18695 ;;		Unchanged: 0/0
 18696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18701 ;;Total ram usage:        0 bytes
 18702 ;; Hardware stack levels used: 1
 18703 ;; Hardware stack levels required when called: 4
 18704 ;; This function calls:
 18705 ;;		Nothing
 18706 ;; This function is called by:
 18707 ;;		_main
 18708 ;; This function uses a non-reentrant model
 18709 ;;
 18710                           
 18711     16B1                     _LIGHTBLUE_Initialize:	
 18712                           ;psect for function _LIGHTBLUE_Initialize
 18713                           
 18714     16B1                     l13658:	
 18715                           ;incstack = 0
 18716                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 18717                           
 18718                           
 18719                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 306:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 18720     16B1  3001               	movlw	1
 18721     16B2  0140               	movlb	0	; select bank0
 18722     16B3  00D4               	movwf	_bitMap	;volatile
 18723                           
 18724                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 18725     16B4  3001               	movlw	1
 18726     16B5  00D5               	movwf	_bitMap+1	;volatile
 18727     16B6                     l118:
 18728     16B6  0008               	return
 18729     16B7                     __end_of_LIGHTBLUE_Initialize:
 18730                           
 18731                           	psect	text72
 18732     0DAA                     __ptext72:	
 18733 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 18734 ;; Defined at:
 18735 ;;		line 322 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;		None
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  payload        13   19[BANK0 ] unsigned char [13]
 18740 ;;  accelData       6   32[BANK0 ] struct .
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  1    wreg      void 
 18743 ;; Registers used:
 18744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;Total ram usage:       19 bytes
 18755 ;; Hardware stack levels used: 1
 18756 ;; Hardware stack levels required when called: 16
 18757 ;; This function calls:
 18758 ;;		_BMA253_GetAccelDataXYZ
 18759 ;;		_LIGHTBLUE_SendPacket
 18760 ;;		_LIGHTBLUE_SplitWord
 18761 ;; This function is called by:
 18762 ;;		_main
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766     0DAA                     _LIGHTBLUE_AccelSensor:	
 18767                           ;psect for function _LIGHTBLUE_AccelSensor
 18768                           
 18769     0DAA                     l13668:	
 18770                           ;incstack = 0
 18771 ;; hardware stack exceeded
 18772                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18773                           
 18774                           
 18775                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 324:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 326:     *payload = '\0';
 18776     0DAA  0140               	movlb	0	; select bank0
 18777     0DAB  01B3               	clrf	LIGHTBLUE_AccelSensor@payload
 18778     0DAC                     l13670:
 18779                           
 18780                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 18781     0DAC  3040               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 18782     0DAD  3187  27BA  318D   	fcall	_BMA253_GetAccelDataXYZ
 18783     0DB0                     l13672:
 18784                           
 18785                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 330:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 18786     0DB0  30FF               	movlw	255
 18787     0DB1  0140               	movlb	0	; select bank0
 18788     0DB2  0540               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 18789     0DB3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18790     0DB4  300F               	movlw	15
 18791     0DB5  0541               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 18792     0DB6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18793     0DB7  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18794     0DB8  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18795     0DBB                     l13674:
 18796                           
 18797                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 331:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 18798     0DBB  30FF               	movlw	255
 18799     0DBC  0140               	movlb	0	; select bank0
 18800     0DBD  0542               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 18801     0DBE  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18802     0DBF  300F               	movlw	15
 18803     0DC0  0543               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 18804     0DC1  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18805     0DC2  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18806     0DC3  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18807     0DC6                     l13676:
 18808                           
 18809                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 18810     0DC6  30FF               	movlw	255
 18811     0DC7  0140               	movlb	0	; select bank0
 18812     0DC8  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 18813     0DC9  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18814     0DCA  300F               	movlw	15
 18815     0DCB  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 18816     0DCC  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18817     0DCD  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18818     0DCE  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18819     0DD1                     l13678:
 18820                           
 18821                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 334:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 18822     0DD1  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18823     0DD2  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18824     0DD3  3058               	movlw	88
 18825     0DD4  3182  22F3  318D   	fcall	_LIGHTBLUE_SendPacket
 18826     0DD7                     l124:
 18827     0DD7  0008               	return
 18828     0DD8                     __end_of_LIGHTBLUE_AccelSensor:
 18829                           
 18830                           	psect	text73
 18831     080C                     __ptext73:	
 18832 ;; *************** function _LIGHTBLUE_SplitWord *****************
 18833 ;; Defined at:
 18834 ;;		line 458 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18835 ;; Parameters:    Size  Location     Type
 18836 ;;  payload         1    wreg     PTR unsigned char 
 18837 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 18838 ;;  value           2    9[COMMON] short 
 18839 ;; Auto vars:     Size  Location     Type
 18840 ;;  payload         1   11[COMMON] PTR unsigned char 
 18841 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 18842 ;; Return value:  Size  Location     Type
 18843 ;;                  1    wreg      void 
 18844 ;; Registers used:
 18845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18846 ;; Tracked objects:
 18847 ;;		On entry : 0/0
 18848 ;;		On exit  : 0/0
 18849 ;;		Unchanged: 0/0
 18850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;Total ram usage:        3 bytes
 18856 ;; Hardware stack levels used: 1
 18857 ;; Hardware stack levels required when called: 6
 18858 ;; This function calls:
 18859 ;;		_LIGHTBLUE_SplitByte
 18860 ;; This function is called by:
 18861 ;;		_LIGHTBLUE_TemperatureSensor
 18862 ;;		_LIGHTBLUE_AccelSensor
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866     080C                     _LIGHTBLUE_SplitWord:	
 18867                           ;psect for function _LIGHTBLUE_SplitWord
 18868                           
 18869                           
 18870                           ;incstack = 0
 18871                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18872                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 18873     080C  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 18874     080D                     l13412:
 18875                           
 18876                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 18877     080D  0879               	movf	LIGHTBLUE_SplitWord@value,w
 18878     080E  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18879     080F  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 18880     0810  318E  2606  3188   	fcall	_LIGHTBLUE_SplitByte
 18881                           
 18882                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 18883     0813  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 18884     0814  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18885     0815  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 18886     0816  318E  2606  3188   	fcall	_LIGHTBLUE_SplitByte
 18887     0819                     l193:
 18888     0819  0008               	return
 18889     081A                     __end_of_LIGHTBLUE_SplitWord:
 18890                           
 18891                           	psect	text74
 18892     0E06                     __ptext74:	
 18893 ;; *************** function _LIGHTBLUE_SplitByte *****************
 18894 ;; Defined at:
 18895 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;  payload         1    wreg     PTR unsigned char 
 18898 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 18899 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 18900 ;;  value           1    6[COMMON] char 
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;  payload         1    8[COMMON] PTR unsigned char 
 18903 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 18904 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      void 
 18907 ;; Registers used:
 18908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18909 ;; Tracked objects:
 18910 ;;		On entry : 0/0
 18911 ;;		On exit  : 0/0
 18912 ;;		Unchanged: 0/0
 18913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;Total ram usage:        3 bytes
 18919 ;; Hardware stack levels used: 1
 18920 ;; Hardware stack levels required when called: 5
 18921 ;; This function calls:
 18922 ;;		_strlen
 18923 ;; This function is called by:
 18924 ;;		_LIGHTBLUE_PushButton
 18925 ;;		_LIGHTBLUE_LedState
 18926 ;;		_LIGHTBLUE_SendProtocolVersion
 18927 ;;		_LIGHTBLUE_SplitWord
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931     0E06                     _LIGHTBLUE_SplitByte:	
 18932                           ;psect for function _LIGHTBLUE_SplitByte
 18933                           
 18934                           
 18935                           ;incstack = 0
 18936                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18937                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 18938     0E06  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 18939     0E07                     l13282:
 18940                           
 18941                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     payload += strlen(payload
      +                          );
 18942     0E07  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18943     0E08  00F1               	movwf	strlen@s
 18944     0E09  01F2               	clrf	strlen@s+1
 18945     0E0A  318A  2215  318E   	fcall	_strlen
 18946     0E0D  0871               	movf	?_strlen,w
 18947     0E0E  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18948     0E0F  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18949     0E10  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18950     0E11                     l13284:
 18951                           
 18952                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 18953     0E11  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18954     0E12  0086               	movwf	6
 18955     0E13  0187               	clrf	7
 18956     0E14  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 18957     0E15  390F               	andlw	15
 18958     0E16  1989               	btfsc	9,3
 18959     0E17  38F0               	iorlw	240
 18960     0E18  390F               	andlw	15
 18961     0E19  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 18962     0E1A  0084               	movwf	4
 18963     0E1B  3001               	movlw	1	; select bank2/3
 18964     0E1C  0085               	movwf	5
 18965     0E1D  0800               	movf	0,w
 18966     0E1E  0081               	movwf	1
 18967     0E1F                     l13286:
 18968     0E1F  3001               	movlw	1
 18969     0E20  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18970     0E21  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18971     0E22  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18972     0E23                     l13288:
 18973                           
 18974                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 466:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 18975     0E23  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18976     0E24  0086               	movwf	6
 18977     0E25  0187               	clrf	7
 18978     0E26  0876               	movf	LIGHTBLUE_SplitByte@value,w
 18979     0E27  390F               	andlw	15
 18980     0E28  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 18981     0E29  0084               	movwf	4
 18982     0E2A  3001               	movlw	1	; select bank2/3
 18983     0E2B  0085               	movwf	5
 18984     0E2C  0800               	movf	0,w
 18985     0E2D  0081               	movwf	1
 18986     0E2E                     l13290:
 18987     0E2E  3001               	movlw	1
 18988     0E2F  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18989     0E30  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18990     0E31  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18991     0E32                     l13292:
 18992                           
 18993                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 467:     *payload = '\0';
 18994     0E32  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18995     0E33  0086               	movwf	6
 18996     0E34  0187               	clrf	7
 18997     0E35  0181               	clrf	1
 18998     0E36                     l196:
 18999     0E36  0008               	return
 19000     0E37                     __end_of_LIGHTBLUE_SplitByte:
 19001                           
 19002                           	psect	text75
 19003     02F3                     __ptext75:	
 19004 ;; *************** function _LIGHTBLUE_SendPacket *****************
 19005 ;; Defined at:
 19006 ;;		line 446 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;  packetID        1    wreg     unsigned char 
 19009 ;;  payload         1    7[COMMON] PTR unsigned char 
 19010 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 19011 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 19012 ;; Auto vars:     Size  Location     Type
 19013 ;;  packetID        1   10[COMMON] unsigned char 
 19014 ;; Return value:  Size  Location     Type
 19015 ;;                  1    wreg      void 
 19016 ;; Registers used:
 19017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19018 ;; Tracked objects:
 19019 ;;		On entry : 0/0
 19020 ;;		On exit  : 0/0
 19021 ;;		Unchanged: 0/0
 19022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19023 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19027 ;;Total ram usage:        4 bytes
 19028 ;; Hardware stack levels used: 1
 19029 ;; Hardware stack levels required when called: 6
 19030 ;; This function calls:
 19031 ;;		_RN487X_Write
 19032 ;;		_strlen
 19033 ;; This function is called by:
 19034 ;;		_LIGHTBLUE_TemperatureSensor
 19035 ;;		_LIGHTBLUE_AccelSensor
 19036 ;;		_LIGHTBLUE_PushButton
 19037 ;;		_LIGHTBLUE_LedState
 19038 ;;		_LIGHTBLUE_SendProtocolVersion
 19039 ;; This function uses a non-reentrant model
 19040 ;;
 19041                           
 19042     02F3                     _LIGHTBLUE_SendPacket:	
 19043                           ;psect for function _LIGHTBLUE_SendPacket
 19044                           
 19045                           
 19046                           ;incstack = 0
 19047                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19048                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 19049     02F3  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 19050     02F4                     l13414:
 19051                           
 19052                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 447:     RN487X.Write(('['));
 19053     02F4  305B               	movlw	91
 19054     02F5  00F6               	movwf	RN487X_Write@txData
 19055     02F6  3068               	movlw	low (_RN487X| (0+32768))
 19056     02F7  0084               	movwf	4
 19057     02F8  3090               	movlw	high (_RN487X| (0+32768))
 19058     02F9  0085               	movwf	5
 19059     02FA  3F01               	moviw [1]fsr0
 19060     02FB  008A               	movwf	10
 19061     02FC  3F00               	moviw [0]fsr0
 19062     02FD  000A               	callw
 19063     02FE  3182               	pagesel	$
 19064                           
 19065                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 448:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 19066     02FF  0140               	movlb	0	; select bank0
 19067     0300  086D               	movf	_sequenceNumber,w
 19068     0301  390F               	andlw	15
 19069     0302  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 19070     0303  0086               	movwf	6
 19071     0304  3001               	movlw	1	; select bank2/3
 19072     0305  0087               	movwf	7
 19073     0306  0801               	movf	1,w
 19074     0307  00F6               	movwf	RN487X_Write@txData
 19075     0308  3068               	movlw	low (_RN487X| (0+32768))
 19076     0309  0084               	movwf	4
 19077     030A  3090               	movlw	high (_RN487X| (0+32768))
 19078     030B  0085               	movwf	5
 19079     030C  3F01               	moviw [1]fsr0
 19080     030D  008A               	movwf	10
 19081     030E  3F00               	moviw [0]fsr0
 19082     030F  000A               	callw
 19083     0310  3182               	pagesel	$
 19084     0311                     l13416:
 19085     0311  3001               	movlw	1
 19086     0312  00F8               	movwf	??_LIGHTBLUE_SendPacket
 19087     0313  0878               	movf	??_LIGHTBLUE_SendPacket,w
 19088     0314  0140               	movlb	0	; select bank0
 19089     0315  07ED               	addwf	_sequenceNumber,f
 19090     0316                     l13418:
 19091                           
 19092                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 449:     RN487X.Write(packetID);
 19093     0316  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 19094     0317  00F6               	movwf	RN487X_Write@txData
 19095     0318  3068               	movlw	low (_RN487X| (0+32768))
 19096     0319  0084               	movwf	4
 19097     031A  3090               	movlw	high (_RN487X| (0+32768))
 19098     031B  0085               	movwf	5
 19099     031C  3F01               	moviw [1]fsr0
 19100     031D  008A               	movwf	10
 19101     031E  3F00               	moviw [0]fsr0
 19102     031F  000A               	callw
 19103     0320  3182               	pagesel	$
 19104     0321                     l13420:
 19105                           
 19106                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 450:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 19107     0321  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 19108     0322  00F1               	movwf	strlen@s
 19109     0323  01F2               	clrf	strlen@s+1
 19110     0324  318A  2215  3182   	fcall	_strlen
 19111     0327  0871               	movf	?_strlen,w
 19112     0328  00F8               	movwf	??_LIGHTBLUE_SendPacket
 19113     0329  0872               	movf	?_strlen+1,w
 19114     032A  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 19115     032B  3004               	movlw	4
 19116     032C                     u10455:
 19117     032C  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 19118     032D  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 19119     032E  0B89               	decfsz	9,f
 19120     032F  2B2C               	goto	u10455
 19121     0330  0878               	movf	??_LIGHTBLUE_SendPacket,w
 19122     0331  390F               	andlw	15
 19123     0332  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 19124     0333  0086               	movwf	6
 19125     0334  3001               	movlw	1	; select bank2/3
 19126     0335  0087               	movwf	7
 19127     0336  0801               	movf	1,w
 19128     0337  00F6               	movwf	RN487X_Write@txData
 19129     0338  3068               	movlw	low (_RN487X| (0+32768))
 19130     0339  0084               	movwf	4
 19131     033A  3090               	movlw	high (_RN487X| (0+32768))
 19132     033B  0085               	movwf	5
 19133     033C  3F01               	moviw [1]fsr0
 19134     033D  008A               	movwf	10
 19135     033E  3F00               	moviw [0]fsr0
 19136     033F  000A               	callw
 19137     0340  3182               	pagesel	$
 19138     0341                     l13422:
 19139                           
 19140                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 451:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 19141     0341  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 19142     0342  00F1               	movwf	strlen@s
 19143     0343  01F2               	clrf	strlen@s+1
 19144     0344  318A  2215  3182   	fcall	_strlen
 19145     0347  0871               	movf	?_strlen,w
 19146     0348  390F               	andlw	15
 19147     0349  3E58               	addlw	(low (__hex| (0+256)))& (0+255)
 19148     034A  0086               	movwf	6
 19149     034B  3001               	movlw	1	; select bank2/3
 19150     034C  0087               	movwf	7
 19151     034D  0801               	movf	1,w
 19152     034E  00F6               	movwf	RN487X_Write@txData
 19153     034F  3068               	movlw	low (_RN487X| (0+32768))
 19154     0350  0084               	movwf	4
 19155     0351  3090               	movlw	high (_RN487X| (0+32768))
 19156     0352  0085               	movwf	5
 19157     0353  3F01               	moviw [1]fsr0
 19158     0354  008A               	movwf	10
 19159     0355  3F00               	moviw [0]fsr0
 19160     0356  000A               	callw
 19161     0357  3182               	pagesel	$
 19162                           
 19163                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     while (*payload) {
 19164     0358  2B6B               	goto	l13428
 19165     0359                     l13424:
 19166                           
 19167                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 19168     0359  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 19169     035A  0086               	movwf	6
 19170     035B  0187               	clrf	7
 19171     035C  0801               	movf	1,w
 19172     035D  00F6               	movwf	RN487X_Write@txData
 19173     035E  3068               	movlw	low (_RN487X| (0+32768))
 19174     035F  0084               	movwf	4
 19175     0360  3090               	movlw	high (_RN487X| (0+32768))
 19176     0361  0085               	movwf	5
 19177     0362  3F01               	moviw [1]fsr0
 19178     0363  008A               	movwf	10
 19179     0364  3F00               	moviw [0]fsr0
 19180     0365  000A               	callw
 19181     0366  3182               	pagesel	$
 19182     0367                     l13426:
 19183     0367  3001               	movlw	1
 19184     0368  00F8               	movwf	??_LIGHTBLUE_SendPacket
 19185     0369  0878               	movf	??_LIGHTBLUE_SendPacket,w
 19186     036A  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 19187     036B                     l13428:
 19188                           
 19189                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     while (*payload) {
 19190     036B  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 19191     036C  0086               	movwf	6
 19192     036D  0187               	clrf	7
 19193     036E  0801               	movf	1,w
 19194     036F  1D03               	btfss	3,2
 19195     0370  2B72               	goto	u10461
 19196     0371  2B73               	goto	u10460
 19197     0372                     u10461:
 19198     0372  2B59               	goto	l13424
 19199     0373                     u10460:
 19200     0373                     l13430:
 19201                           
 19202                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((']'));
 19203     0373  305D               	movlw	93
 19204     0374  00F6               	movwf	RN487X_Write@txData
 19205     0375  3068               	movlw	low (_RN487X| (0+32768))
 19206     0376  0084               	movwf	4
 19207     0377  3090               	movlw	high (_RN487X| (0+32768))
 19208     0378  0085               	movwf	5
 19209     0379  3F01               	moviw [1]fsr0
 19210     037A  008A               	movwf	10
 19211     037B  3F00               	moviw [0]fsr0
 19212     037C  000A               	callw
 19213     037D  3182               	pagesel	$
 19214     037E                     l190:
 19215     037E  0008               	return
 19216     037F                     __end_of_LIGHTBLUE_SendPacket:
 19217                           
 19218                           	psect	text76
 19219     0A15                     __ptext76:	
 19220 ;; *************** function _strlen *****************
 19221 ;; Defined at:
 19222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;  s               2    1[COMMON] PTR const unsigned char 
 19225 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3736(80), STR_5(12), STR_3(11), 
 19226 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 19227 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 19228 ;; Auto vars:     Size  Location     Type
 19229 ;;  a               2    4[COMMON] PTR const unsigned char 
 19230 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3736(80), STR_5(12), STR_3(11), 
 19231 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 19232 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 19233 ;; Return value:  Size  Location     Type
 19234 ;;                  2    1[COMMON] unsigned int 
 19235 ;; Registers used:
 19236 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19237 ;; Tracked objects:
 19238 ;;		On entry : 0/0
 19239 ;;		On exit  : 0/0
 19240 ;;		Unchanged: 0/0
 19241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19245 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19246 ;;Total ram usage:        5 bytes
 19247 ;; Hardware stack levels used: 1
 19248 ;; Hardware stack levels required when called: 4
 19249 ;; This function calls:
 19250 ;;		Nothing
 19251 ;; This function is called by:
 19252 ;;		_LIGHTBLUE_SendProtocolVersion
 19253 ;;		_LIGHTBLUE_SendSerialData
 19254 ;;		_LIGHTBLUE_SendPacket
 19255 ;;		_LIGHTBLUE_SplitByte
 19256 ;;		_rn487x_PrintMessage
 19257 ;;		_strstr
 19258 ;; This function uses a non-reentrant model
 19259 ;;
 19260                           
 19261     0A15                     _strlen:	
 19262                           ;psect for function _strlen
 19263                           
 19264     0A15                     l12876:	
 19265                           ;incstack = 0
 19266                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 19267                           
 19268     0A15  0872               	movf	strlen@s+1,w
 19269     0A16  00F5               	movwf	strlen@a+1
 19270     0A17  0871               	movf	strlen@s,w
 19271     0A18  00F4               	movwf	strlen@a
 19272     0A19  2A1E               	goto	l12880
 19273     0A1A                     l12878:
 19274     0A1A  3001               	movlw	1
 19275     0A1B  07F1               	addwf	strlen@s,f
 19276     0A1C  3000               	movlw	0
 19277     0A1D  3DF2               	addwfc	strlen@s+1,f
 19278     0A1E                     l12880:
 19279     0A1E  0871               	movf	strlen@s,w
 19280     0A1F  0084               	movwf	4
 19281     0A20  0872               	movf	strlen@s+1,w
 19282     0A21  0085               	movwf	5
 19283     0A22  0012               	moviw fsr0++
 19284     0A23  1D03               	btfss	3,2
 19285     0A24  2A26               	goto	u9811
 19286     0A25  2A27               	goto	u9810
 19287     0A26                     u9811:
 19288     0A26  2A1A               	goto	l12878
 19289     0A27                     u9810:
 19290     0A27                     l12882:
 19291     0A27  0874               	movf	strlen@a,w
 19292     0A28  0271               	subwf	strlen@s,w
 19293     0A29  00F1               	movwf	?_strlen
 19294     0A2A  0875               	movf	strlen@a+1,w
 19295     0A2B  3B72               	subwfb	strlen@s+1,w
 19296     0A2C  00F2               	movwf	?_strlen+1
 19297     0A2D                     l3283:
 19298     0A2D  0008               	return
 19299     0A2E                     __end_of_strlen:
 19300                           
 19301                           	psect	text77
 19302     17B3                     __ptext77:	
 19303 ;; *************** function _RN487X_Write *****************
 19304 ;; Defined at:
 19305 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  txData          1    6[COMMON] unsigned char 
 19308 ;; Auto vars:     Size  Location     Type
 19309 ;;		None
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  1    wreg      void 
 19312 ;; Registers used:
 19313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19323 ;;Total ram usage:        1 bytes
 19324 ;; Hardware stack levels used: 1
 19325 ;; Hardware stack levels required when called: 5
 19326 ;; This function calls:
 19327 ;;		_EUSART1_Write
 19328 ;;		_EUSART2_Write
 19329 ;; This function is called by:
 19330 ;;		_RN487X_SendCmd
 19331 ;;		_LIGHTBLUE_SendPacket
 19332 ;;		_LIGHTBLUE_SendSerialData
 19333 ;;		_RN487X_Example_TransparentUart
 19334 ;;		_main
 19335 ;; This function uses a non-reentrant model
 19336 ;;
 19337                           
 19338     17B3                     _RN487X_Write:	
 19339                           ;psect for function _RN487X_Write
 19340                           
 19341     17B3                     l12830:	
 19342                           ;incstack = 0
 19343                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19344                           
 19345                           
 19346                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 19347     17B3  0876               	movf	RN487X_Write@txData,w
 19348     17B4  00F1               	movwf	EUSART2_Write@txData
 19349     17B5  3016               	movlw	low ((_uart+22)| (0+32768))
 19350     17B6  0084               	movwf	4
 19351     17B7  3090               	movlw	high ((_uart+22)| (0+32768))
 19352     17B8  0085               	movwf	5
 19353     17B9  3F01               	moviw [1]fsr0
 19354     17BA  008A               	movwf	10
 19355     17BB  3F00               	moviw [0]fsr0
 19356     17BC  000A               	callw
 19357     17BD  3197               	pagesel	$
 19358     17BE                     l783:
 19359     17BE  0008               	return
 19360     17BF                     __end_of_RN487X_Write:
 19361                           
 19362                           	psect	text78
 19363     0C23                     __ptext78:	
 19364 ;; *************** function _EUSART1_Write *****************
 19365 ;; Defined at:
 19366 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 19367 ;; Parameters:    Size  Location     Type
 19368 ;;  txData          1    1[COMMON] unsigned char 
 19369 ;; Auto vars:     Size  Location     Type
 19370 ;;		None
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  1    wreg      void 
 19373 ;; Registers used:
 19374 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19380 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19384 ;;Total ram usage:        2 bytes
 19385 ;; Hardware stack levels used: 1
 19386 ;; Hardware stack levels required when called: 4
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		_putch
 19391 ;;		_RN487X_Write
 19392 ;;		_rn487x_PrintMessageStart
 19393 ;;		_rn487x_PrintMessageEnd
 19394 ;;		_rn487x_PrintIndicatorCharacters
 19395 ;;		_rn487x_PrintMessage
 19396 ;;		_LIGHTBLUE_PerformAction
 19397 ;;		_RN487X_Example_TransparentUart
 19398 ;;		_main
 19399 ;; This function uses a non-reentrant model
 19400 ;;
 19401                           
 19402     0C23                     _EUSART1_Write:	
 19403                           ;psect for function _EUSART1_Write
 19404                           
 19405     0C23                     l12802:	
 19406                           ;incstack = 0
 19407                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19408                           
 19409     0C23                     l12804:	
 19410                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 19411                           
 19412                           
 19413                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 19414     0C23  0140               	movlb	0	; select bank0
 19415     0C24  085C               	movf	_eusart1TxBufferRemaining,w	;volatile
 19416     0C25  1903               	btfsc	3,2
 19417     0C26  2C28               	goto	u9741
 19418     0C27  2C29               	goto	u9740
 19419     0C28                     u9741:
 19420     0C28  2C23               	goto	l12804
 19421     0C29                     u9740:
 19422     0C29                     l1216:
 19423                           
 19424                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 19425     0C29  014E               	movlb	14	; select bank14
 19426     0C2A  1A19               	btfsc	25,4	;volatile
 19427     0C2B  2C2D               	goto	u9751
 19428     0C2C  2C2E               	goto	u9750
 19429     0C2D                     u9751:
 19430     0C2D  2C32               	goto	l1217
 19431     0C2E                     u9750:
 19432     0C2E                     l12806:
 19433                           
 19434                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 19435     0C2E  0871               	movf	EUSART1_Write@txData,w
 19436     0C2F  0142               	movlb	2	; select bank2
 19437     0C30  009A               	movwf	26	;volatile
 19438                           
 19439                           ;mcc_generated_files/eusart1.c: 182:     }
 19440     0C31  2C47               	goto	l12818
 19441     0C32                     l1217:	
 19442                           ;mcc_generated_files/eusart1.c: 183:     else
 19443                           
 19444                           
 19445                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 19446     0C32  1219               	bcf	25,4	;volatile
 19447     0C33                     l12808:
 19448                           
 19449                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 19450     0C33  0140               	movlb	0	; select bank0
 19451     0C34  085E               	movf	_eusart1TxHead,w
 19452     0C35  3ECD               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 19453     0C36  0086               	movwf	6
 19454     0C37  0187               	clrf	7
 19455     0C38  0871               	movf	EUSART1_Write@txData,w
 19456     0C39  0081               	movwf	1
 19457     0C3A                     l12810:
 19458     0C3A  3001               	movlw	1
 19459     0C3B  00F2               	movwf	??_EUSART1_Write
 19460     0C3C  0872               	movf	??_EUSART1_Write,w
 19461     0C3D  07DE               	addwf	_eusart1TxHead,f	;volatile
 19462     0C3E                     l12812:
 19463                           
 19464                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 19465     0C3E  3008               	movlw	8
 19466     0C3F  025E               	subwf	_eusart1TxHead,w	;volatile
 19467     0C40  1C03               	skipc
 19468     0C41  2C43               	goto	u9761
 19469     0C42  2C44               	goto	u9760
 19470     0C43                     u9761:
 19471     0C43  2C45               	goto	l12816
 19472     0C44                     u9760:
 19473     0C44                     l12814:
 19474                           
 19475                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 19476     0C44  01DE               	clrf	_eusart1TxHead	;volatile
 19477     0C45                     l12816:
 19478                           
 19479                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 19480     0C45  3001               	movlw	1
 19481     0C46  02DC               	subwf	_eusart1TxBufferRemaining,f	;volatile
 19482     0C47                     l12818:
 19483                           
 19484                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 19485     0C47  014E               	movlb	14	; select bank14
 19486     0C48  1619               	bsf	25,4	;volatile
 19487     0C49                     l1220:
 19488     0C49  0008               	return
 19489     0C4A                     __end_of_EUSART1_Write:
 19490                           
 19491                           	psect	text79
 19492     0BFC                     __ptext79:	
 19493 ;; *************** function _EUSART2_Write *****************
 19494 ;; Defined at:
 19495 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 19496 ;; Parameters:    Size  Location     Type
 19497 ;;  txData          1    1[COMMON] unsigned char 
 19498 ;; Auto vars:     Size  Location     Type
 19499 ;;		None
 19500 ;; Return value:  Size  Location     Type
 19501 ;;                  1    wreg      void 
 19502 ;; Registers used:
 19503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19504 ;; Tracked objects:
 19505 ;;		On entry : 0/0
 19506 ;;		On exit  : 0/0
 19507 ;;		Unchanged: 0/0
 19508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19513 ;;Total ram usage:        2 bytes
 19514 ;; Hardware stack levels used: 1
 19515 ;; Hardware stack levels required when called: 4
 19516 ;; This function calls:
 19517 ;;		Nothing
 19518 ;; This function is called by:
 19519 ;;		_RN487X_Write
 19520 ;;		_rn487x_PrintMessageStart
 19521 ;;		_rn487x_PrintMessageEnd
 19522 ;;		_rn487x_PrintIndicatorCharacters
 19523 ;;		_rn487x_PrintMessage
 19524 ;;		_LIGHTBLUE_PerformAction
 19525 ;;		_RN487X_Example_TransparentUart
 19526 ;;		_main
 19527 ;; This function uses a non-reentrant model
 19528 ;;
 19529                           
 19530     0BFC                     _EUSART2_Write:	
 19531                           ;psect for function _EUSART2_Write
 19532                           
 19533     0BFC                     l12758:	
 19534                           ;incstack = 0
 19535                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19536                           
 19537     0BFC                     l12760:	
 19538                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 19539                           
 19540                           
 19541                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 19542     0BFC  0140               	movlb	0	; select bank0
 19543     0BFD  0862               	movf	_eusart2TxBufferRemaining,w	;volatile
 19544     0BFE  1903               	btfsc	3,2
 19545     0BFF  2C01               	goto	u9691
 19546     0C00  2C02               	goto	u9690
 19547     0C01                     u9691:
 19548     0C01  2BFC               	goto	l12760
 19549     0C02                     u9690:
 19550     0C02                     l1072:
 19551                           
 19552                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 19553     0C02  014E               	movlb	14	; select bank14
 19554     0C03  1B19               	btfsc	25,6	;volatile
 19555     0C04  2C06               	goto	u9701
 19556     0C05  2C07               	goto	u9700
 19557     0C06                     u9701:
 19558     0C06  2C0B               	goto	l1073
 19559     0C07                     u9700:
 19560     0C07                     l12762:
 19561                           
 19562                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 19563     0C07  0871               	movf	EUSART2_Write@txData,w
 19564     0C08  0154               	movlb	20	; select bank20
 19565     0C09  009A               	movwf	26	;volatile
 19566                           
 19567                           ;mcc_generated_files/eusart2.c: 182:     }
 19568     0C0A  2C20               	goto	l12774
 19569     0C0B                     l1073:	
 19570                           ;mcc_generated_files/eusart2.c: 183:     else
 19571                           
 19572                           
 19573                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 19574     0C0B  1319               	bcf	25,6	;volatile
 19575     0C0C                     l12764:
 19576                           
 19577                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 19578     0C0C  0140               	movlb	0	; select bank0
 19579     0C0D  0864               	movf	_eusart2TxHead,w
 19580     0C0E  3EE5               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 19581     0C0F  0086               	movwf	6
 19582     0C10  0187               	clrf	7
 19583     0C11  0871               	movf	EUSART2_Write@txData,w
 19584     0C12  0081               	movwf	1
 19585     0C13                     l12766:
 19586     0C13  3001               	movlw	1
 19587     0C14  00F2               	movwf	??_EUSART2_Write
 19588     0C15  0872               	movf	??_EUSART2_Write,w
 19589     0C16  07E4               	addwf	_eusart2TxHead,f	;volatile
 19590     0C17                     l12768:
 19591                           
 19592                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 19593     0C17  3008               	movlw	8
 19594     0C18  0264               	subwf	_eusart2TxHead,w	;volatile
 19595     0C19  1C03               	skipc
 19596     0C1A  2C1C               	goto	u9711
 19597     0C1B  2C1D               	goto	u9710
 19598     0C1C                     u9711:
 19599     0C1C  2C1E               	goto	l12772
 19600     0C1D                     u9710:
 19601     0C1D                     l12770:
 19602                           
 19603                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 19604     0C1D  01E4               	clrf	_eusart2TxHead	;volatile
 19605     0C1E                     l12772:
 19606                           
 19607                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 19608     0C1E  3001               	movlw	1
 19609     0C1F  02E2               	subwf	_eusart2TxBufferRemaining,f	;volatile
 19610     0C20                     l12774:
 19611                           
 19612                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 19613     0C20  014E               	movlb	14	; select bank14
 19614     0C21  1719               	bsf	25,6	;volatile
 19615     0C22                     l1076:
 19616     0C22  0008               	return
 19617     0C23                     __end_of_EUSART2_Write:
 19618                           
 19619                           	psect	text80
 19620     07BA                     __ptext80:	
 19621 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 19622 ;; Defined at:
 19623 ;;		line 117 in file "mcc_generated_files/application/BMA253_accel.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;  accelData       1    wreg     PTR struct .
 19626 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 19627 ;; Auto vars:     Size  Location     Type
 19628 ;;  accelData       1   16[BANK0 ] PTR struct .
 19629 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 19630 ;;  sensorValue     2   17[BANK0 ] short 
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  1    wreg      void 
 19633 ;; Registers used:
 19634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19635 ;; Tracked objects:
 19636 ;;		On entry : 0/0
 19637 ;;		On exit  : 0/0
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19641 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19643 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19644 ;;Total ram usage:        3 bytes
 19645 ;; Hardware stack levels used: 1
 19646 ;; Hardware stack levels required when called: 15
 19647 ;; This function calls:
 19648 ;;		_BMA253_GetAccelDataX
 19649 ;;		_BMA253_GetAccelDataY
 19650 ;;		_BMA253_GetAccelDataZ
 19651 ;;		_BMA253_NewAccelDataRdyX
 19652 ;;		_BMA253_NewAccelDataRdyY
 19653 ;;		_BMA253_NewAccelDataRdyZ
 19654 ;; This function is called by:
 19655 ;;		_LIGHTBLUE_AccelSensor
 19656 ;; This function uses a non-reentrant model
 19657 ;;
 19658                           
 19659     07BA                     _BMA253_GetAccelDataXYZ:	
 19660                           ;psect for function _BMA253_GetAccelDataXYZ
 19661                           
 19662                           
 19663                           ;incstack = 0
 19664 ;; hardware stack exceeded
 19665                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19666                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 19667     07BA  0140               	movlb	0	; select bank0
 19668     07BB  00B0               	movwf	BMA253_GetAccelDataXYZ@accelData
 19669     07BC                     l13390:
 19670     07BC                     l13392:	
 19671                           ;mcc_generated_files/application/BMA253_accel.c: 117: void BMA253_GetAccelDataXYZ(BMA253
      +                          _ACCEL_DATA_t *accelData);mcc_generated_files/application/BMA253_accel.c: 118: {;mcc_gen
      +                          erated_files/application/BMA253_accel.c: 119:     int16_t sensorValue;;mcc_generated_fil
      +                          es/application/BMA253_accel.c: 120:     while (!BMA253_NewAccelDataRdyX())
 19672                           
 19673                           
 19674                           ;mcc_generated_files/application/BMA253_accel.c: 120:     while (!BMA253_NewAccelDataRdy
      +                          X())
 19675     07BC  3188  20C0  3187   	fcall	_BMA253_NewAccelDataRdyX
 19676     07BF  3A00               	xorlw	0
 19677     07C0  1903               	skipnz
 19678     07C1  2FC3               	goto	u10421
 19679     07C2  2FC4               	goto	u10420
 19680     07C3                     u10421:
 19681     07C3  2FBC               	goto	l13392
 19682     07C4                     u10420:
 19683     07C4                     l13394:
 19684                           
 19685                           ;mcc_generated_files/application/BMA253_accel.c: 125:     BMA253_GetAccelDataX(&sensorVa
      +                          lue);
 19686     07C4  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19687     07C5  318D  2520  3187   	fcall	_BMA253_GetAccelDataX
 19688     07C8                     l13396:
 19689                           
 19690                           ;mcc_generated_files/application/BMA253_accel.c: 126:     accelData->x = sensorValue;
 19691     07C8  0140               	movlb	0	; select bank0
 19692     07C9  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19693     07CA  0086               	movwf	6
 19694     07CB  0187               	clrf	7
 19695     07CC  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19696     07CD  3FC0               	movwi [0]fsr1
 19697     07CE  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19698     07CF  3FC1               	movwi [1]fsr1
 19699     07D0                     l13398:	
 19700                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 19701                           
 19702                           
 19703                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 19704     07D0  3188  20D1  3187   	fcall	_BMA253_NewAccelDataRdyY
 19705     07D3  3A00               	xorlw	0
 19706     07D4  1903               	skipnz
 19707     07D5  2FD7               	goto	u10431
 19708     07D6  2FD8               	goto	u10430
 19709     07D7                     u10431:
 19710     07D7  2FD0               	goto	l13398
 19711     07D8                     u10430:
 19712     07D8                     l13400:
 19713                           
 19714                           ;mcc_generated_files/application/BMA253_accel.c: 133:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 19715     07D8  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19716     07D9  318D  254E  3187   	fcall	_BMA253_GetAccelDataY
 19717     07DC                     l13402:
 19718                           
 19719                           ;mcc_generated_files/application/BMA253_accel.c: 134:     accelData->y = sensorValue;
 19720     07DC  0140               	movlb	0	; select bank0
 19721     07DD  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19722     07DE  3E02               	addlw	2
 19723     07DF  0086               	movwf	6
 19724     07E0  0187               	clrf	7
 19725     07E1  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19726     07E2  3FC0               	movwi [0]fsr1
 19727     07E3  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19728     07E4  3FC1               	movwi [1]fsr1
 19729     07E5                     l13404:	
 19730                           ;mcc_generated_files/application/BMA253_accel.c: 136:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 19731                           
 19732                           
 19733                           ;mcc_generated_files/application/BMA253_accel.c: 136:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 19734     07E5  3188  20E2  3187   	fcall	_BMA253_NewAccelDataRdyZ
 19735     07E8  3A00               	xorlw	0
 19736     07E9  1903               	skipnz
 19737     07EA  2FEC               	goto	u10441
 19738     07EB  2FED               	goto	u10440
 19739     07EC                     u10441:
 19740     07EC  2FE5               	goto	l13404
 19741     07ED                     u10440:
 19742     07ED                     l13406:
 19743                           
 19744                           ;mcc_generated_files/application/BMA253_accel.c: 141:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 19745     07ED  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19746     07EE  318D  257C  3187   	fcall	_BMA253_GetAccelDataZ
 19747     07F1                     l13408:
 19748                           
 19749                           ;mcc_generated_files/application/BMA253_accel.c: 142:     accelData->z = sensorValue;
 19750     07F1  0140               	movlb	0	; select bank0
 19751     07F2  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19752     07F3  3E04               	addlw	4
 19753     07F4  0086               	movwf	6
 19754     07F5  0187               	clrf	7
 19755     07F6  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19756     07F7  3FC0               	movwi [0]fsr1
 19757     07F8  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19758     07F9  3FC1               	movwi [1]fsr1
 19759     07FA                     l43:
 19760     07FA  0008               	return
 19761     07FB                     __end_of_BMA253_GetAccelDataXYZ:
 19762                           
 19763                           	psect	text81
 19764     0D7C                     __ptext81:	
 19765 ;; *************** function _BMA253_GetAccelDataZ *****************
 19766 ;; Defined at:
 19767 ;;		line 103 in file "mcc_generated_files/application/BMA253_accel.c"
 19768 ;; Parameters:    Size  Location     Type
 19769 ;;  zAccelData      1    wreg     PTR short 
 19770 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19771 ;; Auto vars:     Size  Location     Type
 19772 ;;  zAccelData      1   13[BANK0 ] PTR short 
 19773 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19774 ;;  msbData         1   15[BANK0 ] unsigned char 
 19775 ;;  lsbData         1   14[BANK0 ] unsigned char 
 19776 ;; Return value:  Size  Location     Type
 19777 ;;                  1    wreg      void 
 19778 ;; Registers used:
 19779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19780 ;; Tracked objects:
 19781 ;;		On entry : 0/0
 19782 ;;		On exit  : 0/0
 19783 ;;		Unchanged: 0/0
 19784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19786 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19787 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19788 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19789 ;;Total ram usage:        6 bytes
 19790 ;; Hardware stack levels used: 1
 19791 ;; Hardware stack levels required when called: 14
 19792 ;; This function calls:
 19793 ;;		_BMA253_NewAccelDataRdyZ
 19794 ;;		_i2c_read1ByteRegister
 19795 ;; This function is called by:
 19796 ;;		_BMA253_GetAccelDataXYZ
 19797 ;; This function uses a non-reentrant model
 19798 ;;
 19799                           
 19800     0D7C                     _BMA253_GetAccelDataZ:	
 19801                           ;psect for function _BMA253_GetAccelDataZ
 19802                           
 19803                           
 19804                           ;incstack = 0
 19805 ;; hardware stack exceeded
 19806                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19807                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 19808     0D7C  0140               	movlb	0	; select bank0
 19809     0D7D  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 19810     0D7E                     l13262:
 19811     0D7E                     l13264:	
 19812                           ;mcc_generated_files/application/BMA253_accel.c: 103: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 104: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 105:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 106:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          107:     while(!BMA253_NewAccelDataRdyZ())
 19813                           
 19814                           
 19815                           ;mcc_generated_files/application/BMA253_accel.c: 107:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 19816     0D7E  3188  20E2  318D   	fcall	_BMA253_NewAccelDataRdyZ
 19817     0D81  3A00               	xorlw	0
 19818     0D82  1903               	skipnz
 19819     0D83  2D85               	goto	u10321
 19820     0D84  2D86               	goto	u10320
 19821     0D85                     u10321:
 19822     0D85  2D7E               	goto	l13264
 19823     0D86                     u10320:
 19824     0D86                     l13266:
 19825                           
 19826                           ;mcc_generated_files/application/BMA253_accel.c: 112:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 19827     0D86  3006               	movlw	6
 19828     0D87  0140               	movlb	0	; select bank0
 19829     0D88  00A4               	movwf	i2c_read1ByteRegister@reg
 19830     0D89  3019               	movlw	25
 19831     0D8A  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 19832     0D8D  0140               	movlb	0	; select bank0
 19833     0D8E  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 19834                           
 19835                           ;mcc_generated_files/application/BMA253_accel.c: 113:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 19836     0D8F  3007               	movlw	7
 19837     0D90  00A4               	movwf	i2c_read1ByteRegister@reg
 19838     0D91  3019               	movlw	25
 19839     0D92  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 19840     0D95  0140               	movlb	0	; select bank0
 19841     0D96  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 19842     0D97                     l13268:
 19843                           
 19844                           ;mcc_generated_files/application/BMA253_accel.c: 114:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 19845     0D97  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 19846     0D98  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 19847     0D99  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 19848     0D9A  00AA               	movwf	??_BMA253_GetAccelDataZ
 19849     0D9B  3004               	movlw	4
 19850     0D9C  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 19851     0D9D                     u10335:
 19852     0D9D  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 19853     0D9E  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 19854     0D9F  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 19855     0DA0  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 19856     0DA1  2D9D               	goto	u10335
 19857     0DA2  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 19858     0DA3  0086               	movwf	6
 19859     0DA4  0187               	clrf	7
 19860     0DA5  082A               	movf	??_BMA253_GetAccelDataZ,w
 19861     0DA6  3FC0               	movwi [0]fsr1
 19862     0DA7  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 19863     0DA8  3FC1               	movwi [1]fsr1
 19864     0DA9                     l31:
 19865     0DA9  0008               	return
 19866     0DAA                     __end_of_BMA253_GetAccelDataZ:
 19867                           
 19868                           	psect	text82
 19869     08E2                     __ptext82:	
 19870 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 19871 ;; Defined at:
 19872 ;;		line 168 in file "mcc_generated_files/application/BMA253_accel.c"
 19873 ;; Parameters:    Size  Location     Type
 19874 ;;		None
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;  zNewData        1   11[COMMON] _Bool 
 19877 ;; Return value:  Size  Location     Type
 19878 ;;                  1    wreg      _Bool 
 19879 ;; Registers used:
 19880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19890 ;;Total ram usage:        1 bytes
 19891 ;; Hardware stack levels used: 1
 19892 ;; Hardware stack levels required when called: 13
 19893 ;; This function calls:
 19894 ;;		_i2c_read1ByteRegister
 19895 ;; This function is called by:
 19896 ;;		_BMA253_GetAccelDataZ
 19897 ;;		_BMA253_GetAccelDataXYZ
 19898 ;; This function uses a non-reentrant model
 19899 ;;
 19900                           
 19901     08E2                     _BMA253_NewAccelDataRdyZ:	
 19902                           ;psect for function _BMA253_NewAccelDataRdyZ
 19903                           
 19904     08E2                     l13190:	
 19905                           ;incstack = 0
 19906                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19907                           
 19908                           
 19909                           ;mcc_generated_files/application/BMA253_accel.c: 170:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 172:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 19910     08E2  3006               	movlw	6
 19911     08E3  0140               	movlb	0	; select bank0
 19912     08E4  00A4               	movwf	i2c_read1ByteRegister@reg
 19913     08E5  3019               	movlw	25
 19914     08E6  3186  2614  3188   	fcall	_i2c_read1ByteRegister
 19915     08E9  3901               	andlw	1
 19916     08EA  1D03               	btfss	3,2
 19917     08EB  28ED               	goto	u10181
 19918     08EC  28EF               	goto	u10180
 19919     08ED                     u10181:
 19920     08ED  3001               	movlw	1
 19921     08EE  28F0               	goto	u10190
 19922     08EF                     u10180:
 19923     08EF  3000               	movlw	0
 19924     08F0                     u10190:
 19925     08F0  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 19926     08F1                     l13192:
 19927                           
 19928                           ;mcc_generated_files/application/BMA253_accel.c: 174:     return zNewData;
 19929     08F1  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 19930     08F2                     l55:
 19931     08F2  0008               	return
 19932     08F3                     __end_of_BMA253_NewAccelDataRdyZ:
 19933                           
 19934                           	psect	text83
 19935     0D4E                     __ptext83:	
 19936 ;; *************** function _BMA253_GetAccelDataY *****************
 19937 ;; Defined at:
 19938 ;;		line 89 in file "mcc_generated_files/application/BMA253_accel.c"
 19939 ;; Parameters:    Size  Location     Type
 19940 ;;  yAccelData      1    wreg     PTR short 
 19941 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19942 ;; Auto vars:     Size  Location     Type
 19943 ;;  yAccelData      1   13[BANK0 ] PTR short 
 19944 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19945 ;;  msbData         1   15[BANK0 ] unsigned char 
 19946 ;;  lsbData         1   14[BANK0 ] unsigned char 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      void 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19957 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19958 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19959 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19960 ;;Total ram usage:        6 bytes
 19961 ;; Hardware stack levels used: 1
 19962 ;; Hardware stack levels required when called: 14
 19963 ;; This function calls:
 19964 ;;		_BMA253_NewAccelDataRdyY
 19965 ;;		_i2c_read1ByteRegister
 19966 ;; This function is called by:
 19967 ;;		_BMA253_GetAccelDataXYZ
 19968 ;; This function uses a non-reentrant model
 19969 ;;
 19970                           
 19971     0D4E                     _BMA253_GetAccelDataY:	
 19972                           ;psect for function _BMA253_GetAccelDataY
 19973                           
 19974                           
 19975                           ;incstack = 0
 19976 ;; hardware stack exceeded
 19977                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19978                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 19979     0D4E  0140               	movlb	0	; select bank0
 19980     0D4F  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 19981     0D50                     l13254:
 19982     0D50                     l13256:	
 19983                           ;mcc_generated_files/application/BMA253_accel.c: 89: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 90: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 91:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 92:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 93: 
      +                              while(!BMA253_NewAccelDataRdyY())
 19984                           
 19985                           
 19986                           ;mcc_generated_files/application/BMA253_accel.c: 93:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 19987     0D50  3188  20D1  318D   	fcall	_BMA253_NewAccelDataRdyY
 19988     0D53  3A00               	xorlw	0
 19989     0D54  1903               	skipnz
 19990     0D55  2D57               	goto	u10301
 19991     0D56  2D58               	goto	u10300
 19992     0D57                     u10301:
 19993     0D57  2D50               	goto	l13256
 19994     0D58                     u10300:
 19995     0D58                     l13258:
 19996                           
 19997                           ;mcc_generated_files/application/BMA253_accel.c: 98:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 19998     0D58  3004               	movlw	4
 19999     0D59  0140               	movlb	0	; select bank0
 20000     0D5A  00A4               	movwf	i2c_read1ByteRegister@reg
 20001     0D5B  3019               	movlw	25
 20002     0D5C  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 20003     0D5F  0140               	movlb	0	; select bank0
 20004     0D60  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 20005                           
 20006                           ;mcc_generated_files/application/BMA253_accel.c: 99:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x05));
 20007     0D61  3005               	movlw	5
 20008     0D62  00A4               	movwf	i2c_read1ByteRegister@reg
 20009     0D63  3019               	movlw	25
 20010     0D64  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 20011     0D67  0140               	movlb	0	; select bank0
 20012     0D68  00AF               	movwf	BMA253_GetAccelDataY@msbData
 20013     0D69                     l13260:
 20014                           
 20015                           ;mcc_generated_files/application/BMA253_accel.c: 100:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 20016     0D69  082F               	movf	BMA253_GetAccelDataY@msbData,w
 20017     0D6A  00AB               	movwf	??_BMA253_GetAccelDataY+1
 20018     0D6B  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 20019     0D6C  00AA               	movwf	??_BMA253_GetAccelDataY
 20020     0D6D  3004               	movlw	4
 20021     0D6E  00AC               	movwf	??_BMA253_GetAccelDataY+2
 20022     0D6F                     u10315:
 20023     0D6F  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 20024     0D70  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 20025     0D71  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 20026     0D72  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 20027     0D73  2D6F               	goto	u10315
 20028     0D74  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 20029     0D75  0086               	movwf	6
 20030     0D76  0187               	clrf	7
 20031     0D77  082A               	movf	??_BMA253_GetAccelDataY,w
 20032     0D78  3FC0               	movwi [0]fsr1
 20033     0D79  082B               	movf	??_BMA253_GetAccelDataY+1,w
 20034     0D7A  3FC1               	movwi [1]fsr1
 20035     0D7B                     l25:
 20036     0D7B  0008               	return
 20037     0D7C                     __end_of_BMA253_GetAccelDataY:
 20038                           
 20039                           	psect	text84
 20040     08D1                     __ptext84:	
 20041 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 20042 ;; Defined at:
 20043 ;;		line 159 in file "mcc_generated_files/application/BMA253_accel.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;  yNewData        1   11[COMMON] _Bool 
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      _Bool 
 20050 ;; Registers used:
 20051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20061 ;;Total ram usage:        1 bytes
 20062 ;; Hardware stack levels used: 1
 20063 ;; Hardware stack levels required when called: 13
 20064 ;; This function calls:
 20065 ;;		_i2c_read1ByteRegister
 20066 ;; This function is called by:
 20067 ;;		_BMA253_GetAccelDataY
 20068 ;;		_BMA253_GetAccelDataXYZ
 20069 ;; This function uses a non-reentrant model
 20070 ;;
 20071                           
 20072     08D1                     _BMA253_NewAccelDataRdyY:	
 20073                           ;psect for function _BMA253_NewAccelDataRdyY
 20074                           
 20075     08D1                     l13184:	
 20076                           ;incstack = 0
 20077                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20078                           
 20079                           
 20080                           ;mcc_generated_files/application/BMA253_accel.c: 161:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 163:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 20081     08D1  3004               	movlw	4
 20082     08D2  0140               	movlb	0	; select bank0
 20083     08D3  00A4               	movwf	i2c_read1ByteRegister@reg
 20084     08D4  3019               	movlw	25
 20085     08D5  3186  2614  3188   	fcall	_i2c_read1ByteRegister
 20086     08D8  3901               	andlw	1
 20087     08D9  1D03               	btfss	3,2
 20088     08DA  28DC               	goto	u10161
 20089     08DB  28DE               	goto	u10160
 20090     08DC                     u10161:
 20091     08DC  3001               	movlw	1
 20092     08DD  28DF               	goto	u10170
 20093     08DE                     u10160:
 20094     08DE  3000               	movlw	0
 20095     08DF                     u10170:
 20096     08DF  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 20097     08E0                     l13186:
 20098                           
 20099                           ;mcc_generated_files/application/BMA253_accel.c: 165:     return yNewData;
 20100     08E0  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 20101     08E1                     l52:
 20102     08E1  0008               	return
 20103     08E2                     __end_of_BMA253_NewAccelDataRdyY:
 20104                           
 20105                           	psect	text85
 20106     0D20                     __ptext85:	
 20107 ;; *************** function _BMA253_GetAccelDataX *****************
 20108 ;; Defined at:
 20109 ;;		line 75 in file "mcc_generated_files/application/BMA253_accel.c"
 20110 ;; Parameters:    Size  Location     Type
 20111 ;;  xAccelData      1    wreg     PTR short 
 20112 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;  xAccelData      1   13[BANK0 ] PTR short 
 20115 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 20116 ;;  msbData         1   15[BANK0 ] unsigned char 
 20117 ;;  lsbData         1   14[BANK0 ] unsigned char 
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  1    wreg      void 
 20120 ;; Registers used:
 20121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20122 ;; Tracked objects:
 20123 ;;		On entry : 0/0
 20124 ;;		On exit  : 0/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20129 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20131 ;;Total ram usage:        6 bytes
 20132 ;; Hardware stack levels used: 1
 20133 ;; Hardware stack levels required when called: 14
 20134 ;; This function calls:
 20135 ;;		_BMA253_NewAccelDataRdyX
 20136 ;;		_i2c_read1ByteRegister
 20137 ;; This function is called by:
 20138 ;;		_BMA253_GetAccelDataXYZ
 20139 ;; This function uses a non-reentrant model
 20140 ;;
 20141                           
 20142     0D20                     _BMA253_GetAccelDataX:	
 20143                           ;psect for function _BMA253_GetAccelDataX
 20144                           
 20145                           
 20146                           ;incstack = 0
 20147 ;; hardware stack exceeded
 20148                           ; Regs used in _BMA253_GetAccelDataX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20149                           ;BMA253_GetAccelDataX@xAccelData stored from wreg
 20150     0D20  0140               	movlb	0	; select bank0
 20151     0D21  00AD               	movwf	BMA253_GetAccelDataX@xAccelData
 20152     0D22                     l13246:
 20153     0D22                     l13248:	
 20154                           ;mcc_generated_files/application/BMA253_accel.c: 75: void BMA253_GetAccelDataX(int16_t *
      +                          xAccelData);mcc_generated_files/application/BMA253_accel.c: 76: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 77:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 78:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 79: 
      +                              while(!BMA253_NewAccelDataRdyX())
 20155                           
 20156                           
 20157                           ;mcc_generated_files/application/BMA253_accel.c: 79:     while(!BMA253_NewAccelDataRdyX(
      +                          ))
 20158     0D22  3188  20C0  318D   	fcall	_BMA253_NewAccelDataRdyX
 20159     0D25  3A00               	xorlw	0
 20160     0D26  1903               	skipnz
 20161     0D27  2D29               	goto	u10281
 20162     0D28  2D2A               	goto	u10280
 20163     0D29                     u10281:
 20164     0D29  2D22               	goto	l13248
 20165     0D2A                     u10280:
 20166     0D2A                     l13250:
 20167                           
 20168                           ;mcc_generated_files/application/BMA253_accel.c: 84:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x02));
 20169     0D2A  3002               	movlw	2
 20170     0D2B  0140               	movlb	0	; select bank0
 20171     0D2C  00A4               	movwf	i2c_read1ByteRegister@reg
 20172     0D2D  3019               	movlw	25
 20173     0D2E  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 20174     0D31  0140               	movlb	0	; select bank0
 20175     0D32  00AE               	movwf	BMA253_GetAccelDataX@lsbData
 20176                           
 20177                           ;mcc_generated_files/application/BMA253_accel.c: 85:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x03));
 20178     0D33  3003               	movlw	3
 20179     0D34  00A4               	movwf	i2c_read1ByteRegister@reg
 20180     0D35  3019               	movlw	25
 20181     0D36  3186  2614  318D   	fcall	_i2c_read1ByteRegister
 20182     0D39  0140               	movlb	0	; select bank0
 20183     0D3A  00AF               	movwf	BMA253_GetAccelDataX@msbData
 20184     0D3B                     l13252:
 20185                           
 20186                           ;mcc_generated_files/application/BMA253_accel.c: 86:     *xAccelData = ( (((int16_t)msbD
      +                          ata) << 8) | (lsbData) ) >> 4;
 20187     0D3B  082F               	movf	BMA253_GetAccelDataX@msbData,w
 20188     0D3C  00AB               	movwf	??_BMA253_GetAccelDataX+1
 20189     0D3D  082E               	movf	BMA253_GetAccelDataX@lsbData,w
 20190     0D3E  00AA               	movwf	??_BMA253_GetAccelDataX
 20191     0D3F  3004               	movlw	4
 20192     0D40  00AC               	movwf	??_BMA253_GetAccelDataX+2
 20193     0D41                     u10295:
 20194     0D41  0D2B               	rlf	??_BMA253_GetAccelDataX+1,w
 20195     0D42  0CAB               	rrf	??_BMA253_GetAccelDataX+1,f
 20196     0D43  0CAA               	rrf	??_BMA253_GetAccelDataX,f
 20197     0D44  0BAC               	decfsz	??_BMA253_GetAccelDataX+2,f
 20198     0D45  2D41               	goto	u10295
 20199     0D46  082D               	movf	BMA253_GetAccelDataX@xAccelData,w
 20200     0D47  0086               	movwf	6
 20201     0D48  0187               	clrf	7
 20202     0D49  082A               	movf	??_BMA253_GetAccelDataX,w
 20203     0D4A  3FC0               	movwi [0]fsr1
 20204     0D4B  082B               	movf	??_BMA253_GetAccelDataX+1,w
 20205     0D4C  3FC1               	movwi [1]fsr1
 20206     0D4D                     l19:
 20207     0D4D  0008               	return
 20208     0D4E                     __end_of_BMA253_GetAccelDataX:
 20209                           
 20210                           	psect	text86
 20211     08C0                     __ptext86:	
 20212 ;; *************** function _BMA253_NewAccelDataRdyX *****************
 20213 ;; Defined at:
 20214 ;;		line 150 in file "mcc_generated_files/application/BMA253_accel.c"
 20215 ;; Parameters:    Size  Location     Type
 20216 ;;		None
 20217 ;; Auto vars:     Size  Location     Type
 20218 ;;  xNewData        1   11[COMMON] _Bool 
 20219 ;; Return value:  Size  Location     Type
 20220 ;;                  1    wreg      _Bool 
 20221 ;; Registers used:
 20222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20223 ;; Tracked objects:
 20224 ;;		On entry : 0/0
 20225 ;;		On exit  : 0/0
 20226 ;;		Unchanged: 0/0
 20227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20232 ;;Total ram usage:        1 bytes
 20233 ;; Hardware stack levels used: 1
 20234 ;; Hardware stack levels required when called: 13
 20235 ;; This function calls:
 20236 ;;		_i2c_read1ByteRegister
 20237 ;; This function is called by:
 20238 ;;		_BMA253_GetAccelDataX
 20239 ;;		_BMA253_GetAccelDataXYZ
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243     08C0                     _BMA253_NewAccelDataRdyX:	
 20244                           ;psect for function _BMA253_NewAccelDataRdyX
 20245                           
 20246     08C0                     l13178:	
 20247                           ;incstack = 0
 20248                           ; Regs used in _BMA253_NewAccelDataRdyX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20249                           
 20250                           
 20251                           ;mcc_generated_files/application/BMA253_accel.c: 152:     _Bool xNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 154:     xNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          02)) & (0x01));
 20252     08C0  3002               	movlw	2
 20253     08C1  0140               	movlb	0	; select bank0
 20254     08C2  00A4               	movwf	i2c_read1ByteRegister@reg
 20255     08C3  3019               	movlw	25
 20256     08C4  3186  2614  3188   	fcall	_i2c_read1ByteRegister
 20257     08C7  3901               	andlw	1
 20258     08C8  1D03               	btfss	3,2
 20259     08C9  28CB               	goto	u10141
 20260     08CA  28CD               	goto	u10140
 20261     08CB                     u10141:
 20262     08CB  3001               	movlw	1
 20263     08CC  28CE               	goto	u10150
 20264     08CD                     u10140:
 20265     08CD  3000               	movlw	0
 20266     08CE                     u10150:
 20267     08CE  00FB               	movwf	BMA253_NewAccelDataRdyX@xNewData
 20268     08CF                     l13180:
 20269                           
 20270                           ;mcc_generated_files/application/BMA253_accel.c: 156:     return xNewData;
 20271     08CF  087B               	movf	BMA253_NewAccelDataRdyX@xNewData,w
 20272     08D0                     l49:
 20273     08D0  0008               	return
 20274     08D1                     __end_of_BMA253_NewAccelDataRdyX:
 20275                           
 20276                           	psect	text87
 20277     0614                     __ptext87:	
 20278 ;; *************** function _i2c_read1ByteRegister *****************
 20279 ;; Defined at:
 20280 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  address         1    wreg     unsigned char 
 20283 ;;  reg             1    4[BANK0 ] unsigned char 
 20284 ;; Auto vars:     Size  Location     Type
 20285 ;;  address         1    5[BANK0 ] unsigned char 
 20286 ;;  x               2    7[BANK0 ] int 
 20287 ;;  d2              1    9[BANK0 ] unsigned char 
 20288 ;;  e               1    6[BANK0 ] enum E358
 20289 ;; Return value:  Size  Location     Type
 20290 ;;                  1    wreg      unsigned char 
 20291 ;; Registers used:
 20292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20293 ;; Tracked objects:
 20294 ;;		On entry : 0/0
 20295 ;;		On exit  : 0/0
 20296 ;;		Unchanged: 0/0
 20297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20298 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20299 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20301 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20302 ;;Total ram usage:        6 bytes
 20303 ;; Hardware stack levels used: 1
 20304 ;; Hardware stack levels required when called: 12
 20305 ;; This function calls:
 20306 ;;		_I2C1_Close
 20307 ;;		_I2C1_MasterWrite
 20308 ;;		_I2C1_Open
 20309 ;;		_I2C1_SetAddressNackCallback
 20310 ;;		_I2C1_SetBuffer
 20311 ;;		_I2C1_SetDataCompleteCallback
 20312 ;; This function is called by:
 20313 ;;		_BMA253_GetAccelDataX
 20314 ;;		_BMA253_GetAccelDataY
 20315 ;;		_BMA253_GetAccelDataZ
 20316 ;;		_BMA253_NewAccelDataRdyX
 20317 ;;		_BMA253_NewAccelDataRdyY
 20318 ;;		_BMA253_NewAccelDataRdyZ
 20319 ;;		_BMA253_GetAccelChipId
 20320 ;; This function uses a non-reentrant model
 20321 ;;
 20322                           
 20323     0614                     _i2c_read1ByteRegister:	
 20324                           ;psect for function _i2c_read1ByteRegister
 20325                           
 20326                           
 20327                           ;incstack = 0
 20328                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20329                           ;i2c_read1ByteRegister@address stored from wreg
 20330     0614  0140               	movlb	0	; select bank0
 20331     0615  00A5               	movwf	i2c_read1ByteRegister@address
 20332     0616                     l13044:
 20333                           
 20334                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 20335     0616  302A               	movlw	42
 20336     0617  00A9               	movwf	i2c_read1ByteRegister@d2
 20337                           
 20338                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 20339     0618  3002               	movlw	2
 20340     0619  00A7               	movwf	i2c_read1ByteRegister@x
 20341     061A  3000               	movlw	0
 20342     061B  00A8               	movwf	i2c_read1ByteRegister@x+1
 20343     061C                     l13050:
 20344     061C  0140               	movlb	0	; select bank0
 20345     061D  0825               	movf	i2c_read1ByteRegister@address,w
 20346     061E  318E  26A0  3186   	fcall	_I2C1_Open
 20347     0621  3A00               	xorlw	0
 20348     0622  1903               	skipnz
 20349     0623  2E25               	goto	u10011
 20350     0624  2E26               	goto	u10010
 20351     0625                     u10011:
 20352     0625  2E1C               	goto	l13050
 20353     0626                     u10010:
 20354     0626                     l13052:
 20355                           
 20356                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 20357     0626  305A               	movlw	low _rd1RegCompleteHandler
 20358     0627  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20359     0628  3008               	movlw	high _rd1RegCompleteHandler
 20360     0629  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20361     062A  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 20362     062B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20363     062C  3197  2787  3186   	fcall	_I2C1_SetDataCompleteCallback
 20364     062F                     l13054:
 20365                           
 20366                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 20367     062F  3001               	movlw	1
 20368     0630  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20369     0631  3000               	movlw	0
 20370     0632  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20371     0633  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 20372     0634  3197  27F2  3186   	fcall	_I2C1_SetBuffer
 20373     0637                     l13056:
 20374                           
 20375                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 20376     0637  3000               	movlw	0
 20377     0638  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20378     0639  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20379     063A  3000               	movlw	0
 20380     063B  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20381     063C  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20382     063D  3197  2792  3186   	fcall	_I2C1_SetAddressNackCallback
 20383     0640                     l13058:
 20384                           
 20385                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 20386     0640  3196  269B  3186   	fcall	_I2C1_MasterWrite
 20387     0643                     l13060:	
 20388                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 20389                           
 20390     0643  3189  219C  3186   	fcall	_I2C1_Close
 20391     0646  0140               	movlb	0	; select bank0
 20392     0647  00A6               	movwf	i2c_read1ByteRegister@e
 20393     0648  0326               	decf	i2c_read1ByteRegister@e,w
 20394     0649  1903               	btfsc	3,2
 20395     064A  2E4C               	goto	u10021
 20396     064B  2E4D               	goto	u10020
 20397     064C                     u10021:
 20398     064C  2E43               	goto	l13060
 20399     064D                     u10020:
 20400     064D                     l13062:
 20401                           
 20402                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 20403     064D  0826               	movf	i2c_read1ByteRegister@e,w
 20404     064E  1D03               	btfss	3,2
 20405     064F  2E51               	goto	u10031
 20406     0650  2E52               	goto	u10030
 20407     0651                     u10031:
 20408     0651  2E53               	goto	l13066
 20409     0652                     u10030:
 20410     0652  2E5D               	goto	l13070
 20411     0653                     l13066:
 20412                           
 20413                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 20414     0653  30FF               	movlw	255
 20415     0654  07A7               	addwf	i2c_read1ByteRegister@x,f
 20416     0655  30FF               	movlw	255
 20417     0656  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 20418     0657                     l13068:
 20419     0657  0827               	movf	i2c_read1ByteRegister@x,w
 20420     0658  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 20421     0659  1D03               	btfss	3,2
 20422     065A  2E5C               	goto	u10041
 20423     065B  2E5D               	goto	u10040
 20424     065C                     u10041:
 20425     065C  2E1C               	goto	l13050
 20426     065D                     u10040:
 20427     065D                     l13070:
 20428                           
 20429                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 20430     065D  0829               	movf	i2c_read1ByteRegister@d2,w
 20431     065E                     l531:
 20432     065E  0008               	return
 20433     065F                     __end_of_i2c_read1ByteRegister:
 20434                           
 20435                           	psect	text88
 20436     1792                     __ptext88:	
 20437 ;; *************** function _I2C1_SetAddressNackCallback *****************
 20438 ;; Defined at:
 20439 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 20440 ;; Parameters:    Size  Location     Type
 20441 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20442 ;;		 -> NULL(1), 
 20443 ;;  ptr             2    7[COMMON] PTR void 
 20444 ;;		 -> NULL(0), 
 20445 ;; Auto vars:     Size  Location     Type
 20446 ;;		None
 20447 ;; Return value:  Size  Location     Type
 20448 ;;                  1    wreg      void 
 20449 ;; Registers used:
 20450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20451 ;; Tracked objects:
 20452 ;;		On entry : 0/0
 20453 ;;		On exit  : 0/0
 20454 ;;		Unchanged: 0/0
 20455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20460 ;;Total ram usage:        4 bytes
 20461 ;; Hardware stack levels used: 1
 20462 ;; Hardware stack levels required when called: 5
 20463 ;; This function calls:
 20464 ;;		_I2C1_SetCallback
 20465 ;; This function is called by:
 20466 ;;		_i2c_read1ByteRegister
 20467 ;;		_i2c_read2ByteRegister
 20468 ;;		_i2c_write1ByteRegister
 20469 ;;		_i2c_writeNBytes
 20470 ;;		_i2c_write2ByteRegister
 20471 ;;		_i2c_readDataBlock
 20472 ;;		_I2C1_Read1ByteRegister
 20473 ;;		_I2C1_Read2ByteRegister
 20474 ;;		_I2C1_Write1ByteRegister
 20475 ;;		_I2C1_Write2ByteRegister
 20476 ;;		_I2C1_WriteNBytes
 20477 ;;		_I2C1_ReadDataBlock
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481     1792                     _I2C1_SetAddressNackCallback:	
 20482                           ;psect for function _I2C1_SetAddressNackCallback
 20483                           
 20484     1792                     l12918:	
 20485                           ;incstack = 0
 20486                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 20487                           
 20488                           
 20489                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 20490     1792  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 20491     1793  00F2               	movwf	I2C1_SetCallback@cb+1
 20492     1794  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 20493     1795  00F1               	movwf	I2C1_SetCallback@cb
 20494     1796  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 20495     1797  00F3               	movwf	I2C1_SetCallback@ptr
 20496     1798  3002               	movlw	2
 20497     1799  318B  2341  3197   	fcall	_I2C1_SetCallback
 20498     179C                     l1775:
 20499     179C  0008               	return
 20500     179D                     __end_of_I2C1_SetAddressNackCallback:
 20501                           
 20502                           	psect	text89
 20503     0EA0                     __ptext89:	
 20504 ;; *************** function _I2C1_Open *****************
 20505 ;; Defined at:
 20506 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;  address         1    wreg     unsigned char 
 20509 ;; Auto vars:     Size  Location     Type
 20510 ;;  address         1    1[COMMON] unsigned char 
 20511 ;;  returnValue     1    2[COMMON] enum E358
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  1    wreg      enum E358
 20514 ;; Registers used:
 20515 ;;		wreg, status,2, status,0, pclath, cstack
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;Total ram usage:        2 bytes
 20526 ;; Hardware stack levels used: 1
 20527 ;; Hardware stack levels required when called: 5
 20528 ;; This function calls:
 20529 ;;		_I2C1_MasterClearIrq
 20530 ;;		_I2C1_MasterOpen
 20531 ;; This function is called by:
 20532 ;;		_i2c_read1ByteRegister
 20533 ;;		_i2c_read2ByteRegister
 20534 ;;		_i2c_write1ByteRegister
 20535 ;;		_i2c_writeNBytes
 20536 ;;		_i2c_write2ByteRegister
 20537 ;;		_i2c_readDataBlock
 20538 ;;		_i2c_readNBytes
 20539 ;;		_I2C1_Read1ByteRegister
 20540 ;;		_I2C1_Read2ByteRegister
 20541 ;;		_I2C1_Write1ByteRegister
 20542 ;;		_I2C1_Write2ByteRegister
 20543 ;;		_I2C1_WriteNBytes
 20544 ;;		_I2C1_ReadNBytes
 20545 ;;		_I2C1_ReadDataBlock
 20546 ;; This function uses a non-reentrant model
 20547 ;;
 20548                           
 20549     0EA0                     _I2C1_Open:	
 20550                           ;psect for function _I2C1_Open
 20551                           
 20552                           
 20553                           ;incstack = 0
 20554                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 20555                           ;I2C1_Open@address stored from wreg
 20556     0EA0  00F1               	movwf	I2C1_Open@address
 20557     0EA1                     l12886:
 20558                           
 20559                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 20560     0EA1  01F2               	clrf	I2C1_Open@returnValue
 20561     0EA2  0AF2               	incf	I2C1_Open@returnValue,f
 20562                           
 20563                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 20564     0EA3  0141               	movlb	1	; select bank1
 20565     0EA4  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 20566     0EA5  2EA7               	goto	u9821
 20567     0EA6  2EA8               	goto	u9820
 20568     0EA7                     u9821:
 20569     0EA7  2ED4               	goto	l1742
 20570     0EA8                     u9820:
 20571     0EA8                     l12888:
 20572                           
 20573                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 20574     0EA8  0871               	movf	I2C1_Open@address,w
 20575     0EA9  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 20576     0EAA                     l12890:
 20577                           
 20578                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 20579     0EAA  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 20580     0EAB                     l12892:
 20581                           
 20582                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 20583     0EAB  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 20584     0EAC                     l12894:
 20585                           
 20586                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 20587     0EAC  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 20588                           
 20589                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 20590     0EAD  300E               	movlw	14
 20591     0EAE  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20592                           
 20593                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 20594     0EAF  30F4               	movlw	244
 20595     0EB0  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 20596     0EB1  3001               	movlw	1
 20597     0EB2  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 20598     0EB3                     l12896:
 20599                           
 20600                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 20601     0EB3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 20602                           
 20603                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 20604     0EB4  3027               	movlw	low _I2C1_CallbackReturnStop
 20605     0EB5  00A0               	movwf	_I2C1_Status^(0+128)
 20606     0EB6  3016               	movlw	high _I2C1_CallbackReturnStop
 20607     0EB7  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 20608     0EB8                     l12898:
 20609                           
 20610                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 20611     0EB8  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 20612     0EB9                     l12900:
 20613                           
 20614                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 20615     0EB9  3027               	movlw	low _I2C1_CallbackReturnStop
 20616     0EBA  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 20617     0EBB  3016               	movlw	high _I2C1_CallbackReturnStop
 20618     0EBC  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 20619                           
 20620                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 20621     0EBD  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 20622     0EBE                     l12902:
 20623                           
 20624                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20625     0EBE  3027               	movlw	low _I2C1_CallbackReturnStop
 20626     0EBF  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 20627     0EC0  3016               	movlw	high _I2C1_CallbackReturnStop
 20628     0EC1  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 20629     0EC2                     l12904:
 20630                           
 20631                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 20632     0EC2  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 20633                           
 20634                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20635     0EC3  3027               	movlw	low _I2C1_CallbackReturnStop
 20636     0EC4  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 20637     0EC5  3016               	movlw	high _I2C1_CallbackReturnStop
 20638     0EC6  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 20639     0EC7                     l12906:
 20640                           
 20641                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 20642     0EC7  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 20643     0EC8                     l12908:
 20644                           
 20645                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 20646     0EC8  3029               	movlw	low _I2C1_CallbackReturnReset
 20647     0EC9  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 20648     0ECA  3016               	movlw	high _I2C1_CallbackReturnReset
 20649     0ECB  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 20650                           
 20651                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 20652     0ECC  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 20653     0ECD                     l12910:
 20654                           
 20655                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 20656     0ECD  3196  262B  318E   	fcall	_I2C1_MasterClearIrq
 20657     0ED0                     l12912:
 20658                           
 20659                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 20660     0ED0  3197  27D8  318E   	fcall	_I2C1_MasterOpen
 20661     0ED3                     l12914:
 20662                           
 20663                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 20664     0ED3  01F2               	clrf	I2C1_Open@returnValue
 20665     0ED4                     l1742:	
 20666                           ;mcc_generated_files/i2c1_master.c: 205:     }
 20667                           
 20668                           
 20669                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 20670     0ED4  0872               	movf	I2C1_Open@returnValue,w
 20671     0ED5                     l1743:
 20672     0ED5  0008               	return
 20673     0ED6                     __end_of_I2C1_Open:
 20674                           
 20675                           	psect	text90
 20676     17D8                     __ptext90:	
 20677 ;; *************** function _I2C1_MasterOpen *****************
 20678 ;; Defined at:
 20679 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 20680 ;; Parameters:    Size  Location     Type
 20681 ;;		None
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;		None
 20684 ;; Return value:  Size  Location     Type
 20685 ;;                  1    wreg      _Bool 
 20686 ;; Registers used:
 20687 ;;		wreg, status,2
 20688 ;; Tracked objects:
 20689 ;;		On entry : 0/0
 20690 ;;		On exit  : 0/0
 20691 ;;		Unchanged: 0/0
 20692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20697 ;;Total ram usage:        0 bytes
 20698 ;; Hardware stack levels used: 1
 20699 ;; Hardware stack levels required when called: 4
 20700 ;; This function calls:
 20701 ;;		Nothing
 20702 ;; This function is called by:
 20703 ;;		_I2C1_Open
 20704 ;; This function uses a non-reentrant model
 20705 ;;
 20706                           
 20707     17D8                     _I2C1_MasterOpen:	
 20708                           ;psect for function _I2C1_MasterOpen
 20709                           
 20710     17D8                     l12840:	
 20711                           ;incstack = 0
 20712                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 20713                           
 20714                           
 20715                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 20716     17D8  0143               	movlb	3	; select bank3
 20717     17D9  1A90               	btfsc	16,5	;volatile
 20718     17DA  2FDC               	goto	u9781
 20719     17DB  2FDD               	goto	u9780
 20720     17DC                     u9781:
 20721     17DC  2FE4               	goto	l1908
 20722     17DD                     u9780:
 20723     17DD                     l12842:
 20724                           
 20725                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 20726     17DD  018F               	clrf	15	;volatile
 20727     17DE                     l12844:
 20728                           
 20729                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 20730     17DE  3008               	movlw	8
 20731     17DF  0090               	movwf	16	;volatile
 20732     17E0                     l12846:
 20733                           
 20734                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 20735     17E0  0191               	clrf	17	;volatile
 20736                           
 20737                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 20738     17E1  304F               	movlw	79
 20739     17E2  008D               	movwf	13	;volatile
 20740     17E3                     l12848:
 20741                           
 20742                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 20743     17E3  1690               	bsf	16,5	;volatile
 20744     17E4                     l1908:
 20745     17E4  0008               	return
 20746     17E5                     __end_of_I2C1_MasterOpen:
 20747                           
 20748                           	psect	text91
 20749     169B                     __ptext91:	
 20750 ;; *************** function _I2C1_MasterWrite *****************
 20751 ;; Defined at:
 20752 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 20753 ;; Parameters:    Size  Location     Type
 20754 ;;		None
 20755 ;; Auto vars:     Size  Location     Type
 20756 ;;		None
 20757 ;; Return value:  Size  Location     Type
 20758 ;;                  1    wreg      enum E358
 20759 ;; Registers used:
 20760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20761 ;; Tracked objects:
 20762 ;;		On entry : 0/0
 20763 ;;		On exit  : 0/0
 20764 ;;		Unchanged: 0/0
 20765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20770 ;;Total ram usage:        0 bytes
 20771 ;; Hardware stack levels used: 1
 20772 ;; Hardware stack levels required when called: 11
 20773 ;; This function calls:
 20774 ;;		_I2C1_MasterOperation
 20775 ;; This function is called by:
 20776 ;;		_i2c_read1ByteRegister
 20777 ;;		_i2c_read2ByteRegister
 20778 ;;		_i2c_write1ByteRegister
 20779 ;;		_i2c_writeNBytes
 20780 ;;		_i2c_write2ByteRegister
 20781 ;;		_i2c_readDataBlock
 20782 ;;		_I2C1_Read1ByteRegister
 20783 ;;		_I2C1_Read2ByteRegister
 20784 ;;		_I2C1_Write1ByteRegister
 20785 ;;		_I2C1_Write2ByteRegister
 20786 ;;		_I2C1_WriteNBytes
 20787 ;;		_I2C1_ReadDataBlock
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791     169B                     _I2C1_MasterWrite:	
 20792                           ;psect for function _I2C1_MasterWrite
 20793                           
 20794     169B                     l12920:	
 20795                           ;incstack = 0
 20796                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20797                           
 20798                           
 20799                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 20800     169B  3000               	movlw	0
 20801     169C  318A  22B9  3196   	fcall	_I2C1_MasterOperation
 20802     169F                     l1759:
 20803     169F  0008               	return
 20804     16A0                     __end_of_I2C1_MasterWrite:
 20805                           
 20806                           	psect	text92
 20807     0AB9                     __ptext92:	
 20808 ;; *************** function _I2C1_MasterOperation *****************
 20809 ;; Defined at:
 20810 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 20811 ;; Parameters:    Size  Location     Type
 20812 ;;  read            1    wreg     _Bool 
 20813 ;; Auto vars:     Size  Location     Type
 20814 ;;  read            1    2[BANK0 ] _Bool 
 20815 ;;  returnValue     1    3[BANK0 ] enum E358
 20816 ;; Return value:  Size  Location     Type
 20817 ;;                  1    wreg      enum E358
 20818 ;; Registers used:
 20819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/0
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20826 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20828 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20829 ;;Total ram usage:        2 bytes
 20830 ;; Hardware stack levels used: 1
 20831 ;; Hardware stack levels required when called: 10
 20832 ;; This function calls:
 20833 ;;		_I2C1_MasterStart
 20834 ;;		_I2C1_Poller
 20835 ;; This function is called by:
 20836 ;;		_I2C1_MasterWrite
 20837 ;;		_I2C1_MasterRead
 20838 ;; This function uses a non-reentrant model
 20839 ;;
 20840                           
 20841     0AB9                     _I2C1_MasterOperation:	
 20842                           ;psect for function _I2C1_MasterOperation
 20843                           
 20844                           
 20845                           ;incstack = 0
 20846                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20847                           ;I2C1_MasterOperation@read stored from wreg
 20848     0AB9  0140               	movlb	0	; select bank0
 20849     0ABA  00A2               	movwf	I2C1_MasterOperation@read
 20850     0ABB                     l12856:
 20851                           
 20852                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 20853     0ABB  01A3               	clrf	I2C1_MasterOperation@returnValue
 20854     0ABC  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 20855                           
 20856                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 20857     0ABD  0141               	movlb	1	; select bank1
 20858     0ABE  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 20859     0ABF  2AC1               	goto	u9791
 20860     0AC0  2AC2               	goto	u9790
 20861     0AC1                     u9791:
 20862     0AC1  2AD7               	goto	l12872
 20863     0AC2                     u9790:
 20864     0AC2                     l12858:
 20865                           
 20866                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 20867     0AC2  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 20868     0AC3                     l12860:
 20869                           
 20870                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 20871     0AC3  0140               	movlb	0	; select bank0
 20872     0AC4  01A3               	clrf	I2C1_MasterOperation@returnValue
 20873     0AC5                     l12862:
 20874                           
 20875                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 20876     0AC5  0822               	movf	I2C1_MasterOperation@read,w
 20877     0AC6  1903               	btfsc	3,2
 20878     0AC7  2AC9               	goto	u9801
 20879     0AC8  2ACA               	goto	u9800
 20880     0AC9                     u9801:
 20881     0AC9  2ACE               	goto	l12866
 20882     0ACA                     u9800:
 20883     0ACA                     l12864:
 20884                           
 20885                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 20886     0ACA  0141               	movlb	1	; select bank1
 20887     0ACB  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 20888     0ACC  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 20889                           
 20890                           ;mcc_generated_files/i2c1_master.c: 235:         }
 20891     0ACD  2AD1               	goto	l12868
 20892     0ACE                     l12866:
 20893                           
 20894                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 20895     0ACE  3002               	movlw	2
 20896     0ACF  0141               	movlb	1	; select bank1
 20897     0AD0  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20898     0AD1                     l12868:
 20899                           
 20900                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 20901     0AD1  3196  2634  318A   	fcall	_I2C1_MasterStart
 20902     0AD4                     l12870:
 20903                           
 20904                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 20905     0AD4  3197  27CB  318A   	fcall	_I2C1_Poller
 20906     0AD7                     l12872:
 20907                           
 20908                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 20909     0AD7  0140               	movlb	0	; select bank0
 20910     0AD8  0823               	movf	I2C1_MasterOperation@returnValue,w
 20911     0AD9                     l1753:
 20912     0AD9  0008               	return
 20913     0ADA                     __end_of_I2C1_MasterOperation:
 20914                           
 20915                           	psect	text93
 20916     17CB                     __ptext93:	
 20917 ;; *************** function _I2C1_Poller *****************
 20918 ;; Defined at:
 20919 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 20920 ;; Parameters:    Size  Location     Type
 20921 ;;		None
 20922 ;; Auto vars:     Size  Location     Type
 20923 ;;		None
 20924 ;; Return value:  Size  Location     Type
 20925 ;;                  1    wreg      void 
 20926 ;; Registers used:
 20927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20928 ;; Tracked objects:
 20929 ;;		On entry : 0/0
 20930 ;;		On exit  : 0/0
 20931 ;;		Unchanged: 0/0
 20932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20937 ;;Total ram usage:        0 bytes
 20938 ;; Hardware stack levels used: 1
 20939 ;; Hardware stack levels required when called: 9
 20940 ;; This function calls:
 20941 ;;		_I2C1_MasterFsm
 20942 ;;		_I2C1_MasterWaitForEvent
 20943 ;; This function is called by:
 20944 ;;		_I2C1_MasterOperation
 20945 ;; This function uses a non-reentrant model
 20946 ;;
 20947                           
 20948     17CB                     _I2C1_Poller:	
 20949                           ;psect for function _I2C1_Poller
 20950                           
 20951     17CB                     l12822:	
 20952                           ;incstack = 0
 20953                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20954                           
 20955                           
 20956                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20957     17CB  2FD2               	goto	l12828
 20958     17CC                     l12824:
 20959                           
 20960                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 20961     17CC  3196  26AB  3197   	fcall	_I2C1_MasterWaitForEvent
 20962     17CF                     l12826:
 20963                           
 20964                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 20965     17CF  318C  2472  3197   	fcall	_I2C1_MasterFsm
 20966     17D2                     l12828:
 20967                           
 20968                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20969     17D2  0141               	movlb	1	; select bank1
 20970     17D3  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 20971     17D4  2FD6               	goto	u9771
 20972     17D5  2FD7               	goto	u9770
 20973     17D6                     u9771:
 20974     17D6  2FCC               	goto	l12824
 20975     17D7                     u9770:
 20976     17D7                     l1792:
 20977     17D7  0008               	return
 20978     17D8                     __end_of_I2C1_Poller:
 20979                           
 20980                           	psect	text94
 20981     16AB                     __ptext94:	
 20982 ;; *************** function _I2C1_MasterWaitForEvent *****************
 20983 ;; Defined at:
 20984 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 20985 ;; Parameters:    Size  Location     Type
 20986 ;;		None
 20987 ;; Auto vars:     Size  Location     Type
 20988 ;;		None
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  1    wreg      void 
 20991 ;; Registers used:
 20992 ;;		None
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21002 ;;Total ram usage:        0 bytes
 21003 ;; Hardware stack levels used: 1
 21004 ;; Hardware stack levels required when called: 4
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_I2C1_Poller
 21009 ;; This function uses a non-reentrant model
 21010 ;;
 21011                           
 21012     16AB                     _I2C1_MasterWaitForEvent:	
 21013                           ;psect for function _I2C1_MasterWaitForEvent
 21014                           
 21015     16AB                     l1965:	
 21016                           ;incstack = 0
 21017                           ; Regs used in _I2C1_MasterWaitForEvent: []
 21018                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 21019                           
 21020                           
 21021                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 21022     16AB  014E               	movlb	14	; select bank14
 21023     16AC  1C0F               	btfss	15,0	;volatile
 21024     16AD  2EAF               	goto	u9641
 21025     16AE  2EB0               	goto	u9640
 21026     16AF                     u9641:
 21027     16AF  2EAB               	goto	l1965
 21028     16B0                     u9640:
 21029     16B0                     l1969:
 21030     16B0  0008               	return
 21031     16B1                     __end_of_I2C1_MasterWaitForEvent:
 21032                           
 21033                           	psect	text95
 21034     0C72                     __ptext95:	
 21035 ;; *************** function _I2C1_MasterFsm *****************
 21036 ;; Defined at:
 21037 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 21038 ;; Parameters:    Size  Location     Type
 21039 ;;		None
 21040 ;; Auto vars:     Size  Location     Type
 21041 ;;		None
 21042 ;; Return value:  Size  Location     Type
 21043 ;;                  1    wreg      void 
 21044 ;; Registers used:
 21045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21046 ;; Tracked objects:
 21047 ;;		On entry : 0/0
 21048 ;;		On exit  : 0/0
 21049 ;;		Unchanged: 0/0
 21050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21055 ;;Total ram usage:        2 bytes
 21056 ;; Hardware stack levels used: 1
 21057 ;; Hardware stack levels required when called: 8
 21058 ;; This function calls:
 21059 ;;		_I2C1_DO_ADDRESS_NACK
 21060 ;;		_I2C1_DO_IDLE
 21061 ;;		_I2C1_DO_RCEN
 21062 ;;		_I2C1_DO_RESET
 21063 ;;		_I2C1_DO_RX
 21064 ;;		_I2C1_DO_RX_ACK
 21065 ;;		_I2C1_DO_RX_NACK_RESTART
 21066 ;;		_I2C1_DO_RX_NACK_STOP
 21067 ;;		_I2C1_DO_SEND_ADR_READ
 21068 ;;		_I2C1_DO_SEND_ADR_WRITE
 21069 ;;		_I2C1_DO_SEND_RESTART
 21070 ;;		_I2C1_DO_SEND_RESTART_READ
 21071 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21072 ;;		_I2C1_DO_SEND_STOP
 21073 ;;		_I2C1_DO_TX
 21074 ;;		_I2C1_DO_TX_EMPTY
 21075 ;;		_I2C1_MasterClearIrq
 21076 ;;		_I2C1_MasterIsNack
 21077 ;; This function is called by:
 21078 ;;		_I2C1_Poller
 21079 ;; This function uses a non-reentrant model
 21080 ;;
 21081                           
 21082     0C72                     _I2C1_MasterFsm:	
 21083                           ;psect for function _I2C1_MasterFsm
 21084                           
 21085     0C72                     l12722:	
 21086                           ;incstack = 0
 21087                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21088                           
 21089                           
 21090                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 21091     0C72  3196  262B  318C   	fcall	_I2C1_MasterClearIrq
 21092     0C75                     l12724:
 21093                           
 21094                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 21095     0C75  0141               	movlb	1	; select bank1
 21096     0C76  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 21097     0C77  2C79               	goto	u9651
 21098     0C78  2C7A               	goto	u9650
 21099     0C79                     u9651:
 21100     0C79  2C85               	goto	l12730
 21101     0C7A                     u9650:
 21102     0C7A                     l12726:
 21103     0C7A  3196  26A5  318C   	fcall	_I2C1_MasterIsNack
 21104     0C7D  3A00               	xorlw	0
 21105     0C7E  1903               	skipnz
 21106     0C7F  2C81               	goto	u9661
 21107     0C80  2C82               	goto	u9660
 21108     0C81                     u9661:
 21109     0C81  2C85               	goto	l12730
 21110     0C82                     u9660:
 21111     0C82                     l12728:
 21112                           
 21113                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 21114     0C82  300F               	movlw	15
 21115     0C83  0141               	movlb	1	; select bank1
 21116     0C84  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 21117     0C85                     l12730:
 21118                           
 21119                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 21120     0C85  0141               	movlb	1	; select bank1
 21121     0C86  083A               	movf	(_I2C1_Status^(0+128)+26),w
 21122     0C87  0140               	movlb	0	; select bank0
 21123     0C88  00A0               	movwf	??_I2C1_MasterFsm
 21124     0C89  01A1               	clrf	??_I2C1_MasterFsm+1
 21125     0C8A  35A0               	lslf	??_I2C1_MasterFsm,f
 21126     0C8B  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 21127     0C8C  3028               	movlw	low _i2c1_fsmStateTable
 21128     0C8D  0720               	addwf	??_I2C1_MasterFsm,w
 21129     0C8E  0084               	movwf	4
 21130     0C8F  3010               	movlw	high _i2c1_fsmStateTable
 21131     0C90  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 21132     0C91  3880               	iorlw	128
 21133     0C92  0085               	movwf	5
 21134     0C93  3F01               	moviw [1]fsr0
 21135     0C94  008A               	movwf	10
 21136     0C95  3F00               	moviw [0]fsr0
 21137     0C96  000A               	callw
 21138     0C97  318C               	pagesel	$
 21139     0C98  0141               	movlb	1	; select bank1
 21140     0C99  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 21141     0C9A                     l1796:
 21142     0C9A  0008               	return
 21143     0C9B                     __end_of_I2C1_MasterFsm:
 21144                           
 21145                           	psect	text96
 21146     0C4A                     __ptext96:	
 21147 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 21148 ;; Defined at:
 21149 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 21150 ;; Parameters:    Size  Location     Type
 21151 ;;		None
 21152 ;; Auto vars:     Size  Location     Type
 21153 ;;		None
 21154 ;; Return value:  Size  Location     Type
 21155 ;;                  1    wreg      enum E12565
 21156 ;; Registers used:
 21157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21158 ;; Tracked objects:
 21159 ;;		On entry : 0/0
 21160 ;;		On exit  : 0/0
 21161 ;;		Unchanged: 0/0
 21162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21167 ;;Total ram usage:        2 bytes
 21168 ;; Hardware stack levels used: 1
 21169 ;; Hardware stack levels required when called: 7
 21170 ;; This function calls:
 21171 ;;		NULL
 21172 ;;		_I2C1_CallbackReturnReset
 21173 ;;		_I2C1_CallbackReturnStop
 21174 ;;		_I2C1_DO_SEND_RESTART
 21175 ;;		_I2C1_DO_SEND_STOP
 21176 ;;		_rd1RegCompleteHandler
 21177 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 21178 ;;		_rd2RegCompleteHandler
 21179 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 21180 ;;		_rdBlkRegCompleteHandler
 21181 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 21182 ;;		_wr1RegCompleteHandler
 21183 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 21184 ;;		_wr2RegCompleteHandler
 21185 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 21186 ;; This function is called by:
 21187 ;;		_I2C1_MasterFsm
 21188 ;; This function uses a non-reentrant model
 21189 ;;
 21190                           
 21191     0C4A                     _I2C1_DO_ADDRESS_NACK:	
 21192                           ;psect for function _I2C1_DO_ADDRESS_NACK
 21193                           
 21194     0C4A                     l12698:	
 21195                           ;incstack = 0
 21196                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21197                           
 21198                           
 21199                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 21200     0C4A  0141               	movlb	1	; select bank1
 21201     0C4B  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 21202     0C4C                     l12700:
 21203                           
 21204                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 21205     0C4C  3002               	movlw	2
 21206     0C4D  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 21207                           
 21208                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 21209     0C4E  2C57               	goto	l12712
 21210     0C4F                     l12702:
 21211                           
 21212                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 21213     0C4F  3196  267D  318C   	fcall	_I2C1_DO_SEND_RESTART
 21214     0C52  2C71               	goto	l1887
 21215     0C53                     l12706:
 21216                           
 21217                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 21218     0C53  3196  2682  318C   	fcall	_I2C1_DO_SEND_STOP
 21219     0C56  2C71               	goto	l1887
 21220     0C57                     l12712:
 21221     0C57  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 21222     0C58  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21223     0C59  3004               	movlw	4
 21224     0C5A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 21225     0C5B  0086               	movwf	6
 21226     0C5C  0187               	clrf	7
 21227     0C5D  3F41               	moviw [1]fsr1
 21228     0C5E  008A               	movwf	10
 21229     0C5F  3F40               	moviw [0]fsr1
 21230     0C60  000A               	callw
 21231     0C61  318C               	pagesel	$
 21232     0C62  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 21233     0C63  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 21234                           
 21235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21236                           ; Switch size 1, requested type "simple"
 21237                           ; Number of cases is 1, Range of values is 0 to 0
 21238                           ; switch strategies available:
 21239                           ; Name         Instructions Cycles
 21240                           ; simple_byte            4     3 (average)
 21241                           ; direct_byte            8     6 (fixed)
 21242                           ; jumptable            260     6 (fixed)
 21243                           ;	Chosen strategy is simple_byte
 21244     0C64  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 21245     0C65  3A00               	xorlw	0	; case 0
 21246     0C66  1903               	skipnz
 21247     0C67  2C69               	goto	l16486
 21248     0C68  2C53               	goto	l12706
 21249     0C69                     l16486:
 21250                           
 21251                           ; Switch size 1, requested type "simple"
 21252                           ; Number of cases is 2, Range of values is 2 to 3
 21253                           ; switch strategies available:
 21254                           ; Name         Instructions Cycles
 21255                           ; simple_byte            7     4 (average)
 21256                           ; direct_byte           13     9 (fixed)
 21257                           ; jumptable            263     9 (fixed)
 21258                           ;	Chosen strategy is simple_byte
 21259     0C69  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 21260     0C6A  3A02               	xorlw	2	; case 2
 21261     0C6B  1903               	skipnz
 21262     0C6C  2C4F               	goto	l12702
 21263     0C6D  3A01               	xorlw	1	; case 3
 21264     0C6E  1903               	skipnz
 21265     0C6F  2C4F               	goto	l12702
 21266     0C70  2C53               	goto	l12706
 21267     0C71                     l1887:
 21268     0C71  0008               	return
 21269     0C72                     __end_of_I2C1_DO_ADDRESS_NACK:
 21270                           
 21271                           	psect	text97
 21272     1696                     __ptext97:	
 21273 ;; *************** function _I2C1_DO_RESET *****************
 21274 ;; Defined at:
 21275 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 21276 ;; Parameters:    Size  Location     Type
 21277 ;;		None
 21278 ;; Auto vars:     Size  Location     Type
 21279 ;;		None
 21280 ;; Return value:  Size  Location     Type
 21281 ;;                  1    wreg      enum E12565
 21282 ;; Registers used:
 21283 ;;		wreg, status,2
 21284 ;; Tracked objects:
 21285 ;;		On entry : 0/0
 21286 ;;		On exit  : 0/0
 21287 ;;		Unchanged: 0/0
 21288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21293 ;;Total ram usage:        0 bytes
 21294 ;; Hardware stack levels used: 1
 21295 ;; Hardware stack levels required when called: 4
 21296 ;; This function calls:
 21297 ;;		Nothing
 21298 ;; This function is called by:
 21299 ;;		_I2C1_MasterFsm
 21300 ;; This function uses a non-reentrant model
 21301 ;;
 21302                           
 21303     1696                     _I2C1_DO_RESET:	
 21304                           ;psect for function _I2C1_DO_RESET
 21305                           
 21306     1696                     l12690:	
 21307                           ;incstack = 0
 21308                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 21309                           
 21310                           
 21311                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 21312     1696  0141               	movlb	1	; select bank1
 21313     1697  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 21314     1698                     l12692:
 21315                           
 21316                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 21317     1698  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 21318     1699                     l12694:
 21319                           
 21320                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 21321     1699  300E               	movlw	14
 21322     169A                     l1881:
 21323     169A  0008               	return
 21324     169B                     __end_of_I2C1_DO_RESET:
 21325                           
 21326                           	psect	text98
 21327     1691                     __ptext98:	
 21328 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 21329 ;; Defined at:
 21330 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;		None
 21333 ;; Auto vars:     Size  Location     Type
 21334 ;;		None
 21335 ;; Return value:  Size  Location     Type
 21336 ;;                  1    wreg      enum E12565
 21337 ;; Registers used:
 21338 ;;		wreg, status,2, status,0, pclath, cstack
 21339 ;; Tracked objects:
 21340 ;;		On entry : 0/0
 21341 ;;		On exit  : 0/0
 21342 ;;		Unchanged: 0/0
 21343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21348 ;;Total ram usage:        0 bytes
 21349 ;; Hardware stack levels used: 1
 21350 ;; Hardware stack levels required when called: 5
 21351 ;; This function calls:
 21352 ;;		_I2C1_MasterSendNack
 21353 ;; This function is called by:
 21354 ;;		_I2C1_DO_RX
 21355 ;;		_I2C1_MasterFsm
 21356 ;; This function uses a non-reentrant model
 21357 ;;
 21358                           
 21359     1691                     _I2C1_DO_RX_NACK_RESTART:	
 21360                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 21361                           
 21362     1691                     l12528:	
 21363                           ;incstack = 0
 21364                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21365                           
 21366                           
 21367                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 21368     1691  3196  2659  3196   	fcall	_I2C1_MasterSendNack
 21369     1694                     l12530:
 21370                           
 21371                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 21372     1694  3009               	movlw	9
 21373     1695                     l1878:
 21374     1695  0008               	return
 21375     1696                     __end_of_I2C1_DO_RX_NACK_RESTART:
 21376                           
 21377                           	psect	text99
 21378     168C                     __ptext99:	
 21379 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 21380 ;; Defined at:
 21381 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 21382 ;; Parameters:    Size  Location     Type
 21383 ;;		None
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;		None
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      enum E12565
 21388 ;; Registers used:
 21389 ;;		wreg, status,2, status,0, pclath, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21399 ;;Total ram usage:        0 bytes
 21400 ;; Hardware stack levels used: 1
 21401 ;; Hardware stack levels required when called: 5
 21402 ;; This function calls:
 21403 ;;		_I2C1_MasterSendNack
 21404 ;; This function is called by:
 21405 ;;		_I2C1_DO_RX
 21406 ;;		_I2C1_MasterFsm
 21407 ;; This function uses a non-reentrant model
 21408 ;;
 21409                           
 21410     168C                     _I2C1_DO_RX_NACK_STOP:	
 21411                           ;psect for function _I2C1_DO_RX_NACK_STOP
 21412                           
 21413     168C                     l12534:	
 21414                           ;incstack = 0
 21415                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 21416                           
 21417                           
 21418                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 21419     168C  3196  2659  3196   	fcall	_I2C1_MasterSendNack
 21420     168F                     l12536:
 21421                           
 21422                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 21423     168F  300A               	movlw	10
 21424     1690                     l1875:
 21425     1690  0008               	return
 21426     1691                     __end_of_I2C1_DO_RX_NACK_STOP:
 21427                           
 21428                           	psect	text100
 21429     1687                     __ptext100:	
 21430 ;; *************** function _I2C1_DO_RX_ACK *****************
 21431 ;; Defined at:
 21432 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 21433 ;; Parameters:    Size  Location     Type
 21434 ;;		None
 21435 ;; Auto vars:     Size  Location     Type
 21436 ;;		None
 21437 ;; Return value:  Size  Location     Type
 21438 ;;                  1    wreg      enum E12565
 21439 ;; Registers used:
 21440 ;;		wreg, status,2, status,0, pclath, cstack
 21441 ;; Tracked objects:
 21442 ;;		On entry : 0/0
 21443 ;;		On exit  : 0/0
 21444 ;;		Unchanged: 0/0
 21445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;Total ram usage:        0 bytes
 21451 ;; Hardware stack levels used: 1
 21452 ;; Hardware stack levels required when called: 5
 21453 ;; This function calls:
 21454 ;;		_I2C1_MasterSendAck
 21455 ;; This function is called by:
 21456 ;;		_I2C1_MasterFsm
 21457 ;; This function uses a non-reentrant model
 21458 ;;
 21459                           
 21460     1687                     _I2C1_DO_RX_ACK:	
 21461                           ;psect for function _I2C1_DO_RX_ACK
 21462                           
 21463     1687                     l12684:	
 21464                           ;incstack = 0
 21465                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 21466                           
 21467                           
 21468                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 21469     1687  3196  265D  3196   	fcall	_I2C1_MasterSendAck
 21470     168A                     l12686:
 21471                           
 21472                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 21473     168A  3005               	movlw	5
 21474     168B                     l1872:
 21475     168B  0008               	return
 21476     168C                     __end_of_I2C1_DO_RX_ACK:
 21477                           
 21478                           	psect	text101
 21479     1682                     __ptext101:	
 21480 ;; *************** function _I2C1_DO_SEND_STOP *****************
 21481 ;; Defined at:
 21482 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 21483 ;; Parameters:    Size  Location     Type
 21484 ;;		None
 21485 ;; Auto vars:     Size  Location     Type
 21486 ;;		None
 21487 ;; Return value:  Size  Location     Type
 21488 ;;                  1    wreg      enum E12565
 21489 ;; Registers used:
 21490 ;;		wreg, status,2, status,0, pclath, cstack
 21491 ;; Tracked objects:
 21492 ;;		On entry : 0/0
 21493 ;;		On exit  : 0/0
 21494 ;;		Unchanged: 0/0
 21495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21500 ;;Total ram usage:        0 bytes
 21501 ;; Hardware stack levels used: 1
 21502 ;; Hardware stack levels required when called: 5
 21503 ;; This function calls:
 21504 ;;		_I2C1_MasterStop
 21505 ;; This function is called by:
 21506 ;;		_I2C1_DO_TX
 21507 ;;		_I2C1_DO_TX_EMPTY
 21508 ;;		_I2C1_DO_ADDRESS_NACK
 21509 ;;		_I2C1_MasterFsm
 21510 ;; This function uses a non-reentrant model
 21511 ;;
 21512                           
 21513     1682                     _I2C1_DO_SEND_STOP:	
 21514                           ;psect for function _I2C1_DO_SEND_STOP
 21515                           
 21516     1682                     l12516:	
 21517                           ;incstack = 0
 21518                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 21519                           
 21520                           
 21521                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 21522     1682  3196  263A  3196   	fcall	_I2C1_MasterStop
 21523     1685                     l12518:
 21524                           
 21525                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 21526     1685  3000               	movlw	0
 21527     1686                     l1869:
 21528     1686  0008               	return
 21529     1687                     __end_of_I2C1_DO_SEND_STOP:
 21530                           
 21531                           	psect	text102
 21532     167D                     __ptext102:	
 21533 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 21534 ;; Defined at:
 21535 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 21536 ;; Parameters:    Size  Location     Type
 21537 ;;		None
 21538 ;; Auto vars:     Size  Location     Type
 21539 ;;		None
 21540 ;; Return value:  Size  Location     Type
 21541 ;;                  1    wreg      enum E12565
 21542 ;; Registers used:
 21543 ;;		wreg, status,2, status,0, pclath, cstack
 21544 ;; Tracked objects:
 21545 ;;		On entry : 0/0
 21546 ;;		On exit  : 0/0
 21547 ;;		Unchanged: 0/0
 21548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21553 ;;Total ram usage:        0 bytes
 21554 ;; Hardware stack levels used: 1
 21555 ;; Hardware stack levels required when called: 5
 21556 ;; This function calls:
 21557 ;;		_I2C1_MasterEnableRestart
 21558 ;; This function is called by:
 21559 ;;		_I2C1_DO_TX_EMPTY
 21560 ;;		_I2C1_DO_ADDRESS_NACK
 21561 ;;		_I2C1_MasterFsm
 21562 ;; This function uses a non-reentrant model
 21563 ;;
 21564                           
 21565     167D                     _I2C1_DO_SEND_RESTART:	
 21566                           ;psect for function _I2C1_DO_SEND_RESTART
 21567                           
 21568     167D                     l12542:	
 21569                           ;incstack = 0
 21570                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21571                           
 21572                           
 21573                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 21574     167D  3196  2637  3196   	fcall	_I2C1_MasterEnableRestart
 21575     1680                     l12544:
 21576                           
 21577                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 21578     1680  3001               	movlw	1
 21579     1681                     l1866:
 21580     1681  0008               	return
 21581     1682                     __end_of_I2C1_DO_SEND_RESTART:
 21582                           
 21583                           	psect	text103
 21584     1678                     __ptext103:	
 21585 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 21586 ;; Defined at:
 21587 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 21588 ;; Parameters:    Size  Location     Type
 21589 ;;		None
 21590 ;; Auto vars:     Size  Location     Type
 21591 ;;		None
 21592 ;; Return value:  Size  Location     Type
 21593 ;;                  1    wreg      enum E12565
 21594 ;; Registers used:
 21595 ;;		wreg, status,2, status,0, pclath, cstack
 21596 ;; Tracked objects:
 21597 ;;		On entry : 0/0
 21598 ;;		On exit  : 0/0
 21599 ;;		Unchanged: 0/0
 21600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21605 ;;Total ram usage:        0 bytes
 21606 ;; Hardware stack levels used: 1
 21607 ;; Hardware stack levels required when called: 5
 21608 ;; This function calls:
 21609 ;;		_I2C1_MasterEnableRestart
 21610 ;; This function is called by:
 21611 ;;		_I2C1_DO_TX
 21612 ;;		_I2C1_MasterFsm
 21613 ;; This function uses a non-reentrant model
 21614 ;;
 21615                           
 21616     1678                     _I2C1_DO_SEND_RESTART_WRITE:	
 21617                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 21618                           
 21619     1678                     l12510:	
 21620                           ;incstack = 0
 21621                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21622                           
 21623                           
 21624                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 21625     1678  3196  2637  3196   	fcall	_I2C1_MasterEnableRestart
 21626     167B                     l12512:
 21627                           
 21628                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 21629     167B  3002               	movlw	2
 21630     167C                     l1863:
 21631     167C  0008               	return
 21632     167D                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 21633                           
 21634                           	psect	text104
 21635     1673                     __ptext104:	
 21636 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 21637 ;; Defined at:
 21638 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;		None
 21641 ;; Auto vars:     Size  Location     Type
 21642 ;;		None
 21643 ;; Return value:  Size  Location     Type
 21644 ;;                  1    wreg      enum E12565
 21645 ;; Registers used:
 21646 ;;		wreg, status,2, status,0, pclath, cstack
 21647 ;; Tracked objects:
 21648 ;;		On entry : 0/0
 21649 ;;		On exit  : 0/0
 21650 ;;		Unchanged: 0/0
 21651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;Total ram usage:        0 bytes
 21657 ;; Hardware stack levels used: 1
 21658 ;; Hardware stack levels required when called: 5
 21659 ;; This function calls:
 21660 ;;		_I2C1_MasterEnableRestart
 21661 ;; This function is called by:
 21662 ;;		_I2C1_DO_TX
 21663 ;;		_I2C1_MasterFsm
 21664 ;; This function uses a non-reentrant model
 21665 ;;
 21666                           
 21667     1673                     _I2C1_DO_SEND_RESTART_READ:	
 21668                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 21669                           
 21670     1673                     l12504:	
 21671                           ;incstack = 0
 21672                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21673                           
 21674                           
 21675                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 21676     1673  3196  2637  3196   	fcall	_I2C1_MasterEnableRestart
 21677     1676                     l12506:
 21678                           
 21679                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 21680     1676  3001               	movlw	1
 21681     1677                     l1860:
 21682     1677  0008               	return
 21683     1678                     __end_of_I2C1_DO_SEND_RESTART_READ:
 21684                           
 21685                           	psect	text105
 21686     1711                     __ptext105:	
 21687 ;; *************** function _I2C1_DO_RCEN *****************
 21688 ;; Defined at:
 21689 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 21690 ;; Parameters:    Size  Location     Type
 21691 ;;		None
 21692 ;; Auto vars:     Size  Location     Type
 21693 ;;		None
 21694 ;; Return value:  Size  Location     Type
 21695 ;;                  1    wreg      enum E12565
 21696 ;; Registers used:
 21697 ;;		wreg, status,2, status,0, pclath, cstack
 21698 ;; Tracked objects:
 21699 ;;		On entry : 0/0
 21700 ;;		On exit  : 0/0
 21701 ;;		Unchanged: 0/0
 21702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21707 ;;Total ram usage:        0 bytes
 21708 ;; Hardware stack levels used: 1
 21709 ;; Hardware stack levels required when called: 5
 21710 ;; This function calls:
 21711 ;;		_I2C1_MasterStartRx
 21712 ;; This function is called by:
 21713 ;;		_I2C1_MasterFsm
 21714 ;; This function uses a non-reentrant model
 21715 ;;
 21716                           
 21717     1711                     _I2C1_DO_RCEN:	
 21718                           ;psect for function _I2C1_DO_RCEN
 21719                           
 21720     1711                     l12650:	
 21721                           ;incstack = 0
 21722                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 21723                           
 21724                           
 21725                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 21726     1711  0141               	movlb	1	; select bank1
 21727     1712  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 21728     1713                     l12652:
 21729                           
 21730                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 21731     1713  3196  263D  3197   	fcall	_I2C1_MasterStartRx
 21732     1716                     l12654:
 21733                           
 21734                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 21735     1716  3004               	movlw	4
 21736     1717                     l1836:
 21737     1717  0008               	return
 21738     1718                     __end_of_I2C1_DO_RCEN:
 21739                           
 21740                           	psect	text106
 21741     0777                     __ptext106:	
 21742 ;; *************** function _I2C1_DO_RX *****************
 21743 ;; Defined at:
 21744 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 21745 ;; Parameters:    Size  Location     Type
 21746 ;;		None
 21747 ;; Auto vars:     Size  Location     Type
 21748 ;;		None
 21749 ;; Return value:  Size  Location     Type
 21750 ;;                  1    wreg      enum E12565
 21751 ;; Registers used:
 21752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21753 ;; Tracked objects:
 21754 ;;		On entry : 0/0
 21755 ;;		On exit  : 0/0
 21756 ;;		Unchanged: 0/0
 21757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21762 ;;Total ram usage:        2 bytes
 21763 ;; Hardware stack levels used: 1
 21764 ;; Hardware stack levels required when called: 7
 21765 ;; This function calls:
 21766 ;;		NULL
 21767 ;;		_I2C1_CallbackReturnReset
 21768 ;;		_I2C1_CallbackReturnStop
 21769 ;;		_I2C1_DO_RX_NACK_RESTART
 21770 ;;		_I2C1_DO_RX_NACK_STOP
 21771 ;;		_I2C1_MasterGetRxData
 21772 ;;		_I2C1_MasterSendAck
 21773 ;;		_rd1RegCompleteHandler
 21774 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 21775 ;;		_rd2RegCompleteHandler
 21776 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 21777 ;;		_rdBlkRegCompleteHandler
 21778 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 21779 ;;		_wr1RegCompleteHandler
 21780 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 21781 ;;		_wr2RegCompleteHandler
 21782 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 21783 ;; This function is called by:
 21784 ;;		_I2C1_MasterFsm
 21785 ;; This function uses a non-reentrant model
 21786 ;;
 21787                           
 21788     0777                     _I2C1_DO_RX:	
 21789                           ;psect for function _I2C1_DO_RX
 21790                           
 21791     0777                     l12618:	
 21792                           ;incstack = 0
 21793                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21794                           
 21795                           
 21796                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 21797     0777  0141               	movlb	1	; select bank1
 21798     0778  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 21799     0779  0086               	movwf	6
 21800     077A  0187               	clrf	7
 21801     077B  3196  2640  3187   	fcall	_I2C1_MasterGetRxData
 21802     077E  0081               	movwf	1
 21803     077F                     l12620:
 21804     077F  3001               	movlw	1
 21805     0780  00F9               	movwf	??_I2C1_DO_RX
 21806     0781  0879               	movf	??_I2C1_DO_RX,w
 21807     0782  0141               	movlb	1	; select bank1
 21808     0783  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 21809     0784                     l12622:
 21810                           
 21811                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 21812     0784  3001               	movlw	1
 21813     0785  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 21814     0786  3000               	movlw	0
 21815     0787  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 21816     0788  0838               	movf	(_I2C1_Status^(0+128)+24),w
 21817     0789  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 21818     078A  1903               	btfsc	3,2
 21819     078B  2F8D               	goto	u9631
 21820     078C  2F8E               	goto	u9630
 21821     078D                     u9631:
 21822     078D  2F93               	goto	l1824
 21823     078E                     u9630:
 21824     078E                     l12624:
 21825                           
 21826                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 21827     078E  3196  265D  3187   	fcall	_I2C1_MasterSendAck
 21828     0791                     l12626:
 21829                           
 21830                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 21831     0791  3005               	movlw	5
 21832     0792  2FB9               	goto	l1825
 21833     0793                     l1824:	
 21834                           ;mcc_generated_files/i2c1_master.c: 386:     else
 21835                           
 21836                           
 21837                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 21838     0793  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 21839                           
 21840                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21841     0794  2F9D               	goto	l12642
 21842     0795                     l12632:
 21843                           
 21844                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 21845     0795  3196  2691  3187   	fcall	_I2C1_DO_RX_NACK_RESTART
 21846     0798  2FB9               	goto	l1825
 21847     0799                     l12636:
 21848                           
 21849                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 21850     0799  3196  268C  3187   	fcall	_I2C1_DO_RX_NACK_STOP
 21851     079C  2FB9               	goto	l1825
 21852     079D                     l12642:
 21853     079D  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 21854     079E  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21855     079F  0821               	movf	(_I2C1_Status+1)^(0+128),w
 21856     07A0  008A               	movwf	10
 21857     07A1  0820               	movf	_I2C1_Status^(0+128),w
 21858     07A2  000A               	callw
 21859     07A3  3187               	pagesel	$
 21860     07A4  00F9               	movwf	??_I2C1_DO_RX
 21861     07A5  01FA               	clrf	??_I2C1_DO_RX+1
 21862                           
 21863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21864                           ; Switch size 1, requested type "simple"
 21865                           ; Number of cases is 1, Range of values is 0 to 0
 21866                           ; switch strategies available:
 21867                           ; Name         Instructions Cycles
 21868                           ; simple_byte            4     3 (average)
 21869                           ; direct_byte            8     6 (fixed)
 21870                           ; jumptable            260     6 (fixed)
 21871                           ;	Chosen strategy is simple_byte
 21872     07A6  087A               	movf	??_I2C1_DO_RX+1,w
 21873     07A7  3A00               	xorlw	0	; case 0
 21874     07A8  1903               	skipnz
 21875     07A9  2FAB               	goto	l16488
 21876     07AA  2F99               	goto	l12636
 21877     07AB                     l16488:
 21878                           
 21879                           ; Switch size 1, requested type "simple"
 21880                           ; Number of cases is 4, Range of values is 1 to 4
 21881                           ; switch strategies available:
 21882                           ; Name         Instructions Cycles
 21883                           ; simple_byte           13     7 (average)
 21884                           ; direct_byte           17     9 (fixed)
 21885                           ; jumptable            263     9 (fixed)
 21886                           ;	Chosen strategy is simple_byte
 21887     07AB  0879               	movf	??_I2C1_DO_RX,w
 21888     07AC  3A01               	xorlw	1	; case 1
 21889     07AD  1903               	skipnz
 21890     07AE  2F99               	goto	l12636
 21891     07AF  3A03               	xorlw	3	; case 2
 21892     07B0  1903               	skipnz
 21893     07B1  2F95               	goto	l12632
 21894     07B2  3A01               	xorlw	1	; case 3
 21895     07B3  1903               	skipnz
 21896     07B4  2F95               	goto	l12632
 21897     07B5  3A07               	xorlw	7	; case 4
 21898     07B6  1903               	skipnz
 21899     07B7  2F99               	goto	l12636
 21900     07B8  2F99               	goto	l12636
 21901     07B9                     l1825:
 21902     07B9  0008               	return
 21903     07BA                     __end_of_I2C1_DO_RX:
 21904                           
 21905                           	psect	text107
 21906     0521                     __ptext107:	
 21907 ;; *************** function _I2C1_DO_TX *****************
 21908 ;; Defined at:
 21909 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 21910 ;; Parameters:    Size  Location     Type
 21911 ;;		None
 21912 ;; Auto vars:     Size  Location     Type
 21913 ;;		None
 21914 ;; Return value:  Size  Location     Type
 21915 ;;                  1    wreg      enum E12565
 21916 ;; Registers used:
 21917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21918 ;; Tracked objects:
 21919 ;;		On entry : 0/0
 21920 ;;		On exit  : 0/0
 21921 ;;		Unchanged: 0/0
 21922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21927 ;;Total ram usage:        2 bytes
 21928 ;; Hardware stack levels used: 1
 21929 ;; Hardware stack levels required when called: 7
 21930 ;; This function calls:
 21931 ;;		NULL
 21932 ;;		_I2C1_CallbackReturnReset
 21933 ;;		_I2C1_CallbackReturnStop
 21934 ;;		_I2C1_DO_SEND_RESTART_READ
 21935 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21936 ;;		_I2C1_DO_SEND_STOP
 21937 ;;		_I2C1_MasterIsNack
 21938 ;;		_I2C1_MasterSendTxData
 21939 ;;		_rd1RegCompleteHandler
 21940 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 21941 ;;		_rd2RegCompleteHandler
 21942 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 21943 ;;		_rdBlkRegCompleteHandler
 21944 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 21945 ;;		_wr1RegCompleteHandler
 21946 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 21947 ;;		_wr2RegCompleteHandler
 21948 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 21949 ;; This function is called by:
 21950 ;;		_I2C1_MasterFsm
 21951 ;; This function uses a non-reentrant model
 21952 ;;
 21953                           
 21954     0521                     _I2C1_DO_TX:	
 21955                           ;psect for function _I2C1_DO_TX
 21956                           
 21957     0521                     l12584:	
 21958                           ;incstack = 0
 21959                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21960                           
 21961                           
 21962                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 21963     0521  3196  26A5  3185   	fcall	_I2C1_MasterIsNack
 21964     0524  3A00               	xorlw	0
 21965     0525  1903               	skipnz
 21966     0526  2D28               	goto	u9611
 21967     0527  2D29               	goto	u9610
 21968     0528                     u9611:
 21969     0528  2D57               	goto	l1808
 21970     0529                     u9610:
 21971     0529  2D36               	goto	l12602
 21972     052A                     l12588:
 21973                           
 21974                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 21975     052A  3196  2673  3185   	fcall	_I2C1_DO_SEND_RESTART_READ
 21976     052D  2D73               	goto	l1811
 21977     052E                     l12592:
 21978                           
 21979                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 21980     052E  3196  2678  3185   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 21981     0531  2D73               	goto	l1811
 21982     0532                     l12596:
 21983                           
 21984                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 21985     0532  3196  2682  3185   	fcall	_I2C1_DO_SEND_STOP
 21986     0535  2D73               	goto	l1811
 21987     0536                     l12602:
 21988     0536  0141               	movlb	1	; select bank1
 21989     0537  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 21990     0538  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21991     0539  3006               	movlw	6
 21992     053A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 21993     053B  0086               	movwf	6
 21994     053C  0187               	clrf	7
 21995     053D  3F41               	moviw [1]fsr1
 21996     053E  008A               	movwf	10
 21997     053F  3F40               	moviw [0]fsr1
 21998     0540  000A               	callw
 21999     0541  3185               	pagesel	$
 22000     0542  00F9               	movwf	??_I2C1_DO_TX
 22001     0543  01FA               	clrf	??_I2C1_DO_TX+1
 22002                           
 22003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22004                           ; Switch size 1, requested type "simple"
 22005                           ; Number of cases is 1, Range of values is 0 to 0
 22006                           ; switch strategies available:
 22007                           ; Name         Instructions Cycles
 22008                           ; simple_byte            4     3 (average)
 22009                           ; direct_byte            8     6 (fixed)
 22010                           ; jumptable            260     6 (fixed)
 22011                           ;	Chosen strategy is simple_byte
 22012     0544  087A               	movf	??_I2C1_DO_TX+1,w
 22013     0545  3A00               	xorlw	0	; case 0
 22014     0546  1903               	skipnz
 22015     0547  2D49               	goto	l16490
 22016     0548  2D32               	goto	l12596
 22017     0549                     l16490:
 22018                           
 22019                           ; Switch size 1, requested type "simple"
 22020                           ; Number of cases is 4, Range of values is 1 to 4
 22021                           ; switch strategies available:
 22022                           ; Name         Instructions Cycles
 22023                           ; simple_byte           13     7 (average)
 22024                           ; direct_byte           17     9 (fixed)
 22025                           ; jumptable            263     9 (fixed)
 22026                           ;	Chosen strategy is simple_byte
 22027     0549  0879               	movf	??_I2C1_DO_TX,w
 22028     054A  3A01               	xorlw	1	; case 1
 22029     054B  1903               	skipnz
 22030     054C  2D32               	goto	l12596
 22031     054D  3A03               	xorlw	3	; case 2
 22032     054E  1903               	skipnz
 22033     054F  2D2A               	goto	l12588
 22034     0550  3A01               	xorlw	1	; case 3
 22035     0551  1903               	skipnz
 22036     0552  2D2E               	goto	l12592
 22037     0553  3A07               	xorlw	7	; case 4
 22038     0554  1903               	skipnz
 22039     0555  2D32               	goto	l12596
 22040     0556  2D32               	goto	l12596
 22041     0557                     l1808:	
 22042                           ;mcc_generated_files/i2c1_master.c: 370:     else
 22043                           
 22044                           
 22045                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 22046     0557  0141               	movlb	1	; select bank1
 22047     0558  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 22048     0559                     l12604:
 22049                           
 22050                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 22051     0559  3017               	movlw	23
 22052     055A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 22053     055B  0086               	movwf	6
 22054     055C  0187               	clrf	7
 22055     055D  3F40               	moviw [0]fsr1
 22056     055E  0084               	movwf	4
 22057     055F  0185               	clrf	5
 22058     0560  0A81               	incf	1,f
 22059     0561  0800               	movf	0,w
 22060     0562  3196  2669  3185   	fcall	_I2C1_MasterSendTxData
 22061     0565                     l12606:
 22062                           
 22063                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 22064     0565  3001               	movlw	1
 22065     0566  0141               	movlb	1	; select bank1
 22066     0567  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 22067     0568  3000               	movlw	0
 22068     0569  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 22069     056A  0838               	movf	(_I2C1_Status^(0+128)+24),w
 22070     056B  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 22071     056C  1D03               	btfss	3,2
 22072     056D  2D6F               	goto	u9621
 22073     056E  2D70               	goto	u9620
 22074     056F                     u9621:
 22075     056F  2D72               	goto	l12610
 22076     0570                     u9620:
 22077     0570                     l12608:
 22078     0570  3006               	movlw	6
 22079     0571  2D73               	goto	l1811
 22080     0572                     l12610:
 22081     0572  3003               	movlw	3
 22082     0573                     l1811:
 22083     0573  0008               	return
 22084     0574                     __end_of_I2C1_DO_TX:
 22085                           
 22086                           	psect	text108
 22087     1718                     __ptext108:	
 22088 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 22089 ;; Defined at:
 22090 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 22091 ;; Parameters:    Size  Location     Type
 22092 ;;		None
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;		None
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1    wreg      enum E12565
 22097 ;; Registers used:
 22098 ;;		wreg, status,2, status,0, pclath, cstack
 22099 ;; Tracked objects:
 22100 ;;		On entry : 0/0
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22108 ;;Total ram usage:        0 bytes
 22109 ;; Hardware stack levels used: 1
 22110 ;; Hardware stack levels required when called: 5
 22111 ;; This function calls:
 22112 ;;		_I2C1_MasterSendTxData
 22113 ;; This function is called by:
 22114 ;;		_I2C1_MasterFsm
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118     1718                     _I2C1_DO_SEND_ADR_WRITE:	
 22119                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 22120                           
 22121     1718                     l12576:	
 22122                           ;incstack = 0
 22123                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 22124                           
 22125                           
 22126                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 22127     1718  0141               	movlb	1	; select bank1
 22128     1719  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 22129     171A                     l12578:
 22130                           
 22131                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 22132     171A  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 22133     171B  3196  2669  3197   	fcall	_I2C1_MasterSendTxData
 22134     171E                     l12580:
 22135                           
 22136                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 22137     171E  3003               	movlw	3
 22138     171F                     l1805:
 22139     171F  0008               	return
 22140     1720                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 22141                           
 22142                           	psect	text109
 22143     1731                     __ptext109:	
 22144 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 22145 ;; Defined at:
 22146 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;		None
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;		None
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  1    wreg      enum E12565
 22153 ;; Registers used:
 22154 ;;		wreg, status,2, status,0, pclath, cstack
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22164 ;;Total ram usage:        0 bytes
 22165 ;; Hardware stack levels used: 1
 22166 ;; Hardware stack levels required when called: 5
 22167 ;; This function calls:
 22168 ;;		_I2C1_MasterSendTxData
 22169 ;; This function is called by:
 22170 ;;		_I2C1_MasterFsm
 22171 ;; This function uses a non-reentrant model
 22172 ;;
 22173                           
 22174     1731                     _I2C1_DO_SEND_ADR_READ:	
 22175                           ;psect for function _I2C1_DO_SEND_ADR_READ
 22176                           
 22177     1731                     l12568:	
 22178                           ;incstack = 0
 22179                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 22180                           
 22181                           
 22182                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 22183     1731  0141               	movlb	1	; select bank1
 22184     1732  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 22185     1733                     l12570:
 22186                           
 22187                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 22188     1733  1403               	setc
 22189     1734  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 22190     1735  3196  2669  3197   	fcall	_I2C1_MasterSendTxData
 22191     1738                     l12572:
 22192                           
 22193                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 22194     1738  3005               	movlw	5
 22195     1739                     l1802:
 22196     1739  0008               	return
 22197     173A                     __end_of_I2C1_DO_SEND_ADR_READ:
 22198                           
 22199                           	psect	text110
 22200     166E                     __ptext110:	
 22201 ;; *************** function _I2C1_DO_IDLE *****************
 22202 ;; Defined at:
 22203 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 22204 ;; Parameters:    Size  Location     Type
 22205 ;;		None
 22206 ;; Auto vars:     Size  Location     Type
 22207 ;;		None
 22208 ;; Return value:  Size  Location     Type
 22209 ;;                  1    wreg      enum E12565
 22210 ;; Registers used:
 22211 ;;		wreg, status,2
 22212 ;; Tracked objects:
 22213 ;;		On entry : 0/0
 22214 ;;		On exit  : 0/0
 22215 ;;		Unchanged: 0/0
 22216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22221 ;;Total ram usage:        0 bytes
 22222 ;; Hardware stack levels used: 1
 22223 ;; Hardware stack levels required when called: 4
 22224 ;; This function calls:
 22225 ;;		Nothing
 22226 ;; This function is called by:
 22227 ;;		_I2C1_MasterFsm
 22228 ;; This function uses a non-reentrant model
 22229 ;;
 22230                           
 22231     166E                     _I2C1_DO_IDLE:	
 22232                           ;psect for function _I2C1_DO_IDLE
 22233                           
 22234     166E                     l12560:	
 22235                           ;incstack = 0
 22236                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 22237                           
 22238                           
 22239                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 22240     166E  0141               	movlb	1	; select bank1
 22241     166F  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 22242     1670                     l12562:
 22243                           
 22244                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 22245     1670  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 22246     1671                     l12564:
 22247                           
 22248                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 22249     1671  300E               	movlw	14
 22250     1672                     l1799:
 22251     1672  0008               	return
 22252     1673                     __end_of_I2C1_DO_IDLE:
 22253                           
 22254                           	psect	text111
 22255     0CC6                     __ptext111:	
 22256 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 22257 ;; Defined at:
 22258 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;		None
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;		None
 22263 ;; Return value:  Size  Location     Type
 22264 ;;                  1    wreg      enum E12565
 22265 ;; Registers used:
 22266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22267 ;; Tracked objects:
 22268 ;;		On entry : 0/0
 22269 ;;		On exit  : 0/0
 22270 ;;		Unchanged: 0/0
 22271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22276 ;;Total ram usage:        2 bytes
 22277 ;; Hardware stack levels used: 1
 22278 ;; Hardware stack levels required when called: 7
 22279 ;; This function calls:
 22280 ;;		NULL
 22281 ;;		_I2C1_CallbackReturnReset
 22282 ;;		_I2C1_CallbackReturnStop
 22283 ;;		_I2C1_DO_SEND_RESTART
 22284 ;;		_I2C1_DO_SEND_STOP
 22285 ;;		_I2C1_MasterSetIrq
 22286 ;;		_rd1RegCompleteHandler
 22287 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 22288 ;;		_rd2RegCompleteHandler
 22289 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 22290 ;;		_rdBlkRegCompleteHandler
 22291 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 22292 ;;		_wr1RegCompleteHandler
 22293 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 22294 ;;		_wr2RegCompleteHandler
 22295 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 22296 ;; This function is called by:
 22297 ;;		_I2C1_MasterFsm
 22298 ;; This function uses a non-reentrant model
 22299 ;;
 22300                           
 22301     0CC6                     _I2C1_DO_TX_EMPTY:	
 22302                           ;psect for function _I2C1_DO_TX_EMPTY
 22303                           
 22304     0CC6                     l12658:	
 22305                           ;incstack = 0
 22306                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22307                           
 22308                           
 22309                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 22310     0CC6  0141               	movlb	1	; select bank1
 22311     0CC7  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 22312                           
 22313                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 22314     0CC8  2CD6               	goto	l12676
 22315     0CC9                     l12660:
 22316                           
 22317                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 22318     0CC9  3196  267D  318C   	fcall	_I2C1_DO_SEND_RESTART
 22319     0CCC  2CF2               	goto	l1842
 22320     0CCD                     l12664:
 22321                           
 22322                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 22323     0CCD  3196  2643  318C   	fcall	_I2C1_MasterSetIrq
 22324     0CD0                     l12666:
 22325                           
 22326                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 22327     0CD0  3003               	movlw	3
 22328     0CD1  2CF2               	goto	l1842
 22329     0CD2                     l12670:
 22330                           
 22331                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 22332     0CD2  3196  2682  318C   	fcall	_I2C1_DO_SEND_STOP
 22333     0CD5  2CF2               	goto	l1842
 22334     0CD6                     l12676:
 22335     0CD6  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 22336     0CD7  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 22337     0CD8  0821               	movf	(_I2C1_Status+1)^(0+128),w
 22338     0CD9  008A               	movwf	10
 22339     0CDA  0820               	movf	_I2C1_Status^(0+128),w
 22340     0CDB  000A               	callw
 22341     0CDC  318C               	pagesel	$
 22342     0CDD  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 22343     0CDE  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 22344                           
 22345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22346                           ; Switch size 1, requested type "simple"
 22347                           ; Number of cases is 1, Range of values is 0 to 0
 22348                           ; switch strategies available:
 22349                           ; Name         Instructions Cycles
 22350                           ; simple_byte            4     3 (average)
 22351                           ; direct_byte            8     6 (fixed)
 22352                           ; jumptable            260     6 (fixed)
 22353                           ;	Chosen strategy is simple_byte
 22354     0CDF  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 22355     0CE0  3A00               	xorlw	0	; case 0
 22356     0CE1  1903               	skipnz
 22357     0CE2  2CE4               	goto	l16492
 22358     0CE3  2CD2               	goto	l12670
 22359     0CE4                     l16492:
 22360                           
 22361                           ; Switch size 1, requested type "simple"
 22362                           ; Number of cases is 4, Range of values is 1 to 4
 22363                           ; switch strategies available:
 22364                           ; Name         Instructions Cycles
 22365                           ; simple_byte           13     7 (average)
 22366                           ; direct_byte           17     9 (fixed)
 22367                           ; jumptable            263     9 (fixed)
 22368                           ;	Chosen strategy is simple_byte
 22369     0CE4  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 22370     0CE5  3A01               	xorlw	1	; case 1
 22371     0CE6  1903               	skipnz
 22372     0CE7  2CD2               	goto	l12670
 22373     0CE8  3A03               	xorlw	3	; case 2
 22374     0CE9  1903               	skipnz
 22375     0CEA  2CC9               	goto	l12660
 22376     0CEB  3A01               	xorlw	1	; case 3
 22377     0CEC  1903               	skipnz
 22378     0CED  2CC9               	goto	l12660
 22379     0CEE  3A07               	xorlw	7	; case 4
 22380     0CEF  1903               	skipnz
 22381     0CF0  2CCD               	goto	l12664
 22382     0CF1  2CD2               	goto	l12670
 22383     0CF2                     l1842:
 22384     0CF2  0008               	return
 22385     0CF3                     __end_of_I2C1_DO_TX_EMPTY:
 22386                           
 22387                           	psect	text112
 22388     1643                     __ptext112:	
 22389 ;; *************** function _I2C1_MasterSetIrq *****************
 22390 ;; Defined at:
 22391 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 22392 ;; Parameters:    Size  Location     Type
 22393 ;;		None
 22394 ;; Auto vars:     Size  Location     Type
 22395 ;;		None
 22396 ;; Return value:  Size  Location     Type
 22397 ;;                  1    wreg      void 
 22398 ;; Registers used:
 22399 ;;		None
 22400 ;; Tracked objects:
 22401 ;;		On entry : 0/0
 22402 ;;		On exit  : 0/0
 22403 ;;		Unchanged: 0/0
 22404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22409 ;;Total ram usage:        0 bytes
 22410 ;; Hardware stack levels used: 1
 22411 ;; Hardware stack levels required when called: 4
 22412 ;; This function calls:
 22413 ;;		Nothing
 22414 ;; This function is called by:
 22415 ;;		_I2C1_DO_TX_EMPTY
 22416 ;; This function uses a non-reentrant model
 22417 ;;
 22418                           
 22419     1643                     _I2C1_MasterSetIrq:	
 22420                           ;psect for function _I2C1_MasterSetIrq
 22421                           
 22422     1643                     l12548:	
 22423                           ;incstack = 0
 22424                           ; Regs used in _I2C1_MasterSetIrq: []
 22425                           
 22426                           
 22427                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 22428     1643  014E               	movlb	14	; select bank14
 22429     1644  140F               	bsf	15,0	;volatile
 22430     1645                     l1962:
 22431     1645  0008               	return
 22432     1646                     __end_of_I2C1_MasterSetIrq:
 22433                           
 22434                           	psect	text113
 22435     16A5                     __ptext113:	
 22436 ;; *************** function _I2C1_MasterIsNack *****************
 22437 ;; Defined at:
 22438 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;		None
 22441 ;; Auto vars:     Size  Location     Type
 22442 ;;		None
 22443 ;; Return value:  Size  Location     Type
 22444 ;;                  1    wreg      _Bool 
 22445 ;; Registers used:
 22446 ;;		wreg, status,2, status,0
 22447 ;; Tracked objects:
 22448 ;;		On entry : 0/0
 22449 ;;		On exit  : 0/0
 22450 ;;		Unchanged: 0/0
 22451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22456 ;;Total ram usage:        0 bytes
 22457 ;; Hardware stack levels used: 1
 22458 ;; Hardware stack levels required when called: 4
 22459 ;; This function calls:
 22460 ;;		Nothing
 22461 ;; This function is called by:
 22462 ;;		_I2C1_MasterFsm
 22463 ;;		_I2C1_DO_TX
 22464 ;; This function uses a non-reentrant model
 22465 ;;
 22466                           
 22467     16A5                     _I2C1_MasterIsNack:	
 22468                           ;psect for function _I2C1_MasterIsNack
 22469                           
 22470     16A5                     l12498:	
 22471                           ;incstack = 0
 22472                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 22473                           
 22474                           
 22475                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 22476     16A5  0143               	movlb	3	; select bank3
 22477     16A6  0E11               	swapf	17,w	;volatile
 22478     16A7  0C89               	rrf	9,f
 22479     16A8  0C89               	rrf	9,f
 22480     16A9  3901               	andlw	1
 22481     16AA                     l1935:
 22482     16AA  0008               	return
 22483     16AB                     __end_of_I2C1_MasterIsNack:
 22484                           
 22485                           	psect	text114
 22486     1669                     __ptext114:	
 22487 ;; *************** function _I2C1_MasterSendTxData *****************
 22488 ;; Defined at:
 22489 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 22490 ;; Parameters:    Size  Location     Type
 22491 ;;  data            1    wreg     unsigned char 
 22492 ;; Auto vars:     Size  Location     Type
 22493 ;;  data            1    1[COMMON] unsigned char 
 22494 ;; Return value:  Size  Location     Type
 22495 ;;                  1    wreg      void 
 22496 ;; Registers used:
 22497 ;;		wreg
 22498 ;; Tracked objects:
 22499 ;;		On entry : 0/0
 22500 ;;		On exit  : 0/0
 22501 ;;		Unchanged: 0/0
 22502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22507 ;;Total ram usage:        1 bytes
 22508 ;; Hardware stack levels used: 1
 22509 ;; Hardware stack levels required when called: 4
 22510 ;; This function calls:
 22511 ;;		Nothing
 22512 ;; This function is called by:
 22513 ;;		_I2C1_DO_SEND_ADR_READ
 22514 ;;		_I2C1_DO_SEND_ADR_WRITE
 22515 ;;		_I2C1_DO_TX
 22516 ;; This function uses a non-reentrant model
 22517 ;;
 22518                           
 22519     1669                     _I2C1_MasterSendTxData:	
 22520                           ;psect for function _I2C1_MasterSendTxData
 22521                           
 22522                           
 22523                           ;incstack = 0
 22524                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 22525                           ;I2C1_MasterSendTxData@data stored from wreg
 22526     1669  00F1               	movwf	I2C1_MasterSendTxData@data
 22527     166A                     l12502:
 22528                           
 22529                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 22530     166A  0871               	movf	I2C1_MasterSendTxData@data,w
 22531     166B  0143               	movlb	3	; select bank3
 22532     166C  008C               	movwf	12	;volatile
 22533     166D                     l1917:
 22534     166D  0008               	return
 22535     166E                     __end_of_I2C1_MasterSendTxData:
 22536                           
 22537                           	psect	text115
 22538     165D                     __ptext115:	
 22539 ;; *************** function _I2C1_MasterSendAck *****************
 22540 ;; Defined at:
 22541 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 22542 ;; Parameters:    Size  Location     Type
 22543 ;;		None
 22544 ;; Auto vars:     Size  Location     Type
 22545 ;;		None
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  1    wreg      void 
 22548 ;; Registers used:
 22549 ;;		None
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22559 ;;Total ram usage:        0 bytes
 22560 ;; Hardware stack levels used: 1
 22561 ;; Hardware stack levels required when called: 4
 22562 ;; This function calls:
 22563 ;;		Nothing
 22564 ;; This function is called by:
 22565 ;;		_I2C1_DO_RX
 22566 ;;		_I2C1_DO_RX_ACK
 22567 ;; This function uses a non-reentrant model
 22568 ;;
 22569                           
 22570     165D                     _I2C1_MasterSendAck:	
 22571                           ;psect for function _I2C1_MasterSendAck
 22572                           
 22573     165D                     l12526:	
 22574                           ;incstack = 0
 22575                           ; Regs used in _I2C1_MasterSendAck: []
 22576                           
 22577                           
 22578                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 22579     165D  0143               	movlb	3	; select bank3
 22580     165E  1291               	bcf	17,5	;volatile
 22581                           
 22582                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 22583     165F  1611               	bsf	17,4	;volatile
 22584     1660                     l1938:
 22585     1660  0008               	return
 22586     1661                     __end_of_I2C1_MasterSendAck:
 22587                           
 22588                           	psect	text116
 22589     1640                     __ptext116:	
 22590 ;; *************** function _I2C1_MasterGetRxData *****************
 22591 ;; Defined at:
 22592 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;		None
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1    wreg      unsigned char 
 22599 ;; Registers used:
 22600 ;;		wreg
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used: 1
 22612 ;; Hardware stack levels required when called: 4
 22613 ;; This function calls:
 22614 ;;		Nothing
 22615 ;; This function is called by:
 22616 ;;		_I2C1_DO_RX
 22617 ;; This function uses a non-reentrant model
 22618 ;;
 22619                           
 22620     1640                     _I2C1_MasterGetRxData:	
 22621                           ;psect for function _I2C1_MasterGetRxData
 22622                           
 22623     1640                     l12522:	
 22624                           ;incstack = 0
 22625                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 22626                           
 22627                           
 22628                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 22629     1640  0143               	movlb	3	; select bank3
 22630     1641  080C               	movf	12,w	;volatile
 22631     1642                     l1914:
 22632     1642  0008               	return
 22633     1643                     __end_of_I2C1_MasterGetRxData:
 22634                           
 22635                           	psect	text117
 22636     1659                     __ptext117:	
 22637 ;; *************** function _I2C1_MasterSendNack *****************
 22638 ;; Defined at:
 22639 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 22640 ;; Parameters:    Size  Location     Type
 22641 ;;		None
 22642 ;; Auto vars:     Size  Location     Type
 22643 ;;		None
 22644 ;; Return value:  Size  Location     Type
 22645 ;;                  1    wreg      void 
 22646 ;; Registers used:
 22647 ;;		None
 22648 ;; Tracked objects:
 22649 ;;		On entry : 0/0
 22650 ;;		On exit  : 0/0
 22651 ;;		Unchanged: 0/0
 22652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22657 ;;Total ram usage:        0 bytes
 22658 ;; Hardware stack levels used: 1
 22659 ;; Hardware stack levels required when called: 4
 22660 ;; This function calls:
 22661 ;;		Nothing
 22662 ;; This function is called by:
 22663 ;;		_I2C1_DO_RX_NACK_STOP
 22664 ;;		_I2C1_DO_RX_NACK_RESTART
 22665 ;; This function uses a non-reentrant model
 22666 ;;
 22667                           
 22668     1659                     _I2C1_MasterSendNack:	
 22669                           ;psect for function _I2C1_MasterSendNack
 22670                           
 22671     1659                     l12420:	
 22672                           ;incstack = 0
 22673                           ; Regs used in _I2C1_MasterSendNack: []
 22674                           
 22675                           
 22676                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 22677     1659  0143               	movlb	3	; select bank3
 22678     165A  1691               	bsf	17,5	;volatile
 22679                           
 22680                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 22681     165B  1611               	bsf	17,4	;volatile
 22682     165C                     l1941:
 22683     165C  0008               	return
 22684     165D                     __end_of_I2C1_MasterSendNack:
 22685                           
 22686                           	psect	text118
 22687     163D                     __ptext118:	
 22688 ;; *************** function _I2C1_MasterStartRx *****************
 22689 ;; Defined at:
 22690 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 22691 ;; Parameters:    Size  Location     Type
 22692 ;;		None
 22693 ;; Auto vars:     Size  Location     Type
 22694 ;;		None
 22695 ;; Return value:  Size  Location     Type
 22696 ;;                  1    wreg      void 
 22697 ;; Registers used:
 22698 ;;		None
 22699 ;; Tracked objects:
 22700 ;;		On entry : 0/0
 22701 ;;		On exit  : 0/0
 22702 ;;		Unchanged: 0/0
 22703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22708 ;;Total ram usage:        0 bytes
 22709 ;; Hardware stack levels used: 1
 22710 ;; Hardware stack levels required when called: 4
 22711 ;; This function calls:
 22712 ;;		Nothing
 22713 ;; This function is called by:
 22714 ;;		_I2C1_DO_RCEN
 22715 ;; This function uses a non-reentrant model
 22716 ;;
 22717                           
 22718     163D                     _I2C1_MasterStartRx:	
 22719                           ;psect for function _I2C1_MasterStartRx
 22720                           
 22721     163D                     l12540:	
 22722                           ;incstack = 0
 22723                           ; Regs used in _I2C1_MasterStartRx: []
 22724                           
 22725                           
 22726                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 22727     163D  0143               	movlb	3	; select bank3
 22728     163E  1591               	bsf	17,3	;volatile
 22729     163F                     l1926:
 22730     163F  0008               	return
 22731     1640                     __end_of_I2C1_MasterStartRx:
 22732                           
 22733                           	psect	text119
 22734     1629                     __ptext119:	
 22735 ;; *************** function _I2C1_CallbackReturnReset *****************
 22736 ;; Defined at:
 22737 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  funPtr          1    8[COMMON] PTR void 
 22740 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22741 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22742 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22743 ;; Auto vars:     Size  Location     Type
 22744 ;;		None
 22745 ;; Return value:  Size  Location     Type
 22746 ;;                  1    wreg      enum E363
 22747 ;; Registers used:
 22748 ;;		wreg
 22749 ;; Tracked objects:
 22750 ;;		On entry : 0/0
 22751 ;;		On exit  : 0/0
 22752 ;;		Unchanged: 0/0
 22753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22754 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22758 ;;Total ram usage:        1 bytes
 22759 ;; Hardware stack levels used: 1
 22760 ;; Hardware stack levels required when called: 4
 22761 ;; This function calls:
 22762 ;;		Nothing
 22763 ;; This function is called by:
 22764 ;;		_I2C1_Open
 22765 ;;		_I2C1_DO_TX
 22766 ;;		_I2C1_DO_RX
 22767 ;;		_I2C1_DO_TX_EMPTY
 22768 ;;		_I2C1_DO_ADDRESS_NACK
 22769 ;;		_I2C1_DO_RX_EMPTY
 22770 ;; This function uses a non-reentrant model
 22771 ;;
 22772                           
 22773     1629                     _I2C1_CallbackReturnReset:	
 22774                           ;psect for function _I2C1_CallbackReturnReset
 22775                           
 22776     1629                     l12554:	
 22777                           ;incstack = 0
 22778                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 22779                           
 22780                           
 22781                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 22782     1629  3005               	movlw	5
 22783     162A                     l1898:
 22784     162A  0008               	return
 22785     162B                     __end_of_I2C1_CallbackReturnReset:
 22786                           
 22787                           	psect	text120
 22788     1627                     __ptext120:	
 22789 ;; *************** function _I2C1_CallbackReturnStop *****************
 22790 ;; Defined at:
 22791 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;  funPtr          1    8[COMMON] PTR void 
 22794 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22795 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22796 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22797 ;; Auto vars:     Size  Location     Type
 22798 ;;		None
 22799 ;; Return value:  Size  Location     Type
 22800 ;;                  1    wreg      enum E363
 22801 ;; Registers used:
 22802 ;;		wreg
 22803 ;; Tracked objects:
 22804 ;;		On entry : 0/0
 22805 ;;		On exit  : 0/0
 22806 ;;		Unchanged: 0/0
 22807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22808 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22812 ;;Total ram usage:        1 bytes
 22813 ;; Hardware stack levels used: 1
 22814 ;; Hardware stack levels required when called: 4
 22815 ;; This function calls:
 22816 ;;		Nothing
 22817 ;; This function is called by:
 22818 ;;		_I2C1_Open
 22819 ;;		_I2C1_SetCallback
 22820 ;;		_I2C1_DO_TX
 22821 ;;		_I2C1_DO_RX
 22822 ;;		_I2C1_DO_TX_EMPTY
 22823 ;;		_I2C1_DO_ADDRESS_NACK
 22824 ;;		_I2C1_DO_RX_EMPTY
 22825 ;; This function uses a non-reentrant model
 22826 ;;
 22827                           
 22828     1627                     _I2C1_CallbackReturnStop:	
 22829                           ;psect for function _I2C1_CallbackReturnStop
 22830                           
 22831     1627                     l12550:	
 22832                           ;incstack = 0
 22833                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 22834                           
 22835                           
 22836                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 22837     1627  3001               	movlw	1
 22838     1628                     l1895:
 22839     1628  0008               	return
 22840     1629                     __end_of_I2C1_CallbackReturnStop:
 22841                           
 22842                           	psect	text121
 22843     09CC                     __ptext121:	
 22844 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1231 *****************
 22845 ;; Defined at:
 22846 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22847 ;; Parameters:    Size  Location     Type
 22848 ;;  ptr             1    8[COMMON] PTR void 
 22849 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22850 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22851 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22852 ;; Auto vars:     Size  Location     Type
 22853 ;;		None
 22854 ;; Return value:  Size  Location     Type
 22855 ;;                  1    wreg      enum E363
 22856 ;; Registers used:
 22857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22858 ;; Tracked objects:
 22859 ;;		On entry : 0/0
 22860 ;;		On exit  : 0/0
 22861 ;;		Unchanged: 0/0
 22862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22867 ;;Total ram usage:        1 bytes
 22868 ;; Hardware stack levels used: 1
 22869 ;; Hardware stack levels required when called: 6
 22870 ;; This function calls:
 22871 ;;		_I2C1_SetBuffer
 22872 ;;		_I2C1_SetDataCompleteCallback
 22873 ;; This function is called by:
 22874 ;;		_I2C1_ReadDataBlock
 22875 ;;		_I2C1_DO_TX
 22876 ;;		_I2C1_DO_RX
 22877 ;;		_I2C1_DO_TX_EMPTY
 22878 ;;		_I2C1_DO_ADDRESS_NACK
 22879 ;;		_I2C1_DO_RX_EMPTY
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883     09CC                     _rdBlkRegCompleteHandler@i2c1_master_example$F1231:	
 22884                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1231
 22885                           
 22886     09CC                     l12492:	
 22887                           ;incstack = 0
 22888                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1231: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 22889                           
 22890                           
 22891                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 22892     09CC  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr,w
 22893     09CD  0086               	movwf	6
 22894     09CE  0187               	clrf	7
 22895     09CF  3F40               	moviw [0]fsr1
 22896     09D0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22897     09D1  3F41               	moviw [1]fsr1
 22898     09D2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22899     09D3  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr,w
 22900     09D4  3E02               	addlw	2
 22901     09D5  0086               	movwf	6
 22902     09D6  0187               	clrf	7
 22903     09D7  0801               	movf	1,w
 22904     09D8  3197  27F2  3189   	fcall	_I2C1_SetBuffer
 22905                           
 22906                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22907     09DB  3000               	movlw	0
 22908     09DC  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22909     09DD  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22910     09DE  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22911     09DF  3197  2787  3189   	fcall	_I2C1_SetDataCompleteCallback
 22912     09E2                     l12494:
 22913                           
 22914                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 22915     09E2  3002               	movlw	2
 22916     09E3                     l739:
 22917     09E3  0008               	return
 22918     09E4                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1231:
 22919                           
 22920                           	psect	text122
 22921     08AF                     __ptext122:	
 22922 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1214 *****************
 22923 ;; Defined at:
 22924 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;  ptr             1    8[COMMON] PTR void 
 22927 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22928 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22929 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1    wreg      enum E363
 22934 ;; Registers used:
 22935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22945 ;;Total ram usage:        1 bytes
 22946 ;; Hardware stack levels used: 1
 22947 ;; Hardware stack levels required when called: 6
 22948 ;; This function calls:
 22949 ;;		_I2C1_SetBuffer
 22950 ;;		_I2C1_SetDataCompleteCallback
 22951 ;; This function is called by:
 22952 ;;		_I2C1_Write1ByteRegister
 22953 ;;		_I2C1_DO_TX
 22954 ;;		_I2C1_DO_RX
 22955 ;;		_I2C1_DO_TX_EMPTY
 22956 ;;		_I2C1_DO_ADDRESS_NACK
 22957 ;;		_I2C1_DO_RX_EMPTY
 22958 ;; This function uses a non-reentrant model
 22959 ;;
 22960                           
 22961     08AF                     _wr1RegCompleteHandler@i2c1_master_example$F1214:	
 22962                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1214
 22963                           
 22964     08AF                     l12476:	
 22965                           ;incstack = 0
 22966                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1214: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 22967                           
 22968                           
 22969                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 22970     08AF  3001               	movlw	1
 22971     08B0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22972     08B1  3000               	movlw	0
 22973     08B2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22974     08B3  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1214@ptr,w
 22975     08B4  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22976     08B7                     l12478:
 22977                           
 22978                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22979     08B7  3000               	movlw	0
 22980     08B8  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22981     08B9  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22982     08BA  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22983     08BB  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 22984     08BE                     l12480:
 22985                           
 22986                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 22987     08BE  3004               	movlw	4
 22988     08BF                     l733:
 22989     08BF  0008               	return
 22990     08C0                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1214:
 22991                           
 22992                           	psect	text123
 22993     089E                     __ptext123:	
 22994 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1208 *****************
 22995 ;; Defined at:
 22996 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22997 ;; Parameters:    Size  Location     Type
 22998 ;;  ptr             1    8[COMMON] PTR void 
 22999 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23000 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23001 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23002 ;; Auto vars:     Size  Location     Type
 23003 ;;		None
 23004 ;; Return value:  Size  Location     Type
 23005 ;;                  1    wreg      enum E363
 23006 ;; Registers used:
 23007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23008 ;; Tracked objects:
 23009 ;;		On entry : 0/0
 23010 ;;		On exit  : 0/0
 23011 ;;		Unchanged: 0/0
 23012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23013 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23017 ;;Total ram usage:        1 bytes
 23018 ;; Hardware stack levels used: 1
 23019 ;; Hardware stack levels required when called: 6
 23020 ;; This function calls:
 23021 ;;		_I2C1_SetBuffer
 23022 ;;		_I2C1_SetDataCompleteCallback
 23023 ;; This function is called by:
 23024 ;;		_I2C1_Read2ByteRegister
 23025 ;;		_I2C1_DO_TX
 23026 ;;		_I2C1_DO_RX
 23027 ;;		_I2C1_DO_TX_EMPTY
 23028 ;;		_I2C1_DO_ADDRESS_NACK
 23029 ;;		_I2C1_DO_RX_EMPTY
 23030 ;; This function uses a non-reentrant model
 23031 ;;
 23032                           
 23033     089E                     _rd2RegCompleteHandler@i2c1_master_example$F1208:	
 23034                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1208
 23035                           
 23036     089E                     l12468:	
 23037                           ;incstack = 0
 23038                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1208: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23039                           
 23040                           
 23041                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 23042     089E  3002               	movlw	2
 23043     089F  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23044     08A0  3000               	movlw	0
 23045     08A1  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23046     08A2  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1208@ptr,w
 23047     08A3  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23048     08A6                     l12470:
 23049                           
 23050                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23051     08A6  3000               	movlw	0
 23052     08A7  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23053     08A8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23054     08A9  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23055     08AA  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23056     08AD                     l12472:
 23057                           
 23058                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 23059     08AD  3002               	movlw	2
 23060     08AE                     l730:
 23061     08AE  0008               	return
 23062     08AF                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1208:
 23063                           
 23064                           	psect	text124
 23065     088D                     __ptext124:	
 23066 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1197 *****************
 23067 ;; Defined at:
 23068 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  ptr             1    8[COMMON] PTR void 
 23071 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23072 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23073 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23074 ;; Auto vars:     Size  Location     Type
 23075 ;;		None
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1    wreg      enum E363
 23078 ;; Registers used:
 23079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23080 ;; Tracked objects:
 23081 ;;		On entry : 0/0
 23082 ;;		On exit  : 0/0
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23089 ;;Total ram usage:        1 bytes
 23090 ;; Hardware stack levels used: 1
 23091 ;; Hardware stack levels required when called: 6
 23092 ;; This function calls:
 23093 ;;		_I2C1_SetBuffer
 23094 ;;		_I2C1_SetDataCompleteCallback
 23095 ;; This function is called by:
 23096 ;;		_I2C1_Read1ByteRegister
 23097 ;;		_I2C1_DO_TX
 23098 ;;		_I2C1_DO_RX
 23099 ;;		_I2C1_DO_TX_EMPTY
 23100 ;;		_I2C1_DO_ADDRESS_NACK
 23101 ;;		_I2C1_DO_RX_EMPTY
 23102 ;; This function uses a non-reentrant model
 23103 ;;
 23104                           
 23105     088D                     _rd1RegCompleteHandler@i2c1_master_example$F1197:	
 23106                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1197
 23107                           
 23108     088D                     l12460:	
 23109                           ;incstack = 0
 23110                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1197: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23111                           
 23112                           
 23113                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 23114     088D  3001               	movlw	1
 23115     088E  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23116     088F  3000               	movlw	0
 23117     0890  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23118     0891  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1197@ptr,w
 23119     0892  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23120     0895                     l12462:
 23121                           
 23122                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23123     0895  3000               	movlw	0
 23124     0896  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23125     0897  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23126     0898  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23127     0899  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23128     089C                     l12464:
 23129                           
 23130                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 23131     089C  3002               	movlw	2
 23132     089D                     l727:
 23133     089D  0008               	return
 23134     089E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1197:
 23135                           
 23136                           	psect	text125
 23137     09B4                     __ptext125:	
 23138 ;; *************** function _rdBlkRegCompleteHandler *****************
 23139 ;; Defined at:
 23140 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23141 ;; Parameters:    Size  Location     Type
 23142 ;;  p               1    8[COMMON] PTR void 
 23143 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23144 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23145 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23146 ;; Auto vars:     Size  Location     Type
 23147 ;;		None
 23148 ;; Return value:  Size  Location     Type
 23149 ;;                  1    wreg      enum E363
 23150 ;; Registers used:
 23151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23152 ;; Tracked objects:
 23153 ;;		On entry : 0/0
 23154 ;;		On exit  : 0/0
 23155 ;;		Unchanged: 0/0
 23156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23157 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23161 ;;Total ram usage:        1 bytes
 23162 ;; Hardware stack levels used: 1
 23163 ;; Hardware stack levels required when called: 6
 23164 ;; This function calls:
 23165 ;;		_I2C1_SetBuffer
 23166 ;;		_I2C1_SetDataCompleteCallback
 23167 ;; This function is called by:
 23168 ;;		_i2c_readDataBlock
 23169 ;;		_I2C1_DO_TX
 23170 ;;		_I2C1_DO_RX
 23171 ;;		_I2C1_DO_TX_EMPTY
 23172 ;;		_I2C1_DO_ADDRESS_NACK
 23173 ;;		_I2C1_DO_RX_EMPTY
 23174 ;; This function uses a non-reentrant model
 23175 ;;
 23176                           
 23177     09B4                     _rdBlkRegCompleteHandler:	
 23178                           ;psect for function _rdBlkRegCompleteHandler
 23179                           
 23180     09B4                     l12454:	
 23181                           ;incstack = 0
 23182                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 23183                           
 23184                           
 23185                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 23186     09B4  0878               	movf	rdBlkRegCompleteHandler@p,w
 23187     09B5  0086               	movwf	6
 23188     09B6  0187               	clrf	7
 23189     09B7  3F40               	moviw [0]fsr1
 23190     09B8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23191     09B9  3F41               	moviw [1]fsr1
 23192     09BA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23193     09BB  0878               	movf	rdBlkRegCompleteHandler@p,w
 23194     09BC  3E02               	addlw	2
 23195     09BD  0086               	movwf	6
 23196     09BE  0187               	clrf	7
 23197     09BF  0801               	movf	1,w
 23198     09C0  3197  27F2  3189   	fcall	_I2C1_SetBuffer
 23199                           
 23200                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23201     09C3  3000               	movlw	0
 23202     09C4  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23203     09C5  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23204     09C6  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23205     09C7  3197  2787  3189   	fcall	_I2C1_SetDataCompleteCallback
 23206     09CA                     l12456:
 23207                           
 23208                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 23209     09CA  3002               	movlw	2
 23210     09CB                     l558:
 23211     09CB  0008               	return
 23212     09CC                     __end_of_rdBlkRegCompleteHandler:
 23213                           
 23214                           	psect	text126
 23215     087C                     __ptext126:	
 23216 ;; *************** function _wr2RegCompleteHandler *****************
 23217 ;; Defined at:
 23218 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23219 ;; Parameters:    Size  Location     Type
 23220 ;;  p               1    8[COMMON] PTR void 
 23221 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23222 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23223 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23224 ;; Auto vars:     Size  Location     Type
 23225 ;;		None
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1    wreg      enum E363
 23228 ;; Registers used:
 23229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23239 ;;Total ram usage:        1 bytes
 23240 ;; Hardware stack levels used: 1
 23241 ;; Hardware stack levels required when called: 6
 23242 ;; This function calls:
 23243 ;;		_I2C1_SetBuffer
 23244 ;;		_I2C1_SetDataCompleteCallback
 23245 ;; This function is called by:
 23246 ;;		_i2c_write2ByteRegister
 23247 ;;		_I2C1_DO_TX
 23248 ;;		_I2C1_DO_RX
 23249 ;;		_I2C1_DO_TX_EMPTY
 23250 ;;		_I2C1_DO_ADDRESS_NACK
 23251 ;;		_I2C1_DO_RX_EMPTY
 23252 ;; This function uses a non-reentrant model
 23253 ;;
 23254                           
 23255     087C                     _wr2RegCompleteHandler:	
 23256                           ;psect for function _wr2RegCompleteHandler
 23257                           
 23258     087C                     l12446:	
 23259                           ;incstack = 0
 23260                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23261                           
 23262                           
 23263                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 23264     087C  3002               	movlw	2
 23265     087D  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23266     087E  3000               	movlw	0
 23267     087F  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23268     0880  0878               	movf	wr2RegCompleteHandler@p,w
 23269     0881  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23270     0884                     l12448:
 23271                           
 23272                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23273     0884  3000               	movlw	0
 23274     0885  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23275     0886  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23276     0887  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23277     0888  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23278     088B                     l12450:
 23279                           
 23280                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 23281     088B  3004               	movlw	4
 23282     088C                     l546:
 23283     088C  0008               	return
 23284     088D                     __end_of_wr2RegCompleteHandler:
 23285                           
 23286                           	psect	text127
 23287     086B                     __ptext127:	
 23288 ;; *************** function _rd2RegCompleteHandler *****************
 23289 ;; Defined at:
 23290 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23291 ;; Parameters:    Size  Location     Type
 23292 ;;  p               1    8[COMMON] PTR void 
 23293 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23294 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23295 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23296 ;; Auto vars:     Size  Location     Type
 23297 ;;		None
 23298 ;; Return value:  Size  Location     Type
 23299 ;;                  1    wreg      enum E363
 23300 ;; Registers used:
 23301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23302 ;; Tracked objects:
 23303 ;;		On entry : 0/0
 23304 ;;		On exit  : 0/0
 23305 ;;		Unchanged: 0/0
 23306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23311 ;;Total ram usage:        1 bytes
 23312 ;; Hardware stack levels used: 1
 23313 ;; Hardware stack levels required when called: 6
 23314 ;; This function calls:
 23315 ;;		_I2C1_SetBuffer
 23316 ;;		_I2C1_SetDataCompleteCallback
 23317 ;; This function is called by:
 23318 ;;		_i2c_read2ByteRegister
 23319 ;;		_I2C1_DO_TX
 23320 ;;		_I2C1_DO_RX
 23321 ;;		_I2C1_DO_TX_EMPTY
 23322 ;;		_I2C1_DO_ADDRESS_NACK
 23323 ;;		_I2C1_DO_RX_EMPTY
 23324 ;; This function uses a non-reentrant model
 23325 ;;
 23326                           
 23327     086B                     _rd2RegCompleteHandler:	
 23328                           ;psect for function _rd2RegCompleteHandler
 23329                           
 23330     086B                     l12438:	
 23331                           ;incstack = 0
 23332                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23333                           
 23334                           
 23335                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 23336     086B  3002               	movlw	2
 23337     086C  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23338     086D  3000               	movlw	0
 23339     086E  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23340     086F  0878               	movf	rd2RegCompleteHandler@p,w
 23341     0870  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23342     0873                     l12440:
 23343                           
 23344                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23345     0873  3000               	movlw	0
 23346     0874  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23347     0875  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23348     0876  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23349     0877  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23350     087A                     l12442:
 23351                           
 23352                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 23353     087A  3002               	movlw	2
 23354     087B                     l534:
 23355     087B  0008               	return
 23356     087C                     __end_of_rd2RegCompleteHandler:
 23357                           
 23358                           	psect	text128
 23359     085A                     __ptext128:	
 23360 ;; *************** function _rd1RegCompleteHandler *****************
 23361 ;; Defined at:
 23362 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;  p               1    8[COMMON] PTR void 
 23365 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23366 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23367 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;		None
 23370 ;; Return value:  Size  Location     Type
 23371 ;;                  1    wreg      enum E363
 23372 ;; Registers used:
 23373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23374 ;; Tracked objects:
 23375 ;;		On entry : 0/0
 23376 ;;		On exit  : 0/0
 23377 ;;		Unchanged: 0/0
 23378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23379 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23383 ;;Total ram usage:        1 bytes
 23384 ;; Hardware stack levels used: 1
 23385 ;; Hardware stack levels required when called: 6
 23386 ;; This function calls:
 23387 ;;		_I2C1_SetBuffer
 23388 ;;		_I2C1_SetDataCompleteCallback
 23389 ;; This function is called by:
 23390 ;;		_i2c_read1ByteRegister
 23391 ;;		_I2C1_DO_TX
 23392 ;;		_I2C1_DO_RX
 23393 ;;		_I2C1_DO_TX_EMPTY
 23394 ;;		_I2C1_DO_ADDRESS_NACK
 23395 ;;		_I2C1_DO_RX_EMPTY
 23396 ;; This function uses a non-reentrant model
 23397 ;;
 23398                           
 23399     085A                     _rd1RegCompleteHandler:	
 23400                           ;psect for function _rd1RegCompleteHandler
 23401                           
 23402     085A                     l12430:	
 23403                           ;incstack = 0
 23404                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23405                           
 23406                           
 23407                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 23408     085A  3001               	movlw	1
 23409     085B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23410     085C  3000               	movlw	0
 23411     085D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23412     085E  0878               	movf	rd1RegCompleteHandler@p,w
 23413     085F  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23414     0862                     l12432:
 23415                           
 23416                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 23417     0862  3000               	movlw	0
 23418     0863  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23419     0864  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23420     0865  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23421     0866  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23422     0869                     l12434:
 23423                           
 23424                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 23425     0869  3002               	movlw	2
 23426     086A                     l519:
 23427     086A  0008               	return
 23428     086B                     __end_of_rd1RegCompleteHandler:
 23429                           
 23430                           	psect	text129
 23431     0849                     __ptext129:	
 23432 ;; *************** function _wr1RegCompleteHandler *****************
 23433 ;; Defined at:
 23434 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23435 ;; Parameters:    Size  Location     Type
 23436 ;;  p               1    8[COMMON] PTR void 
 23437 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23438 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23439 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23440 ;; Auto vars:     Size  Location     Type
 23441 ;;		None
 23442 ;; Return value:  Size  Location     Type
 23443 ;;                  1    wreg      enum E363
 23444 ;; Registers used:
 23445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23446 ;; Tracked objects:
 23447 ;;		On entry : 0/0
 23448 ;;		On exit  : 0/0
 23449 ;;		Unchanged: 0/0
 23450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23451 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23455 ;;Total ram usage:        1 bytes
 23456 ;; Hardware stack levels used: 1
 23457 ;; Hardware stack levels required when called: 6
 23458 ;; This function calls:
 23459 ;;		_I2C1_SetBuffer
 23460 ;;		_I2C1_SetDataCompleteCallback
 23461 ;; This function is called by:
 23462 ;;		_i2c_write1ByteRegister
 23463 ;;		_I2C1_DO_TX
 23464 ;;		_I2C1_DO_RX
 23465 ;;		_I2C1_DO_TX_EMPTY
 23466 ;;		_I2C1_DO_ADDRESS_NACK
 23467 ;;		_I2C1_DO_RX_EMPTY
 23468 ;; This function uses a non-reentrant model
 23469 ;;
 23470                           
 23471     0849                     _wr1RegCompleteHandler:	
 23472                           ;psect for function _wr1RegCompleteHandler
 23473                           
 23474     0849                     l12422:	
 23475                           ;incstack = 0
 23476                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23477                           
 23478                           
 23479                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 23480     0849  3001               	movlw	1
 23481     084A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23482     084B  3000               	movlw	0
 23483     084C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23484     084D  0878               	movf	wr1RegCompleteHandler@p,w
 23485     084E  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23486     0851                     l12424:
 23487                           
 23488                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 23489     0851  3000               	movlw	0
 23490     0852  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23491     0853  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23492     0854  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23493     0855  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23494     0858                     l12426:
 23495                           
 23496                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 23497     0858  3004               	movlw	4
 23498     0859                     l498:
 23499     0859  0008               	return
 23500     085A                     __end_of_wr1RegCompleteHandler:
 23501                           
 23502                           	psect	text130
 23503     0838                     __ptext130:	
 23504 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1220 *****************
 23505 ;; Defined at:
 23506 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;  ptr             1    8[COMMON] PTR void 
 23509 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23510 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23511 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;		None
 23514 ;; Return value:  Size  Location     Type
 23515 ;;                  1    wreg      enum E363
 23516 ;; Registers used:
 23517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23518 ;; Tracked objects:
 23519 ;;		On entry : 0/0
 23520 ;;		On exit  : 0/0
 23521 ;;		Unchanged: 0/0
 23522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23527 ;;Total ram usage:        1 bytes
 23528 ;; Hardware stack levels used: 1
 23529 ;; Hardware stack levels required when called: 6
 23530 ;; This function calls:
 23531 ;;		_I2C1_SetBuffer
 23532 ;;		_I2C1_SetDataCompleteCallback
 23533 ;; This function is called by:
 23534 ;;		_I2C1_Write2ByteRegister
 23535 ;;		_I2C1_DO_TX
 23536 ;;		_I2C1_DO_RX
 23537 ;;		_I2C1_DO_TX_EMPTY
 23538 ;;		_I2C1_DO_ADDRESS_NACK
 23539 ;;		_I2C1_DO_RX_EMPTY
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543     0838                     _wr2RegCompleteHandler@i2c1_master_example$F1220:	
 23544                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1220
 23545                           
 23546     0838                     l12484:	
 23547                           ;incstack = 0
 23548                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1220: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23549                           
 23550                           
 23551                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 23552     0838  3002               	movlw	2
 23553     0839  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23554     083A  3000               	movlw	0
 23555     083B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23556     083C  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1220@ptr,w
 23557     083D  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23558     0840                     l12486:
 23559                           
 23560                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23561     0840  3000               	movlw	0
 23562     0841  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23563     0842  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23564     0843  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23565     0844  3197  2787  3188   	fcall	_I2C1_SetDataCompleteCallback
 23566     0847                     l12488:
 23567                           
 23568                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 23569     0847  3004               	movlw	4
 23570     0848                     l736:
 23571     0848  0008               	return
 23572     0849                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1220:
 23573                           
 23574                           	psect	text131
 23575     1787                     __ptext131:	
 23576 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 23577 ;; Defined at:
 23578 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 23579 ;; Parameters:    Size  Location     Type
 23580 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 23581 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1231(1), wr2RegCompleteHandler@i2c1_master_example$F1220(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1214(1), rd2RegCompleteHandler@i2c1_master_example$F1208(1), 
 23582 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1197(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23583 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23584 ;;  ptr             1    7[COMMON] PTR void 
 23585 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23586 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23587 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23588 ;; Auto vars:     Size  Location     Type
 23589 ;;		None
 23590 ;; Return value:  Size  Location     Type
 23591 ;;                  1    wreg      void 
 23592 ;; Registers used:
 23593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23594 ;; Tracked objects:
 23595 ;;		On entry : 0/0
 23596 ;;		On exit  : 0/0
 23597 ;;		Unchanged: 0/0
 23598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23599 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23602 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23603 ;;Total ram usage:        3 bytes
 23604 ;; Hardware stack levels used: 1
 23605 ;; Hardware stack levels required when called: 5
 23606 ;; This function calls:
 23607 ;;		_I2C1_SetCallback
 23608 ;; This function is called by:
 23609 ;;		_wr1RegCompleteHandler
 23610 ;;		_rd1RegCompleteHandler
 23611 ;;		_i2c_read1ByteRegister
 23612 ;;		_rd2RegCompleteHandler
 23613 ;;		_i2c_read2ByteRegister
 23614 ;;		_wr2RegCompleteHandler
 23615 ;;		_rdBlkRegCompleteHandler
 23616 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 23617 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 23618 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 23619 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 23620 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 23621 ;;		_i2c_write1ByteRegister
 23622 ;;		_i2c_write2ByteRegister
 23623 ;;		_i2c_readDataBlock
 23624 ;;		_I2C1_Read1ByteRegister
 23625 ;;		_I2C1_Read2ByteRegister
 23626 ;;		_I2C1_Write1ByteRegister
 23627 ;;		_I2C1_Write2ByteRegister
 23628 ;;		_I2C1_ReadDataBlock
 23629 ;; This function uses a non-reentrant model
 23630 ;;
 23631                           
 23632     1787                     _I2C1_SetDataCompleteCallback:	
 23633                           ;psect for function _I2C1_SetDataCompleteCallback
 23634                           
 23635     1787                     l12414:	
 23636                           ;incstack = 0
 23637                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 23638                           
 23639                           
 23640                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 23641     1787  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 23642     1788  00F2               	movwf	I2C1_SetCallback@cb+1
 23643     1789  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 23644     178A  00F1               	movwf	I2C1_SetCallback@cb
 23645     178B  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 23646     178C  00F3               	movwf	I2C1_SetCallback@ptr
 23647     178D  3000               	movlw	0
 23648     178E  318B  2341  3197   	fcall	_I2C1_SetCallback
 23649     1791                     l1769:
 23650     1791  0008               	return
 23651     1792                     __end_of_I2C1_SetDataCompleteCallback:
 23652                           
 23653                           	psect	text132
 23654     0B41                     __ptext132:	
 23655 ;; *************** function _I2C1_SetCallback *****************
 23656 ;; Defined at:
 23657 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 23658 ;; Parameters:    Size  Location     Type
 23659 ;;  idx             1    wreg     enum E12583
 23660 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 23661 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1231(1), wr2RegCompleteHandler@i2c1_master_example$F1220(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1214(1), rd2RegCompleteHandler@i2c1_master_example$F1208(1), 
 23662 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1197(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23663 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23664 ;;  ptr             1    3[COMMON] PTR void 
 23665 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23666 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23667 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23668 ;; Auto vars:     Size  Location     Type
 23669 ;;  idx             1    4[COMMON] enum E12583
 23670 ;; Return value:  Size  Location     Type
 23671 ;;                  1    wreg      void 
 23672 ;; Registers used:
 23673 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23674 ;; Tracked objects:
 23675 ;;		On entry : 0/0
 23676 ;;		On exit  : 0/0
 23677 ;;		Unchanged: 0/0
 23678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23679 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23683 ;;Total ram usage:        4 bytes
 23684 ;; Hardware stack levels used: 1
 23685 ;; Hardware stack levels required when called: 4
 23686 ;; This function calls:
 23687 ;;		Nothing
 23688 ;; This function is called by:
 23689 ;;		_I2C1_SetDataCompleteCallback
 23690 ;;		_I2C1_SetAddressNackCallback
 23691 ;;		_I2C1_SetWriteCollisionCallback
 23692 ;;		_I2C1_SetDataNackCallback
 23693 ;;		_I2C1_SetTimeoutCallback
 23694 ;; This function uses a non-reentrant model
 23695 ;;
 23696                           
 23697     0B41                     _I2C1_SetCallback:	
 23698                           ;psect for function _I2C1_SetCallback
 23699                           
 23700                           
 23701                           ;incstack = 0
 23702                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 23703                           ;I2C1_SetCallback@idx stored from wreg
 23704     0B41  00F4               	movwf	I2C1_SetCallback@idx
 23705     0B42                     l12402:
 23706                           
 23707                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 23708     0B42  0871               	movf	I2C1_SetCallback@cb,w
 23709     0B43  0472               	iorwf	I2C1_SetCallback@cb+1,w
 23710     0B44  1903               	btfsc	3,2
 23711     0B45  2B47               	goto	u9591
 23712     0B46  2B48               	goto	u9590
 23713     0B47                     u9591:
 23714     0B47  2B57               	goto	l12406
 23715     0B48                     u9590:
 23716     0B48                     l12404:
 23717                           
 23718                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 23719     0B48  3574               	lslf	I2C1_SetCallback@idx,w
 23720     0B49  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 23721     0B4A  0086               	movwf	6
 23722     0B4B  0187               	clrf	7
 23723     0B4C  0871               	movf	I2C1_SetCallback@cb,w
 23724     0B4D  3FC0               	movwi [0]fsr1
 23725     0B4E  0872               	movf	I2C1_SetCallback@cb+1,w
 23726     0B4F  3FC1               	movwi [1]fsr1
 23727                           
 23728                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 23729     0B50  0874               	movf	I2C1_SetCallback@idx,w
 23730     0B51  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 23731     0B52  0086               	movwf	6
 23732     0B53  0187               	clrf	7
 23733     0B54  0873               	movf	I2C1_SetCallback@ptr,w
 23734     0B55  0081               	movwf	1
 23735                           
 23736                           ;mcc_generated_files/i2c1_master.c: 304:     }
 23737     0B56  2B64               	goto	l1786
 23738     0B57                     l12406:
 23739                           
 23740                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 23741     0B57  3574               	lslf	I2C1_SetCallback@idx,w
 23742     0B58  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 23743     0B59  0086               	movwf	6
 23744     0B5A  0187               	clrf	7
 23745     0B5B  3027               	movlw	low _I2C1_CallbackReturnStop
 23746     0B5C  3FC0               	movwi [0]fsr1
 23747     0B5D  3016               	movlw	high _I2C1_CallbackReturnStop
 23748     0B5E  3FC1               	movwi [1]fsr1
 23749                           
 23750                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 23751     0B5F  0874               	movf	I2C1_SetCallback@idx,w
 23752     0B60  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 23753     0B61  0086               	movwf	6
 23754     0B62  0187               	clrf	7
 23755     0B63  0181               	clrf	1
 23756     0B64                     l1786:
 23757     0B64  0008               	return
 23758     0B65                     __end_of_I2C1_SetCallback:
 23759                           
 23760                           	psect	text133
 23761     17F2                     __ptext133:	
 23762 ;; *************** function _I2C1_SetBuffer *****************
 23763 ;; Defined at:
 23764 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 23765 ;; Parameters:    Size  Location     Type
 23766 ;;  buffer          1    wreg     PTR void 
 23767 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 23768 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 23769 ;;		 -> readRegister@regVal(1), readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4
      +), 
 23770 ;;		 -> bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@re
      +g(1), 
 23771 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read
      +1ByteRegister@reg(1), 
 23772 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), 
 23773 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 23774 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 23775 ;;		 -> NULL(0), 
 23776 ;;  bufferSize      2    1[COMMON] unsigned int 
 23777 ;; Auto vars:     Size  Location     Type
 23778 ;;  buffer          1    3[COMMON] PTR void 
 23779 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 23780 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 23781 ;;		 -> readRegister@regVal(1), readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4
      +), 
 23782 ;;		 -> bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@re
      +g(1), 
 23783 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read
      +1ByteRegister@reg(1), 
 23784 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), 
 23785 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 23786 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 23787 ;;		 -> NULL(0), 
 23788 ;; Return value:  Size  Location     Type
 23789 ;;                  1    wreg      void 
 23790 ;; Registers used:
 23791 ;;		wreg
 23792 ;; Tracked objects:
 23793 ;;		On entry : 0/0
 23794 ;;		On exit  : 0/0
 23795 ;;		Unchanged: 0/0
 23796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23801 ;;Total ram usage:        3 bytes
 23802 ;; Hardware stack levels used: 1
 23803 ;; Hardware stack levels required when called: 4
 23804 ;; This function calls:
 23805 ;;		Nothing
 23806 ;; This function is called by:
 23807 ;;		_wr1RegCompleteHandler
 23808 ;;		_rd1RegCompleteHandler
 23809 ;;		_i2c_read1ByteRegister
 23810 ;;		_rd2RegCompleteHandler
 23811 ;;		_i2c_read2ByteRegister
 23812 ;;		_wr2RegCompleteHandler
 23813 ;;		_rdBlkRegCompleteHandler
 23814 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1197
 23815 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1208
 23816 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1214
 23817 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1220
 23818 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1231
 23819 ;;		_i2c_write1ByteRegister
 23820 ;;		_i2c_writeNBytes
 23821 ;;		_i2c_write2ByteRegister
 23822 ;;		_i2c_readDataBlock
 23823 ;;		_i2c_readNBytes
 23824 ;;		_I2C1_Read1ByteRegister
 23825 ;;		_I2C1_Read2ByteRegister
 23826 ;;		_I2C1_Write1ByteRegister
 23827 ;;		_I2C1_Write2ByteRegister
 23828 ;;		_I2C1_WriteNBytes
 23829 ;;		_I2C1_ReadNBytes
 23830 ;;		_I2C1_ReadDataBlock
 23831 ;; This function uses a non-reentrant model
 23832 ;;
 23833                           
 23834     17F2                     _I2C1_SetBuffer:	
 23835                           ;psect for function _I2C1_SetBuffer
 23836                           
 23837                           
 23838                           ;incstack = 0
 23839                           ; Regs used in _I2C1_SetBuffer: [wreg]
 23840                           ;I2C1_SetBuffer@buffer stored from wreg
 23841     17F2  00F3               	movwf	I2C1_SetBuffer@buffer
 23842     17F3                     l12408:
 23843                           
 23844                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 23845     17F3  0141               	movlb	1	; select bank1
 23846     17F4  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 23847     17F5  2FF7               	goto	u9601
 23848     17F6  2FF8               	goto	u9600
 23849     17F7                     u9601:
 23850     17F7  2FFF               	goto	l1766
 23851     17F8                     u9600:
 23852     17F8                     l12410:
 23853                           
 23854                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 23855     17F8  0873               	movf	I2C1_SetBuffer@buffer,w
 23856     17F9  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 23857                           
 23858                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 23859     17FA  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 23860     17FB  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 23861     17FC  0871               	movf	I2C1_SetBuffer@bufferSize,w
 23862     17FD  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 23863     17FE                     l12412:
 23864                           
 23865                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 23866     17FE  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 23867     17FF                     l1766:
 23868     17FF  0008               	return
 23869     1800                     __end_of_I2C1_SetBuffer:
 23870                           
 23871                           	psect	text134
 23872     163A                     __ptext134:	
 23873 ;; *************** function _I2C1_MasterStop *****************
 23874 ;; Defined at:
 23875 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 23876 ;; Parameters:    Size  Location     Type
 23877 ;;		None
 23878 ;; Auto vars:     Size  Location     Type
 23879 ;;		None
 23880 ;; Return value:  Size  Location     Type
 23881 ;;                  1    wreg      void 
 23882 ;; Registers used:
 23883 ;;		None
 23884 ;; Tracked objects:
 23885 ;;		On entry : 0/0
 23886 ;;		On exit  : 0/0
 23887 ;;		Unchanged: 0/0
 23888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23893 ;;Total ram usage:        0 bytes
 23894 ;; Hardware stack levels used: 1
 23895 ;; Hardware stack levels required when called: 4
 23896 ;; This function calls:
 23897 ;;		Nothing
 23898 ;; This function is called by:
 23899 ;;		_I2C1_DO_SEND_STOP
 23900 ;; This function uses a non-reentrant model
 23901 ;;
 23902                           
 23903     163A                     _I2C1_MasterStop:	
 23904                           ;psect for function _I2C1_MasterStop
 23905                           
 23906     163A                     l12418:	
 23907                           ;incstack = 0
 23908                           ; Regs used in _I2C1_MasterStop: []
 23909                           
 23910                           
 23911                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 23912     163A  0143               	movlb	3	; select bank3
 23913     163B  1511               	bsf	17,2	;volatile
 23914     163C                     l1932:
 23915     163C  0008               	return
 23916     163D                     __end_of_I2C1_MasterStop:
 23917                           
 23918                           	psect	text135
 23919     1637                     __ptext135:	
 23920 ;; *************** function _I2C1_MasterEnableRestart *****************
 23921 ;; Defined at:
 23922 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 23923 ;; Parameters:    Size  Location     Type
 23924 ;;		None
 23925 ;; Auto vars:     Size  Location     Type
 23926 ;;		None
 23927 ;; Return value:  Size  Location     Type
 23928 ;;                  1    wreg      void 
 23929 ;; Registers used:
 23930 ;;		None
 23931 ;; Tracked objects:
 23932 ;;		On entry : 0/0
 23933 ;;		On exit  : 0/0
 23934 ;;		Unchanged: 0/0
 23935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23940 ;;Total ram usage:        0 bytes
 23941 ;; Hardware stack levels used: 1
 23942 ;; Hardware stack levels required when called: 4
 23943 ;; This function calls:
 23944 ;;		Nothing
 23945 ;; This function is called by:
 23946 ;;		_I2C1_DO_SEND_RESTART_READ
 23947 ;;		_I2C1_DO_SEND_RESTART_WRITE
 23948 ;;		_I2C1_DO_SEND_RESTART
 23949 ;;		_I2C1_DO_RX_EMPTY
 23950 ;; This function uses a non-reentrant model
 23951 ;;
 23952                           
 23953     1637                     _I2C1_MasterEnableRestart:	
 23954                           ;psect for function _I2C1_MasterEnableRestart
 23955                           
 23956     1637                     l12416:	
 23957                           ;incstack = 0
 23958                           ; Regs used in _I2C1_MasterEnableRestart: []
 23959                           
 23960                           
 23961                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 23962     1637  0143               	movlb	3	; select bank3
 23963     1638  1491               	bsf	17,1	;volatile
 23964     1639                     l1920:
 23965     1639  0008               	return
 23966     163A                     __end_of_I2C1_MasterEnableRestart:
 23967                           
 23968                           	psect	text136
 23969     1634                     __ptext136:	
 23970 ;; *************** function _I2C1_MasterStart *****************
 23971 ;; Defined at:
 23972 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 23973 ;; Parameters:    Size  Location     Type
 23974 ;;		None
 23975 ;; Auto vars:     Size  Location     Type
 23976 ;;		None
 23977 ;; Return value:  Size  Location     Type
 23978 ;;                  1    wreg      void 
 23979 ;; Registers used:
 23980 ;;		None
 23981 ;; Tracked objects:
 23982 ;;		On entry : 0/0
 23983 ;;		On exit  : 0/0
 23984 ;;		Unchanged: 0/0
 23985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23990 ;;Total ram usage:        0 bytes
 23991 ;; Hardware stack levels used: 1
 23992 ;; Hardware stack levels required when called: 4
 23993 ;; This function calls:
 23994 ;;		Nothing
 23995 ;; This function is called by:
 23996 ;;		_I2C1_MasterOperation
 23997 ;; This function uses a non-reentrant model
 23998 ;;
 23999                           
 24000     1634                     _I2C1_MasterStart:	
 24001                           ;psect for function _I2C1_MasterStart
 24002                           
 24003     1634                     l12820:	
 24004                           ;incstack = 0
 24005                           ; Regs used in _I2C1_MasterStart: []
 24006                           
 24007                           
 24008                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 24009     1634  0143               	movlb	3	; select bank3
 24010     1635  1411               	bsf	17,0	;volatile
 24011     1636                     l1929:
 24012     1636  0008               	return
 24013     1637                     __end_of_I2C1_MasterStart:
 24014                           
 24015                           	psect	text137
 24016     099C                     __ptext137:	
 24017 ;; *************** function _I2C1_Close *****************
 24018 ;; Defined at:
 24019 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;		None
 24022 ;; Auto vars:     Size  Location     Type
 24023 ;;  returnValue     1    1[COMMON] enum E358
 24024 ;; Return value:  Size  Location     Type
 24025 ;;                  1    wreg      enum E358
 24026 ;; Registers used:
 24027 ;;		wreg, status,2, status,0, pclath, cstack
 24028 ;; Tracked objects:
 24029 ;;		On entry : 0/0
 24030 ;;		On exit  : 0/0
 24031 ;;		Unchanged: 0/0
 24032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24037 ;;Total ram usage:        1 bytes
 24038 ;; Hardware stack levels used: 1
 24039 ;; Hardware stack levels required when called: 5
 24040 ;; This function calls:
 24041 ;;		_I2C1_MasterClearIrq
 24042 ;;		_I2C1_MasterClose
 24043 ;;		_I2C1_MasterDisableIrq
 24044 ;; This function is called by:
 24045 ;;		_i2c_read1ByteRegister
 24046 ;;		_i2c_read2ByteRegister
 24047 ;;		_i2c_write1ByteRegister
 24048 ;;		_i2c_writeNBytes
 24049 ;;		_i2c_write2ByteRegister
 24050 ;;		_i2c_readDataBlock
 24051 ;;		_i2c_readNBytes
 24052 ;;		_I2C1_Read1ByteRegister
 24053 ;;		_I2C1_Read2ByteRegister
 24054 ;;		_I2C1_Write1ByteRegister
 24055 ;;		_I2C1_Write2ByteRegister
 24056 ;;		_I2C1_WriteNBytes
 24057 ;;		_I2C1_ReadNBytes
 24058 ;;		_I2C1_ReadDataBlock
 24059 ;; This function uses a non-reentrant model
 24060 ;;
 24061                           
 24062     099C                     _I2C1_Close:	
 24063                           ;psect for function _I2C1_Close
 24064                           
 24065     099C                     l12924:	
 24066                           ;incstack = 0
 24067                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 24068                           
 24069                           
 24070                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 24071     099C  01F1               	clrf	I2C1_Close@returnValue
 24072     099D  0AF1               	incf	I2C1_Close@returnValue,f
 24073                           
 24074                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 24075     099E  0141               	movlb	1	; select bank1
 24076     099F  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 24077     09A0  29A2               	goto	u9831
 24078     09A1  29A3               	goto	u9830
 24079     09A2                     u9831:
 24080     09A2  29B2               	goto	l12938
 24081     09A3                     u9830:
 24082     09A3                     l12926:
 24083                           
 24084                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 24085     09A3  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 24086     09A4                     l12928:
 24087                           
 24088                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 24089     09A4  30FF               	movlw	255
 24090     09A5  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 24091     09A6                     l12930:
 24092                           
 24093                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 24094     09A6  3196  262B  3189   	fcall	_I2C1_MasterClearIrq
 24095     09A9                     l12932:
 24096                           
 24097                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 24098     09A9  3196  2631  3189   	fcall	_I2C1_MasterDisableIrq
 24099     09AC                     l12934:
 24100                           
 24101                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 24102     09AC  3196  262E  3189   	fcall	_I2C1_MasterClose
 24103     09AF                     l12936:
 24104                           
 24105                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 24106     09AF  0141               	movlb	1	; select bank1
 24107     09B0  083B               	movf	(_I2C1_Status^(0+128)+27),w
 24108     09B1  00F1               	movwf	I2C1_Close@returnValue
 24109     09B2                     l12938:
 24110                           
 24111                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 24112     09B2  0871               	movf	I2C1_Close@returnValue,w
 24113     09B3                     l1747:
 24114     09B3  0008               	return
 24115     09B4                     __end_of_I2C1_Close:
 24116                           
 24117                           	psect	text138
 24118     1631                     __ptext138:	
 24119 ;; *************** function _I2C1_MasterDisableIrq *****************
 24120 ;; Defined at:
 24121 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;		None
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;		None
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1    wreg      void 
 24128 ;; Registers used:
 24129 ;;		None
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24139 ;;Total ram usage:        0 bytes
 24140 ;; Hardware stack levels used: 1
 24141 ;; Hardware stack levels required when called: 4
 24142 ;; This function calls:
 24143 ;;		Nothing
 24144 ;; This function is called by:
 24145 ;;		_I2C1_Close
 24146 ;;		_I2C1_SetTimeOut
 24147 ;; This function uses a non-reentrant model
 24148 ;;
 24149                           
 24150     1631                     _I2C1_MasterDisableIrq:	
 24151                           ;psect for function _I2C1_MasterDisableIrq
 24152                           
 24153     1631                     l12852:	
 24154                           ;incstack = 0
 24155                           ; Regs used in _I2C1_MasterDisableIrq: []
 24156                           
 24157                           
 24158                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 24159     1631  014E               	movlb	14	; select bank14
 24160     1632  1019               	bcf	25,0	;volatile
 24161     1633                     l1956:
 24162     1633  0008               	return
 24163     1634                     __end_of_I2C1_MasterDisableIrq:
 24164                           
 24165                           	psect	text139
 24166     162E                     __ptext139:	
 24167 ;; *************** function _I2C1_MasterClose *****************
 24168 ;; Defined at:
 24169 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 24170 ;; Parameters:    Size  Location     Type
 24171 ;;		None
 24172 ;; Auto vars:     Size  Location     Type
 24173 ;;		None
 24174 ;; Return value:  Size  Location     Type
 24175 ;;                  1    wreg      void 
 24176 ;; Registers used:
 24177 ;;		None
 24178 ;; Tracked objects:
 24179 ;;		On entry : 0/0
 24180 ;;		On exit  : 0/0
 24181 ;;		Unchanged: 0/0
 24182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24187 ;;Total ram usage:        0 bytes
 24188 ;; Hardware stack levels used: 1
 24189 ;; Hardware stack levels required when called: 4
 24190 ;; This function calls:
 24191 ;;		Nothing
 24192 ;; This function is called by:
 24193 ;;		_I2C1_Close
 24194 ;; This function uses a non-reentrant model
 24195 ;;
 24196                           
 24197     162E                     _I2C1_MasterClose:	
 24198                           ;psect for function _I2C1_MasterClose
 24199                           
 24200     162E                     l12854:	
 24201                           ;incstack = 0
 24202                           ; Regs used in _I2C1_MasterClose: []
 24203                           
 24204                           
 24205                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 24206     162E  0143               	movlb	3	; select bank3
 24207     162F  1290               	bcf	16,5	;volatile
 24208     1630                     l1911:
 24209     1630  0008               	return
 24210     1631                     __end_of_I2C1_MasterClose:
 24211                           
 24212                           	psect	text140
 24213     162B                     __ptext140:	
 24214 ;; *************** function _I2C1_MasterClearIrq *****************
 24215 ;; Defined at:
 24216 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;		None
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;		None
 24221 ;; Return value:  Size  Location     Type
 24222 ;;                  1    wreg      void 
 24223 ;; Registers used:
 24224 ;;		None
 24225 ;; Tracked objects:
 24226 ;;		On entry : 0/0
 24227 ;;		On exit  : 0/0
 24228 ;;		Unchanged: 0/0
 24229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24234 ;;Total ram usage:        0 bytes
 24235 ;; Hardware stack levels used: 1
 24236 ;; Hardware stack levels required when called: 4
 24237 ;; This function calls:
 24238 ;;		Nothing
 24239 ;; This function is called by:
 24240 ;;		_I2C1_Open
 24241 ;;		_I2C1_Close
 24242 ;;		_I2C1_MasterFsm
 24243 ;; This function uses a non-reentrant model
 24244 ;;
 24245                           
 24246     162B                     _I2C1_MasterClearIrq:	
 24247                           ;psect for function _I2C1_MasterClearIrq
 24248                           
 24249     162B                     l12558:	
 24250                           ;incstack = 0
 24251                           ; Regs used in _I2C1_MasterClearIrq: []
 24252                           
 24253                           
 24254                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 24255     162B  014E               	movlb	14	; select bank14
 24256     162C  100F               	bcf	15,0	;volatile
 24257     162D                     l1959:
 24258     162D  0008               	return
 24259     162E                     __end_of_I2C1_MasterClearIrq:
 24260                           
 24261                           	psect	intentry
 24262     0004                     __pintentry:	
 24263 ;; *************** function _INTERRUPT_InterruptManager *****************
 24264 ;; Defined at:
 24265 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24266 ;; Parameters:    Size  Location     Type
 24267 ;;		None
 24268 ;; Auto vars:     Size  Location     Type
 24269 ;;		None
 24270 ;; Return value:  Size  Location     Type
 24271 ;;                  1    wreg      void 
 24272 ;; Registers used:
 24273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24274 ;; Tracked objects:
 24275 ;;		On entry : 0/0
 24276 ;;		On exit  : 0/0
 24277 ;;		Unchanged: 0/0
 24278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24283 ;;Total ram usage:        0 bytes
 24284 ;; Hardware stack levels used: 1
 24285 ;; Hardware stack levels required when called: 3
 24286 ;; This function calls:
 24287 ;;		NULL
 24288 ;;		_EUSART1_Receive_ISR
 24289 ;;		_EUSART1_Transmit_ISR
 24290 ;;		_EUSART2_Receive_ISR
 24291 ;;		_EUSART2_Transmit_ISR
 24292 ;;		_PIN_MANAGER_IOC
 24293 ;; This function is called by:
 24294 ;;		Interrupt level 1
 24295 ;; This function uses a non-reentrant model
 24296 ;;
 24297                           
 24298     0004                     _INTERRUPT_InterruptManager:
 24299                           
 24300                           ;incstack = 0
 24301 ;; hardware stack exceeded
 24302     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 24303                           
 24304                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 24305     0005  3180               	pagesel	$
 24306     0006                     i1l14264:
 24307                           
 24308                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 24309     0006  014E               	movlb	14	; select bank14
 24310     0007  1E16               	btfss	22,4	;volatile
 24311     0008  280A               	goto	u1122_21
 24312     0009  280B               	goto	u1122_20
 24313     000A                     u1122_21:
 24314     000A  2813               	goto	i1l1292
 24315     000B                     u1122_20:
 24316     000B                     i1l14266:
 24317     000B  1E0C               	btfss	12,4	;volatile
 24318     000C  280E               	goto	u1123_21
 24319     000D  280F               	goto	u1123_20
 24320     000E                     u1123_21:
 24321     000E  2813               	goto	i1l1292
 24322     000F                     u1123_20:
 24323     000F                     i1l14268:
 24324                           
 24325                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 24326     000F  3197  2728  3180   	fcall	_PIN_MANAGER_IOC
 24327                           
 24328                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 24329     0012  2853               	goto	i1l1304
 24330     0013                     i1l1292:	
 24331                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 24332                           
 24333     0013  1F0B               	btfss	11,6	;volatile
 24334     0014  2816               	goto	u1124_21
 24335     0015  2817               	goto	u1124_20
 24336     0016                     u1124_21:
 24337     0016  2853               	goto	i1l1304
 24338     0017                     u1124_20:
 24339     0017                     i1l14270:
 24340                           
 24341                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 24342     0017  1F19               	btfss	25,6	;volatile
 24343     0018  281A               	goto	u1125_21
 24344     0019  281B               	goto	u1125_20
 24345     001A                     u1125_21:
 24346     001A  2826               	goto	i1l1295
 24347     001B                     u1125_20:
 24348     001B                     i1l14272:
 24349     001B  1F0F               	btfss	15,6	;volatile
 24350     001C  281E               	goto	u1126_21
 24351     001D  281F               	goto	u1126_20
 24352     001E                     u1126_21:
 24353     001E  2826               	goto	i1l1295
 24354     001F                     u1126_20:
 24355     001F                     i1l14274:
 24356                           
 24357                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 24358     001F  0142               	movlb	2	; select bank2
 24359     0020  0857               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+256),w
 24360     0021  008A               	movwf	10
 24361     0022  0856               	movf	_EUSART2_TxDefaultInterruptHandler^(0+256),w
 24362     0023  000A               	callw
 24363     0024  3180               	pagesel	$
 24364                           
 24365                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 24366     0025  2853               	goto	i1l1304
 24367     0026                     i1l1295:	
 24368                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 24369                           
 24370     0026  1F99               	btfss	25,7	;volatile
 24371     0027  2829               	goto	u1127_21
 24372     0028  282A               	goto	u1127_20
 24373     0029                     u1127_21:
 24374     0029  2835               	goto	i1l1297
 24375     002A                     u1127_20:
 24376     002A                     i1l14276:
 24377     002A  1F8F               	btfss	15,7	;volatile
 24378     002B  282D               	goto	u1128_21
 24379     002C  282E               	goto	u1128_20
 24380     002D                     u1128_21:
 24381     002D  2835               	goto	i1l1297
 24382     002E                     u1128_20:
 24383     002E                     i1l14278:
 24384                           
 24385                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 24386     002E  0142               	movlb	2	; select bank2
 24387     002F  0855               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256),w
 24388     0030  008A               	movwf	10
 24389     0031  0854               	movf	_EUSART2_RxDefaultInterruptHandler^(0+256),w
 24390     0032  000A               	callw
 24391     0033  3180               	pagesel	$
 24392                           
 24393                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 24394     0034  2853               	goto	i1l1304
 24395     0035                     i1l1297:	
 24396                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 24397                           
 24398     0035  1E19               	btfss	25,4	;volatile
 24399     0036  2838               	goto	u1129_21
 24400     0037  2839               	goto	u1129_20
 24401     0038                     u1129_21:
 24402     0038  2844               	goto	i1l1299
 24403     0039                     u1129_20:
 24404     0039                     i1l14280:
 24405     0039  1E0F               	btfss	15,4	;volatile
 24406     003A  283C               	goto	u1130_21
 24407     003B  283D               	goto	u1130_20
 24408     003C                     u1130_21:
 24409     003C  2844               	goto	i1l1299
 24410     003D                     u1130_20:
 24411     003D                     i1l14282:
 24412                           
 24413                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 24414     003D  0142               	movlb	2	; select bank2
 24415     003E  084D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 24416     003F  008A               	movwf	10
 24417     0040  084C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 24418     0041  000A               	callw
 24419     0042  3180               	pagesel	$
 24420                           
 24421                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 24422     0043  2853               	goto	i1l1304
 24423     0044                     i1l1299:	
 24424                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 24425                           
 24426     0044  1E99               	btfss	25,5	;volatile
 24427     0045  2847               	goto	u1131_21
 24428     0046  2848               	goto	u1131_20
 24429     0047                     u1131_21:
 24430     0047  2853               	goto	i1l1298
 24431     0048                     u1131_20:
 24432     0048                     i1l14284:
 24433     0048  1E8F               	btfss	15,5	;volatile
 24434     0049  284B               	goto	u1132_21
 24435     004A  284C               	goto	u1132_20
 24436     004B                     u1132_21:
 24437     004B  2853               	goto	i1l1298
 24438     004C                     u1132_20:
 24439     004C                     i1l14286:
 24440                           
 24441                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 24442     004C  0142               	movlb	2	; select bank2
 24443     004D  084B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 24444     004E  008A               	movwf	10
 24445     004F  084A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 24446     0050  000A               	callw
 24447     0051  3180               	pagesel	$
 24448                           
 24449                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 24450     0052  2853               	goto	i1l1304
 24451     0053                     i1l1298:
 24452     0053                     i1l1304:
 24453     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 24454     0054  0009               	retfie
 24455     0055                     __end_of_INTERRUPT_InterruptManager:
 24456                           
 24457                           	psect	text142
 24458     1728                     __ptext142:	
 24459 ;; *************** function _PIN_MANAGER_IOC *****************
 24460 ;; Defined at:
 24461 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;		None
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;		None
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  1    wreg      void 
 24468 ;; Registers used:
 24469 ;;		wreg, status,2, status,0, pclath, cstack
 24470 ;; Tracked objects:
 24471 ;;		On entry : 0/0
 24472 ;;		On exit  : 0/0
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24479 ;;Total ram usage:        0 bytes
 24480 ;; Hardware stack levels used: 1
 24481 ;; Hardware stack levels required when called: 2
 24482 ;; This function calls:
 24483 ;;		_IOCAF6_ISR
 24484 ;; This function is called by:
 24485 ;;		_INTERRUPT_InterruptManager
 24486 ;; This function uses a non-reentrant model
 24487 ;;
 24488                           
 24489     1728                     _PIN_MANAGER_IOC:	
 24490                           ;psect for function _PIN_MANAGER_IOC
 24491                           
 24492     1728                     i1l13906:	
 24493                           ;incstack = 0
 24494 ;; hardware stack exceeded
 24495                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 24496                           
 24497                           
 24498                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 24499     1728  017E               	movlb	62	; select bank62
 24500     1729  1F3F               	btfss	63,6	;volatile
 24501     172A  2F2C               	goto	u1086_21
 24502     172B  2F2D               	goto	u1086_20
 24503     172C                     u1086_21:
 24504     172C  2F30               	goto	i1l1444
 24505     172D                     u1086_20:
 24506     172D                     i1l13908:
 24507                           
 24508                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 24509     172D  3188  201A  3197   	fcall	_IOCAF6_ISR
 24510     1730                     i1l1444:
 24511     1730  0008               	return
 24512     1731                     __end_of_PIN_MANAGER_IOC:
 24513                           
 24514                           	psect	text143
 24515     081A                     __ptext143:	
 24516 ;; *************** function _IOCAF6_ISR *****************
 24517 ;; Defined at:
 24518 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 24519 ;; Parameters:    Size  Location     Type
 24520 ;;		None
 24521 ;; Auto vars:     Size  Location     Type
 24522 ;;		None
 24523 ;; Return value:  Size  Location     Type
 24524 ;;                  1    wreg      void 
 24525 ;; Registers used:
 24526 ;;		wreg, status,2, status,0, pclath, cstack
 24527 ;; Tracked objects:
 24528 ;;		On entry : 0/0
 24529 ;;		On exit  : 0/0
 24530 ;;		Unchanged: 0/0
 24531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24536 ;;Total ram usage:        0 bytes
 24537 ;; Hardware stack levels used: 1
 24538 ;; Hardware stack levels required when called: 1
 24539 ;; This function calls:
 24540 ;;		NULL
 24541 ;;		_IOCAF6_DefaultInterruptHandler
 24542 ;; This function is called by:
 24543 ;;		_PIN_MANAGER_IOC
 24544 ;; This function uses a non-reentrant model
 24545 ;;
 24546                           
 24547     081A                     _IOCAF6_ISR:	
 24548                           ;psect for function _IOCAF6_ISR
 24549                           
 24550     081A                     i1l13652:	
 24551                           ;incstack = 0
 24552 ;; hardware stack exceeded
 24553                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 24554                           
 24555                           
 24556                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 24557     081A  0141               	movlb	1	; select bank1
 24558     081B  086D               	movf	_IOCAF6_InterruptHandler^(0+128),w
 24559     081C  046E               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 24560     081D  1903               	btfsc	3,2
 24561     081E  2820               	goto	u1059_21
 24562     081F  2821               	goto	u1059_20
 24563     0820                     u1059_21:
 24564     0820  2826               	goto	i1l13656
 24565     0821                     u1059_20:
 24566     0821                     i1l13654:
 24567                           
 24568                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 24569     0821  086E               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 24570     0822  008A               	movwf	10
 24571     0823  086D               	movf	_IOCAF6_InterruptHandler^(0+128),w
 24572     0824  000A               	callw
 24573     0825  3188               	pagesel	$
 24574     0826                     i1l13656:
 24575                           
 24576                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 24577     0826  017E               	movlb	62	; select bank62
 24578     0827  133F               	bcf	63,6	;volatile
 24579     0828                     i1l1448:
 24580     0828  0008               	return
 24581     0829                     __end_of_IOCAF6_ISR:
 24582                           
 24583                           	psect	text144
 24584     1626                     __ptext144:	
 24585 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 24586 ;; Defined at:
 24587 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 24588 ;; Parameters:    Size  Location     Type
 24589 ;;		None
 24590 ;; Auto vars:     Size  Location     Type
 24591 ;;		None
 24592 ;; Return value:  Size  Location     Type
 24593 ;;                  1    wreg      void 
 24594 ;; Registers used:
 24595 ;;		None
 24596 ;; Tracked objects:
 24597 ;;		On entry : 0/0
 24598 ;;		On exit  : 0/0
 24599 ;;		Unchanged: 0/0
 24600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24605 ;;Total ram usage:        0 bytes
 24606 ;; Hardware stack levels used: 1
 24607 ;; This function calls:
 24608 ;;		Nothing
 24609 ;; This function is called by:
 24610 ;;		_PIN_MANAGER_Initialize
 24611 ;;		_IOCAF6_ISR
 24612 ;; This function uses a non-reentrant model
 24613 ;;
 24614                           
 24615     1626                     _IOCAF6_DefaultInterruptHandler:	
 24616                           ;psect for function _IOCAF6_DefaultInterruptHandler
 24617                           
 24618     1626                     i1l1454:	
 24619                           ;incstack = 0
 24620 ;; hardware stack exceeded
 24621                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 24622                           
 24623     1626  0008               	return
 24624     1627                     __end_of_IOCAF6_DefaultInterruptHandler:
 24625                           
 24626                           	psect	text145
 24627     0AFC                     __ptext145:	
 24628 ;; *************** function _EUSART1_Transmit_ISR *****************
 24629 ;; Defined at:
 24630 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 24631 ;; Parameters:    Size  Location     Type
 24632 ;;		None
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;		None
 24635 ;; Return value:  Size  Location     Type
 24636 ;;                  1    wreg      void 
 24637 ;; Registers used:
 24638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/0
 24641 ;;		On exit  : 0/0
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24648 ;;Total ram usage:        1 bytes
 24649 ;; Hardware stack levels used: 1
 24650 ;; This function calls:
 24651 ;;		Nothing
 24652 ;; This function is called by:
 24653 ;;		_EUSART1_Initialize
 24654 ;;		_INTERRUPT_InterruptManager
 24655 ;; This function uses a non-reentrant model
 24656 ;;
 24657                           
 24658     0AFC                     _EUSART1_Transmit_ISR:	
 24659                           ;psect for function _EUSART1_Transmit_ISR
 24660                           
 24661     0AFC                     i1l13874:	
 24662                           ;incstack = 0
 24663                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24664                           
 24665                           
 24666                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 24667     0AFC  3008               	movlw	8
 24668     0AFD  0140               	movlb	0	; select bank0
 24669     0AFE  025C               	subwf	_eusart1TxBufferRemaining,w	;volatile
 24670     0AFF  1803               	skipnc
 24671     0B00  2B02               	goto	u1081_21
 24672     0B01  2B03               	goto	u1081_20
 24673     0B02                     u1081_21:
 24674     0B02  2B1B               	goto	i1l1229
 24675     0B03                     u1081_20:
 24676     0B03                     i1l13876:
 24677                           
 24678                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 24679     0B03  085D               	movf	_eusart1TxTail,w
 24680     0B04  3ECD               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 24681     0B05  0086               	movwf	6
 24682     0B06  0187               	clrf	7
 24683     0B07  0801               	movf	1,w
 24684     0B08  0142               	movlb	2	; select bank2
 24685     0B09  009A               	movwf	26	;volatile
 24686     0B0A                     i1l13878:
 24687     0B0A  3001               	movlw	1
 24688     0B0B  00F0               	movwf	??_EUSART1_Transmit_ISR
 24689     0B0C  0870               	movf	??_EUSART1_Transmit_ISR,w
 24690     0B0D  0140               	movlb	0	; select bank0
 24691     0B0E  07DD               	addwf	_eusart1TxTail,f	;volatile
 24692     0B0F                     i1l13880:
 24693                           
 24694                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 24695     0B0F  3008               	movlw	8
 24696     0B10  025D               	subwf	_eusart1TxTail,w	;volatile
 24697     0B11  1C03               	skipc
 24698     0B12  2B14               	goto	u1082_21
 24699     0B13  2B15               	goto	u1082_20
 24700     0B14                     u1082_21:
 24701     0B14  2B16               	goto	i1l13884
 24702     0B15                     u1082_20:
 24703     0B15                     i1l13882:
 24704                           
 24705                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 24706     0B15  01DD               	clrf	_eusart1TxTail	;volatile
 24707     0B16                     i1l13884:
 24708                           
 24709                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 24710     0B16  3001               	movlw	1
 24711     0B17  00F0               	movwf	??_EUSART1_Transmit_ISR
 24712     0B18  0870               	movf	??_EUSART1_Transmit_ISR,w
 24713     0B19  07DC               	addwf	_eusart1TxBufferRemaining,f	;volatile
 24714                           
 24715                           ;mcc_generated_files/eusart1.c: 218:     }
 24716     0B1A  2B1D               	goto	i1l1232
 24717     0B1B                     i1l1229:	
 24718                           ;mcc_generated_files/eusart1.c: 219:     else
 24719                           
 24720                           
 24721                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 24722     0B1B  014E               	movlb	14	; select bank14
 24723     0B1C  1219               	bcf	25,4	;volatile
 24724     0B1D                     i1l1232:
 24725     0B1D  0008               	return
 24726     0B1E                     __end_of_EUSART1_Transmit_ISR:
 24727                           
 24728                           	psect	text146
 24729     0ADA                     __ptext146:	
 24730 ;; *************** function _EUSART2_Transmit_ISR *****************
 24731 ;; Defined at:
 24732 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 24733 ;; Parameters:    Size  Location     Type
 24734 ;;		None
 24735 ;; Auto vars:     Size  Location     Type
 24736 ;;		None
 24737 ;; Return value:  Size  Location     Type
 24738 ;;                  1    wreg      void 
 24739 ;; Registers used:
 24740 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24741 ;; Tracked objects:
 24742 ;;		On entry : 0/0
 24743 ;;		On exit  : 0/0
 24744 ;;		Unchanged: 0/0
 24745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24750 ;;Total ram usage:        1 bytes
 24751 ;; Hardware stack levels used: 1
 24752 ;; This function calls:
 24753 ;;		Nothing
 24754 ;; This function is called by:
 24755 ;;		_EUSART2_Initialize
 24756 ;;		_INTERRUPT_InterruptManager
 24757 ;; This function uses a non-reentrant model
 24758 ;;
 24759                           
 24760     0ADA                     _EUSART2_Transmit_ISR:	
 24761                           ;psect for function _EUSART2_Transmit_ISR
 24762                           
 24763     0ADA                     i1l13842:	
 24764                           ;incstack = 0
 24765                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24766                           
 24767                           
 24768                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 24769     0ADA  3008               	movlw	8
 24770     0ADB  0140               	movlb	0	; select bank0
 24771     0ADC  0262               	subwf	_eusart2TxBufferRemaining,w	;volatile
 24772     0ADD  1803               	skipnc
 24773     0ADE  2AE0               	goto	u1076_21
 24774     0ADF  2AE1               	goto	u1076_20
 24775     0AE0                     u1076_21:
 24776     0AE0  2AF9               	goto	i1l1079
 24777     0AE1                     u1076_20:
 24778     0AE1                     i1l13844:
 24779                           
 24780                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 24781     0AE1  0863               	movf	_eusart2TxTail,w
 24782     0AE2  3EE5               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 24783     0AE3  0086               	movwf	6
 24784     0AE4  0187               	clrf	7
 24785     0AE5  0801               	movf	1,w
 24786     0AE6  0154               	movlb	20	; select bank20
 24787     0AE7  009A               	movwf	26	;volatile
 24788     0AE8                     i1l13846:
 24789     0AE8  3001               	movlw	1
 24790     0AE9  00F0               	movwf	??_EUSART2_Transmit_ISR
 24791     0AEA  0870               	movf	??_EUSART2_Transmit_ISR,w
 24792     0AEB  0140               	movlb	0	; select bank0
 24793     0AEC  07E3               	addwf	_eusart2TxTail,f	;volatile
 24794     0AED                     i1l13848:
 24795                           
 24796                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 24797     0AED  3008               	movlw	8
 24798     0AEE  0263               	subwf	_eusart2TxTail,w	;volatile
 24799     0AEF  1C03               	skipc
 24800     0AF0  2AF2               	goto	u1077_21
 24801     0AF1  2AF3               	goto	u1077_20
 24802     0AF2                     u1077_21:
 24803     0AF2  2AF4               	goto	i1l13852
 24804     0AF3                     u1077_20:
 24805     0AF3                     i1l13850:
 24806                           
 24807                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 24808     0AF3  01E3               	clrf	_eusart2TxTail	;volatile
 24809     0AF4                     i1l13852:
 24810                           
 24811                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 24812     0AF4  3001               	movlw	1
 24813     0AF5  00F0               	movwf	??_EUSART2_Transmit_ISR
 24814     0AF6  0870               	movf	??_EUSART2_Transmit_ISR,w
 24815     0AF7  07E2               	addwf	_eusart2TxBufferRemaining,f	;volatile
 24816                           
 24817                           ;mcc_generated_files/eusart2.c: 209:     }
 24818     0AF8  2AFB               	goto	i1l1082
 24819     0AF9                     i1l1079:	
 24820                           ;mcc_generated_files/eusart2.c: 210:     else
 24821                           
 24822                           
 24823                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 24824     0AF9  014E               	movlb	14	; select bank14
 24825     0AFA  1319               	bcf	25,6	;volatile
 24826     0AFB                     i1l1082:
 24827     0AFB  0008               	return
 24828     0AFC                     __end_of_EUSART2_Transmit_ISR:
 24829                           
 24830                           	psect	text147
 24831     0F47                     __ptext147:	
 24832 ;; *************** function _EUSART1_Receive_ISR *****************
 24833 ;; Defined at:
 24834 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 24835 ;; Parameters:    Size  Location     Type
 24836 ;;		None
 24837 ;; Auto vars:     Size  Location     Type
 24838 ;;		None
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  1    wreg      void 
 24841 ;; Registers used:
 24842 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/0
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24852 ;;Total ram usage:        0 bytes
 24853 ;; Hardware stack levels used: 1
 24854 ;; Hardware stack levels required when called: 2
 24855 ;; This function calls:
 24856 ;;		NULL
 24857 ;;		_EUSART1_DefaultErrorHandler
 24858 ;;		_EUSART1_DefaultFramingErrorHandler
 24859 ;;		_EUSART1_DefaultOverrunErrorHandler
 24860 ;;		_EUSART1_RxDataHandler
 24861 ;; This function is called by:
 24862 ;;		_EUSART1_Initialize
 24863 ;;		_INTERRUPT_InterruptManager
 24864 ;; This function uses a non-reentrant model
 24865 ;;
 24866                           
 24867     0F47                     _EUSART1_Receive_ISR:	
 24868                           ;psect for function _EUSART1_Receive_ISR
 24869                           
 24870     0F47                     i1l13886:	
 24871                           ;incstack = 0
 24872 ;; hardware stack exceeded
 24873                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24874                           
 24875                           
 24876                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24877     0F47  0140               	movlb	0	; select bank0
 24878     0F48  085B               	movf	_eusart1RxHead,w	;volatile
 24879     0F49  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24880     0F4A  0086               	movwf	6
 24881     0F4B  0187               	clrf	7
 24882     0F4C  0181               	clrf	1
 24883     0F4D                     i1l13888:
 24884                           
 24885                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 24886     0F4D  0142               	movlb	2	; select bank2
 24887     0F4E  1D1D               	btfss	29,2	;volatile
 24888     0F4F  2F51               	goto	u1083_21
 24889     0F50  2F52               	goto	u1083_20
 24890     0F51                     u1083_21:
 24891     0F51  2F5E               	goto	i1l13894
 24892     0F52                     u1083_20:
 24893     0F52                     i1l13890:
 24894                           
 24895                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24896     0F52  0140               	movlb	0	; select bank0
 24897     0F53  085B               	movf	_eusart1RxHead,w	;volatile
 24898     0F54  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24899     0F55  0086               	movwf	6
 24900     0F56  0187               	clrf	7
 24901     0F57  1481               	bsf	1,1
 24902     0F58                     i1l13892:
 24903                           
 24904                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 24905     0F58  0142               	movlb	2	; select bank2
 24906     0F59  0849               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 24907     0F5A  008A               	movwf	10
 24908     0F5B  0848               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 24909     0F5C  000A               	callw
 24910     0F5D  318F               	pagesel	$
 24911     0F5E                     i1l13894:
 24912                           
 24913                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 24914     0F5E  0142               	movlb	2	; select bank2
 24915     0F5F  1C9D               	btfss	29,1	;volatile
 24916     0F60  2F62               	goto	u1084_21
 24917     0F61  2F63               	goto	u1084_20
 24918     0F62                     u1084_21:
 24919     0F62  2F6F               	goto	i1l13900
 24920     0F63                     u1084_20:
 24921     0F63                     i1l13896:
 24922                           
 24923                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24924     0F63  0140               	movlb	0	; select bank0
 24925     0F64  085B               	movf	_eusart1RxHead,w	;volatile
 24926     0F65  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24927     0F66  0086               	movwf	6
 24928     0F67  0187               	clrf	7
 24929     0F68  1501               	bsf	1,2
 24930     0F69                     i1l13898:
 24931                           
 24932                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 24933     0F69  0142               	movlb	2	; select bank2
 24934     0F6A  0847               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 24935     0F6B  008A               	movwf	10
 24936     0F6C  0846               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 24937     0F6D  000A               	callw
 24938     0F6E  318F               	pagesel	$
 24939     0F6F                     i1l13900:
 24940                           
 24941                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24942     0F6F  0140               	movlb	0	; select bank0
 24943     0F70  085B               	movf	_eusart1RxHead,w	;volatile
 24944     0F71  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24945     0F72  0086               	movwf	6
 24946     0F73  0187               	clrf	7
 24947     0F74  0801               	movf	1,w
 24948     0F75  1903               	btfsc	3,2
 24949     0F76  2F78               	goto	u1085_21
 24950     0F77  2F79               	goto	u1085_20
 24951     0F78                     u1085_21:
 24952     0F78  2F80               	goto	i1l13904
 24953     0F79                     u1085_20:
 24954     0F79                     i1l13902:
 24955                           
 24956                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 24957     0F79  0142               	movlb	2	; select bank2
 24958     0F7A  0845               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 24959     0F7B  008A               	movwf	10
 24960     0F7C  0844               	movf	_EUSART1_ErrorHandler^(0+256),w
 24961     0F7D  000A               	callw
 24962     0F7E  318F               	pagesel	$
 24963                           
 24964                           ;mcc_generated_files/eusart1.c: 242:     } else {
 24965     0F7F  2F83               	goto	i1l1239
 24966     0F80                     i1l13904:
 24967                           
 24968                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 24969     0F80  3189  21FC  318F   	fcall	_EUSART1_RxDataHandler
 24970     0F83                     i1l1239:
 24971     0F83  0008               	return
 24972     0F84                     __end_of_EUSART1_Receive_ISR:
 24973                           
 24974                           	psect	text148
 24975     0F0E                     __ptext148:	
 24976 ;; *************** function _EUSART2_Receive_ISR *****************
 24977 ;; Defined at:
 24978 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 24979 ;; Parameters:    Size  Location     Type
 24980 ;;		None
 24981 ;; Auto vars:     Size  Location     Type
 24982 ;;		None
 24983 ;; Return value:  Size  Location     Type
 24984 ;;                  1    wreg      void 
 24985 ;; Registers used:
 24986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24987 ;; Tracked objects:
 24988 ;;		On entry : 0/0
 24989 ;;		On exit  : 0/0
 24990 ;;		Unchanged: 0/0
 24991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24996 ;;Total ram usage:        0 bytes
 24997 ;; Hardware stack levels used: 1
 24998 ;; Hardware stack levels required when called: 2
 24999 ;; This function calls:
 25000 ;;		NULL
 25001 ;;		_EUSART2_DefaultErrorHandler
 25002 ;;		_EUSART2_DefaultFramingErrorHandler
 25003 ;;		_EUSART2_DefaultOverrunErrorHandler
 25004 ;;		_EUSART2_RxDataHandler
 25005 ;; This function is called by:
 25006 ;;		_EUSART2_Initialize
 25007 ;;		_INTERRUPT_InterruptManager
 25008 ;; This function uses a non-reentrant model
 25009 ;;
 25010                           
 25011     0F0E                     _EUSART2_Receive_ISR:	
 25012                           ;psect for function _EUSART2_Receive_ISR
 25013                           
 25014     0F0E                     i1l13854:	
 25015                           ;incstack = 0
 25016 ;; hardware stack exceeded
 25017                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25018                           
 25019                           
 25020                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 25021     0F0E  087C               	movf	_eusart2RxHead,w	;volatile
 25022     0F0F  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25023     0F10  0086               	movwf	6
 25024     0F11  0187               	clrf	7
 25025     0F12  0181               	clrf	1
 25026     0F13                     i1l13856:
 25027                           
 25028                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 25029     0F13  0154               	movlb	20	; select bank20
 25030     0F14  1D1D               	btfss	29,2	;volatile
 25031     0F15  2F17               	goto	u1078_21
 25032     0F16  2F18               	goto	u1078_20
 25033     0F17                     u1078_21:
 25034     0F17  2F23               	goto	i1l13862
 25035     0F18                     u1078_20:
 25036     0F18                     i1l13858:
 25037                           
 25038                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 25039     0F18  087C               	movf	_eusart2RxHead,w	;volatile
 25040     0F19  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25041     0F1A  0086               	movwf	6
 25042     0F1B  0187               	clrf	7
 25043     0F1C  1481               	bsf	1,1
 25044     0F1D                     i1l13860:
 25045                           
 25046                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 25047     0F1D  0142               	movlb	2	; select bank2
 25048     0F1E  0853               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 25049     0F1F  008A               	movwf	10
 25050     0F20  0852               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 25051     0F21  000A               	callw
 25052     0F22  318F               	pagesel	$
 25053     0F23                     i1l13862:
 25054                           
 25055                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 25056     0F23  0154               	movlb	20	; select bank20
 25057     0F24  1C9D               	btfss	29,1	;volatile
 25058     0F25  2F27               	goto	u1079_21
 25059     0F26  2F28               	goto	u1079_20
 25060     0F27                     u1079_21:
 25061     0F27  2F33               	goto	i1l13868
 25062     0F28                     u1079_20:
 25063     0F28                     i1l13864:
 25064                           
 25065                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 25066     0F28  087C               	movf	_eusart2RxHead,w	;volatile
 25067     0F29  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25068     0F2A  0086               	movwf	6
 25069     0F2B  0187               	clrf	7
 25070     0F2C  1501               	bsf	1,2
 25071     0F2D                     i1l13866:
 25072                           
 25073                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 25074     0F2D  0142               	movlb	2	; select bank2
 25075     0F2E  0851               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 25076     0F2F  008A               	movwf	10
 25077     0F30  0850               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 25078     0F31  000A               	callw
 25079     0F32  318F               	pagesel	$
 25080     0F33                     i1l13868:
 25081                           
 25082                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 25083     0F33  087C               	movf	_eusart2RxHead,w	;volatile
 25084     0F34  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25085     0F35  0086               	movwf	6
 25086     0F36  0187               	clrf	7
 25087     0F37  0801               	movf	1,w
 25088     0F38  1903               	btfsc	3,2
 25089     0F39  2F3B               	goto	u1080_21
 25090     0F3A  2F3C               	goto	u1080_20
 25091     0F3B                     u1080_21:
 25092     0F3B  2F43               	goto	i1l13872
 25093     0F3C                     u1080_20:
 25094     0F3C                     i1l13870:
 25095                           
 25096                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 25097     0F3C  0142               	movlb	2	; select bank2
 25098     0F3D  084F               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 25099     0F3E  008A               	movwf	10
 25100     0F3F  084E               	movf	_EUSART2_ErrorHandler^(0+256),w
 25101     0F40  000A               	callw
 25102     0F41  318F               	pagesel	$
 25103                           
 25104                           ;mcc_generated_files/eusart2.c: 233:     } else {
 25105     0F42  2F46               	goto	i1l1089
 25106     0F43                     i1l13872:
 25107                           
 25108                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 25109     0F43  3189  2184  318F   	fcall	_EUSART2_RxDataHandler
 25110     0F46                     i1l1089:
 25111     0F46  0008               	return
 25112     0F47                     __end_of_EUSART2_Receive_ISR:
 25113                           
 25114                           	psect	text149
 25115     1655                     __ptext149:	
 25116 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 25117 ;; Defined at:
 25118 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 25119 ;; Parameters:    Size  Location     Type
 25120 ;;		None
 25121 ;; Auto vars:     Size  Location     Type
 25122 ;;		None
 25123 ;; Return value:  Size  Location     Type
 25124 ;;                  1    wreg      void 
 25125 ;; Registers used:
 25126 ;;		None
 25127 ;; Tracked objects:
 25128 ;;		On entry : 0/0
 25129 ;;		On exit  : 0/0
 25130 ;;		Unchanged: 0/0
 25131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25136 ;;Total ram usage:        0 bytes
 25137 ;; Hardware stack levels used: 1
 25138 ;; This function calls:
 25139 ;;		Nothing
 25140 ;; This function is called by:
 25141 ;;		_EUSART2_Initialize
 25142 ;;		_EUSART2_Receive_ISR
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146     1655                     _EUSART2_DefaultOverrunErrorHandler:	
 25147                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 25148                           
 25149     1655                     i1l13522:	
 25150                           ;incstack = 0
 25151                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 25152                           
 25153                           
 25154                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 25155     1655  0154               	movlb	20	; select bank20
 25156     1656  121D               	bcf	29,4	;volatile
 25157                           
 25158                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 25159     1657  161D               	bsf	29,4	;volatile
 25160     1658                     i1l1099:
 25161     1658  0008               	return
 25162     1659                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 25163                           
 25164                           	psect	text150
 25165     1625                     __ptext150:	
 25166 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 25167 ;; Defined at:
 25168 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 25169 ;; Parameters:    Size  Location     Type
 25170 ;;		None
 25171 ;; Auto vars:     Size  Location     Type
 25172 ;;		None
 25173 ;; Return value:  Size  Location     Type
 25174 ;;                  1    wreg      void 
 25175 ;; Registers used:
 25176 ;;		None
 25177 ;; Tracked objects:
 25178 ;;		On entry : 0/0
 25179 ;;		On exit  : 0/0
 25180 ;;		Unchanged: 0/0
 25181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25186 ;;Total ram usage:        0 bytes
 25187 ;; Hardware stack levels used: 1
 25188 ;; This function calls:
 25189 ;;		Nothing
 25190 ;; This function is called by:
 25191 ;;		_EUSART2_Initialize
 25192 ;;		_EUSART2_Receive_ISR
 25193 ;; This function uses a non-reentrant model
 25194 ;;
 25195                           
 25196     1625                     _EUSART2_DefaultFramingErrorHandler:	
 25197                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 25198                           
 25199     1625                     i1l1096:	
 25200                           ;incstack = 0
 25201                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 25202                           
 25203     1625  0008               	return
 25204     1626                     __end_of_EUSART2_DefaultFramingErrorHandler:
 25205                           
 25206                           	psect	text151
 25207     1651                     __ptext151:	
 25208 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 25209 ;; Defined at:
 25210 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 25211 ;; Parameters:    Size  Location     Type
 25212 ;;		None
 25213 ;; Auto vars:     Size  Location     Type
 25214 ;;		None
 25215 ;; Return value:  Size  Location     Type
 25216 ;;                  1    wreg      void 
 25217 ;; Registers used:
 25218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25219 ;; Tracked objects:
 25220 ;;		On entry : 0/0
 25221 ;;		On exit  : 0/0
 25222 ;;		Unchanged: 0/0
 25223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25228 ;;Total ram usage:        0 bytes
 25229 ;; Hardware stack levels used: 1
 25230 ;; Hardware stack levels required when called: 1
 25231 ;; This function calls:
 25232 ;;		_EUSART2_RxDataHandler
 25233 ;; This function is called by:
 25234 ;;		_EUSART2_Initialize
 25235 ;;		_EUSART2_Receive_ISR
 25236 ;; This function uses a non-reentrant model
 25237 ;;
 25238                           
 25239     1651                     _EUSART2_DefaultErrorHandler:	
 25240                           ;psect for function _EUSART2_DefaultErrorHandler
 25241                           
 25242     1651                     i1l13524:	
 25243                           ;incstack = 0
 25244 ;; hardware stack exceeded
 25245                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25246                           
 25247                           
 25248                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 25249     1651  3189  2184  3196   	fcall	_EUSART2_RxDataHandler
 25250     1654                     i1l1102:
 25251     1654  0008               	return
 25252     1655                     __end_of_EUSART2_DefaultErrorHandler:
 25253                           
 25254                           	psect	text152
 25255     0984                     __ptext152:	
 25256 ;; *************** function _EUSART2_RxDataHandler *****************
 25257 ;; Defined at:
 25258 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 25259 ;; Parameters:    Size  Location     Type
 25260 ;;		None
 25261 ;; Auto vars:     Size  Location     Type
 25262 ;;		None
 25263 ;; Return value:  Size  Location     Type
 25264 ;;                  1    wreg      void 
 25265 ;; Registers used:
 25266 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25267 ;; Tracked objects:
 25268 ;;		On entry : 0/0
 25269 ;;		On exit  : 0/0
 25270 ;;		Unchanged: 0/0
 25271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25276 ;;Total ram usage:        1 bytes
 25277 ;; Hardware stack levels used: 1
 25278 ;; This function calls:
 25279 ;;		Nothing
 25280 ;; This function is called by:
 25281 ;;		_EUSART2_Receive_ISR
 25282 ;;		_EUSART2_DefaultErrorHandler
 25283 ;; This function uses a non-reentrant model
 25284 ;;
 25285                           
 25286     0984                     _EUSART2_RxDataHandler:	
 25287                           ;psect for function _EUSART2_RxDataHandler
 25288                           
 25289     0984                     i1l13344:	
 25290                           ;incstack = 0
 25291                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25292                           
 25293                           
 25294                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 25295     0984  087C               	movf	_eusart2RxHead,w
 25296     0985  3EDD               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 25297     0986  0086               	movwf	6
 25298     0987  0187               	clrf	7
 25299     0988  0154               	movlb	20	; select bank20
 25300     0989  0819               	movf	25,w	;volatile
 25301     098A  0081               	movwf	1
 25302     098B                     i1l13346:
 25303     098B  3001               	movlw	1
 25304     098C  00F0               	movwf	??_EUSART2_RxDataHandler
 25305     098D  0870               	movf	??_EUSART2_RxDataHandler,w
 25306     098E  07FC               	addwf	_eusart2RxHead,f	;volatile
 25307     098F                     i1l13348:
 25308                           
 25309                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 25310     098F  3008               	movlw	8
 25311     0990  027C               	subwf	_eusart2RxHead,w	;volatile
 25312     0991  1C03               	skipc
 25313     0992  2994               	goto	u1038_21
 25314     0993  2995               	goto	u1038_20
 25315     0994                     u1038_21:
 25316     0994  2996               	goto	i1l13352
 25317     0995                     u1038_20:
 25318     0995                     i1l13350:
 25319                           
 25320                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 25321     0995  01FC               	clrf	_eusart2RxHead	;volatile
 25322     0996                     i1l13352:
 25323                           
 25324                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 25325     0996  3001               	movlw	1
 25326     0997  00F0               	movwf	??_EUSART2_RxDataHandler
 25327     0998  0870               	movf	??_EUSART2_RxDataHandler,w
 25328     0999  0140               	movlb	0	; select bank0
 25329     099A  07E0               	addwf	_eusart2RxCount,f	;volatile
 25330     099B                     i1l1093:
 25331     099B  0008               	return
 25332     099C                     __end_of_EUSART2_RxDataHandler:
 25333                           
 25334                           	psect	text153
 25335     164D                     __ptext153:	
 25336 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 25337 ;; Defined at:
 25338 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 25339 ;; Parameters:    Size  Location     Type
 25340 ;;		None
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;		None
 25343 ;; Return value:  Size  Location     Type
 25344 ;;                  1    wreg      void 
 25345 ;; Registers used:
 25346 ;;		None
 25347 ;; Tracked objects:
 25348 ;;		On entry : 0/0
 25349 ;;		On exit  : 0/0
 25350 ;;		Unchanged: 0/0
 25351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25356 ;;Total ram usage:        0 bytes
 25357 ;; Hardware stack levels used: 1
 25358 ;; This function calls:
 25359 ;;		Nothing
 25360 ;; This function is called by:
 25361 ;;		_EUSART1_Initialize
 25362 ;;		_EUSART1_Receive_ISR
 25363 ;; This function uses a non-reentrant model
 25364 ;;
 25365                           
 25366     164D                     _EUSART1_DefaultOverrunErrorHandler:	
 25367                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 25368                           
 25369     164D                     i1l13558:	
 25370                           ;incstack = 0
 25371                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 25372                           
 25373                           
 25374                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 25375     164D  0142               	movlb	2	; select bank2
 25376     164E  121D               	bcf	29,4	;volatile
 25377                           
 25378                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 25379     164F  161D               	bsf	29,4	;volatile
 25380     1650                     i1l1249:
 25381     1650  0008               	return
 25382     1651                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 25383                           
 25384                           	psect	text154
 25385     1624                     __ptext154:	
 25386 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 25387 ;; Defined at:
 25388 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 25389 ;; Parameters:    Size  Location     Type
 25390 ;;		None
 25391 ;; Auto vars:     Size  Location     Type
 25392 ;;		None
 25393 ;; Return value:  Size  Location     Type
 25394 ;;                  1    wreg      void 
 25395 ;; Registers used:
 25396 ;;		None
 25397 ;; Tracked objects:
 25398 ;;		On entry : 0/0
 25399 ;;		On exit  : 0/0
 25400 ;;		Unchanged: 0/0
 25401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25406 ;;Total ram usage:        0 bytes
 25407 ;; Hardware stack levels used: 1
 25408 ;; This function calls:
 25409 ;;		Nothing
 25410 ;; This function is called by:
 25411 ;;		_EUSART1_Initialize
 25412 ;;		_EUSART1_Receive_ISR
 25413 ;; This function uses a non-reentrant model
 25414 ;;
 25415                           
 25416     1624                     _EUSART1_DefaultFramingErrorHandler:	
 25417                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 25418                           
 25419     1624                     i1l1246:	
 25420                           ;incstack = 0
 25421                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 25422                           
 25423     1624  0008               	return
 25424     1625                     __end_of_EUSART1_DefaultFramingErrorHandler:
 25425                           
 25426                           	psect	text155
 25427     1649                     __ptext155:	
 25428 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 25429 ;; Defined at:
 25430 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;		None
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;		None
 25435 ;; Return value:  Size  Location     Type
 25436 ;;                  1    wreg      void 
 25437 ;; Registers used:
 25438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25439 ;; Tracked objects:
 25440 ;;		On entry : 0/0
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25448 ;;Total ram usage:        0 bytes
 25449 ;; Hardware stack levels used: 1
 25450 ;; Hardware stack levels required when called: 1
 25451 ;; This function calls:
 25452 ;;		_EUSART1_RxDataHandler
 25453 ;; This function is called by:
 25454 ;;		_EUSART1_Initialize
 25455 ;;		_EUSART1_Receive_ISR
 25456 ;; This function uses a non-reentrant model
 25457 ;;
 25458                           
 25459     1649                     _EUSART1_DefaultErrorHandler:	
 25460                           ;psect for function _EUSART1_DefaultErrorHandler
 25461                           
 25462     1649                     i1l13560:	
 25463                           ;incstack = 0
 25464 ;; hardware stack exceeded
 25465                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25466                           
 25467                           
 25468                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 25469     1649  3189  21FC  3196   	fcall	_EUSART1_RxDataHandler
 25470     164C                     i1l1252:
 25471     164C  0008               	return
 25472     164D                     __end_of_EUSART1_DefaultErrorHandler:
 25473                           
 25474                           	psect	text156
 25475     09FC                     __ptext156:	
 25476 ;; *************** function _EUSART1_RxDataHandler *****************
 25477 ;; Defined at:
 25478 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 25479 ;; Parameters:    Size  Location     Type
 25480 ;;		None
 25481 ;; Auto vars:     Size  Location     Type
 25482 ;;		None
 25483 ;; Return value:  Size  Location     Type
 25484 ;;                  1    wreg      void 
 25485 ;; Registers used:
 25486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25487 ;; Tracked objects:
 25488 ;;		On entry : 0/0
 25489 ;;		On exit  : 0/0
 25490 ;;		Unchanged: 0/0
 25491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25496 ;;Total ram usage:        1 bytes
 25497 ;; Hardware stack levels used: 1
 25498 ;; This function calls:
 25499 ;;		Nothing
 25500 ;; This function is called by:
 25501 ;;		_EUSART1_Receive_ISR
 25502 ;;		_EUSART1_DefaultErrorHandler
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506     09FC                     _EUSART1_RxDataHandler:	
 25507                           ;psect for function _EUSART1_RxDataHandler
 25508                           
 25509     09FC                     i1l13364:	
 25510                           ;incstack = 0
 25511                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25512                           
 25513                           
 25514                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 25515     09FC  0140               	movlb	0	; select bank0
 25516     09FD  085B               	movf	_eusart1RxHead,w
 25517     09FE  3EC5               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 25518     09FF  0086               	movwf	6
 25519     0A00  0187               	clrf	7
 25520     0A01  0142               	movlb	2	; select bank2
 25521     0A02  0819               	movf	25,w	;volatile
 25522     0A03  0081               	movwf	1
 25523     0A04                     i1l13366:
 25524     0A04  3001               	movlw	1
 25525     0A05  00F0               	movwf	??_EUSART1_RxDataHandler
 25526     0A06  0870               	movf	??_EUSART1_RxDataHandler,w
 25527     0A07  0140               	movlb	0	; select bank0
 25528     0A08  07DB               	addwf	_eusart1RxHead,f	;volatile
 25529     0A09                     i1l13368:
 25530                           
 25531                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 25532     0A09  3008               	movlw	8
 25533     0A0A  025B               	subwf	_eusart1RxHead,w	;volatile
 25534     0A0B  1C03               	skipc
 25535     0A0C  2A0E               	goto	u1039_21
 25536     0A0D  2A0F               	goto	u1039_20
 25537     0A0E                     u1039_21:
 25538     0A0E  2A10               	goto	i1l13372
 25539     0A0F                     u1039_20:
 25540     0A0F                     i1l13370:
 25541                           
 25542                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 25543     0A0F  01DB               	clrf	_eusart1RxHead	;volatile
 25544     0A10                     i1l13372:
 25545                           
 25546                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 25547     0A10  3001               	movlw	1
 25548     0A11  00F0               	movwf	??_EUSART1_RxDataHandler
 25549     0A12  0870               	movf	??_EUSART1_RxDataHandler,w
 25550     0A13  07D9               	addwf	_eusart1RxCount,f	;volatile
 25551     0A14                     i1l1243:
 25552     0A14  0008               	return
 25553     0A15                     __end_of_EUSART1_RxDataHandler:
 25554     007E                     btemp	set	126	;btemp
 25555     007E                     int$flags	set	126
 25556     007E                     wtemp0	set	126
 25557                           
 25558                           	psect	idloc
 25559                           
 25560                           ;Config register IDLOC0 @ 0x8000
 25561                           ;	unspecified, using default values
 25562     8000                     	org	32768
 25563     8000  3FFF               	dw	16383
 25564                           
 25565                           ;Config register IDLOC1 @ 0x8001
 25566                           ;	unspecified, using default values
 25567     8001                     	org	32769
 25568     8001  3FFF               	dw	16383
 25569                           
 25570                           ;Config register IDLOC2 @ 0x8002
 25571                           ;	unspecified, using default values
 25572     8002                     	org	32770
 25573     8002  3FFF               	dw	16383
 25574                           
 25575                           ;Config register IDLOC3 @ 0x8003
 25576                           ;	unspecified, using default values
 25577     8003                     	org	32771
 25578     8003  3FFF               	dw	16383
 25579                           
 25580                           	psect	config
 25581                           
 25582                           ;Config register CONFIG1 @ 0x8007
 25583                           ;	External Oscillator mode selection bits
 25584                           ;	FEXTOSC = OFF, Oscillator not enabled
 25585                           ;	Power-up default value for COSC bits
 25586                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 25587                           ;	Clock Out Enable bit
 25588                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 25589                           ;	Clock Switch Enable bit
 25590                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 25591                           ;	Fail-Safe Clock Monitor Enable bit
 25592                           ;	FCMEN = ON, FSCM timer enabled
 25593     8007                     	org	32775
 25594     8007  3FEC               	dw	16364
 25595                           
 25596                           ;Config register CONFIG2 @ 0x8008
 25597                           ;	Master Clear Enable bit
 25598                           ;	MCLRE = ON, MCLR pin is Master Clear function
 25599                           ;	Power-up Timer Enable bit
 25600                           ;	PWRTS = OFF, PWRT disabled
 25601                           ;	Low-Power BOR enable bit
 25602                           ;	LPBOREN = OFF, ULPBOR disabled
 25603                           ;	Brown-out reset enable bits
 25604                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 25605                           ;	Brown-out Reset Voltage Selection
 25606                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 25607                           ;	Zero-cross detect disable
 25608                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 25609                           ;	Peripheral Pin Select one-way control
 25610                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 25611                           ;	Stack Overflow/Underflow Reset Enable bit
 25612                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 25613     8008                     	org	32776
 25614     8008  3FFF               	dw	16383
 25615                           
 25616                           ;Config register CONFIG3 @ 0x8009
 25617                           ;	WDT Period Select bits
 25618                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 25619                           ;	WDT operating mode
 25620                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 25621                           ;	WDT Window Select bits
 25622                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 25623                           ;	WDT input clock selector
 25624                           ;	WDTCCS = SC, Software Control
 25625     8009                     	org	32777
 25626     8009  3F9F               	dw	16287
 25627                           
 25628                           ;Config register CONFIG4 @ 0x800A
 25629                           ;	Boot Block Size Selection bits
 25630                           ;	BBSIZE = BB512, 512 words boot block size
 25631                           ;	Boot Block Enable bit
 25632                           ;	BBEN = OFF, Boot Block disabled
 25633                           ;	SAF Enable bit
 25634                           ;	SAFEN = OFF, SAF disabled
 25635                           ;	Application Block Write Protection bit
 25636                           ;	WRTAPP = OFF, Application Block not write protected
 25637                           ;	Boot Block Write Protection bit
 25638                           ;	WRTB = OFF, Boot Block not write protected
 25639                           ;	Configuration Register Write Protection bit
 25640                           ;	WRTC = OFF, Configuration Register not write protected
 25641                           ;	Data EEPROM write protection bit
 25642                           ;	WRTD = OFF, Data EEPROM NOT write protected
 25643                           ;	Storage Area Flash Write Protection bit
 25644                           ;	WRTSAF = OFF, SAF not write protected
 25645                           ;	Low Voltage Programming Enable bit
 25646                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 25647     800A                     	org	32778
 25648     800A  3FFF               	dw	16383
 25649                           
 25650                           ;Config register CONFIG5 @ 0x800B
 25651                           ;	UserNVM Program memory code protection bit
 25652                           ;	CP = OFF, UserNVM code protection disabled
 25653     800B                     	org	32779
 25654     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         456
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     40      80
    BANK1            80      1      80
    BANK2            80      2      75
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    BMA253_GetAccelDataX@xAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5361	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1197(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1208(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1231(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1214(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1220(), 
		 -> NULL(), 

    I2C1_DO_TX$5361$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5366	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5360	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegister@regVal(COMMON[1]), readRegisters@dataBuffer(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1197(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1208(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1231(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1214(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1220(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1197(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1208(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1231(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1214(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1220(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1197(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1208(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1231(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1214(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1220(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegister@regVal(COMMON[1]), readRegisters@dataBuffer(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    MCP9844_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1197@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1208@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1339(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), 

    S190$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    S190$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S190$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S190$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S190$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S190$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1339(), 

    S190$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S190$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S190$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S190$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3106$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3106$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3106$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1197(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1208(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1231(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1214(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1220(), 
		 -> NULL(), 

    S3106$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegister@regVal(COMMON[1]), readRegisters@dataBuffer(COMMON[1]), NULL(NULL[0]), 

    S319$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S319$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S319$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S319$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S319$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S319$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S319$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S319$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S319$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S319$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S319$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S319$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S632$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S632$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S632$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S632$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S978$data	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3736(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1214@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1220@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_MCP9844_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1339->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1339->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyX
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataX->_BMA253_NewAccelDataRdyX
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1197
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1208
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1231
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1214
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1220
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1197
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1208
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1231
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1214
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1220
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1197
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1208
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1231
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1214
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1220
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1197
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1208
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1231
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1214
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1220
    _wr2RegCompleteHandler@i2c1_master_example$F1220->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1214->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1231->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1208->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1197->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _MCP9844_GetTemperatureValue->_MCP9844_CalcTemperature
    _MCP9844_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataX
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RN487X_DataReady->_RN487X_FilterData

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 3852965
                                              0 BANK2      2     2      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      4     4      0
                                              0 BANK1      1     1      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1339 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1339 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383328
                                             24 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
        _MCP9844_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _MCP9844_GetTemperatureValue                          1     1      0  375736
                                             11 COMMON     1     1      0
            _MCP9844_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _MCP9844_CalcTemperature                             11     9      2  375666
                                             13 BANK0     11     9      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375499
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1339 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1339 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1339                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3395397
                                             19 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               3     3      0 3387663
                                             16 BANK0      3     3      0
               _BMA253_GetAccelDataX
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyX
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataX                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyX
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyX                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1220     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1214     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1231   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1208     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1197     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataX
         _BMA253_NewAccelDataRdyX
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1197 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1208 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1231 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1214 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1220 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1197 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1208 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1231 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1214 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1220 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1197 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1208 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1231 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1214 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1220 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1197 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1208 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1231 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1214 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1220 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyX
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1339 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1339 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _MCP9844_GetTemperatureValue
       _MCP9844_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1339 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1339 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     228       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      2      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     228      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Dec 19 14:18:29 2024

                                 _eusart1TxBufferRemaining 005C  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 0800  
                                                       l31 0DA9  
                                                       l25 0D7B  
                                                       l19 0D4D  
                                                       l43 07FA  
                                                       l52 08E1  
                                                       l55 08F2  
                                                       l71 0B89  
                                                       l49 08D0  
                                                       l68 17F1  
                                      _do_I2C_SEND_RESTART 0000  
                                                      l121 0956  
                                                      l202 16BC  
                                                      l130 0BAF  
                                                      l211 0A7E  
                                                      l124 0DD7  
                                                      l205 16A4  
                                                      l221 0EED  
                                                      l118 16B6  
                                                      l142 02F2  
                                                      l127 0916  
                                                      l208 0837  
                                                      l136 0E6A  
                                                      l161 019E  
                                                      l218 0EEB  
                                                      l227 0F0D  
                                                      l190 037E  
                                                      l184 0248  
                                                      l193 0819  
                                                      l531 065E  
                                                      l196 0E36  
                                                      l534 087B  
                                                      l519 086A  
                                                      l199 16C2  
                                                      l543 0776  
                                                      l546 088C  
                                                      l730 08AE  
                                                      l802 17B0  
                                                      l811 17A5  
                                                      l804 17B2  
                                                      l733 08BF  
                                                      l813 17A7  
                                                      l558 09CB  
                                                      l822 17C8  
                                                      l727 089D  
                                                      l736 0848  
                                                      l808 17A2  
                                                      l824 17C9  
                                                      l816 17BF  
                                                      l832 0613  
                                                      l905 0406  
                                                      l498 0859  
                                                      l930 06EF  
                                                      l826 17CA  
                                                      l739 09E3  
                                                      l923 0A62  
                                                      l819 17C6  
                                                      l780 1648  
                                                      l852 0733  
                                                      l845 0E9F  
                                                      l829 0D1F  
                                                      l918 0983  
                                                      l783 17BE  
                                                      l839 0B40  
                                                      l792 1772  
                                                      l961 080B  
                                                      l786 175E  
                                                      l970 046B  
                                                      l954 0A9A  
                                                      l795 1727  
                                                      l883 0E05  
                                                      l971 0464  
                                                      l876 04CB  
                                                      l789 1768  
                                                      l973 046D  
                                                      l949 09FB  
                                                      l894 0CC5  
                                                      l799 17AD  
                                             ?_RN487X_Init 0070  
                          BMA253_NewAccelDataRdyX@xNewData 007B  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 0941  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 16ED  
                           _EUSART2_SetFramingErrorHandler 16E7  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 168C  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 16E6  
                                                     l1201 1668  
                                                     l1105 16EC  
                                                     l1114 16FE  
                                                     l1211 0BFB  
                                                     l1220 0C49  
                                                     l1108 16F2  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 16F8  
                                                     l1054 1742  
                                                     l1072 0C02  
                                                     l1216 0C29  
                                                     l1048 0FFF  
                                                     l1073 0C0B  
                                                     l1217 0C32  
                                                     l1057 1664  
                                                     l2050 0150  
                                                     l1067 0BD5  
                                                     l1076 0C22  
                                                     l1261 16C8  
                                                     l1255 16CE  
                                                     l2039 00E4  
                                            ?_RN487X_Delay 0074  
                                                     l1264 16E0  
                                                     l1192 0FC1  
                                                     l1352 177C  
                                                     l1440 06A7  
                                                     l1258 16D4  
                                                     l1267 16DA  
                                                     l1451 1704  
                                                     l1355 1786  
                                                     l1349 096C  
                                                     l1198 174B  
                                                     l3302 0A9B  
                                                     l1471 092A  
                                                     l3304 0AB8  
                                                     l1802 1739  
                                                     l1811 0573  
                                                     l1805 171F  
                                                     l3309 05C5  
                                                     l1742 0ED4  
                                                     l1911 1630  
                                                     l1743 0ED5  
                                                     l1920 1639  
                                                     l1808 0557  
                                                     l1824 0793  
                                                     l1825 07B9  
                                                     l1753 0AD9  
                                                     l1489 07FF  
                                                     l1914 1642  
                                                     l1842 0CF2  
                                                     l1747 09B3  
                                                     l3283 0A2D  
                                                     l1739 1754  
                                                     l1932 163C  
                                                     l1836 1717  
                                                     l1860 1677  
                                                     l1908 17E4  
                                                     l1941 165C  
                                                     l1917 166D  
                                                     l3277 0A47  
                                                     l1766 17FF  
                                                     l1926 163F  
                                                     l1935 16AA  
                                                     l1863 167C  
                                                     l1759 169F  
                                                     l1775 179C  
                                                     l1872 168B  
                                                     l1792 17D7  
                                                     l3296 0520  
                                                     l1929 1636  
                                                     l1769 1791  
                                                     l1881 169A  
                                                     l1786 0B64  
                                                     l1938 1660  
                                                     l1962 1645  
                                                     l1866 1681  
                                                     l1875 1690  
                                                     l1956 1633  
                                                     l1796 0C9A  
                                                     l1869 1686  
                                                     l1965 16AB  
                                                     l1878 1695  
                                                     l1959 162D  
                                                     l1895 1628  
                                                     l1799 1672  
                                                     l1887 0C71  
                                                     l1969 16B0  
                                                     l1977 0940  
                                                     l1898 162A  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 1822  
                                                     STR_2 1817  
                                                     STR_3 1817  
                                                     STR_4 1800  
                                                     STR_5 1800  
                                                     STR_6 1822  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 17F8  
                                                     u9601 17F7  
                                                     u9610 0529  
                                                     u9611 0528  
                                                     u9620 0570  
                                                     u9700 0C07  
                                                     u9621 056F  
                                                     u9701 0C06  
                                                     u9630 078E  
                                                     u9710 0C1D  
                                                     u9631 078D  
                                                     u9711 0C1C  
                                                     u9640 16B0  
                                                     u9800 0ACA  
                                                     u9720 0BDC  
                                                     u9641 16AF  
                                                     u9801 0AC9  
                                                     u9721 0BDB  
                                                     u9650 0C7A  
                                                     u9810 0A27  
                                                     u9730 0BF2  
                                                     u9651 0C79  
                                                     u9811 0A26  
                                                     u9731 0BF1  
                                                     u9660 0C82  
                                                     u9820 0EA8  
                                                     u9740 0C29  
                                                     u9900 03A5  
                                                     u9661 0C81  
                                                     u9821 0EA7  
                                                     u9741 0C28  
                                                     u9901 03A4  
                                                     u9830 09A3  
                                                     u9590 0B48  
                                                     u9750 0C2E  
                                                     u9670 0BB6  
                                                     u9910 03AB  
                                                     u9831 09A2  
                                                     u9591 0B47  
                                                     u9751 0C2D  
                                                     u9671 0BB5  
                                                     u9911 03AA  
                                                     u9760 0C44  
                                                     u9840 0940  
                                                     u9680 0BCC  
                                                     u9920 03B4  
                                                     u9761 0C43  
                                                     u9841 093F  
                                                     u9681 0BCB  
                                                     u9921 03B3  
                                                     u9770 17D7  
                                                     u9690 0C02  
                                                     u9930 03BA  
                                                     u9850 0A47  
                                                     u9771 17D6  
                                                     u9691 0C01  
                                                     u9931 03B9  
                                                     u9851 0A46  
                                                     u9780 17DD  
                                                     u9860 0DE9  
                                                     u9940 0580  
                                                     u9781 17DC  
                                                     u9861 0DE8  
                                                     u9941 057F  
                                                     u9790 0AC2  
                                                     u9870 0E05  
                                                     u9950 0598  
                                                     u9791 0AC1  
                                                     u9871 0E04  
                                                     u9951 0597  
                                                     u9880 0CB8  
                                                     u9960 05A1  
                                                     u9881 0CB7  
                                                     u9961 05A0  
                                                     u9890 0CC4  
                                                     u9970 05A7  
                                                     u9891 0CC3  
                                                     u9971 05A6  
                                                     u9980 05B7  
                                                     u9981 05B6  
                                                     u9990 0AA5  
                                                     u9991 0AA4  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0030  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 0C23  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 0BFC  
                                ??_I2C1_CallbackReturnStop 0079  
                                                     __hex 0158  
                                                     _main 00A8  
                                                     _peek 0067  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1000  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 0C9B  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 0DD8  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 0AFC  
                              __end_of_RN487X_EnterCmdMode 0984  
                                             _statusBuffer 02A0  
                           BMA253_GetAccelDataX@xAccelData 002D  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0249  
                            _LIGHTBLUE_ParseIncomingPacket 017D  
                                  __end_of_TMR0_Initialize 092B  
                                             _do_I2C_RESET 0000  
                            __end_of_OSCILLATOR_Initialize 177D  
                                                    l13000 03BC  
                                                    l13010 0405  
                                                    l13100 06C9  
                                                    l13020 0583  
                                                    l13006 03BE  
                                                    l13110 06D8  
                                                    l13102 06CC  
                                                    l13030 05B7  
                                                    l13022 058F  
                                                    l13014 0574  
                                                    l13008 03C6  
                                                    l13120 06E6  
                                                    l13112 06DA  
                                                    l13104 06CE  
                                                    l13200 0740  
                                                    l13040 0AB6  
                                                    l13024 0598  
                                                    l13016 0580  
                                                    l12410 17F8  
                                                    l12402 0B42  
                                                    l13050 061C  
                                                    l13130 0A59  
                                                    l13122 06EC  
                                                    l13114 06DE  
                                                    l13106 06D0  
                                                    l13210 0765  
                                                    l13202 0749  
                                                    l13034 0A9B  
                                                    l13026 05A1  
                                                    l12412 17FE  
                                                    l12404 0B48  
                                                    l12420 1659  
                                                    l13060 0643  
                                                    l13052 0626  
                                                    l13044 0616  
                                                    l13116 06E2  
                                                    l13108 06D4  
                                                    l13220 0A7B  
                                                    l13204 0751  
                                                    l13140 05C6  
                                                    l13036 0AA5  
                                                    l13028 05A7  
                                                    l12406 0B57  
                                                    l12414 1787  
                                                    l12422 0849  
                                                    l12430 085A  
                                                    l12502 166A  
                                                    l12510 1678  
                                                    l13070 065D  
                                                    l13062 064D  
                                                    l13054 062F  
                                                    l13134 1720  
                                                    l13126 0A48  
                                                    l13118 06E4  
                                                    l13214 0A63  
                                                    l13206 075A  
                                                    l13302 1769  
                                                    l13142 0B1F  
                                                    l13150 0E6B  
                                                    l13038 0AA6  
                                                    l13230 0721  
                                                    l13222 06F0  
                                                    l13310 0418  
                                                    l12416 1637  
                                                    l12408 17F3  
                                                    l12424 0851  
                                                    l12432 0862  
                                                    l12440 0873  
                                                    l12504 1673  
                                                    l12512 167B  
                                                    l13056 0637  
                                                    l13400 07D8  
                                                    l13128 0A53  
                                                    l13216 0A66  
                                                    l13208 075D  
                                                    l13144 0B24  
                                                    l13152 0E73  
                                                    l13160 04CC  
                                                    l13232 0724  
                                                    l13224 0705  
                                                    l13320 0448  
                                                    l13312 041F  
                                                    l12418 163A  
                                                    l12426 0858  
                                                    l12434 0869  
                                                    l12442 087A  
                                                    l12450 088B  
                                                    l12522 1640  
                                                    l12610 0572  
                                                    l12602 0536  
                                                    l12506 1676  
                                                    l12530 1694  
                                                    l13066 0653  
                                                    l13058 0640  
                                                    l13250 0D2A  
                                                    l13402 07DC  
                                                    l13074 096D  
                                                    l13090 06B8  
                                                    l13082 06A8  
                                                    l13218 0A73  
                                                    l13410 17E6  
                                                    l13242 1743  
                                                    l13146 0B30  
                                                    l13154 0E76  
                                                    l13138 0CF3  
                                                    l13170 050F  
                                                    l13162 04D2  
                                                    l13234 072B  
                                                    l13226 0709  
                                                    l13330 0467  
                                                    l13322 044F  
                                                    l13314 0421  
                                                    l13306 0407  
                                                    l12460 088D  
                                                    l12540 163D  
                                                    l12604 0559  
                                                    l12620 077F  
                                                    l12516 1682  
                                                    l12700 0C4C  
                                                    l13068 0657  
                                                    l13180 08CF  
                                                    l13252 0D3B  
                                                    l13260 0D69  
                                                    l13404 07E5  
                                                    l13420 0321  
                                                    l13412 080D  
                                                    l13076 0974  
                                                    l13092 06BC  
                                                    l13084 06AF  
                                                    l13148 0B35  
                                                    l13156 0E85  
                                                    l13172 0515  
                                                    l13164 04DF  
                                                    l13236 072E  
                                                    l13228 071B  
                                                    l13316 0426  
                                                    l13324 0455  
                                                    l13308 0412  
                                                    l13340 16ED  
                                                    l13500 0FD9  
                                                    l12438 086B  
                                                    l12446 087C  
                                                    l12454 09B4  
                                                    l12462 0895  
                                                    l12470 08A6  
                                                    l12550 1627  
                                                    l12526 165D  
                                                    l12606 0565  
                                                    l12622 0784  
                                                    l12542 167D  
                                                    l12518 1685  
                                                    l12534 168C  
                                                    l12702 0C4F  
                                                    l13246 0D22  
                                                    l13254 0D50  
                                                    l13190 08E2  
                                                    l13262 0D7E  
                                                    l13406 07ED  
                                                    l13430 0373  
                                                    l13422 0341  
                                                    l13414 02F4  
                                                    l13078 097A  
                                                    l13094 06C0  
                                                    l13086 06B3  
                                                    l13270 0B65  
                                                    l13238 173A  
                                                    l13158 0E8A  
                                                    l13166 04F5  
                                                    l13174 051E  
                                                    l13326 045C  
                                                    l13318 0434  
                                                    l13342 16E1  
                                                    l13334 16F3  
                                                    l13510 0FED  
                                                    l13502 0FDB  
                                                    l12448 0884  
                                                    l12456 09CA  
                                                    l12464 089C  
                                                    l12472 08AD  
                                                    l12480 08BE  
                                                    l12560 166E  
                                                    l12608 0570  
                                                    l12632 0795  
                                                    l12624 078E  
                                                    l12544 1680  
                                                    l12536 168F  
                                                    l12528 1691  
                                                    l12712 0C57  
                                                    l13248 0D22  
                                                    l13184 08D1  
                                                    l13256 0D50  
                                                    l13192 08F1  
                                                    l13264 0D7E  
                                                    l13408 07F1  
                                                    l13424 0359  
                                                    l13416 0311  
                                                    l13440 16A0  
                                                    l13096 06C3  
                                                    l13088 06B6  
                                                    l13432 16BD  
                                                    l13272 0B71  
                                                    l13168 04F6  
                                                    l13328 045F  
                                                    l13360 16CF  
                                                    l13336 16F9  
                                                    l13520 0FFD  
                                                    l13512 0FF4  
                                                    l13504 0FDD  
                                                    l13600 067C  
                                                    l12554 1629  
                                                    l12562 1670  
                                                    l12570 1733  
                                                    l12642 079D  
                                                    l12626 0791  
                                                    l12618 0777  
                                                    l12650 1711  
                                                    l12706 0C53  
                                                    l12730 0C85  
                                                    l12722 0C72  
                                                    l13178 08C0  
                                                    l13186 08E0  
                                                    l13258 0D58  
                                                    l13266 0D86  
                                                    l12810 0C3A  
                                                    l12802 0C23  
                                                    l13426 0367  
                                                    l13418 0316  
                                                    l13290 0E2E  
                                                    l13282 0E07  
                                                    l13098 06C5  
                                                    l13450 0EEF  
                                                    l13274 0B74  
                                                    l13362 16C3  
                                                    l13354 16D5  
                                                    l13530 0F8D  
                                                    l13338 16E7  
                                                    l13514 0FF6  
                                                    l13506 0FDF  
                                                    l13610 0686  
                                                    l13602 067E  
                                                    l14330 00B5  
                                                    l12820 1634  
                                                    l12484 0838  
                                                    l12468 089E  
                                                    l12476 08AF  
                                                    l12492 09CC  
                                                    l12548 1643  
                                                    l12660 0CC9  
                                                    l12564 1671  
                                                    l12572 1738  
                                                    l12580 171E  
                                                    l12636 0799  
                                                    l12652 1713  
                                                    l12724 0C75  
                                                    l12900 0EB9  
                                                    l13268 0D97  
                                                    l12812 0C3E  
                                                    l12804 0C23  
                                                    l13428 036B  
                                                    l13292 0E32  
                                                    l13284 0E11  
                                                    l13436 16B7  
                                                    l13700 0BA9  
                                                    l12740 0BB6  
                                                    l12732 1661  
                                                    l13452 0EF9  
                                                    l13444 0ED8  
                                                    l13196 0736  
                                                    l13276 0B76  
                                                    l13356 16DB  
                                                    l13540 0F9F  
                                                    l13532 0F96  
                                                    l13516 0FF7  
                                                    l13508 0FE6  
                                                    l13620 0692  
                                                    l13612 0688  
                                                    l13604 0680  
                                                    l14340 00CC  
                                                    l14332 00B6  
                                                    l12558 162B  
                                                    l12486 0840  
                                                    l12478 08B7  
                                                    l12494 09E2  
                                                    l12670 0CD2  
                                                    l12654 1716  
                                                    l12726 0C7A  
                                                    l12822 17CB  
                                                    l12910 0ECD  
                                                    l12902 0EBE  
                                                    l13390 07BC  
                                                    l12814 0C44  
                                                    l12806 0C2E  
                                                    l12830 17B3  
                                                    l13286 0E1F  
                                                    l12750 0BCF  
                                                    l12742 0BC2  
                                                    l13294 082B  
                                                    l13446 0ED9  
                                                    l13710 0E4F  
                                                    l13702 0E37  
                                                    l13198 0736  
                                                    l13278 0B85  
                                                    l13470 0A85  
                                                    l13358 16C9  
                                                    l13550 0FB8  
                                                    l13542 0FA1  
                                                    l13534 0F99  
                                                    l13526 0F84  
                                                    l13518 0FF8  
                                                    l13374 16FF  
                                                    l13630 069E  
                                                    l13622 0694  
                                                    l13614 0689  
                                                    l13606 0682  
                                                    l14350 010D  
                                                    l14342 00CE  
                                                    l14334 00B9  
                                                    l14326 00A8  
                                                    l12488 0847  
                                                    l12664 0CCD  
                                                    l12568 1731  
                                                    l12576 1718  
                                                    l12592 052E  
                                                    l12584 0521  
                                                    l12728 0C82  
                                                    l12824 17CC  
                                                    l12920 169B  
                                                    l12840 17D8  
                                                    l12912 0ED0  
                                                    l12904 0EC2  
                                                    l13392 07BC  
                                                    l12760 0BFC  
                                                    l12816 0C45  
                                                    l12808 0C33  
                                                    l13288 0E23  
                                                    l12752 0BD2  
                                                    l12744 0BC6  
                                                    l12736 0BB0  
                                                    l12832 1755  
                                                    l13296 0834  
                                                    l13448 0EE7  
                                                    l13456 0F05  
                                                    l13712 0E64  
                                                    l13704 0E3B  
                                                    l13720 0271  
                                                    l13480 0A99  
                                                    l13552 0FB9  
                                                    l13544 0FA8  
                                                    l13536 0F9B  
                                                    l13528 0F86  
                                                    l13640 1776  
                                                    l13632 06A0  
                                                    l13624 0697  
                                                    l13616 068A  
                                                    l13608 0684  
                                                    l14360 012B  
                                                    l14352 0118  
                                                    l14344 00DE  
                                                    l14336 00BC  
                                                    l14328 00B4  
                                                    l12930 09A6  
                                                    l12498 16A5  
                                                    l12666 0CD0  
                                                    l12658 0CC6  
                                                    l12578 171A  
                                                    l12690 1696  
                                                    l12826 17CF  
                                                    l12842 17DD  
                                                    l12914 0ED3  
                                                    l12906 0EC7  
                                                    l13394 07C4  
                                                    l12770 0C1D  
                                                    l12762 0C07  
                                                    l12818 0C47  
                                                    l12754 0BD4  
                                                    l12746 0BCC  
                                                    l12738 0BB0  
                                                    l13706 0E44  
                                                    l13730 02DA  
                                                    l13722 0276  
                                                    l13714 024A  
                                                    l13474 0A87  
                                                    l13810 09F5  
                                                    l13554 0FBA  
                                                    l13546 0FAF  
                                                    l13538 0F9D  
                                                    l13490 0FC2  
                                                    l13570 1753  
                                                    l13642 1777  
                                                    l13634 06A3  
                                                    l13626 069A  
                                                    l13618 068B  
                                                    l13562 177D  
                                                    l13650 0925  
                                                    l14354 011E  
                                                    l14346 00ED  
                                                    l14362 0131  
                                                    l14338 00C4  
                                                    l12852 1631  
                                                    l12932 09A9  
                                                    l12924 099C  
                                                    l12676 0CD6  
                                                    l12596 0532  
                                                    l12588 052A  
                                                    l12684 1687  
                                                    l12692 1698  
                                                    l12828 17D2  
                                                    l12860 0AC3  
                                                    l12844 17DE  
                                                    l12908 0EC8  
                                                    l13396 07C8  
                                                    l12772 0C1E  
                                                    l12764 0C0C  
                                                    l12748 0BCD  
                                                    l12780 0BD6  
                                                    l12836 175F  
                                                    l13740 0183  
                                                    l13708 0E4A  
                                                    l13732 02DE  
                                                    l13724 0281  
                                                    l13716 0254  
                                                    l13660 0941  
                                                    l13484 17A8  
                                                    l13476 0A95  
                                                    l13468 0A7F  
                                                    l13812 09F8  
                                                    l13804 09E4  
                                                    l13556 0FBF  
                                                    l13548 0FB6  
                                                    l13492 0FC4  
                                                    l13564 174C  
                                                    l13644 177A  
                                                    l13636 06A5  
                                                    l13628 069C  
                                                    l13580 0670  
                                                    l13572 065F  
                                                    l14364 0140  
                                                    l14356 0124  
                                                    l14348 0101  
                                                    l12854 162E  
                                                    l12934 09AC  
                                                    l12926 09A3  
                                                    l12686 168A  
                                                    l12694 1699  
                                                    l12870 0AD4  
                                                    l12862 0AC5  
                                                    l12846 17E0  
                                                    l12918 1792  
                                                    l13398 07D0  
                                                    l12766 0C13  
                                                    l12774 0C20  
                                                    l12758 0BFC  
                                                    l13670 0DAC  
                                                    l12942 092B  
                                                    l12790 0BF2  
                                                    l12782 0BD6  
                                                    l13750 01A9  
                                                    l13742 0188  
                                                    l13734 02E7  
                                                    l13726 0298  
                                                    l13718 025F  
                                                    l13662 0943  
                                                    l13486 179D  
                                                    l13822 1646  
                                                    l12950 0A31  
                                                    l13830 0808  
                                                    l13806 09EA  
                                                    l13494 0FCB  
                                                    l13566 174E  
                                                    l13646 177B  
                                                    l13638 1773  
                                                    l13590 0677  
                                                    l13582 0672  
                                                    l13574 0661  
                                                    l13910 0957  
                                                    l14366 0159  
                                                    l14358 0128  
                                                    l12936 09AF  
                                                    l12928 09A4  
                                                    l12864 0ACA  
                                                    l12872 0AD7  
                                                    l12856 0ABB  
                                                    l12848 17E3  
                                                    l12768 0C17  
                                                    l12880 0A1E  
                                                    l13672 0DB0  
                                                    l12944 092C  
                                                    l12792 0BF3  
                                                    l12784 0BDC  
                                                    l12776 1665  
                                                    l12960 0DFF  
                                                    l12952 0DD9  
                                                    l13760 01CC  
                                                    l13752 01B2  
                                                    l13744 018E  
                                                    l13736 017F  
                                                    l13680 0904  
                                                    l13728 02AA  
                                                    l13664 0947  
                                                    l13488 17C1  
                                                    l13840 04BD  
                                                    l13832 080A  
                                                    l13808 09F0  
                                                    l13496 0FD4  
                                                    l13568 1750  
                                                    l13592 0678  
                                                    l13584 0674  
                                                    l13576 0663  
                                                    l13648 0917  
                                                    l13920 0966  
                                                    l13912 095A  
                                                    l14368 016C  
                                                    l12938 09B2  
                                                    l12698 0C4A  
                                                    l12866 0ACE  
                                                    l12858 0AC2  
                                                    l12890 0EAA  
                                                    l12882 0A27  
                                                    l13674 0DBB  
                                                    l13658 16B1  
                                                    l13690 0B8F  
                                                    l12946 0934  
                                                    l12794 0BF5  
                                                    l12786 0BE8  
                                                    l12962 0C9B  
                                                    l12954 0DDB  
                                                    l13770 01E5  
                                                    l13762 01D5  
                                                    l13754 01B9  
                                                    l13746 0197  
                                                    l13738 0180  
                                                    l13682 0909  
                                                    l13666 0950  
                                                    l13826 0800  
                                                    l13818 09FA  
                                                    l13498 0FD7  
                                                    l13594 0679  
                                                    l13586 0675  
                                                    l13578 066E  
                                                    l13922 0969  
                                                    l13914 095D  
                                                    l12868 0AD1  
                                                    l12892 0EAB  
                                                    l12876 0A15  
                                                    l13676 0DC6  
                                                    l13668 0DAA  
                                                    l13692 0B90  
                                                    l12796 0BF8  
                                                    l12788 0BEC  
                                                    l12972 0CBA  
                                                    l12964 0C9D  
                                                    l12956 0DE9  
                                                    l12980 037F  
                                                    l13780 0211  
                                                    l13772 01E8  
                                                    l13764 01DC  
                                                    l13756 01C3  
                                                    l13748 01A3  
                                                    l13684 090A  
                                                    l13836 046E  
                                                    l12948 0A2F  
                                                    l13828 0800  
                                                    l13596 067A  
                                                    l13588 0676  
                                                    l13916 0960  
                                                    l13924 07FB  
                                                    l12894 0EAC  
                                                    l12886 0EA1  
                                                    l12878 0A1A  
                                                    l13678 0DD1  
                                                    l13694 0B96  
                                                    l12798 0BFA  
                                                    l12966 0CA7  
                                                    l12974 0CBE  
                                                    l12958 0DFB  
                                                    l12990 03A5  
                                                    l12982 0380  
                                                    l13790 0220  
                                                    l13782 0217  
                                                    l13774 01EE  
                                                    l13766 01DE  
                                                    l13758 01C6  
                                                    l13686 0910  
                                                    l13838 04B4  
                                                    l13598 067B  
                                                    l13918 0963  
                                                    l12896 0EB3  
                                                    l12888 0EA8  
                                                    l13696 0B9C  
                                                    l13688 0B8A  
                                                    l12976 0CC4  
                                                    l12968 0CB8  
                                                    l12992 03AB  
                                                    l12984 038A  
                                                    l13792 0226  
                                                    l13784 021A  
                                                    l13776 01F7  
                                                    l13768 01E3  
                                                    l12898 0EB8  
                                                    l13698 0BA3  
                                                    l12994 03AE  
                                                    l12986 0394  
                                                    l13778 01FE  
                                                    l12996 03B4  
                                                    l12988 039F  
                                                    l13796 0229  
                                                    l12998 03BA  
                                                    l16490 0549  
                                                    l16492 0CE4  
                                                    l16484 0231  
                                                    l16486 0C69  
                                                    l16488 07AB  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 0ED6  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    u10000 0AB6  
                                                    u10001 0AB5  
                                                    u10010 0626  
                                                    u10011 0625  
                                                    u10020 064D  
                                                    u10100 04D2  
                                                    u10021 064C  
                                                    u10101 04D1  
                                                    u10030 0652  
                                                    u10110 04F5  
                                                    u10031 0651  
                                                    u10111 04F4  
                                                    u10040 065D  
                                                    u10200 0740  
                                                    u10120 0515  
                                                    u10041 065C  
                                                    u10201 073F  
                                                    u10121 0514  
                                                    u10050 06B3  
                                                    u10210 0765  
                                                    u10130 051E  
                                                    u10051 06B2  
                                                    u10211 0764  
                                                    u10131 051D  
                                                    u10140 08CD  
                                                    u10300 0D58  
                                                    u10060 06C0  
                                                    u10220 0705  
                                                    u10141 08CB  
                                                    u10301 0D57  
                                                    u10061 06BF  
                                                    u10221 0704  
                                                    u10150 08CE  
                                                    u10070 0B24  
                                                    u10230 071B  
                                                    u10071 0B23  
                                                    u10231 071A  
                                                    u10160 08DE  
                                                    u10320 0D86  
                                                    u10240 1741  
                                                    u10080 0B35  
                                                    u10161 08DC  
                                                    u10321 0D85  
                                                    u10241 173F  
                                                    u10081 0B34  
                                                    u10170 08DF  
                                                    u10250 1742  
                                                    u10090 0E9F  
                                                    u10315 0D6F  
                                                    u10091 0E9E  
                                                    u10180 08EF  
                                                    u10420 07C4  
                                                    u10500 0EF4  
                                                    u10260 174A  
                                                    u10340 0418  
                                                    u10181 08ED  
                                                    u10421 07C3  
                                                    u10501 0EF2  
                                                    u10261 1748  
                                                    u10341 0417  
                                                    u10190 08F0  
                                                    u10430 07D8  
                                                    u10510 0EF5  
                                                    u10270 174B  
                                                    u10350 041F  
                                                    u10335 0D9D  
                                                    u10431 07D7  
                                                    u10095 0E9B  
                                                    u10351 041E  
                                                    u10280 0D2A  
                                                    u10440 07ED  
                                                    u10600 0E64  
                                                    u10360 0448  
                                                    u11400 013F  
                                                    u10281 0D29  
                                                    u10441 07EC  
                                                    u10601 0E63  
                                                    u10361 0447  
                                                    u11401 013E  
                                                    u10370 045C  
                                                    u11410 0158  
                                                    u10371 045B  
                                                    u11411 0157  
                                                    u10460 0373  
                                                    u10700 021F  
                                                    u10540 0A85  
                                                    u11420 017A  
                                                    u11340 00C4  
                                                    u10461 0372  
                                                    u10701 021E  
                                                    u10605 0E60  
                                                    u10365 0444  
                                                    u10541 0A84  
                                                    u11421 0179  
                                                    u11341 00C3  
                                                    u10710 0226  
                                                    u10630 02E7  
                                                    u10550 0A95  
                                                    u11350 00CC  
                                                    u10295 0D41  
                                                    u10455 032C  
                                                    u10711 0225  
                                                    u10631 02E6  
                                                    u10615 0284  
                                                    u10551 0A94  
                                                    u11351 00CB  
                                                    u10480 0EE7  
                                                    u10640 018E  
                                                    u10560 17AD  
                                                    u10720 09EA  
                                                    u11360 00EC  
                                                    u10481 0EE6  
                                                    u10641 018D  
                                                    u10625 02B1  
                                                    u10561 17AC  
                                                    u10721 09E9  
                                                    u11361 00EB  
                                                    u10490 0EEB  
                                                    u10650 01A9  
                                                    u10570 17A2  
                                                    u10730 09F0  
                                                    u11370 010D  
                                                    u10491 0EEA  
                                                    u10475 0EDC  
                                                    u10651 01A8  
                                                    u10571 17A1  
                                                    u10731 09EF  
                                                    u11371 010C  
                                                    u10580 17C6  
                                                    u10740 0808  
                                                    u11380 0118  
                                                    u10581 17C5  
                                                    u10741 0807  
                                                    u11381 0117  
                                                    u10670 01CC  
                                                    u10750 04CB  
                                                    u11390 011E  
                                                    u10671 01CB  
                                                    u10751 04CA  
                                                    u11391 011D  
                                                    u10680 01E3  
                                                    u10681 01E2  
                                                    u10665 01BC  
                                                    u10690 01EE  
                                                    u10691 01ED  
                                                    u14157 092F  
                            __end_of_rn487x_driver_version 1834  
                               __end_of_i2c1_fsmStateTable 1048  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 0AFC  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004A  
                                  __end_of_PIN_MANAGER_IOC 1731  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0614  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 0CC6  
                                                    pclath 000A  
                                   __end_of_RN487X_SendCmd 0E06  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 05C6  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1625  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1624  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 0A63  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 16FF  
                            _EUSART2_SetTxInterruptHandler 16F9  
                                            _fsmStateTable 1048  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 05C6  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 0FC2  
                                             __end_of_main 017D  
                                             __end_of_uart 1028  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                 _LIGHTBLUE_UpdateErrorLed 0A63  
                               __end_of_RN487X_is_rx_ready 1773  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0169  
                                ?_rn487x_PrintMessageStart 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1655  
                              _EUSART2_DefaultErrorHandler 1651  
                                  _LIGHTBLUE_PerformAction 0ED6  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 02F3  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 07BA  
                                       __end_of_I2C1_DO_TX 0574  
                                         _RN487X_DataReady 0A7F  
                                       __end_of_I2C1_Close 09B4  
                               __end_of_EUSART2_Initialize 1000  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0062  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0734  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1654  
                                                   _RC4PPS 1F24  
                                                   i1l1232 0B1D  
                                                   i1l1304 0053  
                                                   i1l1082 0AFB  
                                                   i1l1243 0A14  
                                                   i1l1252 164C  
                                                   i1l1093 099B  
                                                   i1l1229 0B1B  
                                                   i1l1246 1624  
                                                   i1l1239 0F83  
                                                   i1l1079 0AF9  
                                                   i1l1096 1625  
                                                   i1l1249 1650  
                                                   i1l1089 0F46  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1658  
                                                   _ODCONC 1F50  
                                                   i1l1444 1730  
                                                   i1l1292 0013  
                                                   _ODCONE 1F66  
                                                   i1l1454 1626  
                                                   i1l1295 0026  
                                                   i1l1448 0828  
                                                   i1l1297 0035  
                                                   i1l1298 0053  
                                                   i1l1299 0044  
                                                   _RN487X 1068  
                                          ?_RN487X_ReadMsg 0073  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                       __end_of_RN487X_ReadDefaultResponse 0407  
                               _RN487X_ReadDefaultResponse 037F  
                                                   _OSCFRQ 0893  
                                          ?_RN487X_SendCmd 0077  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                             ?_MCP9844_GetTemperatureValue 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 0CC6  
                              BMA253_GetAccelDataX@lsbData 002E  
                              BMA253_GetAccelDataX@msbData 002F  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 182D  
                            RN487X_EnterDataMode@cmdPrompt 1828  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0031  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003D  
                              BMA253_GetAccelDataZ@lsbData 002E  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataX 0D4E  
                             __end_of_BMA253_GetAccelDataY 0D7C  
                             __end_of_BMA253_GetAccelDataZ 0DAA  
                                RN487X_FilterData@readChar 00EF  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                              _EUSART2_FramingErrorHandler 0152  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 16BD  
                                                   _strchr 0A9B  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 0A2E  
                                                   _strlen 0A15  
                                                   _strstr 04CC  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1731  
                                           _PMD_Initialize 177D  
                                  _BMA253_NewAccelDataRdyX 08C0  
                                  _BMA253_NewAccelDataRdyY 08D1  
                                  _BMA253_NewAccelDataRdyZ 08E2  
                            ?_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0074  
                                     _EUSART2_Transmit_ISR 0ADA  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1817  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 00C5  
                                                ??_strncmp 0077  
                                  _I2C1_DO_RX_NACK_RESTART 1691  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 06F0  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00DD  
                                          _eusart1TxBuffer 00CD  
                                        _SYSTEM_Initialize 0957  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00E5  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 1834  
                                         _do_I2C_SEND_STOP 0000  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                            ??_MCP9844_GetTemperatureValue 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 1832  
                             RN487X_EnterCmdMode@cmdPrompt 182D  
                            __end_of_EUSART1_RxDataHandler 0A15  
                                  _rdBlkRegCompleteHandler 09B4  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 08F3  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 163A  
                                     __end_of_RN487X_Delay 1728  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 007C  
                                     __end_of_RN487X_Reset 17B3  
                                  _MCP9844_CalcTemperature 0B65  
                                     __end_of_RN487X_Write 17BF  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1787  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 0829  
                                     __end_of_EUSART1_Read 0BFC  
                                     __end_of_EUSART2_Read 0BD6  
                                      _LIGHTBLUE_SplitByte 0E06  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 080C  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 0A48  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 0F84  
                                    __end_of_I2C1_DO_RESET 169B  
                                   ?_i2c_read2ByteRegister 0024  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 096D  
                                 _LIGHTBLUE_SendSerialData 0249  
                                            _eusart1RxHead 005B  
                                            _eusart1TxHead 005E  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 005A  
                                            _eusart2TxHead 0064  
                                               __pbssBANK0 0048  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0061  
                                            _eusart1TxTail 005D  
                          __end_of_I2C1_MasterWaitForEvent 16B1  
                        _EUSART1_TxDefaultInterruptHandler 014C  
                                            _eusart2TxTail 0063  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 0BB0  
                            __end_of_rd2RegCompleteHandler 087C  
                                       _DELAY_milliseconds 092B  
                             __end_of_LIGHTBLUE_Initialize 16B7  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 088D  
                                    _rd1RegCompleteHandler 085A  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1682  
                                    _wr1RegCompleteHandler 0849  
                          __end_of_EUSART1_SetErrorHandler 16C9  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 00A8  
                           LIGHTBLUE_SendSerialData@length 0078  
                                       ?_I2C1_DO_SEND_STOP 0070  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                          _I2C1_MasterOpen 17D8  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 163A  
                                          _I2C1_Initialize 174C  
                             __end_of_LIGHTBLUE_SendPacket 037F  
                                      __end_of_I2C1_Poller 17D8  
                            __end_of_LIGHTBLUE_AccelSensor 0DD8  
                                ??_BMA253_NewAccelDataRdyX 007B  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 16CF  
                           _EUSART1_SetFramingErrorHandler 16C9  
                                                  ?_strstr 0078  
                                                  u1130_20 003D  
                                                  u1122_20 000B  
                                                  u1130_21 003C  
                                                  u1122_21 000A  
                                                  u1131_20 0048  
                                                  u1123_20 000F  
                                                  u1131_21 0047  
                                                  u1123_21 000E  
                                                  u1132_20 004C  
                                                  u1124_20 0017  
                                                  u1132_21 004B  
                                                  u1124_21 0016  
                                                  u1125_20 001B  
                                                  u1125_21 001A  
                                                  u1038_20 0995  
                                                  u1126_20 001F  
                                                  u1038_21 0994  
                                                  u1126_21 001E  
                                    _eusart2RxStatusBuffer 00D5  
                                                  u1039_20 0A0F  
                                                  u1127_20 002A  
                                                  u1039_21 0A0E  
                                                  u1127_21 0029  
                                                  u1080_20 0F3C  
                                                  u1128_20 002E  
                                                  u1080_21 0F3B  
                                                  u1128_21 002D  
                                                  u1081_20 0B03  
                                                  u1129_20 0039  
                                                  u1081_21 0B02  
                                                  u1129_21 0038  
                                                  u1082_20 0B15  
                                                  u1082_21 0B14  
                                                  u1083_20 0F52  
                                                  u1059_20 0821  
                                                  u1083_21 0F51  
                                                  u1059_21 0820  
                                                  u1084_20 0F63  
                                                  u1076_20 0AE1  
                                                  u1084_21 0F62  
                                                  u1076_21 0AE0  
                                                  u1085_20 0F79  
                                                  u1077_20 0AF3  
                                                  u1085_21 0F78  
                                                  u1077_21 0AF2  
                                                  u1078_20 0F18  
                                                  u1086_20 172D  
                                                  u1078_21 0F17  
                                                  u1086_21 172C  
                                                  u1079_20 0F28  
                                                  u1079_21 0F27  
                                                  i1l13350 0995  
                                                  i1l13352 0996  
                                                  i1l13344 0984  
                                                  i1l13370 0A0F  
                                                  i1l13346 098B  
                                                  i1l13522 1655  
                                                  i1l13372 0A10  
                                                  i1l13364 09FC  
                                                  i1l13348 098F  
                                                  i1l13524 1651  
                                                  i1l13366 0A04  
                                                  i1l14270 0017  
                                                  i1l13368 0A09  
                                                  i1l13560 1649  
                                                  i1l14280 0039  
                                                  i1l14272 001B  
                                                  i1l14264 0006  
                                                  i1l14282 003D  
                                                  i1l14274 001F  
                                                  i1l14266 000B  
                                                  i1l13900 0F6F  
                                                  i1l13652 081A  
                                                  i1l14284 0048  
                                                  i1l14276 002A  
                                                  i1l14268 000F  
                                                  i1l13558 164D  
                                                  i1l13902 0F79  
                                                  i1l13654 0821  
                                                  i1l14286 004C  
                                                  i1l14278 002E  
                                                  i1l13904 0F80  
                                                  i1l13656 0826  
                                                  i1l13850 0AF3  
                                                  i1l13842 0ADA  
                                                  i1l13906 1728  
                                                  i1l13860 0F1D  
                                                  i1l13852 0AF4  
                                                  i1l13844 0AE1  
                                                  i1l13908 172D  
                                                  i1l13870 0F3C  
                                                  i1l13862 0F23  
                                                  i1l13854 0F0E  
                                                  i1l13846 0AE8  
                                                  i1l13872 0F43  
                                                  i1l13864 0F28  
                                                  i1l13856 0F13  
                                                  i1l13848 0AED  
                                                  i1l13880 0B0F  
                                                  i1l13866 0F2D  
                                                  i1l13858 0F18  
                                                  i1l13890 0F52  
                                                  i1l13882 0B15  
                                                  i1l13874 0AFC  
                                                  i1l13868 0F33  
                                                  i1l13892 0F58  
                                                  i1l13884 0B16  
                                                  i1l13876 0B03  
                                                  i1l13894 0F5E  
                                                  i1l13886 0F47  
                                                  i1l13878 0B0A  
                                                  i1l13896 0F63  
                                                  i1l13888 0F4D  
                                                  i1l13898 0F69  
                                    ?_RN487X_EnterDataMode 0070  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 16A5  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 0EA0  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1220 0849  
          _wr2RegCompleteHandler@i2c1_master_example$F1220 0838  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1214 08C0  
          _wr1RegCompleteHandler@i2c1_master_example$F1214 08AF  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1231 09E4  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1231 09CC  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1208 08AF  
          _rd2RegCompleteHandler@i2c1_master_example$F1208 089E  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1197 089E  
          _rd1RegCompleteHandler@i2c1_master_example$F1197 088D  
                              __end_of_EUSART2_Receive_ISR 0F47  
                       __end_of_IOCAF6_SetInterruptHandler 1705  
                               _IOCAF6_SetInterruptHandler 16FF  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1643  
                                                  _SSP1ADD 018D  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 0838  
                               _LIGHTBLUE_SetErrorLedValue 0829  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataX 0D20  
                                     _BMA253_GetAccelDataY 0D4E  
                                     _BMA253_GetAccelDataZ 0D7C  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 07FB  
                                          _asyncBufferSize 0068  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1028  
                                       _i2c1_driver_i2cISR 004E  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1687  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 0E6B  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                                        _RN487X_FilterData 0407  
                                 __end_of_RN487X_DataReady 0A9B  
                             __end_of_LIGHTBLUE_PushButton 0917  
                                ??_MCP9844_CalcTemperature 002F  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1743  
                               __end_of_EUSART1_is_tx_done 1669  
                          __end_of_EUSART2_SetErrorHandler 16E7  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 179D  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 07FB  
                                                  __ptext2 0957  
                                                  __ptext3 0917  
                                                  __ptext4 177D  
                                                  __ptext5 065F  
                                                  __ptext6 16FF  
                                                  __ptext7 1773  
                                                  __ptext8 174C  
                                                  __ptext9 0FC2  
                                 _I2C1_MasterEnableRestart 1637  
                         MCP9844_CalcTemperature@lowerByte 0035  
                                __end_of_I2C1_MasterIsNack 16AB  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1659  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1655  
                                    _OSCILLATOR_Initialize 1773  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1646  
                                 __end_of_I2C1_DO_TX_EMPTY 0CF3  
                                       _EUSART1_Initialize 0F84  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 1832  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1769  
                   MCP9844_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1706  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataX 0070  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0574  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1678  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1661  
                      ?_RN487X_Read@rn487x_interface$F1340 0070  
                     ??_RN487X_Read@rn487x_interface$F1342 0073  
               __end_of_RN487X_Read@rn487x_interface$F1339 175F  
                       _RN487X_Read@rn487x_interface$F1339 1755  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 0957  
                              _LIGHTBLUE_TemperatureSensor 0941  
                                      _I2C1_MasterClearIrq 162B  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1665  
                           __end_of_rn487x_PrintMessageEnd 0614  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 170B  
                               __end_of_I2C1_MasterStartRx 1640  
                              _EUSART1_OverrunErrorHandler 0146  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 170C  
                                   _I2C1_DO_SEND_ADR_WRITE 1718  
                         MCP9844_CalcTemperature@upperByte 0034  
                                      ?_RN487X_is_rx_ready 0070  
                                __end_of_RN487X_FilterData 046E  
                             __end_of_I2C1_DO_SEND_RESTART 1682  
                                  __end_of_I2C1_MasterOpen 17E5  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 163D  
                                  __end_of_I2C1_Initialize 1755  
                    __end_of_EUSART1_SetRxInterruptHandler 16DB  
                            _EUSART1_SetRxInterruptHandler 16D5  
                                              _I2C1_Poller 17CB  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 0FC2  
                            __end_of_I2C1_MasterDisableIrq 1634  
                                              _I2C1_Status 00A0  
                              LIGHTBLUE_PerformAction@data 0027  
                          __end_of_protocol_version_number 1836  
                               __end_of_RN487X_IsConnected 1649  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1659  
                      __end_of_I2C1_SetAddressNackCallback 179D  
                              _I2C1_SetAddressNackCallback 1792  
                                __end_of_RN487X_IndicateRx 17A8  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 167D  
                               _I2C1_DO_SEND_RESTART_WRITE 1678  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                      _EUSART2_is_rx_ready 173A  
                                                  strlen@s 0071  
                                           __deviceAddress 0056  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 06A8  
                          __end_of_rdBlkRegCompleteHandler 09CC  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 16B1  
                                  _statusBuffer@main$F3736 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00ED  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1720  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 07BA  
                                     _LIGHTBLUE_SendPacket 02F3  
                                             _RN487X_Reset 17A8  
                                _LIGHTBLUE_GetDataLedValue 16B7  
                                             _RN487X_Write 17B3  
                                           __end_of_RN487X 107A  
                                             _EUSART1_Read 0BD6  
                                             _EUSART2_Read 0BB0  
                         __end_of_LIGHTBLUE_GetButtonValue 16C3  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 0048  
                            __end_of_EUSART2_RxDataHandler 099C  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 0CF3  
                                __end_of_RN487X_SetOutputs 06F0  
                                           _I2C1_DO_RX_ACK 1687  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0065  
                          __end_of_I2C1_CallbackReturnStop 1629  
                            __end_of_I2C1_MasterSendTxData 166E  
                                           __end_of_strchr 0AB9  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 0A48  
                                           __end_of_strlen 0A2E  
                                           __end_of_strstr 0521  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0033  
                                              ??_I2C1_Open 0071  
                                      _i2c_busCollisionISR 0000  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataX 002A  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 0904  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                    __end_of_EUSART1_Write 0C4A  
                                    __end_of_EUSART2_Write 0C23  
                                    ?_LIGHTBLUE_SendPacket 0077  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 16F3  
                           _EUSART2_SetOverrunErrorHandler 16ED  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                   MCP9844_CalcTemperature@temperatureData 0036  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                   __end_of_I2C1_DO_RX_ACK 168C  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 09FC  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 0B8A  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 0158  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0059  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 0060  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 167D  
                        _EUSART1_RxDefaultInterruptHandler 014A  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                                            __pcstackBANK2 0169  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                      __end_of_RN487X_Init 04CC  
                                      __end_of_RN487X_Read 080C  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 096D  
                                     __end_of_I2C1_DO_IDLE 1673  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1718  
                      __end_of_MCP9844_GetTemperatureValue 17F2  
                              _MCP9844_GetTemperatureValue 17E5  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0066  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00ED  
                                                __pnvBANK2 0144  
                                    _rd2RegCompleteHandler 086B  
                                    __end_of_fsmStateTable 1068  
                                                _main$5367 016A  
                                   _PIN_MANAGER_Initialize 065F  
                                    _wr2RegCompleteHandler 087C  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 0C72  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 1687  
                                                __ptext101 1682  
                                                __ptext110 166E  
                                                __ptext102 167D  
                                                __ptext111 0CC6  
                                                __ptext103 1678  
                                                __ptext120 1627  
                                                __ptext112 1643  
                                                __ptext104 1673  
                                                __ptext121 09CC  
                                                __ptext113 16A5  
                                                __ptext105 1711  
                                                __ptext130 0838  
                                                __ptext122 08AF  
                                                __ptext114 1669  
                                                __ptext106 0777  
                                                __ptext131 1787  
                                                __ptext123 089E  
                                                __ptext115 165D  
                                                __ptext107 0521  
                                                __ptext140 162B  
                                                __ptext132 0B41  
                                                __ptext124 088D  
                                                __ptext116 1640  
                                                __ptext108 1718  
                                                __ptext133 17F2  
                                                __ptext125 09B4  
                                                __ptext117 1659  
                                                __ptext109 1731  
                                                __ptext150 1625  
                                                __ptext142 1728  
                                                __ptext134 163A  
                                                __ptext126 087C  
                                                __ptext118 163D  
                                                __ptext151 1651  
                                                __ptext143 081A  
                                                __ptext135 1637  
                                                __ptext127 086B  
                                                __ptext119 1629  
                                                __ptext152 0984  
                                                __ptext144 1626  
                                                __ptext136 1634  
                                                __ptext128 085A  
                                                __ptext153 164D  
                                                __ptext145 0AFC  
                                                __ptext137 099C  
                                                __ptext129 0849  
                                                __ptext154 1624  
                                                __ptext146 0ADA  
                                                __ptext138 1631  
                                                __ptext155 1649  
                                                __ptext147 0F47  
                                                __ptext139 162E  
                                                __ptext156 09FC  
                                                __ptext148 0F0E  
                                                __ptext149 1655  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 0050  
                                 _LIGHTBLUE_GetButtonValue 16BD  
                        _EUSART2_TxDefaultInterruptHandler 0156  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                  _I2C1_MasterWaitForEvent 16AB  
                                         _I2C1_MasterClose 162E  
                                           _I2C1_SetBuffer 17F2  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006D  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1634  
                                                _connected 0069  
                                         _I2C1_MasterWrite 169B  
                                    _LIGHTBLUE_AccelSensor 0DAA  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                   ?_rdBlkRegCompleteHandler@strncmp$F4802 0078  
                  ??_rdBlkRegCompleteHandler@strncmp$F4804 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4790 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4792 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4784 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4793 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4786 0079  
                    ??_rd2RegCompleteHandler@strncmp$F4795 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4796 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4798 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1651  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 164D  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 0144  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 16C3  
                              __end_of_LIGHTBLUE_SplitByte 0E37  
                         __end_of_I2C1_CallbackReturnReset 162B  
                              __end_of_LIGHTBLUE_SplitWord 081A  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                       _EUSART1_is_tx_done 1665  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 0B41  
                                        _RN487X_is_tx_done 175F  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0777  
                                               _I2C1_DO_TX 0521  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1705  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006C  
                                               _I2C1_Close 099C  
                    __end_of_LIGHTBLUE_SendProtocolVersion 0E6B  
                            _LIGHTBLUE_SendProtocolVersion 0E37  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 0C9B  
                             __end_of_I2C1_MasterGetRxData 1643  
                                                 _PIR0bits 070C  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                       _I2C1_MasterSendAck 165D  
                                 ?_BMA253_NewAccelDataRdyX 0070  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 0B41  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 0B1E  
                                _I2C1_DO_SEND_RESTART_READ 1673  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                       _EUSART2_is_tx_done 1661  
                                   __end_of_I2C1_SetBuffer 1800  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1792  
                             _I2C1_SetDataCompleteCallback 1787  
                                       _I2C1_MasterStartRx 163D  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0040  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 046E  
                                              _RN487X_Read 0800  
                                      ?_EUSART2_is_tx_done 0070  
                             __end_of_RN487X_SetSystemMode 17CB  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 0C72  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1646  
                            __end_of_i2c_read1ByteRegister 065F  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1720  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1696  
                                              _asyncBuffer 004C  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                __end_of_RN487X_is_tx_done 1769  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 16E1  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 006A  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0150  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                             __end_of_I2C1_MasterOperation 0ADA  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 0F0E  
                                 ?_MCP9844_CalcTemperature 002D  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 16E1  
                            _EUSART1_SetTxInterruptHandler 16DB  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 16F9  
                            _EUSART2_SetRxInterruptHandler 16F3  
                      LIGHTBLUE_ParseIncomingPacket@length 006B  
       wr2RegCompleteHandler@i2c1_master_example$F1220@ptr 0078  
       wr1RegCompleteHandler@i2c1_master_example$F1214@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1231@ptr 0078  
       rd2RegCompleteHandler@i2c1_master_example$F1208@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
       rd1RegCompleteHandler@i2c1_master_example$F1197@ptr 0078  
                              __end_of_rn487x_PrintMessage 0EA0  
                                    _I2C1_MasterDisableIrq 1631  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                     ??_RN487X_IsConnected 0071  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 164D  
                              _EUSART1_DefaultErrorHandler 1649  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 174C  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 07FB  
                                     _EUSART2_ErrorHandler 014E  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0038  
                            __end_of_i2c_read2ByteRegister 0777  
                                                 __ptext10 16F9  
                                                 __ptext11 16F3  
                                                 __ptext20 16C3  
                                                 __ptext12 16ED  
                                                 __ptext21 09E4  
                                                 __ptext13 16E7  
                                                 __ptext30 05C6  
                                                 __ptext22 0800  
                                                 __ptext14 16E1  
                                                 __ptext31 0E6B  
                                                 __ptext23 0A7F  
                                                 __ptext15 0F84  
                                                 __ptext40 17A8  
                                                 __ptext32 0A2E  
                                                 __ptext24 0407  
                                                 __ptext16 16DB  
                                                 __ptext41 179D  
                                                 __ptext33 0B1E  
                                                 __ptext25 06F0  
                                                 __ptext17 16D5  
                                                 __ptext50 017D  
                                                 __ptext42 0941  
                                                 __ptext34 1646  
                                                 __ptext26 04CC  
                                                 __ptext18 16CF  
                                                 __ptext51 0ED6  
                                                 __ptext43 17E5  
                                                 __ptext35 046E  
                                                 __ptext27 0574  
                                                 __ptext19 16C9  
                                                 __ptext60 1665  
                                                 __ptext52 0829  
                                                 __ptext44 0B65  
                                                 __ptext36 1769  
                                                 __ptext28 0A9B  
                                                 __ptext61 1661  
                                                 __ptext53 0A63  
                                                 __ptext45 0734  
                                                 __ptext37 1743  
                                                 __ptext29 0CF3  
                                                 __ptext70 16B7  
                                                 __ptext62 0C9B  
                                                 __ptext54 06A8  
                                                 __ptext46 0249  
                                                 __ptext38 173A  
                                                 __ptext71 16B1  
                                                 __ptext63 1755  
                                                 __ptext55 037F  
                                                 __ptext47 0E37  
                                                 __ptext39 17BF  
                                                 __ptext80 07BA  
                                                 __ptext72 0DAA  
                                                 __ptext64 0BD6  
                                                 __ptext56 0A48  
                                                 __ptext48 0904  
                                                 __ptext81 0D7C  
                                                 __ptext73 080C  
                                                 __ptext65 0BB0  
                                                 __ptext57 096D  
                                                 __ptext49 16BD  
                                                 __ptext90 17D8  
                                                 __ptext82 08E2  
                                                 __ptext74 0E06  
                                                 __ptext66 1720  
                                                 __ptext58 0DD8  
                                                 __ptext91 169B  
                                                 __ptext83 0D4E  
                                                 __ptext75 02F3  
                                                 __ptext67 092B  
                                                 __ptext59 175F  
                                                 __ptext92 0AB9  
                                                 __ptext84 08D1  
                                                 __ptext76 0A15  
                                                 __ptext68 0B8A  
                                                 __ptext93 17CB  
                                                 __ptext85 0D20  
                                                 __ptext77 17B3  
                                                 __ptext69 16A0  
                                                 __ptext94 16AB  
                                                 __ptext86 08C0  
                                                 __ptext78 0C23  
                                                 __ptext95 0C72  
                                                 __ptext87 0614  
                                                 __ptext79 0BFC  
                                                 __ptext96 0C4A  
                                                 __ptext88 1792  
                                                 __ptext97 1696  
                                                 __ptext89 0EA0  
                                                 __ptext98 1691  
                                                 __ptext99 168C  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 081A  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1629  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1626  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1625  
                          __end_of_BMA253_NewAccelDataRdyX 08D1  
                          __end_of_BMA253_NewAccelDataRdyY 08E2  
                          __end_of_BMA253_NewAccelDataRdyZ 08F3  
                                          _lightBlueSerial 0220  
                              __end_of_I2C1_MasterClearIrq 162E  
                             __end_of_I2C1_DO_RX_NACK_STOP 1691  
                                              ?_I2C1_Close 0070  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 16A5  
                               _LIGHTBLUE_GetErrorLedValue 16A0  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1696  
                             RN487X_GetInputsValues@F12901 006E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 0984  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 173A  
                              _EUSART1_FramingErrorHandler 0148  
                                             _I2C1_DO_IDLE 166E  
                                      _EUSART1_Receive_ISR 0F47  
                                             _I2C1_DO_RCEN 1711  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 165D  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1743  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                                           __pstringtext10 1800  
                                           __pstringtext11 1817  
                                           __pstringtext12 1822  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1640  
                                    _I2C1_MasterSendTxData 1669  
                            __end_of_RN487X_MessageHandler 0734  
                                ??_EUSART2_SetErrorHandler 0073  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                          __end_of_MCP9844_CalcTemperature 0B8A  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1631  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1637  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 16A0  
                                   RN487X_RebootCmd@reboot 180C  
                   __end_of_EUSART1_SetOverrunErrorHandler 16D5  
                           _EUSART1_SetOverrunErrorHandler 16CF  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1627  
                             __end_of_EUSART1_Transmit_ISR 0B1E  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0057  
                                     _RN487X_SetSystemMode 17BF  
                                     _I2C1_DO_ADDRESS_NACK 0C4A  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 09FC  
                            _RN487X_SetAsyncMessageHandler 09E4  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0058  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1000  
                                            __pstringtext2 1028  
                                            __pstringtext3 1048  
                                            __pstringtext4 1068  
                                            __pstringtext5 1832  
                                            __pstringtext6 1834  
                                            __pstringtext7 180C  
                                            __pstringtext8 1828  
                                            __pstringtext9 182D  
                                      _EUSART2_Receive_ISR 0F0E  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 0B65  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 1627  
                           _IOCAF6_DefaultInterruptHandler 1626  
                                     _I2C1_MasterOperation 0AB9  
                                          _TMR0_Initialize 0917  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$421 002D  
                        _LIGHTBLUE_ParseIncomingPacket$422 002F  
                        _LIGHTBLUE_ParseIncomingPacket$423 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 06A8  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 086B  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005F  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 0D20  
                                          _PIN_MANAGER_IOC 1728  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 085A  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 0A7F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 0154  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
