

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 20 12:42:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,inline,delta=2
   200                           	psect	intentry,global,class=CODE,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	text177,local,class=CODE,merge=1,delta=2
   215                           	psect	text178,local,class=CODE,merge=1,delta=2
   216                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   217                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   218                           	dabs	1,0x7E,2
   219     0000                     
   220                           ; Version 2.35
   221                           ; Generated 01/06/2021 GMT
   222                           ; 
   223                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution. Publication is not required when
   237                           ;        this file is used in an embedded application.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC16LF18456 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255     0000                     	;# 
   256     0001                     	;# 
   257     0002                     	;# 
   258     0003                     	;# 
   259     0004                     	;# 
   260     0005                     	;# 
   261     0006                     	;# 
   262     0007                     	;# 
   263     0008                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     0010                     	;# 
   271     0012                     	;# 
   272     0013                     	;# 
   273     0014                     	;# 
   274     0016                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001C                     	;# 
   279     008C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     010F                     	;# 
   313     0110                     	;# 
   314     0111                     	;# 
   315     0112                     	;# 
   316     0113                     	;# 
   317     0114                     	;# 
   318     0115                     	;# 
   319     0116                     	;# 
   320     0117                     	;# 
   321     0118                     	;# 
   322     0119                     	;# 
   323     0119                     	;# 
   324     0119                     	;# 
   325     011A                     	;# 
   326     011A                     	;# 
   327     011A                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011B                     	;# 
   332     011B                     	;# 
   333     011C                     	;# 
   334     011C                     	;# 
   335     011C                     	;# 
   336     011D                     	;# 
   337     011D                     	;# 
   338     011D                     	;# 
   339     011E                     	;# 
   340     011E                     	;# 
   341     011E                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     011F                     	;# 
   346     011F                     	;# 
   347     018C                     	;# 
   348     018D                     	;# 
   349     018E                     	;# 
   350     018F                     	;# 
   351     0190                     	;# 
   352     0191                     	;# 
   353     0192                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0198                     	;# 
   357     0199                     	;# 
   358     019A                     	;# 
   359     019B                     	;# 
   360     019C                     	;# 
   361     020C                     	;# 
   362     020D                     	;# 
   363     020E                     	;# 
   364     020E                     	;# 
   365     020F                     	;# 
   366     020F                     	;# 
   367     0210                     	;# 
   368     0210                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0214                     	;# 
   374     0214                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0216                     	;# 
   378     0216                     	;# 
   379     0217                     	;# 
   380     0217                     	;# 
   381     0218                     	;# 
   382     0219                     	;# 
   383     021A                     	;# 
   384     021A                     	;# 
   385     021B                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021C                     	;# 
   389     021D                     	;# 
   390     021D                     	;# 
   391     021E                     	;# 
   392     021F                     	;# 
   393     028C                     	;# 
   394     028C                     	;# 
   395     028D                     	;# 
   396     028D                     	;# 
   397     028E                     	;# 
   398     028F                     	;# 
   399     0290                     	;# 
   400     0291                     	;# 
   401     0292                     	;# 
   402     0292                     	;# 
   403     0293                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0296                     	;# 
   408     0297                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     0299                     	;# 
   413     029A                     	;# 
   414     029B                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029F                     	;# 
   418     030C                     	;# 
   419     030C                     	;# 
   420     030D                     	;# 
   421     030E                     	;# 
   422     030F                     	;# 
   423     0310                     	;# 
   424     0310                     	;# 
   425     0311                     	;# 
   426     0312                     	;# 
   427     0313                     	;# 
   428     0314                     	;# 
   429     0314                     	;# 
   430     0315                     	;# 
   431     0316                     	;# 
   432     0317                     	;# 
   433     0318                     	;# 
   434     0318                     	;# 
   435     0319                     	;# 
   436     031A                     	;# 
   437     031B                     	;# 
   438     031C                     	;# 
   439     031C                     	;# 
   440     031D                     	;# 
   441     031E                     	;# 
   442     031F                     	;# 
   443     038C                     	;# 
   444     038C                     	;# 
   445     038D                     	;# 
   446     038E                     	;# 
   447     0390                     	;# 
   448     0390                     	;# 
   449     0391                     	;# 
   450     0392                     	;# 
   451     048C                     	;# 
   452     048C                     	;# 
   453     048D                     	;# 
   454     048E                     	;# 
   455     048F                     	;# 
   456     048F                     	;# 
   457     0490                     	;# 
   458     0491                     	;# 
   459     0492                     	;# 
   460     0492                     	;# 
   461     0493                     	;# 
   462     0494                     	;# 
   463     0495                     	;# 
   464     0495                     	;# 
   465     0496                     	;# 
   466     0497                     	;# 
   467     0498                     	;# 
   468     0499                     	;# 
   469     049A                     	;# 
   470     049B                     	;# 
   471     049C                     	;# 
   472     049D                     	;# 
   473     050C                     	;# 
   474     050C                     	;# 
   475     050D                     	;# 
   476     050E                     	;# 
   477     050F                     	;# 
   478     050F                     	;# 
   479     0510                     	;# 
   480     0511                     	;# 
   481     0512                     	;# 
   482     0512                     	;# 
   483     0513                     	;# 
   484     0514                     	;# 
   485     0515                     	;# 
   486     0515                     	;# 
   487     0516                     	;# 
   488     0517                     	;# 
   489     0518                     	;# 
   490     0519                     	;# 
   491     051A                     	;# 
   492     051B                     	;# 
   493     051C                     	;# 
   494     051D                     	;# 
   495     058C                     	;# 
   496     058C                     	;# 
   497     058D                     	;# 
   498     058E                     	;# 
   499     058F                     	;# 
   500     058F                     	;# 
   501     0590                     	;# 
   502     0591                     	;# 
   503     0592                     	;# 
   504     0593                     	;# 
   505     059C                     	;# 
   506     059C                     	;# 
   507     059D                     	;# 
   508     059D                     	;# 
   509     059E                     	;# 
   510     059F                     	;# 
   511     060C                     	;# 
   512     060C                     	;# 
   513     060D                     	;# 
   514     060D                     	;# 
   515     060E                     	;# 
   516     060F                     	;# 
   517     0610                     	;# 
   518     0611                     	;# 
   519     0612                     	;# 
   520     0613                     	;# 
   521     0614                     	;# 
   522     0616                     	;# 
   523     0616                     	;# 
   524     0617                     	;# 
   525     0617                     	;# 
   526     0618                     	;# 
   527     0619                     	;# 
   528     061A                     	;# 
   529     061B                     	;# 
   530     061C                     	;# 
   531     061D                     	;# 
   532     061E                     	;# 
   533     068C                     	;# 
   534     068D                     	;# 
   535     068E                     	;# 
   536     068F                     	;# 
   537     0690                     	;# 
   538     0691                     	;# 
   539     0692                     	;# 
   540     0693                     	;# 
   541     0694                     	;# 
   542     070C                     	;# 
   543     070D                     	;# 
   544     070E                     	;# 
   545     070F                     	;# 
   546     0710                     	;# 
   547     0711                     	;# 
   548     0712                     	;# 
   549     0713                     	;# 
   550     0714                     	;# 
   551     0716                     	;# 
   552     0717                     	;# 
   553     0718                     	;# 
   554     0719                     	;# 
   555     071A                     	;# 
   556     071B                     	;# 
   557     071C                     	;# 
   558     071D                     	;# 
   559     071E                     	;# 
   560     0796                     	;# 
   561     0797                     	;# 
   562     0798                     	;# 
   563     0799                     	;# 
   564     079A                     	;# 
   565     079B                     	;# 
   566     079C                     	;# 
   567     079D                     	;# 
   568     080C                     	;# 
   569     080D                     	;# 
   570     080E                     	;# 
   571     080F                     	;# 
   572     0810                     	;# 
   573     0811                     	;# 
   574     0813                     	;# 
   575     0814                     	;# 
   576     081A                     	;# 
   577     081A                     	;# 
   578     081B                     	;# 
   579     081C                     	;# 
   580     081C                     	;# 
   581     081D                     	;# 
   582     081E                     	;# 
   583     081F                     	;# 
   584     088C                     	;# 
   585     088D                     	;# 
   586     088E                     	;# 
   587     088F                     	;# 
   588     0890                     	;# 
   589     0891                     	;# 
   590     0892                     	;# 
   591     0893                     	;# 
   592     0895                     	;# 
   593     0896                     	;# 
   594     0897                     	;# 
   595     0898                     	;# 
   596     0899                     	;# 
   597     089A                     	;# 
   598     089B                     	;# 
   599     090C                     	;# 
   600     090E                     	;# 
   601     090F                     	;# 
   602     091F                     	;# 
   603     098F                     	;# 
   604     098F                     	;# 
   605     0990                     	;# 
   606     0991                     	;# 
   607     0992                     	;# 
   608     0993                     	;# 
   609     0994                     	;# 
   610     0995                     	;# 
   611     0996                     	;# 
   612     0997                     	;# 
   613     0A19                     	;# 
   614     0A19                     	;# 
   615     0A1A                     	;# 
   616     0A1A                     	;# 
   617     0A1B                     	;# 
   618     0A1B                     	;# 
   619     0A1B                     	;# 
   620     0A1C                     	;# 
   621     0A1C                     	;# 
   622     0A1D                     	;# 
   623     0A1D                     	;# 
   624     0A1E                     	;# 
   625     0A1E                     	;# 
   626     0A1F                     	;# 
   627     0A1F                     	;# 
   628     0A1F                     	;# 
   629     1E0F                     	;# 
   630     1E10                     	;# 
   631     1E11                     	;# 
   632     1E12                     	;# 
   633     1E13                     	;# 
   634     1E14                     	;# 
   635     1E15                     	;# 
   636     1E16                     	;# 
   637     1E17                     	;# 
   638     1E18                     	;# 
   639     1E19                     	;# 
   640     1E1A                     	;# 
   641     1E1B                     	;# 
   642     1E1C                     	;# 
   643     1E1D                     	;# 
   644     1E1E                     	;# 
   645     1E1F                     	;# 
   646     1E20                     	;# 
   647     1E21                     	;# 
   648     1E22                     	;# 
   649     1E23                     	;# 
   650     1E24                     	;# 
   651     1E25                     	;# 
   652     1E26                     	;# 
   653     1E27                     	;# 
   654     1E28                     	;# 
   655     1E29                     	;# 
   656     1E2A                     	;# 
   657     1E2B                     	;# 
   658     1E2C                     	;# 
   659     1E2D                     	;# 
   660     1E2E                     	;# 
   661     1E2F                     	;# 
   662     1E30                     	;# 
   663     1E31                     	;# 
   664     1E32                     	;# 
   665     1E33                     	;# 
   666     1E34                     	;# 
   667     1E35                     	;# 
   668     1E36                     	;# 
   669     1E37                     	;# 
   670     1E8F                     	;# 
   671     1E90                     	;# 
   672     1E91                     	;# 
   673     1E92                     	;# 
   674     1E93                     	;# 
   675     1E94                     	;# 
   676     1E95                     	;# 
   677     1E96                     	;# 
   678     1E97                     	;# 
   679     1E9C                     	;# 
   680     1E9D                     	;# 
   681     1E9E                     	;# 
   682     1EA1                     	;# 
   683     1EA2                     	;# 
   684     1EA3                     	;# 
   685     1EA4                     	;# 
   686     1EA5                     	;# 
   687     1EA9                     	;# 
   688     1EAA                     	;# 
   689     1EAB                     	;# 
   690     1EAC                     	;# 
   691     1EB1                     	;# 
   692     1EB2                     	;# 
   693     1EB3                     	;# 
   694     1EB8                     	;# 
   695     1EB9                     	;# 
   696     1EBA                     	;# 
   697     1EBB                     	;# 
   698     1EBC                     	;# 
   699     1EBD                     	;# 
   700     1EBE                     	;# 
   701     1EC3                     	;# 
   702     1EC5                     	;# 
   703     1EC6                     	;# 
   704     1EC7                     	;# 
   705     1EC8                     	;# 
   706     1EC9                     	;# 
   707     1ECA                     	;# 
   708     1ECB                     	;# 
   709     1ECC                     	;# 
   710     1ECD                     	;# 
   711     1ECE                     	;# 
   712     1F10                     	;# 
   713     1F11                     	;# 
   714     1F12                     	;# 
   715     1F13                     	;# 
   716     1F14                     	;# 
   717     1F15                     	;# 
   718     1F16                     	;# 
   719     1F17                     	;# 
   720     1F18                     	;# 
   721     1F19                     	;# 
   722     1F1A                     	;# 
   723     1F1B                     	;# 
   724     1F1C                     	;# 
   725     1F1D                     	;# 
   726     1F1E                     	;# 
   727     1F1F                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F26                     	;# 
   735     1F27                     	;# 
   736     1F38                     	;# 
   737     1F39                     	;# 
   738     1F3A                     	;# 
   739     1F3B                     	;# 
   740     1F3C                     	;# 
   741     1F3D                     	;# 
   742     1F3E                     	;# 
   743     1F3F                     	;# 
   744     1F43                     	;# 
   745     1F44                     	;# 
   746     1F45                     	;# 
   747     1F46                     	;# 
   748     1F47                     	;# 
   749     1F48                     	;# 
   750     1F49                     	;# 
   751     1F4A                     	;# 
   752     1F4E                     	;# 
   753     1F4F                     	;# 
   754     1F50                     	;# 
   755     1F51                     	;# 
   756     1F52                     	;# 
   757     1F53                     	;# 
   758     1F54                     	;# 
   759     1F55                     	;# 
   760     1F65                     	;# 
   761     1F66                     	;# 
   762     1F67                     	;# 
   763     1F68                     	;# 
   764     1F69                     	;# 
   765     1F6A                     	;# 
   766     1F6B                     	;# 
   767     1FE4                     	;# 
   768     1FE5                     	;# 
   769     1FE6                     	;# 
   770     1FE7                     	;# 
   771     1FE8                     	;# 
   772     1FE8                     	;# 
   773     1FE9                     	;# 
   774     1FEA                     	;# 
   775     1FEB                     	;# 
   776     1FED                     	;# 
   777     1FEE                     	;# 
   778     1FEF                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     000E                     	;# 
   794     0010                     	;# 
   795     0012                     	;# 
   796     0013                     	;# 
   797     0014                     	;# 
   798     0016                     	;# 
   799     0018                     	;# 
   800     0019                     	;# 
   801     001A                     	;# 
   802     001C                     	;# 
   803     008C                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     008E                     	;# 
   808     008F                     	;# 
   809     0090                     	;# 
   810     0090                     	;# 
   811     0091                     	;# 
   812     0092                     	;# 
   813     0092                     	;# 
   814     0093                     	;# 
   815     0094                     	;# 
   816     0094                     	;# 
   817     0095                     	;# 
   818     0096                     	;# 
   819     0096                     	;# 
   820     0097                     	;# 
   821     0098                     	;# 
   822     0099                     	;# 
   823     009A                     	;# 
   824     009B                     	;# 
   825     009B                     	;# 
   826     009C                     	;# 
   827     009D                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     010C                     	;# 
   832     010C                     	;# 
   833     010D                     	;# 
   834     010E                     	;# 
   835     010F                     	;# 
   836     010F                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     0119                     	;# 
   848     0119                     	;# 
   849     011A                     	;# 
   850     011A                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011B                     	;# 
   856     011B                     	;# 
   857     011C                     	;# 
   858     011C                     	;# 
   859     011C                     	;# 
   860     011D                     	;# 
   861     011D                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     011E                     	;# 
   865     011E                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     011F                     	;# 
   870     011F                     	;# 
   871     018C                     	;# 
   872     018D                     	;# 
   873     018E                     	;# 
   874     018F                     	;# 
   875     0190                     	;# 
   876     0191                     	;# 
   877     0192                     	;# 
   878     0196                     	;# 
   879     0197                     	;# 
   880     0198                     	;# 
   881     0199                     	;# 
   882     019A                     	;# 
   883     019B                     	;# 
   884     019C                     	;# 
   885     020C                     	;# 
   886     020D                     	;# 
   887     020E                     	;# 
   888     020E                     	;# 
   889     020F                     	;# 
   890     020F                     	;# 
   891     0210                     	;# 
   892     0210                     	;# 
   893     0211                     	;# 
   894     0211                     	;# 
   895     0212                     	;# 
   896     0213                     	;# 
   897     0214                     	;# 
   898     0214                     	;# 
   899     0215                     	;# 
   900     0215                     	;# 
   901     0216                     	;# 
   902     0216                     	;# 
   903     0217                     	;# 
   904     0217                     	;# 
   905     0218                     	;# 
   906     0219                     	;# 
   907     021A                     	;# 
   908     021A                     	;# 
   909     021B                     	;# 
   910     021B                     	;# 
   911     021C                     	;# 
   912     021C                     	;# 
   913     021D                     	;# 
   914     021D                     	;# 
   915     021E                     	;# 
   916     021F                     	;# 
   917     028C                     	;# 
   918     028C                     	;# 
   919     028D                     	;# 
   920     028D                     	;# 
   921     028E                     	;# 
   922     028F                     	;# 
   923     0290                     	;# 
   924     0291                     	;# 
   925     0292                     	;# 
   926     0292                     	;# 
   927     0293                     	;# 
   928     0293                     	;# 
   929     0294                     	;# 
   930     0295                     	;# 
   931     0296                     	;# 
   932     0297                     	;# 
   933     0298                     	;# 
   934     0298                     	;# 
   935     0299                     	;# 
   936     0299                     	;# 
   937     029A                     	;# 
   938     029B                     	;# 
   939     029C                     	;# 
   940     029D                     	;# 
   941     029F                     	;# 
   942     030C                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0310                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     0314                     	;# 
   953     0314                     	;# 
   954     0315                     	;# 
   955     0316                     	;# 
   956     0317                     	;# 
   957     0318                     	;# 
   958     0318                     	;# 
   959     0319                     	;# 
   960     031A                     	;# 
   961     031B                     	;# 
   962     031C                     	;# 
   963     031C                     	;# 
   964     031D                     	;# 
   965     031E                     	;# 
   966     031F                     	;# 
   967     038C                     	;# 
   968     038C                     	;# 
   969     038D                     	;# 
   970     038E                     	;# 
   971     0390                     	;# 
   972     0390                     	;# 
   973     0391                     	;# 
   974     0392                     	;# 
   975     048C                     	;# 
   976     048C                     	;# 
   977     048D                     	;# 
   978     048E                     	;# 
   979     048F                     	;# 
   980     048F                     	;# 
   981     0490                     	;# 
   982     0491                     	;# 
   983     0492                     	;# 
   984     0492                     	;# 
   985     0493                     	;# 
   986     0494                     	;# 
   987     0495                     	;# 
   988     0495                     	;# 
   989     0496                     	;# 
   990     0497                     	;# 
   991     0498                     	;# 
   992     0499                     	;# 
   993     049A                     	;# 
   994     049B                     	;# 
   995     049C                     	;# 
   996     049D                     	;# 
   997     050C                     	;# 
   998     050C                     	;# 
   999     050D                     	;# 
  1000     050E                     	;# 
  1001     050F                     	;# 
  1002     050F                     	;# 
  1003     0510                     	;# 
  1004     0511                     	;# 
  1005     0512                     	;# 
  1006     0512                     	;# 
  1007     0513                     	;# 
  1008     0514                     	;# 
  1009     0515                     	;# 
  1010     0515                     	;# 
  1011     0516                     	;# 
  1012     0517                     	;# 
  1013     0518                     	;# 
  1014     0519                     	;# 
  1015     051A                     	;# 
  1016     051B                     	;# 
  1017     051C                     	;# 
  1018     051D                     	;# 
  1019     058C                     	;# 
  1020     058C                     	;# 
  1021     058D                     	;# 
  1022     058E                     	;# 
  1023     058F                     	;# 
  1024     058F                     	;# 
  1025     0590                     	;# 
  1026     0591                     	;# 
  1027     0592                     	;# 
  1028     0593                     	;# 
  1029     059C                     	;# 
  1030     059C                     	;# 
  1031     059D                     	;# 
  1032     059D                     	;# 
  1033     059E                     	;# 
  1034     059F                     	;# 
  1035     060C                     	;# 
  1036     060C                     	;# 
  1037     060D                     	;# 
  1038     060D                     	;# 
  1039     060E                     	;# 
  1040     060F                     	;# 
  1041     0610                     	;# 
  1042     0611                     	;# 
  1043     0612                     	;# 
  1044     0613                     	;# 
  1045     0614                     	;# 
  1046     0616                     	;# 
  1047     0616                     	;# 
  1048     0617                     	;# 
  1049     0617                     	;# 
  1050     0618                     	;# 
  1051     0619                     	;# 
  1052     061A                     	;# 
  1053     061B                     	;# 
  1054     061C                     	;# 
  1055     061D                     	;# 
  1056     061E                     	;# 
  1057     068C                     	;# 
  1058     068D                     	;# 
  1059     068E                     	;# 
  1060     068F                     	;# 
  1061     0690                     	;# 
  1062     0691                     	;# 
  1063     0692                     	;# 
  1064     0693                     	;# 
  1065     0694                     	;# 
  1066     070C                     	;# 
  1067     070D                     	;# 
  1068     070E                     	;# 
  1069     070F                     	;# 
  1070     0710                     	;# 
  1071     0711                     	;# 
  1072     0712                     	;# 
  1073     0713                     	;# 
  1074     0714                     	;# 
  1075     0716                     	;# 
  1076     0717                     	;# 
  1077     0718                     	;# 
  1078     0719                     	;# 
  1079     071A                     	;# 
  1080     071B                     	;# 
  1081     071C                     	;# 
  1082     071D                     	;# 
  1083     071E                     	;# 
  1084     0796                     	;# 
  1085     0797                     	;# 
  1086     0798                     	;# 
  1087     0799                     	;# 
  1088     079A                     	;# 
  1089     079B                     	;# 
  1090     079C                     	;# 
  1091     079D                     	;# 
  1092     080C                     	;# 
  1093     080D                     	;# 
  1094     080E                     	;# 
  1095     080F                     	;# 
  1096     0810                     	;# 
  1097     0811                     	;# 
  1098     0813                     	;# 
  1099     0814                     	;# 
  1100     081A                     	;# 
  1101     081A                     	;# 
  1102     081B                     	;# 
  1103     081C                     	;# 
  1104     081C                     	;# 
  1105     081D                     	;# 
  1106     081E                     	;# 
  1107     081F                     	;# 
  1108     088C                     	;# 
  1109     088D                     	;# 
  1110     088E                     	;# 
  1111     088F                     	;# 
  1112     0890                     	;# 
  1113     0891                     	;# 
  1114     0892                     	;# 
  1115     0893                     	;# 
  1116     0895                     	;# 
  1117     0896                     	;# 
  1118     0897                     	;# 
  1119     0898                     	;# 
  1120     0899                     	;# 
  1121     089A                     	;# 
  1122     089B                     	;# 
  1123     090C                     	;# 
  1124     090E                     	;# 
  1125     090F                     	;# 
  1126     091F                     	;# 
  1127     098F                     	;# 
  1128     098F                     	;# 
  1129     0990                     	;# 
  1130     0991                     	;# 
  1131     0992                     	;# 
  1132     0993                     	;# 
  1133     0994                     	;# 
  1134     0995                     	;# 
  1135     0996                     	;# 
  1136     0997                     	;# 
  1137     0A19                     	;# 
  1138     0A19                     	;# 
  1139     0A1A                     	;# 
  1140     0A1A                     	;# 
  1141     0A1B                     	;# 
  1142     0A1B                     	;# 
  1143     0A1B                     	;# 
  1144     0A1C                     	;# 
  1145     0A1C                     	;# 
  1146     0A1D                     	;# 
  1147     0A1D                     	;# 
  1148     0A1E                     	;# 
  1149     0A1E                     	;# 
  1150     0A1F                     	;# 
  1151     0A1F                     	;# 
  1152     0A1F                     	;# 
  1153     1E0F                     	;# 
  1154     1E10                     	;# 
  1155     1E11                     	;# 
  1156     1E12                     	;# 
  1157     1E13                     	;# 
  1158     1E14                     	;# 
  1159     1E15                     	;# 
  1160     1E16                     	;# 
  1161     1E17                     	;# 
  1162     1E18                     	;# 
  1163     1E19                     	;# 
  1164     1E1A                     	;# 
  1165     1E1B                     	;# 
  1166     1E1C                     	;# 
  1167     1E1D                     	;# 
  1168     1E1E                     	;# 
  1169     1E1F                     	;# 
  1170     1E20                     	;# 
  1171     1E21                     	;# 
  1172     1E22                     	;# 
  1173     1E23                     	;# 
  1174     1E24                     	;# 
  1175     1E25                     	;# 
  1176     1E26                     	;# 
  1177     1E27                     	;# 
  1178     1E28                     	;# 
  1179     1E29                     	;# 
  1180     1E2A                     	;# 
  1181     1E2B                     	;# 
  1182     1E2C                     	;# 
  1183     1E2D                     	;# 
  1184     1E2E                     	;# 
  1185     1E2F                     	;# 
  1186     1E30                     	;# 
  1187     1E31                     	;# 
  1188     1E32                     	;# 
  1189     1E33                     	;# 
  1190     1E34                     	;# 
  1191     1E35                     	;# 
  1192     1E36                     	;# 
  1193     1E37                     	;# 
  1194     1E8F                     	;# 
  1195     1E90                     	;# 
  1196     1E91                     	;# 
  1197     1E92                     	;# 
  1198     1E93                     	;# 
  1199     1E94                     	;# 
  1200     1E95                     	;# 
  1201     1E96                     	;# 
  1202     1E97                     	;# 
  1203     1E9C                     	;# 
  1204     1E9D                     	;# 
  1205     1E9E                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EA3                     	;# 
  1209     1EA4                     	;# 
  1210     1EA5                     	;# 
  1211     1EA9                     	;# 
  1212     1EAA                     	;# 
  1213     1EAB                     	;# 
  1214     1EAC                     	;# 
  1215     1EB1                     	;# 
  1216     1EB2                     	;# 
  1217     1EB3                     	;# 
  1218     1EB8                     	;# 
  1219     1EB9                     	;# 
  1220     1EBA                     	;# 
  1221     1EBB                     	;# 
  1222     1EBC                     	;# 
  1223     1EBD                     	;# 
  1224     1EBE                     	;# 
  1225     1EC3                     	;# 
  1226     1EC5                     	;# 
  1227     1EC6                     	;# 
  1228     1EC7                     	;# 
  1229     1EC8                     	;# 
  1230     1EC9                     	;# 
  1231     1ECA                     	;# 
  1232     1ECB                     	;# 
  1233     1ECC                     	;# 
  1234     1ECD                     	;# 
  1235     1ECE                     	;# 
  1236     1F10                     	;# 
  1237     1F11                     	;# 
  1238     1F12                     	;# 
  1239     1F13                     	;# 
  1240     1F14                     	;# 
  1241     1F15                     	;# 
  1242     1F16                     	;# 
  1243     1F17                     	;# 
  1244     1F18                     	;# 
  1245     1F19                     	;# 
  1246     1F1A                     	;# 
  1247     1F1B                     	;# 
  1248     1F1C                     	;# 
  1249     1F1D                     	;# 
  1250     1F1E                     	;# 
  1251     1F1F                     	;# 
  1252     1F20                     	;# 
  1253     1F21                     	;# 
  1254     1F22                     	;# 
  1255     1F23                     	;# 
  1256     1F24                     	;# 
  1257     1F25                     	;# 
  1258     1F26                     	;# 
  1259     1F27                     	;# 
  1260     1F38                     	;# 
  1261     1F39                     	;# 
  1262     1F3A                     	;# 
  1263     1F3B                     	;# 
  1264     1F3C                     	;# 
  1265     1F3D                     	;# 
  1266     1F3E                     	;# 
  1267     1F3F                     	;# 
  1268     1F43                     	;# 
  1269     1F44                     	;# 
  1270     1F45                     	;# 
  1271     1F46                     	;# 
  1272     1F47                     	;# 
  1273     1F48                     	;# 
  1274     1F49                     	;# 
  1275     1F4A                     	;# 
  1276     1F4E                     	;# 
  1277     1F4F                     	;# 
  1278     1F50                     	;# 
  1279     1F51                     	;# 
  1280     1F52                     	;# 
  1281     1F53                     	;# 
  1282     1F54                     	;# 
  1283     1F55                     	;# 
  1284     1F65                     	;# 
  1285     1F66                     	;# 
  1286     1F67                     	;# 
  1287     1F68                     	;# 
  1288     1F69                     	;# 
  1289     1F6A                     	;# 
  1290     1F6B                     	;# 
  1291     1FE4                     	;# 
  1292     1FE5                     	;# 
  1293     1FE6                     	;# 
  1294     1FE7                     	;# 
  1295     1FE8                     	;# 
  1296     1FE8                     	;# 
  1297     1FE9                     	;# 
  1298     1FEA                     	;# 
  1299     1FEB                     	;# 
  1300     1FED                     	;# 
  1301     1FEE                     	;# 
  1302     1FEF                     	;# 
  1303     0000                     	;# 
  1304     0001                     	;# 
  1305     0002                     	;# 
  1306     0003                     	;# 
  1307     0004                     	;# 
  1308     0005                     	;# 
  1309     0006                     	;# 
  1310     0007                     	;# 
  1311     0008                     	;# 
  1312     0009                     	;# 
  1313     000A                     	;# 
  1314     000B                     	;# 
  1315     000C                     	;# 
  1316     000D                     	;# 
  1317     000E                     	;# 
  1318     0010                     	;# 
  1319     0012                     	;# 
  1320     0013                     	;# 
  1321     0014                     	;# 
  1322     0016                     	;# 
  1323     0018                     	;# 
  1324     0019                     	;# 
  1325     001A                     	;# 
  1326     001C                     	;# 
  1327     008C                     	;# 
  1328     008C                     	;# 
  1329     008D                     	;# 
  1330     008E                     	;# 
  1331     008E                     	;# 
  1332     008F                     	;# 
  1333     0090                     	;# 
  1334     0090                     	;# 
  1335     0091                     	;# 
  1336     0092                     	;# 
  1337     0092                     	;# 
  1338     0093                     	;# 
  1339     0094                     	;# 
  1340     0094                     	;# 
  1341     0095                     	;# 
  1342     0096                     	;# 
  1343     0096                     	;# 
  1344     0097                     	;# 
  1345     0098                     	;# 
  1346     0099                     	;# 
  1347     009A                     	;# 
  1348     009B                     	;# 
  1349     009B                     	;# 
  1350     009C                     	;# 
  1351     009D                     	;# 
  1352     009D                     	;# 
  1353     009E                     	;# 
  1354     009F                     	;# 
  1355     010C                     	;# 
  1356     010C                     	;# 
  1357     010D                     	;# 
  1358     010E                     	;# 
  1359     010F                     	;# 
  1360     010F                     	;# 
  1361     0110                     	;# 
  1362     0111                     	;# 
  1363     0112                     	;# 
  1364     0113                     	;# 
  1365     0114                     	;# 
  1366     0115                     	;# 
  1367     0116                     	;# 
  1368     0117                     	;# 
  1369     0118                     	;# 
  1370     0119                     	;# 
  1371     0119                     	;# 
  1372     0119                     	;# 
  1373     011A                     	;# 
  1374     011A                     	;# 
  1375     011A                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011B                     	;# 
  1380     011B                     	;# 
  1381     011C                     	;# 
  1382     011C                     	;# 
  1383     011C                     	;# 
  1384     011D                     	;# 
  1385     011D                     	;# 
  1386     011D                     	;# 
  1387     011E                     	;# 
  1388     011E                     	;# 
  1389     011E                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     011F                     	;# 
  1394     011F                     	;# 
  1395     018C                     	;# 
  1396     018D                     	;# 
  1397     018E                     	;# 
  1398     018F                     	;# 
  1399     0190                     	;# 
  1400     0191                     	;# 
  1401     0192                     	;# 
  1402     0196                     	;# 
  1403     0197                     	;# 
  1404     0198                     	;# 
  1405     0199                     	;# 
  1406     019A                     	;# 
  1407     019B                     	;# 
  1408     019C                     	;# 
  1409     020C                     	;# 
  1410     020D                     	;# 
  1411     020E                     	;# 
  1412     020E                     	;# 
  1413     020F                     	;# 
  1414     020F                     	;# 
  1415     0210                     	;# 
  1416     0210                     	;# 
  1417     0211                     	;# 
  1418     0211                     	;# 
  1419     0212                     	;# 
  1420     0213                     	;# 
  1421     0214                     	;# 
  1422     0214                     	;# 
  1423     0215                     	;# 
  1424     0215                     	;# 
  1425     0216                     	;# 
  1426     0216                     	;# 
  1427     0217                     	;# 
  1428     0217                     	;# 
  1429     0218                     	;# 
  1430     0219                     	;# 
  1431     021A                     	;# 
  1432     021A                     	;# 
  1433     021B                     	;# 
  1434     021B                     	;# 
  1435     021C                     	;# 
  1436     021C                     	;# 
  1437     021D                     	;# 
  1438     021D                     	;# 
  1439     021E                     	;# 
  1440     021F                     	;# 
  1441     028C                     	;# 
  1442     028C                     	;# 
  1443     028D                     	;# 
  1444     028D                     	;# 
  1445     028E                     	;# 
  1446     028F                     	;# 
  1447     0290                     	;# 
  1448     0291                     	;# 
  1449     0292                     	;# 
  1450     0292                     	;# 
  1451     0293                     	;# 
  1452     0293                     	;# 
  1453     0294                     	;# 
  1454     0295                     	;# 
  1455     0296                     	;# 
  1456     0297                     	;# 
  1457     0298                     	;# 
  1458     0298                     	;# 
  1459     0299                     	;# 
  1460     0299                     	;# 
  1461     029A                     	;# 
  1462     029B                     	;# 
  1463     029C                     	;# 
  1464     029D                     	;# 
  1465     029F                     	;# 
  1466     030C                     	;# 
  1467     030C                     	;# 
  1468     030D                     	;# 
  1469     030E                     	;# 
  1470     030F                     	;# 
  1471     0310                     	;# 
  1472     0310                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0314                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0317                     	;# 
  1481     0318                     	;# 
  1482     0318                     	;# 
  1483     0319                     	;# 
  1484     031A                     	;# 
  1485     031B                     	;# 
  1486     031C                     	;# 
  1487     031C                     	;# 
  1488     031D                     	;# 
  1489     031E                     	;# 
  1490     031F                     	;# 
  1491     038C                     	;# 
  1492     038C                     	;# 
  1493     038D                     	;# 
  1494     038E                     	;# 
  1495     0390                     	;# 
  1496     0390                     	;# 
  1497     0391                     	;# 
  1498     0392                     	;# 
  1499     048C                     	;# 
  1500     048C                     	;# 
  1501     048D                     	;# 
  1502     048E                     	;# 
  1503     048F                     	;# 
  1504     048F                     	;# 
  1505     0490                     	;# 
  1506     0491                     	;# 
  1507     0492                     	;# 
  1508     0492                     	;# 
  1509     0493                     	;# 
  1510     0494                     	;# 
  1511     0495                     	;# 
  1512     0495                     	;# 
  1513     0496                     	;# 
  1514     0497                     	;# 
  1515     0498                     	;# 
  1516     0499                     	;# 
  1517     049A                     	;# 
  1518     049B                     	;# 
  1519     049C                     	;# 
  1520     049D                     	;# 
  1521     050C                     	;# 
  1522     050C                     	;# 
  1523     050D                     	;# 
  1524     050E                     	;# 
  1525     050F                     	;# 
  1526     050F                     	;# 
  1527     0510                     	;# 
  1528     0511                     	;# 
  1529     0512                     	;# 
  1530     0512                     	;# 
  1531     0513                     	;# 
  1532     0514                     	;# 
  1533     0515                     	;# 
  1534     0515                     	;# 
  1535     0516                     	;# 
  1536     0517                     	;# 
  1537     0518                     	;# 
  1538     0519                     	;# 
  1539     051A                     	;# 
  1540     051B                     	;# 
  1541     051C                     	;# 
  1542     051D                     	;# 
  1543     058C                     	;# 
  1544     058C                     	;# 
  1545     058D                     	;# 
  1546     058E                     	;# 
  1547     058F                     	;# 
  1548     058F                     	;# 
  1549     0590                     	;# 
  1550     0591                     	;# 
  1551     0592                     	;# 
  1552     0593                     	;# 
  1553     059C                     	;# 
  1554     059C                     	;# 
  1555     059D                     	;# 
  1556     059D                     	;# 
  1557     059E                     	;# 
  1558     059F                     	;# 
  1559     060C                     	;# 
  1560     060C                     	;# 
  1561     060D                     	;# 
  1562     060D                     	;# 
  1563     060E                     	;# 
  1564     060F                     	;# 
  1565     0610                     	;# 
  1566     0611                     	;# 
  1567     0612                     	;# 
  1568     0613                     	;# 
  1569     0614                     	;# 
  1570     0616                     	;# 
  1571     0616                     	;# 
  1572     0617                     	;# 
  1573     0617                     	;# 
  1574     0618                     	;# 
  1575     0619                     	;# 
  1576     061A                     	;# 
  1577     061B                     	;# 
  1578     061C                     	;# 
  1579     061D                     	;# 
  1580     061E                     	;# 
  1581     068C                     	;# 
  1582     068D                     	;# 
  1583     068E                     	;# 
  1584     068F                     	;# 
  1585     0690                     	;# 
  1586     0691                     	;# 
  1587     0692                     	;# 
  1588     0693                     	;# 
  1589     0694                     	;# 
  1590     070C                     	;# 
  1591     070D                     	;# 
  1592     070E                     	;# 
  1593     070F                     	;# 
  1594     0710                     	;# 
  1595     0711                     	;# 
  1596     0712                     	;# 
  1597     0713                     	;# 
  1598     0714                     	;# 
  1599     0716                     	;# 
  1600     0717                     	;# 
  1601     0718                     	;# 
  1602     0719                     	;# 
  1603     071A                     	;# 
  1604     071B                     	;# 
  1605     071C                     	;# 
  1606     071D                     	;# 
  1607     071E                     	;# 
  1608     0796                     	;# 
  1609     0797                     	;# 
  1610     0798                     	;# 
  1611     0799                     	;# 
  1612     079A                     	;# 
  1613     079B                     	;# 
  1614     079C                     	;# 
  1615     079D                     	;# 
  1616     080C                     	;# 
  1617     080D                     	;# 
  1618     080E                     	;# 
  1619     080F                     	;# 
  1620     0810                     	;# 
  1621     0811                     	;# 
  1622     0813                     	;# 
  1623     0814                     	;# 
  1624     081A                     	;# 
  1625     081A                     	;# 
  1626     081B                     	;# 
  1627     081C                     	;# 
  1628     081C                     	;# 
  1629     081D                     	;# 
  1630     081E                     	;# 
  1631     081F                     	;# 
  1632     088C                     	;# 
  1633     088D                     	;# 
  1634     088E                     	;# 
  1635     088F                     	;# 
  1636     0890                     	;# 
  1637     0891                     	;# 
  1638     0892                     	;# 
  1639     0893                     	;# 
  1640     0895                     	;# 
  1641     0896                     	;# 
  1642     0897                     	;# 
  1643     0898                     	;# 
  1644     0899                     	;# 
  1645     089A                     	;# 
  1646     089B                     	;# 
  1647     090C                     	;# 
  1648     090E                     	;# 
  1649     090F                     	;# 
  1650     091F                     	;# 
  1651     098F                     	;# 
  1652     098F                     	;# 
  1653     0990                     	;# 
  1654     0991                     	;# 
  1655     0992                     	;# 
  1656     0993                     	;# 
  1657     0994                     	;# 
  1658     0995                     	;# 
  1659     0996                     	;# 
  1660     0997                     	;# 
  1661     0A19                     	;# 
  1662     0A19                     	;# 
  1663     0A1A                     	;# 
  1664     0A1A                     	;# 
  1665     0A1B                     	;# 
  1666     0A1B                     	;# 
  1667     0A1B                     	;# 
  1668     0A1C                     	;# 
  1669     0A1C                     	;# 
  1670     0A1D                     	;# 
  1671     0A1D                     	;# 
  1672     0A1E                     	;# 
  1673     0A1E                     	;# 
  1674     0A1F                     	;# 
  1675     0A1F                     	;# 
  1676     0A1F                     	;# 
  1677     1E0F                     	;# 
  1678     1E10                     	;# 
  1679     1E11                     	;# 
  1680     1E12                     	;# 
  1681     1E13                     	;# 
  1682     1E14                     	;# 
  1683     1E15                     	;# 
  1684     1E16                     	;# 
  1685     1E17                     	;# 
  1686     1E18                     	;# 
  1687     1E19                     	;# 
  1688     1E1A                     	;# 
  1689     1E1B                     	;# 
  1690     1E1C                     	;# 
  1691     1E1D                     	;# 
  1692     1E1E                     	;# 
  1693     1E1F                     	;# 
  1694     1E20                     	;# 
  1695     1E21                     	;# 
  1696     1E22                     	;# 
  1697     1E23                     	;# 
  1698     1E24                     	;# 
  1699     1E25                     	;# 
  1700     1E26                     	;# 
  1701     1E27                     	;# 
  1702     1E28                     	;# 
  1703     1E29                     	;# 
  1704     1E2A                     	;# 
  1705     1E2B                     	;# 
  1706     1E2C                     	;# 
  1707     1E2D                     	;# 
  1708     1E2E                     	;# 
  1709     1E2F                     	;# 
  1710     1E30                     	;# 
  1711     1E31                     	;# 
  1712     1E32                     	;# 
  1713     1E33                     	;# 
  1714     1E34                     	;# 
  1715     1E35                     	;# 
  1716     1E36                     	;# 
  1717     1E37                     	;# 
  1718     1E8F                     	;# 
  1719     1E90                     	;# 
  1720     1E91                     	;# 
  1721     1E92                     	;# 
  1722     1E93                     	;# 
  1723     1E94                     	;# 
  1724     1E95                     	;# 
  1725     1E96                     	;# 
  1726     1E97                     	;# 
  1727     1E9C                     	;# 
  1728     1E9D                     	;# 
  1729     1E9E                     	;# 
  1730     1EA1                     	;# 
  1731     1EA2                     	;# 
  1732     1EA3                     	;# 
  1733     1EA4                     	;# 
  1734     1EA5                     	;# 
  1735     1EA9                     	;# 
  1736     1EAA                     	;# 
  1737     1EAB                     	;# 
  1738     1EAC                     	;# 
  1739     1EB1                     	;# 
  1740     1EB2                     	;# 
  1741     1EB3                     	;# 
  1742     1EB8                     	;# 
  1743     1EB9                     	;# 
  1744     1EBA                     	;# 
  1745     1EBB                     	;# 
  1746     1EBC                     	;# 
  1747     1EBD                     	;# 
  1748     1EBE                     	;# 
  1749     1EC3                     	;# 
  1750     1EC5                     	;# 
  1751     1EC6                     	;# 
  1752     1EC7                     	;# 
  1753     1EC8                     	;# 
  1754     1EC9                     	;# 
  1755     1ECA                     	;# 
  1756     1ECB                     	;# 
  1757     1ECC                     	;# 
  1758     1ECD                     	;# 
  1759     1ECE                     	;# 
  1760     1F10                     	;# 
  1761     1F11                     	;# 
  1762     1F12                     	;# 
  1763     1F13                     	;# 
  1764     1F14                     	;# 
  1765     1F15                     	;# 
  1766     1F16                     	;# 
  1767     1F17                     	;# 
  1768     1F18                     	;# 
  1769     1F19                     	;# 
  1770     1F1A                     	;# 
  1771     1F1B                     	;# 
  1772     1F1C                     	;# 
  1773     1F1D                     	;# 
  1774     1F1E                     	;# 
  1775     1F1F                     	;# 
  1776     1F20                     	;# 
  1777     1F21                     	;# 
  1778     1F22                     	;# 
  1779     1F23                     	;# 
  1780     1F24                     	;# 
  1781     1F25                     	;# 
  1782     1F26                     	;# 
  1783     1F27                     	;# 
  1784     1F38                     	;# 
  1785     1F39                     	;# 
  1786     1F3A                     	;# 
  1787     1F3B                     	;# 
  1788     1F3C                     	;# 
  1789     1F3D                     	;# 
  1790     1F3E                     	;# 
  1791     1F3F                     	;# 
  1792     1F43                     	;# 
  1793     1F44                     	;# 
  1794     1F45                     	;# 
  1795     1F46                     	;# 
  1796     1F47                     	;# 
  1797     1F48                     	;# 
  1798     1F49                     	;# 
  1799     1F4A                     	;# 
  1800     1F4E                     	;# 
  1801     1F4F                     	;# 
  1802     1F50                     	;# 
  1803     1F51                     	;# 
  1804     1F52                     	;# 
  1805     1F53                     	;# 
  1806     1F54                     	;# 
  1807     1F55                     	;# 
  1808     1F65                     	;# 
  1809     1F66                     	;# 
  1810     1F67                     	;# 
  1811     1F68                     	;# 
  1812     1F69                     	;# 
  1813     1F6A                     	;# 
  1814     1F6B                     	;# 
  1815     1FE4                     	;# 
  1816     1FE5                     	;# 
  1817     1FE6                     	;# 
  1818     1FE7                     	;# 
  1819     1FE8                     	;# 
  1820     1FE8                     	;# 
  1821     1FE9                     	;# 
  1822     1FEA                     	;# 
  1823     1FEB                     	;# 
  1824     1FED                     	;# 
  1825     1FEE                     	;# 
  1826     1FEF                     	;# 
  1827     0000                     	;# 
  1828     0001                     	;# 
  1829     0002                     	;# 
  1830     0003                     	;# 
  1831     0004                     	;# 
  1832     0005                     	;# 
  1833     0006                     	;# 
  1834     0007                     	;# 
  1835     0008                     	;# 
  1836     0009                     	;# 
  1837     000A                     	;# 
  1838     000B                     	;# 
  1839     000C                     	;# 
  1840     000D                     	;# 
  1841     000E                     	;# 
  1842     0010                     	;# 
  1843     0012                     	;# 
  1844     0013                     	;# 
  1845     0014                     	;# 
  1846     0016                     	;# 
  1847     0018                     	;# 
  1848     0019                     	;# 
  1849     001A                     	;# 
  1850     001C                     	;# 
  1851     008C                     	;# 
  1852     008C                     	;# 
  1853     008D                     	;# 
  1854     008E                     	;# 
  1855     008E                     	;# 
  1856     008F                     	;# 
  1857     0090                     	;# 
  1858     0090                     	;# 
  1859     0091                     	;# 
  1860     0092                     	;# 
  1861     0092                     	;# 
  1862     0093                     	;# 
  1863     0094                     	;# 
  1864     0094                     	;# 
  1865     0095                     	;# 
  1866     0096                     	;# 
  1867     0096                     	;# 
  1868     0097                     	;# 
  1869     0098                     	;# 
  1870     0099                     	;# 
  1871     009A                     	;# 
  1872     009B                     	;# 
  1873     009B                     	;# 
  1874     009C                     	;# 
  1875     009D                     	;# 
  1876     009D                     	;# 
  1877     009E                     	;# 
  1878     009F                     	;# 
  1879     010C                     	;# 
  1880     010C                     	;# 
  1881     010D                     	;# 
  1882     010E                     	;# 
  1883     010F                     	;# 
  1884     010F                     	;# 
  1885     0110                     	;# 
  1886     0111                     	;# 
  1887     0112                     	;# 
  1888     0113                     	;# 
  1889     0114                     	;# 
  1890     0115                     	;# 
  1891     0116                     	;# 
  1892     0117                     	;# 
  1893     0118                     	;# 
  1894     0119                     	;# 
  1895     0119                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011A                     	;# 
  1899     011A                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011B                     	;# 
  1904     011B                     	;# 
  1905     011C                     	;# 
  1906     011C                     	;# 
  1907     011C                     	;# 
  1908     011D                     	;# 
  1909     011D                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     011E                     	;# 
  1913     011E                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     011F                     	;# 
  1918     011F                     	;# 
  1919     018C                     	;# 
  1920     018D                     	;# 
  1921     018E                     	;# 
  1922     018F                     	;# 
  1923     0190                     	;# 
  1924     0191                     	;# 
  1925     0192                     	;# 
  1926     0196                     	;# 
  1927     0197                     	;# 
  1928     0198                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019B                     	;# 
  1932     019C                     	;# 
  1933     020C                     	;# 
  1934     020D                     	;# 
  1935     020E                     	;# 
  1936     020E                     	;# 
  1937     020F                     	;# 
  1938     020F                     	;# 
  1939     0210                     	;# 
  1940     0210                     	;# 
  1941     0211                     	;# 
  1942     0211                     	;# 
  1943     0212                     	;# 
  1944     0213                     	;# 
  1945     0214                     	;# 
  1946     0214                     	;# 
  1947     0215                     	;# 
  1948     0215                     	;# 
  1949     0216                     	;# 
  1950     0216                     	;# 
  1951     0217                     	;# 
  1952     0217                     	;# 
  1953     0218                     	;# 
  1954     0219                     	;# 
  1955     021A                     	;# 
  1956     021A                     	;# 
  1957     021B                     	;# 
  1958     021B                     	;# 
  1959     021C                     	;# 
  1960     021C                     	;# 
  1961     021D                     	;# 
  1962     021D                     	;# 
  1963     021E                     	;# 
  1964     021F                     	;# 
  1965     028C                     	;# 
  1966     028C                     	;# 
  1967     028D                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     028F                     	;# 
  1971     0290                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0292                     	;# 
  1975     0293                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0295                     	;# 
  1979     0296                     	;# 
  1980     0297                     	;# 
  1981     0298                     	;# 
  1982     0298                     	;# 
  1983     0299                     	;# 
  1984     0299                     	;# 
  1985     029A                     	;# 
  1986     029B                     	;# 
  1987     029C                     	;# 
  1988     029D                     	;# 
  1989     029F                     	;# 
  1990     030C                     	;# 
  1991     030C                     	;# 
  1992     030D                     	;# 
  1993     030E                     	;# 
  1994     030F                     	;# 
  1995     0310                     	;# 
  1996     0310                     	;# 
  1997     0311                     	;# 
  1998     0312                     	;# 
  1999     0313                     	;# 
  2000     0314                     	;# 
  2001     0314                     	;# 
  2002     0315                     	;# 
  2003     0316                     	;# 
  2004     0317                     	;# 
  2005     0318                     	;# 
  2006     0318                     	;# 
  2007     0319                     	;# 
  2008     031A                     	;# 
  2009     031B                     	;# 
  2010     031C                     	;# 
  2011     031C                     	;# 
  2012     031D                     	;# 
  2013     031E                     	;# 
  2014     031F                     	;# 
  2015     038C                     	;# 
  2016     038C                     	;# 
  2017     038D                     	;# 
  2018     038E                     	;# 
  2019     0390                     	;# 
  2020     0390                     	;# 
  2021     0391                     	;# 
  2022     0392                     	;# 
  2023     048C                     	;# 
  2024     048C                     	;# 
  2025     048D                     	;# 
  2026     048E                     	;# 
  2027     048F                     	;# 
  2028     048F                     	;# 
  2029     0490                     	;# 
  2030     0491                     	;# 
  2031     0492                     	;# 
  2032     0492                     	;# 
  2033     0493                     	;# 
  2034     0494                     	;# 
  2035     0495                     	;# 
  2036     0495                     	;# 
  2037     0496                     	;# 
  2038     0497                     	;# 
  2039     0498                     	;# 
  2040     0499                     	;# 
  2041     049A                     	;# 
  2042     049B                     	;# 
  2043     049C                     	;# 
  2044     049D                     	;# 
  2045     050C                     	;# 
  2046     050C                     	;# 
  2047     050D                     	;# 
  2048     050E                     	;# 
  2049     050F                     	;# 
  2050     050F                     	;# 
  2051     0510                     	;# 
  2052     0511                     	;# 
  2053     0512                     	;# 
  2054     0512                     	;# 
  2055     0513                     	;# 
  2056     0514                     	;# 
  2057     0515                     	;# 
  2058     0515                     	;# 
  2059     0516                     	;# 
  2060     0517                     	;# 
  2061     0518                     	;# 
  2062     0519                     	;# 
  2063     051A                     	;# 
  2064     051B                     	;# 
  2065     051C                     	;# 
  2066     051D                     	;# 
  2067     058C                     	;# 
  2068     058C                     	;# 
  2069     058D                     	;# 
  2070     058E                     	;# 
  2071     058F                     	;# 
  2072     058F                     	;# 
  2073     0590                     	;# 
  2074     0591                     	;# 
  2075     0592                     	;# 
  2076     0593                     	;# 
  2077     059C                     	;# 
  2078     059C                     	;# 
  2079     059D                     	;# 
  2080     059D                     	;# 
  2081     059E                     	;# 
  2082     059F                     	;# 
  2083     060C                     	;# 
  2084     060C                     	;# 
  2085     060D                     	;# 
  2086     060D                     	;# 
  2087     060E                     	;# 
  2088     060F                     	;# 
  2089     0610                     	;# 
  2090     0611                     	;# 
  2091     0612                     	;# 
  2092     0613                     	;# 
  2093     0614                     	;# 
  2094     0616                     	;# 
  2095     0616                     	;# 
  2096     0617                     	;# 
  2097     0617                     	;# 
  2098     0618                     	;# 
  2099     0619                     	;# 
  2100     061A                     	;# 
  2101     061B                     	;# 
  2102     061C                     	;# 
  2103     061D                     	;# 
  2104     061E                     	;# 
  2105     068C                     	;# 
  2106     068D                     	;# 
  2107     068E                     	;# 
  2108     068F                     	;# 
  2109     0690                     	;# 
  2110     0691                     	;# 
  2111     0692                     	;# 
  2112     0693                     	;# 
  2113     0694                     	;# 
  2114     070C                     	;# 
  2115     070D                     	;# 
  2116     070E                     	;# 
  2117     070F                     	;# 
  2118     0710                     	;# 
  2119     0711                     	;# 
  2120     0712                     	;# 
  2121     0713                     	;# 
  2122     0714                     	;# 
  2123     0716                     	;# 
  2124     0717                     	;# 
  2125     0718                     	;# 
  2126     0719                     	;# 
  2127     071A                     	;# 
  2128     071B                     	;# 
  2129     071C                     	;# 
  2130     071D                     	;# 
  2131     071E                     	;# 
  2132     0796                     	;# 
  2133     0797                     	;# 
  2134     0798                     	;# 
  2135     0799                     	;# 
  2136     079A                     	;# 
  2137     079B                     	;# 
  2138     079C                     	;# 
  2139     079D                     	;# 
  2140     080C                     	;# 
  2141     080D                     	;# 
  2142     080E                     	;# 
  2143     080F                     	;# 
  2144     0810                     	;# 
  2145     0811                     	;# 
  2146     0813                     	;# 
  2147     0814                     	;# 
  2148     081A                     	;# 
  2149     081A                     	;# 
  2150     081B                     	;# 
  2151     081C                     	;# 
  2152     081C                     	;# 
  2153     081D                     	;# 
  2154     081E                     	;# 
  2155     081F                     	;# 
  2156     088C                     	;# 
  2157     088D                     	;# 
  2158     088E                     	;# 
  2159     088F                     	;# 
  2160     0890                     	;# 
  2161     0891                     	;# 
  2162     0892                     	;# 
  2163     0893                     	;# 
  2164     0895                     	;# 
  2165     0896                     	;# 
  2166     0897                     	;# 
  2167     0898                     	;# 
  2168     0899                     	;# 
  2169     089A                     	;# 
  2170     089B                     	;# 
  2171     090C                     	;# 
  2172     090E                     	;# 
  2173     090F                     	;# 
  2174     091F                     	;# 
  2175     098F                     	;# 
  2176     098F                     	;# 
  2177     0990                     	;# 
  2178     0991                     	;# 
  2179     0992                     	;# 
  2180     0993                     	;# 
  2181     0994                     	;# 
  2182     0995                     	;# 
  2183     0996                     	;# 
  2184     0997                     	;# 
  2185     0A19                     	;# 
  2186     0A19                     	;# 
  2187     0A1A                     	;# 
  2188     0A1A                     	;# 
  2189     0A1B                     	;# 
  2190     0A1B                     	;# 
  2191     0A1B                     	;# 
  2192     0A1C                     	;# 
  2193     0A1C                     	;# 
  2194     0A1D                     	;# 
  2195     0A1D                     	;# 
  2196     0A1E                     	;# 
  2197     0A1E                     	;# 
  2198     0A1F                     	;# 
  2199     0A1F                     	;# 
  2200     0A1F                     	;# 
  2201     1E0F                     	;# 
  2202     1E10                     	;# 
  2203     1E11                     	;# 
  2204     1E12                     	;# 
  2205     1E13                     	;# 
  2206     1E14                     	;# 
  2207     1E15                     	;# 
  2208     1E16                     	;# 
  2209     1E17                     	;# 
  2210     1E18                     	;# 
  2211     1E19                     	;# 
  2212     1E1A                     	;# 
  2213     1E1B                     	;# 
  2214     1E1C                     	;# 
  2215     1E1D                     	;# 
  2216     1E1E                     	;# 
  2217     1E1F                     	;# 
  2218     1E20                     	;# 
  2219     1E21                     	;# 
  2220     1E22                     	;# 
  2221     1E23                     	;# 
  2222     1E24                     	;# 
  2223     1E25                     	;# 
  2224     1E26                     	;# 
  2225     1E27                     	;# 
  2226     1E28                     	;# 
  2227     1E29                     	;# 
  2228     1E2A                     	;# 
  2229     1E2B                     	;# 
  2230     1E2C                     	;# 
  2231     1E2D                     	;# 
  2232     1E2E                     	;# 
  2233     1E2F                     	;# 
  2234     1E30                     	;# 
  2235     1E31                     	;# 
  2236     1E32                     	;# 
  2237     1E33                     	;# 
  2238     1E34                     	;# 
  2239     1E35                     	;# 
  2240     1E36                     	;# 
  2241     1E37                     	;# 
  2242     1E8F                     	;# 
  2243     1E90                     	;# 
  2244     1E91                     	;# 
  2245     1E92                     	;# 
  2246     1E93                     	;# 
  2247     1E94                     	;# 
  2248     1E95                     	;# 
  2249     1E96                     	;# 
  2250     1E97                     	;# 
  2251     1E9C                     	;# 
  2252     1E9D                     	;# 
  2253     1E9E                     	;# 
  2254     1EA1                     	;# 
  2255     1EA2                     	;# 
  2256     1EA3                     	;# 
  2257     1EA4                     	;# 
  2258     1EA5                     	;# 
  2259     1EA9                     	;# 
  2260     1EAA                     	;# 
  2261     1EAB                     	;# 
  2262     1EAC                     	;# 
  2263     1EB1                     	;# 
  2264     1EB2                     	;# 
  2265     1EB3                     	;# 
  2266     1EB8                     	;# 
  2267     1EB9                     	;# 
  2268     1EBA                     	;# 
  2269     1EBB                     	;# 
  2270     1EBC                     	;# 
  2271     1EBD                     	;# 
  2272     1EBE                     	;# 
  2273     1EC3                     	;# 
  2274     1EC5                     	;# 
  2275     1EC6                     	;# 
  2276     1EC7                     	;# 
  2277     1EC8                     	;# 
  2278     1EC9                     	;# 
  2279     1ECA                     	;# 
  2280     1ECB                     	;# 
  2281     1ECC                     	;# 
  2282     1ECD                     	;# 
  2283     1ECE                     	;# 
  2284     1F10                     	;# 
  2285     1F11                     	;# 
  2286     1F12                     	;# 
  2287     1F13                     	;# 
  2288     1F14                     	;# 
  2289     1F15                     	;# 
  2290     1F16                     	;# 
  2291     1F17                     	;# 
  2292     1F18                     	;# 
  2293     1F19                     	;# 
  2294     1F1A                     	;# 
  2295     1F1B                     	;# 
  2296     1F1C                     	;# 
  2297     1F1D                     	;# 
  2298     1F1E                     	;# 
  2299     1F1F                     	;# 
  2300     1F20                     	;# 
  2301     1F21                     	;# 
  2302     1F22                     	;# 
  2303     1F23                     	;# 
  2304     1F24                     	;# 
  2305     1F25                     	;# 
  2306     1F26                     	;# 
  2307     1F27                     	;# 
  2308     1F38                     	;# 
  2309     1F39                     	;# 
  2310     1F3A                     	;# 
  2311     1F3B                     	;# 
  2312     1F3C                     	;# 
  2313     1F3D                     	;# 
  2314     1F3E                     	;# 
  2315     1F3F                     	;# 
  2316     1F43                     	;# 
  2317     1F44                     	;# 
  2318     1F45                     	;# 
  2319     1F46                     	;# 
  2320     1F47                     	;# 
  2321     1F48                     	;# 
  2322     1F49                     	;# 
  2323     1F4A                     	;# 
  2324     1F4E                     	;# 
  2325     1F4F                     	;# 
  2326     1F50                     	;# 
  2327     1F51                     	;# 
  2328     1F52                     	;# 
  2329     1F53                     	;# 
  2330     1F54                     	;# 
  2331     1F55                     	;# 
  2332     1F65                     	;# 
  2333     1F66                     	;# 
  2334     1F67                     	;# 
  2335     1F68                     	;# 
  2336     1F69                     	;# 
  2337     1F6A                     	;# 
  2338     1F6B                     	;# 
  2339     1FE4                     	;# 
  2340     1FE5                     	;# 
  2341     1FE6                     	;# 
  2342     1FE7                     	;# 
  2343     1FE8                     	;# 
  2344     1FE8                     	;# 
  2345     1FE9                     	;# 
  2346     1FEA                     	;# 
  2347     1FEB                     	;# 
  2348     1FED                     	;# 
  2349     1FEE                     	;# 
  2350     1FEF                     	;# 
  2351     0000                     	;# 
  2352     0001                     	;# 
  2353     0002                     	;# 
  2354     0003                     	;# 
  2355     0004                     	;# 
  2356     0005                     	;# 
  2357     0006                     	;# 
  2358     0007                     	;# 
  2359     0008                     	;# 
  2360     0009                     	;# 
  2361     000A                     	;# 
  2362     000B                     	;# 
  2363     000C                     	;# 
  2364     000D                     	;# 
  2365     000E                     	;# 
  2366     0010                     	;# 
  2367     0012                     	;# 
  2368     0013                     	;# 
  2369     0014                     	;# 
  2370     0016                     	;# 
  2371     0018                     	;# 
  2372     0019                     	;# 
  2373     001A                     	;# 
  2374     001C                     	;# 
  2375     008C                     	;# 
  2376     008C                     	;# 
  2377     008D                     	;# 
  2378     008E                     	;# 
  2379     008E                     	;# 
  2380     008F                     	;# 
  2381     0090                     	;# 
  2382     0090                     	;# 
  2383     0091                     	;# 
  2384     0092                     	;# 
  2385     0092                     	;# 
  2386     0093                     	;# 
  2387     0094                     	;# 
  2388     0094                     	;# 
  2389     0095                     	;# 
  2390     0096                     	;# 
  2391     0096                     	;# 
  2392     0097                     	;# 
  2393     0098                     	;# 
  2394     0099                     	;# 
  2395     009A                     	;# 
  2396     009B                     	;# 
  2397     009B                     	;# 
  2398     009C                     	;# 
  2399     009D                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     009F                     	;# 
  2403     010C                     	;# 
  2404     010C                     	;# 
  2405     010D                     	;# 
  2406     010E                     	;# 
  2407     010F                     	;# 
  2408     010F                     	;# 
  2409     0110                     	;# 
  2410     0111                     	;# 
  2411     0112                     	;# 
  2412     0113                     	;# 
  2413     0114                     	;# 
  2414     0115                     	;# 
  2415     0116                     	;# 
  2416     0117                     	;# 
  2417     0118                     	;# 
  2418     0119                     	;# 
  2419     0119                     	;# 
  2420     0119                     	;# 
  2421     011A                     	;# 
  2422     011A                     	;# 
  2423     011A                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011B                     	;# 
  2428     011B                     	;# 
  2429     011C                     	;# 
  2430     011C                     	;# 
  2431     011C                     	;# 
  2432     011D                     	;# 
  2433     011D                     	;# 
  2434     011D                     	;# 
  2435     011E                     	;# 
  2436     011E                     	;# 
  2437     011E                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     011F                     	;# 
  2442     011F                     	;# 
  2443     018C                     	;# 
  2444     018D                     	;# 
  2445     018E                     	;# 
  2446     018F                     	;# 
  2447     0190                     	;# 
  2448     0191                     	;# 
  2449     0192                     	;# 
  2450     0196                     	;# 
  2451     0197                     	;# 
  2452     0198                     	;# 
  2453     0199                     	;# 
  2454     019A                     	;# 
  2455     019B                     	;# 
  2456     019C                     	;# 
  2457     020C                     	;# 
  2458     020D                     	;# 
  2459     020E                     	;# 
  2460     020E                     	;# 
  2461     020F                     	;# 
  2462     020F                     	;# 
  2463     0210                     	;# 
  2464     0210                     	;# 
  2465     0211                     	;# 
  2466     0211                     	;# 
  2467     0212                     	;# 
  2468     0213                     	;# 
  2469     0214                     	;# 
  2470     0214                     	;# 
  2471     0215                     	;# 
  2472     0215                     	;# 
  2473     0216                     	;# 
  2474     0216                     	;# 
  2475     0217                     	;# 
  2476     0217                     	;# 
  2477     0218                     	;# 
  2478     0219                     	;# 
  2479     021A                     	;# 
  2480     021A                     	;# 
  2481     021B                     	;# 
  2482     021B                     	;# 
  2483     021C                     	;# 
  2484     021C                     	;# 
  2485     021D                     	;# 
  2486     021D                     	;# 
  2487     021E                     	;# 
  2488     021F                     	;# 
  2489     028C                     	;# 
  2490     028C                     	;# 
  2491     028D                     	;# 
  2492     028D                     	;# 
  2493     028E                     	;# 
  2494     028F                     	;# 
  2495     0290                     	;# 
  2496     0291                     	;# 
  2497     0292                     	;# 
  2498     0292                     	;# 
  2499     0293                     	;# 
  2500     0293                     	;# 
  2501     0294                     	;# 
  2502     0295                     	;# 
  2503     0296                     	;# 
  2504     0297                     	;# 
  2505     0298                     	;# 
  2506     0298                     	;# 
  2507     0299                     	;# 
  2508     0299                     	;# 
  2509     029A                     	;# 
  2510     029B                     	;# 
  2511     029C                     	;# 
  2512     029D                     	;# 
  2513     029F                     	;# 
  2514     030C                     	;# 
  2515     030C                     	;# 
  2516     030D                     	;# 
  2517     030E                     	;# 
  2518     030F                     	;# 
  2519     0310                     	;# 
  2520     0310                     	;# 
  2521     0311                     	;# 
  2522     0312                     	;# 
  2523     0313                     	;# 
  2524     0314                     	;# 
  2525     0314                     	;# 
  2526     0315                     	;# 
  2527     0316                     	;# 
  2528     0317                     	;# 
  2529     0318                     	;# 
  2530     0318                     	;# 
  2531     0319                     	;# 
  2532     031A                     	;# 
  2533     031B                     	;# 
  2534     031C                     	;# 
  2535     031C                     	;# 
  2536     031D                     	;# 
  2537     031E                     	;# 
  2538     031F                     	;# 
  2539     038C                     	;# 
  2540     038C                     	;# 
  2541     038D                     	;# 
  2542     038E                     	;# 
  2543     0390                     	;# 
  2544     0390                     	;# 
  2545     0391                     	;# 
  2546     0392                     	;# 
  2547     048C                     	;# 
  2548     048C                     	;# 
  2549     048D                     	;# 
  2550     048E                     	;# 
  2551     048F                     	;# 
  2552     048F                     	;# 
  2553     0490                     	;# 
  2554     0491                     	;# 
  2555     0492                     	;# 
  2556     0492                     	;# 
  2557     0493                     	;# 
  2558     0494                     	;# 
  2559     0495                     	;# 
  2560     0495                     	;# 
  2561     0496                     	;# 
  2562     0497                     	;# 
  2563     0498                     	;# 
  2564     0499                     	;# 
  2565     049A                     	;# 
  2566     049B                     	;# 
  2567     049C                     	;# 
  2568     049D                     	;# 
  2569     050C                     	;# 
  2570     050C                     	;# 
  2571     050D                     	;# 
  2572     050E                     	;# 
  2573     050F                     	;# 
  2574     050F                     	;# 
  2575     0510                     	;# 
  2576     0511                     	;# 
  2577     0512                     	;# 
  2578     0512                     	;# 
  2579     0513                     	;# 
  2580     0514                     	;# 
  2581     0515                     	;# 
  2582     0515                     	;# 
  2583     0516                     	;# 
  2584     0517                     	;# 
  2585     0518                     	;# 
  2586     0519                     	;# 
  2587     051A                     	;# 
  2588     051B                     	;# 
  2589     051C                     	;# 
  2590     051D                     	;# 
  2591     058C                     	;# 
  2592     058C                     	;# 
  2593     058D                     	;# 
  2594     058E                     	;# 
  2595     058F                     	;# 
  2596     058F                     	;# 
  2597     0590                     	;# 
  2598     0591                     	;# 
  2599     0592                     	;# 
  2600     0593                     	;# 
  2601     059C                     	;# 
  2602     059C                     	;# 
  2603     059D                     	;# 
  2604     059D                     	;# 
  2605     059E                     	;# 
  2606     059F                     	;# 
  2607     060C                     	;# 
  2608     060C                     	;# 
  2609     060D                     	;# 
  2610     060D                     	;# 
  2611     060E                     	;# 
  2612     060F                     	;# 
  2613     0610                     	;# 
  2614     0611                     	;# 
  2615     0612                     	;# 
  2616     0613                     	;# 
  2617     0614                     	;# 
  2618     0616                     	;# 
  2619     0616                     	;# 
  2620     0617                     	;# 
  2621     0617                     	;# 
  2622     0618                     	;# 
  2623     0619                     	;# 
  2624     061A                     	;# 
  2625     061B                     	;# 
  2626     061C                     	;# 
  2627     061D                     	;# 
  2628     061E                     	;# 
  2629     068C                     	;# 
  2630     068D                     	;# 
  2631     068E                     	;# 
  2632     068F                     	;# 
  2633     0690                     	;# 
  2634     0691                     	;# 
  2635     0692                     	;# 
  2636     0693                     	;# 
  2637     0694                     	;# 
  2638     070C                     	;# 
  2639     070D                     	;# 
  2640     070E                     	;# 
  2641     070F                     	;# 
  2642     0710                     	;# 
  2643     0711                     	;# 
  2644     0712                     	;# 
  2645     0713                     	;# 
  2646     0714                     	;# 
  2647     0716                     	;# 
  2648     0717                     	;# 
  2649     0718                     	;# 
  2650     0719                     	;# 
  2651     071A                     	;# 
  2652     071B                     	;# 
  2653     071C                     	;# 
  2654     071D                     	;# 
  2655     071E                     	;# 
  2656     0796                     	;# 
  2657     0797                     	;# 
  2658     0798                     	;# 
  2659     0799                     	;# 
  2660     079A                     	;# 
  2661     079B                     	;# 
  2662     079C                     	;# 
  2663     079D                     	;# 
  2664     080C                     	;# 
  2665     080D                     	;# 
  2666     080E                     	;# 
  2667     080F                     	;# 
  2668     0810                     	;# 
  2669     0811                     	;# 
  2670     0813                     	;# 
  2671     0814                     	;# 
  2672     081A                     	;# 
  2673     081A                     	;# 
  2674     081B                     	;# 
  2675     081C                     	;# 
  2676     081C                     	;# 
  2677     081D                     	;# 
  2678     081E                     	;# 
  2679     081F                     	;# 
  2680     088C                     	;# 
  2681     088D                     	;# 
  2682     088E                     	;# 
  2683     088F                     	;# 
  2684     0890                     	;# 
  2685     0891                     	;# 
  2686     0892                     	;# 
  2687     0893                     	;# 
  2688     0895                     	;# 
  2689     0896                     	;# 
  2690     0897                     	;# 
  2691     0898                     	;# 
  2692     0899                     	;# 
  2693     089A                     	;# 
  2694     089B                     	;# 
  2695     090C                     	;# 
  2696     090E                     	;# 
  2697     090F                     	;# 
  2698     091F                     	;# 
  2699     098F                     	;# 
  2700     098F                     	;# 
  2701     0990                     	;# 
  2702     0991                     	;# 
  2703     0992                     	;# 
  2704     0993                     	;# 
  2705     0994                     	;# 
  2706     0995                     	;# 
  2707     0996                     	;# 
  2708     0997                     	;# 
  2709     0A19                     	;# 
  2710     0A19                     	;# 
  2711     0A1A                     	;# 
  2712     0A1A                     	;# 
  2713     0A1B                     	;# 
  2714     0A1B                     	;# 
  2715     0A1B                     	;# 
  2716     0A1C                     	;# 
  2717     0A1C                     	;# 
  2718     0A1D                     	;# 
  2719     0A1D                     	;# 
  2720     0A1E                     	;# 
  2721     0A1E                     	;# 
  2722     0A1F                     	;# 
  2723     0A1F                     	;# 
  2724     0A1F                     	;# 
  2725     1E0F                     	;# 
  2726     1E10                     	;# 
  2727     1E11                     	;# 
  2728     1E12                     	;# 
  2729     1E13                     	;# 
  2730     1E14                     	;# 
  2731     1E15                     	;# 
  2732     1E16                     	;# 
  2733     1E17                     	;# 
  2734     1E18                     	;# 
  2735     1E19                     	;# 
  2736     1E1A                     	;# 
  2737     1E1B                     	;# 
  2738     1E1C                     	;# 
  2739     1E1D                     	;# 
  2740     1E1E                     	;# 
  2741     1E1F                     	;# 
  2742     1E20                     	;# 
  2743     1E21                     	;# 
  2744     1E22                     	;# 
  2745     1E23                     	;# 
  2746     1E24                     	;# 
  2747     1E25                     	;# 
  2748     1E26                     	;# 
  2749     1E27                     	;# 
  2750     1E28                     	;# 
  2751     1E29                     	;# 
  2752     1E2A                     	;# 
  2753     1E2B                     	;# 
  2754     1E2C                     	;# 
  2755     1E2D                     	;# 
  2756     1E2E                     	;# 
  2757     1E2F                     	;# 
  2758     1E30                     	;# 
  2759     1E31                     	;# 
  2760     1E32                     	;# 
  2761     1E33                     	;# 
  2762     1E34                     	;# 
  2763     1E35                     	;# 
  2764     1E36                     	;# 
  2765     1E37                     	;# 
  2766     1E8F                     	;# 
  2767     1E90                     	;# 
  2768     1E91                     	;# 
  2769     1E92                     	;# 
  2770     1E93                     	;# 
  2771     1E94                     	;# 
  2772     1E95                     	;# 
  2773     1E96                     	;# 
  2774     1E97                     	;# 
  2775     1E9C                     	;# 
  2776     1E9D                     	;# 
  2777     1E9E                     	;# 
  2778     1EA1                     	;# 
  2779     1EA2                     	;# 
  2780     1EA3                     	;# 
  2781     1EA4                     	;# 
  2782     1EA5                     	;# 
  2783     1EA9                     	;# 
  2784     1EAA                     	;# 
  2785     1EAB                     	;# 
  2786     1EAC                     	;# 
  2787     1EB1                     	;# 
  2788     1EB2                     	;# 
  2789     1EB3                     	;# 
  2790     1EB8                     	;# 
  2791     1EB9                     	;# 
  2792     1EBA                     	;# 
  2793     1EBB                     	;# 
  2794     1EBC                     	;# 
  2795     1EBD                     	;# 
  2796     1EBE                     	;# 
  2797     1EC3                     	;# 
  2798     1EC5                     	;# 
  2799     1EC6                     	;# 
  2800     1EC7                     	;# 
  2801     1EC8                     	;# 
  2802     1EC9                     	;# 
  2803     1ECA                     	;# 
  2804     1ECB                     	;# 
  2805     1ECC                     	;# 
  2806     1ECD                     	;# 
  2807     1ECE                     	;# 
  2808     1F10                     	;# 
  2809     1F11                     	;# 
  2810     1F12                     	;# 
  2811     1F13                     	;# 
  2812     1F14                     	;# 
  2813     1F15                     	;# 
  2814     1F16                     	;# 
  2815     1F17                     	;# 
  2816     1F18                     	;# 
  2817     1F19                     	;# 
  2818     1F1A                     	;# 
  2819     1F1B                     	;# 
  2820     1F1C                     	;# 
  2821     1F1D                     	;# 
  2822     1F1E                     	;# 
  2823     1F1F                     	;# 
  2824     1F20                     	;# 
  2825     1F21                     	;# 
  2826     1F22                     	;# 
  2827     1F23                     	;# 
  2828     1F24                     	;# 
  2829     1F25                     	;# 
  2830     1F26                     	;# 
  2831     1F27                     	;# 
  2832     1F38                     	;# 
  2833     1F39                     	;# 
  2834     1F3A                     	;# 
  2835     1F3B                     	;# 
  2836     1F3C                     	;# 
  2837     1F3D                     	;# 
  2838     1F3E                     	;# 
  2839     1F3F                     	;# 
  2840     1F43                     	;# 
  2841     1F44                     	;# 
  2842     1F45                     	;# 
  2843     1F46                     	;# 
  2844     1F47                     	;# 
  2845     1F48                     	;# 
  2846     1F49                     	;# 
  2847     1F4A                     	;# 
  2848     1F4E                     	;# 
  2849     1F4F                     	;# 
  2850     1F50                     	;# 
  2851     1F51                     	;# 
  2852     1F52                     	;# 
  2853     1F53                     	;# 
  2854     1F54                     	;# 
  2855     1F55                     	;# 
  2856     1F65                     	;# 
  2857     1F66                     	;# 
  2858     1F67                     	;# 
  2859     1F68                     	;# 
  2860     1F69                     	;# 
  2861     1F6A                     	;# 
  2862     1F6B                     	;# 
  2863     1FE4                     	;# 
  2864     1FE5                     	;# 
  2865     1FE6                     	;# 
  2866     1FE7                     	;# 
  2867     1FE8                     	;# 
  2868     1FE8                     	;# 
  2869     1FE9                     	;# 
  2870     1FEA                     	;# 
  2871     1FEB                     	;# 
  2872     1FED                     	;# 
  2873     1FEE                     	;# 
  2874     1FEF                     	;# 
  2875     0000                     	;# 
  2876     0001                     	;# 
  2877     0002                     	;# 
  2878     0003                     	;# 
  2879     0004                     	;# 
  2880     0005                     	;# 
  2881     0006                     	;# 
  2882     0007                     	;# 
  2883     0008                     	;# 
  2884     0009                     	;# 
  2885     000A                     	;# 
  2886     000B                     	;# 
  2887     000C                     	;# 
  2888     000D                     	;# 
  2889     000E                     	;# 
  2890     0010                     	;# 
  2891     0012                     	;# 
  2892     0013                     	;# 
  2893     0014                     	;# 
  2894     0016                     	;# 
  2895     0018                     	;# 
  2896     0019                     	;# 
  2897     001A                     	;# 
  2898     001C                     	;# 
  2899     008C                     	;# 
  2900     008C                     	;# 
  2901     008D                     	;# 
  2902     008E                     	;# 
  2903     008E                     	;# 
  2904     008F                     	;# 
  2905     0090                     	;# 
  2906     0090                     	;# 
  2907     0091                     	;# 
  2908     0092                     	;# 
  2909     0092                     	;# 
  2910     0093                     	;# 
  2911     0094                     	;# 
  2912     0094                     	;# 
  2913     0095                     	;# 
  2914     0096                     	;# 
  2915     0096                     	;# 
  2916     0097                     	;# 
  2917     0098                     	;# 
  2918     0099                     	;# 
  2919     009A                     	;# 
  2920     009B                     	;# 
  2921     009B                     	;# 
  2922     009C                     	;# 
  2923     009D                     	;# 
  2924     009D                     	;# 
  2925     009E                     	;# 
  2926     009F                     	;# 
  2927     010C                     	;# 
  2928     010C                     	;# 
  2929     010D                     	;# 
  2930     010E                     	;# 
  2931     010F                     	;# 
  2932     010F                     	;# 
  2933     0110                     	;# 
  2934     0111                     	;# 
  2935     0112                     	;# 
  2936     0113                     	;# 
  2937     0114                     	;# 
  2938     0115                     	;# 
  2939     0116                     	;# 
  2940     0117                     	;# 
  2941     0118                     	;# 
  2942     0119                     	;# 
  2943     0119                     	;# 
  2944     0119                     	;# 
  2945     011A                     	;# 
  2946     011A                     	;# 
  2947     011A                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011B                     	;# 
  2952     011B                     	;# 
  2953     011C                     	;# 
  2954     011C                     	;# 
  2955     011C                     	;# 
  2956     011D                     	;# 
  2957     011D                     	;# 
  2958     011D                     	;# 
  2959     011E                     	;# 
  2960     011E                     	;# 
  2961     011E                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     011F                     	;# 
  2966     011F                     	;# 
  2967     018C                     	;# 
  2968     018D                     	;# 
  2969     018E                     	;# 
  2970     018F                     	;# 
  2971     0190                     	;# 
  2972     0191                     	;# 
  2973     0192                     	;# 
  2974     0196                     	;# 
  2975     0197                     	;# 
  2976     0198                     	;# 
  2977     0199                     	;# 
  2978     019A                     	;# 
  2979     019B                     	;# 
  2980     019C                     	;# 
  2981     020C                     	;# 
  2982     020D                     	;# 
  2983     020E                     	;# 
  2984     020E                     	;# 
  2985     020F                     	;# 
  2986     020F                     	;# 
  2987     0210                     	;# 
  2988     0210                     	;# 
  2989     0211                     	;# 
  2990     0211                     	;# 
  2991     0212                     	;# 
  2992     0213                     	;# 
  2993     0214                     	;# 
  2994     0214                     	;# 
  2995     0215                     	;# 
  2996     0215                     	;# 
  2997     0216                     	;# 
  2998     0216                     	;# 
  2999     0217                     	;# 
  3000     0217                     	;# 
  3001     0218                     	;# 
  3002     0219                     	;# 
  3003     021A                     	;# 
  3004     021A                     	;# 
  3005     021B                     	;# 
  3006     021B                     	;# 
  3007     021C                     	;# 
  3008     021C                     	;# 
  3009     021D                     	;# 
  3010     021D                     	;# 
  3011     021E                     	;# 
  3012     021F                     	;# 
  3013     028C                     	;# 
  3014     028C                     	;# 
  3015     028D                     	;# 
  3016     028D                     	;# 
  3017     028E                     	;# 
  3018     028F                     	;# 
  3019     0290                     	;# 
  3020     0291                     	;# 
  3021     0292                     	;# 
  3022     0292                     	;# 
  3023     0293                     	;# 
  3024     0293                     	;# 
  3025     0294                     	;# 
  3026     0295                     	;# 
  3027     0296                     	;# 
  3028     0297                     	;# 
  3029     0298                     	;# 
  3030     0298                     	;# 
  3031     0299                     	;# 
  3032     0299                     	;# 
  3033     029A                     	;# 
  3034     029B                     	;# 
  3035     029C                     	;# 
  3036     029D                     	;# 
  3037     029F                     	;# 
  3038     030C                     	;# 
  3039     030C                     	;# 
  3040     030D                     	;# 
  3041     030E                     	;# 
  3042     030F                     	;# 
  3043     0310                     	;# 
  3044     0310                     	;# 
  3045     0311                     	;# 
  3046     0312                     	;# 
  3047     0313                     	;# 
  3048     0314                     	;# 
  3049     0314                     	;# 
  3050     0315                     	;# 
  3051     0316                     	;# 
  3052     0317                     	;# 
  3053     0318                     	;# 
  3054     0318                     	;# 
  3055     0319                     	;# 
  3056     031A                     	;# 
  3057     031B                     	;# 
  3058     031C                     	;# 
  3059     031C                     	;# 
  3060     031D                     	;# 
  3061     031E                     	;# 
  3062     031F                     	;# 
  3063     038C                     	;# 
  3064     038C                     	;# 
  3065     038D                     	;# 
  3066     038E                     	;# 
  3067     0390                     	;# 
  3068     0390                     	;# 
  3069     0391                     	;# 
  3070     0392                     	;# 
  3071     048C                     	;# 
  3072     048C                     	;# 
  3073     048D                     	;# 
  3074     048E                     	;# 
  3075     048F                     	;# 
  3076     048F                     	;# 
  3077     0490                     	;# 
  3078     0491                     	;# 
  3079     0492                     	;# 
  3080     0492                     	;# 
  3081     0493                     	;# 
  3082     0494                     	;# 
  3083     0495                     	;# 
  3084     0495                     	;# 
  3085     0496                     	;# 
  3086     0497                     	;# 
  3087     0498                     	;# 
  3088     0499                     	;# 
  3089     049A                     	;# 
  3090     049B                     	;# 
  3091     049C                     	;# 
  3092     049D                     	;# 
  3093     050C                     	;# 
  3094     050C                     	;# 
  3095     050D                     	;# 
  3096     050E                     	;# 
  3097     050F                     	;# 
  3098     050F                     	;# 
  3099     0510                     	;# 
  3100     0511                     	;# 
  3101     0512                     	;# 
  3102     0512                     	;# 
  3103     0513                     	;# 
  3104     0514                     	;# 
  3105     0515                     	;# 
  3106     0515                     	;# 
  3107     0516                     	;# 
  3108     0517                     	;# 
  3109     0518                     	;# 
  3110     0519                     	;# 
  3111     051A                     	;# 
  3112     051B                     	;# 
  3113     051C                     	;# 
  3114     051D                     	;# 
  3115     058C                     	;# 
  3116     058C                     	;# 
  3117     058D                     	;# 
  3118     058E                     	;# 
  3119     058F                     	;# 
  3120     058F                     	;# 
  3121     0590                     	;# 
  3122     0591                     	;# 
  3123     0592                     	;# 
  3124     0593                     	;# 
  3125     059C                     	;# 
  3126     059C                     	;# 
  3127     059D                     	;# 
  3128     059D                     	;# 
  3129     059E                     	;# 
  3130     059F                     	;# 
  3131     060C                     	;# 
  3132     060C                     	;# 
  3133     060D                     	;# 
  3134     060D                     	;# 
  3135     060E                     	;# 
  3136     060F                     	;# 
  3137     0610                     	;# 
  3138     0611                     	;# 
  3139     0612                     	;# 
  3140     0613                     	;# 
  3141     0614                     	;# 
  3142     0616                     	;# 
  3143     0616                     	;# 
  3144     0617                     	;# 
  3145     0617                     	;# 
  3146     0618                     	;# 
  3147     0619                     	;# 
  3148     061A                     	;# 
  3149     061B                     	;# 
  3150     061C                     	;# 
  3151     061D                     	;# 
  3152     061E                     	;# 
  3153     068C                     	;# 
  3154     068D                     	;# 
  3155     068E                     	;# 
  3156     068F                     	;# 
  3157     0690                     	;# 
  3158     0691                     	;# 
  3159     0692                     	;# 
  3160     0693                     	;# 
  3161     0694                     	;# 
  3162     070C                     	;# 
  3163     070D                     	;# 
  3164     070E                     	;# 
  3165     070F                     	;# 
  3166     0710                     	;# 
  3167     0711                     	;# 
  3168     0712                     	;# 
  3169     0713                     	;# 
  3170     0714                     	;# 
  3171     0716                     	;# 
  3172     0717                     	;# 
  3173     0718                     	;# 
  3174     0719                     	;# 
  3175     071A                     	;# 
  3176     071B                     	;# 
  3177     071C                     	;# 
  3178     071D                     	;# 
  3179     071E                     	;# 
  3180     0796                     	;# 
  3181     0797                     	;# 
  3182     0798                     	;# 
  3183     0799                     	;# 
  3184     079A                     	;# 
  3185     079B                     	;# 
  3186     079C                     	;# 
  3187     079D                     	;# 
  3188     080C                     	;# 
  3189     080D                     	;# 
  3190     080E                     	;# 
  3191     080F                     	;# 
  3192     0810                     	;# 
  3193     0811                     	;# 
  3194     0813                     	;# 
  3195     0814                     	;# 
  3196     081A                     	;# 
  3197     081A                     	;# 
  3198     081B                     	;# 
  3199     081C                     	;# 
  3200     081C                     	;# 
  3201     081D                     	;# 
  3202     081E                     	;# 
  3203     081F                     	;# 
  3204     088C                     	;# 
  3205     088D                     	;# 
  3206     088E                     	;# 
  3207     088F                     	;# 
  3208     0890                     	;# 
  3209     0891                     	;# 
  3210     0892                     	;# 
  3211     0893                     	;# 
  3212     0895                     	;# 
  3213     0896                     	;# 
  3214     0897                     	;# 
  3215     0898                     	;# 
  3216     0899                     	;# 
  3217     089A                     	;# 
  3218     089B                     	;# 
  3219     090C                     	;# 
  3220     090E                     	;# 
  3221     090F                     	;# 
  3222     091F                     	;# 
  3223     098F                     	;# 
  3224     098F                     	;# 
  3225     0990                     	;# 
  3226     0991                     	;# 
  3227     0992                     	;# 
  3228     0993                     	;# 
  3229     0994                     	;# 
  3230     0995                     	;# 
  3231     0996                     	;# 
  3232     0997                     	;# 
  3233     0A19                     	;# 
  3234     0A19                     	;# 
  3235     0A1A                     	;# 
  3236     0A1A                     	;# 
  3237     0A1B                     	;# 
  3238     0A1B                     	;# 
  3239     0A1B                     	;# 
  3240     0A1C                     	;# 
  3241     0A1C                     	;# 
  3242     0A1D                     	;# 
  3243     0A1D                     	;# 
  3244     0A1E                     	;# 
  3245     0A1E                     	;# 
  3246     0A1F                     	;# 
  3247     0A1F                     	;# 
  3248     0A1F                     	;# 
  3249     1E0F                     	;# 
  3250     1E10                     	;# 
  3251     1E11                     	;# 
  3252     1E12                     	;# 
  3253     1E13                     	;# 
  3254     1E14                     	;# 
  3255     1E15                     	;# 
  3256     1E16                     	;# 
  3257     1E17                     	;# 
  3258     1E18                     	;# 
  3259     1E19                     	;# 
  3260     1E1A                     	;# 
  3261     1E1B                     	;# 
  3262     1E1C                     	;# 
  3263     1E1D                     	;# 
  3264     1E1E                     	;# 
  3265     1E1F                     	;# 
  3266     1E20                     	;# 
  3267     1E21                     	;# 
  3268     1E22                     	;# 
  3269     1E23                     	;# 
  3270     1E24                     	;# 
  3271     1E25                     	;# 
  3272     1E26                     	;# 
  3273     1E27                     	;# 
  3274     1E28                     	;# 
  3275     1E29                     	;# 
  3276     1E2A                     	;# 
  3277     1E2B                     	;# 
  3278     1E2C                     	;# 
  3279     1E2D                     	;# 
  3280     1E2E                     	;# 
  3281     1E2F                     	;# 
  3282     1E30                     	;# 
  3283     1E31                     	;# 
  3284     1E32                     	;# 
  3285     1E33                     	;# 
  3286     1E34                     	;# 
  3287     1E35                     	;# 
  3288     1E36                     	;# 
  3289     1E37                     	;# 
  3290     1E8F                     	;# 
  3291     1E90                     	;# 
  3292     1E91                     	;# 
  3293     1E92                     	;# 
  3294     1E93                     	;# 
  3295     1E94                     	;# 
  3296     1E95                     	;# 
  3297     1E96                     	;# 
  3298     1E97                     	;# 
  3299     1E9C                     	;# 
  3300     1E9D                     	;# 
  3301     1E9E                     	;# 
  3302     1EA1                     	;# 
  3303     1EA2                     	;# 
  3304     1EA3                     	;# 
  3305     1EA4                     	;# 
  3306     1EA5                     	;# 
  3307     1EA9                     	;# 
  3308     1EAA                     	;# 
  3309     1EAB                     	;# 
  3310     1EAC                     	;# 
  3311     1EB1                     	;# 
  3312     1EB2                     	;# 
  3313     1EB3                     	;# 
  3314     1EB8                     	;# 
  3315     1EB9                     	;# 
  3316     1EBA                     	;# 
  3317     1EBB                     	;# 
  3318     1EBC                     	;# 
  3319     1EBD                     	;# 
  3320     1EBE                     	;# 
  3321     1EC3                     	;# 
  3322     1EC5                     	;# 
  3323     1EC6                     	;# 
  3324     1EC7                     	;# 
  3325     1EC8                     	;# 
  3326     1EC9                     	;# 
  3327     1ECA                     	;# 
  3328     1ECB                     	;# 
  3329     1ECC                     	;# 
  3330     1ECD                     	;# 
  3331     1ECE                     	;# 
  3332     1F10                     	;# 
  3333     1F11                     	;# 
  3334     1F12                     	;# 
  3335     1F13                     	;# 
  3336     1F14                     	;# 
  3337     1F15                     	;# 
  3338     1F16                     	;# 
  3339     1F17                     	;# 
  3340     1F18                     	;# 
  3341     1F19                     	;# 
  3342     1F1A                     	;# 
  3343     1F1B                     	;# 
  3344     1F1C                     	;# 
  3345     1F1D                     	;# 
  3346     1F1E                     	;# 
  3347     1F1F                     	;# 
  3348     1F20                     	;# 
  3349     1F21                     	;# 
  3350     1F22                     	;# 
  3351     1F23                     	;# 
  3352     1F24                     	;# 
  3353     1F25                     	;# 
  3354     1F26                     	;# 
  3355     1F27                     	;# 
  3356     1F38                     	;# 
  3357     1F39                     	;# 
  3358     1F3A                     	;# 
  3359     1F3B                     	;# 
  3360     1F3C                     	;# 
  3361     1F3D                     	;# 
  3362     1F3E                     	;# 
  3363     1F3F                     	;# 
  3364     1F43                     	;# 
  3365     1F44                     	;# 
  3366     1F45                     	;# 
  3367     1F46                     	;# 
  3368     1F47                     	;# 
  3369     1F48                     	;# 
  3370     1F49                     	;# 
  3371     1F4A                     	;# 
  3372     1F4E                     	;# 
  3373     1F4F                     	;# 
  3374     1F50                     	;# 
  3375     1F51                     	;# 
  3376     1F52                     	;# 
  3377     1F53                     	;# 
  3378     1F54                     	;# 
  3379     1F55                     	;# 
  3380     1F65                     	;# 
  3381     1F66                     	;# 
  3382     1F67                     	;# 
  3383     1F68                     	;# 
  3384     1F69                     	;# 
  3385     1F6A                     	;# 
  3386     1F6B                     	;# 
  3387     1FE4                     	;# 
  3388     1FE5                     	;# 
  3389     1FE6                     	;# 
  3390     1FE7                     	;# 
  3391     1FE8                     	;# 
  3392     1FE8                     	;# 
  3393     1FE9                     	;# 
  3394     1FEA                     	;# 
  3395     1FEB                     	;# 
  3396     1FED                     	;# 
  3397     1FEE                     	;# 
  3398     1FEF                     	;# 
  3399     0000                     	;# 
  3400     0001                     	;# 
  3401     0002                     	;# 
  3402     0003                     	;# 
  3403     0004                     	;# 
  3404     0005                     	;# 
  3405     0006                     	;# 
  3406     0007                     	;# 
  3407     0008                     	;# 
  3408     0009                     	;# 
  3409     000A                     	;# 
  3410     000B                     	;# 
  3411     000C                     	;# 
  3412     000D                     	;# 
  3413     000E                     	;# 
  3414     0010                     	;# 
  3415     0012                     	;# 
  3416     0013                     	;# 
  3417     0014                     	;# 
  3418     0016                     	;# 
  3419     0018                     	;# 
  3420     0019                     	;# 
  3421     001A                     	;# 
  3422     001C                     	;# 
  3423     008C                     	;# 
  3424     008C                     	;# 
  3425     008D                     	;# 
  3426     008E                     	;# 
  3427     008E                     	;# 
  3428     008F                     	;# 
  3429     0090                     	;# 
  3430     0090                     	;# 
  3431     0091                     	;# 
  3432     0092                     	;# 
  3433     0092                     	;# 
  3434     0093                     	;# 
  3435     0094                     	;# 
  3436     0094                     	;# 
  3437     0095                     	;# 
  3438     0096                     	;# 
  3439     0096                     	;# 
  3440     0097                     	;# 
  3441     0098                     	;# 
  3442     0099                     	;# 
  3443     009A                     	;# 
  3444     009B                     	;# 
  3445     009B                     	;# 
  3446     009C                     	;# 
  3447     009D                     	;# 
  3448     009D                     	;# 
  3449     009E                     	;# 
  3450     009F                     	;# 
  3451     010C                     	;# 
  3452     010C                     	;# 
  3453     010D                     	;# 
  3454     010E                     	;# 
  3455     010F                     	;# 
  3456     010F                     	;# 
  3457     0110                     	;# 
  3458     0111                     	;# 
  3459     0112                     	;# 
  3460     0113                     	;# 
  3461     0114                     	;# 
  3462     0115                     	;# 
  3463     0116                     	;# 
  3464     0117                     	;# 
  3465     0118                     	;# 
  3466     0119                     	;# 
  3467     0119                     	;# 
  3468     0119                     	;# 
  3469     011A                     	;# 
  3470     011A                     	;# 
  3471     011A                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011B                     	;# 
  3476     011B                     	;# 
  3477     011C                     	;# 
  3478     011C                     	;# 
  3479     011C                     	;# 
  3480     011D                     	;# 
  3481     011D                     	;# 
  3482     011D                     	;# 
  3483     011E                     	;# 
  3484     011E                     	;# 
  3485     011E                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     011F                     	;# 
  3490     011F                     	;# 
  3491     018C                     	;# 
  3492     018D                     	;# 
  3493     018E                     	;# 
  3494     018F                     	;# 
  3495     0190                     	;# 
  3496     0191                     	;# 
  3497     0192                     	;# 
  3498     0196                     	;# 
  3499     0197                     	;# 
  3500     0198                     	;# 
  3501     0199                     	;# 
  3502     019A                     	;# 
  3503     019B                     	;# 
  3504     019C                     	;# 
  3505     020C                     	;# 
  3506     020D                     	;# 
  3507     020E                     	;# 
  3508     020E                     	;# 
  3509     020F                     	;# 
  3510     020F                     	;# 
  3511     0210                     	;# 
  3512     0210                     	;# 
  3513     0211                     	;# 
  3514     0211                     	;# 
  3515     0212                     	;# 
  3516     0213                     	;# 
  3517     0214                     	;# 
  3518     0214                     	;# 
  3519     0215                     	;# 
  3520     0215                     	;# 
  3521     0216                     	;# 
  3522     0216                     	;# 
  3523     0217                     	;# 
  3524     0217                     	;# 
  3525     0218                     	;# 
  3526     0219                     	;# 
  3527     021A                     	;# 
  3528     021A                     	;# 
  3529     021B                     	;# 
  3530     021B                     	;# 
  3531     021C                     	;# 
  3532     021C                     	;# 
  3533     021D                     	;# 
  3534     021D                     	;# 
  3535     021E                     	;# 
  3536     021F                     	;# 
  3537     028C                     	;# 
  3538     028C                     	;# 
  3539     028D                     	;# 
  3540     028D                     	;# 
  3541     028E                     	;# 
  3542     028F                     	;# 
  3543     0290                     	;# 
  3544     0291                     	;# 
  3545     0292                     	;# 
  3546     0292                     	;# 
  3547     0293                     	;# 
  3548     0293                     	;# 
  3549     0294                     	;# 
  3550     0295                     	;# 
  3551     0296                     	;# 
  3552     0297                     	;# 
  3553     0298                     	;# 
  3554     0298                     	;# 
  3555     0299                     	;# 
  3556     0299                     	;# 
  3557     029A                     	;# 
  3558     029B                     	;# 
  3559     029C                     	;# 
  3560     029D                     	;# 
  3561     029F                     	;# 
  3562     030C                     	;# 
  3563     030C                     	;# 
  3564     030D                     	;# 
  3565     030E                     	;# 
  3566     030F                     	;# 
  3567     0310                     	;# 
  3568     0310                     	;# 
  3569     0311                     	;# 
  3570     0312                     	;# 
  3571     0313                     	;# 
  3572     0314                     	;# 
  3573     0314                     	;# 
  3574     0315                     	;# 
  3575     0316                     	;# 
  3576     0317                     	;# 
  3577     0318                     	;# 
  3578     0318                     	;# 
  3579     0319                     	;# 
  3580     031A                     	;# 
  3581     031B                     	;# 
  3582     031C                     	;# 
  3583     031C                     	;# 
  3584     031D                     	;# 
  3585     031E                     	;# 
  3586     031F                     	;# 
  3587     038C                     	;# 
  3588     038C                     	;# 
  3589     038D                     	;# 
  3590     038E                     	;# 
  3591     0390                     	;# 
  3592     0390                     	;# 
  3593     0391                     	;# 
  3594     0392                     	;# 
  3595     048C                     	;# 
  3596     048C                     	;# 
  3597     048D                     	;# 
  3598     048E                     	;# 
  3599     048F                     	;# 
  3600     048F                     	;# 
  3601     0490                     	;# 
  3602     0491                     	;# 
  3603     0492                     	;# 
  3604     0492                     	;# 
  3605     0493                     	;# 
  3606     0494                     	;# 
  3607     0495                     	;# 
  3608     0495                     	;# 
  3609     0496                     	;# 
  3610     0497                     	;# 
  3611     0498                     	;# 
  3612     0499                     	;# 
  3613     049A                     	;# 
  3614     049B                     	;# 
  3615     049C                     	;# 
  3616     049D                     	;# 
  3617     050C                     	;# 
  3618     050C                     	;# 
  3619     050D                     	;# 
  3620     050E                     	;# 
  3621     050F                     	;# 
  3622     050F                     	;# 
  3623     0510                     	;# 
  3624     0511                     	;# 
  3625     0512                     	;# 
  3626     0512                     	;# 
  3627     0513                     	;# 
  3628     0514                     	;# 
  3629     0515                     	;# 
  3630     0515                     	;# 
  3631     0516                     	;# 
  3632     0517                     	;# 
  3633     0518                     	;# 
  3634     0519                     	;# 
  3635     051A                     	;# 
  3636     051B                     	;# 
  3637     051C                     	;# 
  3638     051D                     	;# 
  3639     058C                     	;# 
  3640     058C                     	;# 
  3641     058D                     	;# 
  3642     058E                     	;# 
  3643     058F                     	;# 
  3644     058F                     	;# 
  3645     0590                     	;# 
  3646     0591                     	;# 
  3647     0592                     	;# 
  3648     0593                     	;# 
  3649     059C                     	;# 
  3650     059C                     	;# 
  3651     059D                     	;# 
  3652     059D                     	;# 
  3653     059E                     	;# 
  3654     059F                     	;# 
  3655     060C                     	;# 
  3656     060C                     	;# 
  3657     060D                     	;# 
  3658     060D                     	;# 
  3659     060E                     	;# 
  3660     060F                     	;# 
  3661     0610                     	;# 
  3662     0611                     	;# 
  3663     0612                     	;# 
  3664     0613                     	;# 
  3665     0614                     	;# 
  3666     0616                     	;# 
  3667     0616                     	;# 
  3668     0617                     	;# 
  3669     0617                     	;# 
  3670     0618                     	;# 
  3671     0619                     	;# 
  3672     061A                     	;# 
  3673     061B                     	;# 
  3674     061C                     	;# 
  3675     061D                     	;# 
  3676     061E                     	;# 
  3677     068C                     	;# 
  3678     068D                     	;# 
  3679     068E                     	;# 
  3680     068F                     	;# 
  3681     0690                     	;# 
  3682     0691                     	;# 
  3683     0692                     	;# 
  3684     0693                     	;# 
  3685     0694                     	;# 
  3686     070C                     	;# 
  3687     070D                     	;# 
  3688     070E                     	;# 
  3689     070F                     	;# 
  3690     0710                     	;# 
  3691     0711                     	;# 
  3692     0712                     	;# 
  3693     0713                     	;# 
  3694     0714                     	;# 
  3695     0716                     	;# 
  3696     0717                     	;# 
  3697     0718                     	;# 
  3698     0719                     	;# 
  3699     071A                     	;# 
  3700     071B                     	;# 
  3701     071C                     	;# 
  3702     071D                     	;# 
  3703     071E                     	;# 
  3704     0796                     	;# 
  3705     0797                     	;# 
  3706     0798                     	;# 
  3707     0799                     	;# 
  3708     079A                     	;# 
  3709     079B                     	;# 
  3710     079C                     	;# 
  3711     079D                     	;# 
  3712     080C                     	;# 
  3713     080D                     	;# 
  3714     080E                     	;# 
  3715     080F                     	;# 
  3716     0810                     	;# 
  3717     0811                     	;# 
  3718     0813                     	;# 
  3719     0814                     	;# 
  3720     081A                     	;# 
  3721     081A                     	;# 
  3722     081B                     	;# 
  3723     081C                     	;# 
  3724     081C                     	;# 
  3725     081D                     	;# 
  3726     081E                     	;# 
  3727     081F                     	;# 
  3728     088C                     	;# 
  3729     088D                     	;# 
  3730     088E                     	;# 
  3731     088F                     	;# 
  3732     0890                     	;# 
  3733     0891                     	;# 
  3734     0892                     	;# 
  3735     0893                     	;# 
  3736     0895                     	;# 
  3737     0896                     	;# 
  3738     0897                     	;# 
  3739     0898                     	;# 
  3740     0899                     	;# 
  3741     089A                     	;# 
  3742     089B                     	;# 
  3743     090C                     	;# 
  3744     090E                     	;# 
  3745     090F                     	;# 
  3746     091F                     	;# 
  3747     098F                     	;# 
  3748     098F                     	;# 
  3749     0990                     	;# 
  3750     0991                     	;# 
  3751     0992                     	;# 
  3752     0993                     	;# 
  3753     0994                     	;# 
  3754     0995                     	;# 
  3755     0996                     	;# 
  3756     0997                     	;# 
  3757     0A19                     	;# 
  3758     0A19                     	;# 
  3759     0A1A                     	;# 
  3760     0A1A                     	;# 
  3761     0A1B                     	;# 
  3762     0A1B                     	;# 
  3763     0A1B                     	;# 
  3764     0A1C                     	;# 
  3765     0A1C                     	;# 
  3766     0A1D                     	;# 
  3767     0A1D                     	;# 
  3768     0A1E                     	;# 
  3769     0A1E                     	;# 
  3770     0A1F                     	;# 
  3771     0A1F                     	;# 
  3772     0A1F                     	;# 
  3773     1E0F                     	;# 
  3774     1E10                     	;# 
  3775     1E11                     	;# 
  3776     1E12                     	;# 
  3777     1E13                     	;# 
  3778     1E14                     	;# 
  3779     1E15                     	;# 
  3780     1E16                     	;# 
  3781     1E17                     	;# 
  3782     1E18                     	;# 
  3783     1E19                     	;# 
  3784     1E1A                     	;# 
  3785     1E1B                     	;# 
  3786     1E1C                     	;# 
  3787     1E1D                     	;# 
  3788     1E1E                     	;# 
  3789     1E1F                     	;# 
  3790     1E20                     	;# 
  3791     1E21                     	;# 
  3792     1E22                     	;# 
  3793     1E23                     	;# 
  3794     1E24                     	;# 
  3795     1E25                     	;# 
  3796     1E26                     	;# 
  3797     1E27                     	;# 
  3798     1E28                     	;# 
  3799     1E29                     	;# 
  3800     1E2A                     	;# 
  3801     1E2B                     	;# 
  3802     1E2C                     	;# 
  3803     1E2D                     	;# 
  3804     1E2E                     	;# 
  3805     1E2F                     	;# 
  3806     1E30                     	;# 
  3807     1E31                     	;# 
  3808     1E32                     	;# 
  3809     1E33                     	;# 
  3810     1E34                     	;# 
  3811     1E35                     	;# 
  3812     1E36                     	;# 
  3813     1E37                     	;# 
  3814     1E8F                     	;# 
  3815     1E90                     	;# 
  3816     1E91                     	;# 
  3817     1E92                     	;# 
  3818     1E93                     	;# 
  3819     1E94                     	;# 
  3820     1E95                     	;# 
  3821     1E96                     	;# 
  3822     1E97                     	;# 
  3823     1E9C                     	;# 
  3824     1E9D                     	;# 
  3825     1E9E                     	;# 
  3826     1EA1                     	;# 
  3827     1EA2                     	;# 
  3828     1EA3                     	;# 
  3829     1EA4                     	;# 
  3830     1EA5                     	;# 
  3831     1EA9                     	;# 
  3832     1EAA                     	;# 
  3833     1EAB                     	;# 
  3834     1EAC                     	;# 
  3835     1EB1                     	;# 
  3836     1EB2                     	;# 
  3837     1EB3                     	;# 
  3838     1EB8                     	;# 
  3839     1EB9                     	;# 
  3840     1EBA                     	;# 
  3841     1EBB                     	;# 
  3842     1EBC                     	;# 
  3843     1EBD                     	;# 
  3844     1EBE                     	;# 
  3845     1EC3                     	;# 
  3846     1EC5                     	;# 
  3847     1EC6                     	;# 
  3848     1EC7                     	;# 
  3849     1EC8                     	;# 
  3850     1EC9                     	;# 
  3851     1ECA                     	;# 
  3852     1ECB                     	;# 
  3853     1ECC                     	;# 
  3854     1ECD                     	;# 
  3855     1ECE                     	;# 
  3856     1F10                     	;# 
  3857     1F11                     	;# 
  3858     1F12                     	;# 
  3859     1F13                     	;# 
  3860     1F14                     	;# 
  3861     1F15                     	;# 
  3862     1F16                     	;# 
  3863     1F17                     	;# 
  3864     1F18                     	;# 
  3865     1F19                     	;# 
  3866     1F1A                     	;# 
  3867     1F1B                     	;# 
  3868     1F1C                     	;# 
  3869     1F1D                     	;# 
  3870     1F1E                     	;# 
  3871     1F1F                     	;# 
  3872     1F20                     	;# 
  3873     1F21                     	;# 
  3874     1F22                     	;# 
  3875     1F23                     	;# 
  3876     1F24                     	;# 
  3877     1F25                     	;# 
  3878     1F26                     	;# 
  3879     1F27                     	;# 
  3880     1F38                     	;# 
  3881     1F39                     	;# 
  3882     1F3A                     	;# 
  3883     1F3B                     	;# 
  3884     1F3C                     	;# 
  3885     1F3D                     	;# 
  3886     1F3E                     	;# 
  3887     1F3F                     	;# 
  3888     1F43                     	;# 
  3889     1F44                     	;# 
  3890     1F45                     	;# 
  3891     1F46                     	;# 
  3892     1F47                     	;# 
  3893     1F48                     	;# 
  3894     1F49                     	;# 
  3895     1F4A                     	;# 
  3896     1F4E                     	;# 
  3897     1F4F                     	;# 
  3898     1F50                     	;# 
  3899     1F51                     	;# 
  3900     1F52                     	;# 
  3901     1F53                     	;# 
  3902     1F54                     	;# 
  3903     1F55                     	;# 
  3904     1F65                     	;# 
  3905     1F66                     	;# 
  3906     1F67                     	;# 
  3907     1F68                     	;# 
  3908     1F69                     	;# 
  3909     1F6A                     	;# 
  3910     1F6B                     	;# 
  3911     1FE4                     	;# 
  3912     1FE5                     	;# 
  3913     1FE6                     	;# 
  3914     1FE7                     	;# 
  3915     1FE8                     	;# 
  3916     1FE8                     	;# 
  3917     1FE9                     	;# 
  3918     1FEA                     	;# 
  3919     1FEB                     	;# 
  3920     1FED                     	;# 
  3921     1FEE                     	;# 
  3922     1FEF                     	;# 
  3923     0000                     	;# 
  3924     0001                     	;# 
  3925     0002                     	;# 
  3926     0003                     	;# 
  3927     0004                     	;# 
  3928     0005                     	;# 
  3929     0006                     	;# 
  3930     0007                     	;# 
  3931     0008                     	;# 
  3932     0009                     	;# 
  3933     000A                     	;# 
  3934     000B                     	;# 
  3935     000C                     	;# 
  3936     000D                     	;# 
  3937     000E                     	;# 
  3938     0010                     	;# 
  3939     0012                     	;# 
  3940     0013                     	;# 
  3941     0014                     	;# 
  3942     0016                     	;# 
  3943     0018                     	;# 
  3944     0019                     	;# 
  3945     001A                     	;# 
  3946     001C                     	;# 
  3947     008C                     	;# 
  3948     008C                     	;# 
  3949     008D                     	;# 
  3950     008E                     	;# 
  3951     008E                     	;# 
  3952     008F                     	;# 
  3953     0090                     	;# 
  3954     0090                     	;# 
  3955     0091                     	;# 
  3956     0092                     	;# 
  3957     0092                     	;# 
  3958     0093                     	;# 
  3959     0094                     	;# 
  3960     0094                     	;# 
  3961     0095                     	;# 
  3962     0096                     	;# 
  3963     0096                     	;# 
  3964     0097                     	;# 
  3965     0098                     	;# 
  3966     0099                     	;# 
  3967     009A                     	;# 
  3968     009B                     	;# 
  3969     009B                     	;# 
  3970     009C                     	;# 
  3971     009D                     	;# 
  3972     009D                     	;# 
  3973     009E                     	;# 
  3974     009F                     	;# 
  3975     010C                     	;# 
  3976     010C                     	;# 
  3977     010D                     	;# 
  3978     010E                     	;# 
  3979     010F                     	;# 
  3980     010F                     	;# 
  3981     0110                     	;# 
  3982     0111                     	;# 
  3983     0112                     	;# 
  3984     0113                     	;# 
  3985     0114                     	;# 
  3986     0115                     	;# 
  3987     0116                     	;# 
  3988     0117                     	;# 
  3989     0118                     	;# 
  3990     0119                     	;# 
  3991     0119                     	;# 
  3992     0119                     	;# 
  3993     011A                     	;# 
  3994     011A                     	;# 
  3995     011A                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011B                     	;# 
  4000     011B                     	;# 
  4001     011C                     	;# 
  4002     011C                     	;# 
  4003     011C                     	;# 
  4004     011D                     	;# 
  4005     011D                     	;# 
  4006     011D                     	;# 
  4007     011E                     	;# 
  4008     011E                     	;# 
  4009     011E                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     011F                     	;# 
  4014     011F                     	;# 
  4015     018C                     	;# 
  4016     018D                     	;# 
  4017     018E                     	;# 
  4018     018F                     	;# 
  4019     0190                     	;# 
  4020     0191                     	;# 
  4021     0192                     	;# 
  4022     0196                     	;# 
  4023     0197                     	;# 
  4024     0198                     	;# 
  4025     0199                     	;# 
  4026     019A                     	;# 
  4027     019B                     	;# 
  4028     019C                     	;# 
  4029     020C                     	;# 
  4030     020D                     	;# 
  4031     020E                     	;# 
  4032     020E                     	;# 
  4033     020F                     	;# 
  4034     020F                     	;# 
  4035     0210                     	;# 
  4036     0210                     	;# 
  4037     0211                     	;# 
  4038     0211                     	;# 
  4039     0212                     	;# 
  4040     0213                     	;# 
  4041     0214                     	;# 
  4042     0214                     	;# 
  4043     0215                     	;# 
  4044     0215                     	;# 
  4045     0216                     	;# 
  4046     0216                     	;# 
  4047     0217                     	;# 
  4048     0217                     	;# 
  4049     0218                     	;# 
  4050     0219                     	;# 
  4051     021A                     	;# 
  4052     021A                     	;# 
  4053     021B                     	;# 
  4054     021B                     	;# 
  4055     021C                     	;# 
  4056     021C                     	;# 
  4057     021D                     	;# 
  4058     021D                     	;# 
  4059     021E                     	;# 
  4060     021F                     	;# 
  4061     028C                     	;# 
  4062     028C                     	;# 
  4063     028D                     	;# 
  4064     028D                     	;# 
  4065     028E                     	;# 
  4066     028F                     	;# 
  4067     0290                     	;# 
  4068     0291                     	;# 
  4069     0292                     	;# 
  4070     0292                     	;# 
  4071     0293                     	;# 
  4072     0293                     	;# 
  4073     0294                     	;# 
  4074     0295                     	;# 
  4075     0296                     	;# 
  4076     0297                     	;# 
  4077     0298                     	;# 
  4078     0298                     	;# 
  4079     0299                     	;# 
  4080     0299                     	;# 
  4081     029A                     	;# 
  4082     029B                     	;# 
  4083     029C                     	;# 
  4084     029D                     	;# 
  4085     029F                     	;# 
  4086     030C                     	;# 
  4087     030C                     	;# 
  4088     030D                     	;# 
  4089     030E                     	;# 
  4090     030F                     	;# 
  4091     0310                     	;# 
  4092     0310                     	;# 
  4093     0311                     	;# 
  4094     0312                     	;# 
  4095     0313                     	;# 
  4096     0314                     	;# 
  4097     0314                     	;# 
  4098     0315                     	;# 
  4099     0316                     	;# 
  4100     0317                     	;# 
  4101     0318                     	;# 
  4102     0318                     	;# 
  4103     0319                     	;# 
  4104     031A                     	;# 
  4105     031B                     	;# 
  4106     031C                     	;# 
  4107     031C                     	;# 
  4108     031D                     	;# 
  4109     031E                     	;# 
  4110     031F                     	;# 
  4111     038C                     	;# 
  4112     038C                     	;# 
  4113     038D                     	;# 
  4114     038E                     	;# 
  4115     0390                     	;# 
  4116     0390                     	;# 
  4117     0391                     	;# 
  4118     0392                     	;# 
  4119     048C                     	;# 
  4120     048C                     	;# 
  4121     048D                     	;# 
  4122     048E                     	;# 
  4123     048F                     	;# 
  4124     048F                     	;# 
  4125     0490                     	;# 
  4126     0491                     	;# 
  4127     0492                     	;# 
  4128     0492                     	;# 
  4129     0493                     	;# 
  4130     0494                     	;# 
  4131     0495                     	;# 
  4132     0495                     	;# 
  4133     0496                     	;# 
  4134     0497                     	;# 
  4135     0498                     	;# 
  4136     0499                     	;# 
  4137     049A                     	;# 
  4138     049B                     	;# 
  4139     049C                     	;# 
  4140     049D                     	;# 
  4141     050C                     	;# 
  4142     050C                     	;# 
  4143     050D                     	;# 
  4144     050E                     	;# 
  4145     050F                     	;# 
  4146     050F                     	;# 
  4147     0510                     	;# 
  4148     0511                     	;# 
  4149     0512                     	;# 
  4150     0512                     	;# 
  4151     0513                     	;# 
  4152     0514                     	;# 
  4153     0515                     	;# 
  4154     0515                     	;# 
  4155     0516                     	;# 
  4156     0517                     	;# 
  4157     0518                     	;# 
  4158     0519                     	;# 
  4159     051A                     	;# 
  4160     051B                     	;# 
  4161     051C                     	;# 
  4162     051D                     	;# 
  4163     058C                     	;# 
  4164     058C                     	;# 
  4165     058D                     	;# 
  4166     058E                     	;# 
  4167     058F                     	;# 
  4168     058F                     	;# 
  4169     0590                     	;# 
  4170     0591                     	;# 
  4171     0592                     	;# 
  4172     0593                     	;# 
  4173     059C                     	;# 
  4174     059C                     	;# 
  4175     059D                     	;# 
  4176     059D                     	;# 
  4177     059E                     	;# 
  4178     059F                     	;# 
  4179     060C                     	;# 
  4180     060C                     	;# 
  4181     060D                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     0610                     	;# 
  4186     0611                     	;# 
  4187     0612                     	;# 
  4188     0613                     	;# 
  4189     0614                     	;# 
  4190     0616                     	;# 
  4191     0616                     	;# 
  4192     0617                     	;# 
  4193     0617                     	;# 
  4194     0618                     	;# 
  4195     0619                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     061D                     	;# 
  4200     061E                     	;# 
  4201     068C                     	;# 
  4202     068D                     	;# 
  4203     068E                     	;# 
  4204     068F                     	;# 
  4205     0690                     	;# 
  4206     0691                     	;# 
  4207     0692                     	;# 
  4208     0693                     	;# 
  4209     0694                     	;# 
  4210     070C                     	;# 
  4211     070D                     	;# 
  4212     070E                     	;# 
  4213     070F                     	;# 
  4214     0710                     	;# 
  4215     0711                     	;# 
  4216     0712                     	;# 
  4217     0713                     	;# 
  4218     0714                     	;# 
  4219     0716                     	;# 
  4220     0717                     	;# 
  4221     0718                     	;# 
  4222     0719                     	;# 
  4223     071A                     	;# 
  4224     071B                     	;# 
  4225     071C                     	;# 
  4226     071D                     	;# 
  4227     071E                     	;# 
  4228     0796                     	;# 
  4229     0797                     	;# 
  4230     0798                     	;# 
  4231     0799                     	;# 
  4232     079A                     	;# 
  4233     079B                     	;# 
  4234     079C                     	;# 
  4235     079D                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080F                     	;# 
  4240     0810                     	;# 
  4241     0811                     	;# 
  4242     0813                     	;# 
  4243     0814                     	;# 
  4244     081A                     	;# 
  4245     081A                     	;# 
  4246     081B                     	;# 
  4247     081C                     	;# 
  4248     081C                     	;# 
  4249     081D                     	;# 
  4250     081E                     	;# 
  4251     081F                     	;# 
  4252     088C                     	;# 
  4253     088D                     	;# 
  4254     088E                     	;# 
  4255     088F                     	;# 
  4256     0890                     	;# 
  4257     0891                     	;# 
  4258     0892                     	;# 
  4259     0893                     	;# 
  4260     0895                     	;# 
  4261     0896                     	;# 
  4262     0897                     	;# 
  4263     0898                     	;# 
  4264     0899                     	;# 
  4265     089A                     	;# 
  4266     089B                     	;# 
  4267     090C                     	;# 
  4268     090E                     	;# 
  4269     090F                     	;# 
  4270     091F                     	;# 
  4271     098F                     	;# 
  4272     098F                     	;# 
  4273     0990                     	;# 
  4274     0991                     	;# 
  4275     0992                     	;# 
  4276     0993                     	;# 
  4277     0994                     	;# 
  4278     0995                     	;# 
  4279     0996                     	;# 
  4280     0997                     	;# 
  4281     0A19                     	;# 
  4282     0A19                     	;# 
  4283     0A1A                     	;# 
  4284     0A1A                     	;# 
  4285     0A1B                     	;# 
  4286     0A1B                     	;# 
  4287     0A1B                     	;# 
  4288     0A1C                     	;# 
  4289     0A1C                     	;# 
  4290     0A1D                     	;# 
  4291     0A1D                     	;# 
  4292     0A1E                     	;# 
  4293     0A1E                     	;# 
  4294     0A1F                     	;# 
  4295     0A1F                     	;# 
  4296     0A1F                     	;# 
  4297     1E0F                     	;# 
  4298     1E10                     	;# 
  4299     1E11                     	;# 
  4300     1E12                     	;# 
  4301     1E13                     	;# 
  4302     1E14                     	;# 
  4303     1E15                     	;# 
  4304     1E16                     	;# 
  4305     1E17                     	;# 
  4306     1E18                     	;# 
  4307     1E19                     	;# 
  4308     1E1A                     	;# 
  4309     1E1B                     	;# 
  4310     1E1C                     	;# 
  4311     1E1D                     	;# 
  4312     1E1E                     	;# 
  4313     1E1F                     	;# 
  4314     1E20                     	;# 
  4315     1E21                     	;# 
  4316     1E22                     	;# 
  4317     1E23                     	;# 
  4318     1E24                     	;# 
  4319     1E25                     	;# 
  4320     1E26                     	;# 
  4321     1E27                     	;# 
  4322     1E28                     	;# 
  4323     1E29                     	;# 
  4324     1E2A                     	;# 
  4325     1E2B                     	;# 
  4326     1E2C                     	;# 
  4327     1E2D                     	;# 
  4328     1E2E                     	;# 
  4329     1E2F                     	;# 
  4330     1E30                     	;# 
  4331     1E31                     	;# 
  4332     1E32                     	;# 
  4333     1E33                     	;# 
  4334     1E34                     	;# 
  4335     1E35                     	;# 
  4336     1E36                     	;# 
  4337     1E37                     	;# 
  4338     1E8F                     	;# 
  4339     1E90                     	;# 
  4340     1E91                     	;# 
  4341     1E92                     	;# 
  4342     1E93                     	;# 
  4343     1E94                     	;# 
  4344     1E95                     	;# 
  4345     1E96                     	;# 
  4346     1E97                     	;# 
  4347     1E9C                     	;# 
  4348     1E9D                     	;# 
  4349     1E9E                     	;# 
  4350     1EA1                     	;# 
  4351     1EA2                     	;# 
  4352     1EA3                     	;# 
  4353     1EA4                     	;# 
  4354     1EA5                     	;# 
  4355     1EA9                     	;# 
  4356     1EAA                     	;# 
  4357     1EAB                     	;# 
  4358     1EAC                     	;# 
  4359     1EB1                     	;# 
  4360     1EB2                     	;# 
  4361     1EB3                     	;# 
  4362     1EB8                     	;# 
  4363     1EB9                     	;# 
  4364     1EBA                     	;# 
  4365     1EBB                     	;# 
  4366     1EBC                     	;# 
  4367     1EBD                     	;# 
  4368     1EBE                     	;# 
  4369     1EC3                     	;# 
  4370     1EC5                     	;# 
  4371     1EC6                     	;# 
  4372     1EC7                     	;# 
  4373     1EC8                     	;# 
  4374     1EC9                     	;# 
  4375     1ECA                     	;# 
  4376     1ECB                     	;# 
  4377     1ECC                     	;# 
  4378     1ECD                     	;# 
  4379     1ECE                     	;# 
  4380     1F10                     	;# 
  4381     1F11                     	;# 
  4382     1F12                     	;# 
  4383     1F13                     	;# 
  4384     1F14                     	;# 
  4385     1F15                     	;# 
  4386     1F16                     	;# 
  4387     1F17                     	;# 
  4388     1F18                     	;# 
  4389     1F19                     	;# 
  4390     1F1A                     	;# 
  4391     1F1B                     	;# 
  4392     1F1C                     	;# 
  4393     1F1D                     	;# 
  4394     1F1E                     	;# 
  4395     1F1F                     	;# 
  4396     1F20                     	;# 
  4397     1F21                     	;# 
  4398     1F22                     	;# 
  4399     1F23                     	;# 
  4400     1F24                     	;# 
  4401     1F25                     	;# 
  4402     1F26                     	;# 
  4403     1F27                     	;# 
  4404     1F38                     	;# 
  4405     1F39                     	;# 
  4406     1F3A                     	;# 
  4407     1F3B                     	;# 
  4408     1F3C                     	;# 
  4409     1F3D                     	;# 
  4410     1F3E                     	;# 
  4411     1F3F                     	;# 
  4412     1F43                     	;# 
  4413     1F44                     	;# 
  4414     1F45                     	;# 
  4415     1F46                     	;# 
  4416     1F47                     	;# 
  4417     1F48                     	;# 
  4418     1F49                     	;# 
  4419     1F4A                     	;# 
  4420     1F4E                     	;# 
  4421     1F4F                     	;# 
  4422     1F50                     	;# 
  4423     1F51                     	;# 
  4424     1F52                     	;# 
  4425     1F53                     	;# 
  4426     1F54                     	;# 
  4427     1F55                     	;# 
  4428     1F65                     	;# 
  4429     1F66                     	;# 
  4430     1F67                     	;# 
  4431     1F68                     	;# 
  4432     1F69                     	;# 
  4433     1F6A                     	;# 
  4434     1F6B                     	;# 
  4435     1FE4                     	;# 
  4436     1FE5                     	;# 
  4437     1FE6                     	;# 
  4438     1FE7                     	;# 
  4439     1FE8                     	;# 
  4440     1FE8                     	;# 
  4441     1FE9                     	;# 
  4442     1FEA                     	;# 
  4443     1FEB                     	;# 
  4444     1FED                     	;# 
  4445     1FEE                     	;# 
  4446     1FEF                     	;# 
  4447     0000                     	;# 
  4448     0001                     	;# 
  4449     0002                     	;# 
  4450     0003                     	;# 
  4451     0004                     	;# 
  4452     0005                     	;# 
  4453     0006                     	;# 
  4454     0007                     	;# 
  4455     0008                     	;# 
  4456     0009                     	;# 
  4457     000A                     	;# 
  4458     000B                     	;# 
  4459     000C                     	;# 
  4460     000D                     	;# 
  4461     000E                     	;# 
  4462     0010                     	;# 
  4463     0012                     	;# 
  4464     0013                     	;# 
  4465     0014                     	;# 
  4466     0016                     	;# 
  4467     0018                     	;# 
  4468     0019                     	;# 
  4469     001A                     	;# 
  4470     001C                     	;# 
  4471     008C                     	;# 
  4472     008C                     	;# 
  4473     008D                     	;# 
  4474     008E                     	;# 
  4475     008E                     	;# 
  4476     008F                     	;# 
  4477     0090                     	;# 
  4478     0090                     	;# 
  4479     0091                     	;# 
  4480     0092                     	;# 
  4481     0092                     	;# 
  4482     0093                     	;# 
  4483     0094                     	;# 
  4484     0094                     	;# 
  4485     0095                     	;# 
  4486     0096                     	;# 
  4487     0096                     	;# 
  4488     0097                     	;# 
  4489     0098                     	;# 
  4490     0099                     	;# 
  4491     009A                     	;# 
  4492     009B                     	;# 
  4493     009B                     	;# 
  4494     009C                     	;# 
  4495     009D                     	;# 
  4496     009D                     	;# 
  4497     009E                     	;# 
  4498     009F                     	;# 
  4499     010C                     	;# 
  4500     010C                     	;# 
  4501     010D                     	;# 
  4502     010E                     	;# 
  4503     010F                     	;# 
  4504     010F                     	;# 
  4505     0110                     	;# 
  4506     0111                     	;# 
  4507     0112                     	;# 
  4508     0113                     	;# 
  4509     0114                     	;# 
  4510     0115                     	;# 
  4511     0116                     	;# 
  4512     0117                     	;# 
  4513     0118                     	;# 
  4514     0119                     	;# 
  4515     0119                     	;# 
  4516     0119                     	;# 
  4517     011A                     	;# 
  4518     011A                     	;# 
  4519     011A                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011B                     	;# 
  4524     011B                     	;# 
  4525     011C                     	;# 
  4526     011C                     	;# 
  4527     011C                     	;# 
  4528     011D                     	;# 
  4529     011D                     	;# 
  4530     011D                     	;# 
  4531     011E                     	;# 
  4532     011E                     	;# 
  4533     011E                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     011F                     	;# 
  4538     011F                     	;# 
  4539     018C                     	;# 
  4540     018D                     	;# 
  4541     018E                     	;# 
  4542     018F                     	;# 
  4543     0190                     	;# 
  4544     0191                     	;# 
  4545     0192                     	;# 
  4546     0196                     	;# 
  4547     0197                     	;# 
  4548     0198                     	;# 
  4549     0199                     	;# 
  4550     019A                     	;# 
  4551     019B                     	;# 
  4552     019C                     	;# 
  4553     020C                     	;# 
  4554     020D                     	;# 
  4555     020E                     	;# 
  4556     020E                     	;# 
  4557     020F                     	;# 
  4558     020F                     	;# 
  4559     0210                     	;# 
  4560     0210                     	;# 
  4561     0211                     	;# 
  4562     0211                     	;# 
  4563     0212                     	;# 
  4564     0213                     	;# 
  4565     0214                     	;# 
  4566     0214                     	;# 
  4567     0215                     	;# 
  4568     0215                     	;# 
  4569     0216                     	;# 
  4570     0216                     	;# 
  4571     0217                     	;# 
  4572     0217                     	;# 
  4573     0218                     	;# 
  4574     0219                     	;# 
  4575     021A                     	;# 
  4576     021A                     	;# 
  4577     021B                     	;# 
  4578     021B                     	;# 
  4579     021C                     	;# 
  4580     021C                     	;# 
  4581     021D                     	;# 
  4582     021D                     	;# 
  4583     021E                     	;# 
  4584     021F                     	;# 
  4585     028C                     	;# 
  4586     028C                     	;# 
  4587     028D                     	;# 
  4588     028D                     	;# 
  4589     028E                     	;# 
  4590     028F                     	;# 
  4591     0290                     	;# 
  4592     0291                     	;# 
  4593     0292                     	;# 
  4594     0292                     	;# 
  4595     0293                     	;# 
  4596     0293                     	;# 
  4597     0294                     	;# 
  4598     0295                     	;# 
  4599     0296                     	;# 
  4600     0297                     	;# 
  4601     0298                     	;# 
  4602     0298                     	;# 
  4603     0299                     	;# 
  4604     0299                     	;# 
  4605     029A                     	;# 
  4606     029B                     	;# 
  4607     029C                     	;# 
  4608     029D                     	;# 
  4609     029F                     	;# 
  4610     030C                     	;# 
  4611     030C                     	;# 
  4612     030D                     	;# 
  4613     030E                     	;# 
  4614     030F                     	;# 
  4615     0310                     	;# 
  4616     0310                     	;# 
  4617     0311                     	;# 
  4618     0312                     	;# 
  4619     0313                     	;# 
  4620     0314                     	;# 
  4621     0314                     	;# 
  4622     0315                     	;# 
  4623     0316                     	;# 
  4624     0317                     	;# 
  4625     0318                     	;# 
  4626     0318                     	;# 
  4627     0319                     	;# 
  4628     031A                     	;# 
  4629     031B                     	;# 
  4630     031C                     	;# 
  4631     031C                     	;# 
  4632     031D                     	;# 
  4633     031E                     	;# 
  4634     031F                     	;# 
  4635     038C                     	;# 
  4636     038C                     	;# 
  4637     038D                     	;# 
  4638     038E                     	;# 
  4639     0390                     	;# 
  4640     0390                     	;# 
  4641     0391                     	;# 
  4642     0392                     	;# 
  4643     048C                     	;# 
  4644     048C                     	;# 
  4645     048D                     	;# 
  4646     048E                     	;# 
  4647     048F                     	;# 
  4648     048F                     	;# 
  4649     0490                     	;# 
  4650     0491                     	;# 
  4651     0492                     	;# 
  4652     0492                     	;# 
  4653     0493                     	;# 
  4654     0494                     	;# 
  4655     0495                     	;# 
  4656     0495                     	;# 
  4657     0496                     	;# 
  4658     0497                     	;# 
  4659     0498                     	;# 
  4660     0499                     	;# 
  4661     049A                     	;# 
  4662     049B                     	;# 
  4663     049C                     	;# 
  4664     049D                     	;# 
  4665     050C                     	;# 
  4666     050C                     	;# 
  4667     050D                     	;# 
  4668     050E                     	;# 
  4669     050F                     	;# 
  4670     050F                     	;# 
  4671     0510                     	;# 
  4672     0511                     	;# 
  4673     0512                     	;# 
  4674     0512                     	;# 
  4675     0513                     	;# 
  4676     0514                     	;# 
  4677     0515                     	;# 
  4678     0515                     	;# 
  4679     0516                     	;# 
  4680     0517                     	;# 
  4681     0518                     	;# 
  4682     0519                     	;# 
  4683     051A                     	;# 
  4684     051B                     	;# 
  4685     051C                     	;# 
  4686     051D                     	;# 
  4687     058C                     	;# 
  4688     058C                     	;# 
  4689     058D                     	;# 
  4690     058E                     	;# 
  4691     058F                     	;# 
  4692     058F                     	;# 
  4693     0590                     	;# 
  4694     0591                     	;# 
  4695     0592                     	;# 
  4696     0593                     	;# 
  4697     059C                     	;# 
  4698     059C                     	;# 
  4699     059D                     	;# 
  4700     059D                     	;# 
  4701     059E                     	;# 
  4702     059F                     	;# 
  4703     060C                     	;# 
  4704     060C                     	;# 
  4705     060D                     	;# 
  4706     060D                     	;# 
  4707     060E                     	;# 
  4708     060F                     	;# 
  4709     0610                     	;# 
  4710     0611                     	;# 
  4711     0612                     	;# 
  4712     0613                     	;# 
  4713     0614                     	;# 
  4714     0616                     	;# 
  4715     0616                     	;# 
  4716     0617                     	;# 
  4717     0617                     	;# 
  4718     0618                     	;# 
  4719     0619                     	;# 
  4720     061A                     	;# 
  4721     061B                     	;# 
  4722     061C                     	;# 
  4723     061D                     	;# 
  4724     061E                     	;# 
  4725     068C                     	;# 
  4726     068D                     	;# 
  4727     068E                     	;# 
  4728     068F                     	;# 
  4729     0690                     	;# 
  4730     0691                     	;# 
  4731     0692                     	;# 
  4732     0693                     	;# 
  4733     0694                     	;# 
  4734     070C                     	;# 
  4735     070D                     	;# 
  4736     070E                     	;# 
  4737     070F                     	;# 
  4738     0710                     	;# 
  4739     0711                     	;# 
  4740     0712                     	;# 
  4741     0713                     	;# 
  4742     0714                     	;# 
  4743     0716                     	;# 
  4744     0717                     	;# 
  4745     0718                     	;# 
  4746     0719                     	;# 
  4747     071A                     	;# 
  4748     071B                     	;# 
  4749     071C                     	;# 
  4750     071D                     	;# 
  4751     071E                     	;# 
  4752     0796                     	;# 
  4753     0797                     	;# 
  4754     0798                     	;# 
  4755     0799                     	;# 
  4756     079A                     	;# 
  4757     079B                     	;# 
  4758     079C                     	;# 
  4759     079D                     	;# 
  4760     080C                     	;# 
  4761     080D                     	;# 
  4762     080E                     	;# 
  4763     080F                     	;# 
  4764     0810                     	;# 
  4765     0811                     	;# 
  4766     0813                     	;# 
  4767     0814                     	;# 
  4768     081A                     	;# 
  4769     081A                     	;# 
  4770     081B                     	;# 
  4771     081C                     	;# 
  4772     081C                     	;# 
  4773     081D                     	;# 
  4774     081E                     	;# 
  4775     081F                     	;# 
  4776     088C                     	;# 
  4777     088D                     	;# 
  4778     088E                     	;# 
  4779     088F                     	;# 
  4780     0890                     	;# 
  4781     0891                     	;# 
  4782     0892                     	;# 
  4783     0893                     	;# 
  4784     0895                     	;# 
  4785     0896                     	;# 
  4786     0897                     	;# 
  4787     0898                     	;# 
  4788     0899                     	;# 
  4789     089A                     	;# 
  4790     089B                     	;# 
  4791     090C                     	;# 
  4792     090E                     	;# 
  4793     090F                     	;# 
  4794     091F                     	;# 
  4795     098F                     	;# 
  4796     098F                     	;# 
  4797     0990                     	;# 
  4798     0991                     	;# 
  4799     0992                     	;# 
  4800     0993                     	;# 
  4801     0994                     	;# 
  4802     0995                     	;# 
  4803     0996                     	;# 
  4804     0997                     	;# 
  4805     0A19                     	;# 
  4806     0A19                     	;# 
  4807     0A1A                     	;# 
  4808     0A1A                     	;# 
  4809     0A1B                     	;# 
  4810     0A1B                     	;# 
  4811     0A1B                     	;# 
  4812     0A1C                     	;# 
  4813     0A1C                     	;# 
  4814     0A1D                     	;# 
  4815     0A1D                     	;# 
  4816     0A1E                     	;# 
  4817     0A1E                     	;# 
  4818     0A1F                     	;# 
  4819     0A1F                     	;# 
  4820     0A1F                     	;# 
  4821     1E0F                     	;# 
  4822     1E10                     	;# 
  4823     1E11                     	;# 
  4824     1E12                     	;# 
  4825     1E13                     	;# 
  4826     1E14                     	;# 
  4827     1E15                     	;# 
  4828     1E16                     	;# 
  4829     1E17                     	;# 
  4830     1E18                     	;# 
  4831     1E19                     	;# 
  4832     1E1A                     	;# 
  4833     1E1B                     	;# 
  4834     1E1C                     	;# 
  4835     1E1D                     	;# 
  4836     1E1E                     	;# 
  4837     1E1F                     	;# 
  4838     1E20                     	;# 
  4839     1E21                     	;# 
  4840     1E22                     	;# 
  4841     1E23                     	;# 
  4842     1E24                     	;# 
  4843     1E25                     	;# 
  4844     1E26                     	;# 
  4845     1E27                     	;# 
  4846     1E28                     	;# 
  4847     1E29                     	;# 
  4848     1E2A                     	;# 
  4849     1E2B                     	;# 
  4850     1E2C                     	;# 
  4851     1E2D                     	;# 
  4852     1E2E                     	;# 
  4853     1E2F                     	;# 
  4854     1E30                     	;# 
  4855     1E31                     	;# 
  4856     1E32                     	;# 
  4857     1E33                     	;# 
  4858     1E34                     	;# 
  4859     1E35                     	;# 
  4860     1E36                     	;# 
  4861     1E37                     	;# 
  4862     1E8F                     	;# 
  4863     1E90                     	;# 
  4864     1E91                     	;# 
  4865     1E92                     	;# 
  4866     1E93                     	;# 
  4867     1E94                     	;# 
  4868     1E95                     	;# 
  4869     1E96                     	;# 
  4870     1E97                     	;# 
  4871     1E9C                     	;# 
  4872     1E9D                     	;# 
  4873     1E9E                     	;# 
  4874     1EA1                     	;# 
  4875     1EA2                     	;# 
  4876     1EA3                     	;# 
  4877     1EA4                     	;# 
  4878     1EA5                     	;# 
  4879     1EA9                     	;# 
  4880     1EAA                     	;# 
  4881     1EAB                     	;# 
  4882     1EAC                     	;# 
  4883     1EB1                     	;# 
  4884     1EB2                     	;# 
  4885     1EB3                     	;# 
  4886     1EB8                     	;# 
  4887     1EB9                     	;# 
  4888     1EBA                     	;# 
  4889     1EBB                     	;# 
  4890     1EBC                     	;# 
  4891     1EBD                     	;# 
  4892     1EBE                     	;# 
  4893     1EC3                     	;# 
  4894     1EC5                     	;# 
  4895     1EC6                     	;# 
  4896     1EC7                     	;# 
  4897     1EC8                     	;# 
  4898     1EC9                     	;# 
  4899     1ECA                     	;# 
  4900     1ECB                     	;# 
  4901     1ECC                     	;# 
  4902     1ECD                     	;# 
  4903     1ECE                     	;# 
  4904     1F10                     	;# 
  4905     1F11                     	;# 
  4906     1F12                     	;# 
  4907     1F13                     	;# 
  4908     1F14                     	;# 
  4909     1F15                     	;# 
  4910     1F16                     	;# 
  4911     1F17                     	;# 
  4912     1F18                     	;# 
  4913     1F19                     	;# 
  4914     1F1A                     	;# 
  4915     1F1B                     	;# 
  4916     1F1C                     	;# 
  4917     1F1D                     	;# 
  4918     1F1E                     	;# 
  4919     1F1F                     	;# 
  4920     1F20                     	;# 
  4921     1F21                     	;# 
  4922     1F22                     	;# 
  4923     1F23                     	;# 
  4924     1F24                     	;# 
  4925     1F25                     	;# 
  4926     1F26                     	;# 
  4927     1F27                     	;# 
  4928     1F38                     	;# 
  4929     1F39                     	;# 
  4930     1F3A                     	;# 
  4931     1F3B                     	;# 
  4932     1F3C                     	;# 
  4933     1F3D                     	;# 
  4934     1F3E                     	;# 
  4935     1F3F                     	;# 
  4936     1F43                     	;# 
  4937     1F44                     	;# 
  4938     1F45                     	;# 
  4939     1F46                     	;# 
  4940     1F47                     	;# 
  4941     1F48                     	;# 
  4942     1F49                     	;# 
  4943     1F4A                     	;# 
  4944     1F4E                     	;# 
  4945     1F4F                     	;# 
  4946     1F50                     	;# 
  4947     1F51                     	;# 
  4948     1F52                     	;# 
  4949     1F53                     	;# 
  4950     1F54                     	;# 
  4951     1F55                     	;# 
  4952     1F65                     	;# 
  4953     1F66                     	;# 
  4954     1F67                     	;# 
  4955     1F68                     	;# 
  4956     1F69                     	;# 
  4957     1F6A                     	;# 
  4958     1F6B                     	;# 
  4959     1FE4                     	;# 
  4960     1FE5                     	;# 
  4961     1FE6                     	;# 
  4962     1FE7                     	;# 
  4963     1FE8                     	;# 
  4964     1FE8                     	;# 
  4965     1FE9                     	;# 
  4966     1FEA                     	;# 
  4967     1FEB                     	;# 
  4968     1FED                     	;# 
  4969     1FEE                     	;# 
  4970     1FEF                     	;# 
  4971     0000                     	;# 
  4972     0001                     	;# 
  4973     0002                     	;# 
  4974     0003                     	;# 
  4975     0004                     	;# 
  4976     0005                     	;# 
  4977     0006                     	;# 
  4978     0007                     	;# 
  4979     0008                     	;# 
  4980     0009                     	;# 
  4981     000A                     	;# 
  4982     000B                     	;# 
  4983     000C                     	;# 
  4984     000D                     	;# 
  4985     000E                     	;# 
  4986     0010                     	;# 
  4987     0012                     	;# 
  4988     0013                     	;# 
  4989     0014                     	;# 
  4990     0016                     	;# 
  4991     0018                     	;# 
  4992     0019                     	;# 
  4993     001A                     	;# 
  4994     001C                     	;# 
  4995     008C                     	;# 
  4996     008C                     	;# 
  4997     008D                     	;# 
  4998     008E                     	;# 
  4999     008E                     	;# 
  5000     008F                     	;# 
  5001     0090                     	;# 
  5002     0090                     	;# 
  5003     0091                     	;# 
  5004     0092                     	;# 
  5005     0092                     	;# 
  5006     0093                     	;# 
  5007     0094                     	;# 
  5008     0094                     	;# 
  5009     0095                     	;# 
  5010     0096                     	;# 
  5011     0096                     	;# 
  5012     0097                     	;# 
  5013     0098                     	;# 
  5014     0099                     	;# 
  5015     009A                     	;# 
  5016     009B                     	;# 
  5017     009B                     	;# 
  5018     009C                     	;# 
  5019     009D                     	;# 
  5020     009D                     	;# 
  5021     009E                     	;# 
  5022     009F                     	;# 
  5023     010C                     	;# 
  5024     010C                     	;# 
  5025     010D                     	;# 
  5026     010E                     	;# 
  5027     010F                     	;# 
  5028     010F                     	;# 
  5029     0110                     	;# 
  5030     0111                     	;# 
  5031     0112                     	;# 
  5032     0113                     	;# 
  5033     0114                     	;# 
  5034     0115                     	;# 
  5035     0116                     	;# 
  5036     0117                     	;# 
  5037     0118                     	;# 
  5038     0119                     	;# 
  5039     0119                     	;# 
  5040     0119                     	;# 
  5041     011A                     	;# 
  5042     011A                     	;# 
  5043     011A                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011B                     	;# 
  5048     011B                     	;# 
  5049     011C                     	;# 
  5050     011C                     	;# 
  5051     011C                     	;# 
  5052     011D                     	;# 
  5053     011D                     	;# 
  5054     011D                     	;# 
  5055     011E                     	;# 
  5056     011E                     	;# 
  5057     011E                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     011F                     	;# 
  5062     011F                     	;# 
  5063     018C                     	;# 
  5064     018D                     	;# 
  5065     018E                     	;# 
  5066     018F                     	;# 
  5067     0190                     	;# 
  5068     0191                     	;# 
  5069     0192                     	;# 
  5070     0196                     	;# 
  5071     0197                     	;# 
  5072     0198                     	;# 
  5073     0199                     	;# 
  5074     019A                     	;# 
  5075     019B                     	;# 
  5076     019C                     	;# 
  5077     020C                     	;# 
  5078     020D                     	;# 
  5079     020E                     	;# 
  5080     020E                     	;# 
  5081     020F                     	;# 
  5082     020F                     	;# 
  5083     0210                     	;# 
  5084     0210                     	;# 
  5085     0211                     	;# 
  5086     0211                     	;# 
  5087     0212                     	;# 
  5088     0213                     	;# 
  5089     0214                     	;# 
  5090     0214                     	;# 
  5091     0215                     	;# 
  5092     0215                     	;# 
  5093     0216                     	;# 
  5094     0216                     	;# 
  5095     0217                     	;# 
  5096     0217                     	;# 
  5097     0218                     	;# 
  5098     0219                     	;# 
  5099     021A                     	;# 
  5100     021A                     	;# 
  5101     021B                     	;# 
  5102     021B                     	;# 
  5103     021C                     	;# 
  5104     021C                     	;# 
  5105     021D                     	;# 
  5106     021D                     	;# 
  5107     021E                     	;# 
  5108     021F                     	;# 
  5109     028C                     	;# 
  5110     028C                     	;# 
  5111     028D                     	;# 
  5112     028D                     	;# 
  5113     028E                     	;# 
  5114     028F                     	;# 
  5115     0290                     	;# 
  5116     0291                     	;# 
  5117     0292                     	;# 
  5118     0292                     	;# 
  5119     0293                     	;# 
  5120     0293                     	;# 
  5121     0294                     	;# 
  5122     0295                     	;# 
  5123     0296                     	;# 
  5124     0297                     	;# 
  5125     0298                     	;# 
  5126     0298                     	;# 
  5127     0299                     	;# 
  5128     0299                     	;# 
  5129     029A                     	;# 
  5130     029B                     	;# 
  5131     029C                     	;# 
  5132     029D                     	;# 
  5133     029F                     	;# 
  5134     030C                     	;# 
  5135     030C                     	;# 
  5136     030D                     	;# 
  5137     030E                     	;# 
  5138     030F                     	;# 
  5139     0310                     	;# 
  5140     0310                     	;# 
  5141     0311                     	;# 
  5142     0312                     	;# 
  5143     0313                     	;# 
  5144     0314                     	;# 
  5145     0314                     	;# 
  5146     0315                     	;# 
  5147     0316                     	;# 
  5148     0317                     	;# 
  5149     0318                     	;# 
  5150     0318                     	;# 
  5151     0319                     	;# 
  5152     031A                     	;# 
  5153     031B                     	;# 
  5154     031C                     	;# 
  5155     031C                     	;# 
  5156     031D                     	;# 
  5157     031E                     	;# 
  5158     031F                     	;# 
  5159     038C                     	;# 
  5160     038C                     	;# 
  5161     038D                     	;# 
  5162     038E                     	;# 
  5163     0390                     	;# 
  5164     0390                     	;# 
  5165     0391                     	;# 
  5166     0392                     	;# 
  5167     048C                     	;# 
  5168     048C                     	;# 
  5169     048D                     	;# 
  5170     048E                     	;# 
  5171     048F                     	;# 
  5172     048F                     	;# 
  5173     0490                     	;# 
  5174     0491                     	;# 
  5175     0492                     	;# 
  5176     0492                     	;# 
  5177     0493                     	;# 
  5178     0494                     	;# 
  5179     0495                     	;# 
  5180     0495                     	;# 
  5181     0496                     	;# 
  5182     0497                     	;# 
  5183     0498                     	;# 
  5184     0499                     	;# 
  5185     049A                     	;# 
  5186     049B                     	;# 
  5187     049C                     	;# 
  5188     049D                     	;# 
  5189     050C                     	;# 
  5190     050C                     	;# 
  5191     050D                     	;# 
  5192     050E                     	;# 
  5193     050F                     	;# 
  5194     050F                     	;# 
  5195     0510                     	;# 
  5196     0511                     	;# 
  5197     0512                     	;# 
  5198     0512                     	;# 
  5199     0513                     	;# 
  5200     0514                     	;# 
  5201     0515                     	;# 
  5202     0515                     	;# 
  5203     0516                     	;# 
  5204     0517                     	;# 
  5205     0518                     	;# 
  5206     0519                     	;# 
  5207     051A                     	;# 
  5208     051B                     	;# 
  5209     051C                     	;# 
  5210     051D                     	;# 
  5211     058C                     	;# 
  5212     058C                     	;# 
  5213     058D                     	;# 
  5214     058E                     	;# 
  5215     058F                     	;# 
  5216     058F                     	;# 
  5217     0590                     	;# 
  5218     0591                     	;# 
  5219     0592                     	;# 
  5220     0593                     	;# 
  5221     059C                     	;# 
  5222     059C                     	;# 
  5223     059D                     	;# 
  5224     059D                     	;# 
  5225     059E                     	;# 
  5226     059F                     	;# 
  5227     060C                     	;# 
  5228     060C                     	;# 
  5229     060D                     	;# 
  5230     060D                     	;# 
  5231     060E                     	;# 
  5232     060F                     	;# 
  5233     0610                     	;# 
  5234     0611                     	;# 
  5235     0612                     	;# 
  5236     0613                     	;# 
  5237     0614                     	;# 
  5238     0616                     	;# 
  5239     0616                     	;# 
  5240     0617                     	;# 
  5241     0617                     	;# 
  5242     0618                     	;# 
  5243     0619                     	;# 
  5244     061A                     	;# 
  5245     061B                     	;# 
  5246     061C                     	;# 
  5247     061D                     	;# 
  5248     061E                     	;# 
  5249     068C                     	;# 
  5250     068D                     	;# 
  5251     068E                     	;# 
  5252     068F                     	;# 
  5253     0690                     	;# 
  5254     0691                     	;# 
  5255     0692                     	;# 
  5256     0693                     	;# 
  5257     0694                     	;# 
  5258     070C                     	;# 
  5259     070D                     	;# 
  5260     070E                     	;# 
  5261     070F                     	;# 
  5262     0710                     	;# 
  5263     0711                     	;# 
  5264     0712                     	;# 
  5265     0713                     	;# 
  5266     0714                     	;# 
  5267     0716                     	;# 
  5268     0717                     	;# 
  5269     0718                     	;# 
  5270     0719                     	;# 
  5271     071A                     	;# 
  5272     071B                     	;# 
  5273     071C                     	;# 
  5274     071D                     	;# 
  5275     071E                     	;# 
  5276     0796                     	;# 
  5277     0797                     	;# 
  5278     0798                     	;# 
  5279     0799                     	;# 
  5280     079A                     	;# 
  5281     079B                     	;# 
  5282     079C                     	;# 
  5283     079D                     	;# 
  5284     080C                     	;# 
  5285     080D                     	;# 
  5286     080E                     	;# 
  5287     080F                     	;# 
  5288     0810                     	;# 
  5289     0811                     	;# 
  5290     0813                     	;# 
  5291     0814                     	;# 
  5292     081A                     	;# 
  5293     081A                     	;# 
  5294     081B                     	;# 
  5295     081C                     	;# 
  5296     081C                     	;# 
  5297     081D                     	;# 
  5298     081E                     	;# 
  5299     081F                     	;# 
  5300     088C                     	;# 
  5301     088D                     	;# 
  5302     088E                     	;# 
  5303     088F                     	;# 
  5304     0890                     	;# 
  5305     0891                     	;# 
  5306     0892                     	;# 
  5307     0893                     	;# 
  5308     0895                     	;# 
  5309     0896                     	;# 
  5310     0897                     	;# 
  5311     0898                     	;# 
  5312     0899                     	;# 
  5313     089A                     	;# 
  5314     089B                     	;# 
  5315     090C                     	;# 
  5316     090E                     	;# 
  5317     090F                     	;# 
  5318     091F                     	;# 
  5319     098F                     	;# 
  5320     098F                     	;# 
  5321     0990                     	;# 
  5322     0991                     	;# 
  5323     0992                     	;# 
  5324     0993                     	;# 
  5325     0994                     	;# 
  5326     0995                     	;# 
  5327     0996                     	;# 
  5328     0997                     	;# 
  5329     0A19                     	;# 
  5330     0A19                     	;# 
  5331     0A1A                     	;# 
  5332     0A1A                     	;# 
  5333     0A1B                     	;# 
  5334     0A1B                     	;# 
  5335     0A1B                     	;# 
  5336     0A1C                     	;# 
  5337     0A1C                     	;# 
  5338     0A1D                     	;# 
  5339     0A1D                     	;# 
  5340     0A1E                     	;# 
  5341     0A1E                     	;# 
  5342     0A1F                     	;# 
  5343     0A1F                     	;# 
  5344     0A1F                     	;# 
  5345     1E0F                     	;# 
  5346     1E10                     	;# 
  5347     1E11                     	;# 
  5348     1E12                     	;# 
  5349     1E13                     	;# 
  5350     1E14                     	;# 
  5351     1E15                     	;# 
  5352     1E16                     	;# 
  5353     1E17                     	;# 
  5354     1E18                     	;# 
  5355     1E19                     	;# 
  5356     1E1A                     	;# 
  5357     1E1B                     	;# 
  5358     1E1C                     	;# 
  5359     1E1D                     	;# 
  5360     1E1E                     	;# 
  5361     1E1F                     	;# 
  5362     1E20                     	;# 
  5363     1E21                     	;# 
  5364     1E22                     	;# 
  5365     1E23                     	;# 
  5366     1E24                     	;# 
  5367     1E25                     	;# 
  5368     1E26                     	;# 
  5369     1E27                     	;# 
  5370     1E28                     	;# 
  5371     1E29                     	;# 
  5372     1E2A                     	;# 
  5373     1E2B                     	;# 
  5374     1E2C                     	;# 
  5375     1E2D                     	;# 
  5376     1E2E                     	;# 
  5377     1E2F                     	;# 
  5378     1E30                     	;# 
  5379     1E31                     	;# 
  5380     1E32                     	;# 
  5381     1E33                     	;# 
  5382     1E34                     	;# 
  5383     1E35                     	;# 
  5384     1E36                     	;# 
  5385     1E37                     	;# 
  5386     1E8F                     	;# 
  5387     1E90                     	;# 
  5388     1E91                     	;# 
  5389     1E92                     	;# 
  5390     1E93                     	;# 
  5391     1E94                     	;# 
  5392     1E95                     	;# 
  5393     1E96                     	;# 
  5394     1E97                     	;# 
  5395     1E9C                     	;# 
  5396     1E9D                     	;# 
  5397     1E9E                     	;# 
  5398     1EA1                     	;# 
  5399     1EA2                     	;# 
  5400     1EA3                     	;# 
  5401     1EA4                     	;# 
  5402     1EA5                     	;# 
  5403     1EA9                     	;# 
  5404     1EAA                     	;# 
  5405     1EAB                     	;# 
  5406     1EAC                     	;# 
  5407     1EB1                     	;# 
  5408     1EB2                     	;# 
  5409     1EB3                     	;# 
  5410     1EB8                     	;# 
  5411     1EB9                     	;# 
  5412     1EBA                     	;# 
  5413     1EBB                     	;# 
  5414     1EBC                     	;# 
  5415     1EBD                     	;# 
  5416     1EBE                     	;# 
  5417     1EC3                     	;# 
  5418     1EC5                     	;# 
  5419     1EC6                     	;# 
  5420     1EC7                     	;# 
  5421     1EC8                     	;# 
  5422     1EC9                     	;# 
  5423     1ECA                     	;# 
  5424     1ECB                     	;# 
  5425     1ECC                     	;# 
  5426     1ECD                     	;# 
  5427     1ECE                     	;# 
  5428     1F10                     	;# 
  5429     1F11                     	;# 
  5430     1F12                     	;# 
  5431     1F13                     	;# 
  5432     1F14                     	;# 
  5433     1F15                     	;# 
  5434     1F16                     	;# 
  5435     1F17                     	;# 
  5436     1F18                     	;# 
  5437     1F19                     	;# 
  5438     1F1A                     	;# 
  5439     1F1B                     	;# 
  5440     1F1C                     	;# 
  5441     1F1D                     	;# 
  5442     1F1E                     	;# 
  5443     1F1F                     	;# 
  5444     1F20                     	;# 
  5445     1F21                     	;# 
  5446     1F22                     	;# 
  5447     1F23                     	;# 
  5448     1F24                     	;# 
  5449     1F25                     	;# 
  5450     1F26                     	;# 
  5451     1F27                     	;# 
  5452     1F38                     	;# 
  5453     1F39                     	;# 
  5454     1F3A                     	;# 
  5455     1F3B                     	;# 
  5456     1F3C                     	;# 
  5457     1F3D                     	;# 
  5458     1F3E                     	;# 
  5459     1F3F                     	;# 
  5460     1F43                     	;# 
  5461     1F44                     	;# 
  5462     1F45                     	;# 
  5463     1F46                     	;# 
  5464     1F47                     	;# 
  5465     1F48                     	;# 
  5466     1F49                     	;# 
  5467     1F4A                     	;# 
  5468     1F4E                     	;# 
  5469     1F4F                     	;# 
  5470     1F50                     	;# 
  5471     1F51                     	;# 
  5472     1F52                     	;# 
  5473     1F53                     	;# 
  5474     1F54                     	;# 
  5475     1F55                     	;# 
  5476     1F65                     	;# 
  5477     1F66                     	;# 
  5478     1F67                     	;# 
  5479     1F68                     	;# 
  5480     1F69                     	;# 
  5481     1F6A                     	;# 
  5482     1F6B                     	;# 
  5483     1FE4                     	;# 
  5484     1FE5                     	;# 
  5485     1FE6                     	;# 
  5486     1FE7                     	;# 
  5487     1FE8                     	;# 
  5488     1FE8                     	;# 
  5489     1FE9                     	;# 
  5490     1FEA                     	;# 
  5491     1FEB                     	;# 
  5492     1FED                     	;# 
  5493     1FEE                     	;# 
  5494     1FEF                     	;# 
  5495     0000                     	;# 
  5496     0001                     	;# 
  5497     0002                     	;# 
  5498     0003                     	;# 
  5499     0004                     	;# 
  5500     0005                     	;# 
  5501     0006                     	;# 
  5502     0007                     	;# 
  5503     0008                     	;# 
  5504     0009                     	;# 
  5505     000A                     	;# 
  5506     000B                     	;# 
  5507     000C                     	;# 
  5508     000D                     	;# 
  5509     000E                     	;# 
  5510     0010                     	;# 
  5511     0012                     	;# 
  5512     0013                     	;# 
  5513     0014                     	;# 
  5514     0016                     	;# 
  5515     0018                     	;# 
  5516     0019                     	;# 
  5517     001A                     	;# 
  5518     001C                     	;# 
  5519     008C                     	;# 
  5520     008C                     	;# 
  5521     008D                     	;# 
  5522     008E                     	;# 
  5523     008E                     	;# 
  5524     008F                     	;# 
  5525     0090                     	;# 
  5526     0090                     	;# 
  5527     0091                     	;# 
  5528     0092                     	;# 
  5529     0092                     	;# 
  5530     0093                     	;# 
  5531     0094                     	;# 
  5532     0094                     	;# 
  5533     0095                     	;# 
  5534     0096                     	;# 
  5535     0096                     	;# 
  5536     0097                     	;# 
  5537     0098                     	;# 
  5538     0099                     	;# 
  5539     009A                     	;# 
  5540     009B                     	;# 
  5541     009B                     	;# 
  5542     009C                     	;# 
  5543     009D                     	;# 
  5544     009D                     	;# 
  5545     009E                     	;# 
  5546     009F                     	;# 
  5547     010C                     	;# 
  5548     010C                     	;# 
  5549     010D                     	;# 
  5550     010E                     	;# 
  5551     010F                     	;# 
  5552     010F                     	;# 
  5553     0110                     	;# 
  5554     0111                     	;# 
  5555     0112                     	;# 
  5556     0113                     	;# 
  5557     0114                     	;# 
  5558     0115                     	;# 
  5559     0116                     	;# 
  5560     0117                     	;# 
  5561     0118                     	;# 
  5562     0119                     	;# 
  5563     0119                     	;# 
  5564     0119                     	;# 
  5565     011A                     	;# 
  5566     011A                     	;# 
  5567     011A                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011B                     	;# 
  5572     011B                     	;# 
  5573     011C                     	;# 
  5574     011C                     	;# 
  5575     011C                     	;# 
  5576     011D                     	;# 
  5577     011D                     	;# 
  5578     011D                     	;# 
  5579     011E                     	;# 
  5580     011E                     	;# 
  5581     011E                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     011F                     	;# 
  5586     011F                     	;# 
  5587     018C                     	;# 
  5588     018D                     	;# 
  5589     018E                     	;# 
  5590     018F                     	;# 
  5591     0190                     	;# 
  5592     0191                     	;# 
  5593     0192                     	;# 
  5594     0196                     	;# 
  5595     0197                     	;# 
  5596     0198                     	;# 
  5597     0199                     	;# 
  5598     019A                     	;# 
  5599     019B                     	;# 
  5600     019C                     	;# 
  5601     020C                     	;# 
  5602     020D                     	;# 
  5603     020E                     	;# 
  5604     020E                     	;# 
  5605     020F                     	;# 
  5606     020F                     	;# 
  5607     0210                     	;# 
  5608     0210                     	;# 
  5609     0211                     	;# 
  5610     0211                     	;# 
  5611     0212                     	;# 
  5612     0213                     	;# 
  5613     0214                     	;# 
  5614     0214                     	;# 
  5615     0215                     	;# 
  5616     0215                     	;# 
  5617     0216                     	;# 
  5618     0216                     	;# 
  5619     0217                     	;# 
  5620     0217                     	;# 
  5621     0218                     	;# 
  5622     0219                     	;# 
  5623     021A                     	;# 
  5624     021A                     	;# 
  5625     021B                     	;# 
  5626     021B                     	;# 
  5627     021C                     	;# 
  5628     021C                     	;# 
  5629     021D                     	;# 
  5630     021D                     	;# 
  5631     021E                     	;# 
  5632     021F                     	;# 
  5633     028C                     	;# 
  5634     028C                     	;# 
  5635     028D                     	;# 
  5636     028D                     	;# 
  5637     028E                     	;# 
  5638     028F                     	;# 
  5639     0290                     	;# 
  5640     0291                     	;# 
  5641     0292                     	;# 
  5642     0292                     	;# 
  5643     0293                     	;# 
  5644     0293                     	;# 
  5645     0294                     	;# 
  5646     0295                     	;# 
  5647     0296                     	;# 
  5648     0297                     	;# 
  5649     0298                     	;# 
  5650     0298                     	;# 
  5651     0299                     	;# 
  5652     0299                     	;# 
  5653     029A                     	;# 
  5654     029B                     	;# 
  5655     029C                     	;# 
  5656     029D                     	;# 
  5657     029F                     	;# 
  5658     030C                     	;# 
  5659     030C                     	;# 
  5660     030D                     	;# 
  5661     030E                     	;# 
  5662     030F                     	;# 
  5663     0310                     	;# 
  5664     0310                     	;# 
  5665     0311                     	;# 
  5666     0312                     	;# 
  5667     0313                     	;# 
  5668     0314                     	;# 
  5669     0314                     	;# 
  5670     0315                     	;# 
  5671     0316                     	;# 
  5672     0317                     	;# 
  5673     0318                     	;# 
  5674     0318                     	;# 
  5675     0319                     	;# 
  5676     031A                     	;# 
  5677     031B                     	;# 
  5678     031C                     	;# 
  5679     031C                     	;# 
  5680     031D                     	;# 
  5681     031E                     	;# 
  5682     031F                     	;# 
  5683     038C                     	;# 
  5684     038C                     	;# 
  5685     038D                     	;# 
  5686     038E                     	;# 
  5687     0390                     	;# 
  5688     0390                     	;# 
  5689     0391                     	;# 
  5690     0392                     	;# 
  5691     048C                     	;# 
  5692     048C                     	;# 
  5693     048D                     	;# 
  5694     048E                     	;# 
  5695     048F                     	;# 
  5696     048F                     	;# 
  5697     0490                     	;# 
  5698     0491                     	;# 
  5699     0492                     	;# 
  5700     0492                     	;# 
  5701     0493                     	;# 
  5702     0494                     	;# 
  5703     0495                     	;# 
  5704     0495                     	;# 
  5705     0496                     	;# 
  5706     0497                     	;# 
  5707     0498                     	;# 
  5708     0499                     	;# 
  5709     049A                     	;# 
  5710     049B                     	;# 
  5711     049C                     	;# 
  5712     049D                     	;# 
  5713     050C                     	;# 
  5714     050C                     	;# 
  5715     050D                     	;# 
  5716     050E                     	;# 
  5717     050F                     	;# 
  5718     050F                     	;# 
  5719     0510                     	;# 
  5720     0511                     	;# 
  5721     0512                     	;# 
  5722     0512                     	;# 
  5723     0513                     	;# 
  5724     0514                     	;# 
  5725     0515                     	;# 
  5726     0515                     	;# 
  5727     0516                     	;# 
  5728     0517                     	;# 
  5729     0518                     	;# 
  5730     0519                     	;# 
  5731     051A                     	;# 
  5732     051B                     	;# 
  5733     051C                     	;# 
  5734     051D                     	;# 
  5735     058C                     	;# 
  5736     058C                     	;# 
  5737     058D                     	;# 
  5738     058E                     	;# 
  5739     058F                     	;# 
  5740     058F                     	;# 
  5741     0590                     	;# 
  5742     0591                     	;# 
  5743     0592                     	;# 
  5744     0593                     	;# 
  5745     059C                     	;# 
  5746     059C                     	;# 
  5747     059D                     	;# 
  5748     059D                     	;# 
  5749     059E                     	;# 
  5750     059F                     	;# 
  5751     060C                     	;# 
  5752     060C                     	;# 
  5753     060D                     	;# 
  5754     060D                     	;# 
  5755     060E                     	;# 
  5756     060F                     	;# 
  5757     0610                     	;# 
  5758     0611                     	;# 
  5759     0612                     	;# 
  5760     0613                     	;# 
  5761     0614                     	;# 
  5762     0616                     	;# 
  5763     0616                     	;# 
  5764     0617                     	;# 
  5765     0617                     	;# 
  5766     0618                     	;# 
  5767     0619                     	;# 
  5768     061A                     	;# 
  5769     061B                     	;# 
  5770     061C                     	;# 
  5771     061D                     	;# 
  5772     061E                     	;# 
  5773     068C                     	;# 
  5774     068D                     	;# 
  5775     068E                     	;# 
  5776     068F                     	;# 
  5777     0690                     	;# 
  5778     0691                     	;# 
  5779     0692                     	;# 
  5780     0693                     	;# 
  5781     0694                     	;# 
  5782     070C                     	;# 
  5783     070D                     	;# 
  5784     070E                     	;# 
  5785     070F                     	;# 
  5786     0710                     	;# 
  5787     0711                     	;# 
  5788     0712                     	;# 
  5789     0713                     	;# 
  5790     0714                     	;# 
  5791     0716                     	;# 
  5792     0717                     	;# 
  5793     0718                     	;# 
  5794     0719                     	;# 
  5795     071A                     	;# 
  5796     071B                     	;# 
  5797     071C                     	;# 
  5798     071D                     	;# 
  5799     071E                     	;# 
  5800     0796                     	;# 
  5801     0797                     	;# 
  5802     0798                     	;# 
  5803     0799                     	;# 
  5804     079A                     	;# 
  5805     079B                     	;# 
  5806     079C                     	;# 
  5807     079D                     	;# 
  5808     080C                     	;# 
  5809     080D                     	;# 
  5810     080E                     	;# 
  5811     080F                     	;# 
  5812     0810                     	;# 
  5813     0811                     	;# 
  5814     0813                     	;# 
  5815     0814                     	;# 
  5816     081A                     	;# 
  5817     081A                     	;# 
  5818     081B                     	;# 
  5819     081C                     	;# 
  5820     081C                     	;# 
  5821     081D                     	;# 
  5822     081E                     	;# 
  5823     081F                     	;# 
  5824     088C                     	;# 
  5825     088D                     	;# 
  5826     088E                     	;# 
  5827     088F                     	;# 
  5828     0890                     	;# 
  5829     0891                     	;# 
  5830     0892                     	;# 
  5831     0893                     	;# 
  5832     0895                     	;# 
  5833     0896                     	;# 
  5834     0897                     	;# 
  5835     0898                     	;# 
  5836     0899                     	;# 
  5837     089A                     	;# 
  5838     089B                     	;# 
  5839     090C                     	;# 
  5840     090E                     	;# 
  5841     090F                     	;# 
  5842     091F                     	;# 
  5843     098F                     	;# 
  5844     098F                     	;# 
  5845     0990                     	;# 
  5846     0991                     	;# 
  5847     0992                     	;# 
  5848     0993                     	;# 
  5849     0994                     	;# 
  5850     0995                     	;# 
  5851     0996                     	;# 
  5852     0997                     	;# 
  5853     0A19                     	;# 
  5854     0A19                     	;# 
  5855     0A1A                     	;# 
  5856     0A1A                     	;# 
  5857     0A1B                     	;# 
  5858     0A1B                     	;# 
  5859     0A1B                     	;# 
  5860     0A1C                     	;# 
  5861     0A1C                     	;# 
  5862     0A1D                     	;# 
  5863     0A1D                     	;# 
  5864     0A1E                     	;# 
  5865     0A1E                     	;# 
  5866     0A1F                     	;# 
  5867     0A1F                     	;# 
  5868     0A1F                     	;# 
  5869     1E0F                     	;# 
  5870     1E10                     	;# 
  5871     1E11                     	;# 
  5872     1E12                     	;# 
  5873     1E13                     	;# 
  5874     1E14                     	;# 
  5875     1E15                     	;# 
  5876     1E16                     	;# 
  5877     1E17                     	;# 
  5878     1E18                     	;# 
  5879     1E19                     	;# 
  5880     1E1A                     	;# 
  5881     1E1B                     	;# 
  5882     1E1C                     	;# 
  5883     1E1D                     	;# 
  5884     1E1E                     	;# 
  5885     1E1F                     	;# 
  5886     1E20                     	;# 
  5887     1E21                     	;# 
  5888     1E22                     	;# 
  5889     1E23                     	;# 
  5890     1E24                     	;# 
  5891     1E25                     	;# 
  5892     1E26                     	;# 
  5893     1E27                     	;# 
  5894     1E28                     	;# 
  5895     1E29                     	;# 
  5896     1E2A                     	;# 
  5897     1E2B                     	;# 
  5898     1E2C                     	;# 
  5899     1E2D                     	;# 
  5900     1E2E                     	;# 
  5901     1E2F                     	;# 
  5902     1E30                     	;# 
  5903     1E31                     	;# 
  5904     1E32                     	;# 
  5905     1E33                     	;# 
  5906     1E34                     	;# 
  5907     1E35                     	;# 
  5908     1E36                     	;# 
  5909     1E37                     	;# 
  5910     1E8F                     	;# 
  5911     1E90                     	;# 
  5912     1E91                     	;# 
  5913     1E92                     	;# 
  5914     1E93                     	;# 
  5915     1E94                     	;# 
  5916     1E95                     	;# 
  5917     1E96                     	;# 
  5918     1E97                     	;# 
  5919     1E9C                     	;# 
  5920     1E9D                     	;# 
  5921     1E9E                     	;# 
  5922     1EA1                     	;# 
  5923     1EA2                     	;# 
  5924     1EA3                     	;# 
  5925     1EA4                     	;# 
  5926     1EA5                     	;# 
  5927     1EA9                     	;# 
  5928     1EAA                     	;# 
  5929     1EAB                     	;# 
  5930     1EAC                     	;# 
  5931     1EB1                     	;# 
  5932     1EB2                     	;# 
  5933     1EB3                     	;# 
  5934     1EB8                     	;# 
  5935     1EB9                     	;# 
  5936     1EBA                     	;# 
  5937     1EBB                     	;# 
  5938     1EBC                     	;# 
  5939     1EBD                     	;# 
  5940     1EBE                     	;# 
  5941     1EC3                     	;# 
  5942     1EC5                     	;# 
  5943     1EC6                     	;# 
  5944     1EC7                     	;# 
  5945     1EC8                     	;# 
  5946     1EC9                     	;# 
  5947     1ECA                     	;# 
  5948     1ECB                     	;# 
  5949     1ECC                     	;# 
  5950     1ECD                     	;# 
  5951     1ECE                     	;# 
  5952     1F10                     	;# 
  5953     1F11                     	;# 
  5954     1F12                     	;# 
  5955     1F13                     	;# 
  5956     1F14                     	;# 
  5957     1F15                     	;# 
  5958     1F16                     	;# 
  5959     1F17                     	;# 
  5960     1F18                     	;# 
  5961     1F19                     	;# 
  5962     1F1A                     	;# 
  5963     1F1B                     	;# 
  5964     1F1C                     	;# 
  5965     1F1D                     	;# 
  5966     1F1E                     	;# 
  5967     1F1F                     	;# 
  5968     1F20                     	;# 
  5969     1F21                     	;# 
  5970     1F22                     	;# 
  5971     1F23                     	;# 
  5972     1F24                     	;# 
  5973     1F25                     	;# 
  5974     1F26                     	;# 
  5975     1F27                     	;# 
  5976     1F38                     	;# 
  5977     1F39                     	;# 
  5978     1F3A                     	;# 
  5979     1F3B                     	;# 
  5980     1F3C                     	;# 
  5981     1F3D                     	;# 
  5982     1F3E                     	;# 
  5983     1F3F                     	;# 
  5984     1F43                     	;# 
  5985     1F44                     	;# 
  5986     1F45                     	;# 
  5987     1F46                     	;# 
  5988     1F47                     	;# 
  5989     1F48                     	;# 
  5990     1F49                     	;# 
  5991     1F4A                     	;# 
  5992     1F4E                     	;# 
  5993     1F4F                     	;# 
  5994     1F50                     	;# 
  5995     1F51                     	;# 
  5996     1F52                     	;# 
  5997     1F53                     	;# 
  5998     1F54                     	;# 
  5999     1F55                     	;# 
  6000     1F65                     	;# 
  6001     1F66                     	;# 
  6002     1F67                     	;# 
  6003     1F68                     	;# 
  6004     1F69                     	;# 
  6005     1F6A                     	;# 
  6006     1F6B                     	;# 
  6007     1FE4                     	;# 
  6008     1FE5                     	;# 
  6009     1FE6                     	;# 
  6010     1FE7                     	;# 
  6011     1FE8                     	;# 
  6012     1FE8                     	;# 
  6013     1FE9                     	;# 
  6014     1FEA                     	;# 
  6015     1FEB                     	;# 
  6016     1FED                     	;# 
  6017     1FEE                     	;# 
  6018     1FEF                     	;# 
  6019     0000                     	;# 
  6020     0001                     	;# 
  6021     0002                     	;# 
  6022     0003                     	;# 
  6023     0004                     	;# 
  6024     0005                     	;# 
  6025     0006                     	;# 
  6026     0007                     	;# 
  6027     0008                     	;# 
  6028     0009                     	;# 
  6029     000A                     	;# 
  6030     000B                     	;# 
  6031     000C                     	;# 
  6032     000D                     	;# 
  6033     000E                     	;# 
  6034     0010                     	;# 
  6035     0012                     	;# 
  6036     0013                     	;# 
  6037     0014                     	;# 
  6038     0016                     	;# 
  6039     0018                     	;# 
  6040     0019                     	;# 
  6041     001A                     	;# 
  6042     001C                     	;# 
  6043     008C                     	;# 
  6044     008C                     	;# 
  6045     008D                     	;# 
  6046     008E                     	;# 
  6047     008E                     	;# 
  6048     008F                     	;# 
  6049     0090                     	;# 
  6050     0090                     	;# 
  6051     0091                     	;# 
  6052     0092                     	;# 
  6053     0092                     	;# 
  6054     0093                     	;# 
  6055     0094                     	;# 
  6056     0094                     	;# 
  6057     0095                     	;# 
  6058     0096                     	;# 
  6059     0096                     	;# 
  6060     0097                     	;# 
  6061     0098                     	;# 
  6062     0099                     	;# 
  6063     009A                     	;# 
  6064     009B                     	;# 
  6065     009B                     	;# 
  6066     009C                     	;# 
  6067     009D                     	;# 
  6068     009D                     	;# 
  6069     009E                     	;# 
  6070     009F                     	;# 
  6071     010C                     	;# 
  6072     010C                     	;# 
  6073     010D                     	;# 
  6074     010E                     	;# 
  6075     010F                     	;# 
  6076     010F                     	;# 
  6077     0110                     	;# 
  6078     0111                     	;# 
  6079     0112                     	;# 
  6080     0113                     	;# 
  6081     0114                     	;# 
  6082     0115                     	;# 
  6083     0116                     	;# 
  6084     0117                     	;# 
  6085     0118                     	;# 
  6086     0119                     	;# 
  6087     0119                     	;# 
  6088     0119                     	;# 
  6089     011A                     	;# 
  6090     011A                     	;# 
  6091     011A                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011B                     	;# 
  6096     011B                     	;# 
  6097     011C                     	;# 
  6098     011C                     	;# 
  6099     011C                     	;# 
  6100     011D                     	;# 
  6101     011D                     	;# 
  6102     011D                     	;# 
  6103     011E                     	;# 
  6104     011E                     	;# 
  6105     011E                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     011F                     	;# 
  6110     011F                     	;# 
  6111     018C                     	;# 
  6112     018D                     	;# 
  6113     018E                     	;# 
  6114     018F                     	;# 
  6115     0190                     	;# 
  6116     0191                     	;# 
  6117     0192                     	;# 
  6118     0196                     	;# 
  6119     0197                     	;# 
  6120     0198                     	;# 
  6121     0199                     	;# 
  6122     019A                     	;# 
  6123     019B                     	;# 
  6124     019C                     	;# 
  6125     020C                     	;# 
  6126     020D                     	;# 
  6127     020E                     	;# 
  6128     020E                     	;# 
  6129     020F                     	;# 
  6130     020F                     	;# 
  6131     0210                     	;# 
  6132     0210                     	;# 
  6133     0211                     	;# 
  6134     0211                     	;# 
  6135     0212                     	;# 
  6136     0213                     	;# 
  6137     0214                     	;# 
  6138     0214                     	;# 
  6139     0215                     	;# 
  6140     0215                     	;# 
  6141     0216                     	;# 
  6142     0216                     	;# 
  6143     0217                     	;# 
  6144     0217                     	;# 
  6145     0218                     	;# 
  6146     0219                     	;# 
  6147     021A                     	;# 
  6148     021A                     	;# 
  6149     021B                     	;# 
  6150     021B                     	;# 
  6151     021C                     	;# 
  6152     021C                     	;# 
  6153     021D                     	;# 
  6154     021D                     	;# 
  6155     021E                     	;# 
  6156     021F                     	;# 
  6157     028C                     	;# 
  6158     028C                     	;# 
  6159     028D                     	;# 
  6160     028D                     	;# 
  6161     028E                     	;# 
  6162     028F                     	;# 
  6163     0290                     	;# 
  6164     0291                     	;# 
  6165     0292                     	;# 
  6166     0292                     	;# 
  6167     0293                     	;# 
  6168     0293                     	;# 
  6169     0294                     	;# 
  6170     0295                     	;# 
  6171     0296                     	;# 
  6172     0297                     	;# 
  6173     0298                     	;# 
  6174     0298                     	;# 
  6175     0299                     	;# 
  6176     0299                     	;# 
  6177     029A                     	;# 
  6178     029B                     	;# 
  6179     029C                     	;# 
  6180     029D                     	;# 
  6181     029F                     	;# 
  6182     030C                     	;# 
  6183     030C                     	;# 
  6184     030D                     	;# 
  6185     030E                     	;# 
  6186     030F                     	;# 
  6187     0310                     	;# 
  6188     0310                     	;# 
  6189     0311                     	;# 
  6190     0312                     	;# 
  6191     0313                     	;# 
  6192     0314                     	;# 
  6193     0314                     	;# 
  6194     0315                     	;# 
  6195     0316                     	;# 
  6196     0317                     	;# 
  6197     0318                     	;# 
  6198     0318                     	;# 
  6199     0319                     	;# 
  6200     031A                     	;# 
  6201     031B                     	;# 
  6202     031C                     	;# 
  6203     031C                     	;# 
  6204     031D                     	;# 
  6205     031E                     	;# 
  6206     031F                     	;# 
  6207     038C                     	;# 
  6208     038C                     	;# 
  6209     038D                     	;# 
  6210     038E                     	;# 
  6211     0390                     	;# 
  6212     0390                     	;# 
  6213     0391                     	;# 
  6214     0392                     	;# 
  6215     048C                     	;# 
  6216     048C                     	;# 
  6217     048D                     	;# 
  6218     048E                     	;# 
  6219     048F                     	;# 
  6220     048F                     	;# 
  6221     0490                     	;# 
  6222     0491                     	;# 
  6223     0492                     	;# 
  6224     0492                     	;# 
  6225     0493                     	;# 
  6226     0494                     	;# 
  6227     0495                     	;# 
  6228     0495                     	;# 
  6229     0496                     	;# 
  6230     0497                     	;# 
  6231     0498                     	;# 
  6232     0499                     	;# 
  6233     049A                     	;# 
  6234     049B                     	;# 
  6235     049C                     	;# 
  6236     049D                     	;# 
  6237     050C                     	;# 
  6238     050C                     	;# 
  6239     050D                     	;# 
  6240     050E                     	;# 
  6241     050F                     	;# 
  6242     050F                     	;# 
  6243     0510                     	;# 
  6244     0511                     	;# 
  6245     0512                     	;# 
  6246     0512                     	;# 
  6247     0513                     	;# 
  6248     0514                     	;# 
  6249     0515                     	;# 
  6250     0515                     	;# 
  6251     0516                     	;# 
  6252     0517                     	;# 
  6253     0518                     	;# 
  6254     0519                     	;# 
  6255     051A                     	;# 
  6256     051B                     	;# 
  6257     051C                     	;# 
  6258     051D                     	;# 
  6259     058C                     	;# 
  6260     058C                     	;# 
  6261     058D                     	;# 
  6262     058E                     	;# 
  6263     058F                     	;# 
  6264     058F                     	;# 
  6265     0590                     	;# 
  6266     0591                     	;# 
  6267     0592                     	;# 
  6268     0593                     	;# 
  6269     059C                     	;# 
  6270     059C                     	;# 
  6271     059D                     	;# 
  6272     059D                     	;# 
  6273     059E                     	;# 
  6274     059F                     	;# 
  6275     060C                     	;# 
  6276     060C                     	;# 
  6277     060D                     	;# 
  6278     060D                     	;# 
  6279     060E                     	;# 
  6280     060F                     	;# 
  6281     0610                     	;# 
  6282     0611                     	;# 
  6283     0612                     	;# 
  6284     0613                     	;# 
  6285     0614                     	;# 
  6286     0616                     	;# 
  6287     0616                     	;# 
  6288     0617                     	;# 
  6289     0617                     	;# 
  6290     0618                     	;# 
  6291     0619                     	;# 
  6292     061A                     	;# 
  6293     061B                     	;# 
  6294     061C                     	;# 
  6295     061D                     	;# 
  6296     061E                     	;# 
  6297     068C                     	;# 
  6298     068D                     	;# 
  6299     068E                     	;# 
  6300     068F                     	;# 
  6301     0690                     	;# 
  6302     0691                     	;# 
  6303     0692                     	;# 
  6304     0693                     	;# 
  6305     0694                     	;# 
  6306     070C                     	;# 
  6307     070D                     	;# 
  6308     070E                     	;# 
  6309     070F                     	;# 
  6310     0710                     	;# 
  6311     0711                     	;# 
  6312     0712                     	;# 
  6313     0713                     	;# 
  6314     0714                     	;# 
  6315     0716                     	;# 
  6316     0717                     	;# 
  6317     0718                     	;# 
  6318     0719                     	;# 
  6319     071A                     	;# 
  6320     071B                     	;# 
  6321     071C                     	;# 
  6322     071D                     	;# 
  6323     071E                     	;# 
  6324     0796                     	;# 
  6325     0797                     	;# 
  6326     0798                     	;# 
  6327     0799                     	;# 
  6328     079A                     	;# 
  6329     079B                     	;# 
  6330     079C                     	;# 
  6331     079D                     	;# 
  6332     080C                     	;# 
  6333     080D                     	;# 
  6334     080E                     	;# 
  6335     080F                     	;# 
  6336     0810                     	;# 
  6337     0811                     	;# 
  6338     0813                     	;# 
  6339     0814                     	;# 
  6340     081A                     	;# 
  6341     081A                     	;# 
  6342     081B                     	;# 
  6343     081C                     	;# 
  6344     081C                     	;# 
  6345     081D                     	;# 
  6346     081E                     	;# 
  6347     081F                     	;# 
  6348     088C                     	;# 
  6349     088D                     	;# 
  6350     088E                     	;# 
  6351     088F                     	;# 
  6352     0890                     	;# 
  6353     0891                     	;# 
  6354     0892                     	;# 
  6355     0893                     	;# 
  6356     0895                     	;# 
  6357     0896                     	;# 
  6358     0897                     	;# 
  6359     0898                     	;# 
  6360     0899                     	;# 
  6361     089A                     	;# 
  6362     089B                     	;# 
  6363     090C                     	;# 
  6364     090E                     	;# 
  6365     090F                     	;# 
  6366     091F                     	;# 
  6367     098F                     	;# 
  6368     098F                     	;# 
  6369     0990                     	;# 
  6370     0991                     	;# 
  6371     0992                     	;# 
  6372     0993                     	;# 
  6373     0994                     	;# 
  6374     0995                     	;# 
  6375     0996                     	;# 
  6376     0997                     	;# 
  6377     0A19                     	;# 
  6378     0A19                     	;# 
  6379     0A1A                     	;# 
  6380     0A1A                     	;# 
  6381     0A1B                     	;# 
  6382     0A1B                     	;# 
  6383     0A1B                     	;# 
  6384     0A1C                     	;# 
  6385     0A1C                     	;# 
  6386     0A1D                     	;# 
  6387     0A1D                     	;# 
  6388     0A1E                     	;# 
  6389     0A1E                     	;# 
  6390     0A1F                     	;# 
  6391     0A1F                     	;# 
  6392     0A1F                     	;# 
  6393     1E0F                     	;# 
  6394     1E10                     	;# 
  6395     1E11                     	;# 
  6396     1E12                     	;# 
  6397     1E13                     	;# 
  6398     1E14                     	;# 
  6399     1E15                     	;# 
  6400     1E16                     	;# 
  6401     1E17                     	;# 
  6402     1E18                     	;# 
  6403     1E19                     	;# 
  6404     1E1A                     	;# 
  6405     1E1B                     	;# 
  6406     1E1C                     	;# 
  6407     1E1D                     	;# 
  6408     1E1E                     	;# 
  6409     1E1F                     	;# 
  6410     1E20                     	;# 
  6411     1E21                     	;# 
  6412     1E22                     	;# 
  6413     1E23                     	;# 
  6414     1E24                     	;# 
  6415     1E25                     	;# 
  6416     1E26                     	;# 
  6417     1E27                     	;# 
  6418     1E28                     	;# 
  6419     1E29                     	;# 
  6420     1E2A                     	;# 
  6421     1E2B                     	;# 
  6422     1E2C                     	;# 
  6423     1E2D                     	;# 
  6424     1E2E                     	;# 
  6425     1E2F                     	;# 
  6426     1E30                     	;# 
  6427     1E31                     	;# 
  6428     1E32                     	;# 
  6429     1E33                     	;# 
  6430     1E34                     	;# 
  6431     1E35                     	;# 
  6432     1E36                     	;# 
  6433     1E37                     	;# 
  6434     1E8F                     	;# 
  6435     1E90                     	;# 
  6436     1E91                     	;# 
  6437     1E92                     	;# 
  6438     1E93                     	;# 
  6439     1E94                     	;# 
  6440     1E95                     	;# 
  6441     1E96                     	;# 
  6442     1E97                     	;# 
  6443     1E9C                     	;# 
  6444     1E9D                     	;# 
  6445     1E9E                     	;# 
  6446     1EA1                     	;# 
  6447     1EA2                     	;# 
  6448     1EA3                     	;# 
  6449     1EA4                     	;# 
  6450     1EA5                     	;# 
  6451     1EA9                     	;# 
  6452     1EAA                     	;# 
  6453     1EAB                     	;# 
  6454     1EAC                     	;# 
  6455     1EB1                     	;# 
  6456     1EB2                     	;# 
  6457     1EB3                     	;# 
  6458     1EB8                     	;# 
  6459     1EB9                     	;# 
  6460     1EBA                     	;# 
  6461     1EBB                     	;# 
  6462     1EBC                     	;# 
  6463     1EBD                     	;# 
  6464     1EBE                     	;# 
  6465     1EC3                     	;# 
  6466     1EC5                     	;# 
  6467     1EC6                     	;# 
  6468     1EC7                     	;# 
  6469     1EC8                     	;# 
  6470     1EC9                     	;# 
  6471     1ECA                     	;# 
  6472     1ECB                     	;# 
  6473     1ECC                     	;# 
  6474     1ECD                     	;# 
  6475     1ECE                     	;# 
  6476     1F10                     	;# 
  6477     1F11                     	;# 
  6478     1F12                     	;# 
  6479     1F13                     	;# 
  6480     1F14                     	;# 
  6481     1F15                     	;# 
  6482     1F16                     	;# 
  6483     1F17                     	;# 
  6484     1F18                     	;# 
  6485     1F19                     	;# 
  6486     1F1A                     	;# 
  6487     1F1B                     	;# 
  6488     1F1C                     	;# 
  6489     1F1D                     	;# 
  6490     1F1E                     	;# 
  6491     1F1F                     	;# 
  6492     1F20                     	;# 
  6493     1F21                     	;# 
  6494     1F22                     	;# 
  6495     1F23                     	;# 
  6496     1F24                     	;# 
  6497     1F25                     	;# 
  6498     1F26                     	;# 
  6499     1F27                     	;# 
  6500     1F38                     	;# 
  6501     1F39                     	;# 
  6502     1F3A                     	;# 
  6503     1F3B                     	;# 
  6504     1F3C                     	;# 
  6505     1F3D                     	;# 
  6506     1F3E                     	;# 
  6507     1F3F                     	;# 
  6508     1F43                     	;# 
  6509     1F44                     	;# 
  6510     1F45                     	;# 
  6511     1F46                     	;# 
  6512     1F47                     	;# 
  6513     1F48                     	;# 
  6514     1F49                     	;# 
  6515     1F4A                     	;# 
  6516     1F4E                     	;# 
  6517     1F4F                     	;# 
  6518     1F50                     	;# 
  6519     1F51                     	;# 
  6520     1F52                     	;# 
  6521     1F53                     	;# 
  6522     1F54                     	;# 
  6523     1F55                     	;# 
  6524     1F65                     	;# 
  6525     1F66                     	;# 
  6526     1F67                     	;# 
  6527     1F68                     	;# 
  6528     1F69                     	;# 
  6529     1F6A                     	;# 
  6530     1F6B                     	;# 
  6531     1FE4                     	;# 
  6532     1FE5                     	;# 
  6533     1FE6                     	;# 
  6534     1FE7                     	;# 
  6535     1FE8                     	;# 
  6536     1FE8                     	;# 
  6537     1FE9                     	;# 
  6538     1FEA                     	;# 
  6539     1FEB                     	;# 
  6540     1FED                     	;# 
  6541     1FEE                     	;# 
  6542     1FEF                     	;# 
  6543     0000                     	;# 
  6544     0001                     	;# 
  6545     0002                     	;# 
  6546     0003                     	;# 
  6547     0004                     	;# 
  6548     0005                     	;# 
  6549     0006                     	;# 
  6550     0007                     	;# 
  6551     0008                     	;# 
  6552     0009                     	;# 
  6553     000A                     	;# 
  6554     000B                     	;# 
  6555     000C                     	;# 
  6556     000D                     	;# 
  6557     000E                     	;# 
  6558     0010                     	;# 
  6559     0012                     	;# 
  6560     0013                     	;# 
  6561     0014                     	;# 
  6562     0016                     	;# 
  6563     0018                     	;# 
  6564     0019                     	;# 
  6565     001A                     	;# 
  6566     001C                     	;# 
  6567     008C                     	;# 
  6568     008C                     	;# 
  6569     008D                     	;# 
  6570     008E                     	;# 
  6571     008E                     	;# 
  6572     008F                     	;# 
  6573     0090                     	;# 
  6574     0090                     	;# 
  6575     0091                     	;# 
  6576     0092                     	;# 
  6577     0092                     	;# 
  6578     0093                     	;# 
  6579     0094                     	;# 
  6580     0094                     	;# 
  6581     0095                     	;# 
  6582     0096                     	;# 
  6583     0096                     	;# 
  6584     0097                     	;# 
  6585     0098                     	;# 
  6586     0099                     	;# 
  6587     009A                     	;# 
  6588     009B                     	;# 
  6589     009B                     	;# 
  6590     009C                     	;# 
  6591     009D                     	;# 
  6592     009D                     	;# 
  6593     009E                     	;# 
  6594     009F                     	;# 
  6595     010C                     	;# 
  6596     010C                     	;# 
  6597     010D                     	;# 
  6598     010E                     	;# 
  6599     010F                     	;# 
  6600     010F                     	;# 
  6601     0110                     	;# 
  6602     0111                     	;# 
  6603     0112                     	;# 
  6604     0113                     	;# 
  6605     0114                     	;# 
  6606     0115                     	;# 
  6607     0116                     	;# 
  6608     0117                     	;# 
  6609     0118                     	;# 
  6610     0119                     	;# 
  6611     0119                     	;# 
  6612     0119                     	;# 
  6613     011A                     	;# 
  6614     011A                     	;# 
  6615     011A                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011B                     	;# 
  6620     011B                     	;# 
  6621     011C                     	;# 
  6622     011C                     	;# 
  6623     011C                     	;# 
  6624     011D                     	;# 
  6625     011D                     	;# 
  6626     011D                     	;# 
  6627     011E                     	;# 
  6628     011E                     	;# 
  6629     011E                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     011F                     	;# 
  6634     011F                     	;# 
  6635     018C                     	;# 
  6636     018D                     	;# 
  6637     018E                     	;# 
  6638     018F                     	;# 
  6639     0190                     	;# 
  6640     0191                     	;# 
  6641     0192                     	;# 
  6642     0196                     	;# 
  6643     0197                     	;# 
  6644     0198                     	;# 
  6645     0199                     	;# 
  6646     019A                     	;# 
  6647     019B                     	;# 
  6648     019C                     	;# 
  6649     020C                     	;# 
  6650     020D                     	;# 
  6651     020E                     	;# 
  6652     020E                     	;# 
  6653     020F                     	;# 
  6654     020F                     	;# 
  6655     0210                     	;# 
  6656     0210                     	;# 
  6657     0211                     	;# 
  6658     0211                     	;# 
  6659     0212                     	;# 
  6660     0213                     	;# 
  6661     0214                     	;# 
  6662     0214                     	;# 
  6663     0215                     	;# 
  6664     0215                     	;# 
  6665     0216                     	;# 
  6666     0216                     	;# 
  6667     0217                     	;# 
  6668     0217                     	;# 
  6669     0218                     	;# 
  6670     0219                     	;# 
  6671     021A                     	;# 
  6672     021A                     	;# 
  6673     021B                     	;# 
  6674     021B                     	;# 
  6675     021C                     	;# 
  6676     021C                     	;# 
  6677     021D                     	;# 
  6678     021D                     	;# 
  6679     021E                     	;# 
  6680     021F                     	;# 
  6681     028C                     	;# 
  6682     028C                     	;# 
  6683     028D                     	;# 
  6684     028D                     	;# 
  6685     028E                     	;# 
  6686     028F                     	;# 
  6687     0290                     	;# 
  6688     0291                     	;# 
  6689     0292                     	;# 
  6690     0292                     	;# 
  6691     0293                     	;# 
  6692     0293                     	;# 
  6693     0294                     	;# 
  6694     0295                     	;# 
  6695     0296                     	;# 
  6696     0297                     	;# 
  6697     0298                     	;# 
  6698     0298                     	;# 
  6699     0299                     	;# 
  6700     0299                     	;# 
  6701     029A                     	;# 
  6702     029B                     	;# 
  6703     029C                     	;# 
  6704     029D                     	;# 
  6705     029F                     	;# 
  6706     030C                     	;# 
  6707     030C                     	;# 
  6708     030D                     	;# 
  6709     030E                     	;# 
  6710     030F                     	;# 
  6711     0310                     	;# 
  6712     0310                     	;# 
  6713     0311                     	;# 
  6714     0312                     	;# 
  6715     0313                     	;# 
  6716     0314                     	;# 
  6717     0314                     	;# 
  6718     0315                     	;# 
  6719     0316                     	;# 
  6720     0317                     	;# 
  6721     0318                     	;# 
  6722     0318                     	;# 
  6723     0319                     	;# 
  6724     031A                     	;# 
  6725     031B                     	;# 
  6726     031C                     	;# 
  6727     031C                     	;# 
  6728     031D                     	;# 
  6729     031E                     	;# 
  6730     031F                     	;# 
  6731     038C                     	;# 
  6732     038C                     	;# 
  6733     038D                     	;# 
  6734     038E                     	;# 
  6735     0390                     	;# 
  6736     0390                     	;# 
  6737     0391                     	;# 
  6738     0392                     	;# 
  6739     048C                     	;# 
  6740     048C                     	;# 
  6741     048D                     	;# 
  6742     048E                     	;# 
  6743     048F                     	;# 
  6744     048F                     	;# 
  6745     0490                     	;# 
  6746     0491                     	;# 
  6747     0492                     	;# 
  6748     0492                     	;# 
  6749     0493                     	;# 
  6750     0494                     	;# 
  6751     0495                     	;# 
  6752     0495                     	;# 
  6753     0496                     	;# 
  6754     0497                     	;# 
  6755     0498                     	;# 
  6756     0499                     	;# 
  6757     049A                     	;# 
  6758     049B                     	;# 
  6759     049C                     	;# 
  6760     049D                     	;# 
  6761     050C                     	;# 
  6762     050C                     	;# 
  6763     050D                     	;# 
  6764     050E                     	;# 
  6765     050F                     	;# 
  6766     050F                     	;# 
  6767     0510                     	;# 
  6768     0511                     	;# 
  6769     0512                     	;# 
  6770     0512                     	;# 
  6771     0513                     	;# 
  6772     0514                     	;# 
  6773     0515                     	;# 
  6774     0515                     	;# 
  6775     0516                     	;# 
  6776     0517                     	;# 
  6777     0518                     	;# 
  6778     0519                     	;# 
  6779     051A                     	;# 
  6780     051B                     	;# 
  6781     051C                     	;# 
  6782     051D                     	;# 
  6783     058C                     	;# 
  6784     058C                     	;# 
  6785     058D                     	;# 
  6786     058E                     	;# 
  6787     058F                     	;# 
  6788     058F                     	;# 
  6789     0590                     	;# 
  6790     0591                     	;# 
  6791     0592                     	;# 
  6792     0593                     	;# 
  6793     059C                     	;# 
  6794     059C                     	;# 
  6795     059D                     	;# 
  6796     059D                     	;# 
  6797     059E                     	;# 
  6798     059F                     	;# 
  6799     060C                     	;# 
  6800     060C                     	;# 
  6801     060D                     	;# 
  6802     060D                     	;# 
  6803     060E                     	;# 
  6804     060F                     	;# 
  6805     0610                     	;# 
  6806     0611                     	;# 
  6807     0612                     	;# 
  6808     0613                     	;# 
  6809     0614                     	;# 
  6810     0616                     	;# 
  6811     0616                     	;# 
  6812     0617                     	;# 
  6813     0617                     	;# 
  6814     0618                     	;# 
  6815     0619                     	;# 
  6816     061A                     	;# 
  6817     061B                     	;# 
  6818     061C                     	;# 
  6819     061D                     	;# 
  6820     061E                     	;# 
  6821     068C                     	;# 
  6822     068D                     	;# 
  6823     068E                     	;# 
  6824     068F                     	;# 
  6825     0690                     	;# 
  6826     0691                     	;# 
  6827     0692                     	;# 
  6828     0693                     	;# 
  6829     0694                     	;# 
  6830     070C                     	;# 
  6831     070D                     	;# 
  6832     070E                     	;# 
  6833     070F                     	;# 
  6834     0710                     	;# 
  6835     0711                     	;# 
  6836     0712                     	;# 
  6837     0713                     	;# 
  6838     0714                     	;# 
  6839     0716                     	;# 
  6840     0717                     	;# 
  6841     0718                     	;# 
  6842     0719                     	;# 
  6843     071A                     	;# 
  6844     071B                     	;# 
  6845     071C                     	;# 
  6846     071D                     	;# 
  6847     071E                     	;# 
  6848     0796                     	;# 
  6849     0797                     	;# 
  6850     0798                     	;# 
  6851     0799                     	;# 
  6852     079A                     	;# 
  6853     079B                     	;# 
  6854     079C                     	;# 
  6855     079D                     	;# 
  6856     080C                     	;# 
  6857     080D                     	;# 
  6858     080E                     	;# 
  6859     080F                     	;# 
  6860     0810                     	;# 
  6861     0811                     	;# 
  6862     0813                     	;# 
  6863     0814                     	;# 
  6864     081A                     	;# 
  6865     081A                     	;# 
  6866     081B                     	;# 
  6867     081C                     	;# 
  6868     081C                     	;# 
  6869     081D                     	;# 
  6870     081E                     	;# 
  6871     081F                     	;# 
  6872     088C                     	;# 
  6873     088D                     	;# 
  6874     088E                     	;# 
  6875     088F                     	;# 
  6876     0890                     	;# 
  6877     0891                     	;# 
  6878     0892                     	;# 
  6879     0893                     	;# 
  6880     0895                     	;# 
  6881     0896                     	;# 
  6882     0897                     	;# 
  6883     0898                     	;# 
  6884     0899                     	;# 
  6885     089A                     	;# 
  6886     089B                     	;# 
  6887     090C                     	;# 
  6888     090E                     	;# 
  6889     090F                     	;# 
  6890     091F                     	;# 
  6891     098F                     	;# 
  6892     098F                     	;# 
  6893     0990                     	;# 
  6894     0991                     	;# 
  6895     0992                     	;# 
  6896     0993                     	;# 
  6897     0994                     	;# 
  6898     0995                     	;# 
  6899     0996                     	;# 
  6900     0997                     	;# 
  6901     0A19                     	;# 
  6902     0A19                     	;# 
  6903     0A1A                     	;# 
  6904     0A1A                     	;# 
  6905     0A1B                     	;# 
  6906     0A1B                     	;# 
  6907     0A1B                     	;# 
  6908     0A1C                     	;# 
  6909     0A1C                     	;# 
  6910     0A1D                     	;# 
  6911     0A1D                     	;# 
  6912     0A1E                     	;# 
  6913     0A1E                     	;# 
  6914     0A1F                     	;# 
  6915     0A1F                     	;# 
  6916     0A1F                     	;# 
  6917     1E0F                     	;# 
  6918     1E10                     	;# 
  6919     1E11                     	;# 
  6920     1E12                     	;# 
  6921     1E13                     	;# 
  6922     1E14                     	;# 
  6923     1E15                     	;# 
  6924     1E16                     	;# 
  6925     1E17                     	;# 
  6926     1E18                     	;# 
  6927     1E19                     	;# 
  6928     1E1A                     	;# 
  6929     1E1B                     	;# 
  6930     1E1C                     	;# 
  6931     1E1D                     	;# 
  6932     1E1E                     	;# 
  6933     1E1F                     	;# 
  6934     1E20                     	;# 
  6935     1E21                     	;# 
  6936     1E22                     	;# 
  6937     1E23                     	;# 
  6938     1E24                     	;# 
  6939     1E25                     	;# 
  6940     1E26                     	;# 
  6941     1E27                     	;# 
  6942     1E28                     	;# 
  6943     1E29                     	;# 
  6944     1E2A                     	;# 
  6945     1E2B                     	;# 
  6946     1E2C                     	;# 
  6947     1E2D                     	;# 
  6948     1E2E                     	;# 
  6949     1E2F                     	;# 
  6950     1E30                     	;# 
  6951     1E31                     	;# 
  6952     1E32                     	;# 
  6953     1E33                     	;# 
  6954     1E34                     	;# 
  6955     1E35                     	;# 
  6956     1E36                     	;# 
  6957     1E37                     	;# 
  6958     1E8F                     	;# 
  6959     1E90                     	;# 
  6960     1E91                     	;# 
  6961     1E92                     	;# 
  6962     1E93                     	;# 
  6963     1E94                     	;# 
  6964     1E95                     	;# 
  6965     1E96                     	;# 
  6966     1E97                     	;# 
  6967     1E9C                     	;# 
  6968     1E9D                     	;# 
  6969     1E9E                     	;# 
  6970     1EA1                     	;# 
  6971     1EA2                     	;# 
  6972     1EA3                     	;# 
  6973     1EA4                     	;# 
  6974     1EA5                     	;# 
  6975     1EA9                     	;# 
  6976     1EAA                     	;# 
  6977     1EAB                     	;# 
  6978     1EAC                     	;# 
  6979     1EB1                     	;# 
  6980     1EB2                     	;# 
  6981     1EB3                     	;# 
  6982     1EB8                     	;# 
  6983     1EB9                     	;# 
  6984     1EBA                     	;# 
  6985     1EBB                     	;# 
  6986     1EBC                     	;# 
  6987     1EBD                     	;# 
  6988     1EBE                     	;# 
  6989     1EC3                     	;# 
  6990     1EC5                     	;# 
  6991     1EC6                     	;# 
  6992     1EC7                     	;# 
  6993     1EC8                     	;# 
  6994     1EC9                     	;# 
  6995     1ECA                     	;# 
  6996     1ECB                     	;# 
  6997     1ECC                     	;# 
  6998     1ECD                     	;# 
  6999     1ECE                     	;# 
  7000     1F10                     	;# 
  7001     1F11                     	;# 
  7002     1F12                     	;# 
  7003     1F13                     	;# 
  7004     1F14                     	;# 
  7005     1F15                     	;# 
  7006     1F16                     	;# 
  7007     1F17                     	;# 
  7008     1F18                     	;# 
  7009     1F19                     	;# 
  7010     1F1A                     	;# 
  7011     1F1B                     	;# 
  7012     1F1C                     	;# 
  7013     1F1D                     	;# 
  7014     1F1E                     	;# 
  7015     1F1F                     	;# 
  7016     1F20                     	;# 
  7017     1F21                     	;# 
  7018     1F22                     	;# 
  7019     1F23                     	;# 
  7020     1F24                     	;# 
  7021     1F25                     	;# 
  7022     1F26                     	;# 
  7023     1F27                     	;# 
  7024     1F38                     	;# 
  7025     1F39                     	;# 
  7026     1F3A                     	;# 
  7027     1F3B                     	;# 
  7028     1F3C                     	;# 
  7029     1F3D                     	;# 
  7030     1F3E                     	;# 
  7031     1F3F                     	;# 
  7032     1F43                     	;# 
  7033     1F44                     	;# 
  7034     1F45                     	;# 
  7035     1F46                     	;# 
  7036     1F47                     	;# 
  7037     1F48                     	;# 
  7038     1F49                     	;# 
  7039     1F4A                     	;# 
  7040     1F4E                     	;# 
  7041     1F4F                     	;# 
  7042     1F50                     	;# 
  7043     1F51                     	;# 
  7044     1F52                     	;# 
  7045     1F53                     	;# 
  7046     1F54                     	;# 
  7047     1F55                     	;# 
  7048     1F65                     	;# 
  7049     1F66                     	;# 
  7050     1F67                     	;# 
  7051     1F68                     	;# 
  7052     1F69                     	;# 
  7053     1F6A                     	;# 
  7054     1F6B                     	;# 
  7055     1FE4                     	;# 
  7056     1FE5                     	;# 
  7057     1FE6                     	;# 
  7058     1FE7                     	;# 
  7059     1FE8                     	;# 
  7060     1FE8                     	;# 
  7061     1FE9                     	;# 
  7062     1FEA                     	;# 
  7063     1FEB                     	;# 
  7064     1FED                     	;# 
  7065     1FEE                     	;# 
  7066     1FEF                     	;# 
  7067     0000                     	;# 
  7068     0001                     	;# 
  7069     0002                     	;# 
  7070     0003                     	;# 
  7071     0004                     	;# 
  7072     0005                     	;# 
  7073     0006                     	;# 
  7074     0007                     	;# 
  7075     0008                     	;# 
  7076     0009                     	;# 
  7077     000A                     	;# 
  7078     000B                     	;# 
  7079     000C                     	;# 
  7080     000D                     	;# 
  7081     000E                     	;# 
  7082     0010                     	;# 
  7083     0012                     	;# 
  7084     0013                     	;# 
  7085     0014                     	;# 
  7086     0016                     	;# 
  7087     0018                     	;# 
  7088     0019                     	;# 
  7089     001A                     	;# 
  7090     001C                     	;# 
  7091     008C                     	;# 
  7092     008C                     	;# 
  7093     008D                     	;# 
  7094     008E                     	;# 
  7095     008E                     	;# 
  7096     008F                     	;# 
  7097     0090                     	;# 
  7098     0090                     	;# 
  7099     0091                     	;# 
  7100     0092                     	;# 
  7101     0092                     	;# 
  7102     0093                     	;# 
  7103     0094                     	;# 
  7104     0094                     	;# 
  7105     0095                     	;# 
  7106     0096                     	;# 
  7107     0096                     	;# 
  7108     0097                     	;# 
  7109     0098                     	;# 
  7110     0099                     	;# 
  7111     009A                     	;# 
  7112     009B                     	;# 
  7113     009B                     	;# 
  7114     009C                     	;# 
  7115     009D                     	;# 
  7116     009D                     	;# 
  7117     009E                     	;# 
  7118     009F                     	;# 
  7119     010C                     	;# 
  7120     010C                     	;# 
  7121     010D                     	;# 
  7122     010E                     	;# 
  7123     010F                     	;# 
  7124     010F                     	;# 
  7125     0110                     	;# 
  7126     0111                     	;# 
  7127     0112                     	;# 
  7128     0113                     	;# 
  7129     0114                     	;# 
  7130     0115                     	;# 
  7131     0116                     	;# 
  7132     0117                     	;# 
  7133     0118                     	;# 
  7134     0119                     	;# 
  7135     0119                     	;# 
  7136     0119                     	;# 
  7137     011A                     	;# 
  7138     011A                     	;# 
  7139     011A                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011B                     	;# 
  7144     011B                     	;# 
  7145     011C                     	;# 
  7146     011C                     	;# 
  7147     011C                     	;# 
  7148     011D                     	;# 
  7149     011D                     	;# 
  7150     011D                     	;# 
  7151     011E                     	;# 
  7152     011E                     	;# 
  7153     011E                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     011F                     	;# 
  7158     011F                     	;# 
  7159     018C                     	;# 
  7160     018D                     	;# 
  7161     018E                     	;# 
  7162     018F                     	;# 
  7163     0190                     	;# 
  7164     0191                     	;# 
  7165     0192                     	;# 
  7166     0196                     	;# 
  7167     0197                     	;# 
  7168     0198                     	;# 
  7169     0199                     	;# 
  7170     019A                     	;# 
  7171     019B                     	;# 
  7172     019C                     	;# 
  7173     020C                     	;# 
  7174     020D                     	;# 
  7175     020E                     	;# 
  7176     020E                     	;# 
  7177     020F                     	;# 
  7178     020F                     	;# 
  7179     0210                     	;# 
  7180     0210                     	;# 
  7181     0211                     	;# 
  7182     0211                     	;# 
  7183     0212                     	;# 
  7184     0213                     	;# 
  7185     0214                     	;# 
  7186     0214                     	;# 
  7187     0215                     	;# 
  7188     0215                     	;# 
  7189     0216                     	;# 
  7190     0216                     	;# 
  7191     0217                     	;# 
  7192     0217                     	;# 
  7193     0218                     	;# 
  7194     0219                     	;# 
  7195     021A                     	;# 
  7196     021A                     	;# 
  7197     021B                     	;# 
  7198     021B                     	;# 
  7199     021C                     	;# 
  7200     021C                     	;# 
  7201     021D                     	;# 
  7202     021D                     	;# 
  7203     021E                     	;# 
  7204     021F                     	;# 
  7205     028C                     	;# 
  7206     028C                     	;# 
  7207     028D                     	;# 
  7208     028D                     	;# 
  7209     028E                     	;# 
  7210     028F                     	;# 
  7211     0290                     	;# 
  7212     0291                     	;# 
  7213     0292                     	;# 
  7214     0292                     	;# 
  7215     0293                     	;# 
  7216     0293                     	;# 
  7217     0294                     	;# 
  7218     0295                     	;# 
  7219     0296                     	;# 
  7220     0297                     	;# 
  7221     0298                     	;# 
  7222     0298                     	;# 
  7223     0299                     	;# 
  7224     0299                     	;# 
  7225     029A                     	;# 
  7226     029B                     	;# 
  7227     029C                     	;# 
  7228     029D                     	;# 
  7229     029F                     	;# 
  7230     030C                     	;# 
  7231     030C                     	;# 
  7232     030D                     	;# 
  7233     030E                     	;# 
  7234     030F                     	;# 
  7235     0310                     	;# 
  7236     0310                     	;# 
  7237     0311                     	;# 
  7238     0312                     	;# 
  7239     0313                     	;# 
  7240     0314                     	;# 
  7241     0314                     	;# 
  7242     0315                     	;# 
  7243     0316                     	;# 
  7244     0317                     	;# 
  7245     0318                     	;# 
  7246     0318                     	;# 
  7247     0319                     	;# 
  7248     031A                     	;# 
  7249     031B                     	;# 
  7250     031C                     	;# 
  7251     031C                     	;# 
  7252     031D                     	;# 
  7253     031E                     	;# 
  7254     031F                     	;# 
  7255     038C                     	;# 
  7256     038C                     	;# 
  7257     038D                     	;# 
  7258     038E                     	;# 
  7259     0390                     	;# 
  7260     0390                     	;# 
  7261     0391                     	;# 
  7262     0392                     	;# 
  7263     048C                     	;# 
  7264     048C                     	;# 
  7265     048D                     	;# 
  7266     048E                     	;# 
  7267     048F                     	;# 
  7268     048F                     	;# 
  7269     0490                     	;# 
  7270     0491                     	;# 
  7271     0492                     	;# 
  7272     0492                     	;# 
  7273     0493                     	;# 
  7274     0494                     	;# 
  7275     0495                     	;# 
  7276     0495                     	;# 
  7277     0496                     	;# 
  7278     0497                     	;# 
  7279     0498                     	;# 
  7280     0499                     	;# 
  7281     049A                     	;# 
  7282     049B                     	;# 
  7283     049C                     	;# 
  7284     049D                     	;# 
  7285     050C                     	;# 
  7286     050C                     	;# 
  7287     050D                     	;# 
  7288     050E                     	;# 
  7289     050F                     	;# 
  7290     050F                     	;# 
  7291     0510                     	;# 
  7292     0511                     	;# 
  7293     0512                     	;# 
  7294     0512                     	;# 
  7295     0513                     	;# 
  7296     0514                     	;# 
  7297     0515                     	;# 
  7298     0515                     	;# 
  7299     0516                     	;# 
  7300     0517                     	;# 
  7301     0518                     	;# 
  7302     0519                     	;# 
  7303     051A                     	;# 
  7304     051B                     	;# 
  7305     051C                     	;# 
  7306     051D                     	;# 
  7307     058C                     	;# 
  7308     058C                     	;# 
  7309     058D                     	;# 
  7310     058E                     	;# 
  7311     058F                     	;# 
  7312     058F                     	;# 
  7313     0590                     	;# 
  7314     0591                     	;# 
  7315     0592                     	;# 
  7316     0593                     	;# 
  7317     059C                     	;# 
  7318     059C                     	;# 
  7319     059D                     	;# 
  7320     059D                     	;# 
  7321     059E                     	;# 
  7322     059F                     	;# 
  7323     060C                     	;# 
  7324     060C                     	;# 
  7325     060D                     	;# 
  7326     060D                     	;# 
  7327     060E                     	;# 
  7328     060F                     	;# 
  7329     0610                     	;# 
  7330     0611                     	;# 
  7331     0612                     	;# 
  7332     0613                     	;# 
  7333     0614                     	;# 
  7334     0616                     	;# 
  7335     0616                     	;# 
  7336     0617                     	;# 
  7337     0617                     	;# 
  7338     0618                     	;# 
  7339     0619                     	;# 
  7340     061A                     	;# 
  7341     061B                     	;# 
  7342     061C                     	;# 
  7343     061D                     	;# 
  7344     061E                     	;# 
  7345     068C                     	;# 
  7346     068D                     	;# 
  7347     068E                     	;# 
  7348     068F                     	;# 
  7349     0690                     	;# 
  7350     0691                     	;# 
  7351     0692                     	;# 
  7352     0693                     	;# 
  7353     0694                     	;# 
  7354     070C                     	;# 
  7355     070D                     	;# 
  7356     070E                     	;# 
  7357     070F                     	;# 
  7358     0710                     	;# 
  7359     0711                     	;# 
  7360     0712                     	;# 
  7361     0713                     	;# 
  7362     0714                     	;# 
  7363     0716                     	;# 
  7364     0717                     	;# 
  7365     0718                     	;# 
  7366     0719                     	;# 
  7367     071A                     	;# 
  7368     071B                     	;# 
  7369     071C                     	;# 
  7370     071D                     	;# 
  7371     071E                     	;# 
  7372     0796                     	;# 
  7373     0797                     	;# 
  7374     0798                     	;# 
  7375     0799                     	;# 
  7376     079A                     	;# 
  7377     079B                     	;# 
  7378     079C                     	;# 
  7379     079D                     	;# 
  7380     080C                     	;# 
  7381     080D                     	;# 
  7382     080E                     	;# 
  7383     080F                     	;# 
  7384     0810                     	;# 
  7385     0811                     	;# 
  7386     0813                     	;# 
  7387     0814                     	;# 
  7388     081A                     	;# 
  7389     081A                     	;# 
  7390     081B                     	;# 
  7391     081C                     	;# 
  7392     081C                     	;# 
  7393     081D                     	;# 
  7394     081E                     	;# 
  7395     081F                     	;# 
  7396     088C                     	;# 
  7397     088D                     	;# 
  7398     088E                     	;# 
  7399     088F                     	;# 
  7400     0890                     	;# 
  7401     0891                     	;# 
  7402     0892                     	;# 
  7403     0893                     	;# 
  7404     0895                     	;# 
  7405     0896                     	;# 
  7406     0897                     	;# 
  7407     0898                     	;# 
  7408     0899                     	;# 
  7409     089A                     	;# 
  7410     089B                     	;# 
  7411     090C                     	;# 
  7412     090E                     	;# 
  7413     090F                     	;# 
  7414     091F                     	;# 
  7415     098F                     	;# 
  7416     098F                     	;# 
  7417     0990                     	;# 
  7418     0991                     	;# 
  7419     0992                     	;# 
  7420     0993                     	;# 
  7421     0994                     	;# 
  7422     0995                     	;# 
  7423     0996                     	;# 
  7424     0997                     	;# 
  7425     0A19                     	;# 
  7426     0A19                     	;# 
  7427     0A1A                     	;# 
  7428     0A1A                     	;# 
  7429     0A1B                     	;# 
  7430     0A1B                     	;# 
  7431     0A1B                     	;# 
  7432     0A1C                     	;# 
  7433     0A1C                     	;# 
  7434     0A1D                     	;# 
  7435     0A1D                     	;# 
  7436     0A1E                     	;# 
  7437     0A1E                     	;# 
  7438     0A1F                     	;# 
  7439     0A1F                     	;# 
  7440     0A1F                     	;# 
  7441     1E0F                     	;# 
  7442     1E10                     	;# 
  7443     1E11                     	;# 
  7444     1E12                     	;# 
  7445     1E13                     	;# 
  7446     1E14                     	;# 
  7447     1E15                     	;# 
  7448     1E16                     	;# 
  7449     1E17                     	;# 
  7450     1E18                     	;# 
  7451     1E19                     	;# 
  7452     1E1A                     	;# 
  7453     1E1B                     	;# 
  7454     1E1C                     	;# 
  7455     1E1D                     	;# 
  7456     1E1E                     	;# 
  7457     1E1F                     	;# 
  7458     1E20                     	;# 
  7459     1E21                     	;# 
  7460     1E22                     	;# 
  7461     1E23                     	;# 
  7462     1E24                     	;# 
  7463     1E25                     	;# 
  7464     1E26                     	;# 
  7465     1E27                     	;# 
  7466     1E28                     	;# 
  7467     1E29                     	;# 
  7468     1E2A                     	;# 
  7469     1E2B                     	;# 
  7470     1E2C                     	;# 
  7471     1E2D                     	;# 
  7472     1E2E                     	;# 
  7473     1E2F                     	;# 
  7474     1E30                     	;# 
  7475     1E31                     	;# 
  7476     1E32                     	;# 
  7477     1E33                     	;# 
  7478     1E34                     	;# 
  7479     1E35                     	;# 
  7480     1E36                     	;# 
  7481     1E37                     	;# 
  7482     1E8F                     	;# 
  7483     1E90                     	;# 
  7484     1E91                     	;# 
  7485     1E92                     	;# 
  7486     1E93                     	;# 
  7487     1E94                     	;# 
  7488     1E95                     	;# 
  7489     1E96                     	;# 
  7490     1E97                     	;# 
  7491     1E9C                     	;# 
  7492     1E9D                     	;# 
  7493     1E9E                     	;# 
  7494     1EA1                     	;# 
  7495     1EA2                     	;# 
  7496     1EA3                     	;# 
  7497     1EA4                     	;# 
  7498     1EA5                     	;# 
  7499     1EA9                     	;# 
  7500     1EAA                     	;# 
  7501     1EAB                     	;# 
  7502     1EAC                     	;# 
  7503     1EB1                     	;# 
  7504     1EB2                     	;# 
  7505     1EB3                     	;# 
  7506     1EB8                     	;# 
  7507     1EB9                     	;# 
  7508     1EBA                     	;# 
  7509     1EBB                     	;# 
  7510     1EBC                     	;# 
  7511     1EBD                     	;# 
  7512     1EBE                     	;# 
  7513     1EC3                     	;# 
  7514     1EC5                     	;# 
  7515     1EC6                     	;# 
  7516     1EC7                     	;# 
  7517     1EC8                     	;# 
  7518     1EC9                     	;# 
  7519     1ECA                     	;# 
  7520     1ECB                     	;# 
  7521     1ECC                     	;# 
  7522     1ECD                     	;# 
  7523     1ECE                     	;# 
  7524     1F10                     	;# 
  7525     1F11                     	;# 
  7526     1F12                     	;# 
  7527     1F13                     	;# 
  7528     1F14                     	;# 
  7529     1F15                     	;# 
  7530     1F16                     	;# 
  7531     1F17                     	;# 
  7532     1F18                     	;# 
  7533     1F19                     	;# 
  7534     1F1A                     	;# 
  7535     1F1B                     	;# 
  7536     1F1C                     	;# 
  7537     1F1D                     	;# 
  7538     1F1E                     	;# 
  7539     1F1F                     	;# 
  7540     1F20                     	;# 
  7541     1F21                     	;# 
  7542     1F22                     	;# 
  7543     1F23                     	;# 
  7544     1F24                     	;# 
  7545     1F25                     	;# 
  7546     1F26                     	;# 
  7547     1F27                     	;# 
  7548     1F38                     	;# 
  7549     1F39                     	;# 
  7550     1F3A                     	;# 
  7551     1F3B                     	;# 
  7552     1F3C                     	;# 
  7553     1F3D                     	;# 
  7554     1F3E                     	;# 
  7555     1F3F                     	;# 
  7556     1F43                     	;# 
  7557     1F44                     	;# 
  7558     1F45                     	;# 
  7559     1F46                     	;# 
  7560     1F47                     	;# 
  7561     1F48                     	;# 
  7562     1F49                     	;# 
  7563     1F4A                     	;# 
  7564     1F4E                     	;# 
  7565     1F4F                     	;# 
  7566     1F50                     	;# 
  7567     1F51                     	;# 
  7568     1F52                     	;# 
  7569     1F53                     	;# 
  7570     1F54                     	;# 
  7571     1F55                     	;# 
  7572     1F65                     	;# 
  7573     1F66                     	;# 
  7574     1F67                     	;# 
  7575     1F68                     	;# 
  7576     1F69                     	;# 
  7577     1F6A                     	;# 
  7578     1F6B                     	;# 
  7579     1FE4                     	;# 
  7580     1FE5                     	;# 
  7581     1FE6                     	;# 
  7582     1FE7                     	;# 
  7583     1FE8                     	;# 
  7584     1FE8                     	;# 
  7585     1FE9                     	;# 
  7586     1FEA                     	;# 
  7587     1FEB                     	;# 
  7588     1FED                     	;# 
  7589     1FEE                     	;# 
  7590     1FEF                     	;# 
  7591     0000                     	;# 
  7592     0001                     	;# 
  7593     0002                     	;# 
  7594     0003                     	;# 
  7595     0004                     	;# 
  7596     0005                     	;# 
  7597     0006                     	;# 
  7598     0007                     	;# 
  7599     0008                     	;# 
  7600     0009                     	;# 
  7601     000A                     	;# 
  7602     000B                     	;# 
  7603     000C                     	;# 
  7604     000D                     	;# 
  7605     000E                     	;# 
  7606     0010                     	;# 
  7607     0012                     	;# 
  7608     0013                     	;# 
  7609     0014                     	;# 
  7610     0016                     	;# 
  7611     0018                     	;# 
  7612     0019                     	;# 
  7613     001A                     	;# 
  7614     001C                     	;# 
  7615     008C                     	;# 
  7616     008C                     	;# 
  7617     008D                     	;# 
  7618     008E                     	;# 
  7619     008E                     	;# 
  7620     008F                     	;# 
  7621     0090                     	;# 
  7622     0090                     	;# 
  7623     0091                     	;# 
  7624     0092                     	;# 
  7625     0092                     	;# 
  7626     0093                     	;# 
  7627     0094                     	;# 
  7628     0094                     	;# 
  7629     0095                     	;# 
  7630     0096                     	;# 
  7631     0096                     	;# 
  7632     0097                     	;# 
  7633     0098                     	;# 
  7634     0099                     	;# 
  7635     009A                     	;# 
  7636     009B                     	;# 
  7637     009B                     	;# 
  7638     009C                     	;# 
  7639     009D                     	;# 
  7640     009D                     	;# 
  7641     009E                     	;# 
  7642     009F                     	;# 
  7643     010C                     	;# 
  7644     010C                     	;# 
  7645     010D                     	;# 
  7646     010E                     	;# 
  7647     010F                     	;# 
  7648     010F                     	;# 
  7649     0110                     	;# 
  7650     0111                     	;# 
  7651     0112                     	;# 
  7652     0113                     	;# 
  7653     0114                     	;# 
  7654     0115                     	;# 
  7655     0116                     	;# 
  7656     0117                     	;# 
  7657     0118                     	;# 
  7658     0119                     	;# 
  7659     0119                     	;# 
  7660     0119                     	;# 
  7661     011A                     	;# 
  7662     011A                     	;# 
  7663     011A                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011B                     	;# 
  7668     011B                     	;# 
  7669     011C                     	;# 
  7670     011C                     	;# 
  7671     011C                     	;# 
  7672     011D                     	;# 
  7673     011D                     	;# 
  7674     011D                     	;# 
  7675     011E                     	;# 
  7676     011E                     	;# 
  7677     011E                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     011F                     	;# 
  7682     011F                     	;# 
  7683     018C                     	;# 
  7684     018D                     	;# 
  7685     018E                     	;# 
  7686     018F                     	;# 
  7687     0190                     	;# 
  7688     0191                     	;# 
  7689     0192                     	;# 
  7690     0196                     	;# 
  7691     0197                     	;# 
  7692     0198                     	;# 
  7693     0199                     	;# 
  7694     019A                     	;# 
  7695     019B                     	;# 
  7696     019C                     	;# 
  7697     020C                     	;# 
  7698     020D                     	;# 
  7699     020E                     	;# 
  7700     020E                     	;# 
  7701     020F                     	;# 
  7702     020F                     	;# 
  7703     0210                     	;# 
  7704     0210                     	;# 
  7705     0211                     	;# 
  7706     0211                     	;# 
  7707     0212                     	;# 
  7708     0213                     	;# 
  7709     0214                     	;# 
  7710     0214                     	;# 
  7711     0215                     	;# 
  7712     0215                     	;# 
  7713     0216                     	;# 
  7714     0216                     	;# 
  7715     0217                     	;# 
  7716     0217                     	;# 
  7717     0218                     	;# 
  7718     0219                     	;# 
  7719     021A                     	;# 
  7720     021A                     	;# 
  7721     021B                     	;# 
  7722     021B                     	;# 
  7723     021C                     	;# 
  7724     021C                     	;# 
  7725     021D                     	;# 
  7726     021D                     	;# 
  7727     021E                     	;# 
  7728     021F                     	;# 
  7729     028C                     	;# 
  7730     028C                     	;# 
  7731     028D                     	;# 
  7732     028D                     	;# 
  7733     028E                     	;# 
  7734     028F                     	;# 
  7735     0290                     	;# 
  7736     0291                     	;# 
  7737     0292                     	;# 
  7738     0292                     	;# 
  7739     0293                     	;# 
  7740     0293                     	;# 
  7741     0294                     	;# 
  7742     0295                     	;# 
  7743     0296                     	;# 
  7744     0297                     	;# 
  7745     0298                     	;# 
  7746     0298                     	;# 
  7747     0299                     	;# 
  7748     0299                     	;# 
  7749     029A                     	;# 
  7750     029B                     	;# 
  7751     029C                     	;# 
  7752     029D                     	;# 
  7753     029F                     	;# 
  7754     030C                     	;# 
  7755     030C                     	;# 
  7756     030D                     	;# 
  7757     030E                     	;# 
  7758     030F                     	;# 
  7759     0310                     	;# 
  7760     0310                     	;# 
  7761     0311                     	;# 
  7762     0312                     	;# 
  7763     0313                     	;# 
  7764     0314                     	;# 
  7765     0314                     	;# 
  7766     0315                     	;# 
  7767     0316                     	;# 
  7768     0317                     	;# 
  7769     0318                     	;# 
  7770     0318                     	;# 
  7771     0319                     	;# 
  7772     031A                     	;# 
  7773     031B                     	;# 
  7774     031C                     	;# 
  7775     031C                     	;# 
  7776     031D                     	;# 
  7777     031E                     	;# 
  7778     031F                     	;# 
  7779     038C                     	;# 
  7780     038C                     	;# 
  7781     038D                     	;# 
  7782     038E                     	;# 
  7783     0390                     	;# 
  7784     0390                     	;# 
  7785     0391                     	;# 
  7786     0392                     	;# 
  7787     048C                     	;# 
  7788     048C                     	;# 
  7789     048D                     	;# 
  7790     048E                     	;# 
  7791     048F                     	;# 
  7792     048F                     	;# 
  7793     0490                     	;# 
  7794     0491                     	;# 
  7795     0492                     	;# 
  7796     0492                     	;# 
  7797     0493                     	;# 
  7798     0494                     	;# 
  7799     0495                     	;# 
  7800     0495                     	;# 
  7801     0496                     	;# 
  7802     0497                     	;# 
  7803     0498                     	;# 
  7804     0499                     	;# 
  7805     049A                     	;# 
  7806     049B                     	;# 
  7807     049C                     	;# 
  7808     049D                     	;# 
  7809     050C                     	;# 
  7810     050C                     	;# 
  7811     050D                     	;# 
  7812     050E                     	;# 
  7813     050F                     	;# 
  7814     050F                     	;# 
  7815     0510                     	;# 
  7816     0511                     	;# 
  7817     0512                     	;# 
  7818     0512                     	;# 
  7819     0513                     	;# 
  7820     0514                     	;# 
  7821     0515                     	;# 
  7822     0515                     	;# 
  7823     0516                     	;# 
  7824     0517                     	;# 
  7825     0518                     	;# 
  7826     0519                     	;# 
  7827     051A                     	;# 
  7828     051B                     	;# 
  7829     051C                     	;# 
  7830     051D                     	;# 
  7831     058C                     	;# 
  7832     058C                     	;# 
  7833     058D                     	;# 
  7834     058E                     	;# 
  7835     058F                     	;# 
  7836     058F                     	;# 
  7837     0590                     	;# 
  7838     0591                     	;# 
  7839     0592                     	;# 
  7840     0593                     	;# 
  7841     059C                     	;# 
  7842     059C                     	;# 
  7843     059D                     	;# 
  7844     059D                     	;# 
  7845     059E                     	;# 
  7846     059F                     	;# 
  7847     060C                     	;# 
  7848     060C                     	;# 
  7849     060D                     	;# 
  7850     060D                     	;# 
  7851     060E                     	;# 
  7852     060F                     	;# 
  7853     0610                     	;# 
  7854     0611                     	;# 
  7855     0612                     	;# 
  7856     0613                     	;# 
  7857     0614                     	;# 
  7858     0616                     	;# 
  7859     0616                     	;# 
  7860     0617                     	;# 
  7861     0617                     	;# 
  7862     0618                     	;# 
  7863     0619                     	;# 
  7864     061A                     	;# 
  7865     061B                     	;# 
  7866     061C                     	;# 
  7867     061D                     	;# 
  7868     061E                     	;# 
  7869     068C                     	;# 
  7870     068D                     	;# 
  7871     068E                     	;# 
  7872     068F                     	;# 
  7873     0690                     	;# 
  7874     0691                     	;# 
  7875     0692                     	;# 
  7876     0693                     	;# 
  7877     0694                     	;# 
  7878     070C                     	;# 
  7879     070D                     	;# 
  7880     070E                     	;# 
  7881     070F                     	;# 
  7882     0710                     	;# 
  7883     0711                     	;# 
  7884     0712                     	;# 
  7885     0713                     	;# 
  7886     0714                     	;# 
  7887     0716                     	;# 
  7888     0717                     	;# 
  7889     0718                     	;# 
  7890     0719                     	;# 
  7891     071A                     	;# 
  7892     071B                     	;# 
  7893     071C                     	;# 
  7894     071D                     	;# 
  7895     071E                     	;# 
  7896     0796                     	;# 
  7897     0797                     	;# 
  7898     0798                     	;# 
  7899     0799                     	;# 
  7900     079A                     	;# 
  7901     079B                     	;# 
  7902     079C                     	;# 
  7903     079D                     	;# 
  7904     080C                     	;# 
  7905     080D                     	;# 
  7906     080E                     	;# 
  7907     080F                     	;# 
  7908     0810                     	;# 
  7909     0811                     	;# 
  7910     0813                     	;# 
  7911     0814                     	;# 
  7912     081A                     	;# 
  7913     081A                     	;# 
  7914     081B                     	;# 
  7915     081C                     	;# 
  7916     081C                     	;# 
  7917     081D                     	;# 
  7918     081E                     	;# 
  7919     081F                     	;# 
  7920     088C                     	;# 
  7921     088D                     	;# 
  7922     088E                     	;# 
  7923     088F                     	;# 
  7924     0890                     	;# 
  7925     0891                     	;# 
  7926     0892                     	;# 
  7927     0893                     	;# 
  7928     0895                     	;# 
  7929     0896                     	;# 
  7930     0897                     	;# 
  7931     0898                     	;# 
  7932     0899                     	;# 
  7933     089A                     	;# 
  7934     089B                     	;# 
  7935     090C                     	;# 
  7936     090E                     	;# 
  7937     090F                     	;# 
  7938     091F                     	;# 
  7939     098F                     	;# 
  7940     098F                     	;# 
  7941     0990                     	;# 
  7942     0991                     	;# 
  7943     0992                     	;# 
  7944     0993                     	;# 
  7945     0994                     	;# 
  7946     0995                     	;# 
  7947     0996                     	;# 
  7948     0997                     	;# 
  7949     0A19                     	;# 
  7950     0A19                     	;# 
  7951     0A1A                     	;# 
  7952     0A1A                     	;# 
  7953     0A1B                     	;# 
  7954     0A1B                     	;# 
  7955     0A1B                     	;# 
  7956     0A1C                     	;# 
  7957     0A1C                     	;# 
  7958     0A1D                     	;# 
  7959     0A1D                     	;# 
  7960     0A1E                     	;# 
  7961     0A1E                     	;# 
  7962     0A1F                     	;# 
  7963     0A1F                     	;# 
  7964     0A1F                     	;# 
  7965     1E0F                     	;# 
  7966     1E10                     	;# 
  7967     1E11                     	;# 
  7968     1E12                     	;# 
  7969     1E13                     	;# 
  7970     1E14                     	;# 
  7971     1E15                     	;# 
  7972     1E16                     	;# 
  7973     1E17                     	;# 
  7974     1E18                     	;# 
  7975     1E19                     	;# 
  7976     1E1A                     	;# 
  7977     1E1B                     	;# 
  7978     1E1C                     	;# 
  7979     1E1D                     	;# 
  7980     1E1E                     	;# 
  7981     1E1F                     	;# 
  7982     1E20                     	;# 
  7983     1E21                     	;# 
  7984     1E22                     	;# 
  7985     1E23                     	;# 
  7986     1E24                     	;# 
  7987     1E25                     	;# 
  7988     1E26                     	;# 
  7989     1E27                     	;# 
  7990     1E28                     	;# 
  7991     1E29                     	;# 
  7992     1E2A                     	;# 
  7993     1E2B                     	;# 
  7994     1E2C                     	;# 
  7995     1E2D                     	;# 
  7996     1E2E                     	;# 
  7997     1E2F                     	;# 
  7998     1E30                     	;# 
  7999     1E31                     	;# 
  8000     1E32                     	;# 
  8001     1E33                     	;# 
  8002     1E34                     	;# 
  8003     1E35                     	;# 
  8004     1E36                     	;# 
  8005     1E37                     	;# 
  8006     1E8F                     	;# 
  8007     1E90                     	;# 
  8008     1E91                     	;# 
  8009     1E92                     	;# 
  8010     1E93                     	;# 
  8011     1E94                     	;# 
  8012     1E95                     	;# 
  8013     1E96                     	;# 
  8014     1E97                     	;# 
  8015     1E9C                     	;# 
  8016     1E9D                     	;# 
  8017     1E9E                     	;# 
  8018     1EA1                     	;# 
  8019     1EA2                     	;# 
  8020     1EA3                     	;# 
  8021     1EA4                     	;# 
  8022     1EA5                     	;# 
  8023     1EA9                     	;# 
  8024     1EAA                     	;# 
  8025     1EAB                     	;# 
  8026     1EAC                     	;# 
  8027     1EB1                     	;# 
  8028     1EB2                     	;# 
  8029     1EB3                     	;# 
  8030     1EB8                     	;# 
  8031     1EB9                     	;# 
  8032     1EBA                     	;# 
  8033     1EBB                     	;# 
  8034     1EBC                     	;# 
  8035     1EBD                     	;# 
  8036     1EBE                     	;# 
  8037     1EC3                     	;# 
  8038     1EC5                     	;# 
  8039     1EC6                     	;# 
  8040     1EC7                     	;# 
  8041     1EC8                     	;# 
  8042     1EC9                     	;# 
  8043     1ECA                     	;# 
  8044     1ECB                     	;# 
  8045     1ECC                     	;# 
  8046     1ECD                     	;# 
  8047     1ECE                     	;# 
  8048     1F10                     	;# 
  8049     1F11                     	;# 
  8050     1F12                     	;# 
  8051     1F13                     	;# 
  8052     1F14                     	;# 
  8053     1F15                     	;# 
  8054     1F16                     	;# 
  8055     1F17                     	;# 
  8056     1F18                     	;# 
  8057     1F19                     	;# 
  8058     1F1A                     	;# 
  8059     1F1B                     	;# 
  8060     1F1C                     	;# 
  8061     1F1D                     	;# 
  8062     1F1E                     	;# 
  8063     1F1F                     	;# 
  8064     1F20                     	;# 
  8065     1F21                     	;# 
  8066     1F22                     	;# 
  8067     1F23                     	;# 
  8068     1F24                     	;# 
  8069     1F25                     	;# 
  8070     1F26                     	;# 
  8071     1F27                     	;# 
  8072     1F38                     	;# 
  8073     1F39                     	;# 
  8074     1F3A                     	;# 
  8075     1F3B                     	;# 
  8076     1F3C                     	;# 
  8077     1F3D                     	;# 
  8078     1F3E                     	;# 
  8079     1F3F                     	;# 
  8080     1F43                     	;# 
  8081     1F44                     	;# 
  8082     1F45                     	;# 
  8083     1F46                     	;# 
  8084     1F47                     	;# 
  8085     1F48                     	;# 
  8086     1F49                     	;# 
  8087     1F4A                     	;# 
  8088     1F4E                     	;# 
  8089     1F4F                     	;# 
  8090     1F50                     	;# 
  8091     1F51                     	;# 
  8092     1F52                     	;# 
  8093     1F53                     	;# 
  8094     1F54                     	;# 
  8095     1F55                     	;# 
  8096     1F65                     	;# 
  8097     1F66                     	;# 
  8098     1F67                     	;# 
  8099     1F68                     	;# 
  8100     1F69                     	;# 
  8101     1F6A                     	;# 
  8102     1F6B                     	;# 
  8103     1FE4                     	;# 
  8104     1FE5                     	;# 
  8105     1FE6                     	;# 
  8106     1FE7                     	;# 
  8107     1FE8                     	;# 
  8108     1FE8                     	;# 
  8109     1FE9                     	;# 
  8110     1FEA                     	;# 
  8111     1FEB                     	;# 
  8112     1FED                     	;# 
  8113     1FEE                     	;# 
  8114     1FEF                     	;# 
  8115     0000                     	;# 
  8116     0001                     	;# 
  8117     0002                     	;# 
  8118     0003                     	;# 
  8119     0004                     	;# 
  8120     0005                     	;# 
  8121     0006                     	;# 
  8122     0007                     	;# 
  8123     0008                     	;# 
  8124     0009                     	;# 
  8125     000A                     	;# 
  8126     000B                     	;# 
  8127     000C                     	;# 
  8128     000D                     	;# 
  8129     000E                     	;# 
  8130     0010                     	;# 
  8131     0012                     	;# 
  8132     0013                     	;# 
  8133     0014                     	;# 
  8134     0016                     	;# 
  8135     0018                     	;# 
  8136     0019                     	;# 
  8137     001A                     	;# 
  8138     001C                     	;# 
  8139     008C                     	;# 
  8140     008C                     	;# 
  8141     008D                     	;# 
  8142     008E                     	;# 
  8143     008E                     	;# 
  8144     008F                     	;# 
  8145     0090                     	;# 
  8146     0090                     	;# 
  8147     0091                     	;# 
  8148     0092                     	;# 
  8149     0092                     	;# 
  8150     0093                     	;# 
  8151     0094                     	;# 
  8152     0094                     	;# 
  8153     0095                     	;# 
  8154     0096                     	;# 
  8155     0096                     	;# 
  8156     0097                     	;# 
  8157     0098                     	;# 
  8158     0099                     	;# 
  8159     009A                     	;# 
  8160     009B                     	;# 
  8161     009B                     	;# 
  8162     009C                     	;# 
  8163     009D                     	;# 
  8164     009D                     	;# 
  8165     009E                     	;# 
  8166     009F                     	;# 
  8167     010C                     	;# 
  8168     010C                     	;# 
  8169     010D                     	;# 
  8170     010E                     	;# 
  8171     010F                     	;# 
  8172     010F                     	;# 
  8173     0110                     	;# 
  8174     0111                     	;# 
  8175     0112                     	;# 
  8176     0113                     	;# 
  8177     0114                     	;# 
  8178     0115                     	;# 
  8179     0116                     	;# 
  8180     0117                     	;# 
  8181     0118                     	;# 
  8182     0119                     	;# 
  8183     0119                     	;# 
  8184     0119                     	;# 
  8185     011A                     	;# 
  8186     011A                     	;# 
  8187     011A                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011B                     	;# 
  8192     011B                     	;# 
  8193     011C                     	;# 
  8194     011C                     	;# 
  8195     011C                     	;# 
  8196     011D                     	;# 
  8197     011D                     	;# 
  8198     011D                     	;# 
  8199     011E                     	;# 
  8200     011E                     	;# 
  8201     011E                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     011F                     	;# 
  8206     011F                     	;# 
  8207     018C                     	;# 
  8208     018D                     	;# 
  8209     018E                     	;# 
  8210     018F                     	;# 
  8211     0190                     	;# 
  8212     0191                     	;# 
  8213     0192                     	;# 
  8214     0196                     	;# 
  8215     0197                     	;# 
  8216     0198                     	;# 
  8217     0199                     	;# 
  8218     019A                     	;# 
  8219     019B                     	;# 
  8220     019C                     	;# 
  8221     020C                     	;# 
  8222     020D                     	;# 
  8223     020E                     	;# 
  8224     020E                     	;# 
  8225     020F                     	;# 
  8226     020F                     	;# 
  8227     0210                     	;# 
  8228     0210                     	;# 
  8229     0211                     	;# 
  8230     0211                     	;# 
  8231     0212                     	;# 
  8232     0213                     	;# 
  8233     0214                     	;# 
  8234     0214                     	;# 
  8235     0215                     	;# 
  8236     0215                     	;# 
  8237     0216                     	;# 
  8238     0216                     	;# 
  8239     0217                     	;# 
  8240     0217                     	;# 
  8241     0218                     	;# 
  8242     0219                     	;# 
  8243     021A                     	;# 
  8244     021A                     	;# 
  8245     021B                     	;# 
  8246     021B                     	;# 
  8247     021C                     	;# 
  8248     021C                     	;# 
  8249     021D                     	;# 
  8250     021D                     	;# 
  8251     021E                     	;# 
  8252     021F                     	;# 
  8253     028C                     	;# 
  8254     028C                     	;# 
  8255     028D                     	;# 
  8256     028D                     	;# 
  8257     028E                     	;# 
  8258     028F                     	;# 
  8259     0290                     	;# 
  8260     0291                     	;# 
  8261     0292                     	;# 
  8262     0292                     	;# 
  8263     0293                     	;# 
  8264     0293                     	;# 
  8265     0294                     	;# 
  8266     0295                     	;# 
  8267     0296                     	;# 
  8268     0297                     	;# 
  8269     0298                     	;# 
  8270     0298                     	;# 
  8271     0299                     	;# 
  8272     0299                     	;# 
  8273     029A                     	;# 
  8274     029B                     	;# 
  8275     029C                     	;# 
  8276     029D                     	;# 
  8277     029F                     	;# 
  8278     030C                     	;# 
  8279     030C                     	;# 
  8280     030D                     	;# 
  8281     030E                     	;# 
  8282     030F                     	;# 
  8283     0310                     	;# 
  8284     0310                     	;# 
  8285     0311                     	;# 
  8286     0312                     	;# 
  8287     0313                     	;# 
  8288     0314                     	;# 
  8289     0314                     	;# 
  8290     0315                     	;# 
  8291     0316                     	;# 
  8292     0317                     	;# 
  8293     0318                     	;# 
  8294     0318                     	;# 
  8295     0319                     	;# 
  8296     031A                     	;# 
  8297     031B                     	;# 
  8298     031C                     	;# 
  8299     031C                     	;# 
  8300     031D                     	;# 
  8301     031E                     	;# 
  8302     031F                     	;# 
  8303     038C                     	;# 
  8304     038C                     	;# 
  8305     038D                     	;# 
  8306     038E                     	;# 
  8307     0390                     	;# 
  8308     0390                     	;# 
  8309     0391                     	;# 
  8310     0392                     	;# 
  8311     048C                     	;# 
  8312     048C                     	;# 
  8313     048D                     	;# 
  8314     048E                     	;# 
  8315     048F                     	;# 
  8316     048F                     	;# 
  8317     0490                     	;# 
  8318     0491                     	;# 
  8319     0492                     	;# 
  8320     0492                     	;# 
  8321     0493                     	;# 
  8322     0494                     	;# 
  8323     0495                     	;# 
  8324     0495                     	;# 
  8325     0496                     	;# 
  8326     0497                     	;# 
  8327     0498                     	;# 
  8328     0499                     	;# 
  8329     049A                     	;# 
  8330     049B                     	;# 
  8331     049C                     	;# 
  8332     049D                     	;# 
  8333     050C                     	;# 
  8334     050C                     	;# 
  8335     050D                     	;# 
  8336     050E                     	;# 
  8337     050F                     	;# 
  8338     050F                     	;# 
  8339     0510                     	;# 
  8340     0511                     	;# 
  8341     0512                     	;# 
  8342     0512                     	;# 
  8343     0513                     	;# 
  8344     0514                     	;# 
  8345     0515                     	;# 
  8346     0515                     	;# 
  8347     0516                     	;# 
  8348     0517                     	;# 
  8349     0518                     	;# 
  8350     0519                     	;# 
  8351     051A                     	;# 
  8352     051B                     	;# 
  8353     051C                     	;# 
  8354     051D                     	;# 
  8355     058C                     	;# 
  8356     058C                     	;# 
  8357     058D                     	;# 
  8358     058E                     	;# 
  8359     058F                     	;# 
  8360     058F                     	;# 
  8361     0590                     	;# 
  8362     0591                     	;# 
  8363     0592                     	;# 
  8364     0593                     	;# 
  8365     059C                     	;# 
  8366     059C                     	;# 
  8367     059D                     	;# 
  8368     059D                     	;# 
  8369     059E                     	;# 
  8370     059F                     	;# 
  8371     060C                     	;# 
  8372     060C                     	;# 
  8373     060D                     	;# 
  8374     060D                     	;# 
  8375     060E                     	;# 
  8376     060F                     	;# 
  8377     0610                     	;# 
  8378     0611                     	;# 
  8379     0612                     	;# 
  8380     0613                     	;# 
  8381     0614                     	;# 
  8382     0616                     	;# 
  8383     0616                     	;# 
  8384     0617                     	;# 
  8385     0617                     	;# 
  8386     0618                     	;# 
  8387     0619                     	;# 
  8388     061A                     	;# 
  8389     061B                     	;# 
  8390     061C                     	;# 
  8391     061D                     	;# 
  8392     061E                     	;# 
  8393     068C                     	;# 
  8394     068D                     	;# 
  8395     068E                     	;# 
  8396     068F                     	;# 
  8397     0690                     	;# 
  8398     0691                     	;# 
  8399     0692                     	;# 
  8400     0693                     	;# 
  8401     0694                     	;# 
  8402     070C                     	;# 
  8403     070D                     	;# 
  8404     070E                     	;# 
  8405     070F                     	;# 
  8406     0710                     	;# 
  8407     0711                     	;# 
  8408     0712                     	;# 
  8409     0713                     	;# 
  8410     0714                     	;# 
  8411     0716                     	;# 
  8412     0717                     	;# 
  8413     0718                     	;# 
  8414     0719                     	;# 
  8415     071A                     	;# 
  8416     071B                     	;# 
  8417     071C                     	;# 
  8418     071D                     	;# 
  8419     071E                     	;# 
  8420     0796                     	;# 
  8421     0797                     	;# 
  8422     0798                     	;# 
  8423     0799                     	;# 
  8424     079A                     	;# 
  8425     079B                     	;# 
  8426     079C                     	;# 
  8427     079D                     	;# 
  8428     080C                     	;# 
  8429     080D                     	;# 
  8430     080E                     	;# 
  8431     080F                     	;# 
  8432     0810                     	;# 
  8433     0811                     	;# 
  8434     0813                     	;# 
  8435     0814                     	;# 
  8436     081A                     	;# 
  8437     081A                     	;# 
  8438     081B                     	;# 
  8439     081C                     	;# 
  8440     081C                     	;# 
  8441     081D                     	;# 
  8442     081E                     	;# 
  8443     081F                     	;# 
  8444     088C                     	;# 
  8445     088D                     	;# 
  8446     088E                     	;# 
  8447     088F                     	;# 
  8448     0890                     	;# 
  8449     0891                     	;# 
  8450     0892                     	;# 
  8451     0893                     	;# 
  8452     0895                     	;# 
  8453     0896                     	;# 
  8454     0897                     	;# 
  8455     0898                     	;# 
  8456     0899                     	;# 
  8457     089A                     	;# 
  8458     089B                     	;# 
  8459     090C                     	;# 
  8460     090E                     	;# 
  8461     090F                     	;# 
  8462     091F                     	;# 
  8463     098F                     	;# 
  8464     098F                     	;# 
  8465     0990                     	;# 
  8466     0991                     	;# 
  8467     0992                     	;# 
  8468     0993                     	;# 
  8469     0994                     	;# 
  8470     0995                     	;# 
  8471     0996                     	;# 
  8472     0997                     	;# 
  8473     0A19                     	;# 
  8474     0A19                     	;# 
  8475     0A1A                     	;# 
  8476     0A1A                     	;# 
  8477     0A1B                     	;# 
  8478     0A1B                     	;# 
  8479     0A1B                     	;# 
  8480     0A1C                     	;# 
  8481     0A1C                     	;# 
  8482     0A1D                     	;# 
  8483     0A1D                     	;# 
  8484     0A1E                     	;# 
  8485     0A1E                     	;# 
  8486     0A1F                     	;# 
  8487     0A1F                     	;# 
  8488     0A1F                     	;# 
  8489     1E0F                     	;# 
  8490     1E10                     	;# 
  8491     1E11                     	;# 
  8492     1E12                     	;# 
  8493     1E13                     	;# 
  8494     1E14                     	;# 
  8495     1E15                     	;# 
  8496     1E16                     	;# 
  8497     1E17                     	;# 
  8498     1E18                     	;# 
  8499     1E19                     	;# 
  8500     1E1A                     	;# 
  8501     1E1B                     	;# 
  8502     1E1C                     	;# 
  8503     1E1D                     	;# 
  8504     1E1E                     	;# 
  8505     1E1F                     	;# 
  8506     1E20                     	;# 
  8507     1E21                     	;# 
  8508     1E22                     	;# 
  8509     1E23                     	;# 
  8510     1E24                     	;# 
  8511     1E25                     	;# 
  8512     1E26                     	;# 
  8513     1E27                     	;# 
  8514     1E28                     	;# 
  8515     1E29                     	;# 
  8516     1E2A                     	;# 
  8517     1E2B                     	;# 
  8518     1E2C                     	;# 
  8519     1E2D                     	;# 
  8520     1E2E                     	;# 
  8521     1E2F                     	;# 
  8522     1E30                     	;# 
  8523     1E31                     	;# 
  8524     1E32                     	;# 
  8525     1E33                     	;# 
  8526     1E34                     	;# 
  8527     1E35                     	;# 
  8528     1E36                     	;# 
  8529     1E37                     	;# 
  8530     1E8F                     	;# 
  8531     1E90                     	;# 
  8532     1E91                     	;# 
  8533     1E92                     	;# 
  8534     1E93                     	;# 
  8535     1E94                     	;# 
  8536     1E95                     	;# 
  8537     1E96                     	;# 
  8538     1E97                     	;# 
  8539     1E9C                     	;# 
  8540     1E9D                     	;# 
  8541     1E9E                     	;# 
  8542     1EA1                     	;# 
  8543     1EA2                     	;# 
  8544     1EA3                     	;# 
  8545     1EA4                     	;# 
  8546     1EA5                     	;# 
  8547     1EA9                     	;# 
  8548     1EAA                     	;# 
  8549     1EAB                     	;# 
  8550     1EAC                     	;# 
  8551     1EB1                     	;# 
  8552     1EB2                     	;# 
  8553     1EB3                     	;# 
  8554     1EB8                     	;# 
  8555     1EB9                     	;# 
  8556     1EBA                     	;# 
  8557     1EBB                     	;# 
  8558     1EBC                     	;# 
  8559     1EBD                     	;# 
  8560     1EBE                     	;# 
  8561     1EC3                     	;# 
  8562     1EC5                     	;# 
  8563     1EC6                     	;# 
  8564     1EC7                     	;# 
  8565     1EC8                     	;# 
  8566     1EC9                     	;# 
  8567     1ECA                     	;# 
  8568     1ECB                     	;# 
  8569     1ECC                     	;# 
  8570     1ECD                     	;# 
  8571     1ECE                     	;# 
  8572     1F10                     	;# 
  8573     1F11                     	;# 
  8574     1F12                     	;# 
  8575     1F13                     	;# 
  8576     1F14                     	;# 
  8577     1F15                     	;# 
  8578     1F16                     	;# 
  8579     1F17                     	;# 
  8580     1F18                     	;# 
  8581     1F19                     	;# 
  8582     1F1A                     	;# 
  8583     1F1B                     	;# 
  8584     1F1C                     	;# 
  8585     1F1D                     	;# 
  8586     1F1E                     	;# 
  8587     1F1F                     	;# 
  8588     1F20                     	;# 
  8589     1F21                     	;# 
  8590     1F22                     	;# 
  8591     1F23                     	;# 
  8592     1F24                     	;# 
  8593     1F25                     	;# 
  8594     1F26                     	;# 
  8595     1F27                     	;# 
  8596     1F38                     	;# 
  8597     1F39                     	;# 
  8598     1F3A                     	;# 
  8599     1F3B                     	;# 
  8600     1F3C                     	;# 
  8601     1F3D                     	;# 
  8602     1F3E                     	;# 
  8603     1F3F                     	;# 
  8604     1F43                     	;# 
  8605     1F44                     	;# 
  8606     1F45                     	;# 
  8607     1F46                     	;# 
  8608     1F47                     	;# 
  8609     1F48                     	;# 
  8610     1F49                     	;# 
  8611     1F4A                     	;# 
  8612     1F4E                     	;# 
  8613     1F4F                     	;# 
  8614     1F50                     	;# 
  8615     1F51                     	;# 
  8616     1F52                     	;# 
  8617     1F53                     	;# 
  8618     1F54                     	;# 
  8619     1F55                     	;# 
  8620     1F65                     	;# 
  8621     1F66                     	;# 
  8622     1F67                     	;# 
  8623     1F68                     	;# 
  8624     1F69                     	;# 
  8625     1F6A                     	;# 
  8626     1F6B                     	;# 
  8627     1FE4                     	;# 
  8628     1FE5                     	;# 
  8629     1FE6                     	;# 
  8630     1FE7                     	;# 
  8631     1FE8                     	;# 
  8632     1FE8                     	;# 
  8633     1FE9                     	;# 
  8634     1FEA                     	;# 
  8635     1FEB                     	;# 
  8636     1FED                     	;# 
  8637     1FEE                     	;# 
  8638     1FEF                     	;# 
  8639     0000                     	;# 
  8640     0001                     	;# 
  8641     0002                     	;# 
  8642     0003                     	;# 
  8643     0004                     	;# 
  8644     0005                     	;# 
  8645     0006                     	;# 
  8646     0007                     	;# 
  8647     0008                     	;# 
  8648     0009                     	;# 
  8649     000A                     	;# 
  8650     000B                     	;# 
  8651     000C                     	;# 
  8652     000D                     	;# 
  8653     000E                     	;# 
  8654     0010                     	;# 
  8655     0012                     	;# 
  8656     0013                     	;# 
  8657     0014                     	;# 
  8658     0016                     	;# 
  8659     0018                     	;# 
  8660     0019                     	;# 
  8661     001A                     	;# 
  8662     001C                     	;# 
  8663     008C                     	;# 
  8664     008C                     	;# 
  8665     008D                     	;# 
  8666     008E                     	;# 
  8667     008E                     	;# 
  8668     008F                     	;# 
  8669     0090                     	;# 
  8670     0090                     	;# 
  8671     0091                     	;# 
  8672     0092                     	;# 
  8673     0092                     	;# 
  8674     0093                     	;# 
  8675     0094                     	;# 
  8676     0094                     	;# 
  8677     0095                     	;# 
  8678     0096                     	;# 
  8679     0096                     	;# 
  8680     0097                     	;# 
  8681     0098                     	;# 
  8682     0099                     	;# 
  8683     009A                     	;# 
  8684     009B                     	;# 
  8685     009B                     	;# 
  8686     009C                     	;# 
  8687     009D                     	;# 
  8688     009D                     	;# 
  8689     009E                     	;# 
  8690     009F                     	;# 
  8691     010C                     	;# 
  8692     010C                     	;# 
  8693     010D                     	;# 
  8694     010E                     	;# 
  8695     010F                     	;# 
  8696     010F                     	;# 
  8697     0110                     	;# 
  8698     0111                     	;# 
  8699     0112                     	;# 
  8700     0113                     	;# 
  8701     0114                     	;# 
  8702     0115                     	;# 
  8703     0116                     	;# 
  8704     0117                     	;# 
  8705     0118                     	;# 
  8706     0119                     	;# 
  8707     0119                     	;# 
  8708     0119                     	;# 
  8709     011A                     	;# 
  8710     011A                     	;# 
  8711     011A                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011B                     	;# 
  8716     011B                     	;# 
  8717     011C                     	;# 
  8718     011C                     	;# 
  8719     011C                     	;# 
  8720     011D                     	;# 
  8721     011D                     	;# 
  8722     011D                     	;# 
  8723     011E                     	;# 
  8724     011E                     	;# 
  8725     011E                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     011F                     	;# 
  8730     011F                     	;# 
  8731     018C                     	;# 
  8732     018D                     	;# 
  8733     018E                     	;# 
  8734     018F                     	;# 
  8735     0190                     	;# 
  8736     0191                     	;# 
  8737     0192                     	;# 
  8738     0196                     	;# 
  8739     0197                     	;# 
  8740     0198                     	;# 
  8741     0199                     	;# 
  8742     019A                     	;# 
  8743     019B                     	;# 
  8744     019C                     	;# 
  8745     020C                     	;# 
  8746     020D                     	;# 
  8747     020E                     	;# 
  8748     020E                     	;# 
  8749     020F                     	;# 
  8750     020F                     	;# 
  8751     0210                     	;# 
  8752     0210                     	;# 
  8753     0211                     	;# 
  8754     0211                     	;# 
  8755     0212                     	;# 
  8756     0213                     	;# 
  8757     0214                     	;# 
  8758     0214                     	;# 
  8759     0215                     	;# 
  8760     0215                     	;# 
  8761     0216                     	;# 
  8762     0216                     	;# 
  8763     0217                     	;# 
  8764     0217                     	;# 
  8765     0218                     	;# 
  8766     0219                     	;# 
  8767     021A                     	;# 
  8768     021A                     	;# 
  8769     021B                     	;# 
  8770     021B                     	;# 
  8771     021C                     	;# 
  8772     021C                     	;# 
  8773     021D                     	;# 
  8774     021D                     	;# 
  8775     021E                     	;# 
  8776     021F                     	;# 
  8777     028C                     	;# 
  8778     028C                     	;# 
  8779     028D                     	;# 
  8780     028D                     	;# 
  8781     028E                     	;# 
  8782     028F                     	;# 
  8783     0290                     	;# 
  8784     0291                     	;# 
  8785     0292                     	;# 
  8786     0292                     	;# 
  8787     0293                     	;# 
  8788     0293                     	;# 
  8789     0294                     	;# 
  8790     0295                     	;# 
  8791     0296                     	;# 
  8792     0297                     	;# 
  8793     0298                     	;# 
  8794     0298                     	;# 
  8795     0299                     	;# 
  8796     0299                     	;# 
  8797     029A                     	;# 
  8798     029B                     	;# 
  8799     029C                     	;# 
  8800     029D                     	;# 
  8801     029F                     	;# 
  8802     030C                     	;# 
  8803     030C                     	;# 
  8804     030D                     	;# 
  8805     030E                     	;# 
  8806     030F                     	;# 
  8807     0310                     	;# 
  8808     0310                     	;# 
  8809     0311                     	;# 
  8810     0312                     	;# 
  8811     0313                     	;# 
  8812     0314                     	;# 
  8813     0314                     	;# 
  8814     0315                     	;# 
  8815     0316                     	;# 
  8816     0317                     	;# 
  8817     0318                     	;# 
  8818     0318                     	;# 
  8819     0319                     	;# 
  8820     031A                     	;# 
  8821     031B                     	;# 
  8822     031C                     	;# 
  8823     031C                     	;# 
  8824     031D                     	;# 
  8825     031E                     	;# 
  8826     031F                     	;# 
  8827     038C                     	;# 
  8828     038C                     	;# 
  8829     038D                     	;# 
  8830     038E                     	;# 
  8831     0390                     	;# 
  8832     0390                     	;# 
  8833     0391                     	;# 
  8834     0392                     	;# 
  8835     048C                     	;# 
  8836     048C                     	;# 
  8837     048D                     	;# 
  8838     048E                     	;# 
  8839     048F                     	;# 
  8840     048F                     	;# 
  8841     0490                     	;# 
  8842     0491                     	;# 
  8843     0492                     	;# 
  8844     0492                     	;# 
  8845     0493                     	;# 
  8846     0494                     	;# 
  8847     0495                     	;# 
  8848     0495                     	;# 
  8849     0496                     	;# 
  8850     0497                     	;# 
  8851     0498                     	;# 
  8852     0499                     	;# 
  8853     049A                     	;# 
  8854     049B                     	;# 
  8855     049C                     	;# 
  8856     049D                     	;# 
  8857     050C                     	;# 
  8858     050C                     	;# 
  8859     050D                     	;# 
  8860     050E                     	;# 
  8861     050F                     	;# 
  8862     050F                     	;# 
  8863     0510                     	;# 
  8864     0511                     	;# 
  8865     0512                     	;# 
  8866     0512                     	;# 
  8867     0513                     	;# 
  8868     0514                     	;# 
  8869     0515                     	;# 
  8870     0515                     	;# 
  8871     0516                     	;# 
  8872     0517                     	;# 
  8873     0518                     	;# 
  8874     0519                     	;# 
  8875     051A                     	;# 
  8876     051B                     	;# 
  8877     051C                     	;# 
  8878     051D                     	;# 
  8879     058C                     	;# 
  8880     058C                     	;# 
  8881     058D                     	;# 
  8882     058E                     	;# 
  8883     058F                     	;# 
  8884     058F                     	;# 
  8885     0590                     	;# 
  8886     0591                     	;# 
  8887     0592                     	;# 
  8888     0593                     	;# 
  8889     059C                     	;# 
  8890     059C                     	;# 
  8891     059D                     	;# 
  8892     059D                     	;# 
  8893     059E                     	;# 
  8894     059F                     	;# 
  8895     060C                     	;# 
  8896     060C                     	;# 
  8897     060D                     	;# 
  8898     060D                     	;# 
  8899     060E                     	;# 
  8900     060F                     	;# 
  8901     0610                     	;# 
  8902     0611                     	;# 
  8903     0612                     	;# 
  8904     0613                     	;# 
  8905     0614                     	;# 
  8906     0616                     	;# 
  8907     0616                     	;# 
  8908     0617                     	;# 
  8909     0617                     	;# 
  8910     0618                     	;# 
  8911     0619                     	;# 
  8912     061A                     	;# 
  8913     061B                     	;# 
  8914     061C                     	;# 
  8915     061D                     	;# 
  8916     061E                     	;# 
  8917     068C                     	;# 
  8918     068D                     	;# 
  8919     068E                     	;# 
  8920     068F                     	;# 
  8921     0690                     	;# 
  8922     0691                     	;# 
  8923     0692                     	;# 
  8924     0693                     	;# 
  8925     0694                     	;# 
  8926     070C                     	;# 
  8927     070D                     	;# 
  8928     070E                     	;# 
  8929     070F                     	;# 
  8930     0710                     	;# 
  8931     0711                     	;# 
  8932     0712                     	;# 
  8933     0713                     	;# 
  8934     0714                     	;# 
  8935     0716                     	;# 
  8936     0717                     	;# 
  8937     0718                     	;# 
  8938     0719                     	;# 
  8939     071A                     	;# 
  8940     071B                     	;# 
  8941     071C                     	;# 
  8942     071D                     	;# 
  8943     071E                     	;# 
  8944     0796                     	;# 
  8945     0797                     	;# 
  8946     0798                     	;# 
  8947     0799                     	;# 
  8948     079A                     	;# 
  8949     079B                     	;# 
  8950     079C                     	;# 
  8951     079D                     	;# 
  8952     080C                     	;# 
  8953     080D                     	;# 
  8954     080E                     	;# 
  8955     080F                     	;# 
  8956     0810                     	;# 
  8957     0811                     	;# 
  8958     0813                     	;# 
  8959     0814                     	;# 
  8960     081A                     	;# 
  8961     081A                     	;# 
  8962     081B                     	;# 
  8963     081C                     	;# 
  8964     081C                     	;# 
  8965     081D                     	;# 
  8966     081E                     	;# 
  8967     081F                     	;# 
  8968     088C                     	;# 
  8969     088D                     	;# 
  8970     088E                     	;# 
  8971     088F                     	;# 
  8972     0890                     	;# 
  8973     0891                     	;# 
  8974     0892                     	;# 
  8975     0893                     	;# 
  8976     0895                     	;# 
  8977     0896                     	;# 
  8978     0897                     	;# 
  8979     0898                     	;# 
  8980     0899                     	;# 
  8981     089A                     	;# 
  8982     089B                     	;# 
  8983     090C                     	;# 
  8984     090E                     	;# 
  8985     090F                     	;# 
  8986     091F                     	;# 
  8987     098F                     	;# 
  8988     098F                     	;# 
  8989     0990                     	;# 
  8990     0991                     	;# 
  8991     0992                     	;# 
  8992     0993                     	;# 
  8993     0994                     	;# 
  8994     0995                     	;# 
  8995     0996                     	;# 
  8996     0997                     	;# 
  8997     0A19                     	;# 
  8998     0A19                     	;# 
  8999     0A1A                     	;# 
  9000     0A1A                     	;# 
  9001     0A1B                     	;# 
  9002     0A1B                     	;# 
  9003     0A1B                     	;# 
  9004     0A1C                     	;# 
  9005     0A1C                     	;# 
  9006     0A1D                     	;# 
  9007     0A1D                     	;# 
  9008     0A1E                     	;# 
  9009     0A1E                     	;# 
  9010     0A1F                     	;# 
  9011     0A1F                     	;# 
  9012     0A1F                     	;# 
  9013     1E0F                     	;# 
  9014     1E10                     	;# 
  9015     1E11                     	;# 
  9016     1E12                     	;# 
  9017     1E13                     	;# 
  9018     1E14                     	;# 
  9019     1E15                     	;# 
  9020     1E16                     	;# 
  9021     1E17                     	;# 
  9022     1E18                     	;# 
  9023     1E19                     	;# 
  9024     1E1A                     	;# 
  9025     1E1B                     	;# 
  9026     1E1C                     	;# 
  9027     1E1D                     	;# 
  9028     1E1E                     	;# 
  9029     1E1F                     	;# 
  9030     1E20                     	;# 
  9031     1E21                     	;# 
  9032     1E22                     	;# 
  9033     1E23                     	;# 
  9034     1E24                     	;# 
  9035     1E25                     	;# 
  9036     1E26                     	;# 
  9037     1E27                     	;# 
  9038     1E28                     	;# 
  9039     1E29                     	;# 
  9040     1E2A                     	;# 
  9041     1E2B                     	;# 
  9042     1E2C                     	;# 
  9043     1E2D                     	;# 
  9044     1E2E                     	;# 
  9045     1E2F                     	;# 
  9046     1E30                     	;# 
  9047     1E31                     	;# 
  9048     1E32                     	;# 
  9049     1E33                     	;# 
  9050     1E34                     	;# 
  9051     1E35                     	;# 
  9052     1E36                     	;# 
  9053     1E37                     	;# 
  9054     1E8F                     	;# 
  9055     1E90                     	;# 
  9056     1E91                     	;# 
  9057     1E92                     	;# 
  9058     1E93                     	;# 
  9059     1E94                     	;# 
  9060     1E95                     	;# 
  9061     1E96                     	;# 
  9062     1E97                     	;# 
  9063     1E9C                     	;# 
  9064     1E9D                     	;# 
  9065     1E9E                     	;# 
  9066     1EA1                     	;# 
  9067     1EA2                     	;# 
  9068     1EA3                     	;# 
  9069     1EA4                     	;# 
  9070     1EA5                     	;# 
  9071     1EA9                     	;# 
  9072     1EAA                     	;# 
  9073     1EAB                     	;# 
  9074     1EAC                     	;# 
  9075     1EB1                     	;# 
  9076     1EB2                     	;# 
  9077     1EB3                     	;# 
  9078     1EB8                     	;# 
  9079     1EB9                     	;# 
  9080     1EBA                     	;# 
  9081     1EBB                     	;# 
  9082     1EBC                     	;# 
  9083     1EBD                     	;# 
  9084     1EBE                     	;# 
  9085     1EC3                     	;# 
  9086     1EC5                     	;# 
  9087     1EC6                     	;# 
  9088     1EC7                     	;# 
  9089     1EC8                     	;# 
  9090     1EC9                     	;# 
  9091     1ECA                     	;# 
  9092     1ECB                     	;# 
  9093     1ECC                     	;# 
  9094     1ECD                     	;# 
  9095     1ECE                     	;# 
  9096     1F10                     	;# 
  9097     1F11                     	;# 
  9098     1F12                     	;# 
  9099     1F13                     	;# 
  9100     1F14                     	;# 
  9101     1F15                     	;# 
  9102     1F16                     	;# 
  9103     1F17                     	;# 
  9104     1F18                     	;# 
  9105     1F19                     	;# 
  9106     1F1A                     	;# 
  9107     1F1B                     	;# 
  9108     1F1C                     	;# 
  9109     1F1D                     	;# 
  9110     1F1E                     	;# 
  9111     1F1F                     	;# 
  9112     1F20                     	;# 
  9113     1F21                     	;# 
  9114     1F22                     	;# 
  9115     1F23                     	;# 
  9116     1F24                     	;# 
  9117     1F25                     	;# 
  9118     1F26                     	;# 
  9119     1F27                     	;# 
  9120     1F38                     	;# 
  9121     1F39                     	;# 
  9122     1F3A                     	;# 
  9123     1F3B                     	;# 
  9124     1F3C                     	;# 
  9125     1F3D                     	;# 
  9126     1F3E                     	;# 
  9127     1F3F                     	;# 
  9128     1F43                     	;# 
  9129     1F44                     	;# 
  9130     1F45                     	;# 
  9131     1F46                     	;# 
  9132     1F47                     	;# 
  9133     1F48                     	;# 
  9134     1F49                     	;# 
  9135     1F4A                     	;# 
  9136     1F4E                     	;# 
  9137     1F4F                     	;# 
  9138     1F50                     	;# 
  9139     1F51                     	;# 
  9140     1F52                     	;# 
  9141     1F53                     	;# 
  9142     1F54                     	;# 
  9143     1F55                     	;# 
  9144     1F65                     	;# 
  9145     1F66                     	;# 
  9146     1F67                     	;# 
  9147     1F68                     	;# 
  9148     1F69                     	;# 
  9149     1F6A                     	;# 
  9150     1F6B                     	;# 
  9151     1FE4                     	;# 
  9152     1FE5                     	;# 
  9153     1FE6                     	;# 
  9154     1FE7                     	;# 
  9155     1FE8                     	;# 
  9156     1FE8                     	;# 
  9157     1FE9                     	;# 
  9158     1FEA                     	;# 
  9159     1FEB                     	;# 
  9160     1FED                     	;# 
  9161     1FEE                     	;# 
  9162     1FEF                     	;# 
  9163     0000                     	;# 
  9164     0001                     	;# 
  9165     0002                     	;# 
  9166     0003                     	;# 
  9167     0004                     	;# 
  9168     0005                     	;# 
  9169     0006                     	;# 
  9170     0007                     	;# 
  9171     0008                     	;# 
  9172     0009                     	;# 
  9173     000A                     	;# 
  9174     000B                     	;# 
  9175     000C                     	;# 
  9176     000D                     	;# 
  9177     000E                     	;# 
  9178     0010                     	;# 
  9179     0012                     	;# 
  9180     0013                     	;# 
  9181     0014                     	;# 
  9182     0016                     	;# 
  9183     0018                     	;# 
  9184     0019                     	;# 
  9185     001A                     	;# 
  9186     001C                     	;# 
  9187     008C                     	;# 
  9188     008C                     	;# 
  9189     008D                     	;# 
  9190     008E                     	;# 
  9191     008E                     	;# 
  9192     008F                     	;# 
  9193     0090                     	;# 
  9194     0090                     	;# 
  9195     0091                     	;# 
  9196     0092                     	;# 
  9197     0092                     	;# 
  9198     0093                     	;# 
  9199     0094                     	;# 
  9200     0094                     	;# 
  9201     0095                     	;# 
  9202     0096                     	;# 
  9203     0096                     	;# 
  9204     0097                     	;# 
  9205     0098                     	;# 
  9206     0099                     	;# 
  9207     009A                     	;# 
  9208     009B                     	;# 
  9209     009B                     	;# 
  9210     009C                     	;# 
  9211     009D                     	;# 
  9212     009D                     	;# 
  9213     009E                     	;# 
  9214     009F                     	;# 
  9215     010C                     	;# 
  9216     010C                     	;# 
  9217     010D                     	;# 
  9218     010E                     	;# 
  9219     010F                     	;# 
  9220     010F                     	;# 
  9221     0110                     	;# 
  9222     0111                     	;# 
  9223     0112                     	;# 
  9224     0113                     	;# 
  9225     0114                     	;# 
  9226     0115                     	;# 
  9227     0116                     	;# 
  9228     0117                     	;# 
  9229     0118                     	;# 
  9230     0119                     	;# 
  9231     0119                     	;# 
  9232     0119                     	;# 
  9233     011A                     	;# 
  9234     011A                     	;# 
  9235     011A                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011B                     	;# 
  9240     011B                     	;# 
  9241     011C                     	;# 
  9242     011C                     	;# 
  9243     011C                     	;# 
  9244     011D                     	;# 
  9245     011D                     	;# 
  9246     011D                     	;# 
  9247     011E                     	;# 
  9248     011E                     	;# 
  9249     011E                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     011F                     	;# 
  9254     011F                     	;# 
  9255     018C                     	;# 
  9256     018D                     	;# 
  9257     018E                     	;# 
  9258     018F                     	;# 
  9259     0190                     	;# 
  9260     0191                     	;# 
  9261     0192                     	;# 
  9262     0196                     	;# 
  9263     0197                     	;# 
  9264     0198                     	;# 
  9265     0199                     	;# 
  9266     019A                     	;# 
  9267     019B                     	;# 
  9268     019C                     	;# 
  9269     020C                     	;# 
  9270     020D                     	;# 
  9271     020E                     	;# 
  9272     020E                     	;# 
  9273     020F                     	;# 
  9274     020F                     	;# 
  9275     0210                     	;# 
  9276     0210                     	;# 
  9277     0211                     	;# 
  9278     0211                     	;# 
  9279     0212                     	;# 
  9280     0213                     	;# 
  9281     0214                     	;# 
  9282     0214                     	;# 
  9283     0215                     	;# 
  9284     0215                     	;# 
  9285     0216                     	;# 
  9286     0216                     	;# 
  9287     0217                     	;# 
  9288     0217                     	;# 
  9289     0218                     	;# 
  9290     0219                     	;# 
  9291     021A                     	;# 
  9292     021A                     	;# 
  9293     021B                     	;# 
  9294     021B                     	;# 
  9295     021C                     	;# 
  9296     021C                     	;# 
  9297     021D                     	;# 
  9298     021D                     	;# 
  9299     021E                     	;# 
  9300     021F                     	;# 
  9301     028C                     	;# 
  9302     028C                     	;# 
  9303     028D                     	;# 
  9304     028D                     	;# 
  9305     028E                     	;# 
  9306     028F                     	;# 
  9307     0290                     	;# 
  9308     0291                     	;# 
  9309     0292                     	;# 
  9310     0292                     	;# 
  9311     0293                     	;# 
  9312     0293                     	;# 
  9313     0294                     	;# 
  9314     0295                     	;# 
  9315     0296                     	;# 
  9316     0297                     	;# 
  9317     0298                     	;# 
  9318     0298                     	;# 
  9319     0299                     	;# 
  9320     0299                     	;# 
  9321     029A                     	;# 
  9322     029B                     	;# 
  9323     029C                     	;# 
  9324     029D                     	;# 
  9325     029F                     	;# 
  9326     030C                     	;# 
  9327     030C                     	;# 
  9328     030D                     	;# 
  9329     030E                     	;# 
  9330     030F                     	;# 
  9331     0310                     	;# 
  9332     0310                     	;# 
  9333     0311                     	;# 
  9334     0312                     	;# 
  9335     0313                     	;# 
  9336     0314                     	;# 
  9337     0314                     	;# 
  9338     0315                     	;# 
  9339     0316                     	;# 
  9340     0317                     	;# 
  9341     0318                     	;# 
  9342     0318                     	;# 
  9343     0319                     	;# 
  9344     031A                     	;# 
  9345     031B                     	;# 
  9346     031C                     	;# 
  9347     031C                     	;# 
  9348     031D                     	;# 
  9349     031E                     	;# 
  9350     031F                     	;# 
  9351     038C                     	;# 
  9352     038C                     	;# 
  9353     038D                     	;# 
  9354     038E                     	;# 
  9355     0390                     	;# 
  9356     0390                     	;# 
  9357     0391                     	;# 
  9358     0392                     	;# 
  9359     048C                     	;# 
  9360     048C                     	;# 
  9361     048D                     	;# 
  9362     048E                     	;# 
  9363     048F                     	;# 
  9364     048F                     	;# 
  9365     0490                     	;# 
  9366     0491                     	;# 
  9367     0492                     	;# 
  9368     0492                     	;# 
  9369     0493                     	;# 
  9370     0494                     	;# 
  9371     0495                     	;# 
  9372     0495                     	;# 
  9373     0496                     	;# 
  9374     0497                     	;# 
  9375     0498                     	;# 
  9376     0499                     	;# 
  9377     049A                     	;# 
  9378     049B                     	;# 
  9379     049C                     	;# 
  9380     049D                     	;# 
  9381     050C                     	;# 
  9382     050C                     	;# 
  9383     050D                     	;# 
  9384     050E                     	;# 
  9385     050F                     	;# 
  9386     050F                     	;# 
  9387     0510                     	;# 
  9388     0511                     	;# 
  9389     0512                     	;# 
  9390     0512                     	;# 
  9391     0513                     	;# 
  9392     0514                     	;# 
  9393     0515                     	;# 
  9394     0515                     	;# 
  9395     0516                     	;# 
  9396     0517                     	;# 
  9397     0518                     	;# 
  9398     0519                     	;# 
  9399     051A                     	;# 
  9400     051B                     	;# 
  9401     051C                     	;# 
  9402     051D                     	;# 
  9403     058C                     	;# 
  9404     058C                     	;# 
  9405     058D                     	;# 
  9406     058E                     	;# 
  9407     058F                     	;# 
  9408     058F                     	;# 
  9409     0590                     	;# 
  9410     0591                     	;# 
  9411     0592                     	;# 
  9412     0593                     	;# 
  9413     059C                     	;# 
  9414     059C                     	;# 
  9415     059D                     	;# 
  9416     059D                     	;# 
  9417     059E                     	;# 
  9418     059F                     	;# 
  9419     060C                     	;# 
  9420     060C                     	;# 
  9421     060D                     	;# 
  9422     060D                     	;# 
  9423     060E                     	;# 
  9424     060F                     	;# 
  9425     0610                     	;# 
  9426     0611                     	;# 
  9427     0612                     	;# 
  9428     0613                     	;# 
  9429     0614                     	;# 
  9430     0616                     	;# 
  9431     0616                     	;# 
  9432     0617                     	;# 
  9433     0617                     	;# 
  9434     0618                     	;# 
  9435     0619                     	;# 
  9436     061A                     	;# 
  9437     061B                     	;# 
  9438     061C                     	;# 
  9439     061D                     	;# 
  9440     061E                     	;# 
  9441     068C                     	;# 
  9442     068D                     	;# 
  9443     068E                     	;# 
  9444     068F                     	;# 
  9445     0690                     	;# 
  9446     0691                     	;# 
  9447     0692                     	;# 
  9448     0693                     	;# 
  9449     0694                     	;# 
  9450     070C                     	;# 
  9451     070D                     	;# 
  9452     070E                     	;# 
  9453     070F                     	;# 
  9454     0710                     	;# 
  9455     0711                     	;# 
  9456     0712                     	;# 
  9457     0713                     	;# 
  9458     0714                     	;# 
  9459     0716                     	;# 
  9460     0717                     	;# 
  9461     0718                     	;# 
  9462     0719                     	;# 
  9463     071A                     	;# 
  9464     071B                     	;# 
  9465     071C                     	;# 
  9466     071D                     	;# 
  9467     071E                     	;# 
  9468     0796                     	;# 
  9469     0797                     	;# 
  9470     0798                     	;# 
  9471     0799                     	;# 
  9472     079A                     	;# 
  9473     079B                     	;# 
  9474     079C                     	;# 
  9475     079D                     	;# 
  9476     080C                     	;# 
  9477     080D                     	;# 
  9478     080E                     	;# 
  9479     080F                     	;# 
  9480     0810                     	;# 
  9481     0811                     	;# 
  9482     0813                     	;# 
  9483     0814                     	;# 
  9484     081A                     	;# 
  9485     081A                     	;# 
  9486     081B                     	;# 
  9487     081C                     	;# 
  9488     081C                     	;# 
  9489     081D                     	;# 
  9490     081E                     	;# 
  9491     081F                     	;# 
  9492     088C                     	;# 
  9493     088D                     	;# 
  9494     088E                     	;# 
  9495     088F                     	;# 
  9496     0890                     	;# 
  9497     0891                     	;# 
  9498     0892                     	;# 
  9499     0893                     	;# 
  9500     0895                     	;# 
  9501     0896                     	;# 
  9502     0897                     	;# 
  9503     0898                     	;# 
  9504     0899                     	;# 
  9505     089A                     	;# 
  9506     089B                     	;# 
  9507     090C                     	;# 
  9508     090E                     	;# 
  9509     090F                     	;# 
  9510     091F                     	;# 
  9511     098F                     	;# 
  9512     098F                     	;# 
  9513     0990                     	;# 
  9514     0991                     	;# 
  9515     0992                     	;# 
  9516     0993                     	;# 
  9517     0994                     	;# 
  9518     0995                     	;# 
  9519     0996                     	;# 
  9520     0997                     	;# 
  9521     0A19                     	;# 
  9522     0A19                     	;# 
  9523     0A1A                     	;# 
  9524     0A1A                     	;# 
  9525     0A1B                     	;# 
  9526     0A1B                     	;# 
  9527     0A1B                     	;# 
  9528     0A1C                     	;# 
  9529     0A1C                     	;# 
  9530     0A1D                     	;# 
  9531     0A1D                     	;# 
  9532     0A1E                     	;# 
  9533     0A1E                     	;# 
  9534     0A1F                     	;# 
  9535     0A1F                     	;# 
  9536     0A1F                     	;# 
  9537     1E0F                     	;# 
  9538     1E10                     	;# 
  9539     1E11                     	;# 
  9540     1E12                     	;# 
  9541     1E13                     	;# 
  9542     1E14                     	;# 
  9543     1E15                     	;# 
  9544     1E16                     	;# 
  9545     1E17                     	;# 
  9546     1E18                     	;# 
  9547     1E19                     	;# 
  9548     1E1A                     	;# 
  9549     1E1B                     	;# 
  9550     1E1C                     	;# 
  9551     1E1D                     	;# 
  9552     1E1E                     	;# 
  9553     1E1F                     	;# 
  9554     1E20                     	;# 
  9555     1E21                     	;# 
  9556     1E22                     	;# 
  9557     1E23                     	;# 
  9558     1E24                     	;# 
  9559     1E25                     	;# 
  9560     1E26                     	;# 
  9561     1E27                     	;# 
  9562     1E28                     	;# 
  9563     1E29                     	;# 
  9564     1E2A                     	;# 
  9565     1E2B                     	;# 
  9566     1E2C                     	;# 
  9567     1E2D                     	;# 
  9568     1E2E                     	;# 
  9569     1E2F                     	;# 
  9570     1E30                     	;# 
  9571     1E31                     	;# 
  9572     1E32                     	;# 
  9573     1E33                     	;# 
  9574     1E34                     	;# 
  9575     1E35                     	;# 
  9576     1E36                     	;# 
  9577     1E37                     	;# 
  9578     1E8F                     	;# 
  9579     1E90                     	;# 
  9580     1E91                     	;# 
  9581     1E92                     	;# 
  9582     1E93                     	;# 
  9583     1E94                     	;# 
  9584     1E95                     	;# 
  9585     1E96                     	;# 
  9586     1E97                     	;# 
  9587     1E9C                     	;# 
  9588     1E9D                     	;# 
  9589     1E9E                     	;# 
  9590     1EA1                     	;# 
  9591     1EA2                     	;# 
  9592     1EA3                     	;# 
  9593     1EA4                     	;# 
  9594     1EA5                     	;# 
  9595     1EA9                     	;# 
  9596     1EAA                     	;# 
  9597     1EAB                     	;# 
  9598     1EAC                     	;# 
  9599     1EB1                     	;# 
  9600     1EB2                     	;# 
  9601     1EB3                     	;# 
  9602     1EB8                     	;# 
  9603     1EB9                     	;# 
  9604     1EBA                     	;# 
  9605     1EBB                     	;# 
  9606     1EBC                     	;# 
  9607     1EBD                     	;# 
  9608     1EBE                     	;# 
  9609     1EC3                     	;# 
  9610     1EC5                     	;# 
  9611     1EC6                     	;# 
  9612     1EC7                     	;# 
  9613     1EC8                     	;# 
  9614     1EC9                     	;# 
  9615     1ECA                     	;# 
  9616     1ECB                     	;# 
  9617     1ECC                     	;# 
  9618     1ECD                     	;# 
  9619     1ECE                     	;# 
  9620     1F10                     	;# 
  9621     1F11                     	;# 
  9622     1F12                     	;# 
  9623     1F13                     	;# 
  9624     1F14                     	;# 
  9625     1F15                     	;# 
  9626     1F16                     	;# 
  9627     1F17                     	;# 
  9628     1F18                     	;# 
  9629     1F19                     	;# 
  9630     1F1A                     	;# 
  9631     1F1B                     	;# 
  9632     1F1C                     	;# 
  9633     1F1D                     	;# 
  9634     1F1E                     	;# 
  9635     1F1F                     	;# 
  9636     1F20                     	;# 
  9637     1F21                     	;# 
  9638     1F22                     	;# 
  9639     1F23                     	;# 
  9640     1F24                     	;# 
  9641     1F25                     	;# 
  9642     1F26                     	;# 
  9643     1F27                     	;# 
  9644     1F38                     	;# 
  9645     1F39                     	;# 
  9646     1F3A                     	;# 
  9647     1F3B                     	;# 
  9648     1F3C                     	;# 
  9649     1F3D                     	;# 
  9650     1F3E                     	;# 
  9651     1F3F                     	;# 
  9652     1F43                     	;# 
  9653     1F44                     	;# 
  9654     1F45                     	;# 
  9655     1F46                     	;# 
  9656     1F47                     	;# 
  9657     1F48                     	;# 
  9658     1F49                     	;# 
  9659     1F4A                     	;# 
  9660     1F4E                     	;# 
  9661     1F4F                     	;# 
  9662     1F50                     	;# 
  9663     1F51                     	;# 
  9664     1F52                     	;# 
  9665     1F53                     	;# 
  9666     1F54                     	;# 
  9667     1F55                     	;# 
  9668     1F65                     	;# 
  9669     1F66                     	;# 
  9670     1F67                     	;# 
  9671     1F68                     	;# 
  9672     1F69                     	;# 
  9673     1F6A                     	;# 
  9674     1F6B                     	;# 
  9675     1FE4                     	;# 
  9676     1FE5                     	;# 
  9677     1FE6                     	;# 
  9678     1FE7                     	;# 
  9679     1FE8                     	;# 
  9680     1FE8                     	;# 
  9681     1FE9                     	;# 
  9682     1FEA                     	;# 
  9683     1FEB                     	;# 
  9684     1FED                     	;# 
  9685     1FEE                     	;# 
  9686     1FEF                     	;# 
  9687     0000                     	;# 
  9688     0001                     	;# 
  9689     0002                     	;# 
  9690     0003                     	;# 
  9691     0004                     	;# 
  9692     0005                     	;# 
  9693     0006                     	;# 
  9694     0007                     	;# 
  9695     0008                     	;# 
  9696     0009                     	;# 
  9697     000A                     	;# 
  9698     000B                     	;# 
  9699     000C                     	;# 
  9700     000D                     	;# 
  9701     000E                     	;# 
  9702     0010                     	;# 
  9703     0012                     	;# 
  9704     0013                     	;# 
  9705     0014                     	;# 
  9706     0016                     	;# 
  9707     0018                     	;# 
  9708     0019                     	;# 
  9709     001A                     	;# 
  9710     001C                     	;# 
  9711     008C                     	;# 
  9712     008C                     	;# 
  9713     008D                     	;# 
  9714     008E                     	;# 
  9715     008E                     	;# 
  9716     008F                     	;# 
  9717     0090                     	;# 
  9718     0090                     	;# 
  9719     0091                     	;# 
  9720     0092                     	;# 
  9721     0092                     	;# 
  9722     0093                     	;# 
  9723     0094                     	;# 
  9724     0094                     	;# 
  9725     0095                     	;# 
  9726     0096                     	;# 
  9727     0096                     	;# 
  9728     0097                     	;# 
  9729     0098                     	;# 
  9730     0099                     	;# 
  9731     009A                     	;# 
  9732     009B                     	;# 
  9733     009B                     	;# 
  9734     009C                     	;# 
  9735     009D                     	;# 
  9736     009D                     	;# 
  9737     009E                     	;# 
  9738     009F                     	;# 
  9739     010C                     	;# 
  9740     010C                     	;# 
  9741     010D                     	;# 
  9742     010E                     	;# 
  9743     010F                     	;# 
  9744     010F                     	;# 
  9745     0110                     	;# 
  9746     0111                     	;# 
  9747     0112                     	;# 
  9748     0113                     	;# 
  9749     0114                     	;# 
  9750     0115                     	;# 
  9751     0116                     	;# 
  9752     0117                     	;# 
  9753     0118                     	;# 
  9754     0119                     	;# 
  9755     0119                     	;# 
  9756     0119                     	;# 
  9757     011A                     	;# 
  9758     011A                     	;# 
  9759     011A                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011B                     	;# 
  9764     011B                     	;# 
  9765     011C                     	;# 
  9766     011C                     	;# 
  9767     011C                     	;# 
  9768     011D                     	;# 
  9769     011D                     	;# 
  9770     011D                     	;# 
  9771     011E                     	;# 
  9772     011E                     	;# 
  9773     011E                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     011F                     	;# 
  9778     011F                     	;# 
  9779     018C                     	;# 
  9780     018D                     	;# 
  9781     018E                     	;# 
  9782     018F                     	;# 
  9783     0190                     	;# 
  9784     0191                     	;# 
  9785     0192                     	;# 
  9786     0196                     	;# 
  9787     0197                     	;# 
  9788     0198                     	;# 
  9789     0199                     	;# 
  9790     019A                     	;# 
  9791     019B                     	;# 
  9792     019C                     	;# 
  9793     020C                     	;# 
  9794     020D                     	;# 
  9795     020E                     	;# 
  9796     020E                     	;# 
  9797     020F                     	;# 
  9798     020F                     	;# 
  9799     0210                     	;# 
  9800     0210                     	;# 
  9801     0211                     	;# 
  9802     0211                     	;# 
  9803     0212                     	;# 
  9804     0213                     	;# 
  9805     0214                     	;# 
  9806     0214                     	;# 
  9807     0215                     	;# 
  9808     0215                     	;# 
  9809     0216                     	;# 
  9810     0216                     	;# 
  9811     0217                     	;# 
  9812     0217                     	;# 
  9813     0218                     	;# 
  9814     0219                     	;# 
  9815     021A                     	;# 
  9816     021A                     	;# 
  9817     021B                     	;# 
  9818     021B                     	;# 
  9819     021C                     	;# 
  9820     021C                     	;# 
  9821     021D                     	;# 
  9822     021D                     	;# 
  9823     021E                     	;# 
  9824     021F                     	;# 
  9825     028C                     	;# 
  9826     028C                     	;# 
  9827     028D                     	;# 
  9828     028D                     	;# 
  9829     028E                     	;# 
  9830     028F                     	;# 
  9831     0290                     	;# 
  9832     0291                     	;# 
  9833     0292                     	;# 
  9834     0292                     	;# 
  9835     0293                     	;# 
  9836     0293                     	;# 
  9837     0294                     	;# 
  9838     0295                     	;# 
  9839     0296                     	;# 
  9840     0297                     	;# 
  9841     0298                     	;# 
  9842     0298                     	;# 
  9843     0299                     	;# 
  9844     0299                     	;# 
  9845     029A                     	;# 
  9846     029B                     	;# 
  9847     029C                     	;# 
  9848     029D                     	;# 
  9849     029F                     	;# 
  9850     030C                     	;# 
  9851     030C                     	;# 
  9852     030D                     	;# 
  9853     030E                     	;# 
  9854     030F                     	;# 
  9855     0310                     	;# 
  9856     0310                     	;# 
  9857     0311                     	;# 
  9858     0312                     	;# 
  9859     0313                     	;# 
  9860     0314                     	;# 
  9861     0314                     	;# 
  9862     0315                     	;# 
  9863     0316                     	;# 
  9864     0317                     	;# 
  9865     0318                     	;# 
  9866     0318                     	;# 
  9867     0319                     	;# 
  9868     031A                     	;# 
  9869     031B                     	;# 
  9870     031C                     	;# 
  9871     031C                     	;# 
  9872     031D                     	;# 
  9873     031E                     	;# 
  9874     031F                     	;# 
  9875     038C                     	;# 
  9876     038C                     	;# 
  9877     038D                     	;# 
  9878     038E                     	;# 
  9879     0390                     	;# 
  9880     0390                     	;# 
  9881     0391                     	;# 
  9882     0392                     	;# 
  9883     048C                     	;# 
  9884     048C                     	;# 
  9885     048D                     	;# 
  9886     048E                     	;# 
  9887     048F                     	;# 
  9888     048F                     	;# 
  9889     0490                     	;# 
  9890     0491                     	;# 
  9891     0492                     	;# 
  9892     0492                     	;# 
  9893     0493                     	;# 
  9894     0494                     	;# 
  9895     0495                     	;# 
  9896     0495                     	;# 
  9897     0496                     	;# 
  9898     0497                     	;# 
  9899     0498                     	;# 
  9900     0499                     	;# 
  9901     049A                     	;# 
  9902     049B                     	;# 
  9903     049C                     	;# 
  9904     049D                     	;# 
  9905     050C                     	;# 
  9906     050C                     	;# 
  9907     050D                     	;# 
  9908     050E                     	;# 
  9909     050F                     	;# 
  9910     050F                     	;# 
  9911     0510                     	;# 
  9912     0511                     	;# 
  9913     0512                     	;# 
  9914     0512                     	;# 
  9915     0513                     	;# 
  9916     0514                     	;# 
  9917     0515                     	;# 
  9918     0515                     	;# 
  9919     0516                     	;# 
  9920     0517                     	;# 
  9921     0518                     	;# 
  9922     0519                     	;# 
  9923     051A                     	;# 
  9924     051B                     	;# 
  9925     051C                     	;# 
  9926     051D                     	;# 
  9927     058C                     	;# 
  9928     058C                     	;# 
  9929     058D                     	;# 
  9930     058E                     	;# 
  9931     058F                     	;# 
  9932     058F                     	;# 
  9933     0590                     	;# 
  9934     0591                     	;# 
  9935     0592                     	;# 
  9936     0593                     	;# 
  9937     059C                     	;# 
  9938     059C                     	;# 
  9939     059D                     	;# 
  9940     059D                     	;# 
  9941     059E                     	;# 
  9942     059F                     	;# 
  9943     060C                     	;# 
  9944     060C                     	;# 
  9945     060D                     	;# 
  9946     060D                     	;# 
  9947     060E                     	;# 
  9948     060F                     	;# 
  9949     0610                     	;# 
  9950     0611                     	;# 
  9951     0612                     	;# 
  9952     0613                     	;# 
  9953     0614                     	;# 
  9954     0616                     	;# 
  9955     0616                     	;# 
  9956     0617                     	;# 
  9957     0617                     	;# 
  9958     0618                     	;# 
  9959     0619                     	;# 
  9960     061A                     	;# 
  9961     061B                     	;# 
  9962     061C                     	;# 
  9963     061D                     	;# 
  9964     061E                     	;# 
  9965     068C                     	;# 
  9966     068D                     	;# 
  9967     068E                     	;# 
  9968     068F                     	;# 
  9969     0690                     	;# 
  9970     0691                     	;# 
  9971     0692                     	;# 
  9972     0693                     	;# 
  9973     0694                     	;# 
  9974     070C                     	;# 
  9975     070D                     	;# 
  9976     070E                     	;# 
  9977     070F                     	;# 
  9978     0710                     	;# 
  9979     0711                     	;# 
  9980     0712                     	;# 
  9981     0713                     	;# 
  9982     0714                     	;# 
  9983     0716                     	;# 
  9984     0717                     	;# 
  9985     0718                     	;# 
  9986     0719                     	;# 
  9987     071A                     	;# 
  9988     071B                     	;# 
  9989     071C                     	;# 
  9990     071D                     	;# 
  9991     071E                     	;# 
  9992     0796                     	;# 
  9993     0797                     	;# 
  9994     0798                     	;# 
  9995     0799                     	;# 
  9996     079A                     	;# 
  9997     079B                     	;# 
  9998     079C                     	;# 
  9999     079D                     	;# 
 10000     080C                     	;# 
 10001     080D                     	;# 
 10002     080E                     	;# 
 10003     080F                     	;# 
 10004     0810                     	;# 
 10005     0811                     	;# 
 10006     0813                     	;# 
 10007     0814                     	;# 
 10008     081A                     	;# 
 10009     081A                     	;# 
 10010     081B                     	;# 
 10011     081C                     	;# 
 10012     081C                     	;# 
 10013     081D                     	;# 
 10014     081E                     	;# 
 10015     081F                     	;# 
 10016     088C                     	;# 
 10017     088D                     	;# 
 10018     088E                     	;# 
 10019     088F                     	;# 
 10020     0890                     	;# 
 10021     0891                     	;# 
 10022     0892                     	;# 
 10023     0893                     	;# 
 10024     0895                     	;# 
 10025     0896                     	;# 
 10026     0897                     	;# 
 10027     0898                     	;# 
 10028     0899                     	;# 
 10029     089A                     	;# 
 10030     089B                     	;# 
 10031     090C                     	;# 
 10032     090E                     	;# 
 10033     090F                     	;# 
 10034     091F                     	;# 
 10035     098F                     	;# 
 10036     098F                     	;# 
 10037     0990                     	;# 
 10038     0991                     	;# 
 10039     0992                     	;# 
 10040     0993                     	;# 
 10041     0994                     	;# 
 10042     0995                     	;# 
 10043     0996                     	;# 
 10044     0997                     	;# 
 10045     0A19                     	;# 
 10046     0A19                     	;# 
 10047     0A1A                     	;# 
 10048     0A1A                     	;# 
 10049     0A1B                     	;# 
 10050     0A1B                     	;# 
 10051     0A1B                     	;# 
 10052     0A1C                     	;# 
 10053     0A1C                     	;# 
 10054     0A1D                     	;# 
 10055     0A1D                     	;# 
 10056     0A1E                     	;# 
 10057     0A1E                     	;# 
 10058     0A1F                     	;# 
 10059     0A1F                     	;# 
 10060     0A1F                     	;# 
 10061     1E0F                     	;# 
 10062     1E10                     	;# 
 10063     1E11                     	;# 
 10064     1E12                     	;# 
 10065     1E13                     	;# 
 10066     1E14                     	;# 
 10067     1E15                     	;# 
 10068     1E16                     	;# 
 10069     1E17                     	;# 
 10070     1E18                     	;# 
 10071     1E19                     	;# 
 10072     1E1A                     	;# 
 10073     1E1B                     	;# 
 10074     1E1C                     	;# 
 10075     1E1D                     	;# 
 10076     1E1E                     	;# 
 10077     1E1F                     	;# 
 10078     1E20                     	;# 
 10079     1E21                     	;# 
 10080     1E22                     	;# 
 10081     1E23                     	;# 
 10082     1E24                     	;# 
 10083     1E25                     	;# 
 10084     1E26                     	;# 
 10085     1E27                     	;# 
 10086     1E28                     	;# 
 10087     1E29                     	;# 
 10088     1E2A                     	;# 
 10089     1E2B                     	;# 
 10090     1E2C                     	;# 
 10091     1E2D                     	;# 
 10092     1E2E                     	;# 
 10093     1E2F                     	;# 
 10094     1E30                     	;# 
 10095     1E31                     	;# 
 10096     1E32                     	;# 
 10097     1E33                     	;# 
 10098     1E34                     	;# 
 10099     1E35                     	;# 
 10100     1E36                     	;# 
 10101     1E37                     	;# 
 10102     1E8F                     	;# 
 10103     1E90                     	;# 
 10104     1E91                     	;# 
 10105     1E92                     	;# 
 10106     1E93                     	;# 
 10107     1E94                     	;# 
 10108     1E95                     	;# 
 10109     1E96                     	;# 
 10110     1E97                     	;# 
 10111     1E9C                     	;# 
 10112     1E9D                     	;# 
 10113     1E9E                     	;# 
 10114     1EA1                     	;# 
 10115     1EA2                     	;# 
 10116     1EA3                     	;# 
 10117     1EA4                     	;# 
 10118     1EA5                     	;# 
 10119     1EA9                     	;# 
 10120     1EAA                     	;# 
 10121     1EAB                     	;# 
 10122     1EAC                     	;# 
 10123     1EB1                     	;# 
 10124     1EB2                     	;# 
 10125     1EB3                     	;# 
 10126     1EB8                     	;# 
 10127     1EB9                     	;# 
 10128     1EBA                     	;# 
 10129     1EBB                     	;# 
 10130     1EBC                     	;# 
 10131     1EBD                     	;# 
 10132     1EBE                     	;# 
 10133     1EC3                     	;# 
 10134     1EC5                     	;# 
 10135     1EC6                     	;# 
 10136     1EC7                     	;# 
 10137     1EC8                     	;# 
 10138     1EC9                     	;# 
 10139     1ECA                     	;# 
 10140     1ECB                     	;# 
 10141     1ECC                     	;# 
 10142     1ECD                     	;# 
 10143     1ECE                     	;# 
 10144     1F10                     	;# 
 10145     1F11                     	;# 
 10146     1F12                     	;# 
 10147     1F13                     	;# 
 10148     1F14                     	;# 
 10149     1F15                     	;# 
 10150     1F16                     	;# 
 10151     1F17                     	;# 
 10152     1F18                     	;# 
 10153     1F19                     	;# 
 10154     1F1A                     	;# 
 10155     1F1B                     	;# 
 10156     1F1C                     	;# 
 10157     1F1D                     	;# 
 10158     1F1E                     	;# 
 10159     1F1F                     	;# 
 10160     1F20                     	;# 
 10161     1F21                     	;# 
 10162     1F22                     	;# 
 10163     1F23                     	;# 
 10164     1F24                     	;# 
 10165     1F25                     	;# 
 10166     1F26                     	;# 
 10167     1F27                     	;# 
 10168     1F38                     	;# 
 10169     1F39                     	;# 
 10170     1F3A                     	;# 
 10171     1F3B                     	;# 
 10172     1F3C                     	;# 
 10173     1F3D                     	;# 
 10174     1F3E                     	;# 
 10175     1F3F                     	;# 
 10176     1F43                     	;# 
 10177     1F44                     	;# 
 10178     1F45                     	;# 
 10179     1F46                     	;# 
 10180     1F47                     	;# 
 10181     1F48                     	;# 
 10182     1F49                     	;# 
 10183     1F4A                     	;# 
 10184     1F4E                     	;# 
 10185     1F4F                     	;# 
 10186     1F50                     	;# 
 10187     1F51                     	;# 
 10188     1F52                     	;# 
 10189     1F53                     	;# 
 10190     1F54                     	;# 
 10191     1F55                     	;# 
 10192     1F65                     	;# 
 10193     1F66                     	;# 
 10194     1F67                     	;# 
 10195     1F68                     	;# 
 10196     1F69                     	;# 
 10197     1F6A                     	;# 
 10198     1F6B                     	;# 
 10199     1FE4                     	;# 
 10200     1FE5                     	;# 
 10201     1FE6                     	;# 
 10202     1FE7                     	;# 
 10203     1FE8                     	;# 
 10204     1FE8                     	;# 
 10205     1FE9                     	;# 
 10206     1FEA                     	;# 
 10207     1FEB                     	;# 
 10208     1FED                     	;# 
 10209     1FEE                     	;# 
 10210     1FEF                     	;# 
 10211                           
 10212 ;; Function _do_I2C_RESET is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_IDLE is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_RCEN is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_TX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_RX is unused but had its address taken
 10241     0000                     
 10242 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_ISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnStop is unused but had its address taken
 10249     0000                     
 10250 ;; Function _returnReset is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10255     0000                     
 10256                           	psect	idataBANK0
 10257     0002                     __pidataBANK0:
 10258                           
 10259                           ;initializer for RN487X_GetInputsValues@F12901
 10260     0002  3430               	retlw	48
 10261     0003  3430               	retlw	48
 10262                           
 10263                           	psect	idataBANK2
 10264     116E                     __pidataBANK2:
 10265                           
 10266                           ;initializer for __hex
 10267     116E  3430               	retlw	48
 10268     116F  3431               	retlw	49
 10269     1170  3432               	retlw	50
 10270     1171  3433               	retlw	51
 10271     1172  3434               	retlw	52
 10272     1173  3435               	retlw	53
 10273     1174  3436               	retlw	54
 10274     1175  3437               	retlw	55
 10275     1176  3438               	retlw	56
 10276     1177  3439               	retlw	57
 10277     1178  3441               	retlw	65
 10278     1179  3442               	retlw	66
 10279     117A  3443               	retlw	67
 10280     117B  3444               	retlw	68
 10281     117C  3445               	retlw	69
 10282     117D  3446               	retlw	70
 10283     117E  3400               	retlw	0
 10284                           
 10285                           	psect	stringtext1
 10286     1800                     __pstringtext1:
 10287     1800                     _uart:
 10288     1800  344B               	retlw	low _EUSART1_Read
 10289     1801  3415               	retlw	high _EUSART1_Read
 10290     1802  3424               	retlw	low _EUSART1_Write
 10291     1803  3415               	retlw	high _EUSART1_Write
 10292     1804  3400               	retlw	0
 10293     1805  3400               	retlw	0
 10294     1806  34A6               	retlw	low _EUSART1_is_rx_ready
 10295     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10296     1808  3436               	retlw	low _EUSART1_SetTxInterruptHandler
 10297     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10298     180A  3497               	retlw	low _EUSART1_Receive_ISR
 10299     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10300     180C  3430               	retlw	low _EUSART1_SetRxInterruptHandler
 10301     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10302     180E  34B6               	retlw	low _EUSART1_is_tx_done
 10303     180F  341E               	retlw	high _EUSART1_is_tx_done
 10304     1810  3424               	retlw	low _EUSART1_Transmit_ISR
 10305     1811  3414               	retlw	high _EUSART1_Transmit_ISR
 10306     1812  344E               	retlw	low _EUSART1_Initialize
 10307     1813  3409               	retlw	high _EUSART1_Initialize
 10308     1814  34D7               	retlw	low _EUSART2_Read
 10309     1815  3414               	retlw	high _EUSART2_Read
 10310     1816  34FD               	retlw	low _EUSART2_Write
 10311     1817  3414               	retlw	high _EUSART2_Write
 10312     1818  3400               	retlw	0
 10313     1819  3400               	retlw	0
 10314     181A  349D               	retlw	low _EUSART2_is_rx_ready
 10315     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10316     181C  3454               	retlw	low _EUSART2_SetTxInterruptHandler
 10317     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10318     181E  345E               	retlw	low _EUSART2_Receive_ISR
 10319     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10320     1820  344E               	retlw	low _EUSART2_SetRxInterruptHandler
 10321     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10322     1822  34B2               	retlw	low _EUSART2_is_tx_done
 10323     1823  341E               	retlw	high _EUSART2_is_tx_done
 10324     1824  3402               	retlw	low _EUSART2_Transmit_ISR
 10325     1825  3414               	retlw	high _EUSART2_Transmit_ISR
 10326     1826  348C               	retlw	low _EUSART2_Initialize
 10327     1827  3409               	retlw	high _EUSART2_Initialize
 10328     1828                     __end_of_uart:
 10329                           
 10330                           	psect	stringtext2
 10331     1828                     __pstringtext2:
 10332     1828                     _i2c1_fsmStateTable:
 10333     1828  34BF               	retlw	low _I2C1_DO_IDLE
 10334     1829  341E               	retlw	high _I2C1_DO_IDLE
 10335     182A  3494               	retlw	low _I2C1_DO_SEND_ADR_READ
 10336     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10337     182C  3473               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10338     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10339     182E  34ED               	retlw	low _I2C1_DO_TX
 10340     182F  340C               	retlw	high _I2C1_DO_TX
 10341     1830  3409               	retlw	low _I2C1_DO_RX
 10342     1831  340A               	retlw	high _I2C1_DO_RX
 10343     1832  346C               	retlw	low _I2C1_DO_RCEN
 10344     1833  341F               	retlw	high _I2C1_DO_RCEN
 10345     1834  34EE               	retlw	low _I2C1_DO_TX_EMPTY
 10346     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10347     1836  34C4               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10348     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10349     1838  34C9               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10350     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10351     183A  34CE               	retlw	low _I2C1_DO_SEND_RESTART
 10352     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10353     183C  34D3               	retlw	low _I2C1_DO_SEND_STOP
 10354     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10355     183E  34D8               	retlw	low _I2C1_DO_RX_ACK
 10356     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10357     1840  34DD               	retlw	low _I2C1_DO_RX_NACK_STOP
 10358     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10359     1842  34E2               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10360     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10361     1844  34E7               	retlw	low _I2C1_DO_RESET
 10362     1845  341E               	retlw	high _I2C1_DO_RESET
 10363     1846  3472               	retlw	low _I2C1_DO_ADDRESS_NACK
 10364     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10365     1848                     __end_of_i2c1_fsmStateTable:
 10366                           
 10367                           	psect	stringtext3
 10368     1848                     __pstringtext3:
 10369     1848                     _fsmStateTable:
 10370     1848  3400               	retlw	0
 10371     1849  3400               	retlw	0
 10372     184A  3400               	retlw	0
 10373     184B  3400               	retlw	0
 10374     184C  3400               	retlw	0
 10375     184D  3400               	retlw	0
 10376     184E  3400               	retlw	0
 10377     184F  3400               	retlw	0
 10378     1850  3400               	retlw	0
 10379     1851  3400               	retlw	0
 10380     1852  3400               	retlw	0
 10381     1853  3400               	retlw	0
 10382     1854  3400               	retlw	0
 10383     1855  3400               	retlw	0
 10384     1856  3400               	retlw	0
 10385     1857  3400               	retlw	0
 10386     1858  3400               	retlw	0
 10387     1859  3400               	retlw	0
 10388     185A  3400               	retlw	0
 10389     185B  3400               	retlw	0
 10390     185C  3400               	retlw	0
 10391     185D  3400               	retlw	0
 10392     185E  3400               	retlw	0
 10393     185F  3400               	retlw	0
 10394     1860  3400               	retlw	0
 10395     1861  3400               	retlw	0
 10396     1862  3400               	retlw	0
 10397     1863  3400               	retlw	0
 10398     1864  3400               	retlw	0
 10399     1865  3400               	retlw	0
 10400     1866  3400               	retlw	0
 10401     1867  3400               	retlw	0
 10402     1868                     __end_of_fsmStateTable:
 10403                           
 10404                           	psect	stringtext4
 10405     1868                     __pstringtext4:
 10406     1868                     _RN487X:
 10407     1868  3421               	retlw	low _RN487X_Write
 10408     1869  3410               	retlw	high _RN487X_Write
 10409     186A  34B8               	retlw	low _RN487X_Read@rn487x_interface$F1381
 10410     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1381
 10411     186C  34C2               	retlw	low _RN487X_is_tx_done
 10412     186D  341F               	retlw	high _RN487X_is_tx_done
 10413     186E  34CC               	retlw	low _RN487X_is_rx_ready
 10414     186F  341F               	retlw	high _RN487X_is_rx_ready
 10415     1870  3400               	retlw	low _RN487X_IndicateRx
 10416     1871  3410               	retlw	high _RN487X_IndicateRx
 10417     1872  340B               	retlw	low _RN487X_Reset
 10418     1873  3410               	retlw	high _RN487X_Reset
 10419     1874  342D               	retlw	low _RN487X_SetSystemMode
 10420     1875  3410               	retlw	high _RN487X_SetSystemMode
 10421     1876  347B               	retlw	low _RN487X_Delay
 10422     1877  341F               	retlw	high _RN487X_Delay
 10423     1878  348F               	retlw	low _RN487X_MessageHandler
 10424     1879  340A               	retlw	high _RN487X_MessageHandler
 10425     187A                     __end_of_RN487X:
 10426                           
 10427                           	psect	stringtext5
 10428     2010                     __pstringtext5:
 10429     2010                     _rn487x_driver_version:
 10430     2010  3400               	retlw	low (STR_1| (0+32768))
 10431     2011  34A0               	retlw	high (STR_1| (0+32768))
 10432     2012                     __end_of_rn487x_driver_version:
 10433                           
 10434                           	psect	stringtext6
 10435     2012                     __pstringtext6:
 10436     2012                     _protocol_version_number:
 10437     2012  3400               	retlw	low (STR_1| (0+32768))
 10438     2013  34A0               	retlw	high (STR_1| (0+32768))
 10439     2014                     __end_of_protocol_version_number:
 10440                           
 10441                           	psect	stringtext7
 10442     1886                     __pstringtext7:
 10443     1886                     RN487X_RebootCmd@reboot:
 10444     1886  3452               	retlw	82
 10445     1887  3465               	retlw	101
 10446     1888  3462               	retlw	98
 10447     1889  346F               	retlw	111
 10448     188A  346F               	retlw	111
 10449     188B  3474               	retlw	116
 10450     188C  3469               	retlw	105
 10451     188D  346E               	retlw	110
 10452     188E  3467               	retlw	103
 10453     188F  340D               	retlw	13
 10454     1890  340A               	retlw	10
 10455     1891                     __end_ofRN487X_RebootCmd@reboot:
 10456                           
 10457                           	psect	stringtext8
 10458     2006                     __pstringtext8:
 10459     2006                     RN487X_EnterDataMode@cmdPrompt:
 10460     2006  3445               	retlw	69
 10461     2007  344E               	retlw	78
 10462     2008  3444               	retlw	68
 10463     2009  340D               	retlw	13
 10464     200A  340A               	retlw	10
 10465     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10466                           
 10467                           	psect	stringtext9
 10468     200B                     __pstringtext9:
 10469     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10470     200B  3443               	retlw	67
 10471     200C  344D               	retlw	77
 10472     200D  3444               	retlw	68
 10473     200E  343E               	retlw	62
 10474     200F  3420               	retlw	32
 10475     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10476                           
 10477                           	psect	nvBANK1
 10478     00E9                     __pnvBANK1:
 10479     00E9                     _IOCAF6_InterruptHandler:
 10480     00E9                     	ds	2
 10481     00EB                     _EUSART2_RxDefaultInterruptHandler:
 10482     00EB                     	ds	2
 10483     00ED                     _EUSART2_TxDefaultInterruptHandler:
 10484     00ED                     	ds	2
 10485                           
 10486                           	psect	nvBANK2
 10487     015D                     __pnvBANK2:
 10488     015D                     _EUSART1_ErrorHandler:
 10489     015D                     	ds	2
 10490     015F                     _EUSART1_OverrunErrorHandler:
 10491     015F                     	ds	2
 10492     0161                     _EUSART1_FramingErrorHandler:
 10493     0161                     	ds	2
 10494     0163                     _EUSART1_RxDefaultInterruptHandler:
 10495     0163                     	ds	2
 10496     0165                     _EUSART1_TxDefaultInterruptHandler:
 10497     0165                     	ds	2
 10498     0167                     _EUSART2_ErrorHandler:
 10499     0167                     	ds	2
 10500     0169                     _EUSART2_OverrunErrorHandler:
 10501     0169                     	ds	2
 10502     016B                     _EUSART2_FramingErrorHandler:
 10503     016B                     	ds	2
 10504     0014                     _TRISC	set	20
 10505     0013                     _TRISB	set	19
 10506     0012                     _TRISA	set	18
 10507     0016                     _TRISE	set	22
 10508     001A                     _LATC	set	26
 10509     0019                     _LATB	set	25
 10510     0018                     _LATA	set	24
 10511     001C                     _LATE	set	28
 10512     0012                     _TRISAbits	set	18
 10513     001A                     _LATCbits	set	26
 10514     000B                     _INTCONbits	set	11
 10515     0018                     _LATAbits	set	24
 10516     000C                     _PORTAbits	set	12
 10517     0119                     _RC1REG	set	281
 10518     011D                     _RC1STAbits	set	285
 10519     011A                     _TX1REG	set	282
 10520     011E                     _TX1STAbits	set	286
 10521     011C                     _SP1BRGH	set	284
 10522     011B                     _SP1BRGL	set	283
 10523     011E                     _TX1STA	set	286
 10524     011D                     _RC1STA	set	285
 10525     011F                     _BAUD1CON	set	287
 10526     018F                     _SSP1STATbits	set	399
 10527     018E                     _SSP1MSK	set	398
 10528     018C                     _SSP1BUF	set	396
 10529     0191                     _SSP1CON2bits	set	401
 10530     018D                     _SSP1ADD	set	397
 10531     0191                     _SSP1CON2	set	401
 10532     0190                     _SSP1CON1	set	400
 10533     018F                     _SSP1STAT	set	399
 10534     0190                     _SSP1CON1bits	set	400
 10535     059E                     _T0CON0bits	set	1438
 10536     059E                     _T0CON0	set	1438
 10537     059C                     _TMR0L	set	1436
 10538     059D                     _TMR0H	set	1437
 10539     059F                     _T0CON1	set	1439
 10540     070F                     _PIR3bits	set	1807
 10541     070C                     _PIR0bits	set	1804
 10542     0716                     _PIE0bits	set	1814
 10543     0719                     _PIE3bits	set	1817
 10544     079D                     _PMD7	set	1949
 10545     079C                     _PMD6	set	1948
 10546     079B                     _PMD5	set	1947
 10547     079A                     _PMD4	set	1946
 10548     0799                     _PMD3	set	1945
 10549     0798                     _PMD2	set	1944
 10550     0797                     _PMD1	set	1943
 10551     0796                     _PMD0	set	1942
 10552     0892                     _OSCTUNE	set	2194
 10553     0890                     _OSCSTAT	set	2192
 10554     0893                     _OSCFRQ	set	2195
 10555     0891                     _OSCEN	set	2193
 10556     088F                     _OSCCON3	set	2191
 10557     088D                     _OSCCON1	set	2189
 10558     0A19                     _RC2REG	set	2585
 10559     0A1D                     _RC2STAbits	set	2589
 10560     0A1A                     _TX2REG	set	2586
 10561     0A1E                     _TX2STAbits	set	2590
 10562     0A1C                     _SP2BRGH	set	2588
 10563     0A1B                     _SP2BRGL	set	2587
 10564     0A1E                     _TX2STA	set	2590
 10565     0A1D                     _RC2STA	set	2589
 10566     0A1F                     _BAUD2CON	set	2591
 10567     1ECB                     _RX1DTPPS	set	7883
 10568     1EC6                     _SSP1DATPPS	set	7878
 10569     1ECD                     _RX2DTPPS	set	7885
 10570     1EC5                     _SSP1CLKPPS	set	7877
 10571     1F1C                     _RB4PPS	set	7964
 10572     1F24                     _RC4PPS	set	7972
 10573     1F1A                     _RB2PPS	set	7962
 10574     1F19                     _RB1PPS	set	7961
 10575     1F3D                     _IOCAPbits	set	7997
 10576     1F3E                     _IOCANbits	set	7998
 10577     1F3F                     _IOCAFbits	set	7999
 10578     1F52                     _INLVLC	set	8018
 10579     1F47                     _INLVLB	set	8007
 10580     1F3C                     _INLVLA	set	7996
 10581     1F51                     _SLRCONC	set	8017
 10582     1F46                     _SLRCONB	set	8006
 10583     1F3B                     _SLRCONA	set	7995
 10584     1F50                     _ODCONC	set	8016
 10585     1F45                     _ODCONB	set	8005
 10586     1F3A                     _ODCONA	set	7994
 10587     1F66                     _ODCONE	set	8038
 10588     1F4F                     _WPUC	set	8015
 10589     1F39                     _WPUA	set	7993
 10590     1F44                     _WPUB	set	8004
 10591     1F65                     _WPUE	set	8037
 10592     1F38                     _ANSELA	set	7992
 10593     1F43                     _ANSELB	set	8003
 10594     1F4E                     _ANSELC	set	8014
 10595                           
 10596                           	psect	stringtext10
 10597     187A                     __pstringtext10:
 10598     187A                     STR_4:
 10599     187A  3453               	retlw	83	;'S'
 10600     187B  3454               	retlw	84	;'T'
 10601     187C  3452               	retlw	82	;'R'
 10602     187D  3445               	retlw	69	;'E'
 10603     187E  3441               	retlw	65	;'A'
 10604     187F  344D               	retlw	77	;'M'
 10605     1880  345F               	retlw	95	;'_'
 10606     1881  344F               	retlw	79	;'O'
 10607     1882  3450               	retlw	80	;'P'
 10608     1883  3445               	retlw	69	;'E'
 10609     1884  344E               	retlw	78	;'N'
 10610     1885  3400               	retlw	0
 10611                           
 10612                           	psect	stringtext11
 10613     1891                     __pstringtext11:
 10614     1891                     STR_2:
 10615     1891  3444               	retlw	68	;'D'
 10616     1892  3449               	retlw	73	;'I'
 10617     1893  3453               	retlw	83	;'S'
 10618     1894  3443               	retlw	67	;'C'
 10619     1895  344F               	retlw	79	;'O'
 10620     1896  344E               	retlw	78	;'N'
 10621     1897  344E               	retlw	78	;'N'
 10622     1898  3445               	retlw	69	;'E'
 10623     1899  3443               	retlw	67	;'C'
 10624     189A  3454               	retlw	84	;'T'
 10625     189B  3400               	retlw	0
 10626                           
 10627                           	psect	stringtext12
 10628     2000                     __pstringtext12:
 10629     2000                     STR_1:
 10630     2000  3431               	retlw	49	;'1'
 10631     2001  342E               	retlw	46	;'.'
 10632     2002  3431               	retlw	49	;'1'
 10633     2003  342E               	retlw	46	;'.'
 10634     2004  3430               	retlw	48	;'0'
 10635     2005  3400               	retlw	0
 10636                           
 10637                           	psect	stringtext13
 10638     0000                     __pstringtext13:
 10639     2000                     
 10640                           	psect	cinit
 10641     0057                     start_initialization:	
 10642                           ; #config settings
 10643                           
 10644     0057                     __initialization:
 10645                           
 10646                           ; Initialize objects allocated to BANK0
 10647     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10648     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10649     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10650     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10651                           
 10652                           ; Initialize objects allocated to BANK2
 10653     005F  306E               	movlw	low __pidataBANK2
 10654     0060  0084               	movwf	4
 10655     0061  3091               	movlw	(high __pidataBANK2)| (0+128)
 10656     0062  0085               	movwf	5
 10657     0063  304C               	movlw	low __pdataBANK2
 10658     0064  0086               	movwf	6
 10659     0065  3001               	movlw	high __pdataBANK2
 10660     0066  0087               	movwf	7
 10661     0067  3011               	movlw	17
 10662     0068  319F  2766  3180   	fcall	init_ram
 10663                           
 10664                           ; Clear objects allocated to COMMON
 10665     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10666                           
 10667                           ; Clear objects allocated to BANK0
 10668     006C  304A               	movlw	low __pbssBANK0
 10669     006D  0084               	movwf	4
 10670     006E  3000               	movlw	high __pbssBANK0
 10671     006F  0085               	movwf	5
 10672     0070  3024               	movlw	36
 10673     0071  319F  2760  3180   	fcall	clear_ram0
 10674                           
 10675                           ; Clear objects allocated to BANK1
 10676     0074  30A0               	movlw	low __pbssBANK1
 10677     0075  0084               	movwf	4
 10678     0076  3000               	movlw	high __pbssBANK1
 10679     0077  0085               	movwf	5
 10680     0078  3049               	movlw	73
 10681     0079  319F  2760  3180   	fcall	clear_ram0
 10682                           
 10683                           ; Clear objects allocated to BANK2
 10684     007C  3020               	movlw	low __pbssBANK2
 10685     007D  0084               	movwf	4
 10686     007E  3001               	movlw	high __pbssBANK2
 10687     007F  0085               	movwf	5
 10688     0080  302C               	movlw	44
 10689     0081  319F  2760  3180   	fcall	clear_ram0
 10690                           
 10691                           ; Clear objects allocated to BANK3
 10692     0084  30A0               	movlw	low __pbssBANK3
 10693     0085  0084               	movwf	4
 10694     0086  3001               	movlw	high __pbssBANK3
 10695     0087  0085               	movwf	5
 10696     0088  3040               	movlw	64
 10697     0089  319F  2760  3180   	fcall	clear_ram0
 10698                           
 10699                           ; Clear objects allocated to BANK4
 10700     008C  3020               	movlw	low __pbssBANK4
 10701     008D  0084               	movwf	4
 10702     008E  3002               	movlw	high __pbssBANK4
 10703     008F  0085               	movwf	5
 10704     0090  3050               	movlw	80
 10705     0091  319F  2760  3180   	fcall	clear_ram0
 10706                           
 10707                           ; Clear objects allocated to BANK5
 10708     0094  30A0               	movlw	low __pbssBANK5
 10709     0095  0084               	movwf	4
 10710     0096  3002               	movlw	high __pbssBANK5
 10711     0097  0085               	movwf	5
 10712     0098  3050               	movlw	80
 10713     0099  319F  2760  3180   	fcall	clear_ram0
 10714                           
 10715                           ; Clear objects allocated to BANK6
 10716     009C  3020               	movlw	low __pbssBANK6
 10717     009D  0084               	movwf	4
 10718     009E  3003               	movlw	high __pbssBANK6
 10719     009F  0085               	movwf	5
 10720     00A0  3050               	movlw	80
 10721     00A1  319F  2760  3180   	fcall	clear_ram0
 10722     00A4                     end_of_initialization:	
 10723                           ;End of C runtime variable initialization code
 10724                           
 10725     00A4                     __end_of__initialization:
 10726     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10727     00A5  0140               	movlb	0
 10728     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10729                           
 10730                           	psect	bssCOMMON
 10731     007C                     __pbssCOMMON:
 10732     007C                     _eusart2RxHead:
 10733     007C                     	ds	1
 10734                           
 10735                           	psect	bssBANK0
 10736     004A                     __pbssBANK0:
 10737     004A                     _manufactureId:
 10738     004A                     	ds	2
 10739     004C                     _timer0ReloadVal16bit:
 10740     004C                     	ds	2
 10741     004E                     _pHead:
 10742     004E                     	ds	2
 10743     0050                     _asyncBuffer:
 10744     0050                     	ds	2
 10745     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10746     0052                     	ds	2
 10747     0054                     _bitMap:
 10748     0054                     	ds	2
 10749     0056                     _serialIndex:
 10750     0056                     	ds	1
 10751     0057                     _eusart1RxLastError:
 10752     0057                     	ds	1
 10753     0058                     _eusart1RxCount:
 10754     0058                     	ds	1
 10755     0059                     _eusart1RxTail:
 10756     0059                     	ds	1
 10757     005A                     _eusart1RxHead:
 10758     005A                     	ds	1
 10759     005B                     _eusart1TxBufferRemaining:
 10760     005B                     	ds	1
 10761     005C                     _eusart1TxTail:
 10762     005C                     	ds	1
 10763     005D                     _eusart1TxHead:
 10764     005D                     	ds	1
 10765     005E                     _eusart2RxLastError:
 10766     005E                     	ds	1
 10767     005F                     _eusart2RxCount:
 10768     005F                     	ds	1
 10769     0060                     _eusart2RxTail:
 10770     0060                     	ds	1
 10771     0061                     _eusart2TxBufferRemaining:
 10772     0061                     	ds	1
 10773     0062                     _eusart2TxTail:
 10774     0062                     	ds	1
 10775     0063                     _eusart2TxHead:
 10776     0063                     	ds	1
 10777     0064                     RN487X_FilterData@asyncBuffering:
 10778     0064                     	ds	1
 10779     0065                     _dataReady:
 10780     0065                     	ds	1
 10781     0066                     _peek:
 10782     0066                     	ds	1
 10783     0067                     _asyncBufferSize:
 10784     0067                     	ds	1
 10785     0068                     _connected:
 10786     0068                     	ds	1
 10787     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10788     0069                     	ds	1
 10789     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10790     006A                     	ds	1
 10791     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10792     006B                     	ds	1
 10793     006C                     _sequenceNumber:
 10794     006C                     	ds	1
 10795     006D                     __deviceAddress:
 10796     006D                     	ds	1
 10797                           
 10798                           	psect	dataBANK0
 10799     006E                     __pdataBANK0:
 10800     006E                     RN487X_GetInputsValues@F12901:
 10801     006E                     	ds	2
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	29
 10807     00BD                     _eusart1RxStatusBuffer:
 10808     00BD                     	ds	8
 10809     00C5                     _eusart1TxBuffer:
 10810     00C5                     	ds	8
 10811     00CD                     _eusart2RxStatusBuffer:
 10812     00CD                     	ds	8
 10813     00D5                     _eusart2RxBuffer:
 10814     00D5                     	ds	8
 10815     00DD                     _eusart2TxBuffer:
 10816     00DD                     	ds	8
 10817     00E5                     _i2c1_driver_i2cISR:
 10818     00E5                     	ds	2
 10819     00E7                     _i2c1_driver_busCollisionISR:
 10820     00E7                     	ds	2
 10821                           
 10822                           	psect	bssBANK2
 10823     0120                     __pbssBANK2:
 10824     0120                     _i2c_status:
 10825     0120                     	ds	36
 10826     0144                     _eusart1RxBuffer:
 10827     0144                     	ds	8
 10828                           
 10829                           	psect	dataBANK2
 10830     014C                     __pdataBANK2:
 10831     014C                     __hex:
 10832     014C                     	ds	17
 10833                           
 10834                           	psect	bssBANK3
 10835     01A0                     __pbssBANK3:
 10836     01A0                     _cmdBuf:
 10837     01A0                     	ds	64
 10838                           
 10839                           	psect	bssBANK4
 10840     0220                     __pbssBANK4:
 10841     0220                     _lightBlueSerial:
 10842     0220                     	ds	80
 10843                           
 10844                           	psect	bssBANK5
 10845     02A0                     __pbssBANK5:
 10846     02A0                     _statusBuffer:
 10847     02A0                     	ds	80
 10848                           
 10849                           	psect	bssBANK6
 10850     0320                     __pbssBANK6:
 10851     0320                     _statusBuffer@main$F3783:
 10852     0320                     	ds	80
 10853                           
 10854                           	psect	inittext
 10855     1F66                     init_ram:
 10856     1F66  00FE               	movwf	btemp
 10857     1F67                     initloop:
 10858     1F67  0012               	moviw fsr0++
 10859     1F68  001E               	movwi fsr1++
 10860     1F69  0BFE               	decfsz	btemp,f
 10861     1F6A  2F67               	goto	initloop
 10862     1F6B  3400               	retlw	0
 10863                           
 10864                           	psect	clrtext
 10865     1F60                     clear_ram0:	
 10866                           ;	Called with FSR0 containing the base address, and
 10867                           ;	WREG with the size to clear
 10868                           
 10869     1F60  0064               	clrwdt	;clear the watchdog before getting into this loop
 10870     1F61                     clrloop0:
 10871     1F61  0180               	clrf	0	;clear RAM location pointed to by FSR
 10872     1F62  3101               	addfsr 0,1
 10873     1F63  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10874     1F64  2F61               	goto	clrloop0	;have we reached the end yet?
 10875     1F65  3400               	retlw	0	;all done for this memory range, return
 10876                           
 10877                           	psect	cstackBANK1
 10878     00EF                     __pcstackBANK1:
 10879     00EF                     _main$5439:
 10880                           
 10881                           ; 1 bytes @ 0x0
 10882     00EF                     	ds	1
 10883                           
 10884                           	psect	cstackCOMMON
 10885     0070                     __pcstackCOMMON:
 10886     0070                     ?_BMA253_NewAccelDataRdyY:
 10887     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890     0070                     ?_readRegister:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905     0070                     ?_RN487X_EnterCmdMode:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908     0070                     ?_RN487X_EnterDataMode:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911     0070                     ?_EUSART1_Read:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914     0070                     ?_EUSART1_is_rx_ready:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917     0070                     ?_EUSART1_Receive_ISR:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920     0070                     ?_EUSART1_is_tx_done:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923     0070                     ?_EUSART1_Transmit_ISR:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926     0070                     ??_EUSART1_Transmit_ISR:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929     0070                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932     0070                     ?_EUSART2_Read:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935     0070                     ?_EUSART2_is_rx_ready:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938     0070                     ?_EUSART2_Receive_ISR:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941     0070                     ?_EUSART2_is_tx_done:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944     0070                     ?_EUSART2_Transmit_ISR:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947     0070                     ??_EUSART2_Transmit_ISR:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950     0070                     ?_EUSART2_Initialize:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953     0070                     ?_I2C1_Open:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956     0070                     ?_I2C1_MasterWrite:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959     0070                     ?_I2C1_Close:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962     0070                     ?_I2C1_MasterRead:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965     0070                     ?_RN487X_IsConnected:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968     0070                     ?_RN487X_Read:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971     0070                     ?_RN487X_DataReady:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974     0070                     ?_RN487X_Read@rn487x_interface$F1382:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977     0070                     ?_RN487X_is_tx_done:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0070                     ?_RN487X_is_rx_ready:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0070                     ?_RN487X_FilterData:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998     0070                     ?_EUSART2_DefaultErrorHandler:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001     0070                     ?_EUSART2_RxDataHandler:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004     0070                     ??_EUSART2_RxDataHandler:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019     0070                     ?_EUSART1_DefaultErrorHandler:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022     0070                     ?_EUSART1_RxDataHandler:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025     0070                     ??_EUSART1_RxDataHandler:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028     0070                     ?_PIN_MANAGER_IOC:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031     0070                     ??_PIN_MANAGER_IOC:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034     0070                     ?_PMD_Initialize:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037     0070                     ?_I2C1_Initialize:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040     0070                     ?_PIN_MANAGER_Initialize:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043     0070                     ?_OSCILLATOR_Initialize:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046     0070                     ?_TMR0_Initialize:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055     0070                     ?_IOCAF6_ISR:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058     0070                     ??_IOCAF6_ISR:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061     0070                     ?_I2C1_DO_IDLE:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070     0070                     ?_I2C1_DO_TX:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073     0070                     ?_I2C1_DO_RX:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076     0070                     ?_I2C1_DO_RCEN:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079     0070                     ?_I2C1_DO_TX_EMPTY:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088     0070                     ?_I2C1_DO_SEND_RESTART:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091     0070                     ?_I2C1_DO_SEND_STOP:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094     0070                     ?_I2C1_DO_RX_ACK:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103     0070                     ?_I2C1_DO_RESET:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109     0070                     ?_I2C1_MasterClearIrq:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112     0070                     ?_I2C1_MasterOpen:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115     0070                     ?_I2C1_MasterDisableIrq:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118     0070                     ?_I2C1_MasterClose:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121     0070                     ?_I2C1_MasterStart:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124     0070                     ?_I2C1_Poller:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127     0070                     ?_I2C1_MasterWaitForEvent:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130     0070                     ?_I2C1_MasterFsm:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133     0070                     ?_I2C1_MasterIsNack:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136     0070                     ?_I2C1_MasterSendTxData:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139     0070                     ?_I2C1_MasterGetRxData:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142     0070                     ?_I2C1_MasterSendAck:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145     0070                     ?_I2C1_MasterStartRx:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148     0070                     ?_I2C1_MasterSetIrq:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151     0070                     ?_I2C1_MasterEnableRestart:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154     0070                     ?_I2C1_MasterStop:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157     0070                     ?_I2C1_MasterSendNack:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160     0070                     ?_begin:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163     0070                     ?_isConnected:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166     0070                     ?_setMagneticChannel:	
 11167                           ; 1 bytes @ 0x0
 11168                           
 11169     0070                     ?_setTemperatureEn:	
 11170                           ; 1 bytes @ 0x0
 11171                           
 11172     0070                     ?_setOperatingMode:	
 11173                           ; 1 bytes @ 0x0
 11174                           
 11175     0070                     ?_setXYAxisRange:	
 11176                           ; 1 bytes @ 0x0
 11177                           
 11178     0070                     ?_setZAxisRange:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181     0070                     ?_getError:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184     0070                     ?_getLowPower:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187     0070                     ?_getOperatingMode:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190     0070                     ?_getMagneticChannel:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193     0070                     ?_getTemperatureEN:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196     0070                     ?_getAngleEn:	
 11197                           ; 1 bytes @ 0x0
 11198                           
 11199     0070                     ?_BMA253_GetAccelDataY:	
 11200                           ; 1 bytes @ 0x0
 11201                           
 11202     0070                     ?_BMA253_GetAccelDataZ:	
 11203                           ; 1 bytes @ 0x0
 11204                           
 11205     0070                     ?_BMA253_GetAccelDataXYZ:	
 11206                           ; 1 bytes @ 0x0
 11207                           
 11208     0070                     ?_LIGHTBLUE_Initialize:	
 11209                           ; 1 bytes @ 0x0
 11210                           
 11211     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11212                           ; 1 bytes @ 0x0
 11213                           
 11214     0070                     ?_LIGHTBLUE_AccelSensor:	
 11215                           ; 1 bytes @ 0x0
 11216                           
 11217     0070                     ?_LIGHTBLUE_PushButton:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220     0070                     ?_LIGHTBLUE_LedState:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226     0070                     ?_LIGHTBLUE_SendSerialData:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235     0070                     ?_rn487x_PrintMessageStart:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238     0070                     ?_rn487x_PrintMessageEnd:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244     0070                     ?_RN487X_Init:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247     0070                     ?_RN487X_ReadDefaultResponse:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250     0070                     ?_INTERRUPT_InterruptManager:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253     0070                     ?_SYSTEM_Initialize:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256     0070                     ?_TMR0_HasOverflowOccured:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259     0070                     ?_I2C1_MasterOperation:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262     0070                     ?_getDeviceStatus:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265     0070                     ?_main:	
 11266                           ; 1 bytes @ 0x0
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x0
 11270     0070                     	ds	1
 11271     0071                     ??_LIGHTBLUE_GetButtonValue:
 11272     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11273                           ; 1 bytes @ 0x1
 11274                           
 11275     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11276                           ; 1 bytes @ 0x1
 11277                           
 11278     0071                     ??_EUSART1_Read:	
 11279                           ; 1 bytes @ 0x1
 11280                           
 11281     0071                     ?_EUSART1_Write:	
 11282                           ; 1 bytes @ 0x1
 11283                           
 11284     0071                     ??_EUSART1_is_rx_ready:	
 11285                           ; 1 bytes @ 0x1
 11286                           
 11287     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11288                           ; 1 bytes @ 0x1
 11289                           
 11290     0071                     ??_EUSART1_Receive_ISR:	
 11291                           ; 1 bytes @ 0x1
 11292                           
 11293     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11294                           ; 1 bytes @ 0x1
 11295                           
 11296     0071                     ??_EUSART1_is_tx_done:	
 11297                           ; 1 bytes @ 0x1
 11298                           
 11299     0071                     ??_EUSART2_Read:	
 11300                           ; 1 bytes @ 0x1
 11301                           
 11302     0071                     ?_EUSART2_Write:	
 11303                           ; 1 bytes @ 0x1
 11304                           
 11305     0071                     ??_EUSART2_is_rx_ready:	
 11306                           ; 1 bytes @ 0x1
 11307                           
 11308     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11309                           ; 1 bytes @ 0x1
 11310                           
 11311     0071                     ??_EUSART2_Receive_ISR:	
 11312                           ; 1 bytes @ 0x1
 11313                           
 11314     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11315                           ; 1 bytes @ 0x1
 11316                           
 11317     0071                     ??_EUSART2_is_tx_done:	
 11318                           ; 1 bytes @ 0x1
 11319                           
 11320     0071                     ?_I2C1_SetBuffer:	
 11321                           ; 1 bytes @ 0x1
 11322                           
 11323     0071                     ??_I2C1_Open:	
 11324                           ; 1 bytes @ 0x1
 11325                           
 11326     0071                     ??_I2C1_Close:	
 11327                           ; 1 bytes @ 0x1
 11328                           
 11329     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11330                           ; 1 bytes @ 0x1
 11331                           
 11332     0071                     ??_RN487X_IsConnected:	
 11333                           ; 1 bytes @ 0x1
 11334                           
 11335     0071                     ??_RN487X_is_tx_done:	
 11336                           ; 1 bytes @ 0x1
 11337                           
 11338     0071                     ??_RN487X_is_rx_ready:	
 11339                           ; 1 bytes @ 0x1
 11340                           
 11341     0071                     ?_RN487X_IndicateRx:	
 11342                           ; 1 bytes @ 0x1
 11343                           
 11344     0071                     ?_RN487X_Reset:	
 11345                           ; 1 bytes @ 0x1
 11346                           
 11347     0071                     ?_RN487X_SetSystemMode:	
 11348                           ; 1 bytes @ 0x1
 11349                           
 11350     0071                     ?_DELAY_milliseconds:	
 11351                           ; 1 bytes @ 0x1
 11352                           
 11353     0071                     ?_strcpy:	
 11354                           ; 1 bytes @ 0x1
 11355                           
 11356     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11357                           ; 1 bytes @ 0x1
 11358                           
 11359     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11360                           ; 1 bytes @ 0x1
 11361                           
 11362     0071                     ?_EUSART2_SetErrorHandler:	
 11363                           ; 1 bytes @ 0x1
 11364                           
 11365     0071                     ??_EUSART2_DefaultErrorHandler:	
 11366                           ; 1 bytes @ 0x1
 11367                           
 11368     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11369                           ; 1 bytes @ 0x1
 11370                           
 11371     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11372                           ; 1 bytes @ 0x1
 11373                           
 11374     0071                     ?_EUSART1_SetErrorHandler:	
 11375                           ; 1 bytes @ 0x1
 11376                           
 11377     0071                     ??_EUSART1_DefaultErrorHandler:	
 11378                           ; 1 bytes @ 0x1
 11379                           
 11380     0071                     ??_PMD_Initialize:	
 11381                           ; 1 bytes @ 0x1
 11382                           
 11383     0071                     ??_I2C1_Initialize:	
 11384                           ; 1 bytes @ 0x1
 11385                           
 11386     0071                     ??_OSCILLATOR_Initialize:	
 11387                           ; 1 bytes @ 0x1
 11388                           
 11389     0071                     ??_TMR0_Initialize:	
 11390                           ; 1 bytes @ 0x1
 11391                           
 11392     0071                     ?_IOCAF6_SetInterruptHandler:	
 11393                           ; 1 bytes @ 0x1
 11394                           
 11395     0071                     ??_I2C1_DO_IDLE:	
 11396                           ; 1 bytes @ 0x1
 11397                           
 11398     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401     0071                     ??_I2C1_DO_RCEN:	
 11402                           ; 1 bytes @ 0x1
 11403                           
 11404     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11405                           ; 1 bytes @ 0x1
 11406                           
 11407     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11408                           ; 1 bytes @ 0x1
 11409                           
 11410     0071                     ??_I2C1_DO_SEND_RESTART:	
 11411                           ; 1 bytes @ 0x1
 11412                           
 11413     0071                     ??_I2C1_DO_SEND_STOP:	
 11414                           ; 1 bytes @ 0x1
 11415                           
 11416     0071                     ??_I2C1_DO_RX_ACK:	
 11417                           ; 1 bytes @ 0x1
 11418                           
 11419     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11420                           ; 1 bytes @ 0x1
 11421                           
 11422     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11423                           ; 1 bytes @ 0x1
 11424                           
 11425     0071                     ??_I2C1_DO_RESET:	
 11426                           ; 1 bytes @ 0x1
 11427                           
 11428     0071                     ??_I2C1_MasterClearIrq:	
 11429                           ; 1 bytes @ 0x1
 11430                           
 11431     0071                     ??_I2C1_MasterOpen:	
 11432                           ; 1 bytes @ 0x1
 11433                           
 11434     0071                     ??_I2C1_MasterDisableIrq:	
 11435                           ; 1 bytes @ 0x1
 11436                           
 11437     0071                     ??_I2C1_MasterClose:	
 11438                           ; 1 bytes @ 0x1
 11439                           
 11440     0071                     ??_I2C1_MasterStart:	
 11441                           ; 1 bytes @ 0x1
 11442                           
 11443     0071                     ?_I2C1_SetCallback:	
 11444                           ; 1 bytes @ 0x1
 11445                           
 11446     0071                     ??_I2C1_MasterWaitForEvent:	
 11447                           ; 1 bytes @ 0x1
 11448                           
 11449     0071                     ??_I2C1_MasterIsNack:	
 11450                           ; 1 bytes @ 0x1
 11451                           
 11452     0071                     ??_I2C1_MasterSendTxData:	
 11453                           ; 1 bytes @ 0x1
 11454                           
 11455     0071                     ??_I2C1_MasterGetRxData:	
 11456                           ; 1 bytes @ 0x1
 11457                           
 11458     0071                     ??_I2C1_MasterSendAck:	
 11459                           ; 1 bytes @ 0x1
 11460                           
 11461     0071                     ??_I2C1_MasterStartRx:	
 11462                           ; 1 bytes @ 0x1
 11463                           
 11464     0071                     ??_I2C1_MasterSetIrq:	
 11465                           ; 1 bytes @ 0x1
 11466                           
 11467     0071                     ??_I2C1_MasterEnableRestart:	
 11468                           ; 1 bytes @ 0x1
 11469                           
 11470     0071                     ??_I2C1_MasterStop:	
 11471                           ; 1 bytes @ 0x1
 11472                           
 11473     0071                     ??_I2C1_MasterSendNack:	
 11474                           ; 1 bytes @ 0x1
 11475                           
 11476     0071                     ?_bitWrite:	
 11477                           ; 1 bytes @ 0x1
 11478                           
 11479     0071                     ?_bitRead:	
 11480                           ; 1 bytes @ 0x1
 11481                           
 11482     0071                     ??_LIGHTBLUE_Initialize:	
 11483                           ; 1 bytes @ 0x1
 11484                           
 11485     0071                     ??_INTERRUPT_InterruptManager:	
 11486                           ; 1 bytes @ 0x1
 11487                           
 11488     0071                     ??_TMR0_HasOverflowOccured:	
 11489                           ; 1 bytes @ 0x1
 11490                           
 11491     0071                     ?_strlen:	
 11492                           ; 1 bytes @ 0x1
 11493                           
 11494     0071                     ?_swap:	
 11495                           ; 2 bytes @ 0x1
 11496                           
 11497     0071                     ?_strncmp:	
 11498                           ; 2 bytes @ 0x1
 11499                           
 11500     0071                     ?_strchr:	
 11501                           ; 2 bytes @ 0x1
 11502                           
 11503     0071                     RN487X_Reset@value:	
 11504                           ; 2 bytes @ 0x1
 11505                           
 11506     0071                     RN487X_IndicateRx@value:	
 11507                           ; 1 bytes @ 0x1
 11508                           
 11509     0071                     RN487X_SetSystemMode@mode:	
 11510                           ; 1 bytes @ 0x1
 11511                           
 11512     0071                     EUSART2_Write@txData:	
 11513                           ; 1 bytes @ 0x1
 11514                           
 11515     0071                     EUSART1_Write@txData:	
 11516                           ; 1 bytes @ 0x1
 11517                           
 11518     0071                     I2C1_Open@address:	
 11519                           ; 1 bytes @ 0x1
 11520                           
 11521     0071                     I2C1_Close@returnValue:	
 11522                           ; 1 bytes @ 0x1
 11523                           
 11524     0071                     I2C1_MasterSendTxData@data:	
 11525                           ; 1 bytes @ 0x1
 11526                           
 11527     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11528                           ; 1 bytes @ 0x1
 11529                           
 11530     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11531                           ; 2 bytes @ 0x1
 11532                           
 11533     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11534                           ; 2 bytes @ 0x1
 11535                           
 11536     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11537                           ; 2 bytes @ 0x1
 11538                           
 11539     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11540                           ; 2 bytes @ 0x1
 11541                           
 11542     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11543                           ; 2 bytes @ 0x1
 11544                           
 11545     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11546                           ; 2 bytes @ 0x1
 11547                           
 11548     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11549                           ; 2 bytes @ 0x1
 11550                           
 11551     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11552                           ; 2 bytes @ 0x1
 11553                           
 11554     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11555                           ; 2 bytes @ 0x1
 11556                           
 11557     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11558                           ; 2 bytes @ 0x1
 11559                           
 11560     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11561                           ; 2 bytes @ 0x1
 11562                           
 11563     0071                     I2C1_SetBuffer@bufferSize:	
 11564                           ; 2 bytes @ 0x1
 11565                           
 11566     0071                     I2C1_SetCallback@cb:	
 11567                           ; 2 bytes @ 0x1
 11568                           
 11569     0071                     DELAY_milliseconds@milliseconds:	
 11570                           ; 2 bytes @ 0x1
 11571                           
 11572     0071                     bitRead@reg:	
 11573                           ; 2 bytes @ 0x1
 11574                           
 11575     0071                     bitWrite@reg:	
 11576                           ; 2 bytes @ 0x1
 11577                           
 11578     0071                     swap@reg:	
 11579                           ; 2 bytes @ 0x1
 11580                           
 11581     0071                     strcpy@src:	
 11582                           ; 2 bytes @ 0x1
 11583                           
 11584     0071                     strlen@s:	
 11585                           ; 2 bytes @ 0x1
 11586                           
 11587     0071                     strchr@s:	
 11588                           ; 2 bytes @ 0x1
 11589                           
 11590     0071                     strncmp@l:	
 11591                           ; 2 bytes @ 0x1
 11592                           
 11593                           
 11594                           ; 2 bytes @ 0x1
 11595     0071                     	ds	1
 11596     0072                     ??_EUSART1_Write:
 11597     0072                     ??_EUSART2_Write:	
 11598                           ; 1 bytes @ 0x2
 11599                           
 11600     0072                     ??_RN487X_IndicateRx:	
 11601                           ; 1 bytes @ 0x2
 11602                           
 11603     0072                     ??_RN487X_Reset:	
 11604                           ; 1 bytes @ 0x2
 11605                           
 11606     0072                     ??_RN487X_SetSystemMode:	
 11607                           ; 1 bytes @ 0x2
 11608                           
 11609     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11610                           ; 1 bytes @ 0x2
 11611                           
 11612     0072                     EUSART2_Read@readValue:	
 11613                           ; 1 bytes @ 0x2
 11614                           
 11615     0072                     EUSART1_Read@readValue:	
 11616                           ; 1 bytes @ 0x2
 11617                           
 11618     0072                     I2C1_Open@returnValue:	
 11619                           ; 1 bytes @ 0x2
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x2
 11623     0072                     	ds	1
 11624     0073                     ??_strlen:
 11625     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11626                           ; 1 bytes @ 0x3
 11627                           
 11628     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11629                           ; 1 bytes @ 0x3
 11630                           
 11631     0073                     ??_EUSART1_Initialize:	
 11632                           ; 1 bytes @ 0x3
 11633                           
 11634     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11635                           ; 1 bytes @ 0x3
 11636                           
 11637     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11638                           ; 1 bytes @ 0x3
 11639                           
 11640     0073                     ??_EUSART2_Initialize:	
 11641                           ; 1 bytes @ 0x3
 11642                           
 11643     0073                     ??_I2C1_SetBuffer:	
 11644                           ; 1 bytes @ 0x3
 11645                           
 11646     0073                     ??_RN487X_Read@rn487x_interface$F1384:	
 11647                           ; 1 bytes @ 0x3
 11648                           
 11649     0073                     ??_DELAY_milliseconds:	
 11650                           ; 1 bytes @ 0x3
 11651                           
 11652     0073                     ??_strcpy:	
 11653                           ; 1 bytes @ 0x3
 11654                           
 11655     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11656                           ; 1 bytes @ 0x3
 11657                           
 11658     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11659                           ; 1 bytes @ 0x3
 11660                           
 11661     0073                     ??_EUSART2_SetErrorHandler:	
 11662                           ; 1 bytes @ 0x3
 11663                           
 11664     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11665                           ; 1 bytes @ 0x3
 11666                           
 11667     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11668                           ; 1 bytes @ 0x3
 11669                           
 11670     0073                     ??_EUSART1_SetErrorHandler:	
 11671                           ; 1 bytes @ 0x3
 11672                           
 11673     0073                     ??_PIN_MANAGER_Initialize:	
 11674                           ; 1 bytes @ 0x3
 11675                           
 11676     0073                     ??_IOCAF6_SetInterruptHandler:	
 11677                           ; 1 bytes @ 0x3
 11678                           
 11679     0073                     ??_swap:	
 11680                           ; 1 bytes @ 0x3
 11681                           
 11682     0073                     ??_rn487x_PrintMessageStart:	
 11683                           ; 1 bytes @ 0x3
 11684                           
 11685     0073                     ??_rn487x_PrintMessageEnd:	
 11686                           ; 1 bytes @ 0x3
 11687                           
 11688     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11689                           ; 1 bytes @ 0x3
 11690                           
 11691     0073                     ?_RN487X_ReadMsg:	
 11692                           ; 1 bytes @ 0x3
 11693                           
 11694     0073                     ??_RN487X_ReadDefaultResponse:	
 11695                           ; 1 bytes @ 0x3
 11696                           
 11697     0073                     ??_SYSTEM_Initialize:	
 11698                           ; 1 bytes @ 0x3
 11699                           
 11700     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11701                           ; 1 bytes @ 0x3
 11702                           
 11703     0073                     RN487X_SetAsyncMessageHandler@len:	
 11704                           ; 1 bytes @ 0x3
 11705                           
 11706     0073                     I2C1_SetBuffer@buffer:	
 11707                           ; 1 bytes @ 0x3
 11708                           
 11709     0073                     I2C1_SetCallback@ptr:	
 11710                           ; 1 bytes @ 0x3
 11711                           
 11712     0073                     bitRead@position:	
 11713                           ; 1 bytes @ 0x3
 11714                           
 11715     0073                     bitWrite@position:	
 11716                           ; 1 bytes @ 0x3
 11717                           
 11718     0073                     RN487X_ReadMsg@expectedMsg:	
 11719                           ; 1 bytes @ 0x3
 11720                           
 11721     0073                     strchr@c:	
 11722                           ; 2 bytes @ 0x3
 11723                           
 11724     0073                     strncmp@r:	
 11725                           ; 2 bytes @ 0x3
 11726                           
 11727     0073                     RN487X_ReadDefaultResponse@resp:	
 11728                           ; 2 bytes @ 0x3
 11729                           
 11730                           
 11731                           ; 3 bytes @ 0x3
 11732     0073                     	ds	1
 11733     0074                     ??_RN487X_SetAsyncMessageHandler:
 11734     0074                     ?_RN487X_Delay:	
 11735                           ; 1 bytes @ 0x4
 11736                           
 11737     0074                     ??_I2C1_SetCallback:	
 11738                           ; 1 bytes @ 0x4
 11739                           
 11740     0074                     ??_bitRead:	
 11741                           ; 1 bytes @ 0x4
 11742                           
 11743     0074                     I2C1_SetCallback@idx:	
 11744                           ; 1 bytes @ 0x4
 11745                           
 11746     0074                     bitWrite@value:	
 11747                           ; 1 bytes @ 0x4
 11748                           
 11749     0074                     RN487X_Delay@delayCount:	
 11750                           ; 1 bytes @ 0x4
 11751                           
 11752     0074                     strlen@a:	
 11753                           ; 2 bytes @ 0x4
 11754                           
 11755                           
 11756                           ; 2 bytes @ 0x4
 11757     0074                     	ds	1
 11758     0075                     ?_I2C1_SetDataCompleteCallback:
 11759     0075                     ?_I2C1_SetAddressNackCallback:	
 11760                           ; 1 bytes @ 0x5
 11761                           
 11762     0075                     ??_bitWrite:	
 11763                           ; 1 bytes @ 0x5
 11764                           
 11765     0075                     ??_strchr:	
 11766                           ; 1 bytes @ 0x5
 11767                           
 11768     0075                     RN487X_ReadMsg@msgLen:	
 11769                           ; 1 bytes @ 0x5
 11770                           
 11771     0075                     strcpy@d:	
 11772                           ; 1 bytes @ 0x5
 11773                           
 11774     0075                     I2C1_SetDataCompleteCallback@cb:	
 11775                           ; 1 bytes @ 0x5
 11776                           
 11777     0075                     I2C1_SetAddressNackCallback@cb:	
 11778                           ; 2 bytes @ 0x5
 11779                           
 11780     0075                     strncmp@n:	
 11781                           ; 2 bytes @ 0x5
 11782                           
 11783                           
 11784                           ; 2 bytes @ 0x5
 11785     0075                     	ds	1
 11786     0076                     ?_LIGHTBLUE_SplitByte:
 11787     0076                     ?_RN487X_Write:	
 11788                           ; 1 bytes @ 0x6
 11789                           
 11790     0076                     ??_RN487X_Delay:	
 11791                           ; 1 bytes @ 0x6
 11792                           
 11793     0076                     ??_RN487X_Init:	
 11794                           ; 1 bytes @ 0x6
 11795                           
 11796     0076                     ??_RN487X_ReadMsg:	
 11797                           ; 1 bytes @ 0x6
 11798                           
 11799     0076                     LIGHTBLUE_SplitByte@value:	
 11800                           ; 1 bytes @ 0x6
 11801                           
 11802     0076                     RN487X_Write@txData:	
 11803                           ; 1 bytes @ 0x6
 11804                           
 11805     0076                     RN487X_ReadDefaultResponse@status:	
 11806                           ; 1 bytes @ 0x6
 11807                           
 11808     0076                     bitWrite@msb:	
 11809                           ; 1 bytes @ 0x6
 11810                           
 11811     0076                     strcpy@dest:	
 11812                           ; 1 bytes @ 0x6
 11813                           
 11814                           
 11815                           ; 1 bytes @ 0x6
 11816     0076                     	ds	1
 11817     0077                     ?_LIGHTBLUE_SendPacket:
 11818     0077                     ??_LIGHTBLUE_SplitByte:	
 11819                           ; 1 bytes @ 0x7
 11820                           
 11821     0077                     ??_RN487X_Write:	
 11822                           ; 1 bytes @ 0x7
 11823                           
 11824     0077                     ??_strncmp:	
 11825                           ; 1 bytes @ 0x7
 11826                           
 11827     0077                     ??_LIGHTBLUE_SendSerialData:	
 11828                           ; 1 bytes @ 0x7
 11829                           
 11830     0077                     ?_rn487x_PrintMessage:	
 11831                           ; 1 bytes @ 0x7
 11832                           
 11833     0077                     ?_RN487X_SendCmd:	
 11834                           ; 1 bytes @ 0x7
 11835                           
 11836     0077                     LIGHTBLUE_SendPacket@payload:	
 11837                           ; 1 bytes @ 0x7
 11838                           
 11839     0077                     RN487X_SendCmd@cmdLen:	
 11840                           ; 1 bytes @ 0x7
 11841                           
 11842     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11843                           ; 1 bytes @ 0x7
 11844                           
 11845     0077                     bitWrite@mask:	
 11846                           ; 1 bytes @ 0x7
 11847                           
 11848     0077                     rn487x_PrintMessage@passedMessage:	
 11849                           ; 1 bytes @ 0x7
 11850                           
 11851     0077                     I2C1_SetAddressNackCallback@ptr:	
 11852                           ; 2 bytes @ 0x7
 11853                           
 11854                           
 11855                           ; 2 bytes @ 0x7
 11856     0077                     	ds	1
 11857     0078                     ??_LIGHTBLUE_SendPacket:
 11858     0078                     ??_I2C1_SetDataCompleteCallback:	
 11859                           ; 1 bytes @ 0x8
 11860                           
 11861     0078                     ?_rd1RegCompleteHandler:	
 11862                           ; 1 bytes @ 0x8
 11863                           
 11864     0078                     ?_rd2RegCompleteHandler:	
 11865                           ; 1 bytes @ 0x8
 11866                           
 11867     0078                     ?_wr1RegCompleteHandler:	
 11868                           ; 1 bytes @ 0x8
 11869                           
 11870     0078                     ?_wr2RegCompleteHandler:	
 11871                           ; 1 bytes @ 0x8
 11872                           
 11873     0078                     ?_rdBlkRegCompleteHandler:	
 11874                           ; 1 bytes @ 0x8
 11875                           
 11876     0078                     ?_I2C1_CallbackReturnStop:	
 11877                           ; 1 bytes @ 0x8
 11878                           
 11879     0078                     ?_I2C1_CallbackReturnReset:	
 11880                           ; 1 bytes @ 0x8
 11881                           
 11882     0078                     ?_wr1RegCompleteHandler@strncmp$F4855:	
 11883                           ; 1 bytes @ 0x8
 11884                           
 11885     0078                     ?_rd1RegCompleteHandler@strncmp$F4861:	
 11886                           ; 1 bytes @ 0x8
 11887                           
 11888     0078                     ?_rd2RegCompleteHandler@strncmp$F4864:	
 11889                           ; 1 bytes @ 0x8
 11890                           
 11891     0078                     ?_wr2RegCompleteHandler@strncmp$F4867:	
 11892                           ; 1 bytes @ 0x8
 11893                           
 11894     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4873:	
 11895                           ; 1 bytes @ 0x8
 11896                           
 11897     0078                     ??_RN487X_SendCmd:	
 11898                           ; 1 bytes @ 0x8
 11899                           
 11900     0078                     ?_strstr:	
 11901                           ; 1 bytes @ 0x8
 11902                           
 11903     0078                     LIGHTBLUE_SendSerialData@length:	
 11904                           ; 2 bytes @ 0x8
 11905                           
 11906     0078                     LIGHTBLUE_SplitByte@payload:	
 11907                           ; 1 bytes @ 0x8
 11908                           
 11909     0078                     wr1RegCompleteHandler@p:	
 11910                           ; 1 bytes @ 0x8
 11911                           
 11912     0078                     rd1RegCompleteHandler@p:	
 11913                           ; 1 bytes @ 0x8
 11914                           
 11915     0078                     rd2RegCompleteHandler@p:	
 11916                           ; 1 bytes @ 0x8
 11917                           
 11918     0078                     wr2RegCompleteHandler@p:	
 11919                           ; 1 bytes @ 0x8
 11920                           
 11921     0078                     rdBlkRegCompleteHandler@p:	
 11922                           ; 1 bytes @ 0x8
 11923                           
 11924     0078                     rd1RegCompleteHandler@i2c1_master_example$F1239@ptr:	
 11925                           ; 1 bytes @ 0x8
 11926                           
 11927     0078                     rd2RegCompleteHandler@i2c1_master_example$F1250@ptr:	
 11928                           ; 1 bytes @ 0x8
 11929                           
 11930     0078                     wr1RegCompleteHandler@i2c1_master_example$F1256@ptr:	
 11931                           ; 1 bytes @ 0x8
 11932                           
 11933     0078                     wr2RegCompleteHandler@i2c1_master_example$F1262@ptr:	
 11934                           ; 1 bytes @ 0x8
 11935                           
 11936     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr:	
 11937                           ; 1 bytes @ 0x8
 11938                           
 11939     0078                     RN487X_ReadMsg@resp:	
 11940                           ; 1 bytes @ 0x8
 11941                           
 11942     0078                     I2C1_CallbackReturnStop@funPtr:	
 11943                           ; 1 bytes @ 0x8
 11944                           
 11945     0078                     I2C1_CallbackReturnReset@funPtr:	
 11946                           ; 1 bytes @ 0x8
 11947                           
 11948     0078                     bitWrite@lsb:	
 11949                           ; 1 bytes @ 0x8
 11950                           
 11951     0078                     swap@upperByte:	
 11952                           ; 1 bytes @ 0x8
 11953                           
 11954     0078                     strstr@h:	
 11955                           ; 1 bytes @ 0x8
 11956                           
 11957                           
 11958                           ; 2 bytes @ 0x8
 11959     0078                     	ds	1
 11960     0079                     ?_LIGHTBLUE_SplitWord:
 11961     0079                     ??_I2C1_SetAddressNackCallback:	
 11962                           ; 1 bytes @ 0x9
 11963                           
 11964     0079                     ??_rd1RegCompleteHandler:	
 11965                           ; 1 bytes @ 0x9
 11966                           
 11967     0079                     ??_rd2RegCompleteHandler:	
 11968                           ; 1 bytes @ 0x9
 11969                           
 11970     0079                     ??_wr1RegCompleteHandler:	
 11971                           ; 1 bytes @ 0x9
 11972                           
 11973     0079                     ??_wr2RegCompleteHandler:	
 11974                           ; 1 bytes @ 0x9
 11975                           
 11976     0079                     ??_rdBlkRegCompleteHandler:	
 11977                           ; 1 bytes @ 0x9
 11978                           
 11979     0079                     ??_I2C1_DO_TX:	
 11980                           ; 1 bytes @ 0x9
 11981                           
 11982     0079                     ??_I2C1_DO_RX:	
 11983                           ; 1 bytes @ 0x9
 11984                           
 11985     0079                     ??_I2C1_DO_TX_EMPTY:	
 11986                           ; 1 bytes @ 0x9
 11987                           
 11988     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11989                           ; 1 bytes @ 0x9
 11990                           
 11991     0079                     ??_I2C1_CallbackReturnStop:	
 11992                           ; 1 bytes @ 0x9
 11993                           
 11994     0079                     ??_I2C1_CallbackReturnReset:	
 11995                           ; 1 bytes @ 0x9
 11996                           
 11997     0079                     ??_wr1RegCompleteHandler@strncmp$F4857:	
 11998                           ; 1 bytes @ 0x9
 11999                           
 12000     0079                     ??_rd1RegCompleteHandler@strncmp$F4863:	
 12001                           ; 1 bytes @ 0x9
 12002                           
 12003     0079                     ??_rd2RegCompleteHandler@strncmp$F4866:	
 12004                           ; 1 bytes @ 0x9
 12005                           
 12006     0079                     ??_wr2RegCompleteHandler@strncmp$F4869:	
 12007                           ; 1 bytes @ 0x9
 12008                           
 12009     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4875:	
 12010                           ; 1 bytes @ 0x9
 12011                           
 12012     0079                     ??_rn487x_PrintMessage:	
 12013                           ; 1 bytes @ 0x9
 12014                           
 12015     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12016                           ; 1 bytes @ 0x9
 12017                           
 12018     0079                     RN487X_SendCmd@index:	
 12019                           ; 1 bytes @ 0x9
 12020                           
 12021     0079                     RN487X_ReadMsg@index:	
 12022                           ; 1 bytes @ 0x9
 12023                           
 12024     0079                     swap@lowerByte:	
 12025                           ; 1 bytes @ 0x9
 12026                           
 12027     0079                     LIGHTBLUE_SplitWord@value:	
 12028                           ; 1 bytes @ 0x9
 12029                           
 12030                           
 12031                           ; 2 bytes @ 0x9
 12032     0079                     	ds	1
 12033     007A                     LIGHTBLUE_SendPacket@packetID:
 12034     007A                     RN487X_SendCmd@cmd:	
 12035                           ; 1 bytes @ 0xA
 12036                           
 12037     007A                     strstr@n:	
 12038                           ; 1 bytes @ 0xA
 12039                           
 12040                           
 12041                           ; 2 bytes @ 0xA
 12042     007A                     	ds	1
 12043     007B                     ??_i2c_write1ByteRegister:
 12044     007B                     ??_i2c_read1ByteRegister:	
 12045                           ; 1 bytes @ 0xB
 12046                           
 12047     007B                     ??_BMA253_NewAccelDataRdyY:	
 12048                           ; 1 bytes @ 0xB
 12049                           
 12050     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12051                           ; 1 bytes @ 0xB
 12052                           
 12053     007B                     ??_TMAG5273_GetTemperatureValue:	
 12054                           ; 1 bytes @ 0xB
 12055                           
 12056     007B                     ??_LIGHTBLUE_SplitWord:	
 12057                           ; 1 bytes @ 0xB
 12058                           
 12059     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12060                           ; 1 bytes @ 0xB
 12061                           
 12062     007B                     ??_RN487X_EnterCmdMode:	
 12063                           ; 1 bytes @ 0xB
 12064                           
 12065     007B                     ??_RN487X_SetOutputs:	
 12066                           ; 1 bytes @ 0xB
 12067                           
 12068     007B                     ??_RN487X_EnterDataMode:	
 12069                           ; 1 bytes @ 0xB
 12070                           
 12071     007B                     ??_I2C1_MasterWrite:	
 12072                           ; 1 bytes @ 0xB
 12073                           
 12074     007B                     ??_I2C1_MasterRead:	
 12075                           ; 1 bytes @ 0xB
 12076                           
 12077     007B                     ??_I2C1_Poller:	
 12078                           ; 1 bytes @ 0xB
 12079                           
 12080     007B                     ??_isConnected:	
 12081                           ; 1 bytes @ 0xB
 12082                           
 12083     007B                     ??_TMAG5273_GetManufacture:	
 12084                           ; 1 bytes @ 0xB
 12085                           
 12086     007B                     ??_LIGHTBLUE_PushButton:	
 12087                           ; 1 bytes @ 0xB
 12088                           
 12089     007B                     ??_LIGHTBLUE_LedState:	
 12090                           ; 1 bytes @ 0xB
 12091                           
 12092     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12093                           ; 1 bytes @ 0xB
 12094                           
 12095     007B                     ??_i2c_readNBytes:	
 12096                           ; 1 bytes @ 0xB
 12097                           
 12098     007B                     ??_I2C1_MasterOperation:	
 12099                           ; 1 bytes @ 0xB
 12100                           
 12101     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12102                           ; 1 bytes @ 0xB
 12103                           
 12104     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12105                           ; 1 bytes @ 0xB
 12106                           
 12107     007B                     LIGHTBLUE_SplitWord@payload:	
 12108                           ; 1 bytes @ 0xB
 12109                           
 12110     007B                     i2c_write1ByteRegister@address:	
 12111                           ; 1 bytes @ 0xB
 12112                           
 12113     007B                     i2c_readNBytes@address:	
 12114                           ; 1 bytes @ 0xB
 12115                           
 12116                           
 12117                           ; 1 bytes @ 0xB
 12118     007B                     	ds	1
 12119     007C                     ??_readRegister:
 12120     007C                     ??_RN487X_Read:	
 12121                           ; 1 bytes @ 0xC
 12122                           
 12123     007C                     ??_RN487X_DataReady:	
 12124                           ; 1 bytes @ 0xC
 12125                           
 12126     007C                     ??_RN487X_MessageHandler:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     007C                     ??_begin:	
 12130                           ; 1 bytes @ 0xC
 12131                           
 12132     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12133                           ; 1 bytes @ 0xC
 12134                           
 12135     007C                     ??_LIGHTBLUE_AccelSensor:	
 12136                           ; 1 bytes @ 0xC
 12137                           
 12138     007C                     ??_writeRegister:	
 12139                           ; 1 bytes @ 0xC
 12140                           
 12141     007C                     ??_getDeviceStatus:	
 12142                           ; 1 bytes @ 0xC
 12143                           
 12144                           
 12145                           	psect	cstackBANK0
 12146     0020                     __pcstackBANK0:	
 12147                           ; 1 bytes @ 0xC
 12148                           
 12149     0020                     ?_RN487X_SetOutputs:
 12150     0020                     ??_strstr:	
 12151                           ; 1 bytes @ 0x0
 12152                           
 12153     0020                     ??_I2C1_MasterFsm:	
 12154                           ; 1 bytes @ 0x0
 12155                           
 12156     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12157                           ; 1 bytes @ 0x0
 12158                           
 12159     0020                     LIGHTBLUE_PushButton@button:	
 12160                           ; 1 bytes @ 0x0
 12161                           
 12162     0020                     RN487X_SetOutputs@bitMap:	
 12163                           ; 1 bytes @ 0x0
 12164                           
 12165     0020                     LIGHTBLUE_LedState@payload:	
 12166                           ; 2 bytes @ 0x0
 12167                           
 12168     0020                     rn487x_PrintMessage@printCharacter:	
 12169                           ; 3 bytes @ 0x0
 12170                           
 12171                           
 12172                           ; 32 bytes @ 0x0
 12173     0020                     	ds	1
 12174     0021                     LIGHTBLUE_PushButton@payload:
 12175                           
 12176                           ; 3 bytes @ 0x1
 12177     0021                     	ds	1
 12178     0022                     RN487X_SetOutputs@ioLowNibble:
 12179     0022                     I2C1_MasterOperation@read:	
 12180                           ; 1 bytes @ 0x2
 12181                           
 12182     0022                     strstr@nl:	
 12183                           ; 1 bytes @ 0x2
 12184                           
 12185     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12186                           ; 2 bytes @ 0x2
 12187                           
 12188                           
 12189                           ; 19 bytes @ 0x2
 12190     0022                     	ds	1
 12191     0023                     LIGHTBLUE_LedState@led:
 12192     0023                     RN487X_SetOutputs@stateLowNibble:	
 12193                           ; 1 bytes @ 0x3
 12194                           
 12195     0023                     I2C1_MasterOperation@returnValue:	
 12196                           ; 1 bytes @ 0x3
 12197                           
 12198                           
 12199                           ; 1 bytes @ 0x3
 12200     0023                     	ds	1
 12201     0024                     ?_i2c_write1ByteRegister:
 12202     0024                     ?_i2c_read1ByteRegister:	
 12203                           ; 1 bytes @ 0x4
 12204                           
 12205     0024                     ?_i2c_readNBytes:	
 12206                           ; 1 bytes @ 0x4
 12207                           
 12208     0024                     ?_i2c_read2ByteRegister:	
 12209                           ; 1 bytes @ 0x4
 12210                           
 12211     0024                     i2c_write1ByteRegister@reg:	
 12212                           ; 2 bytes @ 0x4
 12213                           
 12214     0024                     i2c_read1ByteRegister@reg:	
 12215                           ; 1 bytes @ 0x4
 12216                           
 12217     0024                     i2c_read2ByteRegister@reg:	
 12218                           ; 1 bytes @ 0x4
 12219                           
 12220     0024                     i2c_readNBytes@data:	
 12221                           ; 1 bytes @ 0x4
 12222                           
 12223     0024                     RN487X_SetOutputs@ioHighNibble:	
 12224                           ; 1 bytes @ 0x4
 12225                           
 12226                           
 12227                           ; 1 bytes @ 0x4
 12228     0024                     	ds	1
 12229     0025                     i2c_write1ByteRegister@data:
 12230     0025                     i2c_read1ByteRegister@address:	
 12231                           ; 1 bytes @ 0x5
 12232                           
 12233     0025                     RN487X_SetOutputs@stateHighNibble:	
 12234                           ; 1 bytes @ 0x5
 12235                           
 12236     0025                     i2c_readNBytes@len:	
 12237                           ; 1 bytes @ 0x5
 12238                           
 12239                           
 12240                           ; 2 bytes @ 0x5
 12241     0025                     	ds	1
 12242     0026                     ??_i2c_read2ByteRegister:
 12243     0026                     ?_writeRegister:	
 12244                           ; 1 bytes @ 0x6
 12245                           
 12246     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12247                           ; 1 bytes @ 0x6
 12248                           
 12249     0026                     i2c_read1ByteRegister@e:	
 12250                           ; 1 bytes @ 0x6
 12251                           
 12252     0026                     writeRegister@data:	
 12253                           ; 1 bytes @ 0x6
 12254                           
 12255                           
 12256                           ; 1 bytes @ 0x6
 12257     0026                     	ds	1
 12258     0027                     ?_LIGHTBLUE_PerformAction:
 12259     0027                     ?_readRegisters:	
 12260                           ; 1 bytes @ 0x7
 12261                           
 12262     0027                     LIGHTBLUE_PerformAction@data:	
 12263                           ; 1 bytes @ 0x7
 12264                           
 12265     0027                     readRegisters@dataBuffer:	
 12266                           ; 1 bytes @ 0x7
 12267                           
 12268     0027                     writeRegister@regAddress:	
 12269                           ; 1 bytes @ 0x7
 12270                           
 12271     0027                     i2c_read1ByteRegister@x:	
 12272                           ; 1 bytes @ 0x7
 12273                           
 12274                           
 12275                           ; 2 bytes @ 0x7
 12276     0027                     	ds	1
 12277     0028                     ??_LIGHTBLUE_PerformAction:
 12278     0028                     readRegisters@numBytes:	
 12279                           ; 1 bytes @ 0x8
 12280                           
 12281                           
 12282                           ; 1 bytes @ 0x8
 12283     0028                     	ds	1
 12284     0029                     ??_readRegisters:
 12285     0029                     LIGHTBLUE_PerformAction@id:	
 12286                           ; 1 bytes @ 0x9
 12287                           
 12288     0029                     i2c_read1ByteRegister@d2:	
 12289                           ; 1 bytes @ 0x9
 12290                           
 12291                           
 12292                           ; 1 bytes @ 0x9
 12293     0029                     	ds	1
 12294     002A                     ??_BMA253_GetAccelDataY:
 12295     002A                     ??_BMA253_GetAccelDataZ:	
 12296                           ; 1 bytes @ 0xA
 12297                           
 12298     002A                     LIGHTBLUE_PerformAction@led:	
 12299                           ; 1 bytes @ 0xA
 12300                           
 12301     002A                     i2c_read2ByteRegister@address:	
 12302                           ; 1 bytes @ 0xA
 12303                           
 12304                           
 12305                           ; 1 bytes @ 0xA
 12306     002A                     	ds	1
 12307     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12308     002B                     readRegisters@regAddress:	
 12309                           ; 1 bytes @ 0xB
 12310                           
 12311     002B                     i2c_read2ByteRegister@result:	
 12312                           ; 1 bytes @ 0xB
 12313                           
 12314                           
 12315                           ; 2 bytes @ 0xB
 12316     002B                     	ds	1
 12317     002C                     readRegister@regAddress:
 12318                           
 12319                           ; 1 bytes @ 0xC
 12320     002C                     	ds	1
 12321     002D                     ?_TMAG5273_GetManufacture:
 12322     002D                     ?_TMAG5273_CalcTemperature:	
 12323                           ; 2 bytes @ 0xD
 12324                           
 12325     002D                     BMA253_GetAccelDataY@yAccelData:	
 12326                           ; 2 bytes @ 0xD
 12327                           
 12328     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12329                           ; 1 bytes @ 0xD
 12330                           
 12331     002D                     readRegister@regVal:	
 12332                           ; 1 bytes @ 0xD
 12333                           
 12334     002D                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12335                           ; 1 bytes @ 0xD
 12336                           
 12337                           
 12338                           ; 2 bytes @ 0xD
 12339     002D                     	ds	1
 12340     002E                     ??_getLowPower:
 12341     002E                     ??_getOperatingMode:	
 12342                           ; 1 bytes @ 0xE
 12343                           
 12344     002E                     ??_getMagneticChannel:	
 12345                           ; 1 bytes @ 0xE
 12346                           
 12347     002E                     ??_getTemperatureEN:	
 12348                           ; 1 bytes @ 0xE
 12349                           
 12350     002E                     ??_getAngleEn:	
 12351                           ; 1 bytes @ 0xE
 12352                           
 12353     002E                     BMA253_GetAccelDataY@lsbData:	
 12354                           ; 1 bytes @ 0xE
 12355                           
 12356     002E                     BMA253_GetAccelDataZ@lsbData:	
 12357                           ; 1 bytes @ 0xE
 12358                           
 12359     002E                     getDeviceStatus@deviceStatusReg:	
 12360                           ; 1 bytes @ 0xE
 12361                           
 12362                           
 12363                           ; 1 bytes @ 0xE
 12364     002E                     	ds	1
 12365     002F                     ??_getError:
 12366     002F                     ??_TMAG5273_CalcTemperature:	
 12367                           ; 1 bytes @ 0xF
 12368                           
 12369     002F                     BMA253_GetAccelDataY@msbData:	
 12370                           ; 1 bytes @ 0xF
 12371                           
 12372     002F                     BMA253_GetAccelDataZ@msbData:	
 12373                           ; 1 bytes @ 0xF
 12374                           
 12375     002F                     _LIGHTBLUE_ParseIncomingPacket$464:	
 12376                           ; 1 bytes @ 0xF
 12377                           
 12378     002F                     TMAG5273_GetManufacture@read:	
 12379                           ; 2 bytes @ 0xF
 12380                           
 12381                           
 12382                           ; 2 bytes @ 0xF
 12383     002F                     	ds	1
 12384     0030                     ??_BMA253_GetAccelDataXYZ:
 12385     0030                     getLowPower@lowPowerModeBit:	
 12386                           ; 1 bytes @ 0x10
 12387                           
 12388     0030                     getOperatingMode@opMode:	
 12389                           ; 1 bytes @ 0x10
 12390                           
 12391     0030                     getMagneticChannel@magChannel:	
 12392                           ; 1 bytes @ 0x10
 12393                           
 12394     0030                     getAngleEn@angleReg:	
 12395                           ; 1 bytes @ 0x10
 12396                           
 12397     0030                     getTemperatureEN@tempEN:	
 12398                           ; 1 bytes @ 0x10
 12399                           
 12400                           
 12401                           ; 1 bytes @ 0x10
 12402     0030                     	ds	1
 12403     0031                     BMA253_GetAccelDataXYZ@lSB:
 12404     0031                     getLowPower@lowPowerMode:	
 12405                           ; 1 bytes @ 0x11
 12406                           
 12407     0031                     getOperatingMode@opMode0:	
 12408                           ; 1 bytes @ 0x11
 12409                           
 12410     0031                     getMagneticChannel@magMode4:	
 12411                           ; 1 bytes @ 0x11
 12412                           
 12413     0031                     getAngleEn@angleDir2:	
 12414                           ; 1 bytes @ 0x11
 12415                           
 12416     0031                     getTemperatureEN@tempENreg:	
 12417                           ; 1 bytes @ 0x11
 12418                           
 12419     0031                     getError@undervoltageError:	
 12420                           ; 1 bytes @ 0x11
 12421                           
 12422     0031                     _LIGHTBLUE_ParseIncomingPacket$465:	
 12423                           ; 1 bytes @ 0x11
 12424                           
 12425                           
 12426                           ; 2 bytes @ 0x11
 12427     0031                     	ds	1
 12428     0032                     BMA253_GetAccelDataXYZ@mSB:
 12429     0032                     getOperatingMode@opMode1:	
 12430                           ; 1 bytes @ 0x12
 12431                           
 12432     0032                     getMagneticChannel@magMode5:	
 12433                           ; 1 bytes @ 0x12
 12434                           
 12435     0032                     getAngleEn@angleDir3:	
 12436                           ; 1 bytes @ 0x12
 12437                           
 12438     0032                     getError@otpCrcError:	
 12439                           ; 1 bytes @ 0x12
 12440                           
 12441     0032                     TMAG5273_CalcTemperature@lowerByte:	
 12442                           ; 1 bytes @ 0x12
 12443                           
 12444                           
 12445                           ; 1 bytes @ 0x12
 12446     0032                     	ds	1
 12447     0033                     BMA253_GetAccelDataXYZ@accelData:
 12448     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12449                           ; 1 bytes @ 0x13
 12450                           
 12451     0033                     getMagneticChannel@magMode6:	
 12452                           ; 1 bytes @ 0x13
 12453                           
 12454     0033                     getError@intPinError:	
 12455                           ; 1 bytes @ 0x13
 12456                           
 12457     0033                     TMAG5273_CalcTemperature@temperatureData:	
 12458                           ; 1 bytes @ 0x13
 12459                           
 12460                           
 12461                           ; 2 bytes @ 0x13
 12462     0033                     	ds	1
 12463     0034                     getMagneticChannel@magMode7:
 12464     0034                     getError@oscillatorError:	
 12465                           ; 1 bytes @ 0x14
 12466                           
 12467     0034                     BMA253_GetAccelDataXYZ@sensorValue:	
 12468                           ; 1 bytes @ 0x14
 12469                           
 12470                           
 12471                           ; 2 bytes @ 0x14
 12472     0034                     	ds	1
 12473     0035                     ?_TMAG5273_GetTemperatureValue:
 12474     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 12475                           ; 1 bytes @ 0x15
 12476                           
 12477     0035                     getError@statusReg:	
 12478                           ; 1 bytes @ 0x15
 12479                           
 12480     0035                     TMAG5273_GetTemperatureValue@temperature:	
 12481                           ; 1 bytes @ 0x15
 12482                           
 12483                           
 12484                           ; 2 bytes @ 0x15
 12485     0035                     	ds	1
 12486     0036                     ??_setMagneticChannel:
 12487     0036                     ??_setTemperatureEn:	
 12488                           ; 1 bytes @ 0x16
 12489                           
 12490     0036                     ??_setOperatingMode:	
 12491                           ; 1 bytes @ 0x16
 12492                           
 12493     0036                     ??_setXYAxisRange:	
 12494                           ; 1 bytes @ 0x16
 12495                           
 12496     0036                     ??_setZAxisRange:	
 12497                           ; 1 bytes @ 0x16
 12498                           
 12499     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12500                           ; 1 bytes @ 0x16
 12501                           
 12502     0036                     LIGHTBLUE_AccelSensor@payload:	
 12503                           ; 1 bytes @ 0x16
 12504                           
 12505                           
 12506                           ; 13 bytes @ 0x16
 12507     0036                     	ds	1
 12508     0037                     LIGHTBLUE_TemperatureSensor@payload:
 12509                           
 12510                           ; 5 bytes @ 0x17
 12511     0037                     	ds	1
 12512     0038                     setOperatingMode@opMode:
 12513     0038                     setMagneticChannel@channelMode:	
 12514                           ; 1 bytes @ 0x18
 12515                           
 12516     0038                     setXYAxisRange@xyAxisRange:	
 12517                           ; 1 bytes @ 0x18
 12518                           
 12519     0038                     setZAxisRange@zAxisRange:	
 12520                           ; 1 bytes @ 0x18
 12521                           
 12522     0038                     setTemperatureEn@temperatureEnable:	
 12523                           ; 1 bytes @ 0x18
 12524                           
 12525                           
 12526                           ; 1 bytes @ 0x18
 12527     0038                     	ds	1
 12528     0039                     setOperatingMode@mode:
 12529     0039                     setMagneticChannel@mode:	
 12530                           ; 2 bytes @ 0x19
 12531                           
 12532     0039                     setXYAxisRange@mode:	
 12533                           ; 2 bytes @ 0x19
 12534                           
 12535     0039                     setZAxisRange@mode:	
 12536                           ; 2 bytes @ 0x19
 12537                           
 12538     0039                     setTemperatureEn@mode:	
 12539                           ; 2 bytes @ 0x19
 12540                           
 12541                           
 12542                           ; 2 bytes @ 0x19
 12543     0039                     	ds	3
 12544     003C                     LIGHTBLUE_TemperatureSensor@temperature:
 12545                           
 12546                           ; 2 bytes @ 0x1C
 12547     003C                     	ds	4
 12548     0040                     rn487x_PrintMessage@messageIndex:
 12549                           
 12550                           ; 1 bytes @ 0x20
 12551     0040                     	ds	1
 12552     0041                     ?_RN487X_MessageHandler:
 12553     0041                     RN487X_MessageHandler@message:	
 12554                           ; 1 bytes @ 0x21
 12555                           
 12556                           
 12557                           ; 2 bytes @ 0x21
 12558     0041                     	ds	2
 12559     0043                     RN487X_MessageHandler@messageType:
 12560     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12561                           ; 1 bytes @ 0x23
 12562                           
 12563                           
 12564                           ; 6 bytes @ 0x23
 12565     0043                     	ds	1
 12566     0044                     ??_RN487X_FilterData:
 12567                           
 12568                           ; 1 bytes @ 0x24
 12569     0044                     	ds	4
 12570     0048                     RN487X_FilterData@readChar:
 12571                           
 12572                           ; 1 bytes @ 0x28
 12573     0048                     	ds	1
 12574     0049                     ??_main:
 12575                           
 12576                           ; 1 bytes @ 0x29
 12577     0049                     	ds	1
 12578                           
 12579                           	psect	maintext
 12580     04BD                     __pmaintext:	
 12581 ;;
 12582 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12583 ;;
 12584 ;; *************** function _main *****************
 12585 ;; Defined at:
 12586 ;;		line 72 in file "main.c"
 12587 ;; Parameters:    Size  Location     Type
 12588 ;;		None
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;		None
 12591 ;; Return value:  Size  Location     Type
 12592 ;;                  2  2041[None  ] int 
 12593 ;; Registers used:
 12594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12595 ;; Tracked objects:
 12596 ;;		On entry : B3F/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12601 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12603 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;Total ram usage:        2 bytes
 12605 ;; Hardware stack levels required when called: 19
 12606 ;; This function calls:
 12607 ;;		_EUSART1_Read
 12608 ;;		_EUSART1_Write
 12609 ;;		_EUSART1_is_rx_ready
 12610 ;;		_EUSART2_Read
 12611 ;;		_EUSART2_Write
 12612 ;;		_EUSART2_is_rx_ready
 12613 ;;		_LIGHTBLUE_AccelSensor
 12614 ;;		_LIGHTBLUE_Initialize
 12615 ;;		_LIGHTBLUE_LedState
 12616 ;;		_LIGHTBLUE_ParseIncomingPacket
 12617 ;;		_LIGHTBLUE_PushButton
 12618 ;;		_LIGHTBLUE_SendProtocolVersion
 12619 ;;		_LIGHTBLUE_SendSerialData
 12620 ;;		_LIGHTBLUE_TemperatureSensor
 12621 ;;		_RN487X_DataReady
 12622 ;;		_RN487X_Init
 12623 ;;		_RN487X_IsConnected
 12624 ;;		_RN487X_Read
 12625 ;;		_RN487X_SetAsyncMessageHandler
 12626 ;;		_RN487X_Write
 12627 ;;		_SYSTEM_Initialize
 12628 ;;		_TMR0_HasOverflowOccured
 12629 ;;		_begin
 12630 ;; This function is called by:
 12631 ;;		Startup code after reset
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635     04BD                     _main:	
 12636                           ;psect for function _main
 12637                           
 12638     04BD                     l15010:	
 12639                           ;incstack = 0
 12640 ;; hardware stack exceeded
 12641                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12642                           
 12643                           
 12644                           ;main.c: 75:     SYSTEM_Initialize();
 12645     04BD  3191  21FA  3184   	fcall	_SYSTEM_Initialize
 12646                           
 12647                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12648     04C0  3020               	movlw	low _statusBuffer@main$F3783
 12649     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12650     04C2  3003               	movlw	high _statusBuffer@main$F3783
 12651     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12652     04C4  3050               	movlw	80
 12653     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12654     04C6  3192  229D  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12655     04C9                     l15012:
 12656                           
 12657                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12658     04C9  178B               	bsf	11,7	;volatile
 12659     04CA                     l15014:
 12660                           
 12661                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12662     04CA  170B               	bsf	11,6	;volatile
 12663     04CB                     l15016:
 12664                           
 12665                           ;main.c: 84:     RN487X_Init();
 12666     04CB  3187  27A1  3184   	fcall	_RN487X_Init
 12667     04CE                     l15018:
 12668                           
 12669                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12670     04CE  319F  270C  3184   	fcall	_LIGHTBLUE_Initialize
 12671                           
 12672                           ;main.c: 86:     begin();
 12673     04D1  318B  23FD  3184   	fcall	_begin
 12674     04D4                     l15020:
 12675                           
 12676                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12677     04D4  319E  2697  3184   	fcall	_RN487X_IsConnected
 12678     04D7  3A01               	xorlw	1
 12679     04D8  1D03               	skipz
 12680     04D9  2CDB               	goto	u12321
 12681     04DA  2CDC               	goto	u12320
 12682     04DB                     u12321:
 12683     04DB  2D63               	goto	l2057
 12684     04DC                     u12320:
 12685     04DC                     l15022:
 12686                           
 12687                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12688     04DC  319E  26FB  3184   	fcall	_TMR0_HasOverflowOccured
 12689     04DF  3A01               	xorlw	1
 12690     04E0  1D03               	skipz
 12691     04E1  2CE3               	goto	u12331
 12692     04E2  2CE4               	goto	u12330
 12693     04E3                     u12331:
 12694     04E3  2CFC               	goto	l2046
 12695     04E4                     u12330:
 12696     04E4                     l15024:
 12697                           
 12698                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12699     04E4  014E               	movlb	14	; select bank14
 12700     04E5  128C               	bcf	12,5	;volatile
 12701     04E6                     l15026:
 12702                           
 12703                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12704     04E6  3192  22CE  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12705                           
 12706                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12707     04E9  3196  26A4  3184   	fcall	_LIGHTBLUE_AccelSensor
 12708                           
 12709                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12710     04EC  3191  217F  3184   	fcall	_LIGHTBLUE_PushButton
 12711                           
 12712                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12713     04EF  3194  24B1  3184   	fcall	_LIGHTBLUE_LedState
 12714                           
 12715                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12716     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12717                           
 12718                           ;main.c: 101:             }
 12719     04F5  2CD4               	goto	l15020
 12720     04F6                     l15028:
 12721                           
 12722                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12723     04F6  3190  2039  3184   	fcall	_RN487X_Read
 12724     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12725     04FC                     l2046:	
 12726                           ;main.c: 107:                 }
 12727                           
 12728                           
 12729                           ;main.c: 104:                 while (RN487X_DataReady())
 12730     04FC  3193  236B  3184   	fcall	_RN487X_DataReady
 12731     04FF  3A00               	xorlw	0
 12732     0500  1D03               	skipz
 12733     0501  2D03               	goto	u12341
 12734     0502  2D04               	goto	u12340
 12735     0503                     u12341:
 12736     0503  2CF6               	goto	l15028
 12737     0504                     u12340:
 12738     0504  2D44               	goto	l15046
 12739     0505                     l15030:
 12740                           
 12741                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12742     0505  3000               	movlw	low (_uart| (0+32768))
 12743     0506  0084               	movwf	4
 12744     0507  3098               	movlw	high (_uart| (0+32768))
 12745     0508  0085               	movwf	5
 12746     0509  3F01               	moviw [1]fsr0
 12747     050A  008A               	movwf	10
 12748     050B  3F00               	moviw [0]fsr0
 12749     050C  000A               	callw
 12750     050D  3184               	pagesel	$
 12751     050E  0140               	movlb	0	; select bank0
 12752     050F  00C9               	movwf	??_main
 12753     0510  0856               	movf	_serialIndex,w
 12754     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12755     0512  0086               	movwf	6
 12756     0513  3002               	movlw	2	; select bank4/5
 12757     0514  0087               	movwf	7
 12758     0515  0849               	movf	??_main,w
 12759     0516  0081               	movwf	1
 12760     0517                     l15032:
 12761                           
 12762                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12763     0517  0856               	movf	_serialIndex,w
 12764     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12765     0519  0086               	movwf	6
 12766     051A  3002               	movlw	2	; select bank4/5
 12767     051B  0087               	movwf	7
 12768     051C  300D               	movlw	13
 12769     051D  0601               	xorwf	1,w
 12770     051E  1903               	btfsc	3,2
 12771     051F  2D21               	goto	u12351
 12772     0520  2D22               	goto	u12350
 12773     0521                     u12351:
 12774     0521  2D33               	goto	l15038
 12775     0522                     u12350:
 12776     0522                     l15034:
 12777     0522  0856               	movf	_serialIndex,w
 12778     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12779     0524  0086               	movwf	6
 12780     0525  3002               	movlw	2	; select bank4/5
 12781     0526  0087               	movwf	7
 12782     0527  300A               	movlw	10
 12783     0528  0601               	xorwf	1,w
 12784     0529  1903               	btfsc	3,2
 12785     052A  2D2C               	goto	u12361
 12786     052B  2D2D               	goto	u12360
 12787     052C                     u12361:
 12788     052C  2D33               	goto	l15038
 12789     052D                     u12360:
 12790     052D                     l15036:
 12791     052D  304F               	movlw	79
 12792     052E  0656               	xorwf	_serialIndex,w
 12793     052F  1D03               	btfss	3,2
 12794     0530  2D32               	goto	u12371
 12795     0531  2D33               	goto	u12370
 12796     0532                     u12371:
 12797     0532  2D40               	goto	l15044
 12798     0533                     u12370:
 12799     0533                     l15038:
 12800                           
 12801                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12802     0533  0856               	movf	_serialIndex,w
 12803     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12804     0535  0086               	movwf	6
 12805     0536  3002               	movlw	2	; select bank4/5
 12806     0537  0087               	movwf	7
 12807     0538  0181               	clrf	1
 12808     0539                     l15040:
 12809                           
 12810                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12811     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12812     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12813     053D                     l15042:
 12814                           
 12815                           ;main.c: 117:                         serialIndex = 0;
 12816     053D  0140               	movlb	0	; select bank0
 12817     053E  01D6               	clrf	_serialIndex
 12818                           
 12819                           ;main.c: 118:                     }
 12820     053F  2D44               	goto	l15046
 12821     0540                     l15044:
 12822                           
 12823                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12824     0540  3001               	movlw	1
 12825     0541  00C9               	movwf	??_main
 12826     0542  0849               	movf	??_main,w
 12827     0543  07D6               	addwf	_serialIndex,f
 12828     0544                     l15046:
 12829                           
 12830                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12831     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12832     0545  0084               	movwf	4
 12833     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12834     0547  0085               	movwf	5
 12835     0548  3F01               	moviw [1]fsr0
 12836     0549  008A               	movwf	10
 12837     054A  3F00               	moviw [0]fsr0
 12838     054B  000A               	callw
 12839     054C  3184               	pagesel	$
 12840     054D  3A00               	xorlw	0
 12841     054E  1D03               	skipz
 12842     054F  2D51               	goto	u12381
 12843     0550  2D52               	goto	u12380
 12844     0551                     u12381:
 12845     0551  2D05               	goto	l15030
 12846     0552                     u12380:
 12847     0552  2CD4               	goto	l15020
 12848     0553                     l15048:
 12849                           
 12850                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12851     0553  3190  2039  3184   	fcall	_RN487X_Read
 12852     0556  0141               	movlb	1	; select bank1
 12853     0557  00EF               	movwf	_main$5439^(0+128)
 12854                           
 12855                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12856     0558  086F               	movf	_main$5439^(0+128),w
 12857     0559  00F1               	movwf	EUSART2_Write@txData
 12858     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12859     055B  0084               	movwf	4
 12860     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12861     055D  0085               	movwf	5
 12862     055E  3F01               	moviw [1]fsr0
 12863     055F  008A               	movwf	10
 12864     0560  3F00               	moviw [0]fsr0
 12865     0561  000A               	callw
 12866     0562  3184               	pagesel	$
 12867     0563                     l2057:	
 12868                           ;main.c: 132:             }
 12869                           
 12870                           
 12871                           ;main.c: 129:             while(RN487X_DataReady())
 12872     0563  3193  236B  3184   	fcall	_RN487X_DataReady
 12873     0566  3A00               	xorlw	0
 12874     0567  1D03               	skipz
 12875     0568  2D6A               	goto	u12391
 12876     0569  2D6B               	goto	u12390
 12877     056A                     u12391:
 12878     056A  2D53               	goto	l15048
 12879     056B                     u12390:
 12880     056B  2D7F               	goto	l15052
 12881     056C                     l15050:
 12882                           
 12883                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12884     056C  3000               	movlw	low (_uart| (0+32768))
 12885     056D  0084               	movwf	4
 12886     056E  3098               	movlw	high (_uart| (0+32768))
 12887     056F  0085               	movwf	5
 12888     0570  3F01               	moviw [1]fsr0
 12889     0571  008A               	movwf	10
 12890     0572  3F00               	moviw [0]fsr0
 12891     0573  000A               	callw
 12892     0574  3184               	pagesel	$
 12893     0575  00F6               	movwf	RN487X_Write@txData
 12894     0576  3068               	movlw	low (_RN487X| (0+32768))
 12895     0577  0084               	movwf	4
 12896     0578  3098               	movlw	high (_RN487X| (0+32768))
 12897     0579  0085               	movwf	5
 12898     057A  3F01               	moviw [1]fsr0
 12899     057B  008A               	movwf	10
 12900     057C  3F00               	moviw [0]fsr0
 12901     057D  000A               	callw
 12902     057E  3184               	pagesel	$
 12903     057F                     l15052:
 12904                           
 12905                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12906     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12907     0580  0084               	movwf	4
 12908     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12909     0582  0085               	movwf	5
 12910     0583  3F01               	moviw [1]fsr0
 12911     0584  008A               	movwf	10
 12912     0585  3F00               	moviw [0]fsr0
 12913     0586  000A               	callw
 12914     0587  3184               	pagesel	$
 12915     0588  3A00               	xorlw	0
 12916     0589  1D03               	skipz
 12917     058A  2D8C               	goto	u12401
 12918     058B  2D8D               	goto	u12400
 12919     058C                     u12401:
 12920     058C  2D6C               	goto	l15050
 12921     058D                     u12400:
 12922     058D  2CD4               	goto	l15020
 12923     058E  3180  2855         	ljmp	start
 12924     0590                     __end_of_main:
 12925                           
 12926                           	psect	text1
 12927     0BFD                     __ptext1:	
 12928 ;; *************** function _begin *****************
 12929 ;; Defined at:
 12930 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      char 
 12937 ;; Registers used:
 12938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12948 ;;Total ram usage:        0 bytes
 12949 ;; Hardware stack levels used: 1
 12950 ;; Hardware stack levels required when called: 18
 12951 ;; This function calls:
 12952 ;;		_getAngleEn
 12953 ;;		_getError
 12954 ;;		_getLowPower
 12955 ;;		_getMagneticChannel
 12956 ;;		_getOperatingMode
 12957 ;;		_getTemperatureEN
 12958 ;;		_isConnected
 12959 ;;		_setMagneticChannel
 12960 ;;		_setOperatingMode
 12961 ;;		_setTemperatureEn
 12962 ;;		_setXYAxisRange
 12963 ;;		_setZAxisRange
 12964 ;; This function is called by:
 12965 ;;		_main
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969     0BFD                     _begin:	
 12970                           ;psect for function _begin
 12971                           
 12972     0BFD                     l14540:	
 12973                           ;incstack = 0
 12974 ;; hardware stack exceeded
 12975                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12976                           
 12977                           
 12978                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 37:     if (isConnecte
      +                          d() != 0) {
 12979     0BFD  3191  21CF  318B   	fcall	_isConnected
 12980     0C00  3A00               	xorlw	0
 12981     0C01  1903               	skipnz
 12982     0C02  2C04               	goto	u11741
 12983     0C03  2C05               	goto	u11740
 12984     0C04                     u11741:
 12985     0C04  2C06               	goto	l14544
 12986     0C05                     u11740:
 12987     0C05  2C4A               	goto	l2117
 12988     0C06                     l14544:
 12989                           
 12990                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 42:     setMagneticCha
      +                          nnel(0X7);
 12991     0C06  3007               	movlw	7
 12992     0C07  3180  20A8  318B   	fcall	_setMagneticChannel
 12993                           
 12994                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 43:     setTemperature
      +                          En(1);
 12995     0C0A  3001               	movlw	1
 12996     0C0B  3188  20D4  318B   	fcall	_setTemperatureEn
 12997                           
 12998                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 44:     setOperatingMo
      +                          de(0X2);
 12999     0C0E  3002               	movlw	2
 13000     0C0F  3187  2706  318B   	fcall	_setOperatingMode
 13001                           
 13002                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 47:     setXYAxisRange
      +                          (0X1);
 13003     0C12  3001               	movlw	1
 13004     0C13  3189  21CA  318B   	fcall	_setXYAxisRange
 13005                           
 13006                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     setZAxisRange(
      +                          0X1);
 13007     0C16  3001               	movlw	1
 13008     0C17  3189  2111  318B   	fcall	_setZAxisRange
 13009                           
 13010                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 51:     if (getError()
      +                           != 0) {
 13011     0C1A  318D  25E7  318B   	fcall	_getError
 13012     0C1D  3A00               	xorlw	0
 13013     0C1E  1903               	skipnz
 13014     0C1F  2C21               	goto	u11751
 13015     0C20  2C22               	goto	u11750
 13016     0C21                     u11751:
 13017     0C21  2C23               	goto	l14548
 13018     0C22                     u11750:
 13019     0C22  2C4A               	goto	l2117
 13020     0C23                     l14548:
 13021                           
 13022                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 56:     if (getLowPowe
      +                          r() != 0X0) {
 13023     0C23  3192  2210  318B   	fcall	_getLowPower
 13024     0C26  3A00               	xorlw	0
 13025     0C27  1903               	skipnz
 13026     0C28  2C2A               	goto	u11761
 13027     0C29  2C2B               	goto	u11760
 13028     0C2A                     u11761:
 13029     0C2A  2C2C               	goto	l14552
 13030     0C2B                     u11760:
 13031     0C2B  2C4A               	goto	l2117
 13032     0C2C                     l14552:
 13033                           
 13034                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 61:     if (getOperati
      +                          ngMode() != 0X2) {
 13035     0C2C  318D  2540  318B   	fcall	_getOperatingMode
 13036     0C2F  3A02               	xorlw	2
 13037     0C30  1903               	skipnz
 13038     0C31  2C33               	goto	u11771
 13039     0C32  2C34               	goto	u11770
 13040     0C33                     u11771:
 13041     0C33  2C35               	goto	l14556
 13042     0C34                     u11770:
 13043     0C34  2C4A               	goto	l2117
 13044     0C35                     l14556:
 13045                           
 13046                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 66:     if (getMagneti
      +                          cChannel() != 0X7) {
 13047     0C35  3183  2377  318B   	fcall	_getMagneticChannel
 13048     0C38  3A07               	xorlw	7
 13049     0C39  1903               	skipnz
 13050     0C3A  2C3C               	goto	u11781
 13051     0C3B  2C3D               	goto	u11780
 13052     0C3C                     u11781:
 13053     0C3C  2C3E               	goto	l14560
 13054     0C3D                     u11780:
 13055     0C3D  2C4A               	goto	l2117
 13056     0C3E                     l14560:
 13057                           
 13058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 71:     if (getTempera
      +                          tureEN() != 0X1) {
 13059     0C3E  3191  21BA  318B   	fcall	_getTemperatureEN
 13060     0C41  3A01               	xorlw	1
 13061     0C42  1903               	skipnz
 13062     0C43  2C45               	goto	u11791
 13063     0C44  2C46               	goto	u11790
 13064     0C45                     u11791:
 13065     0C45  2C47               	goto	l14564
 13066     0C46                     u11790:
 13067     0C46  2C4A               	goto	l2117
 13068     0C47                     l14564:
 13069                           
 13070                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 76:     if (getAngleEn
      +                          () != 0X0) {
 13071     0C47  318D  2593  318B   	fcall	_getAngleEn
 13072     0C4A                     l2117:
 13073     0C4A  0008               	return
 13074     0C4B                     __end_of_begin:
 13075                           
 13076                           	psect	text2
 13077     0911                     __ptext2:	
 13078 ;; *************** function _setZAxisRange *****************
 13079 ;; Defined at:
 13080 ;;		line 1038 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;  zAxisRange      1    wreg     unsigned char 
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;  zAxisRange      1   24[BANK0 ] unsigned char 
 13085 ;;  mode            2   25[BANK0 ] unsigned short 
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      char 
 13088 ;; Registers used:
 13089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13090 ;; Tracked objects:
 13091 ;;		On entry : 0/0
 13092 ;;		On exit  : 0/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13097 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13098 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13099 ;;Total ram usage:        5 bytes
 13100 ;; Hardware stack levels used: 1
 13101 ;; Hardware stack levels required when called: 17
 13102 ;; This function calls:
 13103 ;;		_bitWrite
 13104 ;;		_getError
 13105 ;;		_readRegister
 13106 ;;		_writeRegister
 13107 ;; This function is called by:
 13108 ;;		_begin
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112     0911                     _setZAxisRange:	
 13113                           ;psect for function _setZAxisRange
 13114                           
 13115                           
 13116                           ;incstack = 0
 13117 ;; hardware stack exceeded
 13118                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13119                           ;setZAxisRange@zAxisRange stored from wreg
 13120     0911  0140               	movlb	0	; select bank0
 13121     0912  00B8               	movwf	setZAxisRange@zAxisRange
 13122     0913                     l13994:
 13123     0913                     l13996:
 13124                           
 13125                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1040:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13126     0913  3003               	movlw	3
 13127     0914  3190  207A  3189   	fcall	_readRegister
 13128     0917  0140               	movlb	0	; select bank0
 13129     0918  00B6               	movwf	??_setZAxisRange
 13130     0919  01B7               	clrf	??_setZAxisRange+1
 13131     091A  0836               	movf	??_setZAxisRange,w
 13132     091B  00B9               	movwf	setZAxisRange@mode
 13133     091C  0837               	movf	??_setZAxisRange+1,w
 13134     091D  00BA               	movwf	setZAxisRange@mode+1
 13135     091E                     l13998:
 13136                           
 13137                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1043:     if (zAxisRan
      +                          ge == 0X0)
 13138     091E  0838               	movf	setZAxisRange@zAxisRange,w
 13139     091F  1D03               	btfss	3,2
 13140     0920  2922               	goto	u10891
 13141     0921  2923               	goto	u10890
 13142     0922                     u10891:
 13143     0922  2934               	goto	l14004
 13144     0923                     u10890:
 13145     0923                     l14000:
 13146                           
 13147                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1044:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:         bitWrite(mode, 0, 0
      +                          );
 13148     0923  083A               	movf	setZAxisRange@mode+1,w
 13149     0924  00F2               	movwf	bitWrite@reg+1
 13150     0925  0839               	movf	setZAxisRange@mode,w
 13151     0926  00F1               	movwf	bitWrite@reg
 13152     0927  01F3               	clrf	bitWrite@position
 13153     0928  01F4               	clrf	bitWrite@value
 13154     0929  3188  2000  3189   	fcall	_bitWrite
 13155     092C                     l14002:
 13156                           
 13157                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1048:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13158     092C  0140               	movlb	0	; select bank0
 13159     092D  0839               	movf	setZAxisRange@mode,w
 13160     092E  00A6               	movwf	writeRegister@data
 13161     092F  3003               	movlw	3
 13162     0930  3190  2016  3189   	fcall	_writeRegister
 13163                           
 13164                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:     } else if (z
      +                          AxisRange == 0X1)
 13165     0933  294A               	goto	l14010
 13166     0934                     l14004:
 13167     0934  0338               	decf	setZAxisRange@zAxisRange,w
 13168     0935  1D03               	btfss	3,2
 13169     0936  2938               	goto	u10901
 13170     0937  2939               	goto	u10900
 13171     0938                     u10901:
 13172     0938  294A               	goto	l14010
 13173     0939                     u10900:
 13174     0939                     l14006:
 13175                           
 13176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1050:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:         bitWrite(mode, 0, 1
      +                          );
 13177     0939  083A               	movf	setZAxisRange@mode+1,w
 13178     093A  00F2               	movwf	bitWrite@reg+1
 13179     093B  0839               	movf	setZAxisRange@mode,w
 13180     093C  00F1               	movwf	bitWrite@reg
 13181     093D  01F3               	clrf	bitWrite@position
 13182     093E  01F4               	clrf	bitWrite@value
 13183     093F  0AF4               	incf	bitWrite@value,f
 13184     0940  3188  2000  3189   	fcall	_bitWrite
 13185     0943                     l14008:
 13186                           
 13187                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1052:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13188     0943  0140               	movlb	0	; select bank0
 13189     0944  0839               	movf	setZAxisRange@mode,w
 13190     0945  00A6               	movwf	writeRegister@data
 13191     0946  3003               	movlw	3
 13192     0947  3190  2016  3189   	fcall	_writeRegister
 13193     094A                     l14010:
 13194                           
 13195                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1055:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13196     094A  318D  25E7  3189   	fcall	_getError
 13197     094D                     l2332:
 13198     094D  0008               	return
 13199     094E                     __end_of_setZAxisRange:
 13200                           
 13201                           	psect	text3
 13202     09CA                     __ptext3:	
 13203 ;; *************** function _setXYAxisRange *****************
 13204 ;; Defined at:
 13205 ;;		line 1011 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  xyAxisRange     1    wreg     unsigned char 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;  xyAxisRange     1   24[BANK0 ] unsigned char 
 13210 ;;  mode            2   25[BANK0 ] unsigned short 
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      char 
 13213 ;; Registers used:
 13214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;Total ram usage:        5 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 17
 13227 ;; This function calls:
 13228 ;;		_bitWrite
 13229 ;;		_getError
 13230 ;;		_readRegister
 13231 ;;		_writeRegister
 13232 ;; This function is called by:
 13233 ;;		_begin
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237     09CA                     _setXYAxisRange:	
 13238                           ;psect for function _setXYAxisRange
 13239                           
 13240                           
 13241                           ;incstack = 0
 13242 ;; hardware stack exceeded
 13243                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13244                           ;setXYAxisRange@xyAxisRange stored from wreg
 13245     09CA  0140               	movlb	0	; select bank0
 13246     09CB  00B8               	movwf	setXYAxisRange@xyAxisRange
 13247     09CC                     l13974:
 13248     09CC                     l13976:
 13249                           
 13250                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13251     09CC  3003               	movlw	3
 13252     09CD  3190  207A  3189   	fcall	_readRegister
 13253     09D0  0140               	movlb	0	; select bank0
 13254     09D1  00B6               	movwf	??_setXYAxisRange
 13255     09D2  01B7               	clrf	??_setXYAxisRange+1
 13256     09D3  0836               	movf	??_setXYAxisRange,w
 13257     09D4  00B9               	movwf	setXYAxisRange@mode
 13258     09D5  0837               	movf	??_setXYAxisRange+1,w
 13259     09D6  00BA               	movwf	setXYAxisRange@mode+1
 13260     09D7                     l13978:
 13261                           
 13262                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     if (xyAxisRa
      +                          nge == 0X0)
 13263     09D7  0838               	movf	setXYAxisRange@xyAxisRange,w
 13264     09D8  1D03               	btfss	3,2
 13265     09D9  29DB               	goto	u10871
 13266     09DA  29DC               	goto	u10870
 13267     09DB                     u10871:
 13268     09DB  29EE               	goto	l13984
 13269     09DC                     u10870:
 13270     09DC                     l13980:
 13271                           
 13272                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:         bitWrite(mode, 1, 0
      +                          );
 13273     09DC  083A               	movf	setXYAxisRange@mode+1,w
 13274     09DD  00F2               	movwf	bitWrite@reg+1
 13275     09DE  0839               	movf	setXYAxisRange@mode,w
 13276     09DF  00F1               	movwf	bitWrite@reg
 13277     09E0  01F3               	clrf	bitWrite@position
 13278     09E1  0AF3               	incf	bitWrite@position,f
 13279     09E2  01F4               	clrf	bitWrite@value
 13280     09E3  3188  2000  3189   	fcall	_bitWrite
 13281     09E6                     l13982:
 13282                           
 13283                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13284     09E6  0140               	movlb	0	; select bank0
 13285     09E7  0839               	movf	setXYAxisRange@mode,w
 13286     09E8  00A6               	movwf	writeRegister@data
 13287     09E9  3003               	movlw	3
 13288     09EA  3190  2016  3189   	fcall	_writeRegister
 13289                           
 13290                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     } else if (x
      +                          yAxisRange == 0X1)
 13291     09ED  2A05               	goto	l13990
 13292     09EE                     l13984:
 13293     09EE  0338               	decf	setXYAxisRange@xyAxisRange,w
 13294     09EF  1D03               	btfss	3,2
 13295     09F0  29F2               	goto	u10881
 13296     09F1  29F3               	goto	u10880
 13297     09F2                     u10881:
 13298     09F2  2A05               	goto	l13990
 13299     09F3                     u10880:
 13300     09F3                     l13986:
 13301                           
 13302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         bitWrite(mode, 1, 1
      +                          );
 13303     09F3  083A               	movf	setXYAxisRange@mode+1,w
 13304     09F4  00F2               	movwf	bitWrite@reg+1
 13305     09F5  0839               	movf	setXYAxisRange@mode,w
 13306     09F6  00F1               	movwf	bitWrite@reg
 13307     09F7  01F3               	clrf	bitWrite@position
 13308     09F8  0AF3               	incf	bitWrite@position,f
 13309     09F9  01F4               	clrf	bitWrite@value
 13310     09FA  0AF4               	incf	bitWrite@value,f
 13311     09FB  3188  2000  3189   	fcall	_bitWrite
 13312     09FE                     l13988:
 13313                           
 13314                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13315     09FE  0140               	movlb	0	; select bank0
 13316     09FF  0839               	movf	setXYAxisRange@mode,w
 13317     0A00  00A6               	movwf	writeRegister@data
 13318     0A01  3003               	movlw	3
 13319     0A02  3190  2016  3189   	fcall	_writeRegister
 13320     0A05                     l13990:
 13321                           
 13322                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13323     0A05  318D  25E7  3189   	fcall	_getError
 13324     0A08                     l2326:
 13325     0A08  0008               	return
 13326     0A09                     __end_of_setXYAxisRange:
 13327                           
 13328                           	psect	text4
 13329     08D4                     __ptext4:	
 13330 ;; *************** function _setTemperatureEn *****************
 13331 ;; Defined at:
 13332 ;;		line 1137 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  temperatureE    1    wreg     _Bool 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  temperatureE    1   24[BANK0 ] _Bool 
 13337 ;;  mode            2   25[BANK0 ] unsigned short 
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      char 
 13340 ;; Registers used:
 13341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13350 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;Total ram usage:        5 bytes
 13352 ;; Hardware stack levels used: 1
 13353 ;; Hardware stack levels required when called: 17
 13354 ;; This function calls:
 13355 ;;		_bitWrite
 13356 ;;		_getError
 13357 ;;		_readRegister
 13358 ;;		_writeRegister
 13359 ;; This function is called by:
 13360 ;;		_begin
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364     08D4                     _setTemperatureEn:	
 13365                           ;psect for function _setTemperatureEn
 13366                           
 13367                           
 13368                           ;incstack = 0
 13369 ;; hardware stack exceeded
 13370                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13371                           ;setTemperatureEn@temperatureEnable stored from wreg
 13372     08D4  0140               	movlb	0	; select bank0
 13373     08D5  00B8               	movwf	setTemperatureEn@temperatureEnable
 13374     08D6                     l13922:
 13375     08D6                     l13924:
 13376                           
 13377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1139:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13378     08D6  3007               	movlw	7
 13379     08D7  3190  207A  3188   	fcall	_readRegister
 13380     08DA  0140               	movlb	0	; select bank0
 13381     08DB  00B6               	movwf	??_setTemperatureEn
 13382     08DC  01B7               	clrf	??_setTemperatureEn+1
 13383     08DD  0836               	movf	??_setTemperatureEn,w
 13384     08DE  00B9               	movwf	setTemperatureEn@mode
 13385     08DF  0837               	movf	??_setTemperatureEn+1,w
 13386     08E0  00BA               	movwf	setTemperatureEn@mode+1
 13387     08E1                     l13926:
 13388                           
 13389                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1142:     if (temperat
      +                          ureEnable == 0)
 13390     08E1  0838               	movf	setTemperatureEn@temperatureEnable,w
 13391     08E2  1D03               	btfss	3,2
 13392     08E3  28E5               	goto	u10811
 13393     08E4  28E6               	goto	u10810
 13394     08E5                     u10811:
 13395     08E5  28F7               	goto	l13932
 13396     08E6                     u10810:
 13397     08E6                     l13928:
 13398                           
 13399                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1143:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:         bitWrite(mode, 0, 0
      +                          );
 13400     08E6  083A               	movf	setTemperatureEn@mode+1,w
 13401     08E7  00F2               	movwf	bitWrite@reg+1
 13402     08E8  0839               	movf	setTemperatureEn@mode,w
 13403     08E9  00F1               	movwf	bitWrite@reg
 13404     08EA  01F3               	clrf	bitWrite@position
 13405     08EB  01F4               	clrf	bitWrite@value
 13406     08EC  3188  2000  3188   	fcall	_bitWrite
 13407     08EF                     l13930:
 13408                           
 13409                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1147:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13410     08EF  0140               	movlb	0	; select bank0
 13411     08F0  0839               	movf	setTemperatureEn@mode,w
 13412     08F1  00A6               	movwf	writeRegister@data
 13413     08F2  3007               	movlw	7
 13414     08F3  3190  2016  3188   	fcall	_writeRegister
 13415                           
 13416                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:     } else if (t
      +                          emperatureEnable == 1)
 13417     08F6  290D               	goto	l13938
 13418     08F7                     l13932:
 13419     08F7  0338               	decf	setTemperatureEn@temperatureEnable,w
 13420     08F8  1D03               	btfss	3,2
 13421     08F9  28FB               	goto	u10821
 13422     08FA  28FC               	goto	u10820
 13423     08FB                     u10821:
 13424     08FB  290D               	goto	l13938
 13425     08FC                     u10820:
 13426     08FC                     l13934:
 13427                           
 13428                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1149:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:         bitWrite(mode, 0, 1
      +                          );
 13429     08FC  083A               	movf	setTemperatureEn@mode+1,w
 13430     08FD  00F2               	movwf	bitWrite@reg+1
 13431     08FE  0839               	movf	setTemperatureEn@mode,w
 13432     08FF  00F1               	movwf	bitWrite@reg
 13433     0900  01F3               	clrf	bitWrite@position
 13434     0901  01F4               	clrf	bitWrite@value
 13435     0902  0AF4               	incf	bitWrite@value,f
 13436     0903  3188  2000  3188   	fcall	_bitWrite
 13437     0906                     l13936:
 13438                           
 13439                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1151:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13440     0906  0140               	movlb	0	; select bank0
 13441     0907  0839               	movf	setTemperatureEn@mode,w
 13442     0908  00A6               	movwf	writeRegister@data
 13443     0909  3007               	movlw	7
 13444     090A  3190  2016  3188   	fcall	_writeRegister
 13445     090D                     l13938:
 13446                           
 13447                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1154:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13448     090D  318D  25E7  3188   	fcall	_getError
 13449     0910                     l2350:
 13450     0910  0008               	return
 13451     0911                     __end_of_setTemperatureEn:
 13452                           
 13453                           	psect	text5
 13454     0706                     __ptext5:	
 13455 ;; *************** function _setOperatingMode *****************
 13456 ;; Defined at:
 13457 ;;		line 530 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  opMode          1    wreg     unsigned char 
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;  opMode          1   24[BANK0 ] unsigned char 
 13462 ;;  mode            2   25[BANK0 ] unsigned short 
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      char 
 13465 ;; Registers used:
 13466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;Total ram usage:        5 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 17
 13479 ;; This function calls:
 13480 ;;		_bitWrite
 13481 ;;		_getError
 13482 ;;		_readRegister
 13483 ;;		_writeRegister
 13484 ;; This function is called by:
 13485 ;;		_begin
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489     0706                     _setOperatingMode:	
 13490                           ;psect for function _setOperatingMode
 13491                           
 13492                           
 13493                           ;incstack = 0
 13494 ;; hardware stack exceeded
 13495                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13496                           ;setOperatingMode@opMode stored from wreg
 13497     0706  0140               	movlb	0	; select bank0
 13498     0707  00B8               	movwf	setOperatingMode@opMode
 13499     0708                     l13942:
 13500     0708                     l13944:
 13501                           
 13502                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 532:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13503     0708  3001               	movlw	1
 13504     0709  3190  207A  3187   	fcall	_readRegister
 13505     070C  0140               	movlb	0	; select bank0
 13506     070D  00B6               	movwf	??_setOperatingMode
 13507     070E  01B7               	clrf	??_setOperatingMode+1
 13508     070F  0836               	movf	??_setOperatingMode,w
 13509     0710  00B9               	movwf	setOperatingMode@mode
 13510     0711  0837               	movf	??_setOperatingMode+1,w
 13511     0712  00BA               	movwf	setOperatingMode@mode+1
 13512     0713                     l13946:
 13513                           
 13514                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 535:     if (opMode ==
      +                           0)
 13515     0713  0838               	movf	setOperatingMode@opMode,w
 13516     0714  1D03               	btfss	3,2
 13517     0715  2F17               	goto	u10831
 13518     0716  2F18               	goto	u10830
 13519     0717                     u10831:
 13520     0717  2F34               	goto	l13952
 13521     0718                     u10830:
 13522     0718                     l13948:
 13523                           
 13524                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 536:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:         bitWrite(mode, 0, 0);
 13525     0718  083A               	movf	setOperatingMode@mode+1,w
 13526     0719  00F2               	movwf	bitWrite@reg+1
 13527     071A  0839               	movf	setOperatingMode@mode,w
 13528     071B  00F1               	movwf	bitWrite@reg
 13529     071C  01F3               	clrf	bitWrite@position
 13530     071D  01F4               	clrf	bitWrite@value
 13531     071E  3188  2000  3187   	fcall	_bitWrite
 13532                           
 13533                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 540:         bitWrite(
      +                          mode, 1, 0);
 13534     0721  0140               	movlb	0	; select bank0
 13535     0722  083A               	movf	setOperatingMode@mode+1,w
 13536     0723  00F2               	movwf	bitWrite@reg+1
 13537     0724  0839               	movf	setOperatingMode@mode,w
 13538     0725  00F1               	movwf	bitWrite@reg
 13539     0726  01F3               	clrf	bitWrite@position
 13540     0727  0AF3               	incf	bitWrite@position,f
 13541     0728  01F4               	clrf	bitWrite@value
 13542     0729  3188  2000  3187   	fcall	_bitWrite
 13543     072C                     l13950:
 13544                           
 13545                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13546     072C  0140               	movlb	0	; select bank0
 13547     072D  0839               	movf	setOperatingMode@mode,w
 13548     072E  00A6               	movwf	writeRegister@data
 13549     072F  3001               	movlw	1
 13550     0730  3190  2016  3187   	fcall	_writeRegister
 13551                           
 13552                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 542:     } else if (op
      +                          Mode == 0X1)
 13553     0733  2F9D               	goto	l13970
 13554     0734                     l13952:
 13555     0734  0338               	decf	setOperatingMode@opMode,w
 13556     0735  1D03               	btfss	3,2
 13557     0736  2F38               	goto	u10841
 13558     0737  2F39               	goto	u10840
 13559     0738                     u10841:
 13560     0738  2F56               	goto	l13958
 13561     0739                     u10840:
 13562     0739                     l13954:
 13563                           
 13564                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:         bitWrite(mode, 0, 1);
 13565     0739  083A               	movf	setOperatingMode@mode+1,w
 13566     073A  00F2               	movwf	bitWrite@reg+1
 13567     073B  0839               	movf	setOperatingMode@mode,w
 13568     073C  00F1               	movwf	bitWrite@reg
 13569     073D  01F3               	clrf	bitWrite@position
 13570     073E  01F4               	clrf	bitWrite@value
 13571     073F  0AF4               	incf	bitWrite@value,f
 13572     0740  3188  2000  3187   	fcall	_bitWrite
 13573                           
 13574                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         bitWrite(
      +                          mode, 1, 0);
 13575     0743  0140               	movlb	0	; select bank0
 13576     0744  083A               	movf	setOperatingMode@mode+1,w
 13577     0745  00F2               	movwf	bitWrite@reg+1
 13578     0746  0839               	movf	setOperatingMode@mode,w
 13579     0747  00F1               	movwf	bitWrite@reg
 13580     0748  01F3               	clrf	bitWrite@position
 13581     0749  0AF3               	incf	bitWrite@position,f
 13582     074A  01F4               	clrf	bitWrite@value
 13583     074B  3188  2000  3187   	fcall	_bitWrite
 13584     074E                     l13956:
 13585                           
 13586                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13587     074E  0140               	movlb	0	; select bank0
 13588     074F  0839               	movf	setOperatingMode@mode,w
 13589     0750  00A6               	movwf	writeRegister@data
 13590     0751  3001               	movlw	1
 13591     0752  3190  2016  3187   	fcall	_writeRegister
 13592                           
 13593                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:     } else if (op
      +                          Mode == 0X2)
 13594     0755  2F9D               	goto	l13970
 13595     0756                     l13958:
 13596     0756  3002               	movlw	2
 13597     0757  0638               	xorwf	setOperatingMode@opMode,w
 13598     0758  1D03               	btfss	3,2
 13599     0759  2F5B               	goto	u10851
 13600     075A  2F5C               	goto	u10850
 13601     075B                     u10851:
 13602     075B  2F79               	goto	l13964
 13603     075C                     u10850:
 13604     075C                     l13960:
 13605                           
 13606                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         bitWrite(mode, 0, 0);
 13607     075C  083A               	movf	setOperatingMode@mode+1,w
 13608     075D  00F2               	movwf	bitWrite@reg+1
 13609     075E  0839               	movf	setOperatingMode@mode,w
 13610     075F  00F1               	movwf	bitWrite@reg
 13611     0760  01F3               	clrf	bitWrite@position
 13612     0761  01F4               	clrf	bitWrite@value
 13613     0762  3188  2000  3187   	fcall	_bitWrite
 13614                           
 13615                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:         bitWrite(
      +                          mode, 1, 1);
 13616     0765  0140               	movlb	0	; select bank0
 13617     0766  083A               	movf	setOperatingMode@mode+1,w
 13618     0767  00F2               	movwf	bitWrite@reg+1
 13619     0768  0839               	movf	setOperatingMode@mode,w
 13620     0769  00F1               	movwf	bitWrite@reg
 13621     076A  01F3               	clrf	bitWrite@position
 13622     076B  0AF3               	incf	bitWrite@position,f
 13623     076C  01F4               	clrf	bitWrite@value
 13624     076D  0AF4               	incf	bitWrite@value,f
 13625     076E  3188  2000  3187   	fcall	_bitWrite
 13626     0771                     l13962:
 13627                           
 13628                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13629     0771  0140               	movlb	0	; select bank0
 13630     0772  0839               	movf	setOperatingMode@mode,w
 13631     0773  00A6               	movwf	writeRegister@data
 13632     0774  3001               	movlw	1
 13633     0775  3190  2016  3187   	fcall	_writeRegister
 13634                           
 13635                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:     } else if (op
      +                          Mode == 0X3)
 13636     0778  2F9D               	goto	l13970
 13637     0779                     l13964:
 13638     0779  3003               	movlw	3
 13639     077A  0638               	xorwf	setOperatingMode@opMode,w
 13640     077B  1D03               	btfss	3,2
 13641     077C  2F7E               	goto	u10861
 13642     077D  2F7F               	goto	u10860
 13643     077E                     u10861:
 13644     077E  2F9D               	goto	l2216
 13645     077F                     u10860:
 13646     077F                     l13966:
 13647                           
 13648                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:         bitWrite(mode, 0, 1);
 13649     077F  083A               	movf	setOperatingMode@mode+1,w
 13650     0780  00F2               	movwf	bitWrite@reg+1
 13651     0781  0839               	movf	setOperatingMode@mode,w
 13652     0782  00F1               	movwf	bitWrite@reg
 13653     0783  01F3               	clrf	bitWrite@position
 13654     0784  01F4               	clrf	bitWrite@value
 13655     0785  0AF4               	incf	bitWrite@value,f
 13656     0786  3188  2000  3187   	fcall	_bitWrite
 13657                           
 13658                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:         bitWrite(
      +                          mode, 1, 1);
 13659     0789  0140               	movlb	0	; select bank0
 13660     078A  083A               	movf	setOperatingMode@mode+1,w
 13661     078B  00F2               	movwf	bitWrite@reg+1
 13662     078C  0839               	movf	setOperatingMode@mode,w
 13663     078D  00F1               	movwf	bitWrite@reg
 13664     078E  01F3               	clrf	bitWrite@position
 13665     078F  0AF3               	incf	bitWrite@position,f
 13666     0790  01F4               	clrf	bitWrite@value
 13667     0791  0AF4               	incf	bitWrite@value,f
 13668     0792  3188  2000  3187   	fcall	_bitWrite
 13669     0795                     l13968:
 13670                           
 13671                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 558:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13672     0795  0140               	movlb	0	; select bank0
 13673     0796  0839               	movf	setOperatingMode@mode,w
 13674     0797  00A6               	movwf	writeRegister@data
 13675     0798  3001               	movlw	1
 13676     0799  3190  2016  3187   	fcall	_writeRegister
 13677     079C  2F9D               	goto	l13970
 13678     079D                     l2216:
 13679     079D                     l13970:
 13680                           
 13681                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13682     079D  318D  25E7  3187   	fcall	_getError
 13683     07A0                     l2220:
 13684     07A0  0008               	return
 13685     07A1                     __end_of_setOperatingMode:
 13686                           
 13687                           	psect	text6
 13688     00A8                     __ptext6:	
 13689 ;; *************** function _setMagneticChannel *****************
 13690 ;; Defined at:
 13691 ;;		line 582 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  channelMode     1    wreg     unsigned char 
 13694 ;; Auto vars:     Size  Location     Type
 13695 ;;  channelMode     1   24[BANK0 ] unsigned char 
 13696 ;;  mode            2   25[BANK0 ] unsigned short 
 13697 ;; Return value:  Size  Location     Type
 13698 ;;                  1    wreg      char 
 13699 ;; Registers used:
 13700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13707 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13709 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;Total ram usage:        5 bytes
 13711 ;; Hardware stack levels used: 1
 13712 ;; Hardware stack levels required when called: 17
 13713 ;; This function calls:
 13714 ;;		_bitWrite
 13715 ;;		_getError
 13716 ;;		_readRegister
 13717 ;;		_writeRegister
 13718 ;; This function is called by:
 13719 ;;		_begin
 13720 ;; This function uses a non-reentrant model
 13721 ;;
 13722                           
 13723     00A8                     _setMagneticChannel:	
 13724                           ;psect for function _setMagneticChannel
 13725                           
 13726                           
 13727                           ;incstack = 0
 13728 ;; hardware stack exceeded
 13729                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13730                           ;setMagneticChannel@channelMode stored from wreg
 13731     00A8  0140               	movlb	0	; select bank0
 13732     00A9  00B8               	movwf	setMagneticChannel@channelMode
 13733     00AA                     l13842:
 13734     00AA                     l13844:
 13735                           
 13736                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13737     00AA  3002               	movlw	2
 13738     00AB  3190  207A  3180   	fcall	_readRegister
 13739     00AE  0140               	movlb	0	; select bank0
 13740     00AF  00B6               	movwf	??_setMagneticChannel
 13741     00B0  01B7               	clrf	??_setMagneticChannel+1
 13742     00B1  0836               	movf	??_setMagneticChannel,w
 13743     00B2  00B9               	movwf	setMagneticChannel@mode
 13744     00B3  0837               	movf	??_setMagneticChannel+1,w
 13745     00B4  00BA               	movwf	setMagneticChannel@mode+1
 13746     00B5                     l13846:
 13747                           
 13748                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     if (channelMo
      +                          de == 0X0)
 13749     00B5  0838               	movf	setMagneticChannel@channelMode,w
 13750     00B6  1D03               	btfss	3,2
 13751     00B7  28B9               	goto	u10691
 13752     00B8  28BA               	goto	u10690
 13753     00B9                     u10691:
 13754     00B9  28ED               	goto	l13852
 13755     00BA                     u10690:
 13756     00BA                     l13848:
 13757                           
 13758                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite(mode, 4, 0);
 13759     00BA  083A               	movf	setMagneticChannel@mode+1,w
 13760     00BB  00F2               	movwf	bitWrite@reg+1
 13761     00BC  0839               	movf	setMagneticChannel@mode,w
 13762     00BD  00F1               	movwf	bitWrite@reg
 13763     00BE  3004               	movlw	4
 13764     00BF  00F3               	movwf	bitWrite@position
 13765     00C0  01F4               	clrf	bitWrite@value
 13766     00C1  3188  2000  3180   	fcall	_bitWrite
 13767                           
 13768                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite(
      +                          mode, 5, 0);
 13769     00C4  0140               	movlb	0	; select bank0
 13770     00C5  083A               	movf	setMagneticChannel@mode+1,w
 13771     00C6  00F2               	movwf	bitWrite@reg+1
 13772     00C7  0839               	movf	setMagneticChannel@mode,w
 13773     00C8  00F1               	movwf	bitWrite@reg
 13774     00C9  3005               	movlw	5
 13775     00CA  00F3               	movwf	bitWrite@position
 13776     00CB  01F4               	clrf	bitWrite@value
 13777     00CC  3188  2000  3180   	fcall	_bitWrite
 13778                           
 13779                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:         bitWrite(
      +                          mode, 6, 0);
 13780     00CF  0140               	movlb	0	; select bank0
 13781     00D0  083A               	movf	setMagneticChannel@mode+1,w
 13782     00D1  00F2               	movwf	bitWrite@reg+1
 13783     00D2  0839               	movf	setMagneticChannel@mode,w
 13784     00D3  00F1               	movwf	bitWrite@reg
 13785     00D4  3006               	movlw	6
 13786     00D5  00F3               	movwf	bitWrite@position
 13787     00D6  01F4               	clrf	bitWrite@value
 13788     00D7  3188  2000  3180   	fcall	_bitWrite
 13789                           
 13790                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:         bitWrite(
      +                          mode, 7, 0);
 13791     00DA  0140               	movlb	0	; select bank0
 13792     00DB  083A               	movf	setMagneticChannel@mode+1,w
 13793     00DC  00F2               	movwf	bitWrite@reg+1
 13794     00DD  0839               	movf	setMagneticChannel@mode,w
 13795     00DE  00F1               	movwf	bitWrite@reg
 13796     00DF  3007               	movlw	7
 13797     00E0  00F3               	movwf	bitWrite@position
 13798     00E1  01F4               	clrf	bitWrite@value
 13799     00E2  3188  2000  3180   	fcall	_bitWrite
 13800     00E5                     l13850:
 13801                           
 13802                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13803     00E5  0140               	movlb	0	; select bank0
 13804     00E6  0839               	movf	setMagneticChannel@mode,w
 13805     00E7  00A6               	movwf	writeRegister@data
 13806     00E8  3002               	movlw	2
 13807     00E9  3190  2016  3180   	fcall	_writeRegister
 13808                           
 13809                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:     } else if (ch
      +                          annelMode == 0X1)
 13810     00EC  2B73               	goto	l13918
 13811     00ED                     l13852:
 13812     00ED  0338               	decf	setMagneticChannel@channelMode,w
 13813     00EE  1D03               	btfss	3,2
 13814     00EF  28F1               	goto	u10701
 13815     00F0  28F2               	goto	u10700
 13816     00F1                     u10701:
 13817     00F1  2926               	goto	l13858
 13818     00F2                     u10700:
 13819     00F2                     l13854:
 13820                           
 13821                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         bitWrite(mode, 4, 1);
 13822     00F2  083A               	movf	setMagneticChannel@mode+1,w
 13823     00F3  00F2               	movwf	bitWrite@reg+1
 13824     00F4  0839               	movf	setMagneticChannel@mode,w
 13825     00F5  00F1               	movwf	bitWrite@reg
 13826     00F6  3004               	movlw	4
 13827     00F7  00F3               	movwf	bitWrite@position
 13828     00F8  01F4               	clrf	bitWrite@value
 13829     00F9  0AF4               	incf	bitWrite@value,f
 13830     00FA  3188  2000  3180   	fcall	_bitWrite
 13831                           
 13832                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:         bitWrite(
      +                          mode, 5, 0);
 13833     00FD  0140               	movlb	0	; select bank0
 13834     00FE  083A               	movf	setMagneticChannel@mode+1,w
 13835     00FF  00F2               	movwf	bitWrite@reg+1
 13836     0100  0839               	movf	setMagneticChannel@mode,w
 13837     0101  00F1               	movwf	bitWrite@reg
 13838     0102  3005               	movlw	5
 13839     0103  00F3               	movwf	bitWrite@position
 13840     0104  01F4               	clrf	bitWrite@value
 13841     0105  3188  2000  3180   	fcall	_bitWrite
 13842                           
 13843                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         bitWrite(
      +                          mode, 6, 0);
 13844     0108  0140               	movlb	0	; select bank0
 13845     0109  083A               	movf	setMagneticChannel@mode+1,w
 13846     010A  00F2               	movwf	bitWrite@reg+1
 13847     010B  0839               	movf	setMagneticChannel@mode,w
 13848     010C  00F1               	movwf	bitWrite@reg
 13849     010D  3006               	movlw	6
 13850     010E  00F3               	movwf	bitWrite@position
 13851     010F  01F4               	clrf	bitWrite@value
 13852     0110  3188  2000  3180   	fcall	_bitWrite
 13853                           
 13854                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(
      +                          mode, 7, 0);
 13855     0113  0140               	movlb	0	; select bank0
 13856     0114  083A               	movf	setMagneticChannel@mode+1,w
 13857     0115  00F2               	movwf	bitWrite@reg+1
 13858     0116  0839               	movf	setMagneticChannel@mode,w
 13859     0117  00F1               	movwf	bitWrite@reg
 13860     0118  3007               	movlw	7
 13861     0119  00F3               	movwf	bitWrite@position
 13862     011A  01F4               	clrf	bitWrite@value
 13863     011B  3188  2000  3180   	fcall	_bitWrite
 13864     011E                     l13856:
 13865                           
 13866                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13867     011E  0140               	movlb	0	; select bank0
 13868     011F  0839               	movf	setMagneticChannel@mode,w
 13869     0120  00A6               	movwf	writeRegister@data
 13870     0121  3002               	movlw	2
 13871     0122  3190  2016  3180   	fcall	_writeRegister
 13872                           
 13873                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:     } else if (ch
      +                          annelMode == 0X2)
 13874     0125  2B73               	goto	l13918
 13875     0126                     l13858:
 13876     0126  3002               	movlw	2
 13877     0127  0638               	xorwf	setMagneticChannel@channelMode,w
 13878     0128  1D03               	btfss	3,2
 13879     0129  292B               	goto	u10711
 13880     012A  292C               	goto	u10710
 13881     012B                     u10711:
 13882     012B  2960               	goto	l13864
 13883     012C                     u10710:
 13884     012C                     l13860:
 13885                           
 13886                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         bitWrite(mode, 4, 0);
 13887     012C  083A               	movf	setMagneticChannel@mode+1,w
 13888     012D  00F2               	movwf	bitWrite@reg+1
 13889     012E  0839               	movf	setMagneticChannel@mode,w
 13890     012F  00F1               	movwf	bitWrite@reg
 13891     0130  3004               	movlw	4
 13892     0131  00F3               	movwf	bitWrite@position
 13893     0132  01F4               	clrf	bitWrite@value
 13894     0133  3188  2000  3180   	fcall	_bitWrite
 13895                           
 13896                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite(
      +                          mode, 5, 1);
 13897     0136  0140               	movlb	0	; select bank0
 13898     0137  083A               	movf	setMagneticChannel@mode+1,w
 13899     0138  00F2               	movwf	bitWrite@reg+1
 13900     0139  0839               	movf	setMagneticChannel@mode,w
 13901     013A  00F1               	movwf	bitWrite@reg
 13902     013B  3005               	movlw	5
 13903     013C  00F3               	movwf	bitWrite@position
 13904     013D  01F4               	clrf	bitWrite@value
 13905     013E  0AF4               	incf	bitWrite@value,f
 13906     013F  3188  2000  3180   	fcall	_bitWrite
 13907                           
 13908                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite(
      +                          mode, 6, 0);
 13909     0142  0140               	movlb	0	; select bank0
 13910     0143  083A               	movf	setMagneticChannel@mode+1,w
 13911     0144  00F2               	movwf	bitWrite@reg+1
 13912     0145  0839               	movf	setMagneticChannel@mode,w
 13913     0146  00F1               	movwf	bitWrite@reg
 13914     0147  3006               	movlw	6
 13915     0148  00F3               	movwf	bitWrite@position
 13916     0149  01F4               	clrf	bitWrite@value
 13917     014A  3188  2000  3180   	fcall	_bitWrite
 13918                           
 13919                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(
      +                          mode, 7, 0);
 13920     014D  0140               	movlb	0	; select bank0
 13921     014E  083A               	movf	setMagneticChannel@mode+1,w
 13922     014F  00F2               	movwf	bitWrite@reg+1
 13923     0150  0839               	movf	setMagneticChannel@mode,w
 13924     0151  00F1               	movwf	bitWrite@reg
 13925     0152  3007               	movlw	7
 13926     0153  00F3               	movwf	bitWrite@position
 13927     0154  01F4               	clrf	bitWrite@value
 13928     0155  3188  2000  3180   	fcall	_bitWrite
 13929     0158                     l13862:
 13930                           
 13931                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13932     0158  0140               	movlb	0	; select bank0
 13933     0159  0839               	movf	setMagneticChannel@mode,w
 13934     015A  00A6               	movwf	writeRegister@data
 13935     015B  3002               	movlw	2
 13936     015C  3190  2016  3180   	fcall	_writeRegister
 13937                           
 13938                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:     } else if (ch
      +                          annelMode == 0X3)
 13939     015F  2B73               	goto	l13918
 13940     0160                     l13864:
 13941     0160  3003               	movlw	3
 13942     0161  0638               	xorwf	setMagneticChannel@channelMode,w
 13943     0162  1D03               	btfss	3,2
 13944     0163  2965               	goto	u10721
 13945     0164  2966               	goto	u10720
 13946     0165                     u10721:
 13947     0165  299B               	goto	l13870
 13948     0166                     u10720:
 13949     0166                     l13866:
 13950                           
 13951                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         bitWrite(mode, 4, 1);
 13952     0166  083A               	movf	setMagneticChannel@mode+1,w
 13953     0167  00F2               	movwf	bitWrite@reg+1
 13954     0168  0839               	movf	setMagneticChannel@mode,w
 13955     0169  00F1               	movwf	bitWrite@reg
 13956     016A  3004               	movlw	4
 13957     016B  00F3               	movwf	bitWrite@position
 13958     016C  01F4               	clrf	bitWrite@value
 13959     016D  0AF4               	incf	bitWrite@value,f
 13960     016E  3188  2000  3180   	fcall	_bitWrite
 13961                           
 13962                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite(
      +                          mode, 5, 1);
 13963     0171  0140               	movlb	0	; select bank0
 13964     0172  083A               	movf	setMagneticChannel@mode+1,w
 13965     0173  00F2               	movwf	bitWrite@reg+1
 13966     0174  0839               	movf	setMagneticChannel@mode,w
 13967     0175  00F1               	movwf	bitWrite@reg
 13968     0176  3005               	movlw	5
 13969     0177  00F3               	movwf	bitWrite@position
 13970     0178  01F4               	clrf	bitWrite@value
 13971     0179  0AF4               	incf	bitWrite@value,f
 13972     017A  3188  2000  3180   	fcall	_bitWrite
 13973                           
 13974                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite(
      +                          mode, 6, 0);
 13975     017D  0140               	movlb	0	; select bank0
 13976     017E  083A               	movf	setMagneticChannel@mode+1,w
 13977     017F  00F2               	movwf	bitWrite@reg+1
 13978     0180  0839               	movf	setMagneticChannel@mode,w
 13979     0181  00F1               	movwf	bitWrite@reg
 13980     0182  3006               	movlw	6
 13981     0183  00F3               	movwf	bitWrite@position
 13982     0184  01F4               	clrf	bitWrite@value
 13983     0185  3188  2000  3180   	fcall	_bitWrite
 13984                           
 13985                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(
      +                          mode, 7, 0);
 13986     0188  0140               	movlb	0	; select bank0
 13987     0189  083A               	movf	setMagneticChannel@mode+1,w
 13988     018A  00F2               	movwf	bitWrite@reg+1
 13989     018B  0839               	movf	setMagneticChannel@mode,w
 13990     018C  00F1               	movwf	bitWrite@reg
 13991     018D  3007               	movlw	7
 13992     018E  00F3               	movwf	bitWrite@position
 13993     018F  01F4               	clrf	bitWrite@value
 13994     0190  3188  2000  3180   	fcall	_bitWrite
 13995     0193                     l13868:
 13996                           
 13997                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13998     0193  0140               	movlb	0	; select bank0
 13999     0194  0839               	movf	setMagneticChannel@mode,w
 14000     0195  00A6               	movwf	writeRegister@data
 14001     0196  3002               	movlw	2
 14002     0197  3190  2016  3180   	fcall	_writeRegister
 14003                           
 14004                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:     } else if (ch
      +                          annelMode == 0X4)
 14005     019A  2B73               	goto	l13918
 14006     019B                     l13870:
 14007     019B  3004               	movlw	4
 14008     019C  0638               	xorwf	setMagneticChannel@channelMode,w
 14009     019D  1D03               	btfss	3,2
 14010     019E  29A0               	goto	u10731
 14011     019F  29A1               	goto	u10730
 14012     01A0                     u10731:
 14013     01A0  29D5               	goto	l13876
 14014     01A1                     u10730:
 14015     01A1                     l13872:
 14016                           
 14017                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         bitWrite(mode, 4, 0);
 14018     01A1  083A               	movf	setMagneticChannel@mode+1,w
 14019     01A2  00F2               	movwf	bitWrite@reg+1
 14020     01A3  0839               	movf	setMagneticChannel@mode,w
 14021     01A4  00F1               	movwf	bitWrite@reg
 14022     01A5  3004               	movlw	4
 14023     01A6  00F3               	movwf	bitWrite@position
 14024     01A7  01F4               	clrf	bitWrite@value
 14025     01A8  3188  2000  3180   	fcall	_bitWrite
 14026                           
 14027                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite(
      +                          mode, 5, 0);
 14028     01AB  0140               	movlb	0	; select bank0
 14029     01AC  083A               	movf	setMagneticChannel@mode+1,w
 14030     01AD  00F2               	movwf	bitWrite@reg+1
 14031     01AE  0839               	movf	setMagneticChannel@mode,w
 14032     01AF  00F1               	movwf	bitWrite@reg
 14033     01B0  3005               	movlw	5
 14034     01B1  00F3               	movwf	bitWrite@position
 14035     01B2  01F4               	clrf	bitWrite@value
 14036     01B3  3188  2000  3180   	fcall	_bitWrite
 14037                           
 14038                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite(
      +                          mode, 6, 1);
 14039     01B6  0140               	movlb	0	; select bank0
 14040     01B7  083A               	movf	setMagneticChannel@mode+1,w
 14041     01B8  00F2               	movwf	bitWrite@reg+1
 14042     01B9  0839               	movf	setMagneticChannel@mode,w
 14043     01BA  00F1               	movwf	bitWrite@reg
 14044     01BB  3006               	movlw	6
 14045     01BC  00F3               	movwf	bitWrite@position
 14046     01BD  01F4               	clrf	bitWrite@value
 14047     01BE  0AF4               	incf	bitWrite@value,f
 14048     01BF  3188  2000  3180   	fcall	_bitWrite
 14049                           
 14050                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(
      +                          mode, 7, 0);
 14051     01C2  0140               	movlb	0	; select bank0
 14052     01C3  083A               	movf	setMagneticChannel@mode+1,w
 14053     01C4  00F2               	movwf	bitWrite@reg+1
 14054     01C5  0839               	movf	setMagneticChannel@mode,w
 14055     01C6  00F1               	movwf	bitWrite@reg
 14056     01C7  3007               	movlw	7
 14057     01C8  00F3               	movwf	bitWrite@position
 14058     01C9  01F4               	clrf	bitWrite@value
 14059     01CA  3188  2000  3180   	fcall	_bitWrite
 14060     01CD                     l13874:
 14061                           
 14062                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14063     01CD  0140               	movlb	0	; select bank0
 14064     01CE  0839               	movf	setMagneticChannel@mode,w
 14065     01CF  00A6               	movwf	writeRegister@data
 14066     01D0  3002               	movlw	2
 14067     01D1  3190  2016  3180   	fcall	_writeRegister
 14068                           
 14069                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:     } else if (ch
      +                          annelMode == 0X5)
 14070     01D4  2B73               	goto	l13918
 14071     01D5                     l13876:
 14072     01D5  3005               	movlw	5
 14073     01D6  0638               	xorwf	setMagneticChannel@channelMode,w
 14074     01D7  1D03               	btfss	3,2
 14075     01D8  29DA               	goto	u10741
 14076     01D9  29DB               	goto	u10740
 14077     01DA                     u10741:
 14078     01DA  2A10               	goto	l13882
 14079     01DB                     u10740:
 14080     01DB                     l13878:
 14081                           
 14082                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         bitWrite(mode, 4, 1);
 14083     01DB  083A               	movf	setMagneticChannel@mode+1,w
 14084     01DC  00F2               	movwf	bitWrite@reg+1
 14085     01DD  0839               	movf	setMagneticChannel@mode,w
 14086     01DE  00F1               	movwf	bitWrite@reg
 14087     01DF  3004               	movlw	4
 14088     01E0  00F3               	movwf	bitWrite@position
 14089     01E1  01F4               	clrf	bitWrite@value
 14090     01E2  0AF4               	incf	bitWrite@value,f
 14091     01E3  3188  2000  3180   	fcall	_bitWrite
 14092                           
 14093                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite(
      +                          mode, 5, 0);
 14094     01E6  0140               	movlb	0	; select bank0
 14095     01E7  083A               	movf	setMagneticChannel@mode+1,w
 14096     01E8  00F2               	movwf	bitWrite@reg+1
 14097     01E9  0839               	movf	setMagneticChannel@mode,w
 14098     01EA  00F1               	movwf	bitWrite@reg
 14099     01EB  3005               	movlw	5
 14100     01EC  00F3               	movwf	bitWrite@position
 14101     01ED  01F4               	clrf	bitWrite@value
 14102     01EE  3188  2000  3180   	fcall	_bitWrite
 14103                           
 14104                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite(
      +                          mode, 6, 1);
 14105     01F1  0140               	movlb	0	; select bank0
 14106     01F2  083A               	movf	setMagneticChannel@mode+1,w
 14107     01F3  00F2               	movwf	bitWrite@reg+1
 14108     01F4  0839               	movf	setMagneticChannel@mode,w
 14109     01F5  00F1               	movwf	bitWrite@reg
 14110     01F6  3006               	movlw	6
 14111     01F7  00F3               	movwf	bitWrite@position
 14112     01F8  01F4               	clrf	bitWrite@value
 14113     01F9  0AF4               	incf	bitWrite@value,f
 14114     01FA  3188  2000  3180   	fcall	_bitWrite
 14115                           
 14116                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(
      +                          mode, 7, 0);
 14117     01FD  0140               	movlb	0	; select bank0
 14118     01FE  083A               	movf	setMagneticChannel@mode+1,w
 14119     01FF  00F2               	movwf	bitWrite@reg+1
 14120     0200  0839               	movf	setMagneticChannel@mode,w
 14121     0201  00F1               	movwf	bitWrite@reg
 14122     0202  3007               	movlw	7
 14123     0203  00F3               	movwf	bitWrite@position
 14124     0204  01F4               	clrf	bitWrite@value
 14125     0205  3188  2000  3180   	fcall	_bitWrite
 14126     0208                     l13880:
 14127                           
 14128                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14129     0208  0140               	movlb	0	; select bank0
 14130     0209  0839               	movf	setMagneticChannel@mode,w
 14131     020A  00A6               	movwf	writeRegister@data
 14132     020B  3002               	movlw	2
 14133     020C  3190  2016  3180   	fcall	_writeRegister
 14134                           
 14135                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:     } else if (ch
      +                          annelMode == 0X6)
 14136     020F  2B73               	goto	l13918
 14137     0210                     l13882:
 14138     0210  3006               	movlw	6
 14139     0211  0638               	xorwf	setMagneticChannel@channelMode,w
 14140     0212  1D03               	btfss	3,2
 14141     0213  2A15               	goto	u10751
 14142     0214  2A16               	goto	u10750
 14143     0215                     u10751:
 14144     0215  2A4B               	goto	l13888
 14145     0216                     u10750:
 14146     0216                     l13884:
 14147                           
 14148                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         bitWrite(mode, 4, 0);
 14149     0216  083A               	movf	setMagneticChannel@mode+1,w
 14150     0217  00F2               	movwf	bitWrite@reg+1
 14151     0218  0839               	movf	setMagneticChannel@mode,w
 14152     0219  00F1               	movwf	bitWrite@reg
 14153     021A  3004               	movlw	4
 14154     021B  00F3               	movwf	bitWrite@position
 14155     021C  01F4               	clrf	bitWrite@value
 14156     021D  3188  2000  3180   	fcall	_bitWrite
 14157                           
 14158                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite(
      +                          mode, 5, 1);
 14159     0220  0140               	movlb	0	; select bank0
 14160     0221  083A               	movf	setMagneticChannel@mode+1,w
 14161     0222  00F2               	movwf	bitWrite@reg+1
 14162     0223  0839               	movf	setMagneticChannel@mode,w
 14163     0224  00F1               	movwf	bitWrite@reg
 14164     0225  3005               	movlw	5
 14165     0226  00F3               	movwf	bitWrite@position
 14166     0227  01F4               	clrf	bitWrite@value
 14167     0228  0AF4               	incf	bitWrite@value,f
 14168     0229  3188  2000  3180   	fcall	_bitWrite
 14169                           
 14170                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite(
      +                          mode, 6, 1);
 14171     022C  0140               	movlb	0	; select bank0
 14172     022D  083A               	movf	setMagneticChannel@mode+1,w
 14173     022E  00F2               	movwf	bitWrite@reg+1
 14174     022F  0839               	movf	setMagneticChannel@mode,w
 14175     0230  00F1               	movwf	bitWrite@reg
 14176     0231  3006               	movlw	6
 14177     0232  00F3               	movwf	bitWrite@position
 14178     0233  01F4               	clrf	bitWrite@value
 14179     0234  0AF4               	incf	bitWrite@value,f
 14180     0235  3188  2000  3180   	fcall	_bitWrite
 14181                           
 14182                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(
      +                          mode, 7, 0);
 14183     0238  0140               	movlb	0	; select bank0
 14184     0239  083A               	movf	setMagneticChannel@mode+1,w
 14185     023A  00F2               	movwf	bitWrite@reg+1
 14186     023B  0839               	movf	setMagneticChannel@mode,w
 14187     023C  00F1               	movwf	bitWrite@reg
 14188     023D  3007               	movlw	7
 14189     023E  00F3               	movwf	bitWrite@position
 14190     023F  01F4               	clrf	bitWrite@value
 14191     0240  3188  2000  3180   	fcall	_bitWrite
 14192     0243                     l13886:
 14193                           
 14194                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14195     0243  0140               	movlb	0	; select bank0
 14196     0244  0839               	movf	setMagneticChannel@mode,w
 14197     0245  00A6               	movwf	writeRegister@data
 14198     0246  3002               	movlw	2
 14199     0247  3190  2016  3180   	fcall	_writeRegister
 14200                           
 14201                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:     } else if (ch
      +                          annelMode == 0X7)
 14202     024A  2B73               	goto	l13918
 14203     024B                     l13888:
 14204     024B  3007               	movlw	7
 14205     024C  0638               	xorwf	setMagneticChannel@channelMode,w
 14206     024D  1D03               	btfss	3,2
 14207     024E  2A50               	goto	u10761
 14208     024F  2A51               	goto	u10760
 14209     0250                     u10761:
 14210     0250  2A87               	goto	l13894
 14211     0251                     u10760:
 14212     0251                     l13890:
 14213                           
 14214                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         bitWrite(mode, 4, 1);
 14215     0251  083A               	movf	setMagneticChannel@mode+1,w
 14216     0252  00F2               	movwf	bitWrite@reg+1
 14217     0253  0839               	movf	setMagneticChannel@mode,w
 14218     0254  00F1               	movwf	bitWrite@reg
 14219     0255  3004               	movlw	4
 14220     0256  00F3               	movwf	bitWrite@position
 14221     0257  01F4               	clrf	bitWrite@value
 14222     0258  0AF4               	incf	bitWrite@value,f
 14223     0259  3188  2000  3180   	fcall	_bitWrite
 14224                           
 14225                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite(
      +                          mode, 5, 1);
 14226     025C  0140               	movlb	0	; select bank0
 14227     025D  083A               	movf	setMagneticChannel@mode+1,w
 14228     025E  00F2               	movwf	bitWrite@reg+1
 14229     025F  0839               	movf	setMagneticChannel@mode,w
 14230     0260  00F1               	movwf	bitWrite@reg
 14231     0261  3005               	movlw	5
 14232     0262  00F3               	movwf	bitWrite@position
 14233     0263  01F4               	clrf	bitWrite@value
 14234     0264  0AF4               	incf	bitWrite@value,f
 14235     0265  3188  2000  3180   	fcall	_bitWrite
 14236                           
 14237                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite(
      +                          mode, 6, 1);
 14238     0268  0140               	movlb	0	; select bank0
 14239     0269  083A               	movf	setMagneticChannel@mode+1,w
 14240     026A  00F2               	movwf	bitWrite@reg+1
 14241     026B  0839               	movf	setMagneticChannel@mode,w
 14242     026C  00F1               	movwf	bitWrite@reg
 14243     026D  3006               	movlw	6
 14244     026E  00F3               	movwf	bitWrite@position
 14245     026F  01F4               	clrf	bitWrite@value
 14246     0270  0AF4               	incf	bitWrite@value,f
 14247     0271  3188  2000  3180   	fcall	_bitWrite
 14248                           
 14249                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(
      +                          mode, 7, 0);
 14250     0274  0140               	movlb	0	; select bank0
 14251     0275  083A               	movf	setMagneticChannel@mode+1,w
 14252     0276  00F2               	movwf	bitWrite@reg+1
 14253     0277  0839               	movf	setMagneticChannel@mode,w
 14254     0278  00F1               	movwf	bitWrite@reg
 14255     0279  3007               	movlw	7
 14256     027A  00F3               	movwf	bitWrite@position
 14257     027B  01F4               	clrf	bitWrite@value
 14258     027C  3188  2000  3180   	fcall	_bitWrite
 14259     027F                     l13892:
 14260                           
 14261                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14262     027F  0140               	movlb	0	; select bank0
 14263     0280  0839               	movf	setMagneticChannel@mode,w
 14264     0281  00A6               	movwf	writeRegister@data
 14265     0282  3002               	movlw	2
 14266     0283  3190  2016  3180   	fcall	_writeRegister
 14267                           
 14268                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:     } else if (ch
      +                          annelMode == 0X8)
 14269     0286  2B73               	goto	l13918
 14270     0287                     l13894:
 14271     0287  3008               	movlw	8
 14272     0288  0638               	xorwf	setMagneticChannel@channelMode,w
 14273     0289  1D03               	btfss	3,2
 14274     028A  2A8C               	goto	u10771
 14275     028B  2A8D               	goto	u10770
 14276     028C                     u10771:
 14277     028C  2AC1               	goto	l13900
 14278     028D                     u10770:
 14279     028D                     l13896:
 14280                           
 14281                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         bitWrite(mode, 4, 0);
 14282     028D  083A               	movf	setMagneticChannel@mode+1,w
 14283     028E  00F2               	movwf	bitWrite@reg+1
 14284     028F  0839               	movf	setMagneticChannel@mode,w
 14285     0290  00F1               	movwf	bitWrite@reg
 14286     0291  3004               	movlw	4
 14287     0292  00F3               	movwf	bitWrite@position
 14288     0293  01F4               	clrf	bitWrite@value
 14289     0294  3188  2000  3180   	fcall	_bitWrite
 14290                           
 14291                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:         bitWrite(
      +                          mode, 5, 0);
 14292     0297  0140               	movlb	0	; select bank0
 14293     0298  083A               	movf	setMagneticChannel@mode+1,w
 14294     0299  00F2               	movwf	bitWrite@reg+1
 14295     029A  0839               	movf	setMagneticChannel@mode,w
 14296     029B  00F1               	movwf	bitWrite@reg
 14297     029C  3005               	movlw	5
 14298     029D  00F3               	movwf	bitWrite@position
 14299     029E  01F4               	clrf	bitWrite@value
 14300     029F  3188  2000  3180   	fcall	_bitWrite
 14301                           
 14302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:         bitWrite(
      +                          mode, 6, 0);
 14303     02A2  0140               	movlb	0	; select bank0
 14304     02A3  083A               	movf	setMagneticChannel@mode+1,w
 14305     02A4  00F2               	movwf	bitWrite@reg+1
 14306     02A5  0839               	movf	setMagneticChannel@mode,w
 14307     02A6  00F1               	movwf	bitWrite@reg
 14308     02A7  3006               	movlw	6
 14309     02A8  00F3               	movwf	bitWrite@position
 14310     02A9  01F4               	clrf	bitWrite@value
 14311     02AA  3188  2000  3180   	fcall	_bitWrite
 14312                           
 14313                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite(
      +                          mode, 7, 1);
 14314     02AD  0140               	movlb	0	; select bank0
 14315     02AE  083A               	movf	setMagneticChannel@mode+1,w
 14316     02AF  00F2               	movwf	bitWrite@reg+1
 14317     02B0  0839               	movf	setMagneticChannel@mode,w
 14318     02B1  00F1               	movwf	bitWrite@reg
 14319     02B2  3007               	movlw	7
 14320     02B3  00F3               	movwf	bitWrite@position
 14321     02B4  01F4               	clrf	bitWrite@value
 14322     02B5  0AF4               	incf	bitWrite@value,f
 14323     02B6  3188  2000  3180   	fcall	_bitWrite
 14324     02B9                     l13898:
 14325                           
 14326                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14327     02B9  0140               	movlb	0	; select bank0
 14328     02BA  0839               	movf	setMagneticChannel@mode,w
 14329     02BB  00A6               	movwf	writeRegister@data
 14330     02BC  3002               	movlw	2
 14331     02BD  3190  2016  3180   	fcall	_writeRegister
 14332                           
 14333                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:     } else if (ch
      +                          annelMode == 0X9)
 14334     02C0  2B73               	goto	l13918
 14335     02C1                     l13900:
 14336     02C1  3009               	movlw	9
 14337     02C2  0638               	xorwf	setMagneticChannel@channelMode,w
 14338     02C3  1D03               	btfss	3,2
 14339     02C4  2AC6               	goto	u10781
 14340     02C5  2AC7               	goto	u10780
 14341     02C6                     u10781:
 14342     02C6  2AFC               	goto	l13906
 14343     02C7                     u10780:
 14344     02C7                     l13902:
 14345                           
 14346                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         bitWrite(mode, 4, 1);
 14347     02C7  083A               	movf	setMagneticChannel@mode+1,w
 14348     02C8  00F2               	movwf	bitWrite@reg+1
 14349     02C9  0839               	movf	setMagneticChannel@mode,w
 14350     02CA  00F1               	movwf	bitWrite@reg
 14351     02CB  3004               	movlw	4
 14352     02CC  00F3               	movwf	bitWrite@position
 14353     02CD  01F4               	clrf	bitWrite@value
 14354     02CE  0AF4               	incf	bitWrite@value,f
 14355     02CF  3188  2000  3180   	fcall	_bitWrite
 14356                           
 14357                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:         bitWrite(
      +                          mode, 5, 0);
 14358     02D2  0140               	movlb	0	; select bank0
 14359     02D3  083A               	movf	setMagneticChannel@mode+1,w
 14360     02D4  00F2               	movwf	bitWrite@reg+1
 14361     02D5  0839               	movf	setMagneticChannel@mode,w
 14362     02D6  00F1               	movwf	bitWrite@reg
 14363     02D7  3005               	movlw	5
 14364     02D8  00F3               	movwf	bitWrite@position
 14365     02D9  01F4               	clrf	bitWrite@value
 14366     02DA  3188  2000  3180   	fcall	_bitWrite
 14367                           
 14368                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:         bitWrite(
      +                          mode, 6, 0);
 14369     02DD  0140               	movlb	0	; select bank0
 14370     02DE  083A               	movf	setMagneticChannel@mode+1,w
 14371     02DF  00F2               	movwf	bitWrite@reg+1
 14372     02E0  0839               	movf	setMagneticChannel@mode,w
 14373     02E1  00F1               	movwf	bitWrite@reg
 14374     02E2  3006               	movlw	6
 14375     02E3  00F3               	movwf	bitWrite@position
 14376     02E4  01F4               	clrf	bitWrite@value
 14377     02E5  3188  2000  3180   	fcall	_bitWrite
 14378                           
 14379                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite(
      +                          mode, 7, 1);
 14380     02E8  0140               	movlb	0	; select bank0
 14381     02E9  083A               	movf	setMagneticChannel@mode+1,w
 14382     02EA  00F2               	movwf	bitWrite@reg+1
 14383     02EB  0839               	movf	setMagneticChannel@mode,w
 14384     02EC  00F1               	movwf	bitWrite@reg
 14385     02ED  3007               	movlw	7
 14386     02EE  00F3               	movwf	bitWrite@position
 14387     02EF  01F4               	clrf	bitWrite@value
 14388     02F0  0AF4               	incf	bitWrite@value,f
 14389     02F1  3188  2000  3180   	fcall	_bitWrite
 14390     02F4                     l13904:
 14391                           
 14392                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14393     02F4  0140               	movlb	0	; select bank0
 14394     02F5  0839               	movf	setMagneticChannel@mode,w
 14395     02F6  00A6               	movwf	writeRegister@data
 14396     02F7  3002               	movlw	2
 14397     02F8  3190  2016  3180   	fcall	_writeRegister
 14398                           
 14399                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:     } else if (ch
      +                          annelMode == 0XA)
 14400     02FB  2B73               	goto	l13918
 14401     02FC                     l13906:
 14402     02FC  300A               	movlw	10
 14403     02FD  0638               	xorwf	setMagneticChannel@channelMode,w
 14404     02FE  1D03               	btfss	3,2
 14405     02FF  2B01               	goto	u10791
 14406     0300  2B02               	goto	u10790
 14407     0301                     u10791:
 14408     0301  2B37               	goto	l13912
 14409     0302                     u10790:
 14410     0302                     l13908:
 14411                           
 14412                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         bitWrite(mode, 4, 0);
 14413     0302  083A               	movf	setMagneticChannel@mode+1,w
 14414     0303  00F2               	movwf	bitWrite@reg+1
 14415     0304  0839               	movf	setMagneticChannel@mode,w
 14416     0305  00F1               	movwf	bitWrite@reg
 14417     0306  3004               	movlw	4
 14418     0307  00F3               	movwf	bitWrite@position
 14419     0308  01F4               	clrf	bitWrite@value
 14420     0309  3188  2000  3180   	fcall	_bitWrite
 14421                           
 14422                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:         bitWrite(
      +                          mode, 5, 1);
 14423     030C  0140               	movlb	0	; select bank0
 14424     030D  083A               	movf	setMagneticChannel@mode+1,w
 14425     030E  00F2               	movwf	bitWrite@reg+1
 14426     030F  0839               	movf	setMagneticChannel@mode,w
 14427     0310  00F1               	movwf	bitWrite@reg
 14428     0311  3005               	movlw	5
 14429     0312  00F3               	movwf	bitWrite@position
 14430     0313  01F4               	clrf	bitWrite@value
 14431     0314  0AF4               	incf	bitWrite@value,f
 14432     0315  3188  2000  3180   	fcall	_bitWrite
 14433                           
 14434                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:         bitWrite(
      +                          mode, 6, 0);
 14435     0318  0140               	movlb	0	; select bank0
 14436     0319  083A               	movf	setMagneticChannel@mode+1,w
 14437     031A  00F2               	movwf	bitWrite@reg+1
 14438     031B  0839               	movf	setMagneticChannel@mode,w
 14439     031C  00F1               	movwf	bitWrite@reg
 14440     031D  3006               	movlw	6
 14441     031E  00F3               	movwf	bitWrite@position
 14442     031F  01F4               	clrf	bitWrite@value
 14443     0320  3188  2000  3180   	fcall	_bitWrite
 14444                           
 14445                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite(
      +                          mode, 7, 1);
 14446     0323  0140               	movlb	0	; select bank0
 14447     0324  083A               	movf	setMagneticChannel@mode+1,w
 14448     0325  00F2               	movwf	bitWrite@reg+1
 14449     0326  0839               	movf	setMagneticChannel@mode,w
 14450     0327  00F1               	movwf	bitWrite@reg
 14451     0328  3007               	movlw	7
 14452     0329  00F3               	movwf	bitWrite@position
 14453     032A  01F4               	clrf	bitWrite@value
 14454     032B  0AF4               	incf	bitWrite@value,f
 14455     032C  3188  2000  3180   	fcall	_bitWrite
 14456     032F                     l13910:
 14457                           
 14458                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14459     032F  0140               	movlb	0	; select bank0
 14460     0330  0839               	movf	setMagneticChannel@mode,w
 14461     0331  00A6               	movwf	writeRegister@data
 14462     0332  3002               	movlw	2
 14463     0333  3190  2016  3180   	fcall	_writeRegister
 14464                           
 14465                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:     } else if (ch
      +                          annelMode == 0XB)
 14466     0336  2B73               	goto	l13918
 14467     0337                     l13912:
 14468     0337  300B               	movlw	11
 14469     0338  0638               	xorwf	setMagneticChannel@channelMode,w
 14470     0339  1D03               	btfss	3,2
 14471     033A  2B3C               	goto	u10801
 14472     033B  2B3D               	goto	u10800
 14473     033C                     u10801:
 14474     033C  2B73               	goto	l2240
 14475     033D                     u10800:
 14476     033D                     l13914:
 14477                           
 14478                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         bitWrite(mode, 4, 1);
 14479     033D  083A               	movf	setMagneticChannel@mode+1,w
 14480     033E  00F2               	movwf	bitWrite@reg+1
 14481     033F  0839               	movf	setMagneticChannel@mode,w
 14482     0340  00F1               	movwf	bitWrite@reg
 14483     0341  3004               	movlw	4
 14484     0342  00F3               	movwf	bitWrite@position
 14485     0343  01F4               	clrf	bitWrite@value
 14486     0344  0AF4               	incf	bitWrite@value,f
 14487     0345  3188  2000  3180   	fcall	_bitWrite
 14488                           
 14489                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:         bitWrite(
      +                          mode, 5, 1);
 14490     0348  0140               	movlb	0	; select bank0
 14491     0349  083A               	movf	setMagneticChannel@mode+1,w
 14492     034A  00F2               	movwf	bitWrite@reg+1
 14493     034B  0839               	movf	setMagneticChannel@mode,w
 14494     034C  00F1               	movwf	bitWrite@reg
 14495     034D  3005               	movlw	5
 14496     034E  00F3               	movwf	bitWrite@position
 14497     034F  01F4               	clrf	bitWrite@value
 14498     0350  0AF4               	incf	bitWrite@value,f
 14499     0351  3188  2000  3180   	fcall	_bitWrite
 14500                           
 14501                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:         bitWrite(
      +                          mode, 6, 0);
 14502     0354  0140               	movlb	0	; select bank0
 14503     0355  083A               	movf	setMagneticChannel@mode+1,w
 14504     0356  00F2               	movwf	bitWrite@reg+1
 14505     0357  0839               	movf	setMagneticChannel@mode,w
 14506     0358  00F1               	movwf	bitWrite@reg
 14507     0359  3006               	movlw	6
 14508     035A  00F3               	movwf	bitWrite@position
 14509     035B  01F4               	clrf	bitWrite@value
 14510     035C  3188  2000  3180   	fcall	_bitWrite
 14511                           
 14512                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         bitWrite(
      +                          mode, 7, 1);
 14513     035F  0140               	movlb	0	; select bank0
 14514     0360  083A               	movf	setMagneticChannel@mode+1,w
 14515     0361  00F2               	movwf	bitWrite@reg+1
 14516     0362  0839               	movf	setMagneticChannel@mode,w
 14517     0363  00F1               	movwf	bitWrite@reg
 14518     0364  3007               	movlw	7
 14519     0365  00F3               	movwf	bitWrite@position
 14520     0366  01F4               	clrf	bitWrite@value
 14521     0367  0AF4               	incf	bitWrite@value,f
 14522     0368  3188  2000  3180   	fcall	_bitWrite
 14523     036B                     l13916:
 14524                           
 14525                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 676:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14526     036B  0140               	movlb	0	; select bank0
 14527     036C  0839               	movf	setMagneticChannel@mode,w
 14528     036D  00A6               	movwf	writeRegister@data
 14529     036E  3002               	movlw	2
 14530     036F  3190  2016  3180   	fcall	_writeRegister
 14531     0372  2B73               	goto	l13918
 14532     0373                     l2240:
 14533     0373                     l13918:
 14534                           
 14535                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 679:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14536     0373  318D  25E7  3180   	fcall	_getError
 14537     0376                     l2246:
 14538     0376  0008               	return
 14539     0377                     __end_of_setMagneticChannel:
 14540                           
 14541                           	psect	text7
 14542     1016                     __ptext7:	
 14543 ;; *************** function _writeRegister *****************
 14544 ;; Defined at:
 14545 ;;		line 182 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  regAddress      1    wreg     unsigned char 
 14548 ;;  data            1    6[BANK0 ] unsigned char 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14551 ;; Return value:  Size  Location     Type
 14552 ;;                  1    wreg      unsigned char 
 14553 ;; Registers used:
 14554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14555 ;; Tracked objects:
 14556 ;;		On entry : 0/0
 14557 ;;		On exit  : 0/0
 14558 ;;		Unchanged: 0/0
 14559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14560 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14564 ;;Total ram usage:        2 bytes
 14565 ;; Hardware stack levels used: 1
 14566 ;; Hardware stack levels required when called: 13
 14567 ;; This function calls:
 14568 ;;		_i2c_write1ByteRegister
 14569 ;; This function is called by:
 14570 ;;		_setOperatingMode
 14571 ;;		_setMagneticChannel
 14572 ;;		_setXYAxisRange
 14573 ;;		_setZAxisRange
 14574 ;;		_setTemperatureEn
 14575 ;;		_setupWakeUpAndSleep
 14576 ;;		_setCRCMode
 14577 ;;		_setMagTemp
 14578 ;;		_setConvAvg
 14579 ;;		_setIntThreshold
 14580 ;;		_setLowPower
 14581 ;;		_setGlitchFilter
 14582 ;;		_setTriggerMode
 14583 ;;		_setSleeptime
 14584 ;;		_setMagDir
 14585 ;;		_setMagnitudeGain
 14586 ;;		_setMagneticGain
 14587 ;;		_setMagneticOffset1
 14588 ;;		_setMagneticOffset2
 14589 ;;		_setAngleEn
 14590 ;;		_setXThreshold
 14591 ;;		_setYThreshold
 14592 ;;		_setZThreshold
 14593 ;;		_setTemperatureThreshold
 14594 ;;		_setInterruptResult
 14595 ;;		_setThresholdEn
 14596 ;;		_setIntPinState
 14597 ;;		_setInterruptMode
 14598 ;;		_setMaskInterrupt
 14599 ;;		_setI2CAddress
 14600 ;;		_setI2CAddressEN
 14601 ;; This function uses a non-reentrant model
 14602 ;;
 14603                           
 14604     1016                     _writeRegister:	
 14605                           ;psect for function _writeRegister
 14606                           
 14607                           
 14608                           ;incstack = 0
 14609                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14610                           ;writeRegister@regAddress stored from wreg
 14611     1016  0140               	movlb	0	; select bank0
 14612     1017  00A7               	movwf	writeRegister@regAddress
 14613     1018                     l13550:
 14614                           
 14615                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 185:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14616     1018  0827               	movf	writeRegister@regAddress,w
 14617     1019  00A4               	movwf	i2c_write1ByteRegister@reg
 14618     101A  0826               	movf	writeRegister@data,w
 14619     101B  00A5               	movwf	i2c_write1ByteRegister@data
 14620     101C  3022               	movlw	34
 14621     101D  3197  2700  3190   	fcall	_i2c_write1ByteRegister
 14622     1020                     l2139:
 14623     1020  0008               	return
 14624     1021                     __end_of_writeRegister:
 14625                           
 14626                           	psect	text8
 14627     1700                     __ptext8:	
 14628 ;; *************** function _i2c_write1ByteRegister *****************
 14629 ;; Defined at:
 14630 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  address         1    wreg     unsigned char 
 14633 ;;  reg             1    4[BANK0 ] unsigned char 
 14634 ;;  data            1    5[BANK0 ] unsigned char 
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  address         1   11[COMMON] unsigned char 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;Total ram usage:        3 bytes
 14651 ;; Hardware stack levels used: 1
 14652 ;; Hardware stack levels required when called: 12
 14653 ;; This function calls:
 14654 ;;		_I2C1_Close
 14655 ;;		_I2C1_MasterWrite
 14656 ;;		_I2C1_Open
 14657 ;;		_I2C1_SetAddressNackCallback
 14658 ;;		_I2C1_SetBuffer
 14659 ;;		_I2C1_SetDataCompleteCallback
 14660 ;; This function is called by:
 14661 ;;		_writeRegister
 14662 ;;		_BMA253_Initialize
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666     1700                     _i2c_write1ByteRegister:	
 14667                           ;psect for function _i2c_write1ByteRegister
 14668                           
 14669                           
 14670                           ;incstack = 0
 14671                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14672                           ;i2c_write1ByteRegister@address stored from wreg
 14673     1700  00FB               	movwf	i2c_write1ByteRegister@address
 14674     1701                     l13318:
 14675     1701                     l13320:	
 14676                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14677                           
 14678     1701  087B               	movf	i2c_write1ByteRegister@address,w
 14679     1702  3197  27CA  3197   	fcall	_I2C1_Open
 14680     1705  3A00               	xorlw	0
 14681     1706  1903               	skipnz
 14682     1707  2F09               	goto	u10191
 14683     1708  2F0A               	goto	u10190
 14684     1709                     u10191:
 14685     1709  2F01               	goto	l13320
 14686     170A                     u10190:
 14687     170A                     l13322:
 14688                           
 14689                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14690     170A  30D5               	movlw	low _wr1RegCompleteHandler
 14691     170B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14692     170C  3010               	movlw	high _wr1RegCompleteHandler
 14693     170D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14694     170E  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14695     170F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14696     1710  319F  27EA  3197   	fcall	_I2C1_SetDataCompleteCallback
 14697     1713                     l13324:
 14698                           
 14699                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14700     1713  3001               	movlw	1
 14701     1714  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14702     1715  3000               	movlw	0
 14703     1716  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14704     1717  3024               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14705     1718  3190  206C  3197   	fcall	_I2C1_SetBuffer
 14706     171B                     l13326:
 14707                           
 14708                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14709     171B  3000               	movlw	0
 14710     171C  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14711     171D  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14712     171E  3000               	movlw	0
 14713     171F  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14714     1720  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14715     1721  319F  27F5  3197   	fcall	_I2C1_SetAddressNackCallback
 14716     1724                     l13328:
 14717                           
 14718                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14719     1724  319E  26EC  3197   	fcall	_I2C1_MasterWrite
 14720     1727                     l13330:	
 14721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14722                           
 14723     1727  3192  2255  3197   	fcall	_I2C1_Close
 14724     172A  3A01               	xorlw	1
 14725     172B  1903               	skipnz
 14726     172C  2F2E               	goto	u10201
 14727     172D  2F2F               	goto	u10200
 14728     172E                     u10201:
 14729     172E  2F27               	goto	l13330
 14730     172F                     u10200:
 14731     172F                     l510:
 14732     172F  0008               	return
 14733     1730                     __end_of_i2c_write1ByteRegister:
 14734                           
 14735                           	psect	text9
 14736     0DE7                     __ptext9:	
 14737 ;; *************** function _getError *****************
 14738 ;; Defined at:
 14739 ;;		line 2314 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;		None
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  statusReg       1   21[BANK0 ] unsigned char 
 14744 ;;  oscillatorEr    1   20[BANK0 ] unsigned char 
 14745 ;;  intPinError     1   19[BANK0 ] unsigned char 
 14746 ;;  otpCrcError     1   18[BANK0 ] unsigned char 
 14747 ;;  undervoltage    1   17[BANK0 ] unsigned char 
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  1    wreg      char 
 14750 ;; Registers used:
 14751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14758 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14760 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14761 ;;Total ram usage:        7 bytes
 14762 ;; Hardware stack levels used: 1
 14763 ;; Hardware stack levels required when called: 16
 14764 ;; This function calls:
 14765 ;;		_bitRead
 14766 ;;		_getDeviceStatus
 14767 ;; This function is called by:
 14768 ;;		_begin
 14769 ;;		_setOperatingMode
 14770 ;;		_setMagneticChannel
 14771 ;;		_setXYAxisRange
 14772 ;;		_setZAxisRange
 14773 ;;		_setTemperatureEn
 14774 ;;		_setupWakeUpAndSleep
 14775 ;;		_readWakeUpAndSleepData
 14776 ;;		_setCRCMode
 14777 ;;		_setMagTemp
 14778 ;;		_setConvAvg
 14779 ;;		_setReadMode
 14780 ;;		_setIntThreshold
 14781 ;;		_setLowPower
 14782 ;;		_setGlitchFilter
 14783 ;;		_setTriggerMode
 14784 ;;		_setSleeptime
 14785 ;;		_setMagDir
 14786 ;;		_setMagnitudeGain
 14787 ;;		_setMagneticGain
 14788 ;;		_setMagneticOffset1
 14789 ;;		_setMagneticOffset2
 14790 ;;		_setAngleEn
 14791 ;;		_setXThreshold
 14792 ;;		_setYThreshold
 14793 ;;		_setZThreshold
 14794 ;;		_setTemperatureThreshold
 14795 ;;		_setInterruptResult
 14796 ;;		_setThresholdEn
 14797 ;;		_setIntPinState
 14798 ;;		_setInterruptMode
 14799 ;;		_setMaskInterrupt
 14800 ;;		_setI2CAddress
 14801 ;;		_setI2CAddressEN
 14802 ;;		_setOscillatorError
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806     0DE7                     _getError:	
 14807                           ;psect for function _getError
 14808                           
 14809     0DE7                     l13516:	
 14810                           ;incstack = 0
 14811 ;; hardware stack exceeded
 14812                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14813                           
 14814                           
 14815                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2316:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14816     0DE7  319F  2783  318D   	fcall	_getDeviceStatus
 14817     0DEA  0140               	movlb	0	; select bank0
 14818     0DEB  00B5               	movwf	getError@statusReg
 14819     0DEC                     l13518:
 14820                           
 14821                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2317:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14822     0DEC  0835               	movf	getError@statusReg,w
 14823     0DED  00AF               	movwf	??_getError
 14824     0DEE  01B0               	clrf	??_getError+1
 14825     0DEF  082F               	movf	??_getError,w
 14826     0DF0  00F1               	movwf	bitRead@reg
 14827     0DF1  0830               	movf	??_getError+1,w
 14828     0DF2  00F2               	movwf	bitRead@reg+1
 14829     0DF3  01F3               	clrf	bitRead@position
 14830     0DF4  3194  248D  318D   	fcall	_bitRead
 14831     0DF7  0140               	movlb	0	; select bank0
 14832     0DF8  00B1               	movwf	getError@undervoltageError
 14833     0DF9                     l13520:
 14834                           
 14835                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2318:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14836     0DF9  0835               	movf	getError@statusReg,w
 14837     0DFA  00AF               	movwf	??_getError
 14838     0DFB  01B0               	clrf	??_getError+1
 14839     0DFC  082F               	movf	??_getError,w
 14840     0DFD  00F1               	movwf	bitRead@reg
 14841     0DFE  0830               	movf	??_getError+1,w
 14842     0DFF  00F2               	movwf	bitRead@reg+1
 14843     0E00  01F3               	clrf	bitRead@position
 14844     0E01  0AF3               	incf	bitRead@position,f
 14845     0E02  3194  248D  318D   	fcall	_bitRead
 14846     0E05  0140               	movlb	0	; select bank0
 14847     0E06  00B2               	movwf	getError@otpCrcError
 14848     0E07                     l13522:
 14849                           
 14850                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14851     0E07  0835               	movf	getError@statusReg,w
 14852     0E08  00AF               	movwf	??_getError
 14853     0E09  01B0               	clrf	??_getError+1
 14854     0E0A  082F               	movf	??_getError,w
 14855     0E0B  00F1               	movwf	bitRead@reg
 14856     0E0C  0830               	movf	??_getError+1,w
 14857     0E0D  00F2               	movwf	bitRead@reg+1
 14858     0E0E  3002               	movlw	2
 14859     0E0F  00F3               	movwf	bitRead@position
 14860     0E10  3194  248D  318D   	fcall	_bitRead
 14861     0E13  0140               	movlb	0	; select bank0
 14862     0E14  00B3               	movwf	getError@intPinError
 14863     0E15                     l13524:
 14864                           
 14865                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14866     0E15  0835               	movf	getError@statusReg,w
 14867     0E16  00AF               	movwf	??_getError
 14868     0E17  01B0               	clrf	??_getError+1
 14869     0E18  082F               	movf	??_getError,w
 14870     0E19  00F1               	movwf	bitRead@reg
 14871     0E1A  0830               	movf	??_getError+1,w
 14872     0E1B  00F2               	movwf	bitRead@reg+1
 14873     0E1C  3003               	movlw	3
 14874     0E1D  00F3               	movwf	bitRead@position
 14875     0E1E  3194  248D  318D   	fcall	_bitRead
 14876     0E21  0140               	movlb	0	; select bank0
 14877     0E22  00B4               	movwf	getError@oscillatorError
 14878     0E23                     l13526:
 14879                           
 14880                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14881     0E23  0831               	movf	getError@undervoltageError,w
 14882     0E24  1903               	btfsc	3,2
 14883     0E25  2E27               	goto	u10461
 14884     0E26  2E28               	goto	u10460
 14885     0E27                     u10461:
 14886     0E27  2E39               	goto	l13540
 14887     0E28                     u10460:
 14888     0E28                     l13528:
 14889     0E28  0832               	movf	getError@otpCrcError,w
 14890     0E29  1903               	btfsc	3,2
 14891     0E2A  2E2C               	goto	u10471
 14892     0E2B  2E2D               	goto	u10470
 14893     0E2C                     u10471:
 14894     0E2C  2E39               	goto	l13540
 14895     0E2D                     u10470:
 14896     0E2D                     l13530:
 14897     0E2D  0833               	movf	getError@intPinError,w
 14898     0E2E  1903               	btfsc	3,2
 14899     0E2F  2E31               	goto	u10481
 14900     0E30  2E32               	goto	u10480
 14901     0E31                     u10481:
 14902     0E31  2E39               	goto	l13540
 14903     0E32                     u10480:
 14904     0E32                     l13532:
 14905     0E32  0834               	movf	getError@oscillatorError,w
 14906     0E33  1903               	btfsc	3,2
 14907     0E34  2E36               	goto	u10491
 14908     0E35  2E37               	goto	u10490
 14909     0E36                     u10491:
 14910     0E36  2E39               	goto	l13540
 14911     0E37                     u10490:
 14912     0E37                     l13534:
 14913                           
 14914                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2324:         return -
      +                          1;
 14915     0E37  30FF               	movlw	255
 14916     0E38  2E3A               	goto	l2640
 14917     0E39                     l13540:
 14918                           
 14919                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2326:         return 0
      +                          ;
 14920     0E39  3000               	movlw	0
 14921     0E3A                     l2640:
 14922     0E3A  0008               	return
 14923     0E3B                     __end_of_getError:
 14924                           
 14925                           	psect	text10
 14926     1F83                     __ptext10:	
 14927 ;; *************** function _getDeviceStatus *****************
 14928 ;; Defined at:
 14929 ;;		line 2300 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;		None
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;  deviceStatus    1   14[BANK0 ] unsigned char 
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  1    wreg      unsigned char 
 14936 ;; Registers used:
 14937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14947 ;;Total ram usage:        1 bytes
 14948 ;; Hardware stack levels used: 1
 14949 ;; Hardware stack levels required when called: 15
 14950 ;; This function calls:
 14951 ;;		_readRegister
 14952 ;; This function is called by:
 14953 ;;		_getError
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957     1F83                     _getDeviceStatus:	
 14958                           ;psect for function _getDeviceStatus
 14959                           
 14960     1F83                     l13404:	
 14961                           ;incstack = 0
 14962 ;; hardware stack exceeded
 14963                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14964                           
 14965                           
 14966                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2302:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14967     1F83  301C               	movlw	28
 14968     1F84  3190  207A  319F   	fcall	_readRegister
 14969     1F87  0140               	movlb	0	; select bank0
 14970     1F88  00AE               	movwf	getDeviceStatus@deviceStatusReg
 14971     1F89                     l13406:
 14972                           
 14973                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2304:     return devic
      +                          eStatusReg;
 14974     1F89  082E               	movf	getDeviceStatus@deviceStatusReg,w
 14975     1F8A                     l2636:
 14976     1F8A  0008               	return
 14977     1F8B                     __end_of_getDeviceStatus:
 14978                           
 14979                           	psect	text11
 14980     0800                     __ptext11:	
 14981 ;; *************** function _bitWrite *****************
 14982 ;; Defined at:
 14983 ;;		line 2511 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  reg             2    1[COMMON] PTR unsigned short 
 14986 ;;		 -> RAM(8192), 
 14987 ;;  position        1    3[COMMON] unsigned char 
 14988 ;;  value           1    4[COMMON] unsigned char 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  lsb             1    8[COMMON] unsigned char 
 14991 ;;  mask            1    7[COMMON] unsigned char 
 14992 ;;  msb             1    6[COMMON] unsigned char 
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  1    wreg      void 
 14995 ;; Registers used:
 14996 ;;		wreg, status,2, status,0
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15006 ;;Total ram usage:        8 bytes
 15007 ;; Hardware stack levels used: 1
 15008 ;; Hardware stack levels required when called: 4
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_setOperatingMode
 15013 ;;		_setMagneticChannel
 15014 ;;		_setXYAxisRange
 15015 ;;		_setZAxisRange
 15016 ;;		_setTemperatureEn
 15017 ;;		_setCRCMode
 15018 ;;		_setMagTemp
 15019 ;;		_setConvAvg
 15020 ;;		_setReadMode
 15021 ;;		_setIntThreshold
 15022 ;;		_setLowPower
 15023 ;;		_setGlitchFilter
 15024 ;;		_setTriggerMode
 15025 ;;		_setSleeptime
 15026 ;;		_setMagDir
 15027 ;;		_setMagnitudeGain
 15028 ;;		_setAngleEn
 15029 ;;		_setInterruptResult
 15030 ;;		_setThresholdEn
 15031 ;;		_setIntPinState
 15032 ;;		_setMaskInterrupt
 15033 ;;		_setI2CAddressEN
 15034 ;;		_setOscillatorError
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           
 15038     0800                     _bitWrite:	
 15039                           ;psect for function _bitWrite
 15040                           
 15041     0800                     l13554:	
 15042                           ;incstack = 0
 15043                           ; Regs used in _bitWrite: [wreg+status,2+status,0]
 15044                           
 15045     0800                     l13556:
 15046                           
 15047                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2513:     uint8_t lsb 
      +                          = (uint8_t) reg | 0xff00;
 15048     0800  0871               	movf	bitWrite@reg,w
 15049     0801  00F8               	movwf	bitWrite@lsb
 15050     0802                     l13558:
 15051                           
 15052                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2514:     uint8_t msb 
      +                          = (uint8_t) reg << 8;
 15053     0802  01F6               	clrf	bitWrite@msb
 15054                           
 15055                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2515:     if (position
      +                           > 7) {
 15056     0803  3008               	movlw	8
 15057     0804  0273               	subwf	bitWrite@position,w
 15058     0805  1C03               	skipc
 15059     0806  2808               	goto	u10501
 15060     0807  2809               	goto	u10500
 15061     0808                     u10501:
 15062     0808  2818               	goto	l13564
 15063     0809                     u10500:
 15064     0809                     l13560:
 15065                           
 15066                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2516:         mask = v
      +                          alue << position - 7;
 15067     0809  0874               	movf	bitWrite@value,w
 15068     080A  00F5               	movwf	??_bitWrite
 15069     080B  0873               	movf	bitWrite@position,w
 15070     080C  3EF9               	addlw	-7
 15071     080D  0A89               	incf	9,f
 15072     080E  2810               	goto	u10514
 15073     080F                     u10515:
 15074     080F  35F5               	lslf	??_bitWrite,f
 15075     0810                     u10514:
 15076     0810  0B89               	decfsz	9,f
 15077     0811  280F               	goto	u10515
 15078     0812  0875               	movf	??_bitWrite,w
 15079     0813  00F7               	movwf	bitWrite@mask
 15080                           
 15081                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:         msb = ms
      +                          b | mask;
 15082     0814  0876               	movf	bitWrite@msb,w
 15083     0815  0477               	iorwf	bitWrite@mask,w
 15084     0816  00F6               	movwf	bitWrite@msb
 15085     0817                     l13562:
 15086                           
 15087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2519:     } else {
 15088     0817  2825               	goto	l2678
 15089     0818                     l13564:
 15090                           
 15091                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2521:             mask
      +                           = value << position;
 15092     0818  0874               	movf	bitWrite@value,w
 15093     0819  00F5               	movwf	??_bitWrite
 15094     081A  0A73               	incf	bitWrite@position,w
 15095     081B  281D               	goto	u10524
 15096     081C                     u10525:
 15097     081C  35F5               	lslf	??_bitWrite,f
 15098     081D                     u10524:
 15099     081D  0B89               	decfsz	9,f
 15100     081E  281C               	goto	u10525
 15101     081F  0875               	movf	??_bitWrite,w
 15102     0820  00F7               	movwf	bitWrite@mask
 15103                           
 15104                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:             lsb 
      +                          = lsb | mask;
 15105     0821  0878               	movf	bitWrite@lsb,w
 15106     0822  0477               	iorwf	bitWrite@mask,w
 15107     0823  00F8               	movwf	bitWrite@lsb
 15108     0824  2817               	goto	l13562
 15109     0825                     l2678:
 15110     0825  0008               	return
 15111     0826                     __end_of_bitWrite:
 15112                           
 15113                           	psect	text12
 15114     11CF                     __ptext12:	
 15115 ;; *************** function _isConnected *****************
 15116 ;; Defined at:
 15117 ;;		line 89 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      char 
 15124 ;; Registers used:
 15125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15135 ;;Total ram usage:        0 bytes
 15136 ;; Hardware stack levels used: 1
 15137 ;; Hardware stack levels required when called: 14
 15138 ;; This function calls:
 15139 ;;		_TMAG5273_GetManufacture
 15140 ;; This function is called by:
 15141 ;;		_begin
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145     11CF                     _isConnected:	
 15146                           ;psect for function _isConnected
 15147                           
 15148     11CF                     l13830:	
 15149                           ;incstack = 0
 15150                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15151                           
 15152                           
 15153                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 97:     manufactureId 
      +                          = TMAG5273_GetManufacture();
 15154     11CF  3192  22E7  3191   	fcall	_TMAG5273_GetManufacture
 15155     11D2  0140               	movlb	0	; select bank0
 15156     11D3  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15157     11D4  00CB               	movwf	_manufactureId+1
 15158     11D5  082D               	movf	?_TMAG5273_GetManufacture,w
 15159     11D6  00CA               	movwf	_manufactureId
 15160     11D7                     l13832:
 15161                           
 15162                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 99:     if (manufactur
      +                          eId != 0x5449) {
 15163     11D7  3049               	movlw	73
 15164     11D8  064A               	xorwf	_manufactureId,w
 15165     11D9  3054               	movlw	84
 15166     11DA  1903               	skipnz
 15167     11DB  064B               	xorwf	_manufactureId+1,w
 15168     11DC  1903               	btfsc	3,2
 15169     11DD  29DF               	goto	u10681
 15170     11DE  29E0               	goto	u10680
 15171     11DF                     u10681:
 15172     11DF  29E2               	goto	l13838
 15173     11E0                     u10680:
 15174     11E0                     l13834:
 15175                           
 15176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 100:         return -1
      +                          ;
 15177     11E0  30FF               	movlw	255
 15178     11E1  29E3               	goto	l2127
 15179     11E2                     l13838:
 15180                           
 15181                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     return 0;
 15182     11E2  3000               	movlw	0
 15183     11E3                     l2127:
 15184     11E3  0008               	return
 15185     11E4                     __end_of_isConnected:
 15186                           
 15187                           	psect	text13
 15188     12E7                     __ptext13:	
 15189 ;; *************** function _TMAG5273_GetManufacture *****************
 15190 ;; Defined at:
 15191 ;;		line 2528 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;		None
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  read            2   15[BANK0 ] unsigned short 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  2   13[BANK0 ] unsigned short 
 15198 ;; Registers used:
 15199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15206 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;Total ram usage:        4 bytes
 15210 ;; Hardware stack levels used: 1
 15211 ;; Hardware stack levels required when called: 13
 15212 ;; This function calls:
 15213 ;;		_i2c_read2ByteRegister
 15214 ;;		_swap
 15215 ;; This function is called by:
 15216 ;;		_isConnected
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220     12E7                     _TMAG5273_GetManufacture:	
 15221                           ;psect for function _TMAG5273_GetManufacture
 15222                           
 15223     12E7                     l13544:	
 15224                           ;incstack = 0
 15225                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15226                           
 15227                           
 15228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2530:     uint16_t rea
      +                          d= i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15229     12E7  300E               	movlw	14
 15230     12E8  0140               	movlb	0	; select bank0
 15231     12E9  00A4               	movwf	i2c_read2ByteRegister@reg
 15232     12EA  3022               	movlw	34
 15233     12EB  318A  224C  3192   	fcall	_i2c_read2ByteRegister
 15234     12EE  0140               	movlb	0	; select bank0
 15235     12EF  0825               	movf	?_i2c_read2ByteRegister+1,w
 15236     12F0  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15237     12F1  0824               	movf	?_i2c_read2ByteRegister,w
 15238     12F2  00AF               	movwf	TMAG5273_GetManufacture@read
 15239     12F3                     l13546:
 15240                           
 15241                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2531:     return swap(
      +                          read);
 15242     12F3  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15243     12F4  00F2               	movwf	swap@reg+1
 15244     12F5  082F               	movf	TMAG5273_GetManufacture@read,w
 15245     12F6  00F1               	movwf	swap@reg
 15246     12F7  3191  21A6  3192   	fcall	_swap
 15247     12FA  0872               	movf	?_swap+1,w
 15248     12FB  0140               	movlb	0	; select bank0
 15249     12FC  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15250     12FD  0871               	movf	?_swap,w
 15251     12FE  00AD               	movwf	?_TMAG5273_GetManufacture
 15252     12FF                     l2681:
 15253     12FF  0008               	return
 15254     1300                     __end_of_TMAG5273_GetManufacture:
 15255                           
 15256                           	psect	text14
 15257     11A6                     __ptext14:	
 15258 ;; *************** function _swap *****************
 15259 ;; Defined at:
 15260 ;;		line 2534 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;  reg             2    1[COMMON] unsigned short 
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;  lowerByte       1    9[COMMON] unsigned char 
 15265 ;;  upperByte       1    8[COMMON] unsigned char 
 15266 ;; Return value:  Size  Location     Type
 15267 ;;                  2    1[COMMON] unsigned short 
 15268 ;; Registers used:
 15269 ;;		wreg, status,2
 15270 ;; Tracked objects:
 15271 ;;		On entry : 0/0
 15272 ;;		On exit  : 0/0
 15273 ;;		Unchanged: 0/0
 15274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15277 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15279 ;;Total ram usage:        9 bytes
 15280 ;; Hardware stack levels used: 1
 15281 ;; Hardware stack levels required when called: 4
 15282 ;; This function calls:
 15283 ;;		Nothing
 15284 ;; This function is called by:
 15285 ;;		_TMAG5273_GetManufacture
 15286 ;; This function uses a non-reentrant model
 15287 ;;
 15288                           
 15289     11A6                     _swap:	
 15290                           ;psect for function _swap
 15291                           
 15292     11A6                     l13410:	
 15293                           ;incstack = 0
 15294                           ; Regs used in _swap: [wreg+status,2]
 15295                           
 15296                           
 15297                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2535:        uint8_t u
      +                          pperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2536:     uin
      +                          t8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2538:  
      +                             upperByte = ((reg & (0xFF00)) >> 8);
 15298     11A6  0872               	movf	swap@reg+1,w
 15299     11A7  00F8               	movwf	swap@upperByte
 15300     11A8                     l13412:
 15301                           
 15302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2539:     lowerByte = 
      +                          (uint8_t) reg;
 15303     11A8  0871               	movf	swap@reg,w
 15304     11A9  00F9               	movwf	swap@lowerByte
 15305     11AA                     l13414:
 15306                           
 15307                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2541:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15308     11AA  0878               	movf	swap@upperByte,w
 15309     11AB  00F3               	movwf	??_swap
 15310     11AC  01F4               	clrf	??_swap+1
 15311     11AD  0879               	movf	swap@lowerByte,w
 15312     11AE  00F5               	movwf	??_swap+2
 15313     11AF  01F6               	clrf	??_swap+3
 15314     11B0  0875               	movf	??_swap+2,w
 15315     11B1  00F6               	movwf	??_swap+3
 15316     11B2  01F5               	clrf	??_swap+2
 15317     11B3  0873               	movf	??_swap,w
 15318     11B4  0475               	iorwf	??_swap+2,w
 15319     11B5  00F1               	movwf	swap@reg
 15320     11B6  0874               	movf	??_swap+1,w
 15321     11B7  0476               	iorwf	??_swap+3,w
 15322     11B8  00F2               	movwf	swap@reg+1
 15323     11B9                     l13416:
 15324     11B9                     l2684:	
 15325                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2543:     return reg;
 15326                           
 15327     11B9  0008               	return
 15328     11BA                     __end_of_swap:
 15329                           
 15330                           	psect	text15
 15331     11BA                     __ptext15:	
 15332 ;; *************** function _getTemperatureEN *****************
 15333 ;; Defined at:
 15334 ;;		line 2033 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;  tempENreg       1   17[BANK0 ] unsigned char 
 15339 ;;  tempEN          1   16[BANK0 ] unsigned char 
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      unsigned char 
 15342 ;; Registers used:
 15343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15352 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:        4 bytes
 15354 ;; Hardware stack levels used: 1
 15355 ;; Hardware stack levels required when called: 15
 15356 ;; This function calls:
 15357 ;;		_bitRead
 15358 ;;		_readRegister
 15359 ;; This function is called by:
 15360 ;;		_begin
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364     11BA                     _getTemperatureEN:	
 15365                           ;psect for function _getTemperatureEN
 15366                           
 15367     11BA                     l14258:	
 15368                           ;incstack = 0
 15369 ;; hardware stack exceeded
 15370                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15371                           
 15372     11BA                     l14260:
 15373                           
 15374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2035:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15375     11BA  3007               	movlw	7
 15376     11BB  3190  207A  3191   	fcall	_readRegister
 15377     11BE  0140               	movlb	0	; select bank0
 15378     11BF  00B1               	movwf	getTemperatureEN@tempENreg
 15379     11C0                     l14262:
 15380                           
 15381                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2037:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15382     11C0  0831               	movf	getTemperatureEN@tempENreg,w
 15383     11C1  00AE               	movwf	??_getTemperatureEN
 15384     11C2  01AF               	clrf	??_getTemperatureEN+1
 15385     11C3  082E               	movf	??_getTemperatureEN,w
 15386     11C4  00F1               	movwf	bitRead@reg
 15387     11C5  082F               	movf	??_getTemperatureEN+1,w
 15388     11C6  00F2               	movwf	bitRead@reg+1
 15389     11C7  01F3               	clrf	bitRead@position
 15390     11C8  3194  248D  3191   	fcall	_bitRead
 15391     11CB  0140               	movlb	0	; select bank0
 15392     11CC  00B0               	movwf	getTemperatureEN@tempEN
 15393     11CD                     l14264:
 15394                           
 15395                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2039:     return tempE
      +                          N;
 15396     11CD  0830               	movf	getTemperatureEN@tempEN,w
 15397     11CE                     l2580:
 15398     11CE  0008               	return
 15399     11CF                     __end_of_getTemperatureEN:
 15400                           
 15401                           	psect	text16
 15402     0D40                     __ptext16:	
 15403 ;; *************** function _getOperatingMode *****************
 15404 ;; Defined at:
 15405 ;;		line 1579 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;		None
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;  opMode1         1   18[BANK0 ] unsigned char 
 15410 ;;  opMode0         1   17[BANK0 ] unsigned char 
 15411 ;;  opMode          1   16[BANK0 ] unsigned char 
 15412 ;; Return value:  Size  Location     Type
 15413 ;;                  1    wreg      unsigned char 
 15414 ;; Registers used:
 15415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15416 ;; Tracked objects:
 15417 ;;		On entry : 0/0
 15418 ;;		On exit  : 0/0
 15419 ;;		Unchanged: 0/0
 15420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15424 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15425 ;;Total ram usage:        5 bytes
 15426 ;; Hardware stack levels used: 1
 15427 ;; Hardware stack levels required when called: 15
 15428 ;; This function calls:
 15429 ;;		_bitRead
 15430 ;;		_readRegister
 15431 ;; This function is called by:
 15432 ;;		_begin
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436     0D40                     _getOperatingMode:	
 15437                           ;psect for function _getOperatingMode
 15438                           
 15439     0D40                     l14024:	
 15440                           ;incstack = 0
 15441 ;; hardware stack exceeded
 15442                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15443                           
 15444     0D40                     l14026:
 15445                           
 15446                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1581:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15447     0D40  3001               	movlw	1
 15448     0D41  3190  207A  318D   	fcall	_readRegister
 15449     0D44  0140               	movlb	0	; select bank0
 15450     0D45  00B0               	movwf	getOperatingMode@opMode
 15451     0D46                     l14028:
 15452                           
 15453                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1583:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15454     0D46  0830               	movf	getOperatingMode@opMode,w
 15455     0D47  00AE               	movwf	??_getOperatingMode
 15456     0D48  01AF               	clrf	??_getOperatingMode+1
 15457     0D49  082E               	movf	??_getOperatingMode,w
 15458     0D4A  00F1               	movwf	bitRead@reg
 15459     0D4B  082F               	movf	??_getOperatingMode+1,w
 15460     0D4C  00F2               	movwf	bitRead@reg+1
 15461     0D4D  01F3               	clrf	bitRead@position
 15462     0D4E  3194  248D  318D   	fcall	_bitRead
 15463     0D51  0140               	movlb	0	; select bank0
 15464     0D52  00B1               	movwf	getOperatingMode@opMode0
 15465     0D53                     l14030:
 15466                           
 15467                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1584:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15468     0D53  0830               	movf	getOperatingMode@opMode,w
 15469     0D54  00AE               	movwf	??_getOperatingMode
 15470     0D55  01AF               	clrf	??_getOperatingMode+1
 15471     0D56  082E               	movf	??_getOperatingMode,w
 15472     0D57  00F1               	movwf	bitRead@reg
 15473     0D58  082F               	movf	??_getOperatingMode+1,w
 15474     0D59  00F2               	movwf	bitRead@reg+1
 15475     0D5A  01F3               	clrf	bitRead@position
 15476     0D5B  0AF3               	incf	bitRead@position,f
 15477     0D5C  3194  248D  318D   	fcall	_bitRead
 15478     0D5F  0140               	movlb	0	; select bank0
 15479     0D60  00B2               	movwf	getOperatingMode@opMode1
 15480     0D61                     l14032:
 15481                           
 15482                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1586:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15483     0D61  0831               	movf	getOperatingMode@opMode0,w
 15484     0D62  1D03               	btfss	3,2
 15485     0D63  2D65               	goto	u10911
 15486     0D64  2D66               	goto	u10910
 15487     0D65                     u10911:
 15488     0D65  2D6D               	goto	l14042
 15489     0D66                     u10910:
 15490     0D66                     l14034:
 15491     0D66  0832               	movf	getOperatingMode@opMode1,w
 15492     0D67  1D03               	btfss	3,2
 15493     0D68  2D6A               	goto	u10921
 15494     0D69  2D6B               	goto	u10920
 15495     0D6A                     u10921:
 15496     0D6A  2D6D               	goto	l14042
 15497     0D6B                     u10920:
 15498     0D6B                     l14036:
 15499                           
 15500                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:         return 0;
 15501     0D6B  3000               	movlw	0
 15502     0D6C  2D92               	goto	l2452
 15503     0D6D                     l14042:
 15504     0D6D  0331               	decf	getOperatingMode@opMode0,w
 15505     0D6E  1D03               	btfss	3,2
 15506     0D6F  2D71               	goto	u10931
 15507     0D70  2D72               	goto	u10930
 15508     0D71                     u10931:
 15509     0D71  2D79               	goto	l14052
 15510     0D72                     u10930:
 15511     0D72                     l14044:
 15512     0D72  0832               	movf	getOperatingMode@opMode1,w
 15513     0D73  1D03               	btfss	3,2
 15514     0D74  2D76               	goto	u10941
 15515     0D75  2D77               	goto	u10940
 15516     0D76                     u10941:
 15517     0D76  2D79               	goto	l14052
 15518     0D77                     u10940:
 15519     0D77                     l14046:
 15520                           
 15521                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1591:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1593:         return 1;
 15522     0D77  3001               	movlw	1
 15523     0D78  2D92               	goto	l2452
 15524     0D79                     l14052:
 15525     0D79  0831               	movf	getOperatingMode@opMode0,w
 15526     0D7A  1D03               	btfss	3,2
 15527     0D7B  2D7D               	goto	u10951
 15528     0D7C  2D7E               	goto	u10950
 15529     0D7D                     u10951:
 15530     0D7D  2D85               	goto	l14062
 15531     0D7E                     u10950:
 15532     0D7E                     l14054:
 15533     0D7E  0332               	decf	getOperatingMode@opMode1,w
 15534     0D7F  1D03               	btfss	3,2
 15535     0D80  2D82               	goto	u10961
 15536     0D81  2D83               	goto	u10960
 15537     0D82                     u10961:
 15538     0D82  2D85               	goto	l14062
 15539     0D83                     u10960:
 15540     0D83                     l14056:
 15541                           
 15542                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1595:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1597:         return 2;
 15543     0D83  3002               	movlw	2
 15544     0D84  2D92               	goto	l2452
 15545     0D85                     l14062:
 15546     0D85  0331               	decf	getOperatingMode@opMode0,w
 15547     0D86  1D03               	btfss	3,2
 15548     0D87  2D89               	goto	u10971
 15549     0D88  2D8A               	goto	u10970
 15550     0D89                     u10971:
 15551     0D89  2D91               	goto	l2455
 15552     0D8A                     u10970:
 15553     0D8A                     l14064:
 15554     0D8A  0332               	decf	getOperatingMode@opMode1,w
 15555     0D8B  1D03               	btfss	3,2
 15556     0D8C  2D8E               	goto	u10981
 15557     0D8D  2D8F               	goto	u10980
 15558     0D8E                     u10981:
 15559     0D8E  2D91               	goto	l2455
 15560     0D8F                     u10980:
 15561     0D8F                     l14066:
 15562                           
 15563                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1599:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1601:         return 3;
 15564     0D8F  3003               	movlw	3
 15565     0D90  2D92               	goto	l2452
 15566     0D91                     l2455:
 15567     0D91  2D6B               	goto	l14036
 15568     0D92                     l2452:
 15569     0D92  0008               	return
 15570     0D93                     __end_of_getOperatingMode:
 15571                           
 15572                           	psect	text17
 15573     0377                     __ptext17:	
 15574 ;; *************** function _getMagneticChannel *****************
 15575 ;; Defined at:
 15576 ;;		line 1623 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;  magMode7        1   20[BANK0 ] unsigned char 
 15581 ;;  magMode6        1   19[BANK0 ] unsigned char 
 15582 ;;  magMode5        1   18[BANK0 ] unsigned char 
 15583 ;;  magMode4        1   17[BANK0 ] unsigned char 
 15584 ;;  magChannel      1   16[BANK0 ] unsigned char 
 15585 ;; Return value:  Size  Location     Type
 15586 ;;                  1    wreg      unsigned char 
 15587 ;; Registers used:
 15588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15589 ;; Tracked objects:
 15590 ;;		On entry : 0/0
 15591 ;;		On exit  : 0/0
 15592 ;;		Unchanged: 0/0
 15593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15595 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15597 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15598 ;;Total ram usage:        7 bytes
 15599 ;; Hardware stack levels used: 1
 15600 ;; Hardware stack levels required when called: 15
 15601 ;; This function calls:
 15602 ;;		_bitRead
 15603 ;;		_readRegister
 15604 ;; This function is called by:
 15605 ;;		_begin
 15606 ;; This function uses a non-reentrant model
 15607 ;;
 15608                           
 15609     0377                     _getMagneticChannel:	
 15610                           ;psect for function _getMagneticChannel
 15611                           
 15612     0377                     l14074:	
 15613                           ;incstack = 0
 15614 ;; hardware stack exceeded
 15615                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15616                           
 15617     0377                     l14076:
 15618                           
 15619                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15620     0377  3002               	movlw	2
 15621     0378  3190  207A  3183   	fcall	_readRegister
 15622     037B  0140               	movlb	0	; select bank0
 15623     037C  00B0               	movwf	getMagneticChannel@magChannel
 15624     037D                     l14078:
 15625                           
 15626                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1627:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15627     037D  0830               	movf	getMagneticChannel@magChannel,w
 15628     037E  00AE               	movwf	??_getMagneticChannel
 15629     037F  01AF               	clrf	??_getMagneticChannel+1
 15630     0380  082E               	movf	??_getMagneticChannel,w
 15631     0381  00F1               	movwf	bitRead@reg
 15632     0382  082F               	movf	??_getMagneticChannel+1,w
 15633     0383  00F2               	movwf	bitRead@reg+1
 15634     0384  3004               	movlw	4
 15635     0385  00F3               	movwf	bitRead@position
 15636     0386  3194  248D  3183   	fcall	_bitRead
 15637     0389  0140               	movlb	0	; select bank0
 15638     038A  00B1               	movwf	getMagneticChannel@magMode4
 15639     038B                     l14080:
 15640                           
 15641                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15642     038B  0830               	movf	getMagneticChannel@magChannel,w
 15643     038C  00AE               	movwf	??_getMagneticChannel
 15644     038D  01AF               	clrf	??_getMagneticChannel+1
 15645     038E  082E               	movf	??_getMagneticChannel,w
 15646     038F  00F1               	movwf	bitRead@reg
 15647     0390  082F               	movf	??_getMagneticChannel+1,w
 15648     0391  00F2               	movwf	bitRead@reg+1
 15649     0392  3005               	movlw	5
 15650     0393  00F3               	movwf	bitRead@position
 15651     0394  3194  248D  3183   	fcall	_bitRead
 15652     0397  0140               	movlb	0	; select bank0
 15653     0398  00B2               	movwf	getMagneticChannel@magMode5
 15654     0399                     l14082:
 15655                           
 15656                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1629:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15657     0399  0830               	movf	getMagneticChannel@magChannel,w
 15658     039A  00AE               	movwf	??_getMagneticChannel
 15659     039B  01AF               	clrf	??_getMagneticChannel+1
 15660     039C  082E               	movf	??_getMagneticChannel,w
 15661     039D  00F1               	movwf	bitRead@reg
 15662     039E  082F               	movf	??_getMagneticChannel+1,w
 15663     039F  00F2               	movwf	bitRead@reg+1
 15664     03A0  3006               	movlw	6
 15665     03A1  00F3               	movwf	bitRead@position
 15666     03A2  3194  248D  3183   	fcall	_bitRead
 15667     03A5  0140               	movlb	0	; select bank0
 15668     03A6  00B3               	movwf	getMagneticChannel@magMode6
 15669     03A7                     l14084:
 15670                           
 15671                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15672     03A7  0830               	movf	getMagneticChannel@magChannel,w
 15673     03A8  00AE               	movwf	??_getMagneticChannel
 15674     03A9  01AF               	clrf	??_getMagneticChannel+1
 15675     03AA  082E               	movf	??_getMagneticChannel,w
 15676     03AB  00F1               	movwf	bitRead@reg
 15677     03AC  082F               	movf	??_getMagneticChannel+1,w
 15678     03AD  00F2               	movwf	bitRead@reg+1
 15679     03AE  3007               	movlw	7
 15680     03AF  00F3               	movwf	bitRead@position
 15681     03B0  3194  248D  3183   	fcall	_bitRead
 15682     03B3  0140               	movlb	0	; select bank0
 15683     03B4  00B4               	movwf	getMagneticChannel@magMode7
 15684     03B5                     l14086:
 15685                           
 15686                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15687     03B5  0831               	movf	getMagneticChannel@magMode4,w
 15688     03B6  1D03               	btfss	3,2
 15689     03B7  2BB9               	goto	u10991
 15690     03B8  2BBA               	goto	u10990
 15691     03B9                     u10991:
 15692     03B9  2BCB               	goto	l14100
 15693     03BA                     u10990:
 15694     03BA                     l14088:
 15695     03BA  0832               	movf	getMagneticChannel@magMode5,w
 15696     03BB  1D03               	btfss	3,2
 15697     03BC  2BBE               	goto	u11001
 15698     03BD  2BBF               	goto	u11000
 15699     03BE                     u11001:
 15700     03BE  2BCB               	goto	l14100
 15701     03BF                     u11000:
 15702     03BF                     l14090:
 15703     03BF  0833               	movf	getMagneticChannel@magMode6,w
 15704     03C0  1D03               	btfss	3,2
 15705     03C1  2BC3               	goto	u11011
 15706     03C2  2BC4               	goto	u11010
 15707     03C3                     u11011:
 15708     03C3  2BCB               	goto	l14100
 15709     03C4                     u11010:
 15710     03C4                     l14092:
 15711     03C4  0834               	movf	getMagneticChannel@magMode7,w
 15712     03C5  1D03               	btfss	3,2
 15713     03C6  2BC8               	goto	u11021
 15714     03C7  2BC9               	goto	u11020
 15715     03C8                     u11021:
 15716     03C8  2BCB               	goto	l14100
 15717     03C9                     u11020:
 15718     03C9                     l14094:
 15719                           
 15720                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1634:         return 0;
 15721     03C9  3000               	movlw	0
 15722     03CA  2CBC               	goto	l2462
 15723     03CB                     l14100:
 15724     03CB  0331               	decf	getMagneticChannel@magMode4,w
 15725     03CC  1D03               	btfss	3,2
 15726     03CD  2BCF               	goto	u11031
 15727     03CE  2BD0               	goto	u11030
 15728     03CF                     u11031:
 15729     03CF  2BE1               	goto	l14114
 15730     03D0                     u11030:
 15731     03D0                     l14102:
 15732     03D0  0832               	movf	getMagneticChannel@magMode5,w
 15733     03D1  1D03               	btfss	3,2
 15734     03D2  2BD4               	goto	u11041
 15735     03D3  2BD5               	goto	u11040
 15736     03D4                     u11041:
 15737     03D4  2BE1               	goto	l14114
 15738     03D5                     u11040:
 15739     03D5                     l14104:
 15740     03D5  0833               	movf	getMagneticChannel@magMode6,w
 15741     03D6  1D03               	btfss	3,2
 15742     03D7  2BD9               	goto	u11051
 15743     03D8  2BDA               	goto	u11050
 15744     03D9                     u11051:
 15745     03D9  2BE1               	goto	l14114
 15746     03DA                     u11050:
 15747     03DA                     l14106:
 15748     03DA  0834               	movf	getMagneticChannel@magMode7,w
 15749     03DB  1D03               	btfss	3,2
 15750     03DC  2BDE               	goto	u11061
 15751     03DD  2BDF               	goto	u11060
 15752     03DE                     u11061:
 15753     03DE  2BE1               	goto	l14114
 15754     03DF                     u11060:
 15755     03DF                     l14108:
 15756                           
 15757                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 1;
 15758     03DF  3001               	movlw	1
 15759     03E0  2CBC               	goto	l2462
 15760     03E1                     l14114:
 15761     03E1  0831               	movf	getMagneticChannel@magMode4,w
 15762     03E2  1D03               	btfss	3,2
 15763     03E3  2BE5               	goto	u11071
 15764     03E4  2BE6               	goto	u11070
 15765     03E5                     u11071:
 15766     03E5  2BF7               	goto	l14128
 15767     03E6                     u11070:
 15768     03E6                     l14116:
 15769     03E6  0332               	decf	getMagneticChannel@magMode5,w
 15770     03E7  1D03               	btfss	3,2
 15771     03E8  2BEA               	goto	u11081
 15772     03E9  2BEB               	goto	u11080
 15773     03EA                     u11081:
 15774     03EA  2BF7               	goto	l14128
 15775     03EB                     u11080:
 15776     03EB                     l14118:
 15777     03EB  0833               	movf	getMagneticChannel@magMode6,w
 15778     03EC  1D03               	btfss	3,2
 15779     03ED  2BEF               	goto	u11091
 15780     03EE  2BF0               	goto	u11090
 15781     03EF                     u11091:
 15782     03EF  2BF7               	goto	l14128
 15783     03F0                     u11090:
 15784     03F0                     l14120:
 15785     03F0  0834               	movf	getMagneticChannel@magMode7,w
 15786     03F1  1D03               	btfss	3,2
 15787     03F2  2BF4               	goto	u11101
 15788     03F3  2BF5               	goto	u11100
 15789     03F4                     u11101:
 15790     03F4  2BF7               	goto	l14128
 15791     03F5                     u11100:
 15792     03F5                     l14122:
 15793                           
 15794                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 2;
 15795     03F5  3002               	movlw	2
 15796     03F6  2CBC               	goto	l2462
 15797     03F7                     l14128:
 15798     03F7  0331               	decf	getMagneticChannel@magMode4,w
 15799     03F8  1D03               	btfss	3,2
 15800     03F9  2BFB               	goto	u11111
 15801     03FA  2BFC               	goto	u11110
 15802     03FB                     u11111:
 15803     03FB  2C0D               	goto	l14142
 15804     03FC                     u11110:
 15805     03FC                     l14130:
 15806     03FC  0332               	decf	getMagneticChannel@magMode5,w
 15807     03FD  1D03               	btfss	3,2
 15808     03FE  2C00               	goto	u11121
 15809     03FF  2C01               	goto	u11120
 15810     0400                     u11121:
 15811     0400  2C0D               	goto	l14142
 15812     0401                     u11120:
 15813     0401                     l14132:
 15814     0401  0833               	movf	getMagneticChannel@magMode6,w
 15815     0402  1D03               	btfss	3,2
 15816     0403  2C05               	goto	u11131
 15817     0404  2C06               	goto	u11130
 15818     0405                     u11131:
 15819     0405  2C0D               	goto	l14142
 15820     0406                     u11130:
 15821     0406                     l14134:
 15822     0406  0834               	movf	getMagneticChannel@magMode7,w
 15823     0407  1D03               	btfss	3,2
 15824     0408  2C0A               	goto	u11141
 15825     0409  2C0B               	goto	u11140
 15826     040A                     u11141:
 15827     040A  2C0D               	goto	l14142
 15828     040B                     u11140:
 15829     040B                     l14136:
 15830                           
 15831                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1643:         return 3;
 15832     040B  3003               	movlw	3
 15833     040C  2CBC               	goto	l2462
 15834     040D                     l14142:
 15835     040D  0831               	movf	getMagneticChannel@magMode4,w
 15836     040E  1D03               	btfss	3,2
 15837     040F  2C11               	goto	u11151
 15838     0410  2C12               	goto	u11150
 15839     0411                     u11151:
 15840     0411  2C23               	goto	l14156
 15841     0412                     u11150:
 15842     0412                     l14144:
 15843     0412  0832               	movf	getMagneticChannel@magMode5,w
 15844     0413  1D03               	btfss	3,2
 15845     0414  2C16               	goto	u11161
 15846     0415  2C17               	goto	u11160
 15847     0416                     u11161:
 15848     0416  2C23               	goto	l14156
 15849     0417                     u11160:
 15850     0417                     l14146:
 15851     0417  0333               	decf	getMagneticChannel@magMode6,w
 15852     0418  1D03               	btfss	3,2
 15853     0419  2C1B               	goto	u11171
 15854     041A  2C1C               	goto	u11170
 15855     041B                     u11171:
 15856     041B  2C23               	goto	l14156
 15857     041C                     u11170:
 15858     041C                     l14148:
 15859     041C  0834               	movf	getMagneticChannel@magMode7,w
 15860     041D  1D03               	btfss	3,2
 15861     041E  2C20               	goto	u11181
 15862     041F  2C21               	goto	u11180
 15863     0420                     u11181:
 15864     0420  2C23               	goto	l14156
 15865     0421                     u11180:
 15866     0421                     l14150:
 15867                           
 15868                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1646:         return 4;
 15869     0421  3004               	movlw	4
 15870     0422  2CBC               	goto	l2462
 15871     0423                     l14156:
 15872     0423  0331               	decf	getMagneticChannel@magMode4,w
 15873     0424  1D03               	btfss	3,2
 15874     0425  2C27               	goto	u11191
 15875     0426  2C28               	goto	u11190
 15876     0427                     u11191:
 15877     0427  2C39               	goto	l14170
 15878     0428                     u11190:
 15879     0428                     l14158:
 15880     0428  0832               	movf	getMagneticChannel@magMode5,w
 15881     0429  1D03               	btfss	3,2
 15882     042A  2C2C               	goto	u11201
 15883     042B  2C2D               	goto	u11200
 15884     042C                     u11201:
 15885     042C  2C39               	goto	l14170
 15886     042D                     u11200:
 15887     042D                     l14160:
 15888     042D  0333               	decf	getMagneticChannel@magMode6,w
 15889     042E  1D03               	btfss	3,2
 15890     042F  2C31               	goto	u11211
 15891     0430  2C32               	goto	u11210
 15892     0431                     u11211:
 15893     0431  2C39               	goto	l14170
 15894     0432                     u11210:
 15895     0432                     l14162:
 15896     0432  0834               	movf	getMagneticChannel@magMode7,w
 15897     0433  1D03               	btfss	3,2
 15898     0434  2C36               	goto	u11221
 15899     0435  2C37               	goto	u11220
 15900     0436                     u11221:
 15901     0436  2C39               	goto	l14170
 15902     0437                     u11220:
 15903     0437                     l14164:
 15904                           
 15905                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1649:         return 5;
 15906     0437  3005               	movlw	5
 15907     0438  2CBC               	goto	l2462
 15908     0439                     l14170:
 15909     0439  0831               	movf	getMagneticChannel@magMode4,w
 15910     043A  1D03               	btfss	3,2
 15911     043B  2C3D               	goto	u11231
 15912     043C  2C3E               	goto	u11230
 15913     043D                     u11231:
 15914     043D  2C4F               	goto	l14184
 15915     043E                     u11230:
 15916     043E                     l14172:
 15917     043E  0332               	decf	getMagneticChannel@magMode5,w
 15918     043F  1D03               	btfss	3,2
 15919     0440  2C42               	goto	u11241
 15920     0441  2C43               	goto	u11240
 15921     0442                     u11241:
 15922     0442  2C4F               	goto	l14184
 15923     0443                     u11240:
 15924     0443                     l14174:
 15925     0443  0333               	decf	getMagneticChannel@magMode6,w
 15926     0444  1D03               	btfss	3,2
 15927     0445  2C47               	goto	u11251
 15928     0446  2C48               	goto	u11250
 15929     0447                     u11251:
 15930     0447  2C4F               	goto	l14184
 15931     0448                     u11250:
 15932     0448                     l14176:
 15933     0448  0834               	movf	getMagneticChannel@magMode7,w
 15934     0449  1D03               	btfss	3,2
 15935     044A  2C4C               	goto	u11261
 15936     044B  2C4D               	goto	u11260
 15937     044C                     u11261:
 15938     044C  2C4F               	goto	l14184
 15939     044D                     u11260:
 15940     044D                     l14178:
 15941                           
 15942                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1652:         return 6;
 15943     044D  3006               	movlw	6
 15944     044E  2CBC               	goto	l2462
 15945     044F                     l14184:
 15946     044F  0331               	decf	getMagneticChannel@magMode4,w
 15947     0450  1D03               	btfss	3,2
 15948     0451  2C53               	goto	u11271
 15949     0452  2C54               	goto	u11270
 15950     0453                     u11271:
 15951     0453  2C65               	goto	l14198
 15952     0454                     u11270:
 15953     0454                     l14186:
 15954     0454  0332               	decf	getMagneticChannel@magMode5,w
 15955     0455  1D03               	btfss	3,2
 15956     0456  2C58               	goto	u11281
 15957     0457  2C59               	goto	u11280
 15958     0458                     u11281:
 15959     0458  2C65               	goto	l14198
 15960     0459                     u11280:
 15961     0459                     l14188:
 15962     0459  0333               	decf	getMagneticChannel@magMode6,w
 15963     045A  1D03               	btfss	3,2
 15964     045B  2C5D               	goto	u11291
 15965     045C  2C5E               	goto	u11290
 15966     045D                     u11291:
 15967     045D  2C65               	goto	l14198
 15968     045E                     u11290:
 15969     045E                     l14190:
 15970     045E  0834               	movf	getMagneticChannel@magMode7,w
 15971     045F  1D03               	btfss	3,2
 15972     0460  2C62               	goto	u11301
 15973     0461  2C63               	goto	u11300
 15974     0462                     u11301:
 15975     0462  2C65               	goto	l14198
 15976     0463                     u11300:
 15977     0463                     l14192:
 15978                           
 15979                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1655:         return 7;
 15980     0463  3007               	movlw	7
 15981     0464  2CBC               	goto	l2462
 15982     0465                     l14198:
 15983     0465  0831               	movf	getMagneticChannel@magMode4,w
 15984     0466  1D03               	btfss	3,2
 15985     0467  2C69               	goto	u11311
 15986     0468  2C6A               	goto	u11310
 15987     0469                     u11311:
 15988     0469  2C7B               	goto	l14212
 15989     046A                     u11310:
 15990     046A                     l14200:
 15991     046A  0832               	movf	getMagneticChannel@magMode5,w
 15992     046B  1D03               	btfss	3,2
 15993     046C  2C6E               	goto	u11321
 15994     046D  2C6F               	goto	u11320
 15995     046E                     u11321:
 15996     046E  2C7B               	goto	l14212
 15997     046F                     u11320:
 15998     046F                     l14202:
 15999     046F  0833               	movf	getMagneticChannel@magMode6,w
 16000     0470  1D03               	btfss	3,2
 16001     0471  2C73               	goto	u11331
 16002     0472  2C74               	goto	u11330
 16003     0473                     u11331:
 16004     0473  2C7B               	goto	l14212
 16005     0474                     u11330:
 16006     0474                     l14204:
 16007     0474  0334               	decf	getMagneticChannel@magMode7,w
 16008     0475  1D03               	btfss	3,2
 16009     0476  2C78               	goto	u11341
 16010     0477  2C79               	goto	u11340
 16011     0478                     u11341:
 16012     0478  2C7B               	goto	l14212
 16013     0479                     u11340:
 16014     0479                     l14206:
 16015                           
 16016                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1658:         return 8;
 16017     0479  3008               	movlw	8
 16018     047A  2CBC               	goto	l2462
 16019     047B                     l14212:
 16020     047B  0331               	decf	getMagneticChannel@magMode4,w
 16021     047C  1D03               	btfss	3,2
 16022     047D  2C7F               	goto	u11351
 16023     047E  2C80               	goto	u11350
 16024     047F                     u11351:
 16025     047F  2C91               	goto	l14226
 16026     0480                     u11350:
 16027     0480                     l14214:
 16028     0480  0832               	movf	getMagneticChannel@magMode5,w
 16029     0481  1D03               	btfss	3,2
 16030     0482  2C84               	goto	u11361
 16031     0483  2C85               	goto	u11360
 16032     0484                     u11361:
 16033     0484  2C91               	goto	l14226
 16034     0485                     u11360:
 16035     0485                     l14216:
 16036     0485  0833               	movf	getMagneticChannel@magMode6,w
 16037     0486  1D03               	btfss	3,2
 16038     0487  2C89               	goto	u11371
 16039     0488  2C8A               	goto	u11370
 16040     0489                     u11371:
 16041     0489  2C91               	goto	l14226
 16042     048A                     u11370:
 16043     048A                     l14218:
 16044     048A  0334               	decf	getMagneticChannel@magMode7,w
 16045     048B  1D03               	btfss	3,2
 16046     048C  2C8E               	goto	u11381
 16047     048D  2C8F               	goto	u11380
 16048     048E                     u11381:
 16049     048E  2C91               	goto	l14226
 16050     048F                     u11380:
 16051     048F                     l14220:
 16052                           
 16053                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1661:         return 9;
 16054     048F  3009               	movlw	9
 16055     0490  2CBC               	goto	l2462
 16056     0491                     l14226:
 16057     0491  0831               	movf	getMagneticChannel@magMode4,w
 16058     0492  1D03               	btfss	3,2
 16059     0493  2C95               	goto	u11391
 16060     0494  2C96               	goto	u11390
 16061     0495                     u11391:
 16062     0495  2CA7               	goto	l14240
 16063     0496                     u11390:
 16064     0496                     l14228:
 16065     0496  0332               	decf	getMagneticChannel@magMode5,w
 16066     0497  1D03               	btfss	3,2
 16067     0498  2C9A               	goto	u11401
 16068     0499  2C9B               	goto	u11400
 16069     049A                     u11401:
 16070     049A  2CA7               	goto	l14240
 16071     049B                     u11400:
 16072     049B                     l14230:
 16073     049B  0833               	movf	getMagneticChannel@magMode6,w
 16074     049C  1D03               	btfss	3,2
 16075     049D  2C9F               	goto	u11411
 16076     049E  2CA0               	goto	u11410
 16077     049F                     u11411:
 16078     049F  2CA7               	goto	l14240
 16079     04A0                     u11410:
 16080     04A0                     l14232:
 16081     04A0  0334               	decf	getMagneticChannel@magMode7,w
 16082     04A1  1D03               	btfss	3,2
 16083     04A2  2CA4               	goto	u11421
 16084     04A3  2CA5               	goto	u11420
 16085     04A4                     u11421:
 16086     04A4  2CA7               	goto	l14240
 16087     04A5                     u11420:
 16088     04A5                     l14234:
 16089                           
 16090                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1664:         return 10;
 16091     04A5  300A               	movlw	10
 16092     04A6  2CBC               	goto	l2462
 16093     04A7                     l14240:
 16094     04A7  0331               	decf	getMagneticChannel@magMode4,w
 16095     04A8  1D03               	btfss	3,2
 16096     04A9  2CAB               	goto	u11431
 16097     04AA  2CAC               	goto	u11430
 16098     04AB                     u11431:
 16099     04AB  2BC9               	goto	l14094
 16100     04AC                     u11430:
 16101     04AC                     l14242:
 16102     04AC  0332               	decf	getMagneticChannel@magMode5,w
 16103     04AD  1D03               	btfss	3,2
 16104     04AE  2CB0               	goto	u11441
 16105     04AF  2CB1               	goto	u11440
 16106     04B0                     u11441:
 16107     04B0  2BC9               	goto	l14094
 16108     04B1                     u11440:
 16109     04B1                     l14244:
 16110     04B1  0833               	movf	getMagneticChannel@magMode6,w
 16111     04B2  1D03               	btfss	3,2
 16112     04B3  2CB5               	goto	u11451
 16113     04B4  2CB6               	goto	u11450
 16114     04B5                     u11451:
 16115     04B5  2BC9               	goto	l14094
 16116     04B6                     u11450:
 16117     04B6                     l14246:
 16118     04B6  0334               	decf	getMagneticChannel@magMode7,w
 16119     04B7  1D03               	btfss	3,2
 16120     04B8  2CBA               	goto	u11461
 16121     04B9  2CBB               	goto	u11460
 16122     04BA                     u11461:
 16123     04BA  2BC9               	goto	l14094
 16124     04BB                     u11460:
 16125     04BB                     l14248:
 16126                           
 16127                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1667:         return 11;
 16128     04BB  300B               	movlw	11
 16129     04BC                     l2462:
 16130     04BC  0008               	return
 16131     04BD                     __end_of_getMagneticChannel:
 16132                           
 16133                           	psect	text18
 16134     1210                     __ptext18:	
 16135 ;; *************** function _getLowPower *****************
 16136 ;; Defined at:
 16137 ;;		line 1528 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;		None
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;  lowPowerMode    1   17[BANK0 ] unsigned char 
 16142 ;;  lowPowerMode    1   16[BANK0 ] unsigned char 
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  1    wreg      unsigned char 
 16145 ;; Registers used:
 16146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;Total ram usage:        4 bytes
 16157 ;; Hardware stack levels used: 1
 16158 ;; Hardware stack levels required when called: 15
 16159 ;; This function calls:
 16160 ;;		_bitRead
 16161 ;;		_readRegister
 16162 ;; This function is called by:
 16163 ;;		_begin
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167     1210                     _getLowPower:	
 16168                           ;psect for function _getLowPower
 16169                           
 16170     1210                     l14014:	
 16171                           ;incstack = 0
 16172 ;; hardware stack exceeded
 16173                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16174                           
 16175     1210                     l14016:
 16176                           
 16177                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1530:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16178     1210  3001               	movlw	1
 16179     1211  3190  207A  3192   	fcall	_readRegister
 16180     1214  0140               	movlb	0	; select bank0
 16181     1215  00B1               	movwf	getLowPower@lowPowerMode
 16182     1216                     l14018:
 16183                           
 16184                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1532:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16185     1216  0831               	movf	getLowPower@lowPowerMode,w
 16186     1217  00AE               	movwf	??_getLowPower
 16187     1218  01AF               	clrf	??_getLowPower+1
 16188     1219  082E               	movf	??_getLowPower,w
 16189     121A  00F1               	movwf	bitRead@reg
 16190     121B  082F               	movf	??_getLowPower+1,w
 16191     121C  00F2               	movwf	bitRead@reg+1
 16192     121D  3004               	movlw	4
 16193     121E  00F3               	movwf	bitRead@position
 16194     121F  3194  248D  3192   	fcall	_bitRead
 16195     1222  0140               	movlb	0	; select bank0
 16196     1223  00B0               	movwf	getLowPower@lowPowerModeBit
 16197     1224                     l14020:
 16198                           
 16199                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1534:     return lowPo
      +                          werModeBit;
 16200     1224  0830               	movf	getLowPower@lowPowerModeBit,w
 16201     1225                     l2442:
 16202     1225  0008               	return
 16203     1226                     __end_of_getLowPower:
 16204                           
 16205                           	psect	text19
 16206     0D93                     __ptext19:	
 16207 ;; *************** function _getAngleEn *****************
 16208 ;; Defined at:
 16209 ;;		line 1884 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;		None
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  angleDir3       1   18[BANK0 ] unsigned char 
 16214 ;;  angleDir2       1   17[BANK0 ] unsigned char 
 16215 ;;  angleReg        1   16[BANK0 ] unsigned char 
 16216 ;; Return value:  Size  Location     Type
 16217 ;;                  1    wreg      unsigned char 
 16218 ;; Registers used:
 16219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16220 ;; Tracked objects:
 16221 ;;		On entry : 0/0
 16222 ;;		On exit  : 0/0
 16223 ;;		Unchanged: 0/0
 16224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16228 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;Total ram usage:        5 bytes
 16230 ;; Hardware stack levels used: 1
 16231 ;; Hardware stack levels required when called: 15
 16232 ;; This function calls:
 16233 ;;		_bitRead
 16234 ;;		_readRegister
 16235 ;; This function is called by:
 16236 ;;		_begin
 16237 ;;		_setMagneticOffset2
 16238 ;;		_getMagneticOffset2
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242     0D93                     _getAngleEn:	
 16243                           ;psect for function _getAngleEn
 16244                           
 16245     0D93                     l14268:	
 16246                           ;incstack = 0
 16247 ;; hardware stack exceeded
 16248                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16249                           
 16250     0D93                     l14270:
 16251                           
 16252                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1886:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16253     0D93  3003               	movlw	3
 16254     0D94  3190  207A  318D   	fcall	_readRegister
 16255     0D97  0140               	movlb	0	; select bank0
 16256     0D98  00B0               	movwf	getAngleEn@angleReg
 16257     0D99                     l14272:
 16258                           
 16259                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1888:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16260     0D99  0830               	movf	getAngleEn@angleReg,w
 16261     0D9A  00AE               	movwf	??_getAngleEn
 16262     0D9B  01AF               	clrf	??_getAngleEn+1
 16263     0D9C  082E               	movf	??_getAngleEn,w
 16264     0D9D  00F1               	movwf	bitRead@reg
 16265     0D9E  082F               	movf	??_getAngleEn+1,w
 16266     0D9F  00F2               	movwf	bitRead@reg+1
 16267     0DA0  3002               	movlw	2
 16268     0DA1  00F3               	movwf	bitRead@position
 16269     0DA2  3194  248D  318D   	fcall	_bitRead
 16270     0DA5  0140               	movlb	0	; select bank0
 16271     0DA6  00B1               	movwf	getAngleEn@angleDir2
 16272     0DA7                     l14274:
 16273                           
 16274                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1889:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16275     0DA7  0830               	movf	getAngleEn@angleReg,w
 16276     0DA8  00AE               	movwf	??_getAngleEn
 16277     0DA9  01AF               	clrf	??_getAngleEn+1
 16278     0DAA  082E               	movf	??_getAngleEn,w
 16279     0DAB  00F1               	movwf	bitRead@reg
 16280     0DAC  082F               	movf	??_getAngleEn+1,w
 16281     0DAD  00F2               	movwf	bitRead@reg+1
 16282     0DAE  3003               	movlw	3
 16283     0DAF  00F3               	movwf	bitRead@position
 16284     0DB0  3194  248D  318D   	fcall	_bitRead
 16285     0DB3  0140               	movlb	0	; select bank0
 16286     0DB4  00B2               	movwf	getAngleEn@angleDir3
 16287     0DB5                     l14276:
 16288                           
 16289                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1891:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16290     0DB5  0831               	movf	getAngleEn@angleDir2,w
 16291     0DB6  1D03               	btfss	3,2
 16292     0DB7  2DB9               	goto	u11471
 16293     0DB8  2DBA               	goto	u11470
 16294     0DB9                     u11471:
 16295     0DB9  2DC1               	goto	l14286
 16296     0DBA                     u11470:
 16297     0DBA                     l14278:
 16298     0DBA  0832               	movf	getAngleEn@angleDir3,w
 16299     0DBB  1D03               	btfss	3,2
 16300     0DBC  2DBE               	goto	u11481
 16301     0DBD  2DBF               	goto	u11480
 16302     0DBE                     u11481:
 16303     0DBE  2DC1               	goto	l14286
 16304     0DBF                     u11480:
 16305     0DBF                     l14280:
 16306                           
 16307                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:         return 0;
 16308     0DBF  3000               	movlw	0
 16309     0DC0  2DE6               	goto	l2547
 16310     0DC1                     l14286:
 16311     0DC1  0331               	decf	getAngleEn@angleDir2,w
 16312     0DC2  1D03               	btfss	3,2
 16313     0DC3  2DC5               	goto	u11491
 16314     0DC4  2DC6               	goto	u11490
 16315     0DC5                     u11491:
 16316     0DC5  2DCD               	goto	l14296
 16317     0DC6                     u11490:
 16318     0DC6                     l14288:
 16319     0DC6  0832               	movf	getAngleEn@angleDir3,w
 16320     0DC7  1D03               	btfss	3,2
 16321     0DC8  2DCA               	goto	u11501
 16322     0DC9  2DCB               	goto	u11500
 16323     0DCA                     u11501:
 16324     0DCA  2DCD               	goto	l14296
 16325     0DCB                     u11500:
 16326     0DCB                     l14290:
 16327                           
 16328                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1896:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1898:         return 1;
 16329     0DCB  3001               	movlw	1
 16330     0DCC  2DE6               	goto	l2547
 16331     0DCD                     l14296:
 16332     0DCD  0831               	movf	getAngleEn@angleDir2,w
 16333     0DCE  1D03               	btfss	3,2
 16334     0DCF  2DD1               	goto	u11511
 16335     0DD0  2DD2               	goto	u11510
 16336     0DD1                     u11511:
 16337     0DD1  2DD9               	goto	l14306
 16338     0DD2                     u11510:
 16339     0DD2                     l14298:
 16340     0DD2  0332               	decf	getAngleEn@angleDir3,w
 16341     0DD3  1D03               	btfss	3,2
 16342     0DD4  2DD6               	goto	u11521
 16343     0DD5  2DD7               	goto	u11520
 16344     0DD6                     u11521:
 16345     0DD6  2DD9               	goto	l14306
 16346     0DD7                     u11520:
 16347     0DD7                     l14300:
 16348                           
 16349                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1900:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1902:         return 2;
 16350     0DD7  3002               	movlw	2
 16351     0DD8  2DE6               	goto	l2547
 16352     0DD9                     l14306:
 16353     0DD9  0331               	decf	getAngleEn@angleDir2,w
 16354     0DDA  1D03               	btfss	3,2
 16355     0DDB  2DDD               	goto	u11531
 16356     0DDC  2DDE               	goto	u11530
 16357     0DDD                     u11531:
 16358     0DDD  2DE5               	goto	l2550
 16359     0DDE                     u11530:
 16360     0DDE                     l14308:
 16361     0DDE  0332               	decf	getAngleEn@angleDir3,w
 16362     0DDF  1D03               	btfss	3,2
 16363     0DE0  2DE2               	goto	u11541
 16364     0DE1  2DE3               	goto	u11540
 16365     0DE2                     u11541:
 16366     0DE2  2DE5               	goto	l2550
 16367     0DE3                     u11540:
 16368     0DE3                     l14310:
 16369                           
 16370                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1904:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1906:         return 3;
 16371     0DE3  3003               	movlw	3
 16372     0DE4  2DE6               	goto	l2547
 16373     0DE5                     l2550:
 16374     0DE5  2DBF               	goto	l14280
 16375     0DE6                     l2547:
 16376     0DE6  0008               	return
 16377     0DE7                     __end_of_getAngleEn:
 16378                           
 16379                           	psect	text20
 16380     148D                     __ptext20:	
 16381 ;; *************** function _bitRead *****************
 16382 ;; Defined at:
 16383 ;;		line 2504 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16384 ;; Parameters:    Size  Location     Type
 16385 ;;  reg             2    1[COMMON] unsigned short 
 16386 ;;  position        1    3[COMMON] unsigned char 
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;		None
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      unsigned char 
 16391 ;; Registers used:
 16392 ;;		wreg, status,2, status,0
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16398 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16400 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16401 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;Total ram usage:        9 bytes
 16403 ;; Hardware stack levels used: 1
 16404 ;; Hardware stack levels required when called: 4
 16405 ;; This function calls:
 16406 ;;		Nothing
 16407 ;; This function is called by:
 16408 ;;		_getLowPower
 16409 ;;		_getOperatingMode
 16410 ;;		_getMagneticChannel
 16411 ;;		_getAngleEn
 16412 ;;		_getTemperatureEN
 16413 ;;		_getError
 16414 ;;		_getCRCMode
 16415 ;;		_getMagTemp
 16416 ;;		_getConvAvg
 16417 ;;		_getReadMode
 16418 ;;		_getIntThreshold
 16419 ;;		_getGlitchFiler
 16420 ;;		_getTriggerMode
 16421 ;;		_getSleeptime
 16422 ;;		_getMagDir
 16423 ;;		_getMagnitudeChannelSelect
 16424 ;;		_getXYAxisRange
 16425 ;;		_getZAxisRange
 16426 ;;		_getInterruptResult
 16427 ;;		_getThresholdEn
 16428 ;;		_getIntPinState
 16429 ;;		_getInterruptMode
 16430 ;;		_getMaskInt
 16431 ;;		_getPOR
 16432 ;;		_getDiagStatus
 16433 ;;		_getResultStatus
 16434 ;;		_getDeviceID
 16435 ;;		_getInterruptPinStatus
 16436 ;; This function uses a non-reentrant model
 16437 ;;
 16438                           
 16439     148D                     _bitRead:	
 16440                           ;psect for function _bitRead
 16441                           
 16442     148D                     l13394:	
 16443                           ;incstack = 0
 16444                           ; Regs used in _bitRead: [wreg+status,2+status,0]
 16445                           
 16446                           
 16447                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2505:     if (reg & (1
      +                           << position) == 0) {
 16448     148D  3001               	movlw	1
 16449     148E  00F4               	movwf	??_bitRead
 16450     148F  3000               	movlw	0
 16451     1490  00F5               	movwf	??_bitRead+1
 16452     1491  0A73               	incf	bitRead@position,w
 16453     1492  2C95               	goto	u10334
 16454     1493                     u10335:
 16455     1493  35F4               	lslf	??_bitRead,f
 16456     1494  0DF5               	rlf	??_bitRead+1,f
 16457     1495                     u10334:
 16458     1495  0B89               	decfsz	9,f
 16459     1496  2C93               	goto	u10335
 16460     1497  0874               	movf	??_bitRead,w
 16461     1498  0475               	iorwf	??_bitRead+1,w
 16462     1499  1903               	btfsc	3,2
 16463     149A  2C9C               	goto	u10341
 16464     149B  2C9E               	goto	u10340
 16465     149C                     u10341:
 16466     149C  3001               	movlw	1
 16467     149D  2C9F               	goto	u10350
 16468     149E                     u10340:
 16469     149E  3000               	movlw	0
 16470     149F                     u10350:
 16471     149F  00F6               	movwf	??_bitRead+2
 16472     14A0  01F7               	clrf	??_bitRead+3
 16473     14A1  0871               	movf	bitRead@reg,w
 16474     14A2  0576               	andwf	??_bitRead+2,w
 16475     14A3  00F8               	movwf	??_bitRead+4
 16476     14A4  0872               	movf	bitRead@reg+1,w
 16477     14A5  0577               	andwf	??_bitRead+3,w
 16478     14A6  00F9               	movwf	??_bitRead+5
 16479     14A7  0878               	movf	??_bitRead+4,w
 16480     14A8  0479               	iorwf	??_bitRead+5,w
 16481     14A9  1903               	btfsc	3,2
 16482     14AA  2CAC               	goto	u10361
 16483     14AB  2CAD               	goto	u10360
 16484     14AC                     u10361:
 16485     14AC  2CAF               	goto	l13400
 16486     14AD                     u10360:
 16487     14AD                     l13396:
 16488                           
 16489                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2506:         return 0
      +                          x0;
 16490     14AD  3000               	movlw	0
 16491     14AE  2CB0               	goto	l2672
 16492     14AF                     l13400:
 16493                           
 16494                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2508:     return 0x01;
 16495     14AF  3001               	movlw	1
 16496     14B0                     l2672:
 16497     14B0  0008               	return
 16498     14B1                     __end_of_bitRead:
 16499                           
 16500                           	psect	text21
 16501     1EFB                     __ptext21:	
 16502 ;; *************** function _TMR0_HasOverflowOccured *****************
 16503 ;; Defined at:
 16504 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16505 ;; Parameters:    Size  Location     Type
 16506 ;;		None
 16507 ;; Auto vars:     Size  Location     Type
 16508 ;;		None
 16509 ;; Return value:  Size  Location     Type
 16510 ;;                  1    wreg      _Bool 
 16511 ;; Registers used:
 16512 ;;		wreg, status,2, status,0
 16513 ;; Tracked objects:
 16514 ;;		On entry : 0/0
 16515 ;;		On exit  : 0/0
 16516 ;;		Unchanged: 0/0
 16517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16522 ;;Total ram usage:        0 bytes
 16523 ;; Hardware stack levels used: 1
 16524 ;; Hardware stack levels required when called: 4
 16525 ;; This function calls:
 16526 ;;		Nothing
 16527 ;; This function is called by:
 16528 ;;		_main
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532     1EFB                     _TMR0_HasOverflowOccured:	
 16533                           ;psect for function _TMR0_HasOverflowOccured
 16534                           
 16535     1EFB                     l14536:	
 16536                           ;incstack = 0
 16537                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16538                           
 16539                           
 16540                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16541     1EFB  014E               	movlb	14	; select bank14
 16542     1EFC  0E0C               	swapf	12,w	;volatile
 16543     1EFD  0C89               	rrf	9,f
 16544     1EFE  3901               	andlw	1
 16545     1EFF                     l1492:
 16546     1EFF  0008               	return
 16547     1F00                     __end_of_TMR0_HasOverflowOccured:
 16548                           
 16549                           	psect	text22
 16550     11FA                     __ptext22:	
 16551 ;; *************** function _SYSTEM_Initialize *****************
 16552 ;; Defined at:
 16553 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16554 ;; Parameters:    Size  Location     Type
 16555 ;;		None
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;		None
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  1    wreg      void 
 16560 ;; Registers used:
 16561 ;;		wreg, status,2, status,0, pclath, cstack
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/0
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16571 ;;Total ram usage:        0 bytes
 16572 ;; Hardware stack levels used: 1
 16573 ;; Hardware stack levels required when called: 6
 16574 ;; This function calls:
 16575 ;;		_EUSART1_Initialize
 16576 ;;		_EUSART2_Initialize
 16577 ;;		_I2C1_Initialize
 16578 ;;		_OSCILLATOR_Initialize
 16579 ;;		_PIN_MANAGER_Initialize
 16580 ;;		_PMD_Initialize
 16581 ;;		_TMR0_Initialize
 16582 ;; This function is called by:
 16583 ;;		_main
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587     11FA                     _SYSTEM_Initialize:	
 16588                           ;psect for function _SYSTEM_Initialize
 16589                           
 16590     11FA                     l14522:	
 16591                           ;incstack = 0
 16592                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16593                           
 16594                           
 16595                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16596     11FA  319F  27E0  3191   	fcall	_PMD_Initialize
 16597     11FD                     l14524:
 16598                           
 16599                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16600     11FD  319F  27AF  3191   	fcall	_I2C1_Initialize
 16601     1200                     l14526:
 16602                           
 16603                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16604     1200  318B  231B  3191   	fcall	_PIN_MANAGER_Initialize
 16605     1203                     l14528:
 16606                           
 16607                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16608     1203  319F  27D6  3191   	fcall	_OSCILLATOR_Initialize
 16609     1206                     l14530:
 16610                           
 16611                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16612     1206  3191  2192  3191   	fcall	_TMR0_Initialize
 16613     1209                     l14532:
 16614                           
 16615                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16616     1209  3189  214E  3191   	fcall	_EUSART1_Initialize
 16617     120C                     l14534:
 16618                           
 16619                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16620     120C  3189  218C  3191   	fcall	_EUSART2_Initialize
 16621     120F                     l1352:
 16622     120F  0008               	return
 16623     1210                     __end_of_SYSTEM_Initialize:
 16624                           
 16625                           	psect	text23
 16626     1192                     __ptext23:	
 16627 ;; *************** function _TMR0_Initialize *****************
 16628 ;; Defined at:
 16629 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;		None
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;		None
 16634 ;; Return value:  Size  Location     Type
 16635 ;;                  1    wreg      void 
 16636 ;; Registers used:
 16637 ;;		wreg
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16647 ;;Total ram usage:        0 bytes
 16648 ;; Hardware stack levels used: 1
 16649 ;; Hardware stack levels required when called: 4
 16650 ;; This function calls:
 16651 ;;		Nothing
 16652 ;; This function is called by:
 16653 ;;		_SYSTEM_Initialize
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657     1192                     _TMR0_Initialize:	
 16658                           ;psect for function _TMR0_Initialize
 16659                           
 16660     1192                     l13826:	
 16661                           ;incstack = 0
 16662                           ; Regs used in _TMR0_Initialize: [wreg]
 16663                           
 16664                           
 16665                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16666     1192  3047               	movlw	71
 16667     1193  014B               	movlb	11	; select bank11
 16668     1194  009F               	movwf	31	;volatile
 16669                           
 16670                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16671     1195  300B               	movlw	11
 16672     1196  009D               	movwf	29	;volatile
 16673                           
 16674                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16675     1197  30DC               	movlw	220
 16676     1198  009C               	movwf	28	;volatile
 16677                           
 16678                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16679     1199  081D               	movf	29,w	;volatile
 16680     119A  0140               	movlb	0	; select bank0
 16681     119B  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
 16682     119C  014B               	movlb	11	; select bank11
 16683     119D  081C               	movf	28,w	;volatile
 16684     119E  0140               	movlb	0	; select bank0
 16685     119F  00CC               	movwf	_timer0ReloadVal16bit	;volatile
 16686     11A0                     l13828:
 16687                           
 16688                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16689     11A0  014E               	movlb	14	; select bank14
 16690     11A1  128C               	bcf	12,5	;volatile
 16691                           
 16692                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16693     11A2  3090               	movlw	144
 16694     11A3  014B               	movlb	11	; select bank11
 16695     11A4  009E               	movwf	30	;volatile
 16696     11A5                     l1474:
 16697     11A5  0008               	return
 16698     11A6                     __end_of_TMR0_Initialize:
 16699                           
 16700                           	psect	text24
 16701     1FE0                     __ptext24:	
 16702 ;; *************** function _PMD_Initialize *****************
 16703 ;; Defined at:
 16704 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16705 ;; Parameters:    Size  Location     Type
 16706 ;;		None
 16707 ;; Auto vars:     Size  Location     Type
 16708 ;;		None
 16709 ;; Return value:  Size  Location     Type
 16710 ;;                  1    wreg      void 
 16711 ;; Registers used:
 16712 ;;		status,2
 16713 ;; Tracked objects:
 16714 ;;		On entry : 0/0
 16715 ;;		On exit  : 0/0
 16716 ;;		Unchanged: 0/0
 16717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16722 ;;Total ram usage:        0 bytes
 16723 ;; Hardware stack levels used: 1
 16724 ;; Hardware stack levels required when called: 4
 16725 ;; This function calls:
 16726 ;;		Nothing
 16727 ;; This function is called by:
 16728 ;;		_SYSTEM_Initialize
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732     1FE0                     _PMD_Initialize:	
 16733                           ;psect for function _PMD_Initialize
 16734                           
 16735     1FE0                     l13740:	
 16736                           ;incstack = 0
 16737                           ; Regs used in _PMD_Initialize: [status,2]
 16738                           
 16739                           
 16740                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16741     1FE0  014F               	movlb	15	; select bank15
 16742     1FE1  0196               	clrf	22	;volatile
 16743                           
 16744                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16745     1FE2  0197               	clrf	23	;volatile
 16746                           
 16747                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16748     1FE3  0198               	clrf	24	;volatile
 16749                           
 16750                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16751     1FE4  0199               	clrf	25	;volatile
 16752                           
 16753                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16754     1FE5  019A               	clrf	26	;volatile
 16755                           
 16756                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16757     1FE6  019B               	clrf	27	;volatile
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16760     1FE7  019C               	clrf	28	;volatile
 16761                           
 16762                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16763     1FE8  019D               	clrf	29	;volatile
 16764     1FE9                     l1358:
 16765     1FE9  0008               	return
 16766     1FEA                     __end_of_PMD_Initialize:
 16767                           
 16768                           	psect	text25
 16769     0B1B                     __ptext25:	
 16770 ;; *************** function _PIN_MANAGER_Initialize *****************
 16771 ;; Defined at:
 16772 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;		None
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		wreg, status,2, status,0, pclath, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used: 1
 16792 ;; Hardware stack levels required when called: 5
 16793 ;; This function calls:
 16794 ;;		_IOCAF6_SetInterruptHandler
 16795 ;; This function is called by:
 16796 ;;		_SYSTEM_Initialize
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800     0B1B                     _PIN_MANAGER_Initialize:	
 16801                           ;psect for function _PIN_MANAGER_Initialize
 16802                           
 16803     0B1B                     l13750:	
 16804                           ;incstack = 0
 16805                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16806                           
 16807                           
 16808                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16809     0B1B  0140               	movlb	0	; select bank0
 16810     0B1C  019C               	clrf	28	;volatile
 16811     0B1D                     l13752:
 16812                           
 16813                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16814     0B1D  3031               	movlw	49
 16815     0B1E  0098               	movwf	24	;volatile
 16816     0B1F                     l13754:
 16817                           
 16818                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16819     0B1F  0199               	clrf	25	;volatile
 16820                           
 16821                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16822     0B20  30C1               	movlw	193
 16823     0B21  009A               	movwf	26	;volatile
 16824                           
 16825                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16826     0B22  3008               	movlw	8
 16827     0B23  0096               	movwf	22	;volatile
 16828                           
 16829                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16830     0B24  30DE               	movlw	222
 16831     0B25  0092               	movwf	18	;volatile
 16832                           
 16833                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16834     0B26  30EF               	movlw	239
 16835     0B27  0093               	movwf	19	;volatile
 16836                           
 16837                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16838     0B28  3025               	movlw	37
 16839     0B29  0094               	movwf	20	;volatile
 16840     0B2A                     l13756:
 16841                           
 16842                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16843     0B2A  017E               	movlb	62	; select bank62
 16844     0B2B  01CE               	clrf	78	;volatile
 16845     0B2C                     l13758:
 16846                           
 16847                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16848     0B2C  30C9               	movlw	201
 16849     0B2D  00C3               	movwf	67	;volatile
 16850     0B2E                     l13760:
 16851                           
 16852                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16853     0B2E  300E               	movlw	14
 16854     0B2F  00B8               	movwf	56	;volatile
 16855     0B30                     l13762:
 16856                           
 16857                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16858     0B30  01E5               	clrf	101	;volatile
 16859     0B31                     l13764:
 16860                           
 16861                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16862     0B31  01C4               	clrf	68	;volatile
 16863     0B32                     l13766:
 16864                           
 16865                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16866     0B32  01B9               	clrf	57	;volatile
 16867     0B33                     l13768:
 16868                           
 16869                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16870     0B33  01CF               	clrf	79	;volatile
 16871     0B34                     l13770:
 16872                           
 16873                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16874     0B34  01E6               	clrf	102	;volatile
 16875     0B35                     l13772:
 16876                           
 16877                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16878     0B35  01BA               	clrf	58	;volatile
 16879     0B36                     l13774:
 16880                           
 16881                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16882     0B36  01C5               	clrf	69	;volatile
 16883     0B37                     l13776:
 16884                           
 16885                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16886     0B37  01D0               	clrf	80	;volatile
 16887     0B38                     l13778:
 16888                           
 16889                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16890     0B38  30FF               	movlw	255
 16891     0B39  00BB               	movwf	59	;volatile
 16892     0B3A                     l13780:
 16893                           
 16894                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16895     0B3A  30FF               	movlw	255
 16896     0B3B  00C6               	movwf	70	;volatile
 16897     0B3C                     l13782:
 16898                           
 16899                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16900     0B3C  30FF               	movlw	255
 16901     0B3D  00D1               	movwf	81	;volatile
 16902     0B3E                     l13784:
 16903                           
 16904                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16905     0B3E  303F               	movlw	63
 16906     0B3F  00BC               	movwf	60	;volatile
 16907     0B40                     l13786:
 16908                           
 16909                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16910     0B40  303F               	movlw	63
 16911     0B41  00C7               	movwf	71	;volatile
 16912     0B42                     l13788:
 16913                           
 16914                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16915     0B42  303F               	movlw	63
 16916     0B43  00D2               	movwf	82	;volatile
 16917     0B44                     l13790:
 16918                           
 16919                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16920     0B44  133F               	bcf	63,6	;volatile
 16921     0B45                     l13792:
 16922                           
 16923                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16924     0B45  133E               	bcf	62,6	;volatile
 16925     0B46                     l13794:
 16926                           
 16927                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16928     0B46  173D               	bsf	61,6	;volatile
 16929     0B47                     l13796:
 16930                           
 16931                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16932     0B47  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16933     0B48  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16934     0B49  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16935     0B4A  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16936     0B4B  319F  275A  318B   	fcall	_IOCAF6_SetInterruptHandler
 16937     0B4E                     l13798:
 16938                           
 16939                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16940     0B4E  014E               	movlb	14	; select bank14
 16941     0B4F  1616               	bsf	22,4	;volatile
 16942     0B50                     l13800:
 16943                           
 16944                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16945     0B50  3009               	movlw	9
 16946     0B51  017D               	movlb	61	; select bank61
 16947     0B52  00C5               	movwf	69	;volatile
 16948     0B53                     l13802:
 16949                           
 16950                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16951     0B53  3013               	movlw	19
 16952     0B54  017E               	movlb	62	; select bank62
 16953     0B55  0099               	movwf	25	;volatile
 16954     0B56                     l13804:
 16955                           
 16956                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16957     0B56  3014               	movlw	20
 16958     0B57  009A               	movwf	26	;volatile
 16959     0B58                     l13806:
 16960                           
 16961                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16962     0B58  3025               	movlw	37
 16963     0B59  00A4               	movwf	36	;volatile
 16964     0B5A                     l13808:
 16965                           
 16966                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16967     0B5A  300F               	movlw	15
 16968     0B5B  009C               	movwf	28	;volatile
 16969     0B5C                     l13810:
 16970                           
 16971                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16972     0B5C  3015               	movlw	21
 16973     0B5D  017D               	movlb	61	; select bank61
 16974     0B5E  00CD               	movwf	77	;volatile
 16975     0B5F                     l13812:
 16976                           
 16977                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16978     0B5F  300A               	movlw	10
 16979     0B60  00C6               	movwf	70	;volatile
 16980     0B61                     l13814:
 16981                           
 16982                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16983     0B61  300D               	movlw	13
 16984     0B62  00CB               	movwf	75	;volatile
 16985     0B63                     l1443:
 16986     0B63  0008               	return
 16987     0B64                     __end_of_PIN_MANAGER_Initialize:
 16988                           
 16989                           	psect	text26
 16990     1F5A                     __ptext26:	
 16991 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 16992 ;; Defined at:
 16993 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 16996 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;		None
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1    wreg      void 
 17001 ;; Registers used:
 17002 ;;		wreg
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;Total ram usage:        2 bytes
 17013 ;; Hardware stack levels used: 1
 17014 ;; Hardware stack levels required when called: 4
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		_PIN_MANAGER_Initialize
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022     1F5A                     _IOCAF6_SetInterruptHandler:	
 17023                           ;psect for function _IOCAF6_SetInterruptHandler
 17024                           
 17025     1F5A                     l13514:	
 17026                           ;incstack = 0
 17027                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17028                           
 17029                           
 17030                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17031     1F5A  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17032     1F5B  0141               	movlb	1	; select bank1
 17033     1F5C  00EA               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17034     1F5D  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17035     1F5E  00E9               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17036     1F5F                     l1454:
 17037     1F5F  0008               	return
 17038     1F60                     __end_of_IOCAF6_SetInterruptHandler:
 17039                           
 17040                           	psect	text27
 17041     1FD6                     __ptext27:	
 17042 ;; *************** function _OSCILLATOR_Initialize *****************
 17043 ;; Defined at:
 17044 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17045 ;; Parameters:    Size  Location     Type
 17046 ;;		None
 17047 ;; Auto vars:     Size  Location     Type
 17048 ;;		None
 17049 ;; Return value:  Size  Location     Type
 17050 ;;                  1    wreg      void 
 17051 ;; Registers used:
 17052 ;;		wreg, status,2
 17053 ;; Tracked objects:
 17054 ;;		On entry : 0/0
 17055 ;;		On exit  : 0/0
 17056 ;;		Unchanged: 0/0
 17057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17062 ;;Total ram usage:        0 bytes
 17063 ;; Hardware stack levels used: 1
 17064 ;; Hardware stack levels required when called: 4
 17065 ;; This function calls:
 17066 ;;		Nothing
 17067 ;; This function is called by:
 17068 ;;		_SYSTEM_Initialize
 17069 ;; This function uses a non-reentrant model
 17070 ;;
 17071                           
 17072     1FD6                     _OSCILLATOR_Initialize:	
 17073                           ;psect for function _OSCILLATOR_Initialize
 17074                           
 17075     1FD6                     l13816:	
 17076                           ;incstack = 0
 17077                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17078                           
 17079                           
 17080                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17081     1FD6  3060               	movlw	96
 17082     1FD7  0151               	movlb	17	; select bank17
 17083     1FD8  008D               	movwf	13	;volatile
 17084     1FD9                     l13818:
 17085                           
 17086                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17087     1FD9  018F               	clrf	15	;volatile
 17088     1FDA                     l13820:
 17089                           
 17090                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17091     1FDA  0191               	clrf	17	;volatile
 17092                           
 17093                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17094     1FDB  3006               	movlw	6
 17095     1FDC  0093               	movwf	19	;volatile
 17096     1FDD                     l13822:
 17097                           
 17098                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17099     1FDD  0190               	clrf	16	;volatile
 17100     1FDE                     l13824:
 17101                           
 17102                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17103     1FDE  0192               	clrf	18	;volatile
 17104     1FDF                     l1355:
 17105     1FDF  0008               	return
 17106     1FE0                     __end_of_OSCILLATOR_Initialize:
 17107                           
 17108                           	psect	text28
 17109     1FAF                     __ptext28:	
 17110 ;; *************** function _I2C1_Initialize *****************
 17111 ;; Defined at:
 17112 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17113 ;; Parameters:    Size  Location     Type
 17114 ;;		None
 17115 ;; Auto vars:     Size  Location     Type
 17116 ;;		None
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  1    wreg      void 
 17119 ;; Registers used:
 17120 ;;		wreg, status,2
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17130 ;;Total ram usage:        0 bytes
 17131 ;; Hardware stack levels used: 1
 17132 ;; Hardware stack levels required when called: 4
 17133 ;; This function calls:
 17134 ;;		Nothing
 17135 ;; This function is called by:
 17136 ;;		_SYSTEM_Initialize
 17137 ;; This function uses a non-reentrant model
 17138 ;;
 17139                           
 17140     1FAF                     _I2C1_Initialize:	
 17141                           ;psect for function _I2C1_Initialize
 17142                           
 17143     1FAF                     l13742:	
 17144                           ;incstack = 0
 17145                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17146                           
 17147                           
 17148                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17149     1FAF  0143               	movlb	3	; select bank3
 17150     1FB0  018F               	clrf	15	;volatile
 17151     1FB1                     l13744:
 17152                           
 17153                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17154     1FB1  3008               	movlw	8
 17155     1FB2  0090               	movwf	16	;volatile
 17156     1FB3                     l13746:
 17157                           
 17158                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17159     1FB3  0191               	clrf	17	;volatile
 17160                           
 17161                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17162     1FB4  304F               	movlw	79
 17163     1FB5  008D               	movwf	13	;volatile
 17164     1FB6                     l13748:
 17165                           
 17166                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17167     1FB6  1290               	bcf	16,5	;volatile
 17168     1FB7                     l1742:
 17169     1FB7  0008               	return
 17170     1FB8                     __end_of_I2C1_Initialize:
 17171                           
 17172                           	psect	text29
 17173     098C                     __ptext29:	
 17174 ;; *************** function _EUSART2_Initialize *****************
 17175 ;; Defined at:
 17176 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;		None
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		wreg, status,2, status,0, pclath, cstack
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17194 ;;Total ram usage:        0 bytes
 17195 ;; Hardware stack levels used: 1
 17196 ;; Hardware stack levels required when called: 5
 17197 ;; This function calls:
 17198 ;;		_EUSART2_SetErrorHandler
 17199 ;;		_EUSART2_SetFramingErrorHandler
 17200 ;;		_EUSART2_SetOverrunErrorHandler
 17201 ;;		_EUSART2_SetRxInterruptHandler
 17202 ;;		_EUSART2_SetTxInterruptHandler
 17203 ;; This function is called by:
 17204 ;;		_SYSTEM_Initialize
 17205 ;; This function uses a non-reentrant model
 17206 ;;
 17207                           
 17208     098C                     _EUSART2_Initialize:	
 17209                           ;psect for function _EUSART2_Initialize
 17210                           
 17211     098C                     l13672:	
 17212                           ;incstack = 0
 17213                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17214                           
 17215                           
 17216                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17217     098C  014E               	movlb	14	; select bank14
 17218     098D  1399               	bcf	25,7	;volatile
 17219     098E                     l13674:
 17220                           
 17221                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17222     098E  305E               	movlw	low _EUSART2_Receive_ISR
 17223     098F  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17224     0990  3008               	movlw	high _EUSART2_Receive_ISR
 17225     0991  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17226     0992  319F  274E  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17227     0995                     l13676:
 17228                           
 17229                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17230     0995  014E               	movlb	14	; select bank14
 17231     0996  1319               	bcf	25,6	;volatile
 17232                           
 17233                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17234     0997  3002               	movlw	low _EUSART2_Transmit_ISR
 17235     0998  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17236     0999  3014               	movlw	high _EUSART2_Transmit_ISR
 17237     099A  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17238     099B  319F  2754  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17239     099E                     l13678:
 17240                           
 17241                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17242     099E  3008               	movlw	8
 17243     099F  0154               	movlb	20	; select bank20
 17244     09A0  009F               	movwf	31	;volatile
 17245     09A1                     l13680:
 17246                           
 17247                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17248     09A1  3090               	movlw	144
 17249     09A2  009D               	movwf	29	;volatile
 17250     09A3                     l13682:
 17251                           
 17252                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17253     09A3  3024               	movlw	36
 17254     09A4  009E               	movwf	30	;volatile
 17255     09A5                     l13684:
 17256                           
 17257                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17258     09A5  3040               	movlw	64
 17259     09A6  009B               	movwf	27	;volatile
 17260     09A7                     l13686:
 17261                           
 17262                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17263     09A7  3003               	movlw	3
 17264     09A8  009C               	movwf	28	;volatile
 17265     09A9                     l13688:
 17266                           
 17267                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17268     09A9  3077               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17269     09AA  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17270     09AB  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17271     09AC  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17272     09AD  319F  2742  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17273     09B0                     l13690:
 17274                           
 17275                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17276     09B0  30A6               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17277     09B1  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17278     09B2  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17279     09B3  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17280     09B4  319F  2748  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17281     09B7                     l13692:
 17282                           
 17283                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17284     09B7  30A2               	movlw	low _EUSART2_DefaultErrorHandler
 17285     09B8  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17286     09B9  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17287     09BA  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17288     09BB  319F  273C  3189   	fcall	_EUSART2_SetErrorHandler
 17289     09BE                     l13694:
 17290                           
 17291                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17292     09BE  0140               	movlb	0	; select bank0
 17293     09BF  01DE               	clrf	_eusart2RxLastError	;volatile
 17294     09C0                     l13696:
 17295                           
 17296                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17297     09C0  01E3               	clrf	_eusart2TxHead	;volatile
 17298     09C1                     l13698:
 17299                           
 17300                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17301     09C1  01E2               	clrf	_eusart2TxTail	;volatile
 17302     09C2                     l13700:
 17303                           
 17304                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17305     09C2  3008               	movlw	8
 17306     09C3  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17307                           
 17308                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17309     09C4  01FC               	clrf	_eusart2RxHead	;volatile
 17310                           
 17311                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17312     09C5  01E0               	clrf	_eusart2RxTail	;volatile
 17313                           
 17314                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17315     09C6  01DF               	clrf	_eusart2RxCount	;volatile
 17316     09C7                     l13702:
 17317                           
 17318                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17319     09C7  014E               	movlb	14	; select bank14
 17320     09C8  1799               	bsf	25,7	;volatile
 17321     09C9                     l1051:
 17322     09C9  0008               	return
 17323     09CA                     __end_of_EUSART2_Initialize:
 17324                           
 17325                           	psect	text30
 17326     1F54                     __ptext30:	
 17327 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17328 ;; Defined at:
 17329 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17330 ;; Parameters:    Size  Location     Type
 17331 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17332 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17333 ;; Auto vars:     Size  Location     Type
 17334 ;;		None
 17335 ;; Return value:  Size  Location     Type
 17336 ;;                  1    wreg      void 
 17337 ;; Registers used:
 17338 ;;		wreg
 17339 ;; Tracked objects:
 17340 ;;		On entry : 0/0
 17341 ;;		On exit  : 0/0
 17342 ;;		Unchanged: 0/0
 17343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17348 ;;Total ram usage:        2 bytes
 17349 ;; Hardware stack levels used: 1
 17350 ;; Hardware stack levels required when called: 4
 17351 ;; This function calls:
 17352 ;;		Nothing
 17353 ;; This function is called by:
 17354 ;;		_EUSART2_Initialize
 17355 ;; This function uses a non-reentrant model
 17356 ;;
 17357                           
 17358     1F54                     _EUSART2_SetTxInterruptHandler:	
 17359                           ;psect for function _EUSART2_SetTxInterruptHandler
 17360                           
 17361     1F54                     l13486:	
 17362                           ;incstack = 0
 17363                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17364                           
 17365                           
 17366                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17367     1F54  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17368     1F55  0141               	movlb	1	; select bank1
 17369     1F56  00EE               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17370     1F57  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17371     1F58  00ED               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17372     1F59                     l1117:
 17373     1F59  0008               	return
 17374     1F5A                     __end_of_EUSART2_SetTxInterruptHandler:
 17375                           
 17376                           	psect	text31
 17377     1F4E                     __ptext31:	
 17378 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17379 ;; Defined at:
 17380 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17381 ;; Parameters:    Size  Location     Type
 17382 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17383 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;		None
 17386 ;; Return value:  Size  Location     Type
 17387 ;;                  1    wreg      void 
 17388 ;; Registers used:
 17389 ;;		wreg
 17390 ;; Tracked objects:
 17391 ;;		On entry : 0/0
 17392 ;;		On exit  : 0/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17399 ;;Total ram usage:        2 bytes
 17400 ;; Hardware stack levels used: 1
 17401 ;; Hardware stack levels required when called: 4
 17402 ;; This function calls:
 17403 ;;		Nothing
 17404 ;; This function is called by:
 17405 ;;		_EUSART2_Initialize
 17406 ;; This function uses a non-reentrant model
 17407 ;;
 17408                           
 17409     1F4E                     _EUSART2_SetRxInterruptHandler:	
 17410                           ;psect for function _EUSART2_SetRxInterruptHandler
 17411                           
 17412     1F4E                     l13484:	
 17413                           ;incstack = 0
 17414                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17415                           
 17416                           
 17417                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17418     1F4E  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17419     1F4F  0141               	movlb	1	; select bank1
 17420     1F50  00EC               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17421     1F51  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17422     1F52  00EB               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17423     1F53                     l1120:
 17424     1F53  0008               	return
 17425     1F54                     __end_of_EUSART2_SetRxInterruptHandler:
 17426                           
 17427                           	psect	text32
 17428     1F48                     __ptext32:	
 17429 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17430 ;; Defined at:
 17431 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17434 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;		None
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  1    wreg      void 
 17439 ;; Registers used:
 17440 ;;		wreg
 17441 ;; Tracked objects:
 17442 ;;		On entry : 0/0
 17443 ;;		On exit  : 0/0
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;Total ram usage:        2 bytes
 17451 ;; Hardware stack levels used: 1
 17452 ;; Hardware stack levels required when called: 4
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_EUSART2_Initialize
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460     1F48                     _EUSART2_SetOverrunErrorHandler:	
 17461                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17462                           
 17463     1F48                     l13490:	
 17464                           ;incstack = 0
 17465                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17466                           
 17467                           
 17468                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17469     1F48  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17470     1F49  0142               	movlb	2	; select bank2
 17471     1F4A  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17472     1F4B  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17473     1F4C  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17474     1F4D                     l1111:
 17475     1F4D  0008               	return
 17476     1F4E                     __end_of_EUSART2_SetOverrunErrorHandler:
 17477                           
 17478                           	psect	text33
 17479     1F42                     __ptext33:	
 17480 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17481 ;; Defined at:
 17482 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17485 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;		None
 17488 ;; Return value:  Size  Location     Type
 17489 ;;                  1    wreg      void 
 17490 ;; Registers used:
 17491 ;;		wreg
 17492 ;; Tracked objects:
 17493 ;;		On entry : 0/0
 17494 ;;		On exit  : 0/0
 17495 ;;		Unchanged: 0/0
 17496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17501 ;;Total ram usage:        2 bytes
 17502 ;; Hardware stack levels used: 1
 17503 ;; Hardware stack levels required when called: 4
 17504 ;; This function calls:
 17505 ;;		Nothing
 17506 ;; This function is called by:
 17507 ;;		_EUSART2_Initialize
 17508 ;; This function uses a non-reentrant model
 17509 ;;
 17510                           
 17511     1F42                     _EUSART2_SetFramingErrorHandler:	
 17512                           ;psect for function _EUSART2_SetFramingErrorHandler
 17513                           
 17514     1F42                     l13488:	
 17515                           ;incstack = 0
 17516                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17517                           
 17518                           
 17519                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17520     1F42  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17521     1F43  0142               	movlb	2	; select bank2
 17522     1F44  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17523     1F45  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17524     1F46  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17525     1F47                     l1108:
 17526     1F47  0008               	return
 17527     1F48                     __end_of_EUSART2_SetFramingErrorHandler:
 17528                           
 17529                           	psect	text34
 17530     1F3C                     __ptext34:	
 17531 ;; *************** function _EUSART2_SetErrorHandler *****************
 17532 ;; Defined at:
 17533 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17536 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;		None
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      void 
 17541 ;; Registers used:
 17542 ;;		wreg
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17552 ;;Total ram usage:        2 bytes
 17553 ;; Hardware stack levels used: 1
 17554 ;; Hardware stack levels required when called: 4
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		_EUSART2_Initialize
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562     1F3C                     _EUSART2_SetErrorHandler:	
 17563                           ;psect for function _EUSART2_SetErrorHandler
 17564                           
 17565     1F3C                     l13492:	
 17566                           ;incstack = 0
 17567                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17568                           
 17569                           
 17570                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17571     1F3C  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17572     1F3D  0142               	movlb	2	; select bank2
 17573     1F3E  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17574     1F3F  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17575     1F40  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17576     1F41                     l1114:
 17577     1F41  0008               	return
 17578     1F42                     __end_of_EUSART2_SetErrorHandler:
 17579                           
 17580                           	psect	text35
 17581     094E                     __ptext35:	
 17582 ;; *************** function _EUSART1_Initialize *****************
 17583 ;; Defined at:
 17584 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;		None
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;		None
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  1    wreg      void 
 17591 ;; Registers used:
 17592 ;;		wreg, status,2, status,0, pclath, cstack
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;Total ram usage:        0 bytes
 17603 ;; Hardware stack levels used: 1
 17604 ;; Hardware stack levels required when called: 5
 17605 ;; This function calls:
 17606 ;;		_EUSART1_SetErrorHandler
 17607 ;;		_EUSART1_SetFramingErrorHandler
 17608 ;;		_EUSART1_SetOverrunErrorHandler
 17609 ;;		_EUSART1_SetRxInterruptHandler
 17610 ;;		_EUSART1_SetTxInterruptHandler
 17611 ;; This function is called by:
 17612 ;;		_SYSTEM_Initialize
 17613 ;; This function uses a non-reentrant model
 17614 ;;
 17615                           
 17616     094E                     _EUSART1_Initialize:	
 17617                           ;psect for function _EUSART1_Initialize
 17618                           
 17619     094E                     l13708:	
 17620                           ;incstack = 0
 17621                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17622                           
 17623                           
 17624                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17625     094E  014E               	movlb	14	; select bank14
 17626     094F  1299               	bcf	25,5	;volatile
 17627     0950                     l13710:
 17628                           
 17629                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17630     0950  3097               	movlw	low _EUSART1_Receive_ISR
 17631     0951  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17632     0952  3008               	movlw	high _EUSART1_Receive_ISR
 17633     0953  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17634     0954  319F  2730  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17635     0957                     l13712:
 17636                           
 17637                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17638     0957  014E               	movlb	14	; select bank14
 17639     0958  1219               	bcf	25,4	;volatile
 17640                           
 17641                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17642     0959  3024               	movlw	low _EUSART1_Transmit_ISR
 17643     095A  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17644     095B  3014               	movlw	high _EUSART1_Transmit_ISR
 17645     095C  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17646     095D  319F  2736  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17647     0960                     l13714:
 17648                           
 17649                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17650     0960  3008               	movlw	8
 17651     0961  0142               	movlb	2	; select bank2
 17652     0962  009F               	movwf	31	;volatile
 17653     0963                     l13716:
 17654                           
 17655                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17656     0963  3090               	movlw	144
 17657     0964  009D               	movwf	29	;volatile
 17658     0965                     l13718:
 17659                           
 17660                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17661     0965  3024               	movlw	36
 17662     0966  009E               	movwf	30	;volatile
 17663     0967                     l13720:
 17664                           
 17665                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17666     0967  3040               	movlw	64
 17667     0968  009B               	movwf	27	;volatile
 17668     0969                     l13722:
 17669                           
 17670                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17671     0969  3003               	movlw	3
 17672     096A  009C               	movwf	28	;volatile
 17673     096B                     l13724:
 17674                           
 17675                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17676     096B  3076               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17677     096C  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17678     096D  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17679     096E  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17680     096F  319F  2724  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17681     0972                     l13726:
 17682                           
 17683                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17684     0972  309E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17685     0973  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17686     0974  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17687     0975  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17688     0976  319F  272A  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17689     0979                     l13728:
 17690                           
 17691                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17692     0979  309A               	movlw	low _EUSART1_DefaultErrorHandler
 17693     097A  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17694     097B  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17695     097C  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17696     097D  319F  271E  3189   	fcall	_EUSART1_SetErrorHandler
 17697     0980                     l13730:
 17698                           
 17699                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17700     0980  0140               	movlb	0	; select bank0
 17701     0981  01D7               	clrf	_eusart1RxLastError	;volatile
 17702     0982                     l13732:
 17703                           
 17704                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17705     0982  01DD               	clrf	_eusart1TxHead	;volatile
 17706     0983                     l13734:
 17707                           
 17708                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17709     0983  01DC               	clrf	_eusart1TxTail	;volatile
 17710     0984                     l13736:
 17711                           
 17712                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17713     0984  3008               	movlw	8
 17714     0985  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17715                           
 17716                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17717     0986  01DA               	clrf	_eusart1RxHead	;volatile
 17718                           
 17719                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17720     0987  01D9               	clrf	_eusart1RxTail	;volatile
 17721                           
 17722                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17723     0988  01D8               	clrf	_eusart1RxCount	;volatile
 17724     0989                     l13738:
 17725                           
 17726                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17727     0989  014E               	movlb	14	; select bank14
 17728     098A  1699               	bsf	25,5	;volatile
 17729     098B                     l1195:
 17730     098B  0008               	return
 17731     098C                     __end_of_EUSART1_Initialize:
 17732                           
 17733                           	psect	text36
 17734     1F36                     __ptext36:	
 17735 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17736 ;; Defined at:
 17737 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17738 ;; Parameters:    Size  Location     Type
 17739 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17740 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;		None
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      void 
 17745 ;; Registers used:
 17746 ;;		wreg
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;Total ram usage:        2 bytes
 17757 ;; Hardware stack levels used: 1
 17758 ;; Hardware stack levels required when called: 4
 17759 ;; This function calls:
 17760 ;;		Nothing
 17761 ;; This function is called by:
 17762 ;;		_EUSART1_Initialize
 17763 ;; This function uses a non-reentrant model
 17764 ;;
 17765                           
 17766     1F36                     _EUSART1_SetTxInterruptHandler:	
 17767                           ;psect for function _EUSART1_SetTxInterruptHandler
 17768                           
 17769     1F36                     l13506:	
 17770                           ;incstack = 0
 17771                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17772                           
 17773                           
 17774                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17775     1F36  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17776     1F37  0142               	movlb	2	; select bank2
 17777     1F38  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17778     1F39  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17779     1F3A  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17780     1F3B                     l1267:
 17781     1F3B  0008               	return
 17782     1F3C                     __end_of_EUSART1_SetTxInterruptHandler:
 17783                           
 17784                           	psect	text37
 17785     1F30                     __ptext37:	
 17786 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17787 ;; Defined at:
 17788 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17789 ;; Parameters:    Size  Location     Type
 17790 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17791 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17792 ;; Auto vars:     Size  Location     Type
 17793 ;;		None
 17794 ;; Return value:  Size  Location     Type
 17795 ;;                  1    wreg      void 
 17796 ;; Registers used:
 17797 ;;		wreg
 17798 ;; Tracked objects:
 17799 ;;		On entry : 0/0
 17800 ;;		On exit  : 0/0
 17801 ;;		Unchanged: 0/0
 17802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;Total ram usage:        2 bytes
 17808 ;; Hardware stack levels used: 1
 17809 ;; Hardware stack levels required when called: 4
 17810 ;; This function calls:
 17811 ;;		Nothing
 17812 ;; This function is called by:
 17813 ;;		_EUSART1_Initialize
 17814 ;; This function uses a non-reentrant model
 17815 ;;
 17816                           
 17817     1F30                     _EUSART1_SetRxInterruptHandler:	
 17818                           ;psect for function _EUSART1_SetRxInterruptHandler
 17819                           
 17820     1F30                     l13504:	
 17821                           ;incstack = 0
 17822                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17823                           
 17824                           
 17825                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17826     1F30  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17827     1F31  0142               	movlb	2	; select bank2
 17828     1F32  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17829     1F33  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17830     1F34  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17831     1F35                     l1270:
 17832     1F35  0008               	return
 17833     1F36                     __end_of_EUSART1_SetRxInterruptHandler:
 17834                           
 17835                           	psect	text38
 17836     1F2A                     __ptext38:	
 17837 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17838 ;; Defined at:
 17839 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17842 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17843 ;; Auto vars:     Size  Location     Type
 17844 ;;		None
 17845 ;; Return value:  Size  Location     Type
 17846 ;;                  1    wreg      void 
 17847 ;; Registers used:
 17848 ;;		wreg
 17849 ;; Tracked objects:
 17850 ;;		On entry : 0/0
 17851 ;;		On exit  : 0/0
 17852 ;;		Unchanged: 0/0
 17853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17858 ;;Total ram usage:        2 bytes
 17859 ;; Hardware stack levels used: 1
 17860 ;; Hardware stack levels required when called: 4
 17861 ;; This function calls:
 17862 ;;		Nothing
 17863 ;; This function is called by:
 17864 ;;		_EUSART1_Initialize
 17865 ;; This function uses a non-reentrant model
 17866 ;;
 17867                           
 17868     1F2A                     _EUSART1_SetOverrunErrorHandler:	
 17869                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17870                           
 17871     1F2A                     l13510:	
 17872                           ;incstack = 0
 17873                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17874                           
 17875                           
 17876                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17877     1F2A  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17878     1F2B  0142               	movlb	2	; select bank2
 17879     1F2C  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17880     1F2D  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17881     1F2E  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17882     1F2F                     l1261:
 17883     1F2F  0008               	return
 17884     1F30                     __end_of_EUSART1_SetOverrunErrorHandler:
 17885                           
 17886                           	psect	text39
 17887     1F24                     __ptext39:	
 17888 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17889 ;; Defined at:
 17890 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17893 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17894 ;; Auto vars:     Size  Location     Type
 17895 ;;		None
 17896 ;; Return value:  Size  Location     Type
 17897 ;;                  1    wreg      void 
 17898 ;; Registers used:
 17899 ;;		wreg
 17900 ;; Tracked objects:
 17901 ;;		On entry : 0/0
 17902 ;;		On exit  : 0/0
 17903 ;;		Unchanged: 0/0
 17904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17909 ;;Total ram usage:        2 bytes
 17910 ;; Hardware stack levels used: 1
 17911 ;; Hardware stack levels required when called: 4
 17912 ;; This function calls:
 17913 ;;		Nothing
 17914 ;; This function is called by:
 17915 ;;		_EUSART1_Initialize
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919     1F24                     _EUSART1_SetFramingErrorHandler:	
 17920                           ;psect for function _EUSART1_SetFramingErrorHandler
 17921                           
 17922     1F24                     l13508:	
 17923                           ;incstack = 0
 17924                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17925                           
 17926                           
 17927                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17928     1F24  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17929     1F25  0142               	movlb	2	; select bank2
 17930     1F26  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17931     1F27  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17932     1F28  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17933     1F29                     l1258:
 17934     1F29  0008               	return
 17935     1F2A                     __end_of_EUSART1_SetFramingErrorHandler:
 17936                           
 17937                           	psect	text40
 17938     1F1E                     __ptext40:	
 17939 ;; *************** function _EUSART1_SetErrorHandler *****************
 17940 ;; Defined at:
 17941 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17944 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17945 ;; Auto vars:     Size  Location     Type
 17946 ;;		None
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  1    wreg      void 
 17949 ;; Registers used:
 17950 ;;		wreg
 17951 ;; Tracked objects:
 17952 ;;		On entry : 0/0
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17960 ;;Total ram usage:        2 bytes
 17961 ;; Hardware stack levels used: 1
 17962 ;; Hardware stack levels required when called: 4
 17963 ;; This function calls:
 17964 ;;		Nothing
 17965 ;; This function is called by:
 17966 ;;		_EUSART1_Initialize
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970     1F1E                     _EUSART1_SetErrorHandler:	
 17971                           ;psect for function _EUSART1_SetErrorHandler
 17972                           
 17973     1F1E                     l13512:	
 17974                           ;incstack = 0
 17975                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17976                           
 17977                           
 17978                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17979     1F1E  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17980     1F1F  0142               	movlb	2	; select bank2
 17981     1F20  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 17982     1F21  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17983     1F22  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 17984     1F23                     l1264:
 17985     1F23  0008               	return
 17986     1F24                     __end_of_EUSART1_SetErrorHandler:
 17987                           
 17988                           	psect	text41
 17989     129D                     __ptext41:	
 17990 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 17991 ;; Defined at:
 17992 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 17995 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), 
 17996 ;;  len             1    3[COMMON] unsigned char 
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;		None
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  1    wreg      _Bool 
 18001 ;; Registers used:
 18002 ;;		wreg, status,2, status,0
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18008 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18011 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18012 ;;Total ram usage:        3 bytes
 18013 ;; Hardware stack levels used: 1
 18014 ;; Hardware stack levels required when called: 4
 18015 ;; This function calls:
 18016 ;;		Nothing
 18017 ;; This function is called by:
 18018 ;;		_main
 18019 ;;		_RN487X_Example_Initialized
 18020 ;; This function uses a non-reentrant model
 18021 ;;
 18022                           
 18023     129D                     _RN487X_SetAsyncMessageHandler:	
 18024                           ;psect for function _RN487X_SetAsyncMessageHandler
 18025                           
 18026     129D                     l14464:	
 18027                           ;incstack = 0
 18028                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18029                           
 18030                           
 18031                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18032     129D  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18033     129E  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18034     129F  1903               	btfsc	3,2
 18035     12A0  2AA2               	goto	u11671
 18036     12A1  2AA3               	goto	u11670
 18037     12A2                     u11671:
 18038     12A2  2AB3               	goto	l14478
 18039     12A3                     u11670:
 18040     12A3                     l14466:
 18041     12A3  3002               	movlw	2
 18042     12A4  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18043     12A5  1C03               	skipc
 18044     12A6  2AA8               	goto	u11681
 18045     12A7  2AA9               	goto	u11680
 18046     12A8                     u11681:
 18047     12A8  2AB3               	goto	l14478
 18048     12A9                     u11680:
 18049     12A9                     l14468:
 18050                           
 18051                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18052     12A9  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18053     12AA  0140               	movlb	0	; select bank0
 18054     12AB  00D1               	movwf	_asyncBuffer+1
 18055     12AC  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18056     12AD  00D0               	movwf	_asyncBuffer
 18057     12AE                     l14470:
 18058                           
 18059                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18060     12AE  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 18061     12AF  3EFF               	addlw	255
 18062     12B0  00E7               	movwf	_asyncBufferSize
 18063     12B1                     l14472:
 18064                           
 18065                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18066     12B1  3001               	movlw	1
 18067     12B2  2AB4               	goto	l952
 18068     12B3                     l14478:
 18069                           
 18070                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18071     12B3  3000               	movlw	0
 18072     12B4                     l952:
 18073     12B4  0008               	return
 18074     12B5                     __end_of_RN487X_SetAsyncMessageHandler:
 18075                           
 18076                           	psect	text42
 18077     1039                     __ptext42:	
 18078 ;; *************** function _RN487X_Read *****************
 18079 ;; Defined at:
 18080 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;		None
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;		None
 18085 ;; Return value:  Size  Location     Type
 18086 ;;                  1    wreg      unsigned char 
 18087 ;; Registers used:
 18088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18089 ;; Tracked objects:
 18090 ;;		On entry : 0/0
 18091 ;;		On exit  : 0/0
 18092 ;;		Unchanged: 0/0
 18093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;Total ram usage:        0 bytes
 18099 ;; Hardware stack levels used: 1
 18100 ;; Hardware stack levels required when called: 9
 18101 ;; This function calls:
 18102 ;;		_RN487X_DataReady
 18103 ;; This function is called by:
 18104 ;;		_main
 18105 ;;		_RN487X_Example_TransparentUart
 18106 ;; This function uses a non-reentrant model
 18107 ;;
 18108                           
 18109     1039                     _RN487X_Read:	
 18110                           ;psect for function _RN487X_Read
 18111                           
 18112     1039                     l14486:	
 18113                           ;incstack = 0
 18114                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18115                           
 18116     1039                     l14488:	
 18117                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18118                           
 18119     1039  3193  236B  3190   	fcall	_RN487X_DataReady
 18120     103C  3A00               	xorlw	0
 18121     103D  1903               	skipnz
 18122     103E  2840               	goto	u11691
 18123     103F  2841               	goto	u11690
 18124     1040                     u11691:
 18125     1040  2839               	goto	l14488
 18126     1041                     u11690:
 18127     1041                     l14490:
 18128                           
 18129                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18130     1041  0140               	movlb	0	; select bank0
 18131     1042  01E5               	clrf	_dataReady
 18132     1043                     l14492:
 18133                           
 18134                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18135     1043  0866               	movf	_peek,w
 18136     1044                     l964:
 18137     1044  0008               	return
 18138     1045                     __end_of_RN487X_Read:
 18139                           
 18140                           	psect	text43
 18141     136B                     __ptext43:	
 18142 ;; *************** function _RN487X_DataReady *****************
 18143 ;; Defined at:
 18144 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18145 ;; Parameters:    Size  Location     Type
 18146 ;;		None
 18147 ;; Auto vars:     Size  Location     Type
 18148 ;;		None
 18149 ;; Return value:  Size  Location     Type
 18150 ;;                  1    wreg      _Bool 
 18151 ;; Registers used:
 18152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18153 ;; Tracked objects:
 18154 ;;		On entry : 0/0
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18162 ;;Total ram usage:        0 bytes
 18163 ;; Hardware stack levels used: 1
 18164 ;; Hardware stack levels required when called: 8
 18165 ;; This function calls:
 18166 ;;		_RN487X_FilterData
 18167 ;;		_RN487X_is_rx_ready
 18168 ;; This function is called by:
 18169 ;;		_RN487X_Read
 18170 ;;		_main
 18171 ;;		_RN487X_Example_TransparentUart
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175     136B                     _RN487X_DataReady:	
 18176                           ;psect for function _RN487X_DataReady
 18177                           
 18178     136B                     l13650:	
 18179                           ;incstack = 0
 18180                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18181                           
 18182                           
 18183                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18184     136B  0140               	movlb	0	; select bank0
 18185     136C  0865               	movf	_dataReady,w
 18186     136D  1903               	btfsc	3,2
 18187     136E  2B70               	goto	u10631
 18188     136F  2B71               	goto	u10630
 18189     1370                     u10631:
 18190     1370  2B73               	goto	l13656
 18191     1371                     u10630:
 18192     1371                     l13652:
 18193                           
 18194                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18195     1371  3001               	movlw	1
 18196     1372  2B86               	goto	l957
 18197     1373                     l13656:
 18198                           
 18199                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18200     1373  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18201     1374  0084               	movwf	4
 18202     1375  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18203     1376  0085               	movwf	5
 18204     1377  3F01               	moviw [1]fsr0
 18205     1378  008A               	movwf	10
 18206     1379  3F00               	moviw [0]fsr0
 18207     137A  000A               	callw
 18208     137B  3193               	pagesel	$
 18209     137C  3A00               	xorlw	0
 18210     137D  1903               	skipnz
 18211     137E  2B80               	goto	u10641
 18212     137F  2B81               	goto	u10640
 18213     1380                     u10641:
 18214     1380  2B85               	goto	l13662
 18215     1381                     u10640:
 18216     1381                     l13658:
 18217                           
 18218                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18219     1381  318E  2690  3193   	fcall	_RN487X_FilterData
 18220     1384  2B86               	goto	l957
 18221     1385                     l13662:
 18222                           
 18223                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18224     1385  3000               	movlw	0
 18225     1386                     l957:
 18226     1386  0008               	return
 18227     1387                     __end_of_RN487X_DataReady:
 18228                           
 18229                           	psect	text44
 18230     0E90                     __ptext44:	
 18231 ;; *************** function _RN487X_FilterData *****************
 18232 ;; Defined at:
 18233 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18234 ;; Parameters:    Size  Location     Type
 18235 ;;		None
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;  readChar        1   40[BANK0 ] unsigned char 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      _Bool 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18249 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18250 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18251 ;;Total ram usage:        5 bytes
 18252 ;; Hardware stack levels used: 1
 18253 ;; Hardware stack levels required when called: 7
 18254 ;; This function calls:
 18255 ;;		_RN487X_MessageHandler
 18256 ;;		_RN487X_Read@rn487x_interface$F1381
 18257 ;; This function is called by:
 18258 ;;		_RN487X_DataReady
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262     0E90                     _RN487X_FilterData:	
 18263                           ;psect for function _RN487X_FilterData
 18264                           
 18265     0E90                     l13456:	
 18266                           ;incstack = 0
 18267                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18268                           
 18269                           
 18270                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18271     0E90  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18272     0E91  0084               	movwf	4
 18273     0E92  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18274     0E93  0085               	movwf	5
 18275     0E94  3F01               	moviw [1]fsr0
 18276     0E95  008A               	movwf	10
 18277     0E96  3F00               	moviw [0]fsr0
 18278     0E97  000A               	callw
 18279     0E98  318E               	pagesel	$
 18280     0E99  0140               	movlb	0	; select bank0
 18281     0E9A  00C8               	movwf	RN487X_FilterData@readChar
 18282     0E9B                     l13458:
 18283                           
 18284                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18285     0E9B  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18286     0E9C  1D03               	btfss	3,2
 18287     0E9D  2E9F               	goto	u10411
 18288     0E9E  2EA0               	goto	u10410
 18289     0E9F                     u10411:
 18290     0E9F  2ED8               	goto	l13474
 18291     0EA0                     u10410:
 18292     0EA0                     l13460:
 18293                           
 18294                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18295     0EA0  3025               	movlw	37
 18296     0EA1  0648               	xorwf	RN487X_FilterData@readChar,w
 18297     0EA2  1D03               	btfss	3,2
 18298     0EA3  2EA5               	goto	u10421
 18299     0EA4  2EA6               	goto	u10420
 18300     0EA5                     u10421:
 18301     0EA5  2EBA               	goto	l13468
 18302     0EA6                     u10420:
 18303     0EA6                     l13462:
 18304                           
 18305                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18306     0EA6  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18307     0EA7                     l13464:
 18308                           
 18309                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18310     0EA7  084E               	movf	_pHead,w
 18311     0EA8  0086               	movwf	6
 18312     0EA9  084F               	movf	_pHead+1,w
 18313     0EAA  0087               	movwf	7
 18314     0EAB  0181               	clrf	1
 18315     0EAC                     l13466:
 18316                           
 18317                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18318     0EAC  0851               	movf	_asyncBuffer+1,w
 18319     0EAD  00C2               	movwf	RN487X_MessageHandler@message+1
 18320     0EAE  0850               	movf	_asyncBuffer,w
 18321     0EAF  00C1               	movwf	RN487X_MessageHandler@message
 18322     0EB0  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18323     0EB1  0084               	movwf	4
 18324     0EB2  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18325     0EB3  0085               	movwf	5
 18326     0EB4  3F01               	moviw [1]fsr0
 18327     0EB5  008A               	movwf	10
 18328     0EB6  3F00               	moviw [0]fsr0
 18329     0EB7  000A               	callw
 18330     0EB8  318E               	pagesel	$
 18331                           
 18332                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18333     0EB9  2EE9               	goto	l973
 18334     0EBA                     l13468:
 18335     0EBA  0867               	movf	_asyncBufferSize,w
 18336     0EBB  00C4               	movwf	??_RN487X_FilterData
 18337     0EBC  01C5               	clrf	??_RN487X_FilterData+1
 18338     0EBD  0844               	movf	??_RN487X_FilterData,w
 18339     0EBE  0750               	addwf	_asyncBuffer,w
 18340     0EBF  00C6               	movwf	??_RN487X_FilterData+2
 18341     0EC0  0845               	movf	??_RN487X_FilterData+1,w
 18342     0EC1  3D51               	addwfc	_asyncBuffer+1,w
 18343     0EC2  00C7               	movwf	??_RN487X_FilterData+3
 18344     0EC3  0847               	movf	??_RN487X_FilterData+3,w
 18345     0EC4  024F               	subwf	_pHead+1,w
 18346     0EC5  1D03               	skipz
 18347     0EC6  2EC9               	goto	u10435
 18348     0EC7  0846               	movf	??_RN487X_FilterData+2,w
 18349     0EC8  024E               	subwf	_pHead,w
 18350     0EC9                     u10435:
 18351     0EC9  1803               	skipnc
 18352     0ECA  2ECC               	goto	u10431
 18353     0ECB  2ECD               	goto	u10430
 18354     0ECC                     u10431:
 18355     0ECC  2EE9               	goto	l973
 18356     0ECD                     u10430:
 18357     0ECD                     l13470:
 18358                           
 18359                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18360     0ECD  084E               	movf	_pHead,w
 18361     0ECE  0086               	movwf	6
 18362     0ECF  084F               	movf	_pHead+1,w
 18363     0ED0  0087               	movwf	7
 18364     0ED1  0848               	movf	RN487X_FilterData@readChar,w
 18365     0ED2  0081               	movwf	1
 18366     0ED3                     l13472:
 18367     0ED3  3001               	movlw	1
 18368     0ED4  07CE               	addwf	_pHead,f
 18369     0ED5  3000               	movlw	0
 18370     0ED6  3DCF               	addwfc	_pHead+1,f
 18371     0ED7  2EE9               	goto	l973
 18372     0ED8                     l13474:
 18373                           
 18374                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18375     0ED8  3025               	movlw	37
 18376     0ED9  0648               	xorwf	RN487X_FilterData@readChar,w
 18377     0EDA  1D03               	btfss	3,2
 18378     0EDB  2EDD               	goto	u10441
 18379     0EDC  2EDE               	goto	u10440
 18380     0EDD                     u10441:
 18381     0EDD  2EE5               	goto	l974
 18382     0EDE                     u10440:
 18383     0EDE                     l13476:
 18384                           
 18385                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18386     0EDE  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18387     0EDF  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18388     0EE0                     l13478:
 18389                           
 18390                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18391     0EE0  0851               	movf	_asyncBuffer+1,w
 18392     0EE1  00CF               	movwf	_pHead+1
 18393     0EE2  0850               	movf	_asyncBuffer,w
 18394     0EE3  00CE               	movwf	_pHead
 18395                           
 18396                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18397     0EE4  2EE9               	goto	l973
 18398     0EE5                     l974:	
 18399                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18400                           
 18401                           
 18402                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18403     0EE5  01E5               	clrf	_dataReady
 18404     0EE6  0AE5               	incf	_dataReady,f
 18405     0EE7                     l13480:
 18406                           
 18407                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18408     0EE7  0848               	movf	RN487X_FilterData@readChar,w
 18409     0EE8  00E6               	movwf	_peek
 18410     0EE9                     l973:	
 18411                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18412                           
 18413                           
 18414                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18415     0EE9  0140               	movlb	0	; select bank0
 18416     0EEA  0865               	movf	_dataReady,w
 18417     0EEB                     l976:
 18418     0EEB  0008               	return
 18419     0EEC                     __end_of_RN487X_FilterData:
 18420                           
 18421                           	psect	text45
 18422     0A8F                     __ptext45:	
 18423 ;; *************** function _RN487X_MessageHandler *****************
 18424 ;; Defined at:
 18425 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18426 ;; Parameters:    Size  Location     Type
 18427 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18428 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  messageType     1   35[BANK0 ] enum E12962
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  1    wreg      void 
 18433 ;; Registers used:
 18434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18443 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18444 ;;Total ram usage:        3 bytes
 18445 ;; Hardware stack levels used: 1
 18446 ;; Hardware stack levels required when called: 6
 18447 ;; This function calls:
 18448 ;;		_rn487x_PrintIndicatorCharacters
 18449 ;;		_rn487x_PrintMessage
 18450 ;;		_rn487x_PrintMessageEnd
 18451 ;;		_rn487x_PrintMessageStart
 18452 ;;		_strstr
 18453 ;; This function is called by:
 18454 ;;		_RN487X_FilterData
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458     0A8F                     _RN487X_MessageHandler:	
 18459                           ;psect for function _RN487X_MessageHandler
 18460                           
 18461     0A8F                     l13370:	
 18462                           ;incstack = 0
 18463                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18464                           
 18465                           
 18466                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18467     0A8F  3196  261B  318A   	fcall	_rn487x_PrintMessageStart
 18468                           
 18469                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18470     0A92  0140               	movlb	0	; select bank0
 18471     0A93  0842               	movf	RN487X_MessageHandler@message+1,w
 18472     0A94  00F9               	movwf	strstr@h+1
 18473     0A95  0841               	movf	RN487X_MessageHandler@message,w
 18474     0A96  00F8               	movwf	strstr@h
 18475     0A97  3091               	movlw	low (STR_2| (0+32768))
 18476     0A98  00FA               	movwf	strstr@n
 18477     0A99  3098               	movlw	high (STR_2| (0+32768))
 18478     0A9A  00FB               	movwf	strstr@n+1
 18479     0A9B  318E  263B  318A   	fcall	_strstr
 18480     0A9E  0878               	movf	?_strstr,w
 18481     0A9F  0479               	iorwf	?_strstr+1,w
 18482     0AA0  1903               	btfsc	3,2
 18483     0AA1  2AA3               	goto	u10271
 18484     0AA2  2AA4               	goto	u10270
 18485     0AA3                     u10271:
 18486     0AA3  2AA8               	goto	l13374
 18487     0AA4                     u10270:
 18488     0AA4                     l13372:
 18489                           
 18490                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18491     0AA4  0140               	movlb	0	; select bank0
 18492     0AA5  01C3               	clrf	RN487X_MessageHandler@messageType
 18493                           
 18494                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18495     0AA6  01E8               	clrf	_connected
 18496                           
 18497                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18498     0AA7  2AC3               	goto	l13380
 18499     0AA8                     l13374:
 18500     0AA8  0140               	movlb	0	; select bank0
 18501     0AA9  0842               	movf	RN487X_MessageHandler@message+1,w
 18502     0AAA  00F9               	movwf	strstr@h+1
 18503     0AAB  0841               	movf	RN487X_MessageHandler@message,w
 18504     0AAC  00F8               	movwf	strstr@h
 18505     0AAD  307A               	movlw	low (STR_4| (0+32768))
 18506     0AAE  00FA               	movwf	strstr@n
 18507     0AAF  3098               	movlw	high (STR_4| (0+32768))
 18508     0AB0  00FB               	movwf	strstr@n+1
 18509     0AB1  318E  263B  318A   	fcall	_strstr
 18510     0AB4  0878               	movf	?_strstr,w
 18511     0AB5  0479               	iorwf	?_strstr+1,w
 18512     0AB6  1903               	btfsc	3,2
 18513     0AB7  2AB9               	goto	u10281
 18514     0AB8  2ABA               	goto	u10280
 18515     0AB9                     u10281:
 18516     0AB9  2AC0               	goto	l13378
 18517     0ABA                     u10280:
 18518     0ABA                     l13376:
 18519                           
 18520                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18521     0ABA  0140               	movlb	0	; select bank0
 18522     0ABB  01C3               	clrf	RN487X_MessageHandler@messageType
 18523     0ABC  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18524                           
 18525                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18526     0ABD  01E8               	clrf	_connected
 18527     0ABE  0AE8               	incf	_connected,f
 18528                           
 18529                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18530     0ABF  2AC3               	goto	l13380
 18531     0AC0                     l13378:
 18532                           
 18533                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18534     0AC0  3002               	movlw	2
 18535     0AC1  0140               	movlb	0	; select bank0
 18536     0AC2  00C3               	movwf	RN487X_MessageHandler@messageType
 18537     0AC3                     l13380:
 18538                           
 18539                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18540     0AC3  0842               	movf	RN487X_MessageHandler@message+1,w
 18541     0AC4  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18542     0AC5  0841               	movf	RN487X_MessageHandler@message,w
 18543     0AC6  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18544     0AC7  3197  2795  318A   	fcall	_rn487x_PrintMessage
 18545     0ACA                     l13382:
 18546                           
 18547                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18548     0ACA  318B  23AF  318A   	fcall	_rn487x_PrintMessageEnd
 18549     0ACD                     l13384:
 18550                           
 18551                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18552     0ACD  0140               	movlb	0	; select bank0
 18553     0ACE  0843               	movf	RN487X_MessageHandler@messageType,w
 18554     0ACF  3194  2446  318A   	fcall	_rn487x_PrintIndicatorCharacters
 18555     0AD2                     l855:
 18556     0AD2  0008               	return
 18557     0AD3                     __end_of_RN487X_MessageHandler:
 18558                           
 18559                           	psect	text46
 18560     0E3B                     __ptext46:	
 18561 ;; *************** function _strstr *****************
 18562 ;; Defined at:
 18563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18564 ;; Parameters:    Size  Location     Type
 18565 ;;  h               2    8[COMMON] PTR const unsigned char 
 18566 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18567 ;;  n               2   10[COMMON] PTR const unsigned char 
 18568 ;;		 -> STR_5(12), STR_3(11), 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  nl              2    2[BANK0 ] unsigned int 
 18571 ;; Return value:  Size  Location     Type
 18572 ;;                  2    8[COMMON] PTR unsigned char 
 18573 ;; Registers used:
 18574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18575 ;; Tracked objects:
 18576 ;;		On entry : 0/0
 18577 ;;		On exit  : 0/0
 18578 ;;		Unchanged: 0/0
 18579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18581 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18583 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18584 ;;Total ram usage:        8 bytes
 18585 ;; Hardware stack levels used: 1
 18586 ;; Hardware stack levels required when called: 5
 18587 ;; This function calls:
 18588 ;;		_strchr
 18589 ;;		_strlen
 18590 ;;		_strncmp
 18591 ;; This function is called by:
 18592 ;;		_RN487X_MessageHandler
 18593 ;; This function uses a non-reentrant model
 18594 ;;
 18595                           
 18596     0E3B                     _strstr:	
 18597                           ;psect for function _strstr
 18598                           
 18599     0E3B                     l13300:	
 18600                           ;incstack = 0
 18601                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18602                           
 18603     0E3B  087A               	movf	strstr@n,w
 18604     0E3C  047B               	iorwf	strstr@n+1,w
 18605     0E3D  1903               	btfsc	3,2
 18606     0E3E  2E40               	goto	u10151
 18607     0E3F  2E41               	goto	u10150
 18608     0E40                     u10151:
 18609     0E40  2E8D               	goto	l13314
 18610     0E41                     u10150:
 18611     0E41                     l13302:
 18612     0E41  087B               	movf	strstr@n+1,w
 18613     0E42  00F2               	movwf	strlen@s+1
 18614     0E43  087A               	movf	strstr@n,w
 18615     0E44  00F1               	movwf	strlen@s
 18616     0E45  3192  22B5  318E   	fcall	_strlen
 18617     0E48  0872               	movf	?_strlen+1,w
 18618     0E49  0140               	movlb	0	; select bank0
 18619     0E4A  00A3               	movwf	strstr@nl+1
 18620     0E4B  0871               	movf	?_strlen,w
 18621     0E4C  00A2               	movwf	strstr@nl
 18622     0E4D  2E7E               	goto	l13310
 18623     0E4E                     l13304:
 18624     0E4E  0879               	movf	strstr@h+1,w
 18625     0E4F  00F2               	movwf	strncmp@l+1
 18626     0E50  0878               	movf	strstr@h,w
 18627     0E51  00F1               	movwf	strncmp@l
 18628     0E52  087B               	movf	strstr@n+1,w
 18629     0E53  00F4               	movwf	strncmp@r+1
 18630     0E54  087A               	movf	strstr@n,w
 18631     0E55  00F3               	movwf	strncmp@r
 18632     0E56  0140               	movlb	0	; select bank0
 18633     0E57  0823               	movf	strstr@nl+1,w
 18634     0E58  00F6               	movwf	strncmp@n+1
 18635     0E59  0822               	movf	strstr@nl,w
 18636     0E5A  00F5               	movwf	strncmp@n
 18637     0E5B  318C  249B  318E   	fcall	_strncmp
 18638     0E5E  0871               	movf	?_strncmp,w
 18639     0E5F  0472               	iorwf	?_strncmp+1,w
 18640     0E60  1D03               	btfss	3,2
 18641     0E61  2E63               	goto	u10161
 18642     0E62  2E64               	goto	u10160
 18643     0E63                     u10161:
 18644     0E63  2E65               	goto	l13308
 18645     0E64                     u10160:
 18646     0E64                     l13306:
 18647     0E64  2E8F               	goto	l3326
 18648     0E65                     l13308:
 18649     0E65  0878               	movf	strstr@h,w
 18650     0E66  3E01               	addlw	1
 18651     0E67  00F1               	movwf	strchr@s
 18652     0E68  3000               	movlw	0
 18653     0E69  3D79               	addwfc	strstr@h+1,w
 18654     0E6A  00F2               	movwf	strchr@s+1
 18655     0E6B  087A               	movf	strstr@n,w
 18656     0E6C  0084               	movwf	4
 18657     0E6D  087B               	movf	strstr@n+1,w
 18658     0E6E  0085               	movwf	5
 18659     0E6F  0800               	movf	0,w	;code access
 18660     0E70  0140               	movlb	0	; select bank0
 18661     0E71  00A0               	movwf	??_strstr
 18662     0E72  01A1               	clrf	??_strstr+1
 18663     0E73  0820               	movf	??_strstr,w
 18664     0E74  00F3               	movwf	strchr@c
 18665     0E75  0821               	movf	??_strstr+1,w
 18666     0E76  00F4               	movwf	strchr@c+1
 18667     0E77  3193  23A4  318E   	fcall	_strchr
 18668     0E7A  0872               	movf	?_strchr+1,w
 18669     0E7B  00F9               	movwf	strstr@h+1
 18670     0E7C  0871               	movf	?_strchr,w
 18671     0E7D  00F8               	movwf	strstr@h
 18672     0E7E                     l13310:
 18673     0E7E  0878               	movf	strstr@h,w
 18674     0E7F  0479               	iorwf	strstr@h+1,w
 18675     0E80  1903               	btfsc	3,2
 18676     0E81  2E83               	goto	u10171
 18677     0E82  2E84               	goto	u10170
 18678     0E83                     u10171:
 18679     0E83  2E8D               	goto	l13314
 18680     0E84                     u10170:
 18681     0E84                     l13312:
 18682     0E84  0878               	movf	strstr@h,w
 18683     0E85  0086               	movwf	6
 18684     0E86  0879               	movf	strstr@h+1,w
 18685     0E87  0087               	movwf	7
 18686     0E88  0801               	movf	1,w
 18687     0E89  1D03               	btfss	3,2
 18688     0E8A  2E8C               	goto	u10181
 18689     0E8B  2E8D               	goto	u10180
 18690     0E8C                     u10181:
 18691     0E8C  2E4E               	goto	l13304
 18692     0E8D                     u10180:
 18693     0E8D                     l13314:
 18694     0E8D  01F8               	clrf	?_strstr
 18695     0E8E  01F9               	clrf	?_strstr+1
 18696     0E8F                     l3326:
 18697     0E8F  0008               	return
 18698     0E90                     __end_of_strstr:
 18699                           
 18700                           	psect	text47
 18701     0C9B                     __ptext47:	
 18702 ;; *************** function _strncmp *****************
 18703 ;; Defined at:
 18704 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;  l               2    1[COMMON] PTR const unsigned char 
 18707 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18708 ;;  r               2    3[COMMON] PTR const unsigned char 
 18709 ;;		 -> STR_5(12), STR_3(11), 
 18710 ;;  n               2    5[COMMON] unsigned int 
 18711 ;; Auto vars:     Size  Location     Type
 18712 ;;		None
 18713 ;; Return value:  Size  Location     Type
 18714 ;;                  2    1[COMMON] int 
 18715 ;; Registers used:
 18716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18722 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18725 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18726 ;;Total ram usage:        7 bytes
 18727 ;; Hardware stack levels used: 1
 18728 ;; Hardware stack levels required when called: 4
 18729 ;; This function calls:
 18730 ;;		Nothing
 18731 ;; This function is called by:
 18732 ;;		_strstr
 18733 ;; This function uses a non-reentrant model
 18734 ;;
 18735                           
 18736     0C9B                     _strncmp:	
 18737                           ;psect for function _strncmp
 18738                           
 18739     0C9B                     l13146:	
 18740                           ;incstack = 0
 18741                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18742                           
 18743     0C9B  3001               	movlw	1
 18744     0C9C  02F5               	subwf	strncmp@n,f
 18745     0C9D  3000               	movlw	0
 18746     0C9E  3BF6               	subwfb	strncmp@n+1,f
 18747     0C9F  0A75               	incf	strncmp@n,w
 18748     0CA0  1D03               	skipz
 18749     0CA1  2CA6               	goto	u9991
 18750     0CA2  0A76               	incf	strncmp@n+1,w
 18751     0CA3  1D03               	btfss	3,2
 18752     0CA4  2CA6               	goto	u9991
 18753     0CA5  2CA7               	goto	u9990
 18754     0CA6                     u9991:
 18755     0CA6  2CB6               	goto	l13154
 18756     0CA7                     u9990:
 18757     0CA7                     l13148:
 18758     0CA7  01F1               	clrf	?_strncmp
 18759     0CA8  01F2               	clrf	?_strncmp+1
 18760     0CA9  2CEC               	goto	l3339
 18761     0CAA                     l13152:
 18762     0CAA  3001               	movlw	1
 18763     0CAB  07F1               	addwf	strncmp@l,f
 18764     0CAC  3000               	movlw	0
 18765     0CAD  3DF2               	addwfc	strncmp@l+1,f
 18766     0CAE  3001               	movlw	1
 18767     0CAF  07F3               	addwf	strncmp@r,f
 18768     0CB0  3000               	movlw	0
 18769     0CB1  3DF4               	addwfc	strncmp@r+1,f
 18770     0CB2  3001               	movlw	1
 18771     0CB3  02F5               	subwf	strncmp@n,f
 18772     0CB4  3000               	movlw	0
 18773     0CB5  3BF6               	subwfb	strncmp@n+1,f
 18774     0CB6                     l13154:
 18775     0CB6  0871               	movf	strncmp@l,w
 18776     0CB7  0086               	movwf	6
 18777     0CB8  0872               	movf	strncmp@l+1,w
 18778     0CB9  0087               	movwf	7
 18779     0CBA  0801               	movf	1,w
 18780     0CBB  1903               	btfsc	3,2
 18781     0CBC  2CBE               	goto	u10001
 18782     0CBD  2CBF               	goto	u10000
 18783     0CBE                     u10001:
 18784     0CBE  2CDE               	goto	l13162
 18785     0CBF                     u10000:
 18786     0CBF                     l13156:
 18787     0CBF  0873               	movf	strncmp@r,w
 18788     0CC0  0084               	movwf	4
 18789     0CC1  0874               	movf	strncmp@r+1,w
 18790     0CC2  0085               	movwf	5
 18791     0CC3  0012               	moviw fsr0++
 18792     0CC4  1903               	btfsc	3,2
 18793     0CC5  2CC7               	goto	u10011
 18794     0CC6  2CC8               	goto	u10010
 18795     0CC7                     u10011:
 18796     0CC7  2CDE               	goto	l13162
 18797     0CC8                     u10010:
 18798     0CC8                     l13158:
 18799     0CC8  0875               	movf	strncmp@n,w
 18800     0CC9  0476               	iorwf	strncmp@n+1,w
 18801     0CCA  1903               	btfsc	3,2
 18802     0CCB  2CCD               	goto	u10021
 18803     0CCC  2CCE               	goto	u10020
 18804     0CCD                     u10021:
 18805     0CCD  2CDE               	goto	l13162
 18806     0CCE                     u10020:
 18807     0CCE                     l13160:
 18808     0CCE  0873               	movf	strncmp@r,w
 18809     0CCF  0084               	movwf	4
 18810     0CD0  0874               	movf	strncmp@r+1,w
 18811     0CD1  0085               	movwf	5
 18812     0CD2  0800               	movf	0,w	;code access
 18813     0CD3  00F7               	movwf	??_strncmp
 18814     0CD4  0871               	movf	strncmp@l,w
 18815     0CD5  0086               	movwf	6
 18816     0CD6  0872               	movf	strncmp@l+1,w
 18817     0CD7  0087               	movwf	7
 18818     0CD8  0801               	movf	1,w
 18819     0CD9  0677               	xorwf	??_strncmp,w
 18820     0CDA  1903               	skipnz
 18821     0CDB  2CDD               	goto	u10031
 18822     0CDC  2CDE               	goto	u10030
 18823     0CDD                     u10031:
 18824     0CDD  2CAA               	goto	l13152
 18825     0CDE                     u10030:
 18826     0CDE                     l13162:
 18827     0CDE  0871               	movf	strncmp@l,w
 18828     0CDF  0086               	movwf	6
 18829     0CE0  0872               	movf	strncmp@l+1,w
 18830     0CE1  0087               	movwf	7
 18831     0CE2  0873               	movf	strncmp@r,w
 18832     0CE3  0084               	movwf	4
 18833     0CE4  0874               	movf	strncmp@r+1,w
 18834     0CE5  0085               	movwf	5
 18835     0CE6  0800               	movf	0,w	;code access
 18836     0CE7  0201               	subwf	1,w
 18837     0CE8  00F1               	movwf	?_strncmp
 18838     0CE9  01F2               	clrf	?_strncmp+1
 18839     0CEA  1C03               	skipc
 18840     0CEB  03F2               	decf	?_strncmp+1,f
 18841     0CEC                     l3339:
 18842     0CEC  0008               	return
 18843     0CED                     __end_of_strncmp:
 18844                           
 18845                           	psect	text48
 18846     13A4                     __ptext48:	
 18847 ;; *************** function _strchr *****************
 18848 ;; Defined at:
 18849 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18850 ;; Parameters:    Size  Location     Type
 18851 ;;  s               2    1[COMMON] PTR const unsigned char 
 18852 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18853 ;;  c               2    3[COMMON] int 
 18854 ;; Auto vars:     Size  Location     Type
 18855 ;;		None
 18856 ;; Return value:  Size  Location     Type
 18857 ;;                  2    1[COMMON] PTR unsigned char 
 18858 ;; Registers used:
 18859 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18860 ;; Tracked objects:
 18861 ;;		On entry : 0/0
 18862 ;;		On exit  : 0/0
 18863 ;;		Unchanged: 0/0
 18864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18869 ;;Total ram usage:        6 bytes
 18870 ;; Hardware stack levels used: 1
 18871 ;; Hardware stack levels required when called: 4
 18872 ;; This function calls:
 18873 ;;		Nothing
 18874 ;; This function is called by:
 18875 ;;		_strstr
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879     13A4                     _strchr:	
 18880                           ;psect for function _strchr
 18881                           
 18882     13A4                     l3332:	
 18883                           ;incstack = 0
 18884                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18885                           
 18886     13A4                     l13166:
 18887     13A4  0871               	movf	strchr@s,w
 18888     13A5  0086               	movwf	6
 18889     13A6  0872               	movf	strchr@s+1,w
 18890     13A7  0087               	movwf	7
 18891     13A8  0801               	movf	1,w
 18892     13A9  0673               	xorwf	strchr@c,w
 18893     13AA  1D03               	skipz
 18894     13AB  2BAD               	goto	u10041
 18895     13AC  2BAE               	goto	u10040
 18896     13AD                     u10041:
 18897     13AD  2BAF               	goto	l13170
 18898     13AE                     u10040:
 18899     13AE                     l13168:
 18900     13AE  2BC1               	goto	l3334
 18901     13AF                     l13170:
 18902     13AF  0872               	movf	strchr@s+1,w
 18903     13B0  00F6               	movwf	??_strchr+1
 18904     13B1  0871               	movf	strchr@s,w
 18905     13B2  00F5               	movwf	??_strchr
 18906     13B3  0AF1               	incf	strchr@s,f
 18907     13B4  1903               	skipnz
 18908     13B5  0AF2               	incf	strchr@s+1,f
 18909     13B6  0875               	movf	??_strchr,w
 18910     13B7  0086               	movwf	6
 18911     13B8  0876               	movf	??_strchr+1,w
 18912     13B9  0087               	movwf	7
 18913     13BA  0801               	movf	1,w
 18914     13BB  1D03               	btfss	3,2
 18915     13BC  2BBE               	goto	u10051
 18916     13BD  2BBF               	goto	u10050
 18917     13BE                     u10051:
 18918     13BE  2BA4               	goto	l3332
 18919     13BF                     u10050:
 18920     13BF                     l13172:
 18921     13BF  01F1               	clrf	?_strchr
 18922     13C0  01F2               	clrf	?_strchr+1
 18923     13C1                     l3334:
 18924     13C1  0008               	return
 18925     13C2                     __end_of_strchr:
 18926                           
 18927                           	psect	text49
 18928     161B                     __ptext49:	
 18929 ;; *************** function _rn487x_PrintMessageStart *****************
 18930 ;; Defined at:
 18931 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18932 ;; Parameters:    Size  Location     Type
 18933 ;;		None
 18934 ;; Auto vars:     Size  Location     Type
 18935 ;;		None
 18936 ;; Return value:  Size  Location     Type
 18937 ;;                  1    wreg      void 
 18938 ;; Registers used:
 18939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18940 ;; Tracked objects:
 18941 ;;		On entry : 0/0
 18942 ;;		On exit  : 0/0
 18943 ;;		Unchanged: 0/0
 18944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18949 ;;Total ram usage:        0 bytes
 18950 ;; Hardware stack levels used: 1
 18951 ;; Hardware stack levels required when called: 5
 18952 ;; This function calls:
 18953 ;;		_EUSART1_Write
 18954 ;;		_EUSART2_Write
 18955 ;; This function is called by:
 18956 ;;		_RN487X_MessageHandler
 18957 ;; This function uses a non-reentrant model
 18958 ;;
 18959                           
 18960     161B                     _rn487x_PrintMessageStart:	
 18961                           ;psect for function _rn487x_PrintMessageStart
 18962                           
 18963     161B                     l13278:	
 18964                           ;incstack = 0
 18965                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18966                           
 18967                           
 18968                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18969     161B  303C               	movlw	60
 18970     161C  00F1               	movwf	EUSART2_Write@txData
 18971     161D  3002               	movlw	low ((_uart+2)| (0+32768))
 18972     161E  0084               	movwf	4
 18973     161F  3098               	movlw	high ((_uart+2)| (0+32768))
 18974     1620  0085               	movwf	5
 18975     1621  3F01               	moviw [1]fsr0
 18976     1622  008A               	movwf	10
 18977     1623  3F00               	moviw [0]fsr0
 18978     1624  000A               	callw
 18979     1625  3196               	pagesel	$
 18980                           
 18981                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18982     1626  303C               	movlw	60
 18983     1627  00F1               	movwf	EUSART2_Write@txData
 18984     1628  3002               	movlw	low ((_uart+2)| (0+32768))
 18985     1629  0084               	movwf	4
 18986     162A  3098               	movlw	high ((_uart+2)| (0+32768))
 18987     162B  0085               	movwf	5
 18988     162C  3F01               	moviw [1]fsr0
 18989     162D  008A               	movwf	10
 18990     162E  3F00               	moviw [0]fsr0
 18991     162F  000A               	callw
 18992     1630  3196               	pagesel	$
 18993                           
 18994                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18995     1631  303C               	movlw	60
 18996     1632  00F1               	movwf	EUSART2_Write@txData
 18997     1633  3002               	movlw	low ((_uart+2)| (0+32768))
 18998     1634  0084               	movwf	4
 18999     1635  3098               	movlw	high ((_uart+2)| (0+32768))
 19000     1636  0085               	movwf	5
 19001     1637  3F01               	moviw [1]fsr0
 19002     1638  008A               	movwf	10
 19003     1639  3F00               	moviw [0]fsr0
 19004     163A  000A               	callw
 19005     163B  3196               	pagesel	$
 19006                           
 19007                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19008     163C  3020               	movlw	32
 19009     163D  00F1               	movwf	EUSART2_Write@txData
 19010     163E  3002               	movlw	low ((_uart+2)| (0+32768))
 19011     163F  0084               	movwf	4
 19012     1640  3098               	movlw	high ((_uart+2)| (0+32768))
 19013     1641  0085               	movwf	5
 19014     1642  3F01               	moviw [1]fsr0
 19015     1643  008A               	movwf	10
 19016     1644  3F00               	moviw [0]fsr0
 19017     1645  000A               	callw
 19018     1646  3196               	pagesel	$
 19019     1647                     l832:
 19020     1647  0008               	return
 19021     1648                     __end_of_rn487x_PrintMessageStart:
 19022                           
 19023                           	psect	text50
 19024     0BAF                     __ptext50:	
 19025 ;; *************** function _rn487x_PrintMessageEnd *****************
 19026 ;; Defined at:
 19027 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;		None
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;		None
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;Total ram usage:        0 bytes
 19046 ;; Hardware stack levels used: 1
 19047 ;; Hardware stack levels required when called: 5
 19048 ;; This function calls:
 19049 ;;		_EUSART1_Write
 19050 ;;		_EUSART2_Write
 19051 ;; This function is called by:
 19052 ;;		_RN487X_MessageHandler
 19053 ;; This function uses a non-reentrant model
 19054 ;;
 19055                           
 19056     0BAF                     _rn487x_PrintMessageEnd:	
 19057                           ;psect for function _rn487x_PrintMessageEnd
 19058                           
 19059     0BAF                     l13280:	
 19060                           ;incstack = 0
 19061                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19062                           
 19063                           
 19064                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19065     0BAF  3020               	movlw	32
 19066     0BB0  00F1               	movwf	EUSART2_Write@txData
 19067     0BB1  3002               	movlw	low ((_uart+2)| (0+32768))
 19068     0BB2  0084               	movwf	4
 19069     0BB3  3098               	movlw	high ((_uart+2)| (0+32768))
 19070     0BB4  0085               	movwf	5
 19071     0BB5  3F01               	moviw [1]fsr0
 19072     0BB6  008A               	movwf	10
 19073     0BB7  3F00               	moviw [0]fsr0
 19074     0BB8  000A               	callw
 19075     0BB9  318B               	pagesel	$
 19076                           
 19077                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19078     0BBA  303E               	movlw	62
 19079     0BBB  00F1               	movwf	EUSART2_Write@txData
 19080     0BBC  3002               	movlw	low ((_uart+2)| (0+32768))
 19081     0BBD  0084               	movwf	4
 19082     0BBE  3098               	movlw	high ((_uart+2)| (0+32768))
 19083     0BBF  0085               	movwf	5
 19084     0BC0  3F01               	moviw [1]fsr0
 19085     0BC1  008A               	movwf	10
 19086     0BC2  3F00               	moviw [0]fsr0
 19087     0BC3  000A               	callw
 19088     0BC4  318B               	pagesel	$
 19089                           
 19090                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19091     0BC5  303E               	movlw	62
 19092     0BC6  00F1               	movwf	EUSART2_Write@txData
 19093     0BC7  3002               	movlw	low ((_uart+2)| (0+32768))
 19094     0BC8  0084               	movwf	4
 19095     0BC9  3098               	movlw	high ((_uart+2)| (0+32768))
 19096     0BCA  0085               	movwf	5
 19097     0BCB  3F01               	moviw [1]fsr0
 19098     0BCC  008A               	movwf	10
 19099     0BCD  3F00               	moviw [0]fsr0
 19100     0BCE  000A               	callw
 19101     0BCF  318B               	pagesel	$
 19102                           
 19103                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19104     0BD0  303E               	movlw	62
 19105     0BD1  00F1               	movwf	EUSART2_Write@txData
 19106     0BD2  3002               	movlw	low ((_uart+2)| (0+32768))
 19107     0BD3  0084               	movwf	4
 19108     0BD4  3098               	movlw	high ((_uart+2)| (0+32768))
 19109     0BD5  0085               	movwf	5
 19110     0BD6  3F01               	moviw [1]fsr0
 19111     0BD7  008A               	movwf	10
 19112     0BD8  3F00               	moviw [0]fsr0
 19113     0BD9  000A               	callw
 19114     0BDA  318B               	pagesel	$
 19115                           
 19116                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19117     0BDB  3020               	movlw	32
 19118     0BDC  00F1               	movwf	EUSART2_Write@txData
 19119     0BDD  3002               	movlw	low ((_uart+2)| (0+32768))
 19120     0BDE  0084               	movwf	4
 19121     0BDF  3098               	movlw	high ((_uart+2)| (0+32768))
 19122     0BE0  0085               	movwf	5
 19123     0BE1  3F01               	moviw [1]fsr0
 19124     0BE2  008A               	movwf	10
 19125     0BE3  3F00               	moviw [0]fsr0
 19126     0BE4  000A               	callw
 19127     0BE5  318B               	pagesel	$
 19128                           
 19129                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19130     0BE6  300D               	movlw	13
 19131     0BE7  00F1               	movwf	EUSART2_Write@txData
 19132     0BE8  3002               	movlw	low ((_uart+2)| (0+32768))
 19133     0BE9  0084               	movwf	4
 19134     0BEA  3098               	movlw	high ((_uart+2)| (0+32768))
 19135     0BEB  0085               	movwf	5
 19136     0BEC  3F01               	moviw [1]fsr0
 19137     0BED  008A               	movwf	10
 19138     0BEE  3F00               	moviw [0]fsr0
 19139     0BEF  000A               	callw
 19140     0BF0  318B               	pagesel	$
 19141                           
 19142                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19143     0BF1  300A               	movlw	10
 19144     0BF2  00F1               	movwf	EUSART2_Write@txData
 19145     0BF3  3002               	movlw	low ((_uart+2)| (0+32768))
 19146     0BF4  0084               	movwf	4
 19147     0BF5  3098               	movlw	high ((_uart+2)| (0+32768))
 19148     0BF6  0085               	movwf	5
 19149     0BF7  3F01               	moviw [1]fsr0
 19150     0BF8  008A               	movwf	10
 19151     0BF9  3F00               	moviw [0]fsr0
 19152     0BFA  000A               	callw
 19153     0BFB  318B               	pagesel	$
 19154     0BFC                     l835:
 19155     0BFC  0008               	return
 19156     0BFD                     __end_of_rn487x_PrintMessageEnd:
 19157                           
 19158                           	psect	text51
 19159     1795                     __ptext51:	
 19160 ;; *************** function _rn487x_PrintMessage *****************
 19161 ;; Defined at:
 19162 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19165 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19168 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19169 ;; Return value:  Size  Location     Type
 19170 ;;                  1    wreg      void 
 19171 ;; Registers used:
 19172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19173 ;; Tracked objects:
 19174 ;;		On entry : 0/0
 19175 ;;		On exit  : 0/0
 19176 ;;		Unchanged: 0/0
 19177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19179 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19181 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19182 ;;Total ram usage:       37 bytes
 19183 ;; Hardware stack levels used: 1
 19184 ;; Hardware stack levels required when called: 5
 19185 ;; This function calls:
 19186 ;;		_EUSART1_Write
 19187 ;;		_EUSART2_Write
 19188 ;;		_strcpy
 19189 ;;		_strlen
 19190 ;; This function is called by:
 19191 ;;		_RN487X_MessageHandler
 19192 ;; This function uses a non-reentrant model
 19193 ;;
 19194                           
 19195     1795                     _rn487x_PrintMessage:	
 19196                           ;psect for function _rn487x_PrintMessage
 19197                           
 19198     1795                     l13290:	
 19199                           ;incstack = 0
 19200                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19201                           
 19202                           
 19203                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19204     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19205     1796  00F2               	movwf	strcpy@src+1
 19206     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19207     1798  00F1               	movwf	strcpy@src
 19208     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19209     179A  3193  231A  3197   	fcall	_strcpy
 19210     179D                     l13292:
 19211                           
 19212                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19213     179D  0140               	movlb	0	; select bank0
 19214     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19215     179F  2FB4               	goto	l13298
 19216     17A0                     l13294:
 19217                           
 19218                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19219     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19220     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19221     17A2  0086               	movwf	6
 19222     17A3  0187               	clrf	7
 19223     17A4  0801               	movf	1,w
 19224     17A5  00F1               	movwf	EUSART2_Write@txData
 19225     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19226     17A7  0084               	movwf	4
 19227     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19228     17A9  0085               	movwf	5
 19229     17AA  3F01               	moviw [1]fsr0
 19230     17AB  008A               	movwf	10
 19231     17AC  3F00               	moviw [0]fsr0
 19232     17AD  000A               	callw
 19233     17AE  3197               	pagesel	$
 19234     17AF                     l13296:
 19235                           
 19236                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19237     17AF  3001               	movlw	1
 19238     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19239     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19240     17B2  0140               	movlb	0	; select bank0
 19241     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19242     17B4                     l13298:
 19243     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19244     17B5  00F2               	movwf	strlen@s+1
 19245     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19246     17B7  00F1               	movwf	strlen@s
 19247     17B8  3192  22B5  3197   	fcall	_strlen
 19248     17BB  0140               	movlb	0	; select bank0
 19249     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19250     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19251     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19252     17BF  0872               	movf	?_strlen+1,w
 19253     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19254     17C1  1D03               	skipz
 19255     17C2  2FC5               	goto	u10145
 19256     17C3  0871               	movf	?_strlen,w
 19257     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19258     17C5                     u10145:
 19259     17C5  1C03               	skipc
 19260     17C6  2FC8               	goto	u10141
 19261     17C7  2FC9               	goto	u10140
 19262     17C8                     u10141:
 19263     17C8  2FA0               	goto	l13294
 19264     17C9                     u10140:
 19265     17C9                     l848:
 19266     17C9  0008               	return
 19267     17CA                     __end_of_rn487x_PrintMessage:
 19268                           
 19269                           	psect	text52
 19270     131A                     __ptext52:	
 19271 ;; *************** function _strcpy *****************
 19272 ;; Defined at:
 19273 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19274 ;; Parameters:    Size  Location     Type
 19275 ;;  dest            1    wreg     PTR unsigned char 
 19276 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19277 ;;  src             2    1[COMMON] PTR const unsigned char 
 19278 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;  dest            1    6[COMMON] PTR unsigned char 
 19281 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19282 ;;  d               1    5[COMMON] PTR unsigned char 
 19283 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  1    wreg      PTR unsigned char 
 19286 ;; Registers used:
 19287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19297 ;;Total ram usage:        6 bytes
 19298 ;; Hardware stack levels used: 1
 19299 ;; Hardware stack levels required when called: 4
 19300 ;; This function calls:
 19301 ;;		Nothing
 19302 ;; This function is called by:
 19303 ;;		_rn487x_PrintMessage
 19304 ;; This function uses a non-reentrant model
 19305 ;;
 19306                           
 19307     131A                     _strcpy:	
 19308                           ;psect for function _strcpy
 19309                           
 19310                           
 19311                           ;incstack = 0
 19312                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19313                           ;strcpy@dest stored from wreg
 19314     131A  00F6               	movwf	strcpy@dest
 19315     131B                     l13076:
 19316     131B  0876               	movf	strcpy@dest,w
 19317     131C  00F5               	movwf	strcpy@d
 19318     131D                     l13078:
 19319     131D  0875               	movf	strcpy@d,w
 19320     131E  0086               	movwf	6
 19321     131F  0187               	clrf	7
 19322     1320  0AF5               	incf	strcpy@d,f
 19323     1321  0872               	movf	strcpy@src+1,w
 19324     1322  00F4               	movwf	??_strcpy+1
 19325     1323  0871               	movf	strcpy@src,w
 19326     1324  00F3               	movwf	??_strcpy
 19327     1325  0AF1               	incf	strcpy@src,f
 19328     1326  1903               	skipnz
 19329     1327  0AF2               	incf	strcpy@src+1,f
 19330     1328  0873               	movf	??_strcpy,w
 19331     1329  0084               	movwf	4
 19332     132A  0874               	movf	??_strcpy+1,w
 19333     132B  0085               	movwf	5
 19334     132C  0800               	movf	0,w
 19335     132D  3FC0               	movwi [0]fsr1
 19336     132E  0889               	movf	9,f
 19337     132F  1D03               	btfss	3,2
 19338     1330  2B32               	goto	u9901
 19339     1331  2B33               	goto	u9900
 19340     1332                     u9901:
 19341     1332  2B1D               	goto	l13078
 19342     1333                     u9900:
 19343     1333                     l3307:
 19344     1333  0008               	return
 19345     1334                     __end_of_strcpy:
 19346                           
 19347                           	psect	text53
 19348     1446                     __ptext53:	
 19349 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19350 ;; Defined at:
 19351 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  messageType     1    wreg     enum E12962
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;  messageType     1    3[COMMON] enum E12962
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  1    wreg      void 
 19358 ;; Registers used:
 19359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/0
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;Total ram usage:        1 bytes
 19370 ;; Hardware stack levels used: 1
 19371 ;; Hardware stack levels required when called: 5
 19372 ;; This function calls:
 19373 ;;		_EUSART1_Write
 19374 ;;		_EUSART2_Write
 19375 ;; This function is called by:
 19376 ;;		_RN487X_MessageHandler
 19377 ;; This function uses a non-reentrant model
 19378 ;;
 19379                           
 19380     1446                     _rn487x_PrintIndicatorCharacters:	
 19381                           ;psect for function _rn487x_PrintIndicatorCharacters
 19382                           
 19383                           
 19384                           ;incstack = 0
 19385                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19386                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19387     1446  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19388     1447                     l13282:
 19389                           
 19390                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19391     1447  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19392     1448  1D03               	btfss	3,2
 19393     1449  2C4B               	goto	u10121
 19394     144A  2C4C               	goto	u10120
 19395     144B                     u10121:
 19396     144B  2C58               	goto	l13286
 19397     144C                     u10120:
 19398     144C                     l13284:
 19399                           
 19400                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19401     144C  305B               	movlw	91
 19402     144D  00F1               	movwf	EUSART2_Write@txData
 19403     144E  3002               	movlw	low ((_uart+2)| (0+32768))
 19404     144F  0084               	movwf	4
 19405     1450  3098               	movlw	high ((_uart+2)| (0+32768))
 19406     1451  0085               	movwf	5
 19407     1452  3F01               	moviw [1]fsr0
 19408     1453  008A               	movwf	10
 19409     1454  3F00               	moviw [0]fsr0
 19410     1455  000A               	callw
 19411     1456  3194               	pagesel	$
 19412                           
 19413                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19414     1457  2C68               	goto	l842
 19415     1458                     l13286:
 19416     1458  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19417     1459  1D03               	btfss	3,2
 19418     145A  2C5C               	goto	u10131
 19419     145B  2C5D               	goto	u10130
 19420     145C                     u10131:
 19421     145C  2C68               	goto	l842
 19422     145D                     u10130:
 19423     145D                     l13288:
 19424                           
 19425                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19426     145D  305D               	movlw	93
 19427     145E  00F1               	movwf	EUSART2_Write@txData
 19428     145F  3002               	movlw	low ((_uart+2)| (0+32768))
 19429     1460  0084               	movwf	4
 19430     1461  3098               	movlw	high ((_uart+2)| (0+32768))
 19431     1462  0085               	movwf	5
 19432     1463  3F01               	moviw [1]fsr0
 19433     1464  008A               	movwf	10
 19434     1465  3F00               	moviw [0]fsr0
 19435     1466  000A               	callw
 19436     1467  3194               	pagesel	$
 19437     1468                     l842:	
 19438                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19439                           
 19440     1468  0008               	return
 19441     1469                     __end_of_rn487x_PrintIndicatorCharacters:
 19442                           
 19443                           	psect	text54
 19444     1E97                     __ptext54:	
 19445 ;; *************** function _RN487X_IsConnected *****************
 19446 ;; Defined at:
 19447 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;		None
 19450 ;; Auto vars:     Size  Location     Type
 19451 ;;		None
 19452 ;; Return value:  Size  Location     Type
 19453 ;;                  1    wreg      _Bool 
 19454 ;; Registers used:
 19455 ;;		wreg
 19456 ;; Tracked objects:
 19457 ;;		On entry : 0/0
 19458 ;;		On exit  : 0/0
 19459 ;;		Unchanged: 0/0
 19460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;Total ram usage:        0 bytes
 19466 ;; Hardware stack levels used: 1
 19467 ;; Hardware stack levels required when called: 4
 19468 ;; This function calls:
 19469 ;;		Nothing
 19470 ;; This function is called by:
 19471 ;;		_main
 19472 ;;		_RN487X_Example_TransparentUart
 19473 ;; This function uses a non-reentrant model
 19474 ;;
 19475                           
 19476     1E97                     _RN487X_IsConnected:	
 19477                           ;psect for function _RN487X_IsConnected
 19478                           
 19479     1E97                     l14482:	
 19480                           ;incstack = 0
 19481                           ; Regs used in _RN487X_IsConnected: [wreg]
 19482                           
 19483                           
 19484                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19485     1E97  0140               	movlb	0	; select bank0
 19486     1E98  0868               	movf	_connected,w
 19487     1E99                     l783:
 19488     1E99  0008               	return
 19489     1E9A                     __end_of_RN487X_IsConnected:
 19490                           
 19491                           	psect	text55
 19492     07A1                     __ptext55:	
 19493 ;; *************** function _RN487X_Init *****************
 19494 ;; Defined at:
 19495 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19496 ;; Parameters:    Size  Location     Type
 19497 ;;		None
 19498 ;; Auto vars:     Size  Location     Type
 19499 ;;		None
 19500 ;; Return value:  Size  Location     Type
 19501 ;;                  1    wreg      _Bool 
 19502 ;; Registers used:
 19503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19504 ;; Tracked objects:
 19505 ;;		On entry : 0/0
 19506 ;;		On exit  : 0/0
 19507 ;;		Unchanged: 0/0
 19508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19513 ;;Total ram usage:        0 bytes
 19514 ;; Hardware stack levels used: 1
 19515 ;; Hardware stack levels required when called: 6
 19516 ;; This function calls:
 19517 ;;		_RN487X_Delay
 19518 ;;		_RN487X_IndicateRx
 19519 ;;		_RN487X_Read@rn487x_interface$F1381
 19520 ;;		_RN487X_Reset
 19521 ;;		_RN487X_SetSystemMode
 19522 ;;		_RN487X_is_rx_ready
 19523 ;; This function is called by:
 19524 ;;		_main
 19525 ;; This function uses a non-reentrant model
 19526 ;;
 19527                           
 19528     07A1                     _RN487X_Init:	
 19529                           ;psect for function _RN487X_Init
 19530                           
 19531     07A1                     l14496:	
 19532                           ;incstack = 0
 19533                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19534                           
 19535                           
 19536                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19537     07A1  01F1               	clrf	RN487X_SetSystemMode@mode
 19538     07A2  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19539     07A3  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19540     07A4  0084               	movwf	4
 19541     07A5  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19542     07A6  0085               	movwf	5
 19543     07A7  3F01               	moviw [1]fsr0
 19544     07A8  008A               	movwf	10
 19545     07A9  3F00               	moviw [0]fsr0
 19546     07AA  000A               	callw
 19547     07AB  3187               	pagesel	$
 19548                           
 19549                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19550     07AC  01F1               	clrf	RN487X_Reset@value
 19551     07AD  0AF1               	incf	RN487X_Reset@value,f
 19552     07AE  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19553     07AF  0084               	movwf	4
 19554     07B0  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19555     07B1  0085               	movwf	5
 19556     07B2  3F01               	moviw [1]fsr0
 19557     07B3  008A               	movwf	10
 19558     07B4  3F00               	moviw [0]fsr0
 19559     07B5  000A               	callw
 19560     07B6  3187               	pagesel	$
 19561                           
 19562                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19563     07B7  3001               	movlw	1
 19564     07B8  00F4               	movwf	RN487X_Delay@delayCount
 19565     07B9  3000               	movlw	0
 19566     07BA  00F5               	movwf	RN487X_Delay@delayCount+1
 19567     07BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19568     07BC  0084               	movwf	4
 19569     07BD  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19570     07BE  0085               	movwf	5
 19571     07BF  3F01               	moviw [1]fsr0
 19572     07C0  008A               	movwf	10
 19573     07C1  3F00               	moviw [0]fsr0
 19574     07C2  000A               	callw
 19575     07C3  3187               	pagesel	$
 19576                           
 19577                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19578     07C4  01F1               	clrf	RN487X_Reset@value
 19579     07C5  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19580     07C6  0084               	movwf	4
 19581     07C7  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19582     07C8  0085               	movwf	5
 19583     07C9  3F01               	moviw [1]fsr0
 19584     07CA  008A               	movwf	10
 19585     07CB  3F00               	moviw [0]fsr0
 19586     07CC  000A               	callw
 19587     07CD  3187               	pagesel	$
 19588                           
 19589                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19590     07CE  01F1               	clrf	RN487X_IndicateRx@value
 19591     07CF  0AF1               	incf	RN487X_IndicateRx@value,f
 19592     07D0  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19593     07D1  0084               	movwf	4
 19594     07D2  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19595     07D3  0085               	movwf	5
 19596     07D4  3F01               	moviw [1]fsr0
 19597     07D5  008A               	movwf	10
 19598     07D6  3F00               	moviw [0]fsr0
 19599     07D7  000A               	callw
 19600     07D8  3187               	pagesel	$
 19601                           
 19602                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19603     07D9  30C8               	movlw	200
 19604     07DA  00F4               	movwf	RN487X_Delay@delayCount
 19605     07DB  3000               	movlw	0
 19606     07DC  00F5               	movwf	RN487X_Delay@delayCount+1
 19607     07DD  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19608     07DE  0084               	movwf	4
 19609     07DF  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19610     07E0  0085               	movwf	5
 19611     07E1  3F01               	moviw [1]fsr0
 19612     07E2  008A               	movwf	10
 19613     07E3  3F00               	moviw [0]fsr0
 19614     07E4  000A               	callw
 19615     07E5  3187               	pagesel	$
 19616                           
 19617                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19618     07E6  2FF0               	goto	l14500
 19619     07E7                     l14498:
 19620                           
 19621                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19622     07E7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19623     07E8  0084               	movwf	4
 19624     07E9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19625     07EA  0085               	movwf	5
 19626     07EB  3F01               	moviw [1]fsr0
 19627     07EC  008A               	movwf	10
 19628     07ED  3F00               	moviw [0]fsr0
 19629     07EE  000A               	callw
 19630     07EF  3187               	pagesel	$
 19631     07F0                     l14500:
 19632                           
 19633                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19634     07F0  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19635     07F1  0084               	movwf	4
 19636     07F2  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19637     07F3  0085               	movwf	5
 19638     07F4  3F01               	moviw [1]fsr0
 19639     07F5  008A               	movwf	10
 19640     07F6  3F00               	moviw [0]fsr0
 19641     07F7  000A               	callw
 19642     07F8  3187               	pagesel	$
 19643     07F9  3A00               	xorlw	0
 19644     07FA  1D03               	skipz
 19645     07FB  2FFD               	goto	u11701
 19646     07FC  2FFE               	goto	u11700
 19647     07FD                     u11701:
 19648     07FD  2FE7               	goto	l14498
 19649     07FE                     u11700:
 19650     07FE                     l879:
 19651     07FE  0008               	return
 19652     07FF                     __end_of_RN487X_Init:
 19653                           
 19654                           	psect	text56
 19655     1FCC                     __ptext56:	
 19656 ;; *************** function _RN487X_is_rx_ready *****************
 19657 ;; Defined at:
 19658 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19659 ;; Parameters:    Size  Location     Type
 19660 ;;		None
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;		None
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  1    wreg      _Bool 
 19665 ;; Registers used:
 19666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/0
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;Total ram usage:        0 bytes
 19677 ;; Hardware stack levels used: 1
 19678 ;; Hardware stack levels required when called: 5
 19679 ;; This function calls:
 19680 ;;		_EUSART1_is_rx_ready
 19681 ;;		_EUSART2_is_rx_ready
 19682 ;; This function is called by:
 19683 ;;		_RN487X_DataReady
 19684 ;;		_RN487X_Init
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688     1FCC                     _RN487X_is_rx_ready:	
 19689                           ;psect for function _RN487X_is_rx_ready
 19690                           
 19691     1FCC                     l13452:	
 19692                           ;incstack = 0
 19693                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19694                           
 19695                           
 19696                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19697     1FCC  301A               	movlw	low ((_uart+26)| (0+32768))
 19698     1FCD  0084               	movwf	4
 19699     1FCE  3098               	movlw	high ((_uart+26)| (0+32768))
 19700     1FCF  0085               	movwf	5
 19701     1FD0  3F01               	moviw [1]fsr0
 19702     1FD1  008A               	movwf	10
 19703     1FD2  3F00               	moviw [0]fsr0
 19704     1FD3  000A               	callw
 19705     1FD4  319F               	pagesel	$
 19706     1FD5                     l795:
 19707     1FD5  0008               	return
 19708     1FD6                     __end_of_RN487X_is_rx_ready:
 19709                           
 19710                           	psect	text57
 19711     1FA6                     __ptext57:	
 19712 ;; *************** function _EUSART1_is_rx_ready *****************
 19713 ;; Defined at:
 19714 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19715 ;; Parameters:    Size  Location     Type
 19716 ;;		None
 19717 ;; Auto vars:     Size  Location     Type
 19718 ;;		None
 19719 ;; Return value:  Size  Location     Type
 19720 ;;                  1    wreg      _Bool 
 19721 ;; Registers used:
 19722 ;;		wreg, status,2, status,0
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19732 ;;Total ram usage:        0 bytes
 19733 ;; Hardware stack levels used: 1
 19734 ;; Hardware stack levels required when called: 4
 19735 ;; This function calls:
 19736 ;;		Nothing
 19737 ;; This function is called by:
 19738 ;;		_RN487X_is_rx_ready
 19739 ;;		_RN487X_Example_TransparentUart
 19740 ;;		_main
 19741 ;; This function uses a non-reentrant model
 19742 ;;
 19743                           
 19744     1FA6                     _EUSART1_is_rx_ready:	
 19745                           ;psect for function _EUSART1_is_rx_ready
 19746                           
 19747     1FA6                     l13390:	
 19748                           ;incstack = 0
 19749                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19750                           
 19751                           
 19752                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19753     1FA6  0140               	movlb	0	; select bank0
 19754     1FA7  0858               	movf	_eusart1RxCount,w	;volatile
 19755     1FA8  1D03               	btfss	3,2
 19756     1FA9  2FAB               	goto	u10311
 19757     1FAA  2FAD               	goto	u10310
 19758     1FAB                     u10311:
 19759     1FAB  3001               	movlw	1
 19760     1FAC  2FAE               	goto	u10320
 19761     1FAD                     u10310:
 19762     1FAD  3000               	movlw	0
 19763     1FAE                     u10320:
 19764     1FAE                     l1201:
 19765     1FAE  0008               	return
 19766     1FAF                     __end_of_EUSART1_is_rx_ready:
 19767                           
 19768                           	psect	text58
 19769     1F9D                     __ptext58:	
 19770 ;; *************** function _EUSART2_is_rx_ready *****************
 19771 ;; Defined at:
 19772 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19773 ;; Parameters:    Size  Location     Type
 19774 ;;		None
 19775 ;; Auto vars:     Size  Location     Type
 19776 ;;		None
 19777 ;; Return value:  Size  Location     Type
 19778 ;;                  1    wreg      _Bool 
 19779 ;; Registers used:
 19780 ;;		wreg, status,2, status,0
 19781 ;; Tracked objects:
 19782 ;;		On entry : 0/0
 19783 ;;		On exit  : 0/0
 19784 ;;		Unchanged: 0/0
 19785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19790 ;;Total ram usage:        0 bytes
 19791 ;; Hardware stack levels used: 1
 19792 ;; Hardware stack levels required when called: 4
 19793 ;; This function calls:
 19794 ;;		Nothing
 19795 ;; This function is called by:
 19796 ;;		_RN487X_is_rx_ready
 19797 ;;		_RN487X_Example_TransparentUart
 19798 ;;		_main
 19799 ;; This function uses a non-reentrant model
 19800 ;;
 19801                           
 19802     1F9D                     _EUSART2_is_rx_ready:	
 19803                           ;psect for function _EUSART2_is_rx_ready
 19804                           
 19805     1F9D                     l13386:	
 19806                           ;incstack = 0
 19807                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19808                           
 19809                           
 19810                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19811     1F9D  0140               	movlb	0	; select bank0
 19812     1F9E  085F               	movf	_eusart2RxCount,w	;volatile
 19813     1F9F  1D03               	btfss	3,2
 19814     1FA0  2FA2               	goto	u10291
 19815     1FA1  2FA4               	goto	u10290
 19816     1FA2                     u10291:
 19817     1FA2  3001               	movlw	1
 19818     1FA3  2FA5               	goto	u10300
 19819     1FA4                     u10290:
 19820     1FA4  3000               	movlw	0
 19821     1FA5                     u10300:
 19822     1FA5                     l1057:
 19823     1FA5  0008               	return
 19824     1FA6                     __end_of_EUSART2_is_rx_ready:
 19825                           
 19826                           	psect	text59
 19827     102D                     __ptext59:	
 19828 ;; *************** function _RN487X_SetSystemMode *****************
 19829 ;; Defined at:
 19830 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19831 ;; Parameters:    Size  Location     Type
 19832 ;;  mode            1    1[COMMON] enum E204
 19833 ;; Auto vars:     Size  Location     Type
 19834 ;;		None
 19835 ;; Return value:  Size  Location     Type
 19836 ;;                  1    wreg      void 
 19837 ;; Registers used:
 19838 ;;		wreg, status,2, status,0
 19839 ;; Tracked objects:
 19840 ;;		On entry : 0/0
 19841 ;;		On exit  : 0/0
 19842 ;;		Unchanged: 0/0
 19843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19844 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19848 ;;Total ram usage:        1 bytes
 19849 ;; Hardware stack levels used: 1
 19850 ;; Hardware stack levels required when called: 4
 19851 ;; This function calls:
 19852 ;;		Nothing
 19853 ;; This function is called by:
 19854 ;;		_RN487X_Init
 19855 ;; This function uses a non-reentrant model
 19856 ;;
 19857                           
 19858     102D                     _RN487X_SetSystemMode:	
 19859                           ;psect for function _RN487X_SetSystemMode
 19860                           
 19861     102D                     l819:	
 19862                           ;incstack = 0
 19863                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19864                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19865                           
 19866     102D  0140               	movlb	0	; select bank0
 19867     102E  1392               	bcf	18,7	;volatile
 19868     102F                     l13670:
 19869                           
 19870                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19871     102F  0371               	decf	RN487X_SetSystemMode@mode,w
 19872     1030  1D03               	btfss	3,2
 19873     1031  2833               	goto	u10671
 19874     1032  2834               	goto	u10670
 19875     1033                     u10671:
 19876     1033  2836               	goto	l825
 19877     1034                     u10670:
 19878     1034                     l822:	
 19879                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19880                           
 19881     1034  1798               	bsf	24,7	;volatile
 19882     1035  2837               	goto	l827
 19883     1036                     l825:	
 19884                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19885                           
 19886     1036  1398               	bcf	24,7	;volatile
 19887     1037                     l827:	
 19888                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19889                           
 19890     1037  1792               	bsf	18,7	;volatile
 19891     1038                     l829:
 19892     1038  0008               	return
 19893     1039                     __end_of_RN487X_SetSystemMode:
 19894                           
 19895                           	psect	text60
 19896     100B                     __ptext60:	
 19897 ;; *************** function _RN487X_Reset *****************
 19898 ;; Defined at:
 19899 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19900 ;; Parameters:    Size  Location     Type
 19901 ;;  value           1    1[COMMON] _Bool 
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;		None
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1    wreg      void 
 19906 ;; Registers used:
 19907 ;;		wreg, status,2, status,0
 19908 ;; Tracked objects:
 19909 ;;		On entry : 0/0
 19910 ;;		On exit  : 0/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;Total ram usage:        1 bytes
 19918 ;; Hardware stack levels used: 1
 19919 ;; Hardware stack levels required when called: 4
 19920 ;; This function calls:
 19921 ;;		Nothing
 19922 ;; This function is called by:
 19923 ;;		_RN487X_Init
 19924 ;; This function uses a non-reentrant model
 19925 ;;
 19926                           
 19927     100B                     _RN487X_Reset:	
 19928                           ;psect for function _RN487X_Reset
 19929                           
 19930     100B                     l13666:	
 19931                           ;incstack = 0
 19932                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19933                           
 19934                           
 19935                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19936     100B  0371               	decf	RN487X_Reset@value,w
 19937     100C  1D03               	btfss	3,2
 19938     100D  280F               	goto	u10651
 19939     100E  2810               	goto	u10650
 19940     100F                     u10651:
 19941     100F  2813               	goto	l805
 19942     1010                     u10650:
 19943     1010                     l802:	
 19944                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19945                           
 19946     1010  0140               	movlb	0	; select bank0
 19947     1011  1018               	bcf	24,0	;volatile
 19948     1012  2815               	goto	l807
 19949     1013                     l805:	
 19950                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19951                           
 19952     1013  0140               	movlb	0	; select bank0
 19953     1014  1418               	bsf	24,0	;volatile
 19954     1015                     l807:
 19955     1015  0008               	return
 19956     1016                     __end_of_RN487X_Reset:
 19957                           
 19958                           	psect	text61
 19959     1000                     __ptext61:	
 19960 ;; *************** function _RN487X_IndicateRx *****************
 19961 ;; Defined at:
 19962 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  value           1    1[COMMON] _Bool 
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;		None
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  1    wreg      void 
 19969 ;; Registers used:
 19970 ;;		wreg, status,2, status,0
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/0
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19976 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19980 ;;Total ram usage:        1 bytes
 19981 ;; Hardware stack levels used: 1
 19982 ;; Hardware stack levels required when called: 4
 19983 ;; This function calls:
 19984 ;;		Nothing
 19985 ;; This function is called by:
 19986 ;;		_RN487X_Init
 19987 ;; This function uses a non-reentrant model
 19988 ;;
 19989                           
 19990     1000                     _RN487X_IndicateRx:	
 19991                           ;psect for function _RN487X_IndicateRx
 19992                           
 19993     1000                     l13668:	
 19994                           ;incstack = 0
 19995                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19996                           
 19997                           
 19998                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 19999     1000  0371               	decf	RN487X_IndicateRx@value,w
 20000     1001  1D03               	btfss	3,2
 20001     1002  2804               	goto	u10661
 20002     1003  2805               	goto	u10660
 20003     1004                     u10661:
 20004     1004  2808               	goto	l814
 20005     1005                     u10660:
 20006     1005                     l811:	
 20007                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20008                           
 20009     1005  0140               	movlb	0	; select bank0
 20010     1006  131A               	bcf	26,6	;volatile
 20011     1007  280A               	goto	l816
 20012     1008                     l814:	
 20013                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20014                           
 20015     1008  0140               	movlb	0	; select bank0
 20016     1009  171A               	bsf	26,6	;volatile
 20017     100A                     l816:
 20018     100A  0008               	return
 20019     100B                     __end_of_RN487X_IndicateRx:
 20020                           
 20021                           	psect	text62
 20022     12CE                     __ptext62:	
 20023 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20024 ;; Defined at:
 20025 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20026 ;; Parameters:    Size  Location     Type
 20027 ;;		None
 20028 ;; Auto vars:     Size  Location     Type
 20029 ;;  payload         5   23[BANK0 ] unsigned char [5]
 20030 ;;  temperature     2   28[BANK0 ] short 
 20031 ;; Return value:  Size  Location     Type
 20032 ;;                  1    wreg      void 
 20033 ;; Registers used:
 20034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20035 ;; Tracked objects:
 20036 ;;		On entry : 0/0
 20037 ;;		On exit  : 0/0
 20038 ;;		Unchanged: 0/0
 20039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20041 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20043 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20044 ;;Total ram usage:        7 bytes
 20045 ;; Hardware stack levels used: 1
 20046 ;; Hardware stack levels required when called: 15
 20047 ;; This function calls:
 20048 ;;		_LIGHTBLUE_SendPacket
 20049 ;;		_LIGHTBLUE_SplitWord
 20050 ;;		_TMAG5273_GetTemperatureValue
 20051 ;; This function is called by:
 20052 ;;		_main
 20053 ;; This function uses a non-reentrant model
 20054 ;;
 20055                           
 20056     12CE                     _LIGHTBLUE_TemperatureSensor:	
 20057                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20058                           
 20059     12CE                     l14320:	
 20060                           ;incstack = 0
 20061                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20062                           
 20063                           
 20064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 315:     *payload = '\0';
 20065     12CE  0140               	movlb	0	; select bank0
 20066     12CF  01B7               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20067     12D0                     l14322:
 20068                           
 20069                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 319:     TMAG5273_GetTemperatureVa
      +                          lue(temperature);
 20070     12D0  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20071     12D1  00B6               	movwf	TMAG5273_GetTemperatureValue@temperature+1
 20072     12D2  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20073     12D3  00B5               	movwf	TMAG5273_GetTemperatureValue@temperature
 20074     12D4  3190  205F  3192   	fcall	_TMAG5273_GetTemperatureValue
 20075     12D7                     l14324:
 20076                           
 20077                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20078     12D7  0140               	movlb	0	; select bank0
 20079     12D8  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20080     12D9  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20081     12DA  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20082     12DB  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20083     12DC  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20084     12DD  3190  2088  3192   	fcall	_LIGHTBLUE_SplitWord
 20085     12E0                     l14326:
 20086                           
 20087                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20088     12E0  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20089     12E1  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20090     12E2  3054               	movlw	84
 20091     12E3  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20092     12E6                     l124:
 20093     12E6  0008               	return
 20094     12E7                     __end_of_LIGHTBLUE_TemperatureSensor:
 20095                           
 20096                           	psect	text63
 20097     105F                     __ptext63:	
 20098 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20099 ;; Defined at:
 20100 ;;		line 2550 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20101 ;; Parameters:    Size  Location     Type
 20102 ;;  temperature     2   21[BANK0 ] PTR short 
 20103 ;;		 -> RAM(8192), 
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;		None
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  1    wreg      void 
 20108 ;; Registers used:
 20109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20110 ;; Tracked objects:
 20111 ;;		On entry : 0/0
 20112 ;;		On exit  : 0/0
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20119 ;;Total ram usage:        2 bytes
 20120 ;; Hardware stack levels used: 1
 20121 ;; Hardware stack levels required when called: 14
 20122 ;; This function calls:
 20123 ;;		_TMAG5273_CalcTemperature
 20124 ;; This function is called by:
 20125 ;;		_LIGHTBLUE_TemperatureSensor
 20126 ;; This function uses a non-reentrant model
 20127 ;;
 20128                           
 20129     105F                     _TMAG5273_GetTemperatureValue:	
 20130                           ;psect for function _TMAG5273_GetTemperatureValue
 20131                           
 20132     105F                     l13602:	
 20133                           ;incstack = 0
 20134                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20135                           
 20136                           
 20137                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2551:     *temperature
      +                           = TMAG5273_CalcTemperature();
 20138     105F  3193  2387  3190   	fcall	_TMAG5273_CalcTemperature
 20139     1062  0140               	movlb	0	; select bank0
 20140     1063  0835               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20141     1064  0086               	movwf	6
 20142     1065  0836               	movf	TMAG5273_GetTemperatureValue@temperature+1,w
 20143     1066  0087               	movwf	7
 20144     1067  082D               	movf	?_TMAG5273_CalcTemperature,w
 20145     1068  3FC0               	movwi [0]fsr1
 20146     1069  082E               	movf	?_TMAG5273_CalcTemperature+1,w
 20147     106A  3FC1               	movwi [1]fsr1
 20148     106B                     l2690:
 20149     106B  0008               	return
 20150     106C                     __end_of_TMAG5273_GetTemperatureValue:
 20151                           
 20152                           	psect	text64
 20153     1387                     __ptext64:	
 20154 ;; *************** function _TMAG5273_CalcTemperature *****************
 20155 ;; Defined at:
 20156 ;;		line 2554 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20157 ;; Parameters:    Size  Location     Type
 20158 ;;		None
 20159 ;; Auto vars:     Size  Location     Type
 20160 ;;  temperatureD    2   19[BANK0 ] short 
 20161 ;;  lowerByte       1   18[BANK0 ] unsigned char 
 20162 ;;  upperByte       1    0        unsigned char 
 20163 ;; Return value:  Size  Location     Type
 20164 ;;                  2   13[BANK0 ] short 
 20165 ;; Registers used:
 20166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20167 ;; Tracked objects:
 20168 ;;		On entry : 0/0
 20169 ;;		On exit  : 0/0
 20170 ;;		Unchanged: 0/0
 20171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20174 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20175 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20176 ;;Total ram usage:        8 bytes
 20177 ;; Hardware stack levels used: 1
 20178 ;; Hardware stack levels required when called: 13
 20179 ;; This function calls:
 20180 ;;		_i2c_read2ByteRegister
 20181 ;; This function is called by:
 20182 ;;		_TMAG5273_GetTemperatureValue
 20183 ;; This function uses a non-reentrant model
 20184 ;;
 20185                           
 20186     1387                     _TMAG5273_CalcTemperature:	
 20187                           ;psect for function _TMAG5273_CalcTemperature
 20188                           
 20189     1387                     l13568:	
 20190                           ;incstack = 0
 20191                           ; Regs used in _TMAG5273_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20192                           
 20193                           
 20194                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2555:     int16_t temp
      +                          eratureData;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2556:     
      +                          uint8_t upperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2557
      +                          :     uint8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c
      +                          : 2559:     temperatureData = i2c_read2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 20195     1387  3010               	movlw	16
 20196     1388  0140               	movlb	0	; select bank0
 20197     1389  00A4               	movwf	i2c_read2ByteRegister@reg
 20198     138A  3022               	movlw	34
 20199     138B  318A  224C  3193   	fcall	_i2c_read2ByteRegister
 20200     138E  0140               	movlb	0	; select bank0
 20201     138F  0825               	movf	?_i2c_read2ByteRegister+1,w
 20202     1390  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20203     1391  0824               	movf	?_i2c_read2ByteRegister,w
 20204     1392  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20205     1393                     l13570:
 20206     1393                     l13572:
 20207                           
 20208                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2561:     lowerByte = 
      +                          (uint8_t) temperatureData;
 20209     1393  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20210     1394  00B2               	movwf	TMAG5273_CalcTemperature@lowerByte
 20211     1395                     l13574:
 20212                           
 20213                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2563:     temperatureD
      +                          ata = ((int16_t) ( lowerByte << 8) | upperByte);
 20214     1395  0832               	movf	TMAG5273_CalcTemperature@lowerByte,w
 20215     1396  00AF               	movwf	??_TMAG5273_CalcTemperature
 20216     1397  01B0               	clrf	??_TMAG5273_CalcTemperature+1
 20217     1398  082F               	movf	??_TMAG5273_CalcTemperature,w
 20218     1399  00B0               	movwf	??_TMAG5273_CalcTemperature+1
 20219     139A  01AF               	clrf	??_TMAG5273_CalcTemperature
 20220     139B  082F               	movf	??_TMAG5273_CalcTemperature,w
 20221     139C  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20222     139D  0830               	movf	??_TMAG5273_CalcTemperature+1,w
 20223     139E  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20224     139F                     l13576:
 20225                           
 20226                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2565:     return tempe
      +                          ratureData;
 20227     139F  0834               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20228     13A0  00AE               	movwf	?_TMAG5273_CalcTemperature+1
 20229     13A1  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20230     13A2  00AD               	movwf	?_TMAG5273_CalcTemperature
 20231     13A3                     l2693:
 20232     13A3  0008               	return
 20233     13A4                     __end_of_TMAG5273_CalcTemperature:
 20234                           
 20235                           	psect	text65
 20236     0A4C                     __ptext65:	
 20237 ;; *************** function _i2c_read2ByteRegister *****************
 20238 ;; Defined at:
 20239 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  address         1    wreg     unsigned char 
 20242 ;;  reg             1    4[BANK0 ] unsigned char 
 20243 ;; Auto vars:     Size  Location     Type
 20244 ;;  address         1   10[BANK0 ] unsigned char 
 20245 ;;  result          2   11[BANK0 ] unsigned short 
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  2    4[BANK0 ] unsigned short 
 20248 ;; Registers used:
 20249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20258 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20259 ;;Total ram usage:        9 bytes
 20260 ;; Hardware stack levels used: 1
 20261 ;; Hardware stack levels required when called: 12
 20262 ;; This function calls:
 20263 ;;		_I2C1_Close
 20264 ;;		_I2C1_MasterWrite
 20265 ;;		_I2C1_Open
 20266 ;;		_I2C1_SetAddressNackCallback
 20267 ;;		_I2C1_SetBuffer
 20268 ;;		_I2C1_SetDataCompleteCallback
 20269 ;; This function is called by:
 20270 ;;		_TMAG5273_GetManufacture
 20271 ;;		_TMAG5273_CalcTemperature
 20272 ;;		_MCP9844_GetManufacture
 20273 ;;		_MCP9844_GetDevice
 20274 ;;		_MCP9844_CalcTemperature
 20275 ;;		_TMAG5273_GetDevice
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279     0A4C                     _i2c_read2ByteRegister:	
 20280                           ;psect for function _i2c_read2ByteRegister
 20281                           
 20282                           
 20283                           ;incstack = 0
 20284                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20285                           ;i2c_read2ByteRegister@address stored from wreg
 20286     0A4C  0140               	movlb	0	; select bank0
 20287     0A4D  00AA               	movwf	i2c_read2ByteRegister@address
 20288     0A4E                     l13344:
 20289     0A4E                     l13346:	
 20290                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 20291                           
 20292     0A4E  0140               	movlb	0	; select bank0
 20293     0A4F  082A               	movf	i2c_read2ByteRegister@address,w
 20294     0A50  3197  27CA  318A   	fcall	_I2C1_Open
 20295     0A53  3A00               	xorlw	0
 20296     0A54  1903               	skipnz
 20297     0A55  2A57               	goto	u10251
 20298     0A56  2A58               	goto	u10250
 20299     0A57                     u10251:
 20300     0A57  2A4E               	goto	l13346
 20301     0A58                     u10250:
 20302     0A58                     l13348:
 20303                           
 20304                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 20305     0A58  30F7               	movlw	low _rd2RegCompleteHandler
 20306     0A59  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20307     0A5A  3010               	movlw	high _rd2RegCompleteHandler
 20308     0A5B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20309     0A5C  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 20310     0A5D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20311     0A5E  319F  27EA  318A   	fcall	_I2C1_SetDataCompleteCallback
 20312     0A61                     l13350:
 20313                           
 20314                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 20315     0A61  3001               	movlw	1
 20316     0A62  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20317     0A63  3000               	movlw	0
 20318     0A64  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20319     0A65  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 20320     0A66  3190  206C  318A   	fcall	_I2C1_SetBuffer
 20321     0A69                     l13352:
 20322                           
 20323                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20324     0A69  3000               	movlw	0
 20325     0A6A  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20326     0A6B  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20327     0A6C  3000               	movlw	0
 20328     0A6D  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20329     0A6E  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20330     0A6F  319F  27F5  318A   	fcall	_I2C1_SetAddressNackCallback
 20331     0A72                     l13354:
 20332                           
 20333                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 20334     0A72  319E  26EC  318A   	fcall	_I2C1_MasterWrite
 20335     0A75                     l13356:	
 20336                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20337                           
 20338     0A75  3192  2255  318A   	fcall	_I2C1_Close
 20339     0A78  3A01               	xorlw	1
 20340     0A79  1903               	skipnz
 20341     0A7A  2A7C               	goto	u10261
 20342     0A7B  2A7D               	goto	u10260
 20343     0A7C                     u10261:
 20344     0A7C  2A75               	goto	l13356
 20345     0A7D                     u10260:
 20346     0A7D                     l13358:
 20347                           
 20348                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 20349     0A7D  0140               	movlb	0	; select bank0
 20350     0A7E  082C               	movf	i2c_read2ByteRegister@result+1,w
 20351     0A7F  00A7               	movwf	??_i2c_read2ByteRegister+1
 20352     0A80  082B               	movf	i2c_read2ByteRegister@result,w
 20353     0A81  00A6               	movwf	??_i2c_read2ByteRegister
 20354     0A82  0827               	movf	??_i2c_read2ByteRegister+1,w
 20355     0A83  00A6               	movwf	??_i2c_read2ByteRegister
 20356     0A84  01A7               	clrf	??_i2c_read2ByteRegister+1
 20357     0A85  082B               	movf	i2c_read2ByteRegister@result,w
 20358     0A86  00A9               	movwf	??_i2c_read2ByteRegister+3
 20359     0A87  01A8               	clrf	??_i2c_read2ByteRegister+2
 20360     0A88  0826               	movf	??_i2c_read2ByteRegister,w
 20361     0A89  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 20362     0A8A  00A4               	movwf	?_i2c_read2ByteRegister
 20363     0A8B  0827               	movf	??_i2c_read2ByteRegister+1,w
 20364     0A8C  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 20365     0A8D  00A5               	movwf	?_i2c_read2ByteRegister+1
 20366     0A8E                     l546:
 20367     0A8E  0008               	return
 20368     0A8F                     __end_of_i2c_read2ByteRegister:
 20369                           
 20370                           	psect	text66
 20371     065C                     __ptext66:	
 20372 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20373 ;; Defined at:
 20374 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20375 ;; Parameters:    Size  Location     Type
 20376 ;;  serialData      1    wreg     PTR unsigned char 
 20377 ;;		 -> lightBlueSerial(80), 
 20378 ;; Auto vars:     Size  Location     Type
 20379 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20380 ;;		 -> lightBlueSerial(80), 
 20381 ;;  length          1    8[COMMON] unsigned char 
 20382 ;; Return value:  Size  Location     Type
 20383 ;;                  1    wreg      void 
 20384 ;; Registers used:
 20385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;Total ram usage:        3 bytes
 20396 ;; Hardware stack levels used: 1
 20397 ;; Hardware stack levels required when called: 6
 20398 ;; This function calls:
 20399 ;;		_RN487X_Write
 20400 ;;		_strlen
 20401 ;; This function is called by:
 20402 ;;		_main
 20403 ;; This function uses a non-reentrant model
 20404 ;;
 20405                           
 20406     065C                     _LIGHTBLUE_SendSerialData:	
 20407                           ;psect for function _LIGHTBLUE_SendSerialData
 20408                           
 20409                           
 20410                           ;incstack = 0
 20411                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20412                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20413     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20414     065D                     l14374:
 20415                           
 20416                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20417     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20418     065E  00F1               	movwf	strlen@s
 20419     065F  3002               	movlw	2
 20420     0660  00F2               	movwf	strlen@s+1
 20421     0661  3192  22B5  3186   	fcall	_strlen
 20422     0664  0871               	movf	?_strlen,w
 20423     0665  0709               	addwf	9,w
 20424     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20425     0667                     l14376:
 20426                           
 20427                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20428     0667  305B               	movlw	91
 20429     0668  00F6               	movwf	RN487X_Write@txData
 20430     0669  3068               	movlw	low (_RN487X| (0+32768))
 20431     066A  0084               	movwf	4
 20432     066B  3098               	movlw	high (_RN487X| (0+32768))
 20433     066C  0085               	movwf	5
 20434     066D  3F01               	moviw [1]fsr0
 20435     066E  008A               	movwf	10
 20436     066F  3F00               	moviw [0]fsr0
 20437     0670  000A               	callw
 20438     0671  3186               	pagesel	$
 20439     0672                     l14378:
 20440                           
 20441                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20442     0672  0140               	movlb	0	; select bank0
 20443     0673  086C               	movf	_sequenceNumber,w
 20444     0674  390F               	andlw	15
 20445     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20446     0676  0086               	movwf	6
 20447     0677  3001               	movlw	1	; select bank2/3
 20448     0678  0087               	movwf	7
 20449     0679  0801               	movf	1,w
 20450     067A  00F6               	movwf	RN487X_Write@txData
 20451     067B  3068               	movlw	low (_RN487X| (0+32768))
 20452     067C  0084               	movwf	4
 20453     067D  3098               	movlw	high (_RN487X| (0+32768))
 20454     067E  0085               	movwf	5
 20455     067F  3F01               	moviw [1]fsr0
 20456     0680  008A               	movwf	10
 20457     0681  3F00               	moviw [0]fsr0
 20458     0682  000A               	callw
 20459     0683  3186               	pagesel	$
 20460     0684                     l14380:
 20461     0684  3001               	movlw	1
 20462     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20463     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20464     0687  0140               	movlb	0	; select bank0
 20465     0688  07EC               	addwf	_sequenceNumber,f
 20466     0689                     l14382:
 20467                           
 20468                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20469     0689  3053               	movlw	83
 20470     068A  00F6               	movwf	RN487X_Write@txData
 20471     068B  3068               	movlw	low (_RN487X| (0+32768))
 20472     068C  0084               	movwf	4
 20473     068D  3098               	movlw	high (_RN487X| (0+32768))
 20474     068E  0085               	movwf	5
 20475     068F  3F01               	moviw [1]fsr0
 20476     0690  008A               	movwf	10
 20477     0691  3F00               	moviw [0]fsr0
 20478     0692  000A               	callw
 20479     0693  3186               	pagesel	$
 20480     0694                     l14384:
 20481                           
 20482                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20483     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20484     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20485     0696  3004               	movlw	4
 20486     0697                     u11565:
 20487     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20488     0698  0B89               	decfsz	9,f
 20489     0699  2E97               	goto	u11565
 20490     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20491     069B  390F               	andlw	15
 20492     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20493     069D  0086               	movwf	6
 20494     069E  3001               	movlw	1	; select bank2/3
 20495     069F  0087               	movwf	7
 20496     06A0  0801               	movf	1,w
 20497     06A1  00F6               	movwf	RN487X_Write@txData
 20498     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20499     06A3  0084               	movwf	4
 20500     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20501     06A5  0085               	movwf	5
 20502     06A6  3F01               	moviw [1]fsr0
 20503     06A7  008A               	movwf	10
 20504     06A8  3F00               	moviw [0]fsr0
 20505     06A9  000A               	callw
 20506     06AA  3186               	pagesel	$
 20507     06AB                     l14386:
 20508                           
 20509                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20510     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20511     06AC  390F               	andlw	15
 20512     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20513     06AE  0086               	movwf	6
 20514     06AF  3001               	movlw	1	; select bank2/3
 20515     06B0  0087               	movwf	7
 20516     06B1  0801               	movf	1,w
 20517     06B2  00F6               	movwf	RN487X_Write@txData
 20518     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20519     06B4  0084               	movwf	4
 20520     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20521     06B6  0085               	movwf	5
 20522     06B7  3F01               	moviw [1]fsr0
 20523     06B8  008A               	movwf	10
 20524     06B9  3F00               	moviw [0]fsr0
 20525     06BA  000A               	callw
 20526     06BB  3186               	pagesel	$
 20527                           
 20528                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20529     06BC  2EF1               	goto	l14392
 20530     06BD                     l14388:
 20531                           
 20532                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20533     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20534     06BE  0086               	movwf	6
 20535     06BF  3002               	movlw	2	; select bank4/5
 20536     06C0  0087               	movwf	7
 20537     06C1  0801               	movf	1,w
 20538     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20539     06C3  3004               	movlw	4
 20540     06C4                     u11575:
 20541     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20542     06C5  0B89               	decfsz	9,f
 20543     06C6  2EC4               	goto	u11575
 20544     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20545     06C8  390F               	andlw	15
 20546     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20547     06CA  0086               	movwf	6
 20548     06CB  3001               	movlw	1	; select bank2/3
 20549     06CC  0087               	movwf	7
 20550     06CD  0801               	movf	1,w
 20551     06CE  00F6               	movwf	RN487X_Write@txData
 20552     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20553     06D0  0084               	movwf	4
 20554     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20555     06D2  0085               	movwf	5
 20556     06D3  3F01               	moviw [1]fsr0
 20557     06D4  008A               	movwf	10
 20558     06D5  3F00               	moviw [0]fsr0
 20559     06D6  000A               	callw
 20560     06D7  3186               	pagesel	$
 20561                           
 20562                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20563     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20564     06D9  0086               	movwf	6
 20565     06DA  3002               	movlw	2	; select bank4/5
 20566     06DB  0087               	movwf	7
 20567     06DC  0801               	movf	1,w
 20568     06DD  390F               	andlw	15
 20569     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20570     06DF  0086               	movwf	6
 20571     06E0  3001               	movlw	1	; select bank2/3
 20572     06E1  0087               	movwf	7
 20573     06E2  0801               	movf	1,w
 20574     06E3  00F6               	movwf	RN487X_Write@txData
 20575     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20576     06E5  0084               	movwf	4
 20577     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20578     06E7  0085               	movwf	5
 20579     06E8  3F01               	moviw [1]fsr0
 20580     06E9  008A               	movwf	10
 20581     06EA  3F00               	moviw [0]fsr0
 20582     06EB  000A               	callw
 20583     06EC  3186               	pagesel	$
 20584     06ED                     l14390:
 20585     06ED  3001               	movlw	1
 20586     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20587     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20588     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20589     06F1                     l14392:
 20590                           
 20591                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20592     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20593     06F2  0086               	movwf	6
 20594     06F3  3002               	movlw	2	; select bank4/5
 20595     06F4  0087               	movwf	7
 20596     06F5  0801               	movf	1,w
 20597     06F6  1D03               	btfss	3,2
 20598     06F7  2EF9               	goto	u11581
 20599     06F8  2EFA               	goto	u11580
 20600     06F9                     u11581:
 20601     06F9  2EBD               	goto	l14388
 20602     06FA                     u11580:
 20603     06FA                     l14394:
 20604                           
 20605                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20606     06FA  305D               	movlw	93
 20607     06FB  00F6               	movwf	RN487X_Write@txData
 20608     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20609     06FD  0084               	movwf	4
 20610     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20611     06FF  0085               	movwf	5
 20612     0700  3F01               	moviw [1]fsr0
 20613     0701  008A               	movwf	10
 20614     0702  3F00               	moviw [0]fsr0
 20615     0703  000A               	callw
 20616     0704  3186               	pagesel	$
 20617     0705                     l145:
 20618     0705  0008               	return
 20619     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20620                           
 20621                           	psect	text67
 20622     1761                     __ptext67:	
 20623 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20624 ;; Defined at:
 20625 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;		None
 20628 ;; Auto vars:     Size  Location     Type
 20629 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20630 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20631 ;;  value           1   21[BANK0 ] unsigned char 
 20632 ;; Return value:  Size  Location     Type
 20633 ;;                  1    wreg      void 
 20634 ;; Registers used:
 20635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20636 ;; Tracked objects:
 20637 ;;		On entry : 0/0
 20638 ;;		On exit  : 0/0
 20639 ;;		Unchanged: 0/0
 20640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20645 ;;Total ram usage:       23 bytes
 20646 ;; Hardware stack levels used: 1
 20647 ;; Hardware stack levels required when called: 7
 20648 ;; This function calls:
 20649 ;;		_LIGHTBLUE_SendPacket
 20650 ;;		_LIGHTBLUE_SplitByte
 20651 ;;		_strlen
 20652 ;; This function is called by:
 20653 ;;		_main
 20654 ;; This function uses a non-reentrant model
 20655 ;;
 20656                           
 20657     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20658                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20659                           
 20660     1761                     l14362:	
 20661                           ;incstack = 0
 20662                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20663                           
 20664                           
 20665                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20666     1761  0140               	movlb	0	; select bank0
 20667     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20668                           
 20669                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20670     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20671     1764  2F79               	goto	l14370
 20672     1765                     l14364:
 20673                           
 20674                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20675     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20676     1766  3E00               	addlw	low (STR_1| (0+32768))
 20677     1767  0084               	movwf	4
 20678     1768  30A0               	movlw	high (STR_1| (0+32768))
 20679     1769  1803               	skipnc
 20680     176A  3E01               	addlw	1
 20681     176B  0085               	movwf	5
 20682     176C  0800               	movf	0,w	;code access
 20683     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20684     176E                     l14366:
 20685                           
 20686                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20687     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20688     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20689     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20690     1771  3197  2730  3197   	fcall	_LIGHTBLUE_SplitByte
 20691     1774                     l14368:
 20692                           
 20693                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20694     1774  3001               	movlw	1
 20695     1775  0140               	movlb	0	; select bank0
 20696     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20697     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20698     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20699     1779                     l14370:
 20700     1779  3000               	movlw	low (STR_1| (0+32768))
 20701     177A  00F1               	movwf	strlen@s
 20702     177B  30A0               	movlw	high (STR_1| (0+32768))
 20703     177C  00F2               	movwf	strlen@s+1
 20704     177D  3192  22B5  3197   	fcall	_strlen
 20705     1780  0140               	movlb	0	; select bank0
 20706     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20707     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20708     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20709     1784  0872               	movf	?_strlen+1,w
 20710     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20711     1786  1D03               	skipz
 20712     1787  2F8A               	goto	u11555
 20713     1788  0871               	movf	?_strlen,w
 20714     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20715     178A                     u11555:
 20716     178A  1C03               	skipc
 20717     178B  2F8D               	goto	u11551
 20718     178C  2F8E               	goto	u11550
 20719     178D                     u11551:
 20720     178D  2F65               	goto	l14364
 20721     178E                     u11550:
 20722     178E                     l14372:
 20723                           
 20724                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20725     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20726     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20727     1790  3056               	movlw	86
 20728     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20729     1794                     l139:
 20730     1794  0008               	return
 20731     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20732                           
 20733                           	psect	text68
 20734     117F                     __ptext68:	
 20735 ;; *************** function _LIGHTBLUE_PushButton *****************
 20736 ;; Defined at:
 20737 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20738 ;; Parameters:    Size  Location     Type
 20739 ;;		None
 20740 ;; Auto vars:     Size  Location     Type
 20741 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20742 ;;  button          1    0[BANK0 ] unsigned char 
 20743 ;; Return value:  Size  Location     Type
 20744 ;;                  1    wreg      void 
 20745 ;; Registers used:
 20746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20747 ;; Tracked objects:
 20748 ;;		On entry : 0/0
 20749 ;;		On exit  : 0/0
 20750 ;;		Unchanged: 0/0
 20751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20756 ;;Total ram usage:        4 bytes
 20757 ;; Hardware stack levels used: 1
 20758 ;; Hardware stack levels required when called: 7
 20759 ;; This function calls:
 20760 ;;		_LIGHTBLUE_GetButtonValue
 20761 ;;		_LIGHTBLUE_SendPacket
 20762 ;;		_LIGHTBLUE_SplitByte
 20763 ;; This function is called by:
 20764 ;;		_main
 20765 ;; This function uses a non-reentrant model
 20766 ;;
 20767                           
 20768     117F                     _LIGHTBLUE_PushButton:	
 20769                           ;psect for function _LIGHTBLUE_PushButton
 20770                           
 20771     117F                     l14340:	
 20772                           ;incstack = 0
 20773                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20774                           
 20775                           
 20776                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20777     117F  319F  2718  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20778     1182  0140               	movlb	0	; select bank0
 20779     1183  00A0               	movwf	LIGHTBLUE_PushButton@button
 20780     1184                     l14342:
 20781                           
 20782                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20783     1184  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20784     1185                     l14344:
 20785                           
 20786                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20787     1185  0820               	movf	LIGHTBLUE_PushButton@button,w
 20788     1186  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20789     1187  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20790     1188  3197  2730  3191   	fcall	_LIGHTBLUE_SplitByte
 20791     118B                     l14346:
 20792                           
 20793                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20794     118B  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20795     118C  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20796     118D  3050               	movlw	80
 20797     118E  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20798     1191                     l130:
 20799     1191  0008               	return
 20800     1192                     __end_of_LIGHTBLUE_PushButton:
 20801                           
 20802                           	psect	text69
 20803     1F18                     __ptext69:	
 20804 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20805 ;; Defined at:
 20806 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20807 ;; Parameters:    Size  Location     Type
 20808 ;;		None
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;		None
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  1    wreg      unsigned char 
 20813 ;; Registers used:
 20814 ;;		wreg, status,2, status,0
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/0
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20824 ;;Total ram usage:        0 bytes
 20825 ;; Hardware stack levels used: 1
 20826 ;; Hardware stack levels required when called: 4
 20827 ;; This function calls:
 20828 ;;		Nothing
 20829 ;; This function is called by:
 20830 ;;		_LIGHTBLUE_PushButton
 20831 ;; This function uses a non-reentrant model
 20832 ;;
 20833                           
 20834     1F18                     _LIGHTBLUE_GetButtonValue:	
 20835                           ;psect for function _LIGHTBLUE_GetButtonValue
 20836                           
 20837     1F18                     l13624:	
 20838                           ;incstack = 0
 20839                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20840                           
 20841                           
 20842                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20843     1F18  0140               	movlb	0	; select bank0
 20844     1F19  0D0C               	rlf	12,w	;volatile
 20845     1F1A  0D0C               	rlf	12,w	;volatile
 20846     1F1B  3901               	andlw	1
 20847     1F1C  3C01               	sublw	1
 20848     1F1D                     l202:
 20849     1F1D  0008               	return
 20850     1F1E                     __end_of_LIGHTBLUE_GetButtonValue:
 20851                           
 20852                           	psect	text70
 20853     0590                     __ptext70:	
 20854 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20855 ;; Defined at:
 20856 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;  receivedByte    1    wreg     unsigned char 
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      void 
 20863 ;; Registers used:
 20864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20873 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20874 ;;Total ram usage:        9 bytes
 20875 ;; Hardware stack levels used: 1
 20876 ;; Hardware stack levels required when called: 11
 20877 ;; This function calls:
 20878 ;;		_LIGHTBLUE_PerformAction
 20879 ;; This function is called by:
 20880 ;;		_main
 20881 ;; This function uses a non-reentrant model
 20882 ;;
 20883                           
 20884     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20885                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20886                           
 20887                           
 20888                           ;incstack = 0
 20889                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20890                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20891     0590  0140               	movlb	0	; select bank0
 20892     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20893     0592                     l14396:
 20894                           
 20895                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20896     0592  2E3C               	goto	l14456
 20897     0593                     l14398:
 20898                           
 20899                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20900     0593  3002               	movlw	2
 20901     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20902                           
 20903                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20904     0595  2E5B               	goto	l187
 20905     0596                     l14400:
 20906                           
 20907                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20908     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20909     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20910                           
 20911                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20912     0598  3003               	movlw	3
 20913     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20914                           
 20915                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20916     059A  2E5B               	goto	l187
 20917     059B                     l14402:
 20918                           
 20919                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20920     059B  303A               	movlw	58
 20921     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20922     059D  1C03               	skipc
 20923     059E  2DA0               	goto	u11591
 20924     059F  2DA1               	goto	u11590
 20925     05A0                     u11591:
 20926     05A0  2DAA               	goto	l14406
 20927     05A1                     u11590:
 20928     05A1                     l14404:
 20929     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20930     05A2  395F               	andlw	95
 20931     05A3  3EC9               	addlw	201
 20932     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20933     05A5  30FF               	movlw	255
 20934     05A6  1803               	skipnc
 20935     05A7  3000               	movlw	0
 20936     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20937     05A9  2DB1               	goto	l164
 20938     05AA                     l14406:
 20939     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20940     05AB  3ED0               	addlw	208
 20941     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20942     05AD  30FF               	movlw	255
 20943     05AE  1803               	skipnc
 20944     05AF  3000               	movlw	0
 20945     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20946     05B1                     l164:
 20947     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 20948     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20949                           
 20950                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20951     05B3  3004               	movlw	4
 20952     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20953                           
 20954                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20955     05B5  2E5B               	goto	l187
 20956     05B6                     l14408:
 20957                           
 20958                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20959     05B6  303A               	movlw	58
 20960     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20961     05B8  1C03               	skipc
 20962     05B9  2DBB               	goto	u11601
 20963     05BA  2DBC               	goto	u11600
 20964     05BB                     u11601:
 20965     05BB  2DC5               	goto	l14412
 20966     05BC                     u11600:
 20967     05BC                     l14410:
 20968     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20969     05BD  395F               	andlw	95
 20970     05BE  3EC9               	addlw	201
 20971     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20972     05C0  30FF               	movlw	255
 20973     05C1  1803               	skipnc
 20974     05C2  3000               	movlw	0
 20975     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20976     05C4  2DCC               	goto	l14414
 20977     05C5                     l14412:
 20978     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20979     05C6  3ED0               	addlw	208
 20980     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20981     05C8  30FF               	movlw	255
 20982     05C9  1803               	skipnc
 20983     05CA  3000               	movlw	0
 20984     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20985     05CC                     l14414:
 20986     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20987     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20988     05CE  3003               	movlw	3
 20989     05CF                     u11615:
 20990     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20991     05D0  3EFF               	addlw	-1
 20992     05D1  1D03               	skipz
 20993     05D2  2DCF               	goto	u11615
 20994     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20995     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$464,w
 20996     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20997     05D6                     l14416:
 20998                           
 20999                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 21000     05D6  3005               	movlw	5
 21001     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21002                           
 21003                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 21004     05D8  2E5B               	goto	l187
 21005     05D9                     l14418:
 21006                           
 21007                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21008     05D9  303A               	movlw	58
 21009     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21010     05DB  1C03               	skipc
 21011     05DC  2DDE               	goto	u11621
 21012     05DD  2DDF               	goto	u11620
 21013     05DE                     u11621:
 21014     05DE  2DE8               	goto	l14422
 21015     05DF                     u11620:
 21016     05DF                     l14420:
 21017     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21018     05E0  395F               	andlw	95
 21019     05E1  3EC9               	addlw	201
 21020     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21021     05E3  30FF               	movlw	255
 21022     05E4  1803               	skipnc
 21023     05E5  3000               	movlw	0
 21024     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21025     05E7  2DEF               	goto	l14424
 21026     05E8                     l14422:
 21027     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21028     05E9  3ED0               	addlw	208
 21029     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21030     05EB  30FF               	movlw	255
 21031     05EC  1803               	skipnc
 21032     05ED  3000               	movlw	0
 21033     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21034     05EF                     l14424:
 21035                           
 21036                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 21037     05EF  3001               	movlw	1
 21038     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21039     05F1                     l14426:
 21040                           
 21041                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 21042     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21043     05F2  1D03               	btfss	3,2
 21044     05F3  2DF5               	goto	u11631
 21045     05F4  2DF6               	goto	u11630
 21046     05F5                     u11631:
 21047     05F5  2DF8               	goto	l14430
 21048     05F6                     u11630:
 21049     05F6                     l14428:
 21050                           
 21051                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 21052     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21053                           
 21054                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 21055     05F7  2E5B               	goto	l187
 21056     05F8                     l14430:
 21057                           
 21058                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 21059     05F8  3006               	movlw	6
 21060     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21061     05FA  2E5B               	goto	l187
 21062     05FB                     l14432:
 21063                           
 21064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21065     05FB  303A               	movlw	58
 21066     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21067     05FD  1C03               	skipc
 21068     05FE  2E00               	goto	u11641
 21069     05FF  2E01               	goto	u11640
 21070     0600                     u11641:
 21071     0600  2E0A               	goto	l14436
 21072     0601                     u11640:
 21073     0601                     l14434:
 21074     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21075     0602  395F               	andlw	95
 21076     0603  3EC9               	addlw	201
 21077     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21078     0605  30FF               	movlw	255
 21079     0606  1803               	skipnc
 21080     0607  3000               	movlw	0
 21081     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21082     0609  2E11               	goto	l14438
 21083     060A                     l14436:
 21084     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21085     060B  3ED0               	addlw	208
 21086     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21087     060D  30FF               	movlw	255
 21088     060E  1803               	skipnc
 21089     060F  3000               	movlw	0
 21090     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21091     0611                     l14438:
 21092     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 21093     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21094     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21095     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21096     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21097     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21098     0617  30F0               	movlw	240
 21099     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21100     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21101     061A  390F               	andlw	15
 21102     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21103     061C  30F0               	movlw	240
 21104     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21105     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$465,w
 21106     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21107     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21108     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$465+1,w
 21109     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21110     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21111     0624                     l14440:
 21112                           
 21113                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21114     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21115     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21116     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21117     0627  3188  2026  3185   	fcall	_LIGHTBLUE_PerformAction
 21118     062A                     l14442:
 21119                           
 21120                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21121     062A  3001               	movlw	1
 21122     062B  0140               	movlb	0	; select bank0
 21123     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21124     062D                     l14444:
 21125                           
 21126                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21127     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21128     062E  1D03               	btfss	3,2
 21129     062F  2E31               	goto	u11651
 21130     0630  2E32               	goto	u11650
 21131     0631                     u11651:
 21132     0631  2DD6               	goto	l14416
 21133     0632                     u11650:
 21134     0632  2DF6               	goto	l14428
 21135     0633                     l14450:
 21136                           
 21137                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21138     0633  305B               	movlw	91
 21139     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21140     0635  1D03               	btfss	3,2
 21141     0636  2E38               	goto	u11661
 21142     0637  2E39               	goto	u11660
 21143     0638                     u11661:
 21144     0638  2E5B               	goto	l187
 21145     0639                     u11660:
 21146     0639                     l14452:
 21147                           
 21148                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21149     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21150     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21151     063B  2E5B               	goto	l187
 21152     063C                     l14456:
 21153     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21154     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21155     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21156                           
 21157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21158                           ; Switch size 1, requested type "simple"
 21159                           ; Number of cases is 1, Range of values is 0 to 0
 21160                           ; switch strategies available:
 21161                           ; Name         Instructions Cycles
 21162                           ; simple_byte            4     3 (average)
 21163                           ; direct_byte            8     6 (fixed)
 21164                           ; jumptable            260     6 (fixed)
 21165                           ;	Chosen strategy is simple_byte
 21166     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21167     0640  3A00               	xorlw	0	; case 0
 21168     0641  1903               	skipnz
 21169     0642  2E44               	goto	l16626
 21170     0643  2E33               	goto	l14450
 21171     0644                     l16626:
 21172                           
 21173                           ; Switch size 1, requested type "simple"
 21174                           ; Number of cases is 7, Range of values is 0 to 6
 21175                           ; switch strategies available:
 21176                           ; Name         Instructions Cycles
 21177                           ; direct_byte           20     6 (fixed)
 21178                           ; simple_byte           22    12 (average)
 21179                           ; jumptable            260     6 (fixed)
 21180                           ;	Chosen strategy is simple_byte
 21181     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21182     0645  3A00               	xorlw	0	; case 0
 21183     0646  1903               	skipnz
 21184     0647  2E33               	goto	l14450
 21185     0648  3A01               	xorlw	1	; case 1
 21186     0649  1903               	skipnz
 21187     064A  2D93               	goto	l14398
 21188     064B  3A03               	xorlw	3	; case 2
 21189     064C  1903               	skipnz
 21190     064D  2D96               	goto	l14400
 21191     064E  3A01               	xorlw	1	; case 3
 21192     064F  1903               	skipnz
 21193     0650  2D9B               	goto	l14402
 21194     0651  3A07               	xorlw	7	; case 4
 21195     0652  1903               	skipnz
 21196     0653  2DB6               	goto	l14408
 21197     0654  3A01               	xorlw	1	; case 5
 21198     0655  1903               	skipnz
 21199     0656  2DD9               	goto	l14418
 21200     0657  3A03               	xorlw	3	; case 6
 21201     0658  1903               	skipnz
 21202     0659  2DFB               	goto	l14432
 21203     065A  2E33               	goto	l14450
 21204     065B                     l187:
 21205     065B  0008               	return
 21206     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21207                           
 21208                           	psect	text71
 21209     0826                     __ptext71:	
 21210 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21211 ;; Defined at:
 21212 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21213 ;; Parameters:    Size  Location     Type
 21214 ;;  id              1    wreg     unsigned char 
 21215 ;;  data            1    7[BANK0 ] unsigned char 
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;  id              1    9[BANK0 ] unsigned char 
 21218 ;;  led             1   10[BANK0 ] unsigned char 
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      void 
 21221 ;; Registers used:
 21222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21228 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21231 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21232 ;;Total ram usage:        4 bytes
 21233 ;; Hardware stack levels used: 1
 21234 ;; Hardware stack levels required when called: 10
 21235 ;; This function calls:
 21236 ;;		_EUSART1_Write
 21237 ;;		_EUSART2_Write
 21238 ;;		_LIGHTBLUE_SetErrorLedValue
 21239 ;; This function is called by:
 21240 ;;		_LIGHTBLUE_ParseIncomingPacket
 21241 ;; This function uses a non-reentrant model
 21242 ;;
 21243                           
 21244     0826                     _LIGHTBLUE_PerformAction:	
 21245                           ;psect for function _LIGHTBLUE_PerformAction
 21246                           
 21247                           
 21248                           ;incstack = 0
 21249                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21250                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21251     0826  0140               	movlb	0	; select bank0
 21252     0827  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21253     0828                     l13636:
 21254                           
 21255                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21256     0828  2855               	goto	l13648
 21257     0829                     l13638:
 21258                           
 21259                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21260     0829  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21261     082A  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21262     082B  3004               	movlw	4
 21263     082C                     u10585:
 21264     082C  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21265     082D  0B89               	decfsz	9,f
 21266     082E  282C               	goto	u10585
 21267     082F  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21268     0830  3901               	andlw	1
 21269     0831  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21270                           
 21271                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21272     0832  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21273     0833  1D03               	btfss	3,2
 21274     0834  2836               	goto	u10591
 21275     0835  2837               	goto	u10590
 21276     0836                     u10591:
 21277     0836  283F               	goto	l13642
 21278     0837                     u10590:
 21279     0837                     l13640:
 21280                           
 21281                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21282     0837  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21283     0838  283A               	goto	u10601
 21284     0839  283B               	goto	u10600
 21285     083A                     u10601:
 21286     083A  283D               	goto	l224
 21287     083B                     u10600:
 21288     083B                     l221:	
 21289                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21290                           
 21291     083B  1698               	bsf	24,5	;volatile
 21292     083C  285D               	goto	l230
 21293     083D                     l224:	
 21294                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21295                           
 21296     083D  1298               	bcf	24,5	;volatile
 21297     083E  285D               	goto	l230
 21298     083F                     l13642:
 21299                           
 21300                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21301     083F  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21302     0840  2842               	goto	u10611
 21303     0841  2844               	goto	u10610
 21304     0842                     u10611:
 21305     0842  3001               	movlw	1
 21306     0843  2845               	goto	u10620
 21307     0844                     u10610:
 21308     0844  3000               	movlw	0
 21309     0845                     u10620:
 21310     0845  3190  20A5  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21311     0848  285D               	goto	l230
 21312     0849                     l13644:
 21313                           
 21314                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21315     0849  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21316     084A  00F1               	movwf	EUSART2_Write@txData
 21317     084B  3002               	movlw	low ((_uart+2)| (0+32768))
 21318     084C  0084               	movwf	4
 21319     084D  3098               	movlw	high ((_uart+2)| (0+32768))
 21320     084E  0085               	movwf	5
 21321     084F  3F01               	moviw [1]fsr0
 21322     0850  008A               	movwf	10
 21323     0851  3F00               	moviw [0]fsr0
 21324     0852  000A               	callw
 21325     0853  3188               	pagesel	$
 21326                           
 21327                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21328     0854  285D               	goto	l230
 21329     0855                     l13648:
 21330     0855  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21331                           
 21332                           ; Switch size 1, requested type "simple"
 21333                           ; Number of cases is 2, Range of values is 76 to 83
 21334                           ; switch strategies available:
 21335                           ; Name         Instructions Cycles
 21336                           ; simple_byte            7     4 (average)
 21337                           ; direct_byte           25     9 (fixed)
 21338                           ; jumptable            263     9 (fixed)
 21339                           ;	Chosen strategy is simple_byte
 21340     0856  3A4C               	xorlw	76	; case 76
 21341     0857  1903               	skipnz
 21342     0858  2829               	goto	l13638
 21343     0859  3A1F               	xorlw	31	; case 83
 21344     085A  1903               	skipnz
 21345     085B  2849               	goto	l13644
 21346     085C  285D               	goto	l230
 21347     085D                     l230:
 21348     085D  0008               	return
 21349     085E                     __end_of_LIGHTBLUE_PerformAction:
 21350                           
 21351                           	psect	text72
 21352     10A5                     __ptext72:	
 21353 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21354 ;; Defined at:
 21355 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;  value           1    wreg     _Bool 
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;  value           1    6[BANK0 ] _Bool 
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  1    wreg      void 
 21362 ;; Registers used:
 21363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21372 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;Total ram usage:        2 bytes
 21374 ;; Hardware stack levels used: 1
 21375 ;; Hardware stack levels required when called: 9
 21376 ;; This function calls:
 21377 ;;		_LIGHTBLUE_UpdateErrorLed
 21378 ;; This function is called by:
 21379 ;;		_LIGHTBLUE_PerformAction
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383     10A5                     _LIGHTBLUE_SetErrorLedValue:	
 21384                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21385                           
 21386                           
 21387                           ;incstack = 0
 21388                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21389                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21390     10A5  0140               	movlb	0	; select bank0
 21391     10A6  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21392     10A7                     l13448:
 21393                           
 21394                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21395     10A7  3001               	movlw	1
 21396     10A8  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21397     10A9  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21398     10AA  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21399     10AB  0855               	movf	_bitMap+1,w	;volatile
 21400     10AC  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21401     10AD  39FE               	andlw	-2
 21402     10AE  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21403     10AF  00D5               	movwf	_bitMap+1	;volatile
 21404     10B0                     l13450:
 21405                           
 21406                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21407     10B0  3193  234F  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21408     10B3                     l211:
 21409     10B3  0008               	return
 21410     10B4                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21411                           
 21412                           	psect	text73
 21413     134F                     __ptext73:	
 21414 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21415 ;; Defined at:
 21416 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;		None
 21419 ;; Auto vars:     Size  Location     Type
 21420 ;;		None
 21421 ;; Return value:  Size  Location     Type
 21422 ;;                  1    wreg      void 
 21423 ;; Registers used:
 21424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21425 ;; Tracked objects:
 21426 ;;		On entry : 0/0
 21427 ;;		On exit  : 0/0
 21428 ;;		Unchanged: 0/0
 21429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21434 ;;Total ram usage:        0 bytes
 21435 ;; Hardware stack levels used: 1
 21436 ;; Hardware stack levels required when called: 8
 21437 ;; This function calls:
 21438 ;;		_RN487X_Delay
 21439 ;;		_RN487X_EnterCmdMode
 21440 ;;		_RN487X_EnterDataMode
 21441 ;;		_RN487X_SetOutputs
 21442 ;; This function is called by:
 21443 ;;		_LIGHTBLUE_SetErrorLedValue
 21444 ;; This function uses a non-reentrant model
 21445 ;;
 21446                           
 21447     134F                     _LIGHTBLUE_UpdateErrorLed:	
 21448                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21449                           
 21450     134F                     l13362:	
 21451                           ;incstack = 0
 21452                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21453                           
 21454                           
 21455                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21456     134F  3192  2226  3193   	fcall	_RN487X_EnterCmdMode
 21457     1352                     l13364:
 21458                           
 21459                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21460     1352  3014               	movlw	20
 21461     1353  00F4               	movwf	RN487X_Delay@delayCount
 21462     1354  3000               	movlw	0
 21463     1355  00F5               	movwf	RN487X_Delay@delayCount+1
 21464     1356  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21465     1357  0084               	movwf	4
 21466     1358  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21467     1359  0085               	movwf	5
 21468     135A  3F01               	moviw [1]fsr0
 21469     135B  008A               	movwf	10
 21470     135C  3F00               	moviw [0]fsr0
 21471     135D  000A               	callw
 21472     135E  3193               	pagesel	$
 21473     135F                     l13366:
 21474                           
 21475                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21476     135F  0140               	movlb	0	; select bank0
 21477     1360  0855               	movf	_bitMap+1,w	;volatile
 21478     1361  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21479     1362  0854               	movf	_bitMap,w	;volatile
 21480     1363  00A0               	movwf	RN487X_SetOutputs@bitMap
 21481     1364  318A  22D3  3193   	fcall	_RN487X_SetOutputs
 21482     1367                     l13368:
 21483                           
 21484                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21485     1367  3193  2334  3193   	fcall	_RN487X_EnterDataMode
 21486     136A                     l214:
 21487     136A  0008               	return
 21488     136B                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21489                           
 21490                           	psect	text74
 21491     0AD3                     __ptext74:	
 21492 ;; *************** function _RN487X_SetOutputs *****************
 21493 ;; Defined at:
 21494 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21495 ;; Parameters:    Size  Location     Type
 21496 ;;  bitMap          2    0[BANK0 ] struct .
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21499 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21500 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21501 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21502 ;; Return value:  Size  Location     Type
 21503 ;;                  1    wreg      _Bool 
 21504 ;; Registers used:
 21505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21506 ;; Tracked objects:
 21507 ;;		On entry : 0/0
 21508 ;;		On exit  : 0/0
 21509 ;;		Unchanged: 0/0
 21510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21514 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21515 ;;Total ram usage:        6 bytes
 21516 ;; Hardware stack levels used: 1
 21517 ;; Hardware stack levels required when called: 7
 21518 ;; This function calls:
 21519 ;;		_RN487X_ReadDefaultResponse
 21520 ;;		_RN487X_SendCmd
 21521 ;; This function is called by:
 21522 ;;		_LIGHTBLUE_UpdateErrorLed
 21523 ;; This function uses a non-reentrant model
 21524 ;;
 21525                           
 21526     0AD3                     _RN487X_SetOutputs:	
 21527                           ;psect for function _RN487X_SetOutputs
 21528                           
 21529     0AD3                     l13222:	
 21530                           ;incstack = 0
 21531                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21532                           
 21533                           
 21534                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21535     0AD3  3030               	movlw	48
 21536     0AD4  0140               	movlb	0	; select bank0
 21537     0AD5  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21538                           
 21539                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21540     0AD6  3030               	movlw	48
 21541     0AD7  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21542                           
 21543                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21544     0AD8  3030               	movlw	48
 21545     0AD9  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21546     0ADA                     l13224:
 21547                           
 21548                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21549     0ADA  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21550     0ADB  2ADD               	goto	u10101
 21551     0ADC  2ADE               	goto	u10100
 21552     0ADD                     u10101:
 21553     0ADD  2AE1               	goto	l13228
 21554     0ADE                     u10100:
 21555     0ADE                     l13226:
 21556                           
 21557                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21558     0ADE  3031               	movlw	49
 21559     0ADF  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21560                           
 21561                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21562     0AE0  2AE3               	goto	l13230
 21563     0AE1                     l13228:
 21564                           
 21565                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21566     0AE1  3030               	movlw	48
 21567     0AE2  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21568     0AE3                     l13230:
 21569                           
 21570                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21571     0AE3  0820               	movf	RN487X_SetOutputs@bitMap,w
 21572     0AE4  390F               	andlw	15
 21573     0AE5  3E30               	addlw	48
 21574     0AE6  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21575     0AE7                     l13232:
 21576                           
 21577                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21578     0AE7  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21579     0AE8  2AEA               	goto	u10111
 21580     0AE9  2AEB               	goto	u10110
 21581     0AEA                     u10111:
 21582     0AEA  2AEE               	goto	l13236
 21583     0AEB                     u10110:
 21584     0AEB                     l13234:
 21585                           
 21586                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21587     0AEB  3031               	movlw	49
 21588     0AEC  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21589                           
 21590                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21591     0AED  2AF0               	goto	l13238
 21592     0AEE                     l13236:
 21593                           
 21594                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21595     0AEE  3030               	movlw	48
 21596     0AEF  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21597     0AF0                     l13238:
 21598                           
 21599                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21600     0AF0  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21601     0AF1  390F               	andlw	15
 21602     0AF2  3E30               	addlw	48
 21603     0AF3  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21604     0AF4                     l13240:
 21605                           
 21606                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21607     0AF4  307C               	movlw	124
 21608     0AF5  0143               	movlb	3	; select bank3
 21609     0AF6  00A0               	movwf	_cmdBuf^(0+384)
 21610     0AF7                     l13242:
 21611                           
 21612                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21613     0AF7  304F               	movlw	79
 21614     0AF8  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21615     0AF9                     l13244:
 21616                           
 21617                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21618     0AF9  302C               	movlw	44
 21619     0AFA  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21620     0AFB                     l13246:
 21621                           
 21622                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21623     0AFB  0140               	movlb	0	; select bank0
 21624     0AFC  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21625     0AFD  0143               	movlb	3	; select bank3
 21626     0AFE  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21627     0AFF                     l13248:
 21628                           
 21629                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21630     0AFF  0140               	movlb	0	; select bank0
 21631     0B00  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21632     0B01  0143               	movlb	3	; select bank3
 21633     0B02  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21634     0B03                     l13250:
 21635                           
 21636                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21637     0B03  302C               	movlw	44
 21638     0B04  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21639     0B05                     l13252:
 21640                           
 21641                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21642     0B05  0140               	movlb	0	; select bank0
 21643     0B06  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21644     0B07  0143               	movlb	3	; select bank3
 21645     0B08  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21646     0B09                     l13254:
 21647                           
 21648                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21649     0B09  0140               	movlb	0	; select bank0
 21650     0B0A  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21651     0B0B  0143               	movlb	3	; select bank3
 21652     0B0C  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21653     0B0D                     l13256:
 21654                           
 21655                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21656     0B0D  300D               	movlw	13
 21657     0B0E  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21658     0B0F                     l13258:
 21659                           
 21660                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21661     0B0F  300A               	movlw	10
 21662     0B10  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21663     0B11                     l13260:
 21664                           
 21665                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21666     0B11  300A               	movlw	10
 21667     0B12  00F7               	movwf	RN487X_SendCmd@cmdLen
 21668     0B13  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21669     0B14  3196  26D2  318A   	fcall	_RN487X_SendCmd
 21670     0B17                     l13262:
 21671                           
 21672                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21673     0B17  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21674     0B1A                     l933:
 21675     0B1A  0008               	return
 21676     0B1B                     __end_of_RN487X_SetOutputs:
 21677                           
 21678                           	psect	text75
 21679     0EEC                     __ptext75:	
 21680 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21681 ;; Defined at:
 21682 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21683 ;; Parameters:    Size  Location     Type
 21684 ;;		None
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;  resp            3    3[COMMON] unsigned char [3]
 21687 ;;  status          1    6[COMMON] _Bool 
 21688 ;; Return value:  Size  Location     Type
 21689 ;;                  1    wreg      _Bool 
 21690 ;; Registers used:
 21691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21692 ;; Tracked objects:
 21693 ;;		On entry : 0/0
 21694 ;;		On exit  : 0/0
 21695 ;;		Unchanged: 0/0
 21696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21698 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21701 ;;Total ram usage:        4 bytes
 21702 ;; Hardware stack levels used: 1
 21703 ;; Hardware stack levels required when called: 6
 21704 ;; This function calls:
 21705 ;;		_RN487X_Read@rn487x_interface$F1381
 21706 ;; This function is called by:
 21707 ;;		_RN487X_SetOutputs
 21708 ;;		_RN487X_Disconnect
 21709 ;; This function uses a non-reentrant model
 21710 ;;
 21711                           
 21712     0EEC                     _RN487X_ReadDefaultResponse:	
 21713                           ;psect for function _RN487X_ReadDefaultResponse
 21714                           
 21715     0EEC                     l13108:	
 21716                           ;incstack = 0
 21717                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21718                           
 21719                           
 21720                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21721     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21722     0EED                     l13110:
 21723                           
 21724                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21725     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21726     0EEE  0084               	movwf	4
 21727     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21728     0EF0  0085               	movwf	5
 21729     0EF1  3F01               	moviw [1]fsr0
 21730     0EF2  008A               	movwf	10
 21731     0EF3  3F00               	moviw [0]fsr0
 21732     0EF4  000A               	callw
 21733     0EF5  318E               	pagesel	$
 21734     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21735     0EF7                     l13112:
 21736                           
 21737                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21738     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21739     0EF8  0084               	movwf	4
 21740     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21741     0EFA  0085               	movwf	5
 21742     0EFB  3F01               	moviw [1]fsr0
 21743     0EFC  008A               	movwf	10
 21744     0EFD  3F00               	moviw [0]fsr0
 21745     0EFE  000A               	callw
 21746     0EFF  318E               	pagesel	$
 21747     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21748     0F01                     l13114:
 21749                           
 21750                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21751     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21752     0F02  0084               	movwf	4
 21753     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21754     0F04  0085               	movwf	5
 21755     0F05  3F01               	moviw [1]fsr0
 21756     0F06  008A               	movwf	10
 21757     0F07  3F00               	moviw [0]fsr0
 21758     0F08  000A               	callw
 21759     0F09  318E               	pagesel	$
 21760     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21761                           
 21762                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21763     0F0B  2F2B               	goto	l13134
 21764     0F0C                     l13116:
 21765                           
 21766                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21767     0F0C  304F               	movlw	79
 21768     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21769     0F0E  1D03               	btfss	3,2
 21770     0F0F  2F11               	goto	u9951
 21771     0F10  2F12               	goto	u9950
 21772     0F11                     u9951:
 21773     0F11  2F33               	goto	l13136
 21774     0F12                     u9950:
 21775     0F12                     l13118:
 21776     0F12  304B               	movlw	75
 21777     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21778     0F14  1D03               	btfss	3,2
 21779     0F15  2F17               	goto	u9961
 21780     0F16  2F18               	goto	u9960
 21781     0F17                     u9961:
 21782     0F17  2F33               	goto	l13136
 21783     0F18                     u9960:
 21784     0F18                     l13120:
 21785                           
 21786                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21787     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21788     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21789     0F1A  2F33               	goto	l13136
 21790     0F1B                     l13122:
 21791                           
 21792                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21793     0F1B  3072               	movlw	114
 21794     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21795     0F1D  1D03               	btfss	3,2
 21796     0F1E  2F20               	goto	u9971
 21797     0F1F  2F21               	goto	u9970
 21798     0F20                     u9971:
 21799     0F20  2F33               	goto	l13136
 21800     0F21                     u9970:
 21801     0F21                     l13124:
 21802     0F21  3072               	movlw	114
 21803     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21804     0F23  1D03               	btfss	3,2
 21805     0F24  2F26               	goto	u9981
 21806     0F25  2F27               	goto	u9980
 21807     0F26                     u9981:
 21808     0F26  2F33               	goto	l13136
 21809     0F27                     u9980:
 21810     0F27                     l13126:
 21811                           
 21812                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21813     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21814     0F28  2F33               	goto	l13136
 21815     0F29                     l13128:
 21816                           
 21817                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21818     0F29  3000               	movlw	0
 21819     0F2A  2F73               	goto	l908
 21820     0F2B                     l13134:
 21821     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21822                           
 21823                           ; Switch size 1, requested type "simple"
 21824                           ; Number of cases is 2, Range of values is 65 to 69
 21825                           ; switch strategies available:
 21826                           ; Name         Instructions Cycles
 21827                           ; simple_byte            7     4 (average)
 21828                           ; direct_byte           19     9 (fixed)
 21829                           ; jumptable            263     9 (fixed)
 21830                           ;	Chosen strategy is simple_byte
 21831     0F2C  3A41               	xorlw	65	; case 65
 21832     0F2D  1903               	skipnz
 21833     0F2E  2F0C               	goto	l13116
 21834     0F2F  3A04               	xorlw	4	; case 69
 21835     0F30  1903               	skipnz
 21836     0F31  2F1B               	goto	l13122
 21837     0F32  2F29               	goto	l13128
 21838     0F33                     l13136:
 21839                           
 21840                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21841     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21842     0F34  0084               	movwf	4
 21843     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21844     0F36  0085               	movwf	5
 21845     0F37  3F01               	moviw [1]fsr0
 21846     0F38  008A               	movwf	10
 21847     0F39  3F00               	moviw [0]fsr0
 21848     0F3A  000A               	callw
 21849     0F3B  318E               	pagesel	$
 21850                           
 21851                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21852     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21853     0F3D  0084               	movwf	4
 21854     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21855     0F3F  0085               	movwf	5
 21856     0F40  3F01               	moviw [1]fsr0
 21857     0F41  008A               	movwf	10
 21858     0F42  3F00               	moviw [0]fsr0
 21859     0F43  000A               	callw
 21860     0F44  318E               	pagesel	$
 21861                           
 21862                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21863     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21864     0F46  0084               	movwf	4
 21865     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21866     0F48  0085               	movwf	5
 21867     0F49  3F01               	moviw [1]fsr0
 21868     0F4A  008A               	movwf	10
 21869     0F4B  3F00               	moviw [0]fsr0
 21870     0F4C  000A               	callw
 21871     0F4D  318E               	pagesel	$
 21872                           
 21873                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21874     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21875     0F4F  0084               	movwf	4
 21876     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21877     0F51  0085               	movwf	5
 21878     0F52  3F01               	moviw [1]fsr0
 21879     0F53  008A               	movwf	10
 21880     0F54  3F00               	moviw [0]fsr0
 21881     0F55  000A               	callw
 21882     0F56  318E               	pagesel	$
 21883                           
 21884                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21885     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21886     0F58  0084               	movwf	4
 21887     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21888     0F5A  0085               	movwf	5
 21889     0F5B  3F01               	moviw [1]fsr0
 21890     0F5C  008A               	movwf	10
 21891     0F5D  3F00               	moviw [0]fsr0
 21892     0F5E  000A               	callw
 21893     0F5F  318E               	pagesel	$
 21894                           
 21895                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21896     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21897     0F61  0084               	movwf	4
 21898     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21899     0F63  0085               	movwf	5
 21900     0F64  3F01               	moviw [1]fsr0
 21901     0F65  008A               	movwf	10
 21902     0F66  3F00               	moviw [0]fsr0
 21903     0F67  000A               	callw
 21904     0F68  318E               	pagesel	$
 21905                           
 21906                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21907     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21908     0F6A  0084               	movwf	4
 21909     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21910     0F6C  0085               	movwf	5
 21911     0F6D  3F01               	moviw [1]fsr0
 21912     0F6E  008A               	movwf	10
 21913     0F6F  3F00               	moviw [0]fsr0
 21914     0F70  000A               	callw
 21915     0F71  318E               	pagesel	$
 21916     0F72                     l13138:
 21917                           
 21918                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21919     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21920     0F73                     l908:
 21921     0F73  0008               	return
 21922     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21923                           
 21924                           	psect	text76
 21925     1334                     __ptext76:	
 21926 ;; *************** function _RN487X_EnterDataMode *****************
 21927 ;; Defined at:
 21928 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;		None
 21931 ;; Auto vars:     Size  Location     Type
 21932 ;;		None
 21933 ;; Return value:  Size  Location     Type
 21934 ;;                  1    wreg      _Bool 
 21935 ;; Registers used:
 21936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21937 ;; Tracked objects:
 21938 ;;		On entry : 0/0
 21939 ;;		On exit  : 0/0
 21940 ;;		Unchanged: 0/0
 21941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21946 ;;Total ram usage:        0 bytes
 21947 ;; Hardware stack levels used: 1
 21948 ;; Hardware stack levels required when called: 7
 21949 ;; This function calls:
 21950 ;;		_RN487X_ReadMsg
 21951 ;;		_RN487X_SendCmd
 21952 ;; This function is called by:
 21953 ;;		_LIGHTBLUE_UpdateErrorLed
 21954 ;; This function uses a non-reentrant model
 21955 ;;
 21956                           
 21957     1334                     _RN487X_EnterDataMode:	
 21958                           ;psect for function _RN487X_EnterDataMode
 21959                           
 21960     1334                     l13266:	
 21961                           ;incstack = 0
 21962                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21963                           
 21964                           
 21965                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21966     1334  302D               	movlw	45
 21967     1335  0143               	movlb	3	; select bank3
 21968     1336  00A0               	movwf	_cmdBuf^(0+384)
 21969                           
 21970                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21971     1337  302D               	movlw	45
 21972     1338  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21973                           
 21974                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21975     1339  302D               	movlw	45
 21976     133A  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21977                           
 21978                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21979     133B  300D               	movlw	13
 21980     133C  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21981                           
 21982                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21983     133D  300A               	movlw	10
 21984     133E  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21985     133F                     l13268:
 21986                           
 21987                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21988     133F  3005               	movlw	5
 21989     1340  00F7               	movwf	RN487X_SendCmd@cmdLen
 21990     1341  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21991     1342  3196  26D2  3193   	fcall	_RN487X_SendCmd
 21992     1345                     l13270:
 21993                           
 21994                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21995     1345  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21996     1346  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21997     1347  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21998     1348  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21999     1349  3005               	movlw	5
 22000     134A  00F5               	movwf	RN487X_ReadMsg@msgLen
 22001     134B  3195  25C3  3193   	fcall	_RN487X_ReadMsg
 22002     134E                     l926:
 22003     134E  0008               	return
 22004     134F                     __end_of_RN487X_EnterDataMode:
 22005                           
 22006                           	psect	text77
 22007     1226                     __ptext77:	
 22008 ;; *************** function _RN487X_EnterCmdMode *****************
 22009 ;; Defined at:
 22010 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 22011 ;; Parameters:    Size  Location     Type
 22012 ;;		None
 22013 ;; Auto vars:     Size  Location     Type
 22014 ;;		None
 22015 ;; Return value:  Size  Location     Type
 22016 ;;                  1    wreg      _Bool 
 22017 ;; Registers used:
 22018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22019 ;; Tracked objects:
 22020 ;;		On entry : 0/0
 22021 ;;		On exit  : 0/0
 22022 ;;		Unchanged: 0/0
 22023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22028 ;;Total ram usage:        0 bytes
 22029 ;; Hardware stack levels used: 1
 22030 ;; Hardware stack levels required when called: 7
 22031 ;; This function calls:
 22032 ;;		_RN487X_ReadMsg
 22033 ;;		_RN487X_SendCmd
 22034 ;; This function is called by:
 22035 ;;		_LIGHTBLUE_UpdateErrorLed
 22036 ;; This function uses a non-reentrant model
 22037 ;;
 22038                           
 22039     1226                     _RN487X_EnterCmdMode:	
 22040                           ;psect for function _RN487X_EnterCmdMode
 22041                           
 22042     1226                     l13214:	
 22043                           ;incstack = 0
 22044                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22045                           
 22046                           
 22047                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 22048     1226  3024               	movlw	36
 22049     1227  0143               	movlb	3	; select bank3
 22050     1228  00A0               	movwf	_cmdBuf^(0+384)
 22051                           
 22052                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 22053     1229  3024               	movlw	36
 22054     122A  00A1               	movwf	(_cmdBuf^(0+384)+1)
 22055                           
 22056                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 22057     122B  3024               	movlw	36
 22058     122C  00A2               	movwf	(_cmdBuf^(0+384)+2)
 22059     122D                     l13216:
 22060                           
 22061                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 22062     122D  3003               	movlw	3
 22063     122E  00F7               	movwf	RN487X_SendCmd@cmdLen
 22064     122F  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22065     1230  3196  26D2  3192   	fcall	_RN487X_SendCmd
 22066     1233                     l13218:
 22067                           
 22068                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22069     1233  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22070     1234  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22071     1235  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22072     1236  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22073     1237  3005               	movlw	5
 22074     1238  00F5               	movwf	RN487X_ReadMsg@msgLen
 22075     1239  3195  25C3  3192   	fcall	_RN487X_ReadMsg
 22076     123C                     l921:
 22077     123C  0008               	return
 22078     123D                     __end_of_RN487X_EnterCmdMode:
 22079                           
 22080                           	psect	text78
 22081     16D2                     __ptext78:	
 22082 ;; *************** function _RN487X_SendCmd *****************
 22083 ;; Defined at:
 22084 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22085 ;; Parameters:    Size  Location     Type
 22086 ;;  cmd             1    wreg     PTR const unsigned char 
 22087 ;;		 -> cmdBuf(64), 
 22088 ;;  cmdLen          1    7[COMMON] unsigned char 
 22089 ;; Auto vars:     Size  Location     Type
 22090 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22091 ;;		 -> cmdBuf(64), 
 22092 ;;  index           1    9[COMMON] unsigned char 
 22093 ;; Return value:  Size  Location     Type
 22094 ;;                  1    wreg      void 
 22095 ;; Registers used:
 22096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22097 ;; Tracked objects:
 22098 ;;		On entry : 0/0
 22099 ;;		On exit  : 0/0
 22100 ;;		Unchanged: 0/0
 22101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22106 ;;Total ram usage:        4 bytes
 22107 ;; Hardware stack levels used: 1
 22108 ;; Hardware stack levels required when called: 6
 22109 ;; This function calls:
 22110 ;;		_RN487X_Write
 22111 ;;		_RN487X_is_tx_done
 22112 ;; This function is called by:
 22113 ;;		_RN487X_EnterCmdMode
 22114 ;;		_RN487X_EnterDataMode
 22115 ;;		_RN487X_SetOutputs
 22116 ;;		_RN487X_GetCmd
 22117 ;;		_RN487X_GetInputsValues
 22118 ;;		_RN487X_RebootCmd
 22119 ;;		_RN487X_Disconnect
 22120 ;; This function uses a non-reentrant model
 22121 ;;
 22122                           
 22123     16D2                     _RN487X_SendCmd:	
 22124                           ;psect for function _RN487X_SendCmd
 22125                           
 22126                           
 22127                           ;incstack = 0
 22128                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22129                           ;RN487X_SendCmd@cmd stored from wreg
 22130     16D2  00FA               	movwf	RN487X_SendCmd@cmd
 22131     16D3                     l13080:
 22132                           
 22133                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22134     16D3  01F9               	clrf	RN487X_SendCmd@index
 22135                           
 22136                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22137     16D4  2EF9               	goto	l13088
 22138     16D5                     l13082:
 22139                           
 22140                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22141     16D5  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22142     16D6  0084               	movwf	4
 22143     16D7  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22144     16D8  0085               	movwf	5
 22145     16D9  3F01               	moviw [1]fsr0
 22146     16DA  008A               	movwf	10
 22147     16DB  3F00               	moviw [0]fsr0
 22148     16DC  000A               	callw
 22149     16DD  3196               	pagesel	$
 22150     16DE  3A00               	xorlw	0
 22151     16DF  1903               	skipnz
 22152     16E0  2EE2               	goto	u9911
 22153     16E1  2EE3               	goto	u9910
 22154     16E2                     u9911:
 22155     16E2  2EF9               	goto	l13088
 22156     16E3                     u9910:
 22157     16E3                     l13084:
 22158                           
 22159                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22160     16E3  0879               	movf	RN487X_SendCmd@index,w
 22161     16E4  077A               	addwf	RN487X_SendCmd@cmd,w
 22162     16E5  00F8               	movwf	??_RN487X_SendCmd
 22163     16E6  0878               	movf	??_RN487X_SendCmd,w
 22164     16E7  0086               	movwf	6
 22165     16E8  3001               	movlw	1	; select bank2/3
 22166     16E9  0087               	movwf	7
 22167     16EA  0801               	movf	1,w
 22168     16EB  00F6               	movwf	RN487X_Write@txData
 22169     16EC  3068               	movlw	low (_RN487X| (0+32768))
 22170     16ED  0084               	movwf	4
 22171     16EE  3098               	movlw	high (_RN487X| (0+32768))
 22172     16EF  0085               	movwf	5
 22173     16F0  3F01               	moviw [1]fsr0
 22174     16F1  008A               	movwf	10
 22175     16F2  3F00               	moviw [0]fsr0
 22176     16F3  000A               	callw
 22177     16F4  3196               	pagesel	$
 22178     16F5                     l13086:
 22179                           
 22180                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22181     16F5  3001               	movlw	1
 22182     16F6  00F8               	movwf	??_RN487X_SendCmd
 22183     16F7  0878               	movf	??_RN487X_SendCmd,w
 22184     16F8  07F9               	addwf	RN487X_SendCmd@index,f
 22185     16F9                     l13088:
 22186                           
 22187                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22188     16F9  0877               	movf	RN487X_SendCmd@cmdLen,w
 22189     16FA  0279               	subwf	RN487X_SendCmd@index,w
 22190     16FB  1C03               	skipc
 22191     16FC  2EFE               	goto	u9921
 22192     16FD  2EFF               	goto	u9920
 22193     16FE                     u9921:
 22194     16FE  2ED5               	goto	l13082
 22195     16FF                     u9920:
 22196     16FF                     l886:
 22197     16FF  0008               	return
 22198     1700                     __end_of_RN487X_SendCmd:
 22199                           
 22200                           	psect	text79
 22201     1FC2                     __ptext79:	
 22202 ;; *************** function _RN487X_is_tx_done *****************
 22203 ;; Defined at:
 22204 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22205 ;; Parameters:    Size  Location     Type
 22206 ;;		None
 22207 ;; Auto vars:     Size  Location     Type
 22208 ;;		None
 22209 ;; Return value:  Size  Location     Type
 22210 ;;                  1    wreg      _Bool 
 22211 ;; Registers used:
 22212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22213 ;; Tracked objects:
 22214 ;;		On entry : 0/0
 22215 ;;		On exit  : 0/0
 22216 ;;		Unchanged: 0/0
 22217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22222 ;;Total ram usage:        0 bytes
 22223 ;; Hardware stack levels used: 1
 22224 ;; Hardware stack levels required when called: 5
 22225 ;; This function calls:
 22226 ;;		_EUSART1_is_tx_done
 22227 ;;		_EUSART2_is_tx_done
 22228 ;; This function is called by:
 22229 ;;		_RN487X_SendCmd
 22230 ;; This function uses a non-reentrant model
 22231 ;;
 22232                           
 22233     1FC2                     _RN487X_is_tx_done:	
 22234                           ;psect for function _RN487X_is_tx_done
 22235                           
 22236     1FC2                     l13050:	
 22237                           ;incstack = 0
 22238                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22239                           
 22240                           
 22241                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22242     1FC2  3022               	movlw	low ((_uart+34)| (0+32768))
 22243     1FC3  0084               	movwf	4
 22244     1FC4  3098               	movlw	high ((_uart+34)| (0+32768))
 22245     1FC5  0085               	movwf	5
 22246     1FC6  3F01               	moviw [1]fsr0
 22247     1FC7  008A               	movwf	10
 22248     1FC8  3F00               	moviw [0]fsr0
 22249     1FC9  000A               	callw
 22250     1FCA  319F               	pagesel	$
 22251     1FCB                     l792:
 22252     1FCB  0008               	return
 22253     1FCC                     __end_of_RN487X_is_tx_done:
 22254                           
 22255                           	psect	text80
 22256     1EB6                     __ptext80:	
 22257 ;; *************** function _EUSART1_is_tx_done *****************
 22258 ;; Defined at:
 22259 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22260 ;; Parameters:    Size  Location     Type
 22261 ;;		None
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;		None
 22264 ;; Return value:  Size  Location     Type
 22265 ;;                  1    wreg      _Bool 
 22266 ;; Registers used:
 22267 ;;		wreg, status,2, status,0
 22268 ;; Tracked objects:
 22269 ;;		On entry : 0/0
 22270 ;;		On exit  : 0/0
 22271 ;;		Unchanged: 0/0
 22272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22277 ;;Total ram usage:        0 bytes
 22278 ;; Hardware stack levels used: 1
 22279 ;; Hardware stack levels required when called: 4
 22280 ;; This function calls:
 22281 ;;		Nothing
 22282 ;; This function is called by:
 22283 ;;		_RN487X_is_tx_done
 22284 ;; This function uses a non-reentrant model
 22285 ;;
 22286                           
 22287     1EB6                     _EUSART1_is_tx_done:	
 22288                           ;psect for function _EUSART1_is_tx_done
 22289                           
 22290     1EB6                     l12990:	
 22291                           ;incstack = 0
 22292                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22293                           
 22294                           
 22295                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22296     1EB6  0142               	movlb	2	; select bank2
 22297     1EB7  0C1E               	rrf	30,w	;volatile
 22298     1EB8  3901               	andlw	1
 22299     1EB9                     l1204:
 22300     1EB9  0008               	return
 22301     1EBA                     __end_of_EUSART1_is_tx_done:
 22302                           
 22303                           	psect	text81
 22304     1EB2                     __ptext81:	
 22305 ;; *************** function _EUSART2_is_tx_done *****************
 22306 ;; Defined at:
 22307 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22308 ;; Parameters:    Size  Location     Type
 22309 ;;		None
 22310 ;; Auto vars:     Size  Location     Type
 22311 ;;		None
 22312 ;; Return value:  Size  Location     Type
 22313 ;;                  1    wreg      _Bool 
 22314 ;; Registers used:
 22315 ;;		wreg, status,2, status,0
 22316 ;; Tracked objects:
 22317 ;;		On entry : 0/0
 22318 ;;		On exit  : 0/0
 22319 ;;		Unchanged: 0/0
 22320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22325 ;;Total ram usage:        0 bytes
 22326 ;; Hardware stack levels used: 1
 22327 ;; Hardware stack levels required when called: 4
 22328 ;; This function calls:
 22329 ;;		Nothing
 22330 ;; This function is called by:
 22331 ;;		_RN487X_is_tx_done
 22332 ;; This function uses a non-reentrant model
 22333 ;;
 22334                           
 22335     1EB2                     _EUSART2_is_tx_done:	
 22336                           ;psect for function _EUSART2_is_tx_done
 22337                           
 22338     1EB2                     l12946:	
 22339                           ;incstack = 0
 22340                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22341                           
 22342                           
 22343                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22344     1EB2  0154               	movlb	20	; select bank20
 22345     1EB3  0C1E               	rrf	30,w	;volatile
 22346     1EB4  3901               	andlw	1
 22347     1EB5                     l1060:
 22348     1EB5  0008               	return
 22349     1EB6                     __end_of_EUSART2_is_tx_done:
 22350                           
 22351                           	psect	text82
 22352     15C3                     __ptext82:	
 22353 ;; *************** function _RN487X_ReadMsg *****************
 22354 ;; Defined at:
 22355 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22358 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22359 ;;  msgLen          1    5[COMMON] unsigned char 
 22360 ;; Auto vars:     Size  Location     Type
 22361 ;;  index           1    9[COMMON] unsigned char 
 22362 ;;  resp            1    8[COMMON] unsigned char 
 22363 ;; Return value:  Size  Location     Type
 22364 ;;                  1    wreg      _Bool 
 22365 ;; Registers used:
 22366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22367 ;; Tracked objects:
 22368 ;;		On entry : 0/0
 22369 ;;		On exit  : 0/0
 22370 ;;		Unchanged: 0/0
 22371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22372 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22375 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22376 ;;Total ram usage:        7 bytes
 22377 ;; Hardware stack levels used: 1
 22378 ;; Hardware stack levels required when called: 6
 22379 ;; This function calls:
 22380 ;;		_RN487X_Read@rn487x_interface$F1381
 22381 ;; This function is called by:
 22382 ;;		_RN487X_EnterCmdMode
 22383 ;;		_RN487X_EnterDataMode
 22384 ;;		_RN487X_GetInputsValues
 22385 ;;		_RN487X_RebootCmd
 22386 ;; This function uses a non-reentrant model
 22387 ;;
 22388                           
 22389     15C3                     _RN487X_ReadMsg:	
 22390                           ;psect for function _RN487X_ReadMsg
 22391                           
 22392     15C3                     l13090:	
 22393                           ;incstack = 0
 22394                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22395                           
 22396                           
 22397                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22398     15C3  01F9               	clrf	RN487X_ReadMsg@index
 22399     15C4  2DE6               	goto	l13102
 22400     15C5                     l13092:
 22401                           
 22402                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22403     15C5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22404     15C6  0084               	movwf	4
 22405     15C7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22406     15C8  0085               	movwf	5
 22407     15C9  3F01               	moviw [1]fsr0
 22408     15CA  008A               	movwf	10
 22409     15CB  3F00               	moviw [0]fsr0
 22410     15CC  000A               	callw
 22411     15CD  3195               	pagesel	$
 22412     15CE  00F8               	movwf	RN487X_ReadMsg@resp
 22413     15CF                     l13094:
 22414                           
 22415                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22416     15CF  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22417     15D0  00F7               	movwf	??_RN487X_ReadMsg+1
 22418     15D1  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22419     15D2  00F6               	movwf	??_RN487X_ReadMsg
 22420     15D3  0879               	movf	RN487X_ReadMsg@index,w
 22421     15D4  0776               	addwf	??_RN487X_ReadMsg,w
 22422     15D5  0084               	movwf	4
 22423     15D6  0877               	movf	??_RN487X_ReadMsg+1,w
 22424     15D7  1803               	skipnc
 22425     15D8  0A77               	incf	??_RN487X_ReadMsg+1,w
 22426     15D9  0085               	movwf	5
 22427     15DA  0800               	movf	0,w	;code access
 22428     15DB  0678               	xorwf	RN487X_ReadMsg@resp,w
 22429     15DC  1903               	skipnz
 22430     15DD  2DDF               	goto	u9931
 22431     15DE  2DE0               	goto	u9930
 22432     15DF                     u9931:
 22433     15DF  2DE2               	goto	l13100
 22434     15E0                     u9930:
 22435     15E0                     l13096:
 22436                           
 22437                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22438     15E0  3000               	movlw	0
 22439     15E1  2DED               	goto	l897
 22440     15E2                     l13100:
 22441                           
 22442                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22443     15E2  3001               	movlw	1
 22444     15E3  00F6               	movwf	??_RN487X_ReadMsg
 22445     15E4  0876               	movf	??_RN487X_ReadMsg,w
 22446     15E5  07F9               	addwf	RN487X_ReadMsg@index,f
 22447     15E6                     l13102:
 22448     15E6  0875               	movf	RN487X_ReadMsg@msgLen,w
 22449     15E7  0279               	subwf	RN487X_ReadMsg@index,w
 22450     15E8  1C03               	skipc
 22451     15E9  2DEB               	goto	u9941
 22452     15EA  2DEC               	goto	u9940
 22453     15EB                     u9941:
 22454     15EB  2DC5               	goto	l13092
 22455     15EC                     u9940:
 22456     15EC                     l13104:
 22457                           
 22458                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22459     15EC  3001               	movlw	1
 22460     15ED                     l897:
 22461     15ED  0008               	return
 22462     15EE                     __end_of_RN487X_ReadMsg:
 22463                           
 22464                           	psect	text83
 22465     1FB8                     __ptext83:	
 22466 ;; *************** function _RN487X_Read@rn487x_interface$F1381 *****************
 22467 ;; Defined at:
 22468 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22469 ;; Parameters:    Size  Location     Type
 22470 ;;		None
 22471 ;; Auto vars:     Size  Location     Type
 22472 ;;		None
 22473 ;; Return value:  Size  Location     Type
 22474 ;;                  1    wreg      unsigned char 
 22475 ;; Registers used:
 22476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22477 ;; Tracked objects:
 22478 ;;		On entry : 0/0
 22479 ;;		On exit  : 0/0
 22480 ;;		Unchanged: 0/0
 22481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22486 ;;Total ram usage:        0 bytes
 22487 ;; Hardware stack levels used: 1
 22488 ;; Hardware stack levels required when called: 5
 22489 ;; This function calls:
 22490 ;;		_EUSART1_Read
 22491 ;;		_EUSART2_Read
 22492 ;; This function is called by:
 22493 ;;		_RN487X_ReadMsg
 22494 ;;		_RN487X_ReadDefaultResponse
 22495 ;;		_RN487X_FilterData
 22496 ;;		_RN487X_Init
 22497 ;;		_RN487X_GetCmd
 22498 ;;		_RN487X_WaitForMsg
 22499 ;; This function uses a non-reentrant model
 22500 ;;
 22501                           
 22502     1FB8                     _RN487X_Read@rn487x_interface$F1381:	
 22503                           ;psect for function _RN487X_Read@rn487x_interface$F1381
 22504                           
 22505     1FB8                     l13046:	
 22506                           ;incstack = 0
 22507                           ; Regs used in _RN487X_Read@rn487x_interface$F1381: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22508                           
 22509                           
 22510                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22511     1FB8  3014               	movlw	low ((_uart+20)| (0+32768))
 22512     1FB9  0084               	movwf	4
 22513     1FBA  3098               	movlw	high ((_uart+20)| (0+32768))
 22514     1FBB  0085               	movwf	5
 22515     1FBC  3F01               	moviw [1]fsr0
 22516     1FBD  008A               	movwf	10
 22517     1FBE  3F00               	moviw [0]fsr0
 22518     1FBF  000A               	callw
 22519     1FC0  319F               	pagesel	$
 22520     1FC1                     l789:
 22521     1FC1  0008               	return
 22522     1FC2                     __end_of_RN487X_Read@rn487x_interface$F1381:
 22523                           
 22524                           	psect	text84
 22525     154B                     __ptext84:	
 22526 ;; *************** function _EUSART1_Read *****************
 22527 ;; Defined at:
 22528 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22529 ;; Parameters:    Size  Location     Type
 22530 ;;		None
 22531 ;; Auto vars:     Size  Location     Type
 22532 ;;  readValue       1    2[COMMON] unsigned char 
 22533 ;; Return value:  Size  Location     Type
 22534 ;;                  1    wreg      unsigned char 
 22535 ;; Registers used:
 22536 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22537 ;; Tracked objects:
 22538 ;;		On entry : 0/0
 22539 ;;		On exit  : 0/0
 22540 ;;		Unchanged: 0/0
 22541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22546 ;;Total ram usage:        2 bytes
 22547 ;; Hardware stack levels used: 1
 22548 ;; Hardware stack levels required when called: 4
 22549 ;; This function calls:
 22550 ;;		Nothing
 22551 ;; This function is called by:
 22552 ;;		_getch
 22553 ;;		_RN487X_Read@rn487x_interface$F1381
 22554 ;;		_RN487X_Example_TransparentUart
 22555 ;;		_main
 22556 ;; This function uses a non-reentrant model
 22557 ;;
 22558                           
 22559     154B                     _EUSART1_Read:	
 22560                           ;psect for function _EUSART1_Read
 22561                           
 22562     154B                     l12994:	
 22563                           ;incstack = 0
 22564                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22565                           
 22566     154B                     l12996:	
 22567                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22568                           
 22569                           
 22570                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22571     154B  0140               	movlb	0	; select bank0
 22572     154C  0858               	movf	_eusart1RxCount,w	;volatile
 22573     154D  1903               	btfsc	3,2
 22574     154E  2D50               	goto	u9811
 22575     154F  2D51               	goto	u9810
 22576     1550                     u9811:
 22577     1550  2D4B               	goto	l12996
 22578     1551                     u9810:
 22579     1551                     l12998:
 22580                           
 22581                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22582     1551  0859               	movf	_eusart1RxTail,w	;volatile
 22583     1552  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22584     1553  0086               	movwf	6
 22585     1554  0187               	clrf	7
 22586     1555  0801               	movf	1,w
 22587     1556  00D7               	movwf	_eusart1RxLastError	;volatile
 22588                           
 22589                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22590     1557  0859               	movf	_eusart1RxTail,w
 22591     1558  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22592     1559  0086               	movwf	6
 22593     155A  3001               	movlw	1	; select bank2/3
 22594     155B  0087               	movwf	7
 22595     155C  0801               	movf	1,w
 22596     155D  00F2               	movwf	EUSART1_Read@readValue
 22597     155E                     l13000:
 22598     155E  3001               	movlw	1
 22599     155F  00F1               	movwf	??_EUSART1_Read
 22600     1560  0871               	movf	??_EUSART1_Read,w
 22601     1561  07D9               	addwf	_eusart1RxTail,f	;volatile
 22602     1562                     l13002:
 22603                           
 22604                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22605     1562  3008               	movlw	8
 22606     1563  0259               	subwf	_eusart1RxTail,w	;volatile
 22607     1564  1C03               	skipc
 22608     1565  2D67               	goto	u9821
 22609     1566  2D68               	goto	u9820
 22610     1567                     u9821:
 22611     1567  2D69               	goto	l13006
 22612     1568                     u9820:
 22613     1568                     l13004:
 22614                           
 22615                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22616     1568  01D9               	clrf	_eusart1RxTail	;volatile
 22617     1569                     l13006:
 22618                           
 22619                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22620     1569  014E               	movlb	14	; select bank14
 22621     156A  1299               	bcf	25,5	;volatile
 22622     156B                     l13008:
 22623                           
 22624                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22625     156B  3001               	movlw	1
 22626     156C  0140               	movlb	0	; select bank0
 22627     156D  02D8               	subwf	_eusart1RxCount,f	;volatile
 22628     156E                     l13010:
 22629                           
 22630                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22631     156E  014E               	movlb	14	; select bank14
 22632     156F  1699               	bsf	25,5	;volatile
 22633     1570                     l13012:
 22634                           
 22635                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22636     1570  0872               	movf	EUSART1_Read@readValue,w
 22637     1571                     l1214:
 22638     1571  0008               	return
 22639     1572                     __end_of_EUSART1_Read:
 22640                           
 22641                           	psect	text85
 22642     14D7                     __ptext85:	
 22643 ;; *************** function _EUSART2_Read *****************
 22644 ;; Defined at:
 22645 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22646 ;; Parameters:    Size  Location     Type
 22647 ;;		None
 22648 ;; Auto vars:     Size  Location     Type
 22649 ;;  readValue       1    2[COMMON] unsigned char 
 22650 ;; Return value:  Size  Location     Type
 22651 ;;                  1    wreg      unsigned char 
 22652 ;; Registers used:
 22653 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22654 ;; Tracked objects:
 22655 ;;		On entry : 0/0
 22656 ;;		On exit  : 0/0
 22657 ;;		Unchanged: 0/0
 22658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22663 ;;Total ram usage:        2 bytes
 22664 ;; Hardware stack levels used: 1
 22665 ;; Hardware stack levels required when called: 4
 22666 ;; This function calls:
 22667 ;;		Nothing
 22668 ;; This function is called by:
 22669 ;;		_RN487X_Read@rn487x_interface$F1381
 22670 ;;		_RN487X_Example_TransparentUart
 22671 ;;		_main
 22672 ;; This function uses a non-reentrant model
 22673 ;;
 22674                           
 22675     14D7                     _EUSART2_Read:	
 22676                           ;psect for function _EUSART2_Read
 22677                           
 22678     14D7                     l12950:	
 22679                           ;incstack = 0
 22680                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22681                           
 22682     14D7                     l12952:	
 22683                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22684                           
 22685                           
 22686                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22687     14D7  0140               	movlb	0	; select bank0
 22688     14D8  085F               	movf	_eusart2RxCount,w	;volatile
 22689     14D9  1903               	btfsc	3,2
 22690     14DA  2CDC               	goto	u9761
 22691     14DB  2CDD               	goto	u9760
 22692     14DC                     u9761:
 22693     14DC  2CD7               	goto	l12952
 22694     14DD                     u9760:
 22695     14DD                     l12954:
 22696                           
 22697                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22698     14DD  0860               	movf	_eusart2RxTail,w	;volatile
 22699     14DE  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22700     14DF  0086               	movwf	6
 22701     14E0  0187               	clrf	7
 22702     14E1  0801               	movf	1,w
 22703     14E2  00DE               	movwf	_eusart2RxLastError	;volatile
 22704                           
 22705                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22706     14E3  0860               	movf	_eusart2RxTail,w
 22707     14E4  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22708     14E5  0086               	movwf	6
 22709     14E6  0187               	clrf	7
 22710     14E7  0801               	movf	1,w
 22711     14E8  00F2               	movwf	EUSART2_Read@readValue
 22712     14E9                     l12956:
 22713     14E9  3001               	movlw	1
 22714     14EA  00F1               	movwf	??_EUSART2_Read
 22715     14EB  0871               	movf	??_EUSART2_Read,w
 22716     14EC  07E0               	addwf	_eusart2RxTail,f	;volatile
 22717     14ED                     l12958:
 22718                           
 22719                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22720     14ED  3008               	movlw	8
 22721     14EE  0260               	subwf	_eusart2RxTail,w	;volatile
 22722     14EF  1C03               	skipc
 22723     14F0  2CF2               	goto	u9771
 22724     14F1  2CF3               	goto	u9770
 22725     14F2                     u9771:
 22726     14F2  2CF4               	goto	l12962
 22727     14F3                     u9770:
 22728     14F3                     l12960:
 22729                           
 22730                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22731     14F3  01E0               	clrf	_eusart2RxTail	;volatile
 22732     14F4                     l12962:
 22733                           
 22734                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22735     14F4  014E               	movlb	14	; select bank14
 22736     14F5  1399               	bcf	25,7	;volatile
 22737     14F6                     l12964:
 22738                           
 22739                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22740     14F6  3001               	movlw	1
 22741     14F7  0140               	movlb	0	; select bank0
 22742     14F8  02DF               	subwf	_eusart2RxCount,f	;volatile
 22743     14F9                     l12966:
 22744                           
 22745                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22746     14F9  014E               	movlb	14	; select bank14
 22747     14FA  1799               	bsf	25,7	;volatile
 22748     14FB                     l12968:
 22749                           
 22750                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22751     14FB  0872               	movf	EUSART2_Read@readValue,w
 22752     14FC                     l1070:
 22753     14FC  0008               	return
 22754     14FD                     __end_of_EUSART2_Read:
 22755                           
 22756                           	psect	text86
 22757     1F7B                     __ptext86:	
 22758 ;; *************** function _RN487X_Delay *****************
 22759 ;; Defined at:
 22760 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  delayCount      2    4[COMMON] unsigned short 
 22763 ;; Auto vars:     Size  Location     Type
 22764 ;;		None
 22765 ;; Return value:  Size  Location     Type
 22766 ;;                  1    wreg      void 
 22767 ;; Registers used:
 22768 ;;		wreg, status,2, status,0, pclath, cstack
 22769 ;; Tracked objects:
 22770 ;;		On entry : 0/0
 22771 ;;		On exit  : 0/0
 22772 ;;		Unchanged: 0/0
 22773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22778 ;;Total ram usage:        2 bytes
 22779 ;; Hardware stack levels used: 1
 22780 ;; Hardware stack levels required when called: 5
 22781 ;; This function calls:
 22782 ;;		_DELAY_milliseconds
 22783 ;; This function is called by:
 22784 ;;		_LIGHTBLUE_UpdateErrorLed
 22785 ;;		_RN487X_Init
 22786 ;; This function uses a non-reentrant model
 22787 ;;
 22788                           
 22789     1F7B                     _RN487X_Delay:	
 22790                           ;psect for function _RN487X_Delay
 22791                           
 22792     1F7B                     l13274:	
 22793                           ;incstack = 0
 22794                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22795                           
 22796                           
 22797                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22798     1F7B  0875               	movf	RN487X_Delay@delayCount+1,w
 22799     1F7C  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22800     1F7D  0874               	movf	RN487X_Delay@delayCount,w
 22801     1F7E  00F1               	movwf	DELAY_milliseconds@milliseconds
 22802     1F7F  3191  21E4  319F   	fcall	_DELAY_milliseconds
 22803     1F82                     l798:
 22804     1F82  0008               	return
 22805     1F83                     __end_of_RN487X_Delay:
 22806                           
 22807                           	psect	text87
 22808     11E4                     __ptext87:	
 22809 ;; *************** function _DELAY_milliseconds *****************
 22810 ;; Defined at:
 22811 ;;		line 38 in file "mcc_generated_files/delay.c"
 22812 ;; Parameters:    Size  Location     Type
 22813 ;;  milliseconds    2    1[COMMON] unsigned short 
 22814 ;; Auto vars:     Size  Location     Type
 22815 ;;		None
 22816 ;; Return value:  Size  Location     Type
 22817 ;;                  1    wreg      void 
 22818 ;; Registers used:
 22819 ;;		wreg, status,2, status,0
 22820 ;; Tracked objects:
 22821 ;;		On entry : 0/0
 22822 ;;		On exit  : 0/0
 22823 ;;		Unchanged: 0/0
 22824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22829 ;;Total ram usage:        3 bytes
 22830 ;; Hardware stack levels used: 1
 22831 ;; Hardware stack levels required when called: 4
 22832 ;; This function calls:
 22833 ;;		Nothing
 22834 ;; This function is called by:
 22835 ;;		_RN487X_Delay
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839     11E4                     _DELAY_milliseconds:	
 22840                           ;psect for function _DELAY_milliseconds
 22841                           
 22842     11E4                     l13070:	
 22843                           ;incstack = 0
 22844                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22845                           
 22846                           
 22847                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22848     11E4  29ED               	goto	l13074
 22849     11E5                     l13072:
 22850                           
 22851                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22852     11E5  300B               	movlw	11
 22853     11E6  00F3               	movwf	??_DELAY_milliseconds
 22854     11E7  3062               	movlw	98
 22855     11E8                     u14167:
 22856     11E8  0B89               	decfsz	9,f
 22857     11E9  29E8               	goto	u14167
 22858     11EA  0BF3               	decfsz	??_DELAY_milliseconds,f
 22859     11EB  29E8               	goto	u14167
 22860     11EC  3200               	nop2
 22861     11ED                     l13074:
 22862                           
 22863                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22864     11ED  3001               	movlw	1
 22865     11EE  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22866     11EF  3000               	movlw	0
 22867     11F0  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22868     11F1  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22869     11F2  1D03               	skipz
 22870     11F3  29F8               	goto	u9891
 22871     11F4  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22872     11F5  1D03               	btfss	3,2
 22873     11F6  29F8               	goto	u9891
 22874     11F7  29F9               	goto	u9890
 22875     11F8                     u9891:
 22876     11F8  29E5               	goto	l13072
 22877     11F9                     u9890:
 22878     11F9                     l1980:
 22879     11F9  0008               	return
 22880     11FA                     __end_of_DELAY_milliseconds:
 22881                           
 22882                           	psect	text88
 22883     14B1                     __ptext88:	
 22884 ;; *************** function _LIGHTBLUE_LedState *****************
 22885 ;; Defined at:
 22886 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;		None
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22891 ;;  led             1    3[BANK0 ] unsigned char 
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  1    wreg      void 
 22894 ;; Registers used:
 22895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22905 ;;Total ram usage:        4 bytes
 22906 ;; Hardware stack levels used: 1
 22907 ;; Hardware stack levels required when called: 7
 22908 ;; This function calls:
 22909 ;;		_LIGHTBLUE_GetDataLedValue
 22910 ;;		_LIGHTBLUE_GetErrorLedValue
 22911 ;;		_LIGHTBLUE_SendPacket
 22912 ;;		_LIGHTBLUE_SplitByte
 22913 ;; This function is called by:
 22914 ;;		_main
 22915 ;; This function uses a non-reentrant model
 22916 ;;
 22917                           
 22918     14B1                     _LIGHTBLUE_LedState:	
 22919                           ;psect for function _LIGHTBLUE_LedState
 22920                           
 22921     14B1                     l14348:	
 22922                           ;incstack = 0
 22923                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22924                           
 22925                           
 22926                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22927     14B1  319F  2712  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22928     14B4  0140               	movlb	0	; select bank0
 22929     14B5  00A3               	movwf	LIGHTBLUE_LedState@led
 22930     14B6                     l14350:
 22931                           
 22932                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22933     14B6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22934     14B7                     l14352:
 22935                           
 22936                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22937     14B7  0823               	movf	LIGHTBLUE_LedState@led,w
 22938     14B8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22939     14B9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22940     14BA  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22941     14BD                     l14354:
 22942                           
 22943                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22944     14BD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22945     14BE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22946     14BF  304C               	movlw	76
 22947     14C0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22948     14C3                     l14356:
 22949                           
 22950                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22951     14C3  319E  26F6  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22952     14C6  3E10               	addlw	16
 22953     14C7  0140               	movlb	0	; select bank0
 22954     14C8  00A3               	movwf	LIGHTBLUE_LedState@led
 22955                           
 22956                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22957     14C9  01A0               	clrf	LIGHTBLUE_LedState@payload
 22958     14CA                     l14358:
 22959                           
 22960                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22961     14CA  0823               	movf	LIGHTBLUE_LedState@led,w
 22962     14CB  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22963     14CC  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22964     14CD  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22965     14D0                     l14360:
 22966                           
 22967                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22968     14D0  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22969     14D1  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22970     14D2  304C               	movlw	76
 22971     14D3  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22972     14D6                     l133:
 22973     14D6  0008               	return
 22974     14D7                     __end_of_LIGHTBLUE_LedState:
 22975                           
 22976                           	psect	text89
 22977     1EF6                     __ptext89:	
 22978 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22979 ;; Defined at:
 22980 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22981 ;; Parameters:    Size  Location     Type
 22982 ;;		None
 22983 ;; Auto vars:     Size  Location     Type
 22984 ;;		None
 22985 ;; Return value:  Size  Location     Type
 22986 ;;                  1    wreg      unsigned char 
 22987 ;; Registers used:
 22988 ;;		wreg, status,2, status,0
 22989 ;; Tracked objects:
 22990 ;;		On entry : 0/0
 22991 ;;		On exit  : 0/0
 22992 ;;		Unchanged: 0/0
 22993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22998 ;;Total ram usage:        0 bytes
 22999 ;; Hardware stack levels used: 1
 23000 ;; Hardware stack levels required when called: 4
 23001 ;; This function calls:
 23002 ;;		Nothing
 23003 ;; This function is called by:
 23004 ;;		_LIGHTBLUE_LedState
 23005 ;; This function uses a non-reentrant model
 23006 ;;
 23007                           
 23008     1EF6                     _LIGHTBLUE_GetErrorLedValue:	
 23009                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 23010                           
 23011     1EF6                     l13632:	
 23012                           ;incstack = 0
 23013                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 23014                           
 23015                           
 23016                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 23017     1EF6  0140               	movlb	0	; select bank0
 23018     1EF7  0855               	movf	_bitMap+1,w	;volatile
 23019     1EF8  3901               	andlw	1
 23020     1EF9  3C01               	sublw	1
 23021     1EFA                     l208:
 23022     1EFA  0008               	return
 23023     1EFB                     __end_of_LIGHTBLUE_GetErrorLedValue:
 23024                           
 23025                           	psect	text90
 23026     1F12                     __ptext90:	
 23027 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 23028 ;; Defined at:
 23029 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23030 ;; Parameters:    Size  Location     Type
 23031 ;;		None
 23032 ;; Auto vars:     Size  Location     Type
 23033 ;;		None
 23034 ;; Return value:  Size  Location     Type
 23035 ;;                  1    wreg      unsigned char 
 23036 ;; Registers used:
 23037 ;;		wreg, status,2, status,0
 23038 ;; Tracked objects:
 23039 ;;		On entry : 0/0
 23040 ;;		On exit  : 0/0
 23041 ;;		Unchanged: 0/0
 23042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23047 ;;Total ram usage:        0 bytes
 23048 ;; Hardware stack levels used: 1
 23049 ;; Hardware stack levels required when called: 4
 23050 ;; This function calls:
 23051 ;;		Nothing
 23052 ;; This function is called by:
 23053 ;;		_LIGHTBLUE_LedState
 23054 ;; This function uses a non-reentrant model
 23055 ;;
 23056                           
 23057     1F12                     _LIGHTBLUE_GetDataLedValue:	
 23058                           ;psect for function _LIGHTBLUE_GetDataLedValue
 23059                           
 23060     1F12                     l13628:	
 23061                           ;incstack = 0
 23062                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 23063                           
 23064                           
 23065                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 23066     1F12  0140               	movlb	0	; select bank0
 23067     1F13  0E0C               	swapf	12,w	;volatile
 23068     1F14  0C89               	rrf	9,f
 23069     1F15  3901               	andlw	1
 23070     1F16  3C01               	sublw	1
 23071     1F17                     l205:
 23072     1F17  0008               	return
 23073     1F18                     __end_of_LIGHTBLUE_GetDataLedValue:
 23074                           
 23075                           	psect	text91
 23076     1F0C                     __ptext91:	
 23077 ;; *************** function _LIGHTBLUE_Initialize *****************
 23078 ;; Defined at:
 23079 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23080 ;; Parameters:    Size  Location     Type
 23081 ;;		None
 23082 ;; Auto vars:     Size  Location     Type
 23083 ;;		None
 23084 ;; Return value:  Size  Location     Type
 23085 ;;                  1    wreg      void 
 23086 ;; Registers used:
 23087 ;;		wreg
 23088 ;; Tracked objects:
 23089 ;;		On entry : 0/0
 23090 ;;		On exit  : 0/0
 23091 ;;		Unchanged: 0/0
 23092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23097 ;;Total ram usage:        0 bytes
 23098 ;; Hardware stack levels used: 1
 23099 ;; Hardware stack levels required when called: 4
 23100 ;; This function calls:
 23101 ;;		Nothing
 23102 ;; This function is called by:
 23103 ;;		_main
 23104 ;; This function uses a non-reentrant model
 23105 ;;
 23106                           
 23107     1F0C                     _LIGHTBLUE_Initialize:	
 23108                           ;psect for function _LIGHTBLUE_Initialize
 23109                           
 23110     1F0C                     l14318:	
 23111                           ;incstack = 0
 23112                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23113                           
 23114                           
 23115                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23116     1F0C  3001               	movlw	1
 23117     1F0D  0140               	movlb	0	; select bank0
 23118     1F0E  00D4               	movwf	_bitMap	;volatile
 23119                           
 23120                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23121     1F0F  3001               	movlw	1
 23122     1F10  00D5               	movwf	_bitMap+1	;volatile
 23123     1F11                     l121:
 23124     1F11  0008               	return
 23125     1F12                     __end_of_LIGHTBLUE_Initialize:
 23126                           
 23127                           	psect	text92
 23128     16A4                     __ptext92:	
 23129 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23130 ;; Defined at:
 23131 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23132 ;; Parameters:    Size  Location     Type
 23133 ;;		None
 23134 ;; Auto vars:     Size  Location     Type
 23135 ;;  payload        13   22[BANK0 ] unsigned char [13]
 23136 ;;  accelData       6   35[BANK0 ] struct .
 23137 ;; Return value:  Size  Location     Type
 23138 ;;                  1    wreg      void 
 23139 ;; Registers used:
 23140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23141 ;; Tracked objects:
 23142 ;;		On entry : 0/0
 23143 ;;		On exit  : 0/0
 23144 ;;		Unchanged: 0/0
 23145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23147 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23149 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23150 ;;Total ram usage:       19 bytes
 23151 ;; Hardware stack levels used: 1
 23152 ;; Hardware stack levels required when called: 16
 23153 ;; This function calls:
 23154 ;;		_BMA253_GetAccelDataXYZ
 23155 ;;		_LIGHTBLUE_SendPacket
 23156 ;;		_LIGHTBLUE_SplitWord
 23157 ;; This function is called by:
 23158 ;;		_main
 23159 ;; This function uses a non-reentrant model
 23160 ;;
 23161                           
 23162     16A4                     _LIGHTBLUE_AccelSensor:	
 23163                           ;psect for function _LIGHTBLUE_AccelSensor
 23164                           
 23165     16A4                     l14328:	
 23166                           ;incstack = 0
 23167 ;; hardware stack exceeded
 23168                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23169                           
 23170                           
 23171                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23172     16A4  0140               	movlb	0	; select bank0
 23173     16A5  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 23174     16A6                     l14330:
 23175                           
 23176                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23177     16A6  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23178     16A7  318C  244B  3196   	fcall	_BMA253_GetAccelDataXYZ
 23179     16AA                     l14332:
 23180                           
 23181                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23182     16AA  30FF               	movlw	255
 23183     16AB  0140               	movlb	0	; select bank0
 23184     16AC  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23185     16AD  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23186     16AE  300F               	movlw	15
 23187     16AF  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23188     16B0  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23189     16B1  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23190     16B2  3190  2088  3196   	fcall	_LIGHTBLUE_SplitWord
 23191     16B5                     l14334:
 23192                           
 23193                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23194     16B5  30FF               	movlw	255
 23195     16B6  0140               	movlb	0	; select bank0
 23196     16B7  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23197     16B8  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23198     16B9  300F               	movlw	15
 23199     16BA  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23200     16BB  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23201     16BC  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23202     16BD  3190  2088  3196   	fcall	_LIGHTBLUE_SplitWord
 23203     16C0                     l14336:
 23204                           
 23205                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23206     16C0  30FF               	movlw	255
 23207     16C1  0140               	movlb	0	; select bank0
 23208     16C2  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23209     16C3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23210     16C4  300F               	movlw	15
 23211     16C5  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23212     16C6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23213     16C7  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23214     16C8  3190  2088  3196   	fcall	_LIGHTBLUE_SplitWord
 23215     16CB                     l14338:
 23216                           
 23217                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23218     16CB  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23219     16CC  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23220     16CD  3058               	movlw	88
 23221     16CE  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 23222     16D1                     l127:
 23223     16D1  0008               	return
 23224     16D2                     __end_of_LIGHTBLUE_AccelSensor:
 23225                           
 23226                           	psect	text93
 23227     1088                     __ptext93:	
 23228 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23229 ;; Defined at:
 23230 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23231 ;; Parameters:    Size  Location     Type
 23232 ;;  payload         1    wreg     PTR unsigned char 
 23233 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23234 ;;  value           2    9[COMMON] short 
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;  payload         1   11[COMMON] PTR unsigned char 
 23237 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23238 ;; Return value:  Size  Location     Type
 23239 ;;                  1    wreg      void 
 23240 ;; Registers used:
 23241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23242 ;; Tracked objects:
 23243 ;;		On entry : 0/0
 23244 ;;		On exit  : 0/0
 23245 ;;		Unchanged: 0/0
 23246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23250 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23251 ;;Total ram usage:        3 bytes
 23252 ;; Hardware stack levels used: 1
 23253 ;; Hardware stack levels required when called: 6
 23254 ;; This function calls:
 23255 ;;		_LIGHTBLUE_SplitByte
 23256 ;; This function is called by:
 23257 ;;		_LIGHTBLUE_TemperatureSensor
 23258 ;;		_LIGHTBLUE_AccelSensor
 23259 ;; This function uses a non-reentrant model
 23260 ;;
 23261                           
 23262     1088                     _LIGHTBLUE_SplitWord:	
 23263                           ;psect for function _LIGHTBLUE_SplitWord
 23264                           
 23265                           
 23266                           ;incstack = 0
 23267                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23268                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23269     1088  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23270     1089                     l13604:
 23271                           
 23272                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23273     1089  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23274     108A  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23275     108B  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23276     108C  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23277                           
 23278                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23279     108F  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23280     1090  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23281     1091  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23282     1092  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23283     1095                     l196:
 23284     1095  0008               	return
 23285     1096                     __end_of_LIGHTBLUE_SplitWord:
 23286                           
 23287                           	psect	text94
 23288     1730                     __ptext94:	
 23289 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23290 ;; Defined at:
 23291 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23292 ;; Parameters:    Size  Location     Type
 23293 ;;  payload         1    wreg     PTR unsigned char 
 23294 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23295 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23296 ;;  value           1    6[COMMON] char 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;  payload         1    8[COMMON] PTR unsigned char 
 23299 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23300 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23301 ;; Return value:  Size  Location     Type
 23302 ;;                  1    wreg      void 
 23303 ;; Registers used:
 23304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23305 ;; Tracked objects:
 23306 ;;		On entry : 0/0
 23307 ;;		On exit  : 0/0
 23308 ;;		Unchanged: 0/0
 23309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23313 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23314 ;;Total ram usage:        3 bytes
 23315 ;; Hardware stack levels used: 1
 23316 ;; Hardware stack levels required when called: 5
 23317 ;; This function calls:
 23318 ;;		_strlen
 23319 ;; This function is called by:
 23320 ;;		_LIGHTBLUE_PushButton
 23321 ;;		_LIGHTBLUE_LedState
 23322 ;;		_LIGHTBLUE_SendProtocolVersion
 23323 ;;		_LIGHTBLUE_SplitWord
 23324 ;; This function uses a non-reentrant model
 23325 ;;
 23326                           
 23327     1730                     _LIGHTBLUE_SplitByte:	
 23328                           ;psect for function _LIGHTBLUE_SplitByte
 23329                           
 23330                           
 23331                           ;incstack = 0
 23332                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23333                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23334     1730  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23335     1731                     l13436:
 23336                           
 23337                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23338     1731  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23339     1732  00F1               	movwf	strlen@s
 23340     1733  01F2               	clrf	strlen@s+1
 23341     1734  3192  22B5  3197   	fcall	_strlen
 23342     1737  0871               	movf	?_strlen,w
 23343     1738  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23344     1739  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23345     173A  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23346     173B                     l13438:
 23347                           
 23348                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23349     173B  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23350     173C  0086               	movwf	6
 23351     173D  0187               	clrf	7
 23352     173E  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23353     173F  390F               	andlw	15
 23354     1740  1989               	btfsc	9,3
 23355     1741  38F0               	iorlw	240
 23356     1742  390F               	andlw	15
 23357     1743  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23358     1744  0084               	movwf	4
 23359     1745  3001               	movlw	1	; select bank2/3
 23360     1746  0085               	movwf	5
 23361     1747  0800               	movf	0,w
 23362     1748  0081               	movwf	1
 23363     1749                     l13440:
 23364     1749  3001               	movlw	1
 23365     174A  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23366     174B  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23367     174C  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23368     174D                     l13442:
 23369                           
 23370                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23371     174D  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23372     174E  0086               	movwf	6
 23373     174F  0187               	clrf	7
 23374     1750  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23375     1751  390F               	andlw	15
 23376     1752  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23377     1753  0084               	movwf	4
 23378     1754  3001               	movlw	1	; select bank2/3
 23379     1755  0085               	movwf	5
 23380     1756  0800               	movf	0,w
 23381     1757  0081               	movwf	1
 23382     1758                     l13444:
 23383     1758  3001               	movlw	1
 23384     1759  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23385     175A  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23386     175B  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23387     175C                     l13446:
 23388                           
 23389                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23390     175C  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23391     175D  0086               	movwf	6
 23392     175E  0187               	clrf	7
 23393     175F  0181               	clrf	1
 23394     1760                     l199:
 23395     1760  0008               	return
 23396     1761                     __end_of_LIGHTBLUE_SplitByte:
 23397                           
 23398                           	psect	text95
 23399     0F74                     __ptext95:	
 23400 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23401 ;; Defined at:
 23402 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  packetID        1    wreg     unsigned char 
 23405 ;;  payload         1    7[COMMON] PTR unsigned char 
 23406 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23407 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;  packetID        1   10[COMMON] unsigned char 
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  1    wreg      void 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23414 ;; Tracked objects:
 23415 ;;		On entry : 0/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23419 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23423 ;;Total ram usage:        4 bytes
 23424 ;; Hardware stack levels used: 1
 23425 ;; Hardware stack levels required when called: 6
 23426 ;; This function calls:
 23427 ;;		_RN487X_Write
 23428 ;;		_strlen
 23429 ;; This function is called by:
 23430 ;;		_LIGHTBLUE_TemperatureSensor
 23431 ;;		_LIGHTBLUE_AccelSensor
 23432 ;;		_LIGHTBLUE_PushButton
 23433 ;;		_LIGHTBLUE_LedState
 23434 ;;		_LIGHTBLUE_SendProtocolVersion
 23435 ;; This function uses a non-reentrant model
 23436 ;;
 23437                           
 23438     0F74                     _LIGHTBLUE_SendPacket:	
 23439                           ;psect for function _LIGHTBLUE_SendPacket
 23440                           
 23441                           
 23442                           ;incstack = 0
 23443                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23444                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23445     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23446     0F75                     l13606:
 23447                           
 23448                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23449     0F75  305B               	movlw	91
 23450     0F76  00F6               	movwf	RN487X_Write@txData
 23451     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23452     0F78  0084               	movwf	4
 23453     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23454     0F7A  0085               	movwf	5
 23455     0F7B  3F01               	moviw [1]fsr0
 23456     0F7C  008A               	movwf	10
 23457     0F7D  3F00               	moviw [0]fsr0
 23458     0F7E  000A               	callw
 23459     0F7F  318F               	pagesel	$
 23460                           
 23461                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23462     0F80  0140               	movlb	0	; select bank0
 23463     0F81  086C               	movf	_sequenceNumber,w
 23464     0F82  390F               	andlw	15
 23465     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23466     0F84  0086               	movwf	6
 23467     0F85  3001               	movlw	1	; select bank2/3
 23468     0F86  0087               	movwf	7
 23469     0F87  0801               	movf	1,w
 23470     0F88  00F6               	movwf	RN487X_Write@txData
 23471     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23472     0F8A  0084               	movwf	4
 23473     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23474     0F8C  0085               	movwf	5
 23475     0F8D  3F01               	moviw [1]fsr0
 23476     0F8E  008A               	movwf	10
 23477     0F8F  3F00               	moviw [0]fsr0
 23478     0F90  000A               	callw
 23479     0F91  318F               	pagesel	$
 23480     0F92                     l13608:
 23481     0F92  3001               	movlw	1
 23482     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23483     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23484     0F95  0140               	movlb	0	; select bank0
 23485     0F96  07EC               	addwf	_sequenceNumber,f
 23486     0F97                     l13610:
 23487                           
 23488                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23489     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23490     0F98  00F6               	movwf	RN487X_Write@txData
 23491     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23492     0F9A  0084               	movwf	4
 23493     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23494     0F9C  0085               	movwf	5
 23495     0F9D  3F01               	moviw [1]fsr0
 23496     0F9E  008A               	movwf	10
 23497     0F9F  3F00               	moviw [0]fsr0
 23498     0FA0  000A               	callw
 23499     0FA1  318F               	pagesel	$
 23500     0FA2                     l13612:
 23501                           
 23502                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23503     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23504     0FA3  00F1               	movwf	strlen@s
 23505     0FA4  01F2               	clrf	strlen@s+1
 23506     0FA5  3192  22B5  318F   	fcall	_strlen
 23507     0FA8  0871               	movf	?_strlen,w
 23508     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23509     0FAA  0872               	movf	?_strlen+1,w
 23510     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23511     0FAC  3004               	movlw	4
 23512     0FAD                     u10565:
 23513     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23514     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23515     0FAF  0B89               	decfsz	9,f
 23516     0FB0  2FAD               	goto	u10565
 23517     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23518     0FB2  390F               	andlw	15
 23519     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23520     0FB4  0086               	movwf	6
 23521     0FB5  3001               	movlw	1	; select bank2/3
 23522     0FB6  0087               	movwf	7
 23523     0FB7  0801               	movf	1,w
 23524     0FB8  00F6               	movwf	RN487X_Write@txData
 23525     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23526     0FBA  0084               	movwf	4
 23527     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23528     0FBC  0085               	movwf	5
 23529     0FBD  3F01               	moviw [1]fsr0
 23530     0FBE  008A               	movwf	10
 23531     0FBF  3F00               	moviw [0]fsr0
 23532     0FC0  000A               	callw
 23533     0FC1  318F               	pagesel	$
 23534     0FC2                     l13614:
 23535                           
 23536                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23537     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23538     0FC3  00F1               	movwf	strlen@s
 23539     0FC4  01F2               	clrf	strlen@s+1
 23540     0FC5  3192  22B5  318F   	fcall	_strlen
 23541     0FC8  0871               	movf	?_strlen,w
 23542     0FC9  390F               	andlw	15
 23543     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23544     0FCB  0086               	movwf	6
 23545     0FCC  3001               	movlw	1	; select bank2/3
 23546     0FCD  0087               	movwf	7
 23547     0FCE  0801               	movf	1,w
 23548     0FCF  00F6               	movwf	RN487X_Write@txData
 23549     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23550     0FD1  0084               	movwf	4
 23551     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23552     0FD3  0085               	movwf	5
 23553     0FD4  3F01               	moviw [1]fsr0
 23554     0FD5  008A               	movwf	10
 23555     0FD6  3F00               	moviw [0]fsr0
 23556     0FD7  000A               	callw
 23557     0FD8  318F               	pagesel	$
 23558                           
 23559                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23560     0FD9  2FEC               	goto	l13620
 23561     0FDA                     l13616:
 23562                           
 23563                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23564     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23565     0FDB  0086               	movwf	6
 23566     0FDC  0187               	clrf	7
 23567     0FDD  0801               	movf	1,w
 23568     0FDE  00F6               	movwf	RN487X_Write@txData
 23569     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23570     0FE0  0084               	movwf	4
 23571     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23572     0FE2  0085               	movwf	5
 23573     0FE3  3F01               	moviw [1]fsr0
 23574     0FE4  008A               	movwf	10
 23575     0FE5  3F00               	moviw [0]fsr0
 23576     0FE6  000A               	callw
 23577     0FE7  318F               	pagesel	$
 23578     0FE8                     l13618:
 23579     0FE8  3001               	movlw	1
 23580     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23581     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23582     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23583     0FEC                     l13620:
 23584                           
 23585                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23586     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23587     0FED  0086               	movwf	6
 23588     0FEE  0187               	clrf	7
 23589     0FEF  0801               	movf	1,w
 23590     0FF0  1D03               	btfss	3,2
 23591     0FF1  2FF3               	goto	u10571
 23592     0FF2  2FF4               	goto	u10570
 23593     0FF3                     u10571:
 23594     0FF3  2FDA               	goto	l13616
 23595     0FF4                     u10570:
 23596     0FF4                     l13622:
 23597                           
 23598                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23599     0FF4  305D               	movlw	93
 23600     0FF5  00F6               	movwf	RN487X_Write@txData
 23601     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23602     0FF7  0084               	movwf	4
 23603     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23604     0FF9  0085               	movwf	5
 23605     0FFA  3F01               	moviw [1]fsr0
 23606     0FFB  008A               	movwf	10
 23607     0FFC  3F00               	moviw [0]fsr0
 23608     0FFD  000A               	callw
 23609     0FFE  318F               	pagesel	$
 23610     0FFF                     l193:
 23611     0FFF  0008               	return
 23612     1000                     __end_of_LIGHTBLUE_SendPacket:
 23613                           
 23614                           	psect	text96
 23615     12B5                     __ptext96:	
 23616 ;; *************** function _strlen *****************
 23617 ;; Defined at:
 23618 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23619 ;; Parameters:    Size  Location     Type
 23620 ;;  s               2    1[COMMON] PTR const unsigned char 
 23621 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23622 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23623 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;  a               2    4[COMMON] PTR const unsigned char 
 23626 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23627 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23628 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23629 ;; Return value:  Size  Location     Type
 23630 ;;                  2    1[COMMON] unsigned int 
 23631 ;; Registers used:
 23632 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23633 ;; Tracked objects:
 23634 ;;		On entry : 0/0
 23635 ;;		On exit  : 0/0
 23636 ;;		Unchanged: 0/0
 23637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23641 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23642 ;;Total ram usage:        5 bytes
 23643 ;; Hardware stack levels used: 1
 23644 ;; Hardware stack levels required when called: 4
 23645 ;; This function calls:
 23646 ;;		Nothing
 23647 ;; This function is called by:
 23648 ;;		_LIGHTBLUE_SendProtocolVersion
 23649 ;;		_LIGHTBLUE_SendSerialData
 23650 ;;		_LIGHTBLUE_SendPacket
 23651 ;;		_LIGHTBLUE_SplitByte
 23652 ;;		_rn487x_PrintMessage
 23653 ;;		_strstr
 23654 ;; This function uses a non-reentrant model
 23655 ;;
 23656                           
 23657     12B5                     _strlen:	
 23658                           ;psect for function _strlen
 23659                           
 23660     12B5                     l13054:	
 23661                           ;incstack = 0
 23662                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23663                           
 23664     12B5  0872               	movf	strlen@s+1,w
 23665     12B6  00F5               	movwf	strlen@a+1
 23666     12B7  0871               	movf	strlen@s,w
 23667     12B8  00F4               	movwf	strlen@a
 23668     12B9  2ABE               	goto	l13058
 23669     12BA                     l13056:
 23670     12BA  3001               	movlw	1
 23671     12BB  07F1               	addwf	strlen@s,f
 23672     12BC  3000               	movlw	0
 23673     12BD  3DF2               	addwfc	strlen@s+1,f
 23674     12BE                     l13058:
 23675     12BE  0871               	movf	strlen@s,w
 23676     12BF  0084               	movwf	4
 23677     12C0  0872               	movf	strlen@s+1,w
 23678     12C1  0085               	movwf	5
 23679     12C2  0012               	moviw fsr0++
 23680     12C3  1D03               	btfss	3,2
 23681     12C4  2AC6               	goto	u9881
 23682     12C5  2AC7               	goto	u9880
 23683     12C6                     u9881:
 23684     12C6  2ABA               	goto	l13056
 23685     12C7                     u9880:
 23686     12C7                     l13060:
 23687     12C7  0874               	movf	strlen@a,w
 23688     12C8  0271               	subwf	strlen@s,w
 23689     12C9  00F1               	movwf	?_strlen
 23690     12CA  0875               	movf	strlen@a+1,w
 23691     12CB  3B72               	subwfb	strlen@s+1,w
 23692     12CC  00F2               	movwf	?_strlen+1
 23693     12CD                     l3313:
 23694     12CD  0008               	return
 23695     12CE                     __end_of_strlen:
 23696                           
 23697                           	psect	text97
 23698     1021                     __ptext97:	
 23699 ;; *************** function _RN487X_Write *****************
 23700 ;; Defined at:
 23701 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;  txData          1    6[COMMON] unsigned char 
 23704 ;; Auto vars:     Size  Location     Type
 23705 ;;		None
 23706 ;; Return value:  Size  Location     Type
 23707 ;;                  1    wreg      void 
 23708 ;; Registers used:
 23709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23710 ;; Tracked objects:
 23711 ;;		On entry : 0/0
 23712 ;;		On exit  : 0/0
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23719 ;;Total ram usage:        1 bytes
 23720 ;; Hardware stack levels used: 1
 23721 ;; Hardware stack levels required when called: 5
 23722 ;; This function calls:
 23723 ;;		_EUSART1_Write
 23724 ;;		_EUSART2_Write
 23725 ;; This function is called by:
 23726 ;;		_RN487X_SendCmd
 23727 ;;		_LIGHTBLUE_SendPacket
 23728 ;;		_LIGHTBLUE_SendSerialData
 23729 ;;		_RN487X_Example_TransparentUart
 23730 ;;		_main
 23731 ;; This function uses a non-reentrant model
 23732 ;;
 23733                           
 23734     1021                     _RN487X_Write:	
 23735                           ;psect for function _RN487X_Write
 23736                           
 23737     1021                     l13044:	
 23738                           ;incstack = 0
 23739                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23740                           
 23741                           
 23742                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23743     1021  0876               	movf	RN487X_Write@txData,w
 23744     1022  00F1               	movwf	EUSART2_Write@txData
 23745     1023  3016               	movlw	low ((_uart+22)| (0+32768))
 23746     1024  0084               	movwf	4
 23747     1025  3098               	movlw	high ((_uart+22)| (0+32768))
 23748     1026  0085               	movwf	5
 23749     1027  3F01               	moviw [1]fsr0
 23750     1028  008A               	movwf	10
 23751     1029  3F00               	moviw [0]fsr0
 23752     102A  000A               	callw
 23753     102B  3190               	pagesel	$
 23754     102C                     l786:
 23755     102C  0008               	return
 23756     102D                     __end_of_RN487X_Write:
 23757                           
 23758                           	psect	text98
 23759     1524                     __ptext98:	
 23760 ;; *************** function _EUSART1_Write *****************
 23761 ;; Defined at:
 23762 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23763 ;; Parameters:    Size  Location     Type
 23764 ;;  txData          1    1[COMMON] unsigned char 
 23765 ;; Auto vars:     Size  Location     Type
 23766 ;;		None
 23767 ;; Return value:  Size  Location     Type
 23768 ;;                  1    wreg      void 
 23769 ;; Registers used:
 23770 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23771 ;; Tracked objects:
 23772 ;;		On entry : 0/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23780 ;;Total ram usage:        2 bytes
 23781 ;; Hardware stack levels used: 1
 23782 ;; Hardware stack levels required when called: 4
 23783 ;; This function calls:
 23784 ;;		Nothing
 23785 ;; This function is called by:
 23786 ;;		_putch
 23787 ;;		_RN487X_Write
 23788 ;;		_rn487x_PrintMessageStart
 23789 ;;		_rn487x_PrintMessageEnd
 23790 ;;		_rn487x_PrintIndicatorCharacters
 23791 ;;		_rn487x_PrintMessage
 23792 ;;		_LIGHTBLUE_PerformAction
 23793 ;;		_RN487X_Example_TransparentUart
 23794 ;;		_main
 23795 ;; This function uses a non-reentrant model
 23796 ;;
 23797                           
 23798     1524                     _EUSART1_Write:	
 23799                           ;psect for function _EUSART1_Write
 23800                           
 23801     1524                     l13016:	
 23802                           ;incstack = 0
 23803                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23804                           
 23805     1524                     l13018:	
 23806                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23807                           
 23808                           
 23809                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23810     1524  0140               	movlb	0	; select bank0
 23811     1525  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23812     1526  1903               	btfsc	3,2
 23813     1527  2D29               	goto	u9831
 23814     1528  2D2A               	goto	u9830
 23815     1529                     u9831:
 23816     1529  2D24               	goto	l13018
 23817     152A                     u9830:
 23818     152A                     l1219:
 23819                           
 23820                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23821     152A  014E               	movlb	14	; select bank14
 23822     152B  1A19               	btfsc	25,4	;volatile
 23823     152C  2D2E               	goto	u9841
 23824     152D  2D2F               	goto	u9840
 23825     152E                     u9841:
 23826     152E  2D33               	goto	l1220
 23827     152F                     u9840:
 23828     152F                     l13020:
 23829                           
 23830                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23831     152F  0871               	movf	EUSART1_Write@txData,w
 23832     1530  0142               	movlb	2	; select bank2
 23833     1531  009A               	movwf	26	;volatile
 23834                           
 23835                           ;mcc_generated_files/eusart1.c: 182:     }
 23836     1532  2D48               	goto	l13032
 23837     1533                     l1220:	
 23838                           ;mcc_generated_files/eusart1.c: 183:     else
 23839                           
 23840                           
 23841                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23842     1533  1219               	bcf	25,4	;volatile
 23843     1534                     l13022:
 23844                           
 23845                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23846     1534  0140               	movlb	0	; select bank0
 23847     1535  085D               	movf	_eusart1TxHead,w
 23848     1536  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23849     1537  0086               	movwf	6
 23850     1538  0187               	clrf	7
 23851     1539  0871               	movf	EUSART1_Write@txData,w
 23852     153A  0081               	movwf	1
 23853     153B                     l13024:
 23854     153B  3001               	movlw	1
 23855     153C  00F2               	movwf	??_EUSART1_Write
 23856     153D  0872               	movf	??_EUSART1_Write,w
 23857     153E  07DD               	addwf	_eusart1TxHead,f	;volatile
 23858     153F                     l13026:
 23859                           
 23860                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23861     153F  3008               	movlw	8
 23862     1540  025D               	subwf	_eusart1TxHead,w	;volatile
 23863     1541  1C03               	skipc
 23864     1542  2D44               	goto	u9851
 23865     1543  2D45               	goto	u9850
 23866     1544                     u9851:
 23867     1544  2D46               	goto	l13030
 23868     1545                     u9850:
 23869     1545                     l13028:
 23870                           
 23871                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23872     1545  01DD               	clrf	_eusart1TxHead	;volatile
 23873     1546                     l13030:
 23874                           
 23875                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23876     1546  3001               	movlw	1
 23877     1547  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23878     1548                     l13032:
 23879                           
 23880                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23881     1548  014E               	movlb	14	; select bank14
 23882     1549  1619               	bsf	25,4	;volatile
 23883     154A                     l1223:
 23884     154A  0008               	return
 23885     154B                     __end_of_EUSART1_Write:
 23886                           
 23887                           	psect	text99
 23888     14FD                     __ptext99:	
 23889 ;; *************** function _EUSART2_Write *****************
 23890 ;; Defined at:
 23891 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23892 ;; Parameters:    Size  Location     Type
 23893 ;;  txData          1    1[COMMON] unsigned char 
 23894 ;; Auto vars:     Size  Location     Type
 23895 ;;		None
 23896 ;; Return value:  Size  Location     Type
 23897 ;;                  1    wreg      void 
 23898 ;; Registers used:
 23899 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23900 ;; Tracked objects:
 23901 ;;		On entry : 0/0
 23902 ;;		On exit  : 0/0
 23903 ;;		Unchanged: 0/0
 23904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23909 ;;Total ram usage:        2 bytes
 23910 ;; Hardware stack levels used: 1
 23911 ;; Hardware stack levels required when called: 4
 23912 ;; This function calls:
 23913 ;;		Nothing
 23914 ;; This function is called by:
 23915 ;;		_RN487X_Write
 23916 ;;		_rn487x_PrintMessageStart
 23917 ;;		_rn487x_PrintMessageEnd
 23918 ;;		_rn487x_PrintIndicatorCharacters
 23919 ;;		_rn487x_PrintMessage
 23920 ;;		_LIGHTBLUE_PerformAction
 23921 ;;		_RN487X_Example_TransparentUart
 23922 ;;		_main
 23923 ;; This function uses a non-reentrant model
 23924 ;;
 23925                           
 23926     14FD                     _EUSART2_Write:	
 23927                           ;psect for function _EUSART2_Write
 23928                           
 23929     14FD                     l12972:	
 23930                           ;incstack = 0
 23931                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23932                           
 23933     14FD                     l12974:	
 23934                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23935                           
 23936                           
 23937                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23938     14FD  0140               	movlb	0	; select bank0
 23939     14FE  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23940     14FF  1903               	btfsc	3,2
 23941     1500  2D02               	goto	u9781
 23942     1501  2D03               	goto	u9780
 23943     1502                     u9781:
 23944     1502  2CFD               	goto	l12974
 23945     1503                     u9780:
 23946     1503                     l1075:
 23947                           
 23948                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23949     1503  014E               	movlb	14	; select bank14
 23950     1504  1B19               	btfsc	25,6	;volatile
 23951     1505  2D07               	goto	u9791
 23952     1506  2D08               	goto	u9790
 23953     1507                     u9791:
 23954     1507  2D0C               	goto	l1076
 23955     1508                     u9790:
 23956     1508                     l12976:
 23957                           
 23958                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23959     1508  0871               	movf	EUSART2_Write@txData,w
 23960     1509  0154               	movlb	20	; select bank20
 23961     150A  009A               	movwf	26	;volatile
 23962                           
 23963                           ;mcc_generated_files/eusart2.c: 182:     }
 23964     150B  2D21               	goto	l12988
 23965     150C                     l1076:	
 23966                           ;mcc_generated_files/eusart2.c: 183:     else
 23967                           
 23968                           
 23969                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23970     150C  1319               	bcf	25,6	;volatile
 23971     150D                     l12978:
 23972                           
 23973                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23974     150D  0140               	movlb	0	; select bank0
 23975     150E  0863               	movf	_eusart2TxHead,w
 23976     150F  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23977     1510  0086               	movwf	6
 23978     1511  0187               	clrf	7
 23979     1512  0871               	movf	EUSART2_Write@txData,w
 23980     1513  0081               	movwf	1
 23981     1514                     l12980:
 23982     1514  3001               	movlw	1
 23983     1515  00F2               	movwf	??_EUSART2_Write
 23984     1516  0872               	movf	??_EUSART2_Write,w
 23985     1517  07E3               	addwf	_eusart2TxHead,f	;volatile
 23986     1518                     l12982:
 23987                           
 23988                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23989     1518  3008               	movlw	8
 23990     1519  0263               	subwf	_eusart2TxHead,w	;volatile
 23991     151A  1C03               	skipc
 23992     151B  2D1D               	goto	u9801
 23993     151C  2D1E               	goto	u9800
 23994     151D                     u9801:
 23995     151D  2D1F               	goto	l12986
 23996     151E                     u9800:
 23997     151E                     l12984:
 23998                           
 23999                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 24000     151E  01E3               	clrf	_eusart2TxHead	;volatile
 24001     151F                     l12986:
 24002                           
 24003                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 24004     151F  3001               	movlw	1
 24005     1520  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 24006     1521                     l12988:
 24007                           
 24008                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 24009     1521  014E               	movlb	14	; select bank14
 24010     1522  1719               	bsf	25,6	;volatile
 24011     1523                     l1079:
 24012     1523  0008               	return
 24013     1524                     __end_of_EUSART2_Write:
 24014                           
 24015                           	psect	text100
 24016     0C4B                     __ptext100:	
 24017 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 24018 ;; Defined at:
 24019 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;  accelData       1    wreg     PTR struct .
 24022 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24023 ;; Auto vars:     Size  Location     Type
 24024 ;;  accelData       1   19[BANK0 ] PTR struct .
 24025 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24026 ;;  sensorValue     2   20[BANK0 ] short 
 24027 ;;  mSB             1   18[BANK0 ] char 
 24028 ;;  lSB             1   17[BANK0 ] char 
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1    wreg      void 
 24031 ;; Registers used:
 24032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24033 ;; Tracked objects:
 24034 ;;		On entry : 0/0
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24039 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24041 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24042 ;;Total ram usage:        6 bytes
 24043 ;; Hardware stack levels used: 1
 24044 ;; Hardware stack levels required when called: 15
 24045 ;; This function calls:
 24046 ;;		_BMA253_GetAccelDataY
 24047 ;;		_BMA253_GetAccelDataZ
 24048 ;;		_BMA253_NewAccelDataRdyY
 24049 ;;		_BMA253_NewAccelDataRdyZ
 24050 ;;		_readRegister
 24051 ;; This function is called by:
 24052 ;;		_LIGHTBLUE_AccelSensor
 24053 ;; This function uses a non-reentrant model
 24054 ;;
 24055                           
 24056     0C4B                     _BMA253_GetAccelDataXYZ:	
 24057                           ;psect for function _BMA253_GetAccelDataXYZ
 24058                           
 24059                           
 24060                           ;incstack = 0
 24061 ;; hardware stack exceeded
 24062                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24063                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 24064     0C4B  0140               	movlb	0	; select bank0
 24065     0C4C  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 24066     0C4D                     l13580:
 24067                           
 24068                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 24069     0C4D  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 24070     0C4E                     l13582:
 24071                           
 24072                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 24073     0C4E  3013               	movlw	19
 24074     0C4F  3190  207A  318C   	fcall	_readRegister
 24075     0C52  0140               	movlb	0	; select bank0
 24076     0C53  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 24077     0C54                     l13584:
 24078                           
 24079                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 24080     0C54  3012               	movlw	18
 24081     0C55  3190  207A  318C   	fcall	_readRegister
 24082     0C58  0140               	movlb	0	; select bank0
 24083     0C59  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 24084     0C5A                     l13586:
 24085                           
 24086                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 24087     0C5A  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 24088     0C5B  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 24089     0C5C  3008               	movlw	8
 24090     0C5D                     u10535:
 24091     0C5D  1003               	clrc
 24092     0C5E  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 24093     0C5F  1403               	setc
 24094     0C60  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 24095     0C61  0B89               	decfsz	9,f
 24096     0C62  2C5D               	goto	u10535
 24097     0C63  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 24098     0C64  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 24099     0C65  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 24100     0C66  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 24101     0C67  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 24102     0C68  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 24103     0C69                     l13588:
 24104                           
 24105                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 24106     0C69  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24107     0C6A  0086               	movwf	6
 24108     0C6B  0187               	clrf	7
 24109     0C6C  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24110     0C6D  3FC0               	movwi [0]fsr1
 24111     0C6E  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24112     0C6F  3FC1               	movwi [1]fsr1
 24113     0C70                     l13590:	
 24114                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24115                           
 24116                           
 24117                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24118     0C70  3191  214C  318C   	fcall	_BMA253_NewAccelDataRdyY
 24119     0C73  3A00               	xorlw	0
 24120     0C74  1903               	skipnz
 24121     0C75  2C77               	goto	u10541
 24122     0C76  2C78               	goto	u10540
 24123     0C77                     u10541:
 24124     0C77  2C70               	goto	l13590
 24125     0C78                     u10540:
 24126     0C78                     l13592:
 24127                           
 24128                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24129     0C78  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24130     0C79  3196  2648  318C   	fcall	_BMA253_GetAccelDataY
 24131     0C7C                     l13594:
 24132                           
 24133                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 24134     0C7C  0140               	movlb	0	; select bank0
 24135     0C7D  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24136     0C7E  3E02               	addlw	2
 24137     0C7F  0086               	movwf	6
 24138     0C80  0187               	clrf	7
 24139     0C81  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24140     0C82  3FC0               	movwi [0]fsr1
 24141     0C83  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24142     0C84  3FC1               	movwi [1]fsr1
 24143     0C85                     l13596:	
 24144                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24145                           
 24146                           
 24147                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24148     0C85  3191  215D  318C   	fcall	_BMA253_NewAccelDataRdyZ
 24149     0C88  3A00               	xorlw	0
 24150     0C89  1903               	skipnz
 24151     0C8A  2C8C               	goto	u10551
 24152     0C8B  2C8D               	goto	u10550
 24153     0C8C                     u10551:
 24154     0C8C  2C85               	goto	l13596
 24155     0C8D                     u10550:
 24156     0C8D                     l13598:
 24157                           
 24158                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24159     0C8D  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24160     0C8E  3196  2676  318C   	fcall	_BMA253_GetAccelDataZ
 24161     0C91                     l13600:
 24162                           
 24163                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 24164     0C91  0140               	movlb	0	; select bank0
 24165     0C92  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24166     0C93  3E04               	addlw	4
 24167     0C94  0086               	movwf	6
 24168     0C95  0187               	clrf	7
 24169     0C96  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24170     0C97  3FC0               	movwi [0]fsr1
 24171     0C98  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24172     0C99  3FC1               	movwi [1]fsr1
 24173     0C9A                     l44:
 24174     0C9A  0008               	return
 24175     0C9B                     __end_of_BMA253_GetAccelDataXYZ:
 24176                           
 24177                           	psect	text101
 24178     107A                     __ptext101:	
 24179 ;; *************** function _readRegister *****************
 24180 ;; Defined at:
 24181 ;;		line 169 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24182 ;; Parameters:    Size  Location     Type
 24183 ;;  regAddress      1    wreg     unsigned char 
 24184 ;; Auto vars:     Size  Location     Type
 24185 ;;  regAddress      1   12[BANK0 ] unsigned char 
 24186 ;;  regVal          1   13[BANK0 ] unsigned char 
 24187 ;; Return value:  Size  Location     Type
 24188 ;;                  1    wreg      unsigned char 
 24189 ;; Registers used:
 24190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24191 ;; Tracked objects:
 24192 ;;		On entry : 0/0
 24193 ;;		On exit  : 0/0
 24194 ;;		Unchanged: 0/0
 24195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24200 ;;Total ram usage:        2 bytes
 24201 ;; Hardware stack levels used: 1
 24202 ;; Hardware stack levels required when called: 14
 24203 ;; This function calls:
 24204 ;;		_readRegisters
 24205 ;; This function is called by:
 24206 ;;		_BMA253_GetAccelDataXYZ
 24207 ;;		_setOperatingMode
 24208 ;;		_setMagneticChannel
 24209 ;;		_setXYAxisRange
 24210 ;;		_setZAxisRange
 24211 ;;		_setTemperatureEn
 24212 ;;		_getLowPower
 24213 ;;		_getOperatingMode
 24214 ;;		_getMagneticChannel
 24215 ;;		_getAngleEn
 24216 ;;		_getTemperatureEN
 24217 ;;		_getDeviceStatus
 24218 ;;		_setCRCMode
 24219 ;;		_setMagTemp
 24220 ;;		_setConvAvg
 24221 ;;		_setReadMode
 24222 ;;		_setIntThreshold
 24223 ;;		_setLowPower
 24224 ;;		_setGlitchFilter
 24225 ;;		_setTriggerMode
 24226 ;;		_setSleeptime
 24227 ;;		_setMagDir
 24228 ;;		_setMagnitudeGain
 24229 ;;		_setAngleEn
 24230 ;;		_setInterruptResult
 24231 ;;		_setThresholdEn
 24232 ;;		_setIntPinState
 24233 ;;		_setInterruptMode
 24234 ;;		_setMaskInterrupt
 24235 ;;		_setI2CAddressEN
 24236 ;;		_setOscillatorError
 24237 ;;		_getCRCMode
 24238 ;;		_getMagTemp
 24239 ;;		_getConvAvg
 24240 ;;		_getReadMode
 24241 ;;		_getIntThreshold
 24242 ;;		_getGlitchFiler
 24243 ;;		_getTriggerMode
 24244 ;;		_getSleeptime
 24245 ;;		_getMagDir
 24246 ;;		_getMagnitudeChannelSelect
 24247 ;;		_getMagneticGain
 24248 ;;		_getMagneticOffset1
 24249 ;;		_getMagneticOffset2
 24250 ;;		_getXYAxisRange
 24251 ;;		_getZAxisRange
 24252 ;;		_getXThreshold
 24253 ;;		_getYThreshold
 24254 ;;		_getZThreshold
 24255 ;;		_getTemperatureThreshold
 24256 ;;		_getInterruptResult
 24257 ;;		_getThresholdEn
 24258 ;;		_getIntPinState
 24259 ;;		_getInterruptMode
 24260 ;;		_getMaskInt
 24261 ;;		_getSetCount
 24262 ;;		_getPOR
 24263 ;;		_getDiagStatus
 24264 ;;		_getResultStatus
 24265 ;;		_getI2CAddress
 24266 ;;		_getDeviceID
 24267 ;;		_getInterruptPinStatus
 24268 ;;		_getXData
 24269 ;;		_getYData
 24270 ;;		_getZData
 24271 ;;		_getAngleResult
 24272 ;;		_getMagnitudeResult
 24273 ;; This function uses a non-reentrant model
 24274 ;;
 24275                           
 24276     107A                     _readRegister:	
 24277                           ;psect for function _readRegister
 24278                           
 24279                           
 24280                           ;incstack = 0
 24281 ;; hardware stack exceeded
 24282                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24283                           ;readRegister@regAddress stored from wreg
 24284     107A  0140               	movlb	0	; select bank0
 24285     107B  00AC               	movwf	readRegister@regAddress
 24286     107C                     l13206:
 24287                           
 24288                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 170:     uint8_t regVa
      +                          l = 0;
 24289     107C  01AD               	clrf	readRegister@regVal
 24290     107D                     l13208:
 24291                           
 24292                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 171:     readRegisters
      +                          (regAddress, &regVal, 1);
 24293     107D  302D               	movlw	(low (readRegister@regVal| 0))& (0+255)
 24294     107E  00A7               	movwf	readRegisters@dataBuffer
 24295     107F  01A8               	clrf	readRegisters@numBytes
 24296     1080  0AA8               	incf	readRegisters@numBytes,f
 24297     1081  082C               	movf	readRegister@regAddress,w
 24298     1082  3190  20B4  3190   	fcall	_readRegisters
 24299     1085                     l13210:
 24300                           
 24301                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 174:     return regVal
      +                          ;
 24302     1085  0140               	movlb	0	; select bank0
 24303     1086  082D               	movf	readRegister@regVal,w
 24304     1087                     l2136:
 24305     1087  0008               	return
 24306     1088                     __end_of_readRegister:
 24307                           
 24308                           	psect	text102
 24309     10B4                     __ptext102:	
 24310 ;; *************** function _readRegisters *****************
 24311 ;; Defined at:
 24312 ;;		line 113 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24313 ;; Parameters:    Size  Location     Type
 24314 ;;  regAddress      1    wreg     unsigned char 
 24315 ;;  dataBuffer      1    7[BANK0 ] PTR unsigned char 
 24316 ;;		 -> getTemp@databuffer(2), getManufacturerID@databuffer(2), readWakeUpAndSleepData@wakeupRegisterRead(8), readRegist
      +er@regVal(1), 
 24317 ;;  numBytes        1    8[BANK0 ] unsigned char 
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;  regAddress      1   11[BANK0 ] unsigned char 
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  1    wreg      char 
 24322 ;; Registers used:
 24323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24324 ;; Tracked objects:
 24325 ;;		On entry : 0/0
 24326 ;;		On exit  : 0/0
 24327 ;;		Unchanged: 0/0
 24328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24332 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24333 ;;Total ram usage:        5 bytes
 24334 ;; Hardware stack levels used: 1
 24335 ;; Hardware stack levels required when called: 13
 24336 ;; This function calls:
 24337 ;;		_i2c_readNBytes
 24338 ;; This function is called by:
 24339 ;;		_readRegister
 24340 ;;		_readWakeUpAndSleepData
 24341 ;;		_getManufacturerID
 24342 ;;		_getTemp
 24343 ;; This function uses a non-reentrant model
 24344 ;;
 24345                           
 24346     10B4                     _readRegisters:	
 24347                           ;psect for function _readRegisters
 24348                           
 24349                           
 24350                           ;incstack = 0
 24351 ;; hardware stack exceeded
 24352                           ; Regs used in _readRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24353                           ;readRegisters@regAddress stored from wreg
 24354     10B4  0140               	movlb	0	; select bank0
 24355     10B5  00AB               	movwf	readRegisters@regAddress
 24356     10B6                     l13142:
 24357                           
 24358                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 132:     i2c_readNByte
      +                          s(regAddress, &dataBuffer, numBytes);
 24359     10B6  3027               	movlw	(low (readRegisters@dataBuffer| 0))& (0+255)
 24360     10B7  00A4               	movwf	i2c_readNBytes@data
 24361     10B8  0828               	movf	readRegisters@numBytes,w
 24362     10B9  00A9               	movwf	??_readRegisters
 24363     10BA  01AA               	clrf	??_readRegisters+1
 24364     10BB  0829               	movf	??_readRegisters,w
 24365     10BC  00A5               	movwf	i2c_readNBytes@len
 24366     10BD  082A               	movf	??_readRegisters+1,w
 24367     10BE  00A6               	movwf	i2c_readNBytes@len+1
 24368     10BF  082B               	movf	readRegisters@regAddress,w
 24369     10C0  3193  23C2  3190   	fcall	_i2c_readNBytes
 24370     10C3                     l2130:
 24371     10C3  0008               	return
 24372     10C4                     __end_of_readRegisters:
 24373                           
 24374                           	psect	text103
 24375     13C2                     __ptext103:	
 24376 ;; *************** function _i2c_readNBytes *****************
 24377 ;; Defined at:
 24378 ;;		line 228 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24379 ;; Parameters:    Size  Location     Type
 24380 ;;  address         1    wreg     unsigned char 
 24381 ;;  data            1    4[BANK0 ] PTR void 
 24382 ;;		 -> readRegisters@dataBuffer(1), 
 24383 ;;  len             2    5[BANK0 ] unsigned int 
 24384 ;; Auto vars:     Size  Location     Type
 24385 ;;  address         1   11[COMMON] unsigned char 
 24386 ;; Return value:  Size  Location     Type
 24387 ;;                  1    wreg      void 
 24388 ;; Registers used:
 24389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24390 ;; Tracked objects:
 24391 ;;		On entry : 0/0
 24392 ;;		On exit  : 0/0
 24393 ;;		Unchanged: 0/0
 24394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24395 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24398 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24399 ;;Total ram usage:        4 bytes
 24400 ;; Hardware stack levels used: 1
 24401 ;; Hardware stack levels required when called: 12
 24402 ;; This function calls:
 24403 ;;		_I2C1_Close
 24404 ;;		_I2C1_MasterRead
 24405 ;;		_I2C1_Open
 24406 ;;		_I2C1_SetBuffer
 24407 ;; This function is called by:
 24408 ;;		_readRegisters
 24409 ;; This function uses a non-reentrant model
 24410 ;;
 24411                           
 24412     13C2                     _i2c_readNBytes:	
 24413                           ;psect for function _i2c_readNBytes
 24414                           
 24415                           
 24416                           ;incstack = 0
 24417 ;; hardware stack exceeded
 24418                           ; Regs used in _i2c_readNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24419                           ;i2c_readNBytes@address stored from wreg
 24420     13C2  00FB               	movwf	i2c_readNBytes@address
 24421     13C3                     l13034:
 24422     13C3                     l13036:	
 24423                           ;mcc_generated_files/drivers/i2c_simple_master.c: 228: void i2c_readNBytes(i2c1_address_
      +                          t address, void *data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 229:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 230:     while(!I2C1_Open(address));
 24424                           
 24425     13C3  087B               	movf	i2c_readNBytes@address,w
 24426     13C4  3197  27CA  3193   	fcall	_I2C1_Open
 24427     13C7  3A00               	xorlw	0
 24428     13C8  1903               	skipnz
 24429     13C9  2BCB               	goto	u9861
 24430     13CA  2BCC               	goto	u9860
 24431     13CB                     u9861:
 24432     13CB  2BC3               	goto	l13036
 24433     13CC                     u9860:
 24434     13CC                     l13038:
 24435                           
 24436                           ;mcc_generated_files/drivers/i2c_simple_master.c: 231:     I2C1_SetBuffer(data,len);
 24437     13CC  0140               	movlb	0	; select bank0
 24438     13CD  0826               	movf	i2c_readNBytes@len+1,w
 24439     13CE  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24440     13CF  0825               	movf	i2c_readNBytes@len,w
 24441     13D0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24442     13D1  0824               	movf	i2c_readNBytes@data,w
 24443     13D2  3190  206C  3193   	fcall	_I2C1_SetBuffer
 24444     13D5                     l13040:
 24445                           
 24446                           ;mcc_generated_files/drivers/i2c_simple_master.c: 232:     I2C1_MasterRead();
 24447     13D5  319E  26F1  3193   	fcall	_I2C1_MasterRead
 24448     13D8                     l13042:	
 24449                           ;mcc_generated_files/drivers/i2c_simple_master.c: 233:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24450                           
 24451     13D8  3192  2255  3193   	fcall	_I2C1_Close
 24452     13DB  3A01               	xorlw	1
 24453     13DC  1903               	skipnz
 24454     13DD  2BDF               	goto	u9871
 24455     13DE  2BE0               	goto	u9870
 24456     13DF                     u9871:
 24457     13DF  2BD8               	goto	l13042
 24458     13E0                     u9870:
 24459     13E0                     l579:
 24460     13E0  0008               	return
 24461     13E1                     __end_of_i2c_readNBytes:
 24462                           
 24463                           	psect	text104
 24464     1EF1                     __ptext104:	
 24465 ;; *************** function _I2C1_MasterRead *****************
 24466 ;; Defined at:
 24467 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 24468 ;; Parameters:    Size  Location     Type
 24469 ;;		None
 24470 ;; Auto vars:     Size  Location     Type
 24471 ;;		None
 24472 ;; Return value:  Size  Location     Type
 24473 ;;                  1    wreg      enum E358
 24474 ;; Registers used:
 24475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24476 ;; Tracked objects:
 24477 ;;		On entry : 0/0
 24478 ;;		On exit  : 0/0
 24479 ;;		Unchanged: 0/0
 24480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24485 ;;Total ram usage:        0 bytes
 24486 ;; Hardware stack levels used: 1
 24487 ;; Hardware stack levels required when called: 11
 24488 ;; This function calls:
 24489 ;;		_I2C1_MasterOperation
 24490 ;; This function is called by:
 24491 ;;		_i2c_readNBytes
 24492 ;;		_I2C1_ReadNBytes
 24493 ;; This function uses a non-reentrant model
 24494 ;;
 24495                           
 24496     1EF1                     _I2C1_MasterRead:	
 24497                           ;psect for function _I2C1_MasterRead
 24498                           
 24499     1EF1                     l12942:	
 24500                           ;incstack = 0
 24501 ;; hardware stack exceeded
 24502                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24503                           
 24504                           
 24505                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 24506     1EF1  3001               	movlw	1
 24507     1EF2  3193  23E1  319E   	fcall	_I2C1_MasterOperation
 24508     1EF5                     l1759:
 24509     1EF5  0008               	return
 24510     1EF6                     __end_of_I2C1_MasterRead:
 24511                           
 24512                           	psect	text105
 24513     1676                     __ptext105:	
 24514 ;; *************** function _BMA253_GetAccelDataZ *****************
 24515 ;; Defined at:
 24516 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24517 ;; Parameters:    Size  Location     Type
 24518 ;;  zAccelData      1    wreg     PTR short 
 24519 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24520 ;; Auto vars:     Size  Location     Type
 24521 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24522 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24523 ;;  msbData         1   15[BANK0 ] unsigned char 
 24524 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24525 ;; Return value:  Size  Location     Type
 24526 ;;                  1    wreg      void 
 24527 ;; Registers used:
 24528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24529 ;; Tracked objects:
 24530 ;;		On entry : 0/0
 24531 ;;		On exit  : 0/0
 24532 ;;		Unchanged: 0/0
 24533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24535 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24536 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24537 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24538 ;;Total ram usage:        6 bytes
 24539 ;; Hardware stack levels used: 1
 24540 ;; Hardware stack levels required when called: 14
 24541 ;; This function calls:
 24542 ;;		_BMA253_NewAccelDataRdyZ
 24543 ;;		_i2c_read1ByteRegister
 24544 ;; This function is called by:
 24545 ;;		_BMA253_GetAccelDataXYZ
 24546 ;; This function uses a non-reentrant model
 24547 ;;
 24548                           
 24549     1676                     _BMA253_GetAccelDataZ:	
 24550                           ;psect for function _BMA253_GetAccelDataZ
 24551                           
 24552                           
 24553                           ;incstack = 0
 24554 ;; hardware stack exceeded
 24555                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24556                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24557     1676  0140               	movlb	0	; select bank0
 24558     1677  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24559     1678                     l13428:
 24560     1678                     l13430:	
 24561                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24562                           
 24563                           
 24564                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24565     1678  3191  215D  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24566     167B  3A00               	xorlw	0
 24567     167C  1903               	skipnz
 24568     167D  2E7F               	goto	u10391
 24569     167E  2E80               	goto	u10390
 24570     167F                     u10391:
 24571     167F  2E78               	goto	l13430
 24572     1680                     u10390:
 24573     1680                     l13432:
 24574                           
 24575                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24576     1680  3006               	movlw	6
 24577     1681  0140               	movlb	0	; select bank0
 24578     1682  00A4               	movwf	i2c_read1ByteRegister@reg
 24579     1683  3019               	movlw	25
 24580     1684  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24581     1687  0140               	movlb	0	; select bank0
 24582     1688  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24583                           
 24584                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24585     1689  3007               	movlw	7
 24586     168A  00A4               	movwf	i2c_read1ByteRegister@reg
 24587     168B  3019               	movlw	25
 24588     168C  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24589     168F  0140               	movlb	0	; select bank0
 24590     1690  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24591     1691                     l13434:
 24592                           
 24593                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24594     1691  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24595     1692  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24596     1693  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24597     1694  00AA               	movwf	??_BMA253_GetAccelDataZ
 24598     1695  3004               	movlw	4
 24599     1696  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24600     1697                     u10405:
 24601     1697  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24602     1698  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24603     1699  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24604     169A  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24605     169B  2E97               	goto	u10405
 24606     169C  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24607     169D  0086               	movwf	6
 24608     169E  0187               	clrf	7
 24609     169F  082A               	movf	??_BMA253_GetAccelDataZ,w
 24610     16A0  3FC0               	movwi [0]fsr1
 24611     16A1  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24612     16A2  3FC1               	movwi [1]fsr1
 24613     16A3                     l35:
 24614     16A3  0008               	return
 24615     16A4                     __end_of_BMA253_GetAccelDataZ:
 24616                           
 24617                           	psect	text106
 24618     115D                     __ptext106:	
 24619 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24620 ;; Defined at:
 24621 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24622 ;; Parameters:    Size  Location     Type
 24623 ;;		None
 24624 ;; Auto vars:     Size  Location     Type
 24625 ;;  zNewData        1   11[COMMON] _Bool 
 24626 ;; Return value:  Size  Location     Type
 24627 ;;                  1    wreg      _Bool 
 24628 ;; Registers used:
 24629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24630 ;; Tracked objects:
 24631 ;;		On entry : 0/0
 24632 ;;		On exit  : 0/0
 24633 ;;		Unchanged: 0/0
 24634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24639 ;;Total ram usage:        1 bytes
 24640 ;; Hardware stack levels used: 1
 24641 ;; Hardware stack levels required when called: 13
 24642 ;; This function calls:
 24643 ;;		_i2c_read1ByteRegister
 24644 ;; This function is called by:
 24645 ;;		_BMA253_GetAccelDataZ
 24646 ;;		_BMA253_GetAccelDataXYZ
 24647 ;; This function uses a non-reentrant model
 24648 ;;
 24649                           
 24650     115D                     _BMA253_NewAccelDataRdyZ:	
 24651                           ;psect for function _BMA253_NewAccelDataRdyZ
 24652                           
 24653     115D                     l13338:	
 24654                           ;incstack = 0
 24655                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24656                           
 24657                           
 24658                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24659     115D  3006               	movlw	6
 24660     115E  0140               	movlb	0	; select bank0
 24661     115F  00A4               	movwf	i2c_read1ByteRegister@reg
 24662     1160  3019               	movlw	25
 24663     1161  318B  2364  3191   	fcall	_i2c_read1ByteRegister
 24664     1164  3901               	andlw	1
 24665     1165  1D03               	btfss	3,2
 24666     1166  2968               	goto	u10231
 24667     1167  296A               	goto	u10230
 24668     1168                     u10231:
 24669     1168  3001               	movlw	1
 24670     1169  296B               	goto	u10240
 24671     116A                     u10230:
 24672     116A  3000               	movlw	0
 24673     116B                     u10240:
 24674     116B  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24675     116C                     l13340:
 24676                           
 24677                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24678     116C  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24679     116D                     l56:
 24680     116D  0008               	return
 24681     116E                     __end_of_BMA253_NewAccelDataRdyZ:
 24682                           
 24683                           	psect	text107
 24684     1648                     __ptext107:	
 24685 ;; *************** function _BMA253_GetAccelDataY *****************
 24686 ;; Defined at:
 24687 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24688 ;; Parameters:    Size  Location     Type
 24689 ;;  yAccelData      1    wreg     PTR short 
 24690 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24693 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24694 ;;  msbData         1   15[BANK0 ] unsigned char 
 24695 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24696 ;; Return value:  Size  Location     Type
 24697 ;;                  1    wreg      void 
 24698 ;; Registers used:
 24699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24700 ;; Tracked objects:
 24701 ;;		On entry : 0/0
 24702 ;;		On exit  : 0/0
 24703 ;;		Unchanged: 0/0
 24704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24706 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24707 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24708 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24709 ;;Total ram usage:        6 bytes
 24710 ;; Hardware stack levels used: 1
 24711 ;; Hardware stack levels required when called: 14
 24712 ;; This function calls:
 24713 ;;		_BMA253_NewAccelDataRdyY
 24714 ;;		_i2c_read1ByteRegister
 24715 ;; This function is called by:
 24716 ;;		_BMA253_GetAccelDataXYZ
 24717 ;; This function uses a non-reentrant model
 24718 ;;
 24719                           
 24720     1648                     _BMA253_GetAccelDataY:	
 24721                           ;psect for function _BMA253_GetAccelDataY
 24722                           
 24723                           
 24724                           ;incstack = 0
 24725 ;; hardware stack exceeded
 24726                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24727                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24728     1648  0140               	movlb	0	; select bank0
 24729     1649  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24730     164A                     l13420:
 24731     164A                     l13422:	
 24732                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24733                           
 24734                           
 24735                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24736     164A  3191  214C  3196   	fcall	_BMA253_NewAccelDataRdyY
 24737     164D  3A00               	xorlw	0
 24738     164E  1903               	skipnz
 24739     164F  2E51               	goto	u10371
 24740     1650  2E52               	goto	u10370
 24741     1651                     u10371:
 24742     1651  2E4A               	goto	l13422
 24743     1652                     u10370:
 24744     1652                     l13424:
 24745                           
 24746                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24747     1652  3004               	movlw	4
 24748     1653  0140               	movlb	0	; select bank0
 24749     1654  00A4               	movwf	i2c_read1ByteRegister@reg
 24750     1655  3019               	movlw	25
 24751     1656  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24752     1659  0140               	movlb	0	; select bank0
 24753     165A  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24754                           
 24755                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24756     165B  3005               	movlw	5
 24757     165C  00A4               	movwf	i2c_read1ByteRegister@reg
 24758     165D  3019               	movlw	25
 24759     165E  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24760     1661  0140               	movlb	0	; select bank0
 24761     1662  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24762     1663                     l13426:
 24763                           
 24764                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24765     1663  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24766     1664  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24767     1665  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24768     1666  00AA               	movwf	??_BMA253_GetAccelDataY
 24769     1667  3004               	movlw	4
 24770     1668  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24771     1669                     u10385:
 24772     1669  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24773     166A  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24774     166B  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24775     166C  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24776     166D  2E69               	goto	u10385
 24777     166E  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24778     166F  0086               	movwf	6
 24779     1670  0187               	clrf	7
 24780     1671  082A               	movf	??_BMA253_GetAccelDataY,w
 24781     1672  3FC0               	movwi [0]fsr1
 24782     1673  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24783     1674  3FC1               	movwi [1]fsr1
 24784     1675                     l29:
 24785     1675  0008               	return
 24786     1676                     __end_of_BMA253_GetAccelDataY:
 24787                           
 24788                           	psect	text108
 24789     114C                     __ptext108:	
 24790 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24791 ;; Defined at:
 24792 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24793 ;; Parameters:    Size  Location     Type
 24794 ;;		None
 24795 ;; Auto vars:     Size  Location     Type
 24796 ;;  yNewData        1   11[COMMON] _Bool 
 24797 ;; Return value:  Size  Location     Type
 24798 ;;                  1    wreg      _Bool 
 24799 ;; Registers used:
 24800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24801 ;; Tracked objects:
 24802 ;;		On entry : 0/0
 24803 ;;		On exit  : 0/0
 24804 ;;		Unchanged: 0/0
 24805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24810 ;;Total ram usage:        1 bytes
 24811 ;; Hardware stack levels used: 1
 24812 ;; Hardware stack levels required when called: 13
 24813 ;; This function calls:
 24814 ;;		_i2c_read1ByteRegister
 24815 ;; This function is called by:
 24816 ;;		_BMA253_GetAccelDataY
 24817 ;;		_BMA253_GetAccelDataXYZ
 24818 ;; This function uses a non-reentrant model
 24819 ;;
 24820                           
 24821     114C                     _BMA253_NewAccelDataRdyY:	
 24822                           ;psect for function _BMA253_NewAccelDataRdyY
 24823                           
 24824     114C                     l13332:	
 24825                           ;incstack = 0
 24826                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24827                           
 24828                           
 24829                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24830     114C  3004               	movlw	4
 24831     114D  0140               	movlb	0	; select bank0
 24832     114E  00A4               	movwf	i2c_read1ByteRegister@reg
 24833     114F  3019               	movlw	25
 24834     1150  318B  2364  3191   	fcall	_i2c_read1ByteRegister
 24835     1153  3901               	andlw	1
 24836     1154  1D03               	btfss	3,2
 24837     1155  2957               	goto	u10211
 24838     1156  2959               	goto	u10210
 24839     1157                     u10211:
 24840     1157  3001               	movlw	1
 24841     1158  295A               	goto	u10220
 24842     1159                     u10210:
 24843     1159  3000               	movlw	0
 24844     115A                     u10220:
 24845     115A  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24846     115B                     l13334:
 24847                           
 24848                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24849     115B  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24850     115C                     l53:
 24851     115C  0008               	return
 24852     115D                     __end_of_BMA253_NewAccelDataRdyY:
 24853                           
 24854                           	psect	text109
 24855     0B64                     __ptext109:	
 24856 ;; *************** function _i2c_read1ByteRegister *****************
 24857 ;; Defined at:
 24858 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24859 ;; Parameters:    Size  Location     Type
 24860 ;;  address         1    wreg     unsigned char 
 24861 ;;  reg             1    4[BANK0 ] unsigned char 
 24862 ;; Auto vars:     Size  Location     Type
 24863 ;;  address         1    5[BANK0 ] unsigned char 
 24864 ;;  x               2    7[BANK0 ] int 
 24865 ;;  d2              1    9[BANK0 ] unsigned char 
 24866 ;;  e               1    6[BANK0 ] enum E358
 24867 ;; Return value:  Size  Location     Type
 24868 ;;                  1    wreg      unsigned char 
 24869 ;; Registers used:
 24870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24871 ;; Tracked objects:
 24872 ;;		On entry : 0/0
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24876 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24877 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24879 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24880 ;;Total ram usage:        6 bytes
 24881 ;; Hardware stack levels used: 1
 24882 ;; Hardware stack levels required when called: 12
 24883 ;; This function calls:
 24884 ;;		_I2C1_Close
 24885 ;;		_I2C1_MasterWrite
 24886 ;;		_I2C1_Open
 24887 ;;		_I2C1_SetAddressNackCallback
 24888 ;;		_I2C1_SetBuffer
 24889 ;;		_I2C1_SetDataCompleteCallback
 24890 ;; This function is called by:
 24891 ;;		_BMA253_GetAccelDataY
 24892 ;;		_BMA253_GetAccelDataZ
 24893 ;;		_BMA253_NewAccelDataRdyY
 24894 ;;		_BMA253_NewAccelDataRdyZ
 24895 ;;		_BMA253_GetAccelDataX
 24896 ;;		_BMA253_GetAccelChipId
 24897 ;;		_BMA253_NewAccelDataRdyX
 24898 ;; This function uses a non-reentrant model
 24899 ;;
 24900                           
 24901     0B64                     _i2c_read1ByteRegister:	
 24902                           ;psect for function _i2c_read1ByteRegister
 24903                           
 24904                           
 24905                           ;incstack = 0
 24906                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24907                           ;i2c_read1ByteRegister@address stored from wreg
 24908     0B64  0140               	movlb	0	; select bank0
 24909     0B65  00A5               	movwf	i2c_read1ByteRegister@address
 24910     0B66                     l13176:
 24911                           
 24912                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24913     0B66  302A               	movlw	42
 24914     0B67  00A9               	movwf	i2c_read1ByteRegister@d2
 24915                           
 24916                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24917     0B68  3002               	movlw	2
 24918     0B69  00A7               	movwf	i2c_read1ByteRegister@x
 24919     0B6A  3000               	movlw	0
 24920     0B6B  00A8               	movwf	i2c_read1ByteRegister@x+1
 24921     0B6C                     l13182:
 24922     0B6C  0140               	movlb	0	; select bank0
 24923     0B6D  0825               	movf	i2c_read1ByteRegister@address,w
 24924     0B6E  3197  27CA  318B   	fcall	_I2C1_Open
 24925     0B71  3A00               	xorlw	0
 24926     0B72  1903               	skipnz
 24927     0B73  2B75               	goto	u10061
 24928     0B74  2B76               	goto	u10060
 24929     0B75                     u10061:
 24930     0B75  2B6C               	goto	l13182
 24931     0B76                     u10060:
 24932     0B76                     l13184:
 24933                           
 24934                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24935     0B76  30E6               	movlw	low _rd1RegCompleteHandler
 24936     0B77  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24937     0B78  3010               	movlw	high _rd1RegCompleteHandler
 24938     0B79  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24939     0B7A  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24940     0B7B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24941     0B7C  319F  27EA  318B   	fcall	_I2C1_SetDataCompleteCallback
 24942     0B7F                     l13186:
 24943                           
 24944                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24945     0B7F  3001               	movlw	1
 24946     0B80  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24947     0B81  3000               	movlw	0
 24948     0B82  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24949     0B83  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 24950     0B84  3190  206C  318B   	fcall	_I2C1_SetBuffer
 24951     0B87                     l13188:
 24952                           
 24953                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24954     0B87  3000               	movlw	0
 24955     0B88  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24956     0B89  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24957     0B8A  3000               	movlw	0
 24958     0B8B  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24959     0B8C  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24960     0B8D  319F  27F5  318B   	fcall	_I2C1_SetAddressNackCallback
 24961     0B90                     l13190:
 24962                           
 24963                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24964     0B90  319E  26EC  318B   	fcall	_I2C1_MasterWrite
 24965     0B93                     l13192:	
 24966                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24967                           
 24968     0B93  3192  2255  318B   	fcall	_I2C1_Close
 24969     0B96  0140               	movlb	0	; select bank0
 24970     0B97  00A6               	movwf	i2c_read1ByteRegister@e
 24971     0B98  0326               	decf	i2c_read1ByteRegister@e,w
 24972     0B99  1903               	btfsc	3,2
 24973     0B9A  2B9C               	goto	u10071
 24974     0B9B  2B9D               	goto	u10070
 24975     0B9C                     u10071:
 24976     0B9C  2B93               	goto	l13192
 24977     0B9D                     u10070:
 24978     0B9D                     l13194:
 24979                           
 24980                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24981     0B9D  0826               	movf	i2c_read1ByteRegister@e,w
 24982     0B9E  1D03               	btfss	3,2
 24983     0B9F  2BA1               	goto	u10081
 24984     0BA0  2BA2               	goto	u10080
 24985     0BA1                     u10081:
 24986     0BA1  2BA3               	goto	l13198
 24987     0BA2                     u10080:
 24988     0BA2  2BAD               	goto	l13202
 24989     0BA3                     l13198:
 24990                           
 24991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24992     0BA3  30FF               	movlw	255
 24993     0BA4  07A7               	addwf	i2c_read1ByteRegister@x,f
 24994     0BA5  30FF               	movlw	255
 24995     0BA6  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24996     0BA7                     l13200:
 24997     0BA7  0827               	movf	i2c_read1ByteRegister@x,w
 24998     0BA8  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24999     0BA9  1D03               	btfss	3,2
 25000     0BAA  2BAC               	goto	u10091
 25001     0BAB  2BAD               	goto	u10090
 25002     0BAC                     u10091:
 25003     0BAC  2B6C               	goto	l13182
 25004     0BAD                     u10090:
 25005     0BAD                     l13202:
 25006                           
 25007                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 25008     0BAD  0829               	movf	i2c_read1ByteRegister@d2,w
 25009     0BAE                     l534:
 25010     0BAE  0008               	return
 25011     0BAF                     __end_of_i2c_read1ByteRegister:
 25012                           
 25013                           	psect	text110
 25014     1FF5                     __ptext110:	
 25015 ;; *************** function _I2C1_SetAddressNackCallback *****************
 25016 ;; Defined at:
 25017 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 25020 ;;		 -> NULL(1), 
 25021 ;;  ptr             2    7[COMMON] PTR void 
 25022 ;;		 -> NULL(0), 
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;		None
 25025 ;; Return value:  Size  Location     Type
 25026 ;;                  1    wreg      void 
 25027 ;; Registers used:
 25028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25029 ;; Tracked objects:
 25030 ;;		On entry : 0/0
 25031 ;;		On exit  : 0/0
 25032 ;;		Unchanged: 0/0
 25033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25038 ;;Total ram usage:        4 bytes
 25039 ;; Hardware stack levels used: 1
 25040 ;; Hardware stack levels required when called: 5
 25041 ;; This function calls:
 25042 ;;		_I2C1_SetCallback
 25043 ;; This function is called by:
 25044 ;;		_i2c_write1ByteRegister
 25045 ;;		_i2c_read1ByteRegister
 25046 ;;		_i2c_read2ByteRegister
 25047 ;;		_i2c_writeNBytes
 25048 ;;		_i2c_write2ByteRegister
 25049 ;;		_i2c_readDataBlock
 25050 ;;		_I2C1_Read1ByteRegister
 25051 ;;		_I2C1_Read2ByteRegister
 25052 ;;		_I2C1_Write1ByteRegister
 25053 ;;		_I2C1_Write2ByteRegister
 25054 ;;		_I2C1_WriteNBytes
 25055 ;;		_I2C1_ReadDataBlock
 25056 ;; This function uses a non-reentrant model
 25057 ;;
 25058                           
 25059     1FF5                     _I2C1_SetAddressNackCallback:	
 25060                           ;psect for function _I2C1_SetAddressNackCallback
 25061                           
 25062     1FF5                     l13064:	
 25063                           ;incstack = 0
 25064                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25065                           
 25066                           
 25067                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 25068     1FF5  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 25069     1FF6  00F2               	movwf	I2C1_SetCallback@cb+1
 25070     1FF7  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 25071     1FF8  00F1               	movwf	I2C1_SetCallback@cb
 25072     1FF9  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 25073     1FFA  00F3               	movwf	I2C1_SetCallback@ptr
 25074     1FFB  3002               	movlw	2
 25075     1FFC  3194  2469  319F   	fcall	_I2C1_SetCallback
 25076     1FFF                     l1778:
 25077     1FFF  0008               	return
 25078     2000                     __end_of_I2C1_SetAddressNackCallback:
 25079                           
 25080                           	psect	text111
 25081     17CA                     __ptext111:	
 25082 ;; *************** function _I2C1_Open *****************
 25083 ;; Defined at:
 25084 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;  address         1    wreg     unsigned char 
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;  address         1    1[COMMON] unsigned char 
 25089 ;;  returnValue     1    2[COMMON] enum E358
 25090 ;; Return value:  Size  Location     Type
 25091 ;;                  1    wreg      enum E358
 25092 ;; Registers used:
 25093 ;;		wreg, status,2, status,0, pclath, cstack
 25094 ;; Tracked objects:
 25095 ;;		On entry : 0/0
 25096 ;;		On exit  : 0/0
 25097 ;;		Unchanged: 0/0
 25098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25103 ;;Total ram usage:        2 bytes
 25104 ;; Hardware stack levels used: 1
 25105 ;; Hardware stack levels required when called: 5
 25106 ;; This function calls:
 25107 ;;		_I2C1_MasterClearIrq
 25108 ;;		_I2C1_MasterOpen
 25109 ;; This function is called by:
 25110 ;;		_i2c_write1ByteRegister
 25111 ;;		_i2c_read1ByteRegister
 25112 ;;		_i2c_read2ByteRegister
 25113 ;;		_i2c_readNBytes
 25114 ;;		_i2c_writeNBytes
 25115 ;;		_i2c_write2ByteRegister
 25116 ;;		_i2c_readDataBlock
 25117 ;;		_I2C1_Read1ByteRegister
 25118 ;;		_I2C1_Read2ByteRegister
 25119 ;;		_I2C1_Write1ByteRegister
 25120 ;;		_I2C1_Write2ByteRegister
 25121 ;;		_I2C1_WriteNBytes
 25122 ;;		_I2C1_ReadNBytes
 25123 ;;		_I2C1_ReadDataBlock
 25124 ;; This function uses a non-reentrant model
 25125 ;;
 25126                           
 25127     17CA                     _I2C1_Open:	
 25128                           ;psect for function _I2C1_Open
 25129                           
 25130                           
 25131                           ;incstack = 0
 25132                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 25133                           ;I2C1_Open@address stored from wreg
 25134     17CA  00F1               	movwf	I2C1_Open@address
 25135     17CB                     l12892:
 25136                           
 25137                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 25138     17CB  01F2               	clrf	I2C1_Open@returnValue
 25139     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 25140                           
 25141                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 25142     17CD  0141               	movlb	1	; select bank1
 25143     17CE  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 25144     17CF  2FD1               	goto	u9741
 25145     17D0  2FD2               	goto	u9740
 25146     17D1                     u9741:
 25147     17D1  2FFE               	goto	l1745
 25148     17D2                     u9740:
 25149     17D2                     l12894:
 25150                           
 25151                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25152     17D2  0871               	movf	I2C1_Open@address,w
 25153     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25154     17D4                     l12896:
 25155                           
 25156                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25157     17D4  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25158     17D5                     l12898:
 25159                           
 25160                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25161     17D5  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 25162     17D6                     l12900:
 25163                           
 25164                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25165     17D6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25166                           
 25167                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25168     17D7  300E               	movlw	14
 25169     17D8  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25170                           
 25171                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25172     17D9  30F4               	movlw	244
 25173     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25174     17DB  3001               	movlw	1
 25175     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25176     17DD                     l12902:
 25177                           
 25178                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25179     17DD  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 25180                           
 25181                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25182     17DE  3078               	movlw	low _I2C1_CallbackReturnStop
 25183     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 25184     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 25185     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25186     17E2                     l12904:
 25187                           
 25188                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25189     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25190     17E3                     l12906:
 25191                           
 25192                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25193     17E3  3078               	movlw	low _I2C1_CallbackReturnStop
 25194     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25195     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 25196     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25197                           
 25198                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25199     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25200     17E8                     l12908:
 25201                           
 25202                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25203     17E8  3078               	movlw	low _I2C1_CallbackReturnStop
 25204     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25205     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 25206     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25207     17EC                     l12910:
 25208                           
 25209                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25210     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25211                           
 25212                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25213     17ED  3078               	movlw	low _I2C1_CallbackReturnStop
 25214     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25215     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 25216     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25217     17F1                     l12912:
 25218                           
 25219                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25220     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25221     17F2                     l12914:
 25222                           
 25223                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25224     17F2  307A               	movlw	low _I2C1_CallbackReturnReset
 25225     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25226     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 25227     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25228                           
 25229                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25230     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25231     17F7                     l12916:
 25232                           
 25233                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25234     17F7  319E  267C  3197   	fcall	_I2C1_MasterClearIrq
 25235     17FA                     l12918:
 25236                           
 25237                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25238     17FA  3190  2052  3197   	fcall	_I2C1_MasterOpen
 25239     17FD                     l12920:
 25240                           
 25241                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25242     17FD  01F2               	clrf	I2C1_Open@returnValue
 25243     17FE                     l1745:	
 25244                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25245                           
 25246                           
 25247                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25248     17FE  0872               	movf	I2C1_Open@returnValue,w
 25249     17FF                     l1746:
 25250     17FF  0008               	return
 25251     1800                     __end_of_I2C1_Open:
 25252                           
 25253                           	psect	text112
 25254     1052                     __ptext112:	
 25255 ;; *************** function _I2C1_MasterOpen *****************
 25256 ;; Defined at:
 25257 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25258 ;; Parameters:    Size  Location     Type
 25259 ;;		None
 25260 ;; Auto vars:     Size  Location     Type
 25261 ;;		None
 25262 ;; Return value:  Size  Location     Type
 25263 ;;                  1    wreg      _Bool 
 25264 ;; Registers used:
 25265 ;;		wreg, status,2
 25266 ;; Tracked objects:
 25267 ;;		On entry : 0/0
 25268 ;;		On exit  : 0/0
 25269 ;;		Unchanged: 0/0
 25270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25275 ;;Total ram usage:        0 bytes
 25276 ;; Hardware stack levels used: 1
 25277 ;; Hardware stack levels required when called: 4
 25278 ;; This function calls:
 25279 ;;		Nothing
 25280 ;; This function is called by:
 25281 ;;		_I2C1_Open
 25282 ;; This function uses a non-reentrant model
 25283 ;;
 25284                           
 25285     1052                     _I2C1_MasterOpen:	
 25286                           ;psect for function _I2C1_MasterOpen
 25287                           
 25288     1052                     l12856:	
 25289                           ;incstack = 0
 25290                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25291                           
 25292                           
 25293                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25294     1052  0143               	movlb	3	; select bank3
 25295     1053  1A90               	btfsc	16,5	;volatile
 25296     1054  2856               	goto	u9711
 25297     1055  2857               	goto	u9710
 25298     1056                     u9711:
 25299     1056  285E               	goto	l1911
 25300     1057                     u9710:
 25301     1057                     l12858:
 25302                           
 25303                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25304     1057  018F               	clrf	15	;volatile
 25305     1058                     l12860:
 25306                           
 25307                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25308     1058  3008               	movlw	8
 25309     1059  0090               	movwf	16	;volatile
 25310     105A                     l12862:
 25311                           
 25312                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25313     105A  0191               	clrf	17	;volatile
 25314                           
 25315                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25316     105B  304F               	movlw	79
 25317     105C  008D               	movwf	13	;volatile
 25318     105D                     l12864:
 25319                           
 25320                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25321     105D  1690               	bsf	16,5	;volatile
 25322     105E                     l1911:
 25323     105E  0008               	return
 25324     105F                     __end_of_I2C1_MasterOpen:
 25325                           
 25326                           	psect	text113
 25327     1EEC                     __ptext113:	
 25328 ;; *************** function _I2C1_MasterWrite *****************
 25329 ;; Defined at:
 25330 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25331 ;; Parameters:    Size  Location     Type
 25332 ;;		None
 25333 ;; Auto vars:     Size  Location     Type
 25334 ;;		None
 25335 ;; Return value:  Size  Location     Type
 25336 ;;                  1    wreg      enum E358
 25337 ;; Registers used:
 25338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25339 ;; Tracked objects:
 25340 ;;		On entry : 0/0
 25341 ;;		On exit  : 0/0
 25342 ;;		Unchanged: 0/0
 25343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25348 ;;Total ram usage:        0 bytes
 25349 ;; Hardware stack levels used: 1
 25350 ;; Hardware stack levels required when called: 11
 25351 ;; This function calls:
 25352 ;;		_I2C1_MasterOperation
 25353 ;; This function is called by:
 25354 ;;		_i2c_write1ByteRegister
 25355 ;;		_i2c_read1ByteRegister
 25356 ;;		_i2c_read2ByteRegister
 25357 ;;		_i2c_writeNBytes
 25358 ;;		_i2c_write2ByteRegister
 25359 ;;		_i2c_readDataBlock
 25360 ;;		_I2C1_Read1ByteRegister
 25361 ;;		_I2C1_Read2ByteRegister
 25362 ;;		_I2C1_Write1ByteRegister
 25363 ;;		_I2C1_Write2ByteRegister
 25364 ;;		_I2C1_WriteNBytes
 25365 ;;		_I2C1_ReadDataBlock
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           
 25369     1EEC                     _I2C1_MasterWrite:	
 25370                           ;psect for function _I2C1_MasterWrite
 25371                           
 25372     1EEC                     l13066:	
 25373                           ;incstack = 0
 25374                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25375                           
 25376                           
 25377                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25378     1EEC  3000               	movlw	0
 25379     1EED  3193  23E1  319E   	fcall	_I2C1_MasterOperation
 25380     1EF0                     l1762:
 25381     1EF0  0008               	return
 25382     1EF1                     __end_of_I2C1_MasterWrite:
 25383                           
 25384                           	psect	text114
 25385     13E1                     __ptext114:	
 25386 ;; *************** function _I2C1_MasterOperation *****************
 25387 ;; Defined at:
 25388 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25389 ;; Parameters:    Size  Location     Type
 25390 ;;  read            1    wreg     _Bool 
 25391 ;; Auto vars:     Size  Location     Type
 25392 ;;  read            1    2[BANK0 ] _Bool 
 25393 ;;  returnValue     1    3[BANK0 ] enum E358
 25394 ;; Return value:  Size  Location     Type
 25395 ;;                  1    wreg      enum E358
 25396 ;; Registers used:
 25397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25398 ;; Tracked objects:
 25399 ;;		On entry : 0/0
 25400 ;;		On exit  : 0/0
 25401 ;;		Unchanged: 0/0
 25402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25407 ;;Total ram usage:        2 bytes
 25408 ;; Hardware stack levels used: 1
 25409 ;; Hardware stack levels required when called: 10
 25410 ;; This function calls:
 25411 ;;		_I2C1_MasterStart
 25412 ;;		_I2C1_Poller
 25413 ;; This function is called by:
 25414 ;;		_I2C1_MasterRead
 25415 ;;		_I2C1_MasterWrite
 25416 ;; This function uses a non-reentrant model
 25417 ;;
 25418                           
 25419     13E1                     _I2C1_MasterOperation:	
 25420                           ;psect for function _I2C1_MasterOperation
 25421                           
 25422                           
 25423                           ;incstack = 0
 25424                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25425                           ;I2C1_MasterOperation@read stored from wreg
 25426     13E1  0140               	movlb	0	; select bank0
 25427     13E2  00A2               	movwf	I2C1_MasterOperation@read
 25428     13E3                     l12872:
 25429                           
 25430                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25431     13E3  01A3               	clrf	I2C1_MasterOperation@returnValue
 25432     13E4  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25433                           
 25434                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25435     13E5  0141               	movlb	1	; select bank1
 25436     13E6  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25437     13E7  2BE9               	goto	u9721
 25438     13E8  2BEA               	goto	u9720
 25439     13E9                     u9721:
 25440     13E9  2BFF               	goto	l12888
 25441     13EA                     u9720:
 25442     13EA                     l12874:
 25443                           
 25444                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25445     13EA  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 25446     13EB                     l12876:
 25447                           
 25448                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25449     13EB  0140               	movlb	0	; select bank0
 25450     13EC  01A3               	clrf	I2C1_MasterOperation@returnValue
 25451     13ED                     l12878:
 25452                           
 25453                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25454     13ED  0822               	movf	I2C1_MasterOperation@read,w
 25455     13EE  1903               	btfsc	3,2
 25456     13EF  2BF1               	goto	u9731
 25457     13F0  2BF2               	goto	u9730
 25458     13F1                     u9731:
 25459     13F1  2BF6               	goto	l12882
 25460     13F2                     u9730:
 25461     13F2                     l12880:
 25462                           
 25463                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25464     13F2  0141               	movlb	1	; select bank1
 25465     13F3  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 25466     13F4  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 25467                           
 25468                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25469     13F5  2BF9               	goto	l12884
 25470     13F6                     l12882:
 25471                           
 25472                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25473     13F6  3002               	movlw	2
 25474     13F7  0141               	movlb	1	; select bank1
 25475     13F8  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25476     13F9                     l12884:
 25477                           
 25478                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25479     13F9  319E  2685  3193   	fcall	_I2C1_MasterStart
 25480     13FC                     l12886:
 25481                           
 25482                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25483     13FC  3190  2045  3193   	fcall	_I2C1_Poller
 25484     13FF                     l12888:
 25485                           
 25486                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25487     13FF  0140               	movlb	0	; select bank0
 25488     1400  0823               	movf	I2C1_MasterOperation@returnValue,w
 25489     1401                     l1756:
 25490     1401  0008               	return
 25491     1402                     __end_of_I2C1_MasterOperation:
 25492                           
 25493                           	psect	text115
 25494     1045                     __ptext115:	
 25495 ;; *************** function _I2C1_Poller *****************
 25496 ;; Defined at:
 25497 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25498 ;; Parameters:    Size  Location     Type
 25499 ;;		None
 25500 ;; Auto vars:     Size  Location     Type
 25501 ;;		None
 25502 ;; Return value:  Size  Location     Type
 25503 ;;                  1    wreg      void 
 25504 ;; Registers used:
 25505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25506 ;; Tracked objects:
 25507 ;;		On entry : 0/0
 25508 ;;		On exit  : 0/0
 25509 ;;		Unchanged: 0/0
 25510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25515 ;;Total ram usage:        0 bytes
 25516 ;; Hardware stack levels used: 1
 25517 ;; Hardware stack levels required when called: 9
 25518 ;; This function calls:
 25519 ;;		_I2C1_MasterFsm
 25520 ;;		_I2C1_MasterWaitForEvent
 25521 ;; This function is called by:
 25522 ;;		_I2C1_MasterOperation
 25523 ;; This function uses a non-reentrant model
 25524 ;;
 25525                           
 25526     1045                     _I2C1_Poller:	
 25527                           ;psect for function _I2C1_Poller
 25528                           
 25529     1045                     l12848:	
 25530                           ;incstack = 0
 25531                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25532                           
 25533                           
 25534                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25535     1045  284C               	goto	l12854
 25536     1046                     l12850:
 25537                           
 25538                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25539     1046  319F  2706  3190   	fcall	_I2C1_MasterWaitForEvent
 25540     1049                     l12852:
 25541                           
 25542                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25543     1049  3195  259A  3190   	fcall	_I2C1_MasterFsm
 25544     104C                     l12854:
 25545                           
 25546                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25547     104C  0141               	movlb	1	; select bank1
 25548     104D  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25549     104E  2850               	goto	u9701
 25550     104F  2851               	goto	u9700
 25551     1050                     u9701:
 25552     1050  2846               	goto	l12850
 25553     1051                     u9700:
 25554     1051                     l1795:
 25555     1051  0008               	return
 25556     1052                     __end_of_I2C1_Poller:
 25557                           
 25558                           	psect	text116
 25559     1F06                     __ptext116:	
 25560 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25561 ;; Defined at:
 25562 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25563 ;; Parameters:    Size  Location     Type
 25564 ;;		None
 25565 ;; Auto vars:     Size  Location     Type
 25566 ;;		None
 25567 ;; Return value:  Size  Location     Type
 25568 ;;                  1    wreg      void 
 25569 ;; Registers used:
 25570 ;;		None
 25571 ;; Tracked objects:
 25572 ;;		On entry : 0/0
 25573 ;;		On exit  : 0/0
 25574 ;;		Unchanged: 0/0
 25575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25580 ;;Total ram usage:        0 bytes
 25581 ;; Hardware stack levels used: 1
 25582 ;; Hardware stack levels required when called: 4
 25583 ;; This function calls:
 25584 ;;		Nothing
 25585 ;; This function is called by:
 25586 ;;		_I2C1_Poller
 25587 ;; This function uses a non-reentrant model
 25588 ;;
 25589                           
 25590     1F06                     _I2C1_MasterWaitForEvent:	
 25591                           ;psect for function _I2C1_MasterWaitForEvent
 25592                           
 25593     1F06                     l1968:	
 25594                           ;incstack = 0
 25595                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25596                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25597                           
 25598                           
 25599                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25600     1F06  014E               	movlb	14	; select bank14
 25601     1F07  1C0F               	btfss	15,0	;volatile
 25602     1F08  2F0A               	goto	u9671
 25603     1F09  2F0B               	goto	u9670
 25604     1F0A                     u9671:
 25605     1F0A  2F06               	goto	l1968
 25606     1F0B                     u9670:
 25607     1F0B                     l1972:
 25608     1F0B  0008               	return
 25609     1F0C                     __end_of_I2C1_MasterWaitForEvent:
 25610                           
 25611                           	psect	text117
 25612     159A                     __ptext117:	
 25613 ;; *************** function _I2C1_MasterFsm *****************
 25614 ;; Defined at:
 25615 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25616 ;; Parameters:    Size  Location     Type
 25617 ;;		None
 25618 ;; Auto vars:     Size  Location     Type
 25619 ;;		None
 25620 ;; Return value:  Size  Location     Type
 25621 ;;                  1    wreg      void 
 25622 ;; Registers used:
 25623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25624 ;; Tracked objects:
 25625 ;;		On entry : 0/0
 25626 ;;		On exit  : 0/0
 25627 ;;		Unchanged: 0/0
 25628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25631 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25633 ;;Total ram usage:        2 bytes
 25634 ;; Hardware stack levels used: 1
 25635 ;; Hardware stack levels required when called: 8
 25636 ;; This function calls:
 25637 ;;		_I2C1_DO_ADDRESS_NACK
 25638 ;;		_I2C1_DO_IDLE
 25639 ;;		_I2C1_DO_RCEN
 25640 ;;		_I2C1_DO_RESET
 25641 ;;		_I2C1_DO_RX
 25642 ;;		_I2C1_DO_RX_ACK
 25643 ;;		_I2C1_DO_RX_NACK_RESTART
 25644 ;;		_I2C1_DO_RX_NACK_STOP
 25645 ;;		_I2C1_DO_SEND_ADR_READ
 25646 ;;		_I2C1_DO_SEND_ADR_WRITE
 25647 ;;		_I2C1_DO_SEND_RESTART
 25648 ;;		_I2C1_DO_SEND_RESTART_READ
 25649 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25650 ;;		_I2C1_DO_SEND_STOP
 25651 ;;		_I2C1_DO_TX
 25652 ;;		_I2C1_DO_TX_EMPTY
 25653 ;;		_I2C1_MasterClearIrq
 25654 ;;		_I2C1_MasterIsNack
 25655 ;; This function is called by:
 25656 ;;		_I2C1_Poller
 25657 ;; This function uses a non-reentrant model
 25658 ;;
 25659                           
 25660     159A                     _I2C1_MasterFsm:	
 25661                           ;psect for function _I2C1_MasterFsm
 25662                           
 25663     159A                     l12836:	
 25664                           ;incstack = 0
 25665                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25666                           
 25667                           
 25668                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25669     159A  319E  267C  3195   	fcall	_I2C1_MasterClearIrq
 25670     159D                     l12838:
 25671                           
 25672                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25673     159D  0141               	movlb	1	; select bank1
 25674     159E  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 25675     159F  2DA1               	goto	u9681
 25676     15A0  2DA2               	goto	u9680
 25677     15A1                     u9681:
 25678     15A1  2DAD               	goto	l12844
 25679     15A2                     u9680:
 25680     15A2                     l12840:
 25681     15A2  319F  2700  3195   	fcall	_I2C1_MasterIsNack
 25682     15A5  3A00               	xorlw	0
 25683     15A6  1903               	skipnz
 25684     15A7  2DA9               	goto	u9691
 25685     15A8  2DAA               	goto	u9690
 25686     15A9                     u9691:
 25687     15A9  2DAD               	goto	l12844
 25688     15AA                     u9690:
 25689     15AA                     l12842:
 25690                           
 25691                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25692     15AA  300F               	movlw	15
 25693     15AB  0141               	movlb	1	; select bank1
 25694     15AC  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25695     15AD                     l12844:
 25696                           
 25697                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25698     15AD  0141               	movlb	1	; select bank1
 25699     15AE  083A               	movf	(_I2C1_Status^(0+128)+26),w
 25700     15AF  0140               	movlb	0	; select bank0
 25701     15B0  00A0               	movwf	??_I2C1_MasterFsm
 25702     15B1  01A1               	clrf	??_I2C1_MasterFsm+1
 25703     15B2  35A0               	lslf	??_I2C1_MasterFsm,f
 25704     15B3  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25705     15B4  3028               	movlw	low _i2c1_fsmStateTable
 25706     15B5  0720               	addwf	??_I2C1_MasterFsm,w
 25707     15B6  0084               	movwf	4
 25708     15B7  3018               	movlw	high _i2c1_fsmStateTable
 25709     15B8  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25710     15B9  3880               	iorlw	128
 25711     15BA  0085               	movwf	5
 25712     15BB  3F01               	moviw [1]fsr0
 25713     15BC  008A               	movwf	10
 25714     15BD  3F00               	moviw [0]fsr0
 25715     15BE  000A               	callw
 25716     15BF  3195               	pagesel	$
 25717     15C0  0141               	movlb	1	; select bank1
 25718     15C1  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25719     15C2                     l1799:
 25720     15C2  0008               	return
 25721     15C3                     __end_of_I2C1_MasterFsm:
 25722                           
 25723                           	psect	text118
 25724     1572                     __ptext118:	
 25725 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25726 ;; Defined at:
 25727 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25728 ;; Parameters:    Size  Location     Type
 25729 ;;		None
 25730 ;; Auto vars:     Size  Location     Type
 25731 ;;		None
 25732 ;; Return value:  Size  Location     Type
 25733 ;;                  1    wreg      enum E12565
 25734 ;; Registers used:
 25735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25736 ;; Tracked objects:
 25737 ;;		On entry : 0/0
 25738 ;;		On exit  : 0/0
 25739 ;;		Unchanged: 0/0
 25740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25745 ;;Total ram usage:        2 bytes
 25746 ;; Hardware stack levels used: 1
 25747 ;; Hardware stack levels required when called: 7
 25748 ;; This function calls:
 25749 ;;		NULL
 25750 ;;		_I2C1_CallbackReturnReset
 25751 ;;		_I2C1_CallbackReturnStop
 25752 ;;		_I2C1_DO_SEND_RESTART
 25753 ;;		_I2C1_DO_SEND_STOP
 25754 ;;		_rd1RegCompleteHandler
 25755 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 25756 ;;		_rd2RegCompleteHandler
 25757 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 25758 ;;		_rdBlkRegCompleteHandler
 25759 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 25760 ;;		_wr1RegCompleteHandler
 25761 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 25762 ;;		_wr2RegCompleteHandler
 25763 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 25764 ;; This function is called by:
 25765 ;;		_I2C1_MasterFsm
 25766 ;; This function uses a non-reentrant model
 25767 ;;
 25768                           
 25769     1572                     _I2C1_DO_ADDRESS_NACK:	
 25770                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25771                           
 25772     1572                     l12812:	
 25773                           ;incstack = 0
 25774                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25775                           
 25776                           
 25777                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25778     1572  0141               	movlb	1	; select bank1
 25779     1573  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25780     1574                     l12814:
 25781                           
 25782                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25783     1574  3002               	movlw	2
 25784     1575  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25785                           
 25786                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25787     1576  2D7F               	goto	l12826
 25788     1577                     l12816:
 25789                           
 25790                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25791     1577  319E  26CE  3195   	fcall	_I2C1_DO_SEND_RESTART
 25792     157A  2D99               	goto	l1890
 25793     157B                     l12820:
 25794                           
 25795                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25796     157B  319E  26D3  3195   	fcall	_I2C1_DO_SEND_STOP
 25797     157E  2D99               	goto	l1890
 25798     157F                     l12826:
 25799     157F  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25800     1580  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25801     1581  3004               	movlw	4
 25802     1582  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25803     1583  0086               	movwf	6
 25804     1584  0187               	clrf	7
 25805     1585  3F41               	moviw [1]fsr1
 25806     1586  008A               	movwf	10
 25807     1587  3F40               	moviw [0]fsr1
 25808     1588  000A               	callw
 25809     1589  3195               	pagesel	$
 25810     158A  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25811     158B  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25812                           
 25813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25814                           ; Switch size 1, requested type "simple"
 25815                           ; Number of cases is 1, Range of values is 0 to 0
 25816                           ; switch strategies available:
 25817                           ; Name         Instructions Cycles
 25818                           ; simple_byte            4     3 (average)
 25819                           ; direct_byte            8     6 (fixed)
 25820                           ; jumptable            260     6 (fixed)
 25821                           ;	Chosen strategy is simple_byte
 25822     158C  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25823     158D  3A00               	xorlw	0	; case 0
 25824     158E  1903               	skipnz
 25825     158F  2D91               	goto	l16628
 25826     1590  2D7B               	goto	l12820
 25827     1591                     l16628:
 25828                           
 25829                           ; Switch size 1, requested type "simple"
 25830                           ; Number of cases is 2, Range of values is 2 to 3
 25831                           ; switch strategies available:
 25832                           ; Name         Instructions Cycles
 25833                           ; simple_byte            7     4 (average)
 25834                           ; direct_byte           13     9 (fixed)
 25835                           ; jumptable            263     9 (fixed)
 25836                           ;	Chosen strategy is simple_byte
 25837     1591  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25838     1592  3A02               	xorlw	2	; case 2
 25839     1593  1903               	skipnz
 25840     1594  2D77               	goto	l12816
 25841     1595  3A01               	xorlw	1	; case 3
 25842     1596  1903               	skipnz
 25843     1597  2D77               	goto	l12816
 25844     1598  2D7B               	goto	l12820
 25845     1599                     l1890:
 25846     1599  0008               	return
 25847     159A                     __end_of_I2C1_DO_ADDRESS_NACK:
 25848                           
 25849                           	psect	text119
 25850     1EE7                     __ptext119:	
 25851 ;; *************** function _I2C1_DO_RESET *****************
 25852 ;; Defined at:
 25853 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25854 ;; Parameters:    Size  Location     Type
 25855 ;;		None
 25856 ;; Auto vars:     Size  Location     Type
 25857 ;;		None
 25858 ;; Return value:  Size  Location     Type
 25859 ;;                  1    wreg      enum E12565
 25860 ;; Registers used:
 25861 ;;		wreg, status,2
 25862 ;; Tracked objects:
 25863 ;;		On entry : 0/0
 25864 ;;		On exit  : 0/0
 25865 ;;		Unchanged: 0/0
 25866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25871 ;;Total ram usage:        0 bytes
 25872 ;; Hardware stack levels used: 1
 25873 ;; Hardware stack levels required when called: 4
 25874 ;; This function calls:
 25875 ;;		Nothing
 25876 ;; This function is called by:
 25877 ;;		_I2C1_MasterFsm
 25878 ;; This function uses a non-reentrant model
 25879 ;;
 25880                           
 25881     1EE7                     _I2C1_DO_RESET:	
 25882                           ;psect for function _I2C1_DO_RESET
 25883                           
 25884     1EE7                     l12804:	
 25885                           ;incstack = 0
 25886                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25887                           
 25888                           
 25889                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25890     1EE7  0141               	movlb	1	; select bank1
 25891     1EE8  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25892     1EE9                     l12806:
 25893                           
 25894                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25895     1EE9  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25896     1EEA                     l12808:
 25897                           
 25898                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25899     1EEA  300E               	movlw	14
 25900     1EEB                     l1884:
 25901     1EEB  0008               	return
 25902     1EEC                     __end_of_I2C1_DO_RESET:
 25903                           
 25904                           	psect	text120
 25905     1EE2                     __ptext120:	
 25906 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25907 ;; Defined at:
 25908 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;		None
 25911 ;; Auto vars:     Size  Location     Type
 25912 ;;		None
 25913 ;; Return value:  Size  Location     Type
 25914 ;;                  1    wreg      enum E12565
 25915 ;; Registers used:
 25916 ;;		wreg, status,2, status,0, pclath, cstack
 25917 ;; Tracked objects:
 25918 ;;		On entry : 0/0
 25919 ;;		On exit  : 0/0
 25920 ;;		Unchanged: 0/0
 25921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25926 ;;Total ram usage:        0 bytes
 25927 ;; Hardware stack levels used: 1
 25928 ;; Hardware stack levels required when called: 5
 25929 ;; This function calls:
 25930 ;;		_I2C1_MasterSendNack
 25931 ;; This function is called by:
 25932 ;;		_I2C1_DO_RX
 25933 ;;		_I2C1_MasterFsm
 25934 ;; This function uses a non-reentrant model
 25935 ;;
 25936                           
 25937     1EE2                     _I2C1_DO_RX_NACK_RESTART:	
 25938                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25939                           
 25940     1EE2                     l12642:	
 25941                           ;incstack = 0
 25942                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25943                           
 25944                           
 25945                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25946     1EE2  319E  26AA  319E   	fcall	_I2C1_MasterSendNack
 25947     1EE5                     l12644:
 25948                           
 25949                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25950     1EE5  3009               	movlw	9
 25951     1EE6                     l1881:
 25952     1EE6  0008               	return
 25953     1EE7                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25954                           
 25955                           	psect	text121
 25956     1EDD                     __ptext121:	
 25957 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25958 ;; Defined at:
 25959 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25960 ;; Parameters:    Size  Location     Type
 25961 ;;		None
 25962 ;; Auto vars:     Size  Location     Type
 25963 ;;		None
 25964 ;; Return value:  Size  Location     Type
 25965 ;;                  1    wreg      enum E12565
 25966 ;; Registers used:
 25967 ;;		wreg, status,2, status,0, pclath, cstack
 25968 ;; Tracked objects:
 25969 ;;		On entry : 0/0
 25970 ;;		On exit  : 0/0
 25971 ;;		Unchanged: 0/0
 25972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25977 ;;Total ram usage:        0 bytes
 25978 ;; Hardware stack levels used: 1
 25979 ;; Hardware stack levels required when called: 5
 25980 ;; This function calls:
 25981 ;;		_I2C1_MasterSendNack
 25982 ;; This function is called by:
 25983 ;;		_I2C1_DO_RX
 25984 ;;		_I2C1_MasterFsm
 25985 ;; This function uses a non-reentrant model
 25986 ;;
 25987                           
 25988     1EDD                     _I2C1_DO_RX_NACK_STOP:	
 25989                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25990                           
 25991     1EDD                     l12648:	
 25992                           ;incstack = 0
 25993                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25994                           
 25995                           
 25996                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25997     1EDD  319E  26AA  319E   	fcall	_I2C1_MasterSendNack
 25998     1EE0                     l12650:
 25999                           
 26000                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 26001     1EE0  300A               	movlw	10
 26002     1EE1                     l1878:
 26003     1EE1  0008               	return
 26004     1EE2                     __end_of_I2C1_DO_RX_NACK_STOP:
 26005                           
 26006                           	psect	text122
 26007     1ED8                     __ptext122:	
 26008 ;; *************** function _I2C1_DO_RX_ACK *****************
 26009 ;; Defined at:
 26010 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 26011 ;; Parameters:    Size  Location     Type
 26012 ;;		None
 26013 ;; Auto vars:     Size  Location     Type
 26014 ;;		None
 26015 ;; Return value:  Size  Location     Type
 26016 ;;                  1    wreg      enum E12565
 26017 ;; Registers used:
 26018 ;;		wreg, status,2, status,0, pclath, cstack
 26019 ;; Tracked objects:
 26020 ;;		On entry : 0/0
 26021 ;;		On exit  : 0/0
 26022 ;;		Unchanged: 0/0
 26023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26028 ;;Total ram usage:        0 bytes
 26029 ;; Hardware stack levels used: 1
 26030 ;; Hardware stack levels required when called: 5
 26031 ;; This function calls:
 26032 ;;		_I2C1_MasterSendAck
 26033 ;; This function is called by:
 26034 ;;		_I2C1_MasterFsm
 26035 ;; This function uses a non-reentrant model
 26036 ;;
 26037                           
 26038     1ED8                     _I2C1_DO_RX_ACK:	
 26039                           ;psect for function _I2C1_DO_RX_ACK
 26040                           
 26041     1ED8                     l12798:	
 26042                           ;incstack = 0
 26043                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 26044                           
 26045                           
 26046                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 26047     1ED8  319E  26AE  319E   	fcall	_I2C1_MasterSendAck
 26048     1EDB                     l12800:
 26049                           
 26050                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 26051     1EDB  3005               	movlw	5
 26052     1EDC                     l1875:
 26053     1EDC  0008               	return
 26054     1EDD                     __end_of_I2C1_DO_RX_ACK:
 26055                           
 26056                           	psect	text123
 26057     1ED3                     __ptext123:	
 26058 ;; *************** function _I2C1_DO_SEND_STOP *****************
 26059 ;; Defined at:
 26060 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 26061 ;; Parameters:    Size  Location     Type
 26062 ;;		None
 26063 ;; Auto vars:     Size  Location     Type
 26064 ;;		None
 26065 ;; Return value:  Size  Location     Type
 26066 ;;                  1    wreg      enum E12565
 26067 ;; Registers used:
 26068 ;;		wreg, status,2, status,0, pclath, cstack
 26069 ;; Tracked objects:
 26070 ;;		On entry : 0/0
 26071 ;;		On exit  : 0/0
 26072 ;;		Unchanged: 0/0
 26073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26078 ;;Total ram usage:        0 bytes
 26079 ;; Hardware stack levels used: 1
 26080 ;; Hardware stack levels required when called: 5
 26081 ;; This function calls:
 26082 ;;		_I2C1_MasterStop
 26083 ;; This function is called by:
 26084 ;;		_I2C1_DO_TX
 26085 ;;		_I2C1_DO_TX_EMPTY
 26086 ;;		_I2C1_DO_ADDRESS_NACK
 26087 ;;		_I2C1_MasterFsm
 26088 ;; This function uses a non-reentrant model
 26089 ;;
 26090                           
 26091     1ED3                     _I2C1_DO_SEND_STOP:	
 26092                           ;psect for function _I2C1_DO_SEND_STOP
 26093                           
 26094     1ED3                     l12630:	
 26095                           ;incstack = 0
 26096                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 26097                           
 26098                           
 26099                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 26100     1ED3  319E  268B  319E   	fcall	_I2C1_MasterStop
 26101     1ED6                     l12632:
 26102                           
 26103                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 26104     1ED6  3000               	movlw	0
 26105     1ED7                     l1872:
 26106     1ED7  0008               	return
 26107     1ED8                     __end_of_I2C1_DO_SEND_STOP:
 26108                           
 26109                           	psect	text124
 26110     1ECE                     __ptext124:	
 26111 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 26112 ;; Defined at:
 26113 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;		None
 26116 ;; Auto vars:     Size  Location     Type
 26117 ;;		None
 26118 ;; Return value:  Size  Location     Type
 26119 ;;                  1    wreg      enum E12565
 26120 ;; Registers used:
 26121 ;;		wreg, status,2, status,0, pclath, cstack
 26122 ;; Tracked objects:
 26123 ;;		On entry : 0/0
 26124 ;;		On exit  : 0/0
 26125 ;;		Unchanged: 0/0
 26126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26131 ;;Total ram usage:        0 bytes
 26132 ;; Hardware stack levels used: 1
 26133 ;; Hardware stack levels required when called: 5
 26134 ;; This function calls:
 26135 ;;		_I2C1_MasterEnableRestart
 26136 ;; This function is called by:
 26137 ;;		_I2C1_DO_TX_EMPTY
 26138 ;;		_I2C1_DO_ADDRESS_NACK
 26139 ;;		_I2C1_MasterFsm
 26140 ;; This function uses a non-reentrant model
 26141 ;;
 26142                           
 26143     1ECE                     _I2C1_DO_SEND_RESTART:	
 26144                           ;psect for function _I2C1_DO_SEND_RESTART
 26145                           
 26146     1ECE                     l12656:	
 26147                           ;incstack = 0
 26148                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 26149                           
 26150                           
 26151                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26152     1ECE  319E  2688  319E   	fcall	_I2C1_MasterEnableRestart
 26153     1ED1                     l12658:
 26154                           
 26155                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26156     1ED1  3001               	movlw	1
 26157     1ED2                     l1869:
 26158     1ED2  0008               	return
 26159     1ED3                     __end_of_I2C1_DO_SEND_RESTART:
 26160                           
 26161                           	psect	text125
 26162     1EC9                     __ptext125:	
 26163 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26164 ;; Defined at:
 26165 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26166 ;; Parameters:    Size  Location     Type
 26167 ;;		None
 26168 ;; Auto vars:     Size  Location     Type
 26169 ;;		None
 26170 ;; Return value:  Size  Location     Type
 26171 ;;                  1    wreg      enum E12565
 26172 ;; Registers used:
 26173 ;;		wreg, status,2, status,0, pclath, cstack
 26174 ;; Tracked objects:
 26175 ;;		On entry : 0/0
 26176 ;;		On exit  : 0/0
 26177 ;;		Unchanged: 0/0
 26178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26183 ;;Total ram usage:        0 bytes
 26184 ;; Hardware stack levels used: 1
 26185 ;; Hardware stack levels required when called: 5
 26186 ;; This function calls:
 26187 ;;		_I2C1_MasterEnableRestart
 26188 ;; This function is called by:
 26189 ;;		_I2C1_DO_TX
 26190 ;;		_I2C1_MasterFsm
 26191 ;; This function uses a non-reentrant model
 26192 ;;
 26193                           
 26194     1EC9                     _I2C1_DO_SEND_RESTART_WRITE:	
 26195                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26196                           
 26197     1EC9                     l12624:	
 26198                           ;incstack = 0
 26199                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26200                           
 26201                           
 26202                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26203     1EC9  319E  2688  319E   	fcall	_I2C1_MasterEnableRestart
 26204     1ECC                     l12626:
 26205                           
 26206                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26207     1ECC  3002               	movlw	2
 26208     1ECD                     l1866:
 26209     1ECD  0008               	return
 26210     1ECE                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26211                           
 26212                           	psect	text126
 26213     1EC4                     __ptext126:	
 26214 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26215 ;; Defined at:
 26216 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26217 ;; Parameters:    Size  Location     Type
 26218 ;;		None
 26219 ;; Auto vars:     Size  Location     Type
 26220 ;;		None
 26221 ;; Return value:  Size  Location     Type
 26222 ;;                  1    wreg      enum E12565
 26223 ;; Registers used:
 26224 ;;		wreg, status,2, status,0, pclath, cstack
 26225 ;; Tracked objects:
 26226 ;;		On entry : 0/0
 26227 ;;		On exit  : 0/0
 26228 ;;		Unchanged: 0/0
 26229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26234 ;;Total ram usage:        0 bytes
 26235 ;; Hardware stack levels used: 1
 26236 ;; Hardware stack levels required when called: 5
 26237 ;; This function calls:
 26238 ;;		_I2C1_MasterEnableRestart
 26239 ;; This function is called by:
 26240 ;;		_I2C1_DO_TX
 26241 ;;		_I2C1_MasterFsm
 26242 ;; This function uses a non-reentrant model
 26243 ;;
 26244                           
 26245     1EC4                     _I2C1_DO_SEND_RESTART_READ:	
 26246                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26247                           
 26248     1EC4                     l12618:	
 26249                           ;incstack = 0
 26250                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26251                           
 26252                           
 26253                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26254     1EC4  319E  2688  319E   	fcall	_I2C1_MasterEnableRestart
 26255     1EC7                     l12620:
 26256                           
 26257                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26258     1EC7  3001               	movlw	1
 26259     1EC8                     l1863:
 26260     1EC8  0008               	return
 26261     1EC9                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26262                           
 26263                           	psect	text127
 26264     1F6C                     __ptext127:	
 26265 ;; *************** function _I2C1_DO_RCEN *****************
 26266 ;; Defined at:
 26267 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26268 ;; Parameters:    Size  Location     Type
 26269 ;;		None
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;		None
 26272 ;; Return value:  Size  Location     Type
 26273 ;;                  1    wreg      enum E12565
 26274 ;; Registers used:
 26275 ;;		wreg, status,2, status,0, pclath, cstack
 26276 ;; Tracked objects:
 26277 ;;		On entry : 0/0
 26278 ;;		On exit  : 0/0
 26279 ;;		Unchanged: 0/0
 26280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26285 ;;Total ram usage:        0 bytes
 26286 ;; Hardware stack levels used: 1
 26287 ;; Hardware stack levels required when called: 5
 26288 ;; This function calls:
 26289 ;;		_I2C1_MasterStartRx
 26290 ;; This function is called by:
 26291 ;;		_I2C1_MasterFsm
 26292 ;; This function uses a non-reentrant model
 26293 ;;
 26294                           
 26295     1F6C                     _I2C1_DO_RCEN:	
 26296                           ;psect for function _I2C1_DO_RCEN
 26297                           
 26298     1F6C                     l12764:	
 26299                           ;incstack = 0
 26300                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26301                           
 26302                           
 26303                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26304     1F6C  0141               	movlb	1	; select bank1
 26305     1F6D  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26306     1F6E                     l12766:
 26307                           
 26308                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26309     1F6E  319E  268E  319F   	fcall	_I2C1_MasterStartRx
 26310     1F71                     l12768:
 26311                           
 26312                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26313     1F71  3004               	movlw	4
 26314     1F72                     l1839:
 26315     1F72  0008               	return
 26316     1F73                     __end_of_I2C1_DO_RCEN:
 26317                           
 26318                           	psect	text128
 26319     0A09                     __ptext128:	
 26320 ;; *************** function _I2C1_DO_RX *****************
 26321 ;; Defined at:
 26322 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26323 ;; Parameters:    Size  Location     Type
 26324 ;;		None
 26325 ;; Auto vars:     Size  Location     Type
 26326 ;;		None
 26327 ;; Return value:  Size  Location     Type
 26328 ;;                  1    wreg      enum E12565
 26329 ;; Registers used:
 26330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26331 ;; Tracked objects:
 26332 ;;		On entry : 0/0
 26333 ;;		On exit  : 0/0
 26334 ;;		Unchanged: 0/0
 26335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26340 ;;Total ram usage:        2 bytes
 26341 ;; Hardware stack levels used: 1
 26342 ;; Hardware stack levels required when called: 7
 26343 ;; This function calls:
 26344 ;;		NULL
 26345 ;;		_I2C1_CallbackReturnReset
 26346 ;;		_I2C1_CallbackReturnStop
 26347 ;;		_I2C1_DO_RX_NACK_RESTART
 26348 ;;		_I2C1_DO_RX_NACK_STOP
 26349 ;;		_I2C1_MasterGetRxData
 26350 ;;		_I2C1_MasterSendAck
 26351 ;;		_rd1RegCompleteHandler
 26352 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26353 ;;		_rd2RegCompleteHandler
 26354 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26355 ;;		_rdBlkRegCompleteHandler
 26356 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26357 ;;		_wr1RegCompleteHandler
 26358 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26359 ;;		_wr2RegCompleteHandler
 26360 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26361 ;; This function is called by:
 26362 ;;		_I2C1_MasterFsm
 26363 ;; This function uses a non-reentrant model
 26364 ;;
 26365                           
 26366     0A09                     _I2C1_DO_RX:	
 26367                           ;psect for function _I2C1_DO_RX
 26368                           
 26369     0A09                     l12732:	
 26370                           ;incstack = 0
 26371                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26372                           
 26373                           
 26374                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26375     0A09  0141               	movlb	1	; select bank1
 26376     0A0A  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26377     0A0B  0086               	movwf	6
 26378     0A0C  0187               	clrf	7
 26379     0A0D  319E  2691  318A   	fcall	_I2C1_MasterGetRxData
 26380     0A10  0081               	movwf	1
 26381     0A11                     l12734:
 26382     0A11  3001               	movlw	1
 26383     0A12  00F9               	movwf	??_I2C1_DO_RX
 26384     0A13  0879               	movf	??_I2C1_DO_RX,w
 26385     0A14  0141               	movlb	1	; select bank1
 26386     0A15  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26387     0A16                     l12736:
 26388                           
 26389                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26390     0A16  3001               	movlw	1
 26391     0A17  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26392     0A18  3000               	movlw	0
 26393     0A19  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26394     0A1A  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26395     0A1B  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26396     0A1C  1903               	btfsc	3,2
 26397     0A1D  2A1F               	goto	u9661
 26398     0A1E  2A20               	goto	u9660
 26399     0A1F                     u9661:
 26400     0A1F  2A25               	goto	l1827
 26401     0A20                     u9660:
 26402     0A20                     l12738:
 26403                           
 26404                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26405     0A20  319E  26AE  318A   	fcall	_I2C1_MasterSendAck
 26406     0A23                     l12740:
 26407                           
 26408                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26409     0A23  3005               	movlw	5
 26410     0A24  2A4B               	goto	l1828
 26411     0A25                     l1827:	
 26412                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26413                           
 26414                           
 26415                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26416     0A25  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26417                           
 26418                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26419     0A26  2A2F               	goto	l12756
 26420     0A27                     l12746:
 26421                           
 26422                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26423     0A27  319E  26E2  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 26424     0A2A  2A4B               	goto	l1828
 26425     0A2B                     l12750:
 26426                           
 26427                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26428     0A2B  319E  26DD  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 26429     0A2E  2A4B               	goto	l1828
 26430     0A2F                     l12756:
 26431     0A2F  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26432     0A30  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26433     0A31  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26434     0A32  008A               	movwf	10
 26435     0A33  0820               	movf	_I2C1_Status^(0+128),w
 26436     0A34  000A               	callw
 26437     0A35  318A               	pagesel	$
 26438     0A36  00F9               	movwf	??_I2C1_DO_RX
 26439     0A37  01FA               	clrf	??_I2C1_DO_RX+1
 26440                           
 26441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26442                           ; Switch size 1, requested type "simple"
 26443                           ; Number of cases is 1, Range of values is 0 to 0
 26444                           ; switch strategies available:
 26445                           ; Name         Instructions Cycles
 26446                           ; simple_byte            4     3 (average)
 26447                           ; direct_byte            8     6 (fixed)
 26448                           ; jumptable            260     6 (fixed)
 26449                           ;	Chosen strategy is simple_byte
 26450     0A38  087A               	movf	??_I2C1_DO_RX+1,w
 26451     0A39  3A00               	xorlw	0	; case 0
 26452     0A3A  1903               	skipnz
 26453     0A3B  2A3D               	goto	l16630
 26454     0A3C  2A2B               	goto	l12750
 26455     0A3D                     l16630:
 26456                           
 26457                           ; Switch size 1, requested type "simple"
 26458                           ; Number of cases is 4, Range of values is 1 to 4
 26459                           ; switch strategies available:
 26460                           ; Name         Instructions Cycles
 26461                           ; simple_byte           13     7 (average)
 26462                           ; direct_byte           17     9 (fixed)
 26463                           ; jumptable            263     9 (fixed)
 26464                           ;	Chosen strategy is simple_byte
 26465     0A3D  0879               	movf	??_I2C1_DO_RX,w
 26466     0A3E  3A01               	xorlw	1	; case 1
 26467     0A3F  1903               	skipnz
 26468     0A40  2A2B               	goto	l12750
 26469     0A41  3A03               	xorlw	3	; case 2
 26470     0A42  1903               	skipnz
 26471     0A43  2A27               	goto	l12746
 26472     0A44  3A01               	xorlw	1	; case 3
 26473     0A45  1903               	skipnz
 26474     0A46  2A27               	goto	l12746
 26475     0A47  3A07               	xorlw	7	; case 4
 26476     0A48  1903               	skipnz
 26477     0A49  2A2B               	goto	l12750
 26478     0A4A  2A2B               	goto	l12750
 26479     0A4B                     l1828:
 26480     0A4B  0008               	return
 26481     0A4C                     __end_of_I2C1_DO_RX:
 26482                           
 26483                           	psect	text129
 26484     0CED                     __ptext129:	
 26485 ;; *************** function _I2C1_DO_TX *****************
 26486 ;; Defined at:
 26487 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26488 ;; Parameters:    Size  Location     Type
 26489 ;;		None
 26490 ;; Auto vars:     Size  Location     Type
 26491 ;;		None
 26492 ;; Return value:  Size  Location     Type
 26493 ;;                  1    wreg      enum E12565
 26494 ;; Registers used:
 26495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26496 ;; Tracked objects:
 26497 ;;		On entry : 0/0
 26498 ;;		On exit  : 0/0
 26499 ;;		Unchanged: 0/0
 26500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26505 ;;Total ram usage:        2 bytes
 26506 ;; Hardware stack levels used: 1
 26507 ;; Hardware stack levels required when called: 7
 26508 ;; This function calls:
 26509 ;;		NULL
 26510 ;;		_I2C1_CallbackReturnReset
 26511 ;;		_I2C1_CallbackReturnStop
 26512 ;;		_I2C1_DO_SEND_RESTART_READ
 26513 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26514 ;;		_I2C1_DO_SEND_STOP
 26515 ;;		_I2C1_MasterIsNack
 26516 ;;		_I2C1_MasterSendTxData
 26517 ;;		_rd1RegCompleteHandler
 26518 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26519 ;;		_rd2RegCompleteHandler
 26520 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26521 ;;		_rdBlkRegCompleteHandler
 26522 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26523 ;;		_wr1RegCompleteHandler
 26524 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26525 ;;		_wr2RegCompleteHandler
 26526 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26527 ;; This function is called by:
 26528 ;;		_I2C1_MasterFsm
 26529 ;; This function uses a non-reentrant model
 26530 ;;
 26531                           
 26532     0CED                     _I2C1_DO_TX:	
 26533                           ;psect for function _I2C1_DO_TX
 26534                           
 26535     0CED                     l12698:	
 26536                           ;incstack = 0
 26537                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26538                           
 26539                           
 26540                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26541     0CED  319F  2700  318C   	fcall	_I2C1_MasterIsNack
 26542     0CF0  3A00               	xorlw	0
 26543     0CF1  1903               	skipnz
 26544     0CF2  2CF4               	goto	u9641
 26545     0CF3  2CF5               	goto	u9640
 26546     0CF4                     u9641:
 26547     0CF4  2D23               	goto	l1811
 26548     0CF5                     u9640:
 26549     0CF5  2D02               	goto	l12716
 26550     0CF6                     l12702:
 26551                           
 26552                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26553     0CF6  319E  26C4  318C   	fcall	_I2C1_DO_SEND_RESTART_READ
 26554     0CF9  2D3F               	goto	l1814
 26555     0CFA                     l12706:
 26556                           
 26557                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26558     0CFA  319E  26C9  318C   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26559     0CFD  2D3F               	goto	l1814
 26560     0CFE                     l12710:
 26561                           
 26562                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26563     0CFE  319E  26D3  318C   	fcall	_I2C1_DO_SEND_STOP
 26564     0D01  2D3F               	goto	l1814
 26565     0D02                     l12716:
 26566     0D02  0141               	movlb	1	; select bank1
 26567     0D03  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26568     0D04  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26569     0D05  3006               	movlw	6
 26570     0D06  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26571     0D07  0086               	movwf	6
 26572     0D08  0187               	clrf	7
 26573     0D09  3F41               	moviw [1]fsr1
 26574     0D0A  008A               	movwf	10
 26575     0D0B  3F40               	moviw [0]fsr1
 26576     0D0C  000A               	callw
 26577     0D0D  318C               	pagesel	$
 26578     0D0E  00F9               	movwf	??_I2C1_DO_TX
 26579     0D0F  01FA               	clrf	??_I2C1_DO_TX+1
 26580                           
 26581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26582                           ; Switch size 1, requested type "simple"
 26583                           ; Number of cases is 1, Range of values is 0 to 0
 26584                           ; switch strategies available:
 26585                           ; Name         Instructions Cycles
 26586                           ; simple_byte            4     3 (average)
 26587                           ; direct_byte            8     6 (fixed)
 26588                           ; jumptable            260     6 (fixed)
 26589                           ;	Chosen strategy is simple_byte
 26590     0D10  087A               	movf	??_I2C1_DO_TX+1,w
 26591     0D11  3A00               	xorlw	0	; case 0
 26592     0D12  1903               	skipnz
 26593     0D13  2D15               	goto	l16632
 26594     0D14  2CFE               	goto	l12710
 26595     0D15                     l16632:
 26596                           
 26597                           ; Switch size 1, requested type "simple"
 26598                           ; Number of cases is 4, Range of values is 1 to 4
 26599                           ; switch strategies available:
 26600                           ; Name         Instructions Cycles
 26601                           ; simple_byte           13     7 (average)
 26602                           ; direct_byte           17     9 (fixed)
 26603                           ; jumptable            263     9 (fixed)
 26604                           ;	Chosen strategy is simple_byte
 26605     0D15  0879               	movf	??_I2C1_DO_TX,w
 26606     0D16  3A01               	xorlw	1	; case 1
 26607     0D17  1903               	skipnz
 26608     0D18  2CFE               	goto	l12710
 26609     0D19  3A03               	xorlw	3	; case 2
 26610     0D1A  1903               	skipnz
 26611     0D1B  2CF6               	goto	l12702
 26612     0D1C  3A01               	xorlw	1	; case 3
 26613     0D1D  1903               	skipnz
 26614     0D1E  2CFA               	goto	l12706
 26615     0D1F  3A07               	xorlw	7	; case 4
 26616     0D20  1903               	skipnz
 26617     0D21  2CFE               	goto	l12710
 26618     0D22  2CFE               	goto	l12710
 26619     0D23                     l1811:	
 26620                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26621                           
 26622                           
 26623                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26624     0D23  0141               	movlb	1	; select bank1
 26625     0D24  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26626     0D25                     l12718:
 26627                           
 26628                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26629     0D25  3017               	movlw	23
 26630     0D26  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26631     0D27  0086               	movwf	6
 26632     0D28  0187               	clrf	7
 26633     0D29  3F40               	moviw [0]fsr1
 26634     0D2A  0084               	movwf	4
 26635     0D2B  0185               	clrf	5
 26636     0D2C  0A81               	incf	1,f
 26637     0D2D  0800               	movf	0,w
 26638     0D2E  319E  26BA  318C   	fcall	_I2C1_MasterSendTxData
 26639     0D31                     l12720:
 26640                           
 26641                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26642     0D31  3001               	movlw	1
 26643     0D32  0141               	movlb	1	; select bank1
 26644     0D33  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26645     0D34  3000               	movlw	0
 26646     0D35  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26647     0D36  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26648     0D37  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26649     0D38  1D03               	btfss	3,2
 26650     0D39  2D3B               	goto	u9651
 26651     0D3A  2D3C               	goto	u9650
 26652     0D3B                     u9651:
 26653     0D3B  2D3E               	goto	l12724
 26654     0D3C                     u9650:
 26655     0D3C                     l12722:
 26656     0D3C  3006               	movlw	6
 26657     0D3D  2D3F               	goto	l1814
 26658     0D3E                     l12724:
 26659     0D3E  3003               	movlw	3
 26660     0D3F                     l1814:
 26661     0D3F  0008               	return
 26662     0D40                     __end_of_I2C1_DO_TX:
 26663                           
 26664                           	psect	text130
 26665     1F73                     __ptext130:	
 26666 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26667 ;; Defined at:
 26668 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26669 ;; Parameters:    Size  Location     Type
 26670 ;;		None
 26671 ;; Auto vars:     Size  Location     Type
 26672 ;;		None
 26673 ;; Return value:  Size  Location     Type
 26674 ;;                  1    wreg      enum E12565
 26675 ;; Registers used:
 26676 ;;		wreg, status,2, status,0, pclath, cstack
 26677 ;; Tracked objects:
 26678 ;;		On entry : 0/0
 26679 ;;		On exit  : 0/0
 26680 ;;		Unchanged: 0/0
 26681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26686 ;;Total ram usage:        0 bytes
 26687 ;; Hardware stack levels used: 1
 26688 ;; Hardware stack levels required when called: 5
 26689 ;; This function calls:
 26690 ;;		_I2C1_MasterSendTxData
 26691 ;; This function is called by:
 26692 ;;		_I2C1_MasterFsm
 26693 ;; This function uses a non-reentrant model
 26694 ;;
 26695                           
 26696     1F73                     _I2C1_DO_SEND_ADR_WRITE:	
 26697                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26698                           
 26699     1F73                     l12690:	
 26700                           ;incstack = 0
 26701                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26702                           
 26703                           
 26704                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26705     1F73  0141               	movlb	1	; select bank1
 26706     1F74  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26707     1F75                     l12692:
 26708                           
 26709                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26710     1F75  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26711     1F76  319E  26BA  319F   	fcall	_I2C1_MasterSendTxData
 26712     1F79                     l12694:
 26713                           
 26714                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26715     1F79  3003               	movlw	3
 26716     1F7A                     l1808:
 26717     1F7A  0008               	return
 26718     1F7B                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26719                           
 26720                           	psect	text131
 26721     1F94                     __ptext131:	
 26722 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26723 ;; Defined at:
 26724 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;		None
 26727 ;; Auto vars:     Size  Location     Type
 26728 ;;		None
 26729 ;; Return value:  Size  Location     Type
 26730 ;;                  1    wreg      enum E12565
 26731 ;; Registers used:
 26732 ;;		wreg, status,2, status,0, pclath, cstack
 26733 ;; Tracked objects:
 26734 ;;		On entry : 0/0
 26735 ;;		On exit  : 0/0
 26736 ;;		Unchanged: 0/0
 26737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26742 ;;Total ram usage:        0 bytes
 26743 ;; Hardware stack levels used: 1
 26744 ;; Hardware stack levels required when called: 5
 26745 ;; This function calls:
 26746 ;;		_I2C1_MasterSendTxData
 26747 ;; This function is called by:
 26748 ;;		_I2C1_MasterFsm
 26749 ;; This function uses a non-reentrant model
 26750 ;;
 26751                           
 26752     1F94                     _I2C1_DO_SEND_ADR_READ:	
 26753                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26754                           
 26755     1F94                     l12682:	
 26756                           ;incstack = 0
 26757                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26758                           
 26759                           
 26760                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26761     1F94  0141               	movlb	1	; select bank1
 26762     1F95  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26763     1F96                     l12684:
 26764                           
 26765                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26766     1F96  1403               	setc
 26767     1F97  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26768     1F98  319E  26BA  319F   	fcall	_I2C1_MasterSendTxData
 26769     1F9B                     l12686:
 26770                           
 26771                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26772     1F9B  3005               	movlw	5
 26773     1F9C                     l1805:
 26774     1F9C  0008               	return
 26775     1F9D                     __end_of_I2C1_DO_SEND_ADR_READ:
 26776                           
 26777                           	psect	text132
 26778     1EBF                     __ptext132:	
 26779 ;; *************** function _I2C1_DO_IDLE *****************
 26780 ;; Defined at:
 26781 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26782 ;; Parameters:    Size  Location     Type
 26783 ;;		None
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;		None
 26786 ;; Return value:  Size  Location     Type
 26787 ;;                  1    wreg      enum E12565
 26788 ;; Registers used:
 26789 ;;		wreg, status,2
 26790 ;; Tracked objects:
 26791 ;;		On entry : 0/0
 26792 ;;		On exit  : 0/0
 26793 ;;		Unchanged: 0/0
 26794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26799 ;;Total ram usage:        0 bytes
 26800 ;; Hardware stack levels used: 1
 26801 ;; Hardware stack levels required when called: 4
 26802 ;; This function calls:
 26803 ;;		Nothing
 26804 ;; This function is called by:
 26805 ;;		_I2C1_MasterFsm
 26806 ;; This function uses a non-reentrant model
 26807 ;;
 26808                           
 26809     1EBF                     _I2C1_DO_IDLE:	
 26810                           ;psect for function _I2C1_DO_IDLE
 26811                           
 26812     1EBF                     l12674:	
 26813                           ;incstack = 0
 26814                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26815                           
 26816                           
 26817                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26818     1EBF  0141               	movlb	1	; select bank1
 26819     1EC0  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 26820     1EC1                     l12676:
 26821                           
 26822                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26823     1EC1  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 26824     1EC2                     l12678:
 26825                           
 26826                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26827     1EC2  300E               	movlw	14
 26828     1EC3                     l1802:
 26829     1EC3  0008               	return
 26830     1EC4                     __end_of_I2C1_DO_IDLE:
 26831                           
 26832                           	psect	text133
 26833     15EE                     __ptext133:	
 26834 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26835 ;; Defined at:
 26836 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;		None
 26839 ;; Auto vars:     Size  Location     Type
 26840 ;;		None
 26841 ;; Return value:  Size  Location     Type
 26842 ;;                  1    wreg      enum E12565
 26843 ;; Registers used:
 26844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26845 ;; Tracked objects:
 26846 ;;		On entry : 0/0
 26847 ;;		On exit  : 0/0
 26848 ;;		Unchanged: 0/0
 26849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26854 ;;Total ram usage:        2 bytes
 26855 ;; Hardware stack levels used: 1
 26856 ;; Hardware stack levels required when called: 7
 26857 ;; This function calls:
 26858 ;;		NULL
 26859 ;;		_I2C1_CallbackReturnReset
 26860 ;;		_I2C1_CallbackReturnStop
 26861 ;;		_I2C1_DO_SEND_RESTART
 26862 ;;		_I2C1_DO_SEND_STOP
 26863 ;;		_I2C1_MasterSetIrq
 26864 ;;		_rd1RegCompleteHandler
 26865 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26866 ;;		_rd2RegCompleteHandler
 26867 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26868 ;;		_rdBlkRegCompleteHandler
 26869 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26870 ;;		_wr1RegCompleteHandler
 26871 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26872 ;;		_wr2RegCompleteHandler
 26873 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26874 ;; This function is called by:
 26875 ;;		_I2C1_MasterFsm
 26876 ;; This function uses a non-reentrant model
 26877 ;;
 26878                           
 26879     15EE                     _I2C1_DO_TX_EMPTY:	
 26880                           ;psect for function _I2C1_DO_TX_EMPTY
 26881                           
 26882     15EE                     l12772:	
 26883                           ;incstack = 0
 26884                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26885                           
 26886                           
 26887                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26888     15EE  0141               	movlb	1	; select bank1
 26889     15EF  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26890                           
 26891                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26892     15F0  2DFE               	goto	l12790
 26893     15F1                     l12774:
 26894                           
 26895                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26896     15F1  319E  26CE  3195   	fcall	_I2C1_DO_SEND_RESTART
 26897     15F4  2E1A               	goto	l1845
 26898     15F5                     l12778:
 26899                           
 26900                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26901     15F5  319E  2694  3195   	fcall	_I2C1_MasterSetIrq
 26902     15F8                     l12780:
 26903                           
 26904                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26905     15F8  3003               	movlw	3
 26906     15F9  2E1A               	goto	l1845
 26907     15FA                     l12784:
 26908                           
 26909                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26910     15FA  319E  26D3  3195   	fcall	_I2C1_DO_SEND_STOP
 26911     15FD  2E1A               	goto	l1845
 26912     15FE                     l12790:
 26913     15FE  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26914     15FF  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26915     1600  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26916     1601  008A               	movwf	10
 26917     1602  0820               	movf	_I2C1_Status^(0+128),w
 26918     1603  000A               	callw
 26919     1604  3195               	pagesel	$
 26920     1605  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26921     1606  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26922                           
 26923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26924                           ; Switch size 1, requested type "simple"
 26925                           ; Number of cases is 1, Range of values is 0 to 0
 26926                           ; switch strategies available:
 26927                           ; Name         Instructions Cycles
 26928                           ; simple_byte            4     3 (average)
 26929                           ; direct_byte            8     6 (fixed)
 26930                           ; jumptable            260     6 (fixed)
 26931                           ;	Chosen strategy is simple_byte
 26932     1607  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26933     1608  3A00               	xorlw	0	; case 0
 26934     1609  1903               	skipnz
 26935     160A  2E0C               	goto	l16634
 26936     160B  2DFA               	goto	l12784
 26937     160C                     l16634:
 26938                           
 26939                           ; Switch size 1, requested type "simple"
 26940                           ; Number of cases is 4, Range of values is 1 to 4
 26941                           ; switch strategies available:
 26942                           ; Name         Instructions Cycles
 26943                           ; simple_byte           13     7 (average)
 26944                           ; direct_byte           17     9 (fixed)
 26945                           ; jumptable            263     9 (fixed)
 26946                           ;	Chosen strategy is simple_byte
 26947     160C  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26948     160D  3A01               	xorlw	1	; case 1
 26949     160E  1903               	skipnz
 26950     160F  2DFA               	goto	l12784
 26951     1610  3A03               	xorlw	3	; case 2
 26952     1611  1903               	skipnz
 26953     1612  2DF1               	goto	l12774
 26954     1613  3A01               	xorlw	1	; case 3
 26955     1614  1903               	skipnz
 26956     1615  2DF1               	goto	l12774
 26957     1616  3A07               	xorlw	7	; case 4
 26958     1617  1903               	skipnz
 26959     1618  2DF5               	goto	l12778
 26960     1619  2DFA               	goto	l12784
 26961     161A                     l1845:
 26962     161A  0008               	return
 26963     161B                     __end_of_I2C1_DO_TX_EMPTY:
 26964                           
 26965                           	psect	text134
 26966     1E94                     __ptext134:	
 26967 ;; *************** function _I2C1_MasterSetIrq *****************
 26968 ;; Defined at:
 26969 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26970 ;; Parameters:    Size  Location     Type
 26971 ;;		None
 26972 ;; Auto vars:     Size  Location     Type
 26973 ;;		None
 26974 ;; Return value:  Size  Location     Type
 26975 ;;                  1    wreg      void 
 26976 ;; Registers used:
 26977 ;;		None
 26978 ;; Tracked objects:
 26979 ;;		On entry : 0/0
 26980 ;;		On exit  : 0/0
 26981 ;;		Unchanged: 0/0
 26982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26987 ;;Total ram usage:        0 bytes
 26988 ;; Hardware stack levels used: 1
 26989 ;; Hardware stack levels required when called: 4
 26990 ;; This function calls:
 26991 ;;		Nothing
 26992 ;; This function is called by:
 26993 ;;		_I2C1_DO_TX_EMPTY
 26994 ;; This function uses a non-reentrant model
 26995 ;;
 26996                           
 26997     1E94                     _I2C1_MasterSetIrq:	
 26998                           ;psect for function _I2C1_MasterSetIrq
 26999                           
 27000     1E94                     l12662:	
 27001                           ;incstack = 0
 27002                           ; Regs used in _I2C1_MasterSetIrq: []
 27003                           
 27004                           
 27005                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 27006     1E94  014E               	movlb	14	; select bank14
 27007     1E95  140F               	bsf	15,0	;volatile
 27008     1E96                     l1965:
 27009     1E96  0008               	return
 27010     1E97                     __end_of_I2C1_MasterSetIrq:
 27011                           
 27012                           	psect	text135
 27013     1F00                     __ptext135:	
 27014 ;; *************** function _I2C1_MasterIsNack *****************
 27015 ;; Defined at:
 27016 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 27017 ;; Parameters:    Size  Location     Type
 27018 ;;		None
 27019 ;; Auto vars:     Size  Location     Type
 27020 ;;		None
 27021 ;; Return value:  Size  Location     Type
 27022 ;;                  1    wreg      _Bool 
 27023 ;; Registers used:
 27024 ;;		wreg, status,2, status,0
 27025 ;; Tracked objects:
 27026 ;;		On entry : 0/0
 27027 ;;		On exit  : 0/0
 27028 ;;		Unchanged: 0/0
 27029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27034 ;;Total ram usage:        0 bytes
 27035 ;; Hardware stack levels used: 1
 27036 ;; Hardware stack levels required when called: 4
 27037 ;; This function calls:
 27038 ;;		Nothing
 27039 ;; This function is called by:
 27040 ;;		_I2C1_MasterFsm
 27041 ;;		_I2C1_DO_TX
 27042 ;; This function uses a non-reentrant model
 27043 ;;
 27044                           
 27045     1F00                     _I2C1_MasterIsNack:	
 27046                           ;psect for function _I2C1_MasterIsNack
 27047                           
 27048     1F00                     l12612:	
 27049                           ;incstack = 0
 27050                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 27051                           
 27052                           
 27053                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 27054     1F00  0143               	movlb	3	; select bank3
 27055     1F01  0E11               	swapf	17,w	;volatile
 27056     1F02  0C89               	rrf	9,f
 27057     1F03  0C89               	rrf	9,f
 27058     1F04  3901               	andlw	1
 27059     1F05                     l1938:
 27060     1F05  0008               	return
 27061     1F06                     __end_of_I2C1_MasterIsNack:
 27062                           
 27063                           	psect	text136
 27064     1EBA                     __ptext136:	
 27065 ;; *************** function _I2C1_MasterSendTxData *****************
 27066 ;; Defined at:
 27067 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 27068 ;; Parameters:    Size  Location     Type
 27069 ;;  data            1    wreg     unsigned char 
 27070 ;; Auto vars:     Size  Location     Type
 27071 ;;  data            1    1[COMMON] unsigned char 
 27072 ;; Return value:  Size  Location     Type
 27073 ;;                  1    wreg      void 
 27074 ;; Registers used:
 27075 ;;		wreg
 27076 ;; Tracked objects:
 27077 ;;		On entry : 0/0
 27078 ;;		On exit  : 0/0
 27079 ;;		Unchanged: 0/0
 27080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27085 ;;Total ram usage:        1 bytes
 27086 ;; Hardware stack levels used: 1
 27087 ;; Hardware stack levels required when called: 4
 27088 ;; This function calls:
 27089 ;;		Nothing
 27090 ;; This function is called by:
 27091 ;;		_I2C1_DO_SEND_ADR_READ
 27092 ;;		_I2C1_DO_SEND_ADR_WRITE
 27093 ;;		_I2C1_DO_TX
 27094 ;; This function uses a non-reentrant model
 27095 ;;
 27096                           
 27097     1EBA                     _I2C1_MasterSendTxData:	
 27098                           ;psect for function _I2C1_MasterSendTxData
 27099                           
 27100                           
 27101                           ;incstack = 0
 27102                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 27103                           ;I2C1_MasterSendTxData@data stored from wreg
 27104     1EBA  00F1               	movwf	I2C1_MasterSendTxData@data
 27105     1EBB                     l12616:
 27106                           
 27107                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 27108     1EBB  0871               	movf	I2C1_MasterSendTxData@data,w
 27109     1EBC  0143               	movlb	3	; select bank3
 27110     1EBD  008C               	movwf	12	;volatile
 27111     1EBE                     l1920:
 27112     1EBE  0008               	return
 27113     1EBF                     __end_of_I2C1_MasterSendTxData:
 27114                           
 27115                           	psect	text137
 27116     1EAE                     __ptext137:	
 27117 ;; *************** function _I2C1_MasterSendAck *****************
 27118 ;; Defined at:
 27119 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 27120 ;; Parameters:    Size  Location     Type
 27121 ;;		None
 27122 ;; Auto vars:     Size  Location     Type
 27123 ;;		None
 27124 ;; Return value:  Size  Location     Type
 27125 ;;                  1    wreg      void 
 27126 ;; Registers used:
 27127 ;;		None
 27128 ;; Tracked objects:
 27129 ;;		On entry : 0/0
 27130 ;;		On exit  : 0/0
 27131 ;;		Unchanged: 0/0
 27132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27137 ;;Total ram usage:        0 bytes
 27138 ;; Hardware stack levels used: 1
 27139 ;; Hardware stack levels required when called: 4
 27140 ;; This function calls:
 27141 ;;		Nothing
 27142 ;; This function is called by:
 27143 ;;		_I2C1_DO_RX
 27144 ;;		_I2C1_DO_RX_ACK
 27145 ;; This function uses a non-reentrant model
 27146 ;;
 27147                           
 27148     1EAE                     _I2C1_MasterSendAck:	
 27149                           ;psect for function _I2C1_MasterSendAck
 27150                           
 27151     1EAE                     l12640:	
 27152                           ;incstack = 0
 27153                           ; Regs used in _I2C1_MasterSendAck: []
 27154                           
 27155                           
 27156                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27157     1EAE  0143               	movlb	3	; select bank3
 27158     1EAF  1291               	bcf	17,5	;volatile
 27159                           
 27160                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27161     1EB0  1611               	bsf	17,4	;volatile
 27162     1EB1                     l1941:
 27163     1EB1  0008               	return
 27164     1EB2                     __end_of_I2C1_MasterSendAck:
 27165                           
 27166                           	psect	text138
 27167     1E91                     __ptext138:	
 27168 ;; *************** function _I2C1_MasterGetRxData *****************
 27169 ;; Defined at:
 27170 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27171 ;; Parameters:    Size  Location     Type
 27172 ;;		None
 27173 ;; Auto vars:     Size  Location     Type
 27174 ;;		None
 27175 ;; Return value:  Size  Location     Type
 27176 ;;                  1    wreg      unsigned char 
 27177 ;; Registers used:
 27178 ;;		wreg
 27179 ;; Tracked objects:
 27180 ;;		On entry : 0/0
 27181 ;;		On exit  : 0/0
 27182 ;;		Unchanged: 0/0
 27183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27188 ;;Total ram usage:        0 bytes
 27189 ;; Hardware stack levels used: 1
 27190 ;; Hardware stack levels required when called: 4
 27191 ;; This function calls:
 27192 ;;		Nothing
 27193 ;; This function is called by:
 27194 ;;		_I2C1_DO_RX
 27195 ;; This function uses a non-reentrant model
 27196 ;;
 27197                           
 27198     1E91                     _I2C1_MasterGetRxData:	
 27199                           ;psect for function _I2C1_MasterGetRxData
 27200                           
 27201     1E91                     l12636:	
 27202                           ;incstack = 0
 27203                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27204                           
 27205                           
 27206                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27207     1E91  0143               	movlb	3	; select bank3
 27208     1E92  080C               	movf	12,w	;volatile
 27209     1E93                     l1917:
 27210     1E93  0008               	return
 27211     1E94                     __end_of_I2C1_MasterGetRxData:
 27212                           
 27213                           	psect	text139
 27214     1EAA                     __ptext139:	
 27215 ;; *************** function _I2C1_MasterSendNack *****************
 27216 ;; Defined at:
 27217 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27218 ;; Parameters:    Size  Location     Type
 27219 ;;		None
 27220 ;; Auto vars:     Size  Location     Type
 27221 ;;		None
 27222 ;; Return value:  Size  Location     Type
 27223 ;;                  1    wreg      void 
 27224 ;; Registers used:
 27225 ;;		None
 27226 ;; Tracked objects:
 27227 ;;		On entry : 0/0
 27228 ;;		On exit  : 0/0
 27229 ;;		Unchanged: 0/0
 27230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27235 ;;Total ram usage:        0 bytes
 27236 ;; Hardware stack levels used: 1
 27237 ;; Hardware stack levels required when called: 4
 27238 ;; This function calls:
 27239 ;;		Nothing
 27240 ;; This function is called by:
 27241 ;;		_I2C1_DO_RX_NACK_STOP
 27242 ;;		_I2C1_DO_RX_NACK_RESTART
 27243 ;; This function uses a non-reentrant model
 27244 ;;
 27245                           
 27246     1EAA                     _I2C1_MasterSendNack:	
 27247                           ;psect for function _I2C1_MasterSendNack
 27248                           
 27249     1EAA                     l12534:	
 27250                           ;incstack = 0
 27251                           ; Regs used in _I2C1_MasterSendNack: []
 27252                           
 27253                           
 27254                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27255     1EAA  0143               	movlb	3	; select bank3
 27256     1EAB  1691               	bsf	17,5	;volatile
 27257                           
 27258                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27259     1EAC  1611               	bsf	17,4	;volatile
 27260     1EAD                     l1944:
 27261     1EAD  0008               	return
 27262     1EAE                     __end_of_I2C1_MasterSendNack:
 27263                           
 27264                           	psect	text140
 27265     1E8E                     __ptext140:	
 27266 ;; *************** function _I2C1_MasterStartRx *****************
 27267 ;; Defined at:
 27268 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27269 ;; Parameters:    Size  Location     Type
 27270 ;;		None
 27271 ;; Auto vars:     Size  Location     Type
 27272 ;;		None
 27273 ;; Return value:  Size  Location     Type
 27274 ;;                  1    wreg      void 
 27275 ;; Registers used:
 27276 ;;		None
 27277 ;; Tracked objects:
 27278 ;;		On entry : 0/0
 27279 ;;		On exit  : 0/0
 27280 ;;		Unchanged: 0/0
 27281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27286 ;;Total ram usage:        0 bytes
 27287 ;; Hardware stack levels used: 1
 27288 ;; Hardware stack levels required when called: 4
 27289 ;; This function calls:
 27290 ;;		Nothing
 27291 ;; This function is called by:
 27292 ;;		_I2C1_DO_RCEN
 27293 ;; This function uses a non-reentrant model
 27294 ;;
 27295                           
 27296     1E8E                     _I2C1_MasterStartRx:	
 27297                           ;psect for function _I2C1_MasterStartRx
 27298                           
 27299     1E8E                     l12654:	
 27300                           ;incstack = 0
 27301                           ; Regs used in _I2C1_MasterStartRx: []
 27302                           
 27303                           
 27304                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27305     1E8E  0143               	movlb	3	; select bank3
 27306     1E8F  1591               	bsf	17,3	;volatile
 27307     1E90                     l1929:
 27308     1E90  0008               	return
 27309     1E91                     __end_of_I2C1_MasterStartRx:
 27310                           
 27311                           	psect	text141
 27312     1E7A                     __ptext141:	
 27313 ;; *************** function _I2C1_CallbackReturnReset *****************
 27314 ;; Defined at:
 27315 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27316 ;; Parameters:    Size  Location     Type
 27317 ;;  funPtr          1    8[COMMON] PTR void 
 27318 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27319 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27320 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27321 ;; Auto vars:     Size  Location     Type
 27322 ;;		None
 27323 ;; Return value:  Size  Location     Type
 27324 ;;                  1    wreg      enum E363
 27325 ;; Registers used:
 27326 ;;		wreg
 27327 ;; Tracked objects:
 27328 ;;		On entry : 0/0
 27329 ;;		On exit  : 0/0
 27330 ;;		Unchanged: 0/0
 27331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27332 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27336 ;;Total ram usage:        1 bytes
 27337 ;; Hardware stack levels used: 1
 27338 ;; Hardware stack levels required when called: 4
 27339 ;; This function calls:
 27340 ;;		Nothing
 27341 ;; This function is called by:
 27342 ;;		_I2C1_Open
 27343 ;;		_I2C1_DO_TX
 27344 ;;		_I2C1_DO_RX
 27345 ;;		_I2C1_DO_TX_EMPTY
 27346 ;;		_I2C1_DO_ADDRESS_NACK
 27347 ;;		_I2C1_DO_RX_EMPTY
 27348 ;; This function uses a non-reentrant model
 27349 ;;
 27350                           
 27351     1E7A                     _I2C1_CallbackReturnReset:	
 27352                           ;psect for function _I2C1_CallbackReturnReset
 27353                           
 27354     1E7A                     l12668:	
 27355                           ;incstack = 0
 27356                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27357                           
 27358                           
 27359                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27360     1E7A  3005               	movlw	5
 27361     1E7B                     l1901:
 27362     1E7B  0008               	return
 27363     1E7C                     __end_of_I2C1_CallbackReturnReset:
 27364                           
 27365                           	psect	text142
 27366     1E78                     __ptext142:	
 27367 ;; *************** function _I2C1_CallbackReturnStop *****************
 27368 ;; Defined at:
 27369 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27370 ;; Parameters:    Size  Location     Type
 27371 ;;  funPtr          1    8[COMMON] PTR void 
 27372 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27373 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27374 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27375 ;; Auto vars:     Size  Location     Type
 27376 ;;		None
 27377 ;; Return value:  Size  Location     Type
 27378 ;;                  1    wreg      enum E363
 27379 ;; Registers used:
 27380 ;;		wreg
 27381 ;; Tracked objects:
 27382 ;;		On entry : 0/0
 27383 ;;		On exit  : 0/0
 27384 ;;		Unchanged: 0/0
 27385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27390 ;;Total ram usage:        1 bytes
 27391 ;; Hardware stack levels used: 1
 27392 ;; Hardware stack levels required when called: 4
 27393 ;; This function calls:
 27394 ;;		Nothing
 27395 ;; This function is called by:
 27396 ;;		_I2C1_Open
 27397 ;;		_I2C1_SetCallback
 27398 ;;		_I2C1_DO_TX
 27399 ;;		_I2C1_DO_RX
 27400 ;;		_I2C1_DO_TX_EMPTY
 27401 ;;		_I2C1_DO_ADDRESS_NACK
 27402 ;;		_I2C1_DO_RX_EMPTY
 27403 ;; This function uses a non-reentrant model
 27404 ;;
 27405                           
 27406     1E78                     _I2C1_CallbackReturnStop:	
 27407                           ;psect for function _I2C1_CallbackReturnStop
 27408                           
 27409     1E78                     l12664:	
 27410                           ;incstack = 0
 27411                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27412                           
 27413                           
 27414                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27415     1E78  3001               	movlw	1
 27416     1E79                     l1898:
 27417     1E79  0008               	return
 27418     1E7A                     __end_of_I2C1_CallbackReturnStop:
 27419                           
 27420                           	psect	text143
 27421     1285                     __ptext143:	
 27422 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *****************
 27423 ;; Defined at:
 27424 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27425 ;; Parameters:    Size  Location     Type
 27426 ;;  ptr             1    8[COMMON] PTR void 
 27427 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27428 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27429 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27430 ;; Auto vars:     Size  Location     Type
 27431 ;;		None
 27432 ;; Return value:  Size  Location     Type
 27433 ;;                  1    wreg      enum E363
 27434 ;; Registers used:
 27435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27436 ;; Tracked objects:
 27437 ;;		On entry : 0/0
 27438 ;;		On exit  : 0/0
 27439 ;;		Unchanged: 0/0
 27440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27445 ;;Total ram usage:        1 bytes
 27446 ;; Hardware stack levels used: 1
 27447 ;; Hardware stack levels required when called: 6
 27448 ;; This function calls:
 27449 ;;		_I2C1_SetBuffer
 27450 ;;		_I2C1_SetDataCompleteCallback
 27451 ;; This function is called by:
 27452 ;;		_I2C1_ReadDataBlock
 27453 ;;		_I2C1_DO_TX
 27454 ;;		_I2C1_DO_RX
 27455 ;;		_I2C1_DO_TX_EMPTY
 27456 ;;		_I2C1_DO_ADDRESS_NACK
 27457 ;;		_I2C1_DO_RX_EMPTY
 27458 ;; This function uses a non-reentrant model
 27459 ;;
 27460                           
 27461     1285                     _rdBlkRegCompleteHandler@i2c1_master_example$F1273:	
 27462                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1273
 27463                           
 27464     1285                     l12606:	
 27465                           ;incstack = 0
 27466                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1273: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27467                           
 27468                           
 27469                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27470     1285  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27471     1286  0086               	movwf	6
 27472     1287  0187               	clrf	7
 27473     1288  3F40               	moviw [0]fsr1
 27474     1289  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27475     128A  3F41               	moviw [1]fsr1
 27476     128B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27477     128C  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27478     128D  3E02               	addlw	2
 27479     128E  0086               	movwf	6
 27480     128F  0187               	clrf	7
 27481     1290  0801               	movf	1,w
 27482     1291  3190  206C  3192   	fcall	_I2C1_SetBuffer
 27483                           
 27484                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27485     1294  3000               	movlw	0
 27486     1295  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27487     1296  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27488     1297  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27489     1298  319F  27EA  3192   	fcall	_I2C1_SetDataCompleteCallback
 27490     129B                     l12608:
 27491                           
 27492                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27493     129B  3002               	movlw	2
 27494     129C                     l742:
 27495     129C  0008               	return
 27496     129D                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273:
 27497                           
 27498                           	psect	text144
 27499     113B                     __ptext144:	
 27500 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1256 *****************
 27501 ;; Defined at:
 27502 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27503 ;; Parameters:    Size  Location     Type
 27504 ;;  ptr             1    8[COMMON] PTR void 
 27505 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27506 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27507 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27508 ;; Auto vars:     Size  Location     Type
 27509 ;;		None
 27510 ;; Return value:  Size  Location     Type
 27511 ;;                  1    wreg      enum E363
 27512 ;; Registers used:
 27513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27514 ;; Tracked objects:
 27515 ;;		On entry : 0/0
 27516 ;;		On exit  : 0/0
 27517 ;;		Unchanged: 0/0
 27518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27519 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27523 ;;Total ram usage:        1 bytes
 27524 ;; Hardware stack levels used: 1
 27525 ;; Hardware stack levels required when called: 6
 27526 ;; This function calls:
 27527 ;;		_I2C1_SetBuffer
 27528 ;;		_I2C1_SetDataCompleteCallback
 27529 ;; This function is called by:
 27530 ;;		_I2C1_Write1ByteRegister
 27531 ;;		_I2C1_DO_TX
 27532 ;;		_I2C1_DO_RX
 27533 ;;		_I2C1_DO_TX_EMPTY
 27534 ;;		_I2C1_DO_ADDRESS_NACK
 27535 ;;		_I2C1_DO_RX_EMPTY
 27536 ;; This function uses a non-reentrant model
 27537 ;;
 27538                           
 27539     113B                     _wr1RegCompleteHandler@i2c1_master_example$F1256:	
 27540                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1256
 27541                           
 27542     113B                     l12590:	
 27543                           ;incstack = 0
 27544                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1256: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27545                           
 27546                           
 27547                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27548     113B  3001               	movlw	1
 27549     113C  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27550     113D  3000               	movlw	0
 27551     113E  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27552     113F  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1256@ptr,w
 27553     1140  3190  206C  3191   	fcall	_I2C1_SetBuffer
 27554     1143                     l12592:
 27555                           
 27556                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27557     1143  3000               	movlw	0
 27558     1144  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27559     1145  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27560     1146  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27561     1147  319F  27EA  3191   	fcall	_I2C1_SetDataCompleteCallback
 27562     114A                     l12594:
 27563                           
 27564                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27565     114A  3004               	movlw	4
 27566     114B                     l736:
 27567     114B  0008               	return
 27568     114C                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256:
 27569                           
 27570                           	psect	text145
 27571     112A                     __ptext145:	
 27572 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1250 *****************
 27573 ;; Defined at:
 27574 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27575 ;; Parameters:    Size  Location     Type
 27576 ;;  ptr             1    8[COMMON] PTR void 
 27577 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27578 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27579 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;		None
 27582 ;; Return value:  Size  Location     Type
 27583 ;;                  1    wreg      enum E363
 27584 ;; Registers used:
 27585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27586 ;; Tracked objects:
 27587 ;;		On entry : 0/0
 27588 ;;		On exit  : 0/0
 27589 ;;		Unchanged: 0/0
 27590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27595 ;;Total ram usage:        1 bytes
 27596 ;; Hardware stack levels used: 1
 27597 ;; Hardware stack levels required when called: 6
 27598 ;; This function calls:
 27599 ;;		_I2C1_SetBuffer
 27600 ;;		_I2C1_SetDataCompleteCallback
 27601 ;; This function is called by:
 27602 ;;		_I2C1_Read2ByteRegister
 27603 ;;		_I2C1_DO_TX
 27604 ;;		_I2C1_DO_RX
 27605 ;;		_I2C1_DO_TX_EMPTY
 27606 ;;		_I2C1_DO_ADDRESS_NACK
 27607 ;;		_I2C1_DO_RX_EMPTY
 27608 ;; This function uses a non-reentrant model
 27609 ;;
 27610                           
 27611     112A                     _rd2RegCompleteHandler@i2c1_master_example$F1250:	
 27612                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1250
 27613                           
 27614     112A                     l12582:	
 27615                           ;incstack = 0
 27616                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1250: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27617                           
 27618                           
 27619                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27620     112A  3002               	movlw	2
 27621     112B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27622     112C  3000               	movlw	0
 27623     112D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27624     112E  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1250@ptr,w
 27625     112F  3190  206C  3191   	fcall	_I2C1_SetBuffer
 27626     1132                     l12584:
 27627                           
 27628                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27629     1132  3000               	movlw	0
 27630     1133  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27631     1134  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27632     1135  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27633     1136  319F  27EA  3191   	fcall	_I2C1_SetDataCompleteCallback
 27634     1139                     l12586:
 27635                           
 27636                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27637     1139  3002               	movlw	2
 27638     113A                     l733:
 27639     113A  0008               	return
 27640     113B                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250:
 27641                           
 27642                           	psect	text146
 27643     1119                     __ptext146:	
 27644 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1239 *****************
 27645 ;; Defined at:
 27646 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27647 ;; Parameters:    Size  Location     Type
 27648 ;;  ptr             1    8[COMMON] PTR void 
 27649 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27650 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27651 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27652 ;; Auto vars:     Size  Location     Type
 27653 ;;		None
 27654 ;; Return value:  Size  Location     Type
 27655 ;;                  1    wreg      enum E363
 27656 ;; Registers used:
 27657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27658 ;; Tracked objects:
 27659 ;;		On entry : 0/0
 27660 ;;		On exit  : 0/0
 27661 ;;		Unchanged: 0/0
 27662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27667 ;;Total ram usage:        1 bytes
 27668 ;; Hardware stack levels used: 1
 27669 ;; Hardware stack levels required when called: 6
 27670 ;; This function calls:
 27671 ;;		_I2C1_SetBuffer
 27672 ;;		_I2C1_SetDataCompleteCallback
 27673 ;; This function is called by:
 27674 ;;		_I2C1_Read1ByteRegister
 27675 ;;		_I2C1_DO_TX
 27676 ;;		_I2C1_DO_RX
 27677 ;;		_I2C1_DO_TX_EMPTY
 27678 ;;		_I2C1_DO_ADDRESS_NACK
 27679 ;;		_I2C1_DO_RX_EMPTY
 27680 ;; This function uses a non-reentrant model
 27681 ;;
 27682                           
 27683     1119                     _rd1RegCompleteHandler@i2c1_master_example$F1239:	
 27684                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1239
 27685                           
 27686     1119                     l12574:	
 27687                           ;incstack = 0
 27688                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1239: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27689                           
 27690                           
 27691                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27692     1119  3001               	movlw	1
 27693     111A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27694     111B  3000               	movlw	0
 27695     111C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27696     111D  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1239@ptr,w
 27697     111E  3190  206C  3191   	fcall	_I2C1_SetBuffer
 27698     1121                     l12576:
 27699                           
 27700                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27701     1121  3000               	movlw	0
 27702     1122  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27703     1123  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27704     1124  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27705     1125  319F  27EA  3191   	fcall	_I2C1_SetDataCompleteCallback
 27706     1128                     l12578:
 27707                           
 27708                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27709     1128  3002               	movlw	2
 27710     1129                     l730:
 27711     1129  0008               	return
 27712     112A                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239:
 27713                           
 27714                           	psect	text147
 27715     126D                     __ptext147:	
 27716 ;; *************** function _rdBlkRegCompleteHandler *****************
 27717 ;; Defined at:
 27718 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27719 ;; Parameters:    Size  Location     Type
 27720 ;;  p               1    8[COMMON] PTR void 
 27721 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27722 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27723 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27724 ;; Auto vars:     Size  Location     Type
 27725 ;;		None
 27726 ;; Return value:  Size  Location     Type
 27727 ;;                  1    wreg      enum E363
 27728 ;; Registers used:
 27729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27730 ;; Tracked objects:
 27731 ;;		On entry : 0/0
 27732 ;;		On exit  : 0/0
 27733 ;;		Unchanged: 0/0
 27734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27739 ;;Total ram usage:        1 bytes
 27740 ;; Hardware stack levels used: 1
 27741 ;; Hardware stack levels required when called: 6
 27742 ;; This function calls:
 27743 ;;		_I2C1_SetBuffer
 27744 ;;		_I2C1_SetDataCompleteCallback
 27745 ;; This function is called by:
 27746 ;;		_i2c_readDataBlock
 27747 ;;		_I2C1_DO_TX
 27748 ;;		_I2C1_DO_RX
 27749 ;;		_I2C1_DO_TX_EMPTY
 27750 ;;		_I2C1_DO_ADDRESS_NACK
 27751 ;;		_I2C1_DO_RX_EMPTY
 27752 ;; This function uses a non-reentrant model
 27753 ;;
 27754                           
 27755     126D                     _rdBlkRegCompleteHandler:	
 27756                           ;psect for function _rdBlkRegCompleteHandler
 27757                           
 27758     126D                     l12568:	
 27759                           ;incstack = 0
 27760                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27761                           
 27762                           
 27763                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27764     126D  0878               	movf	rdBlkRegCompleteHandler@p,w
 27765     126E  0086               	movwf	6
 27766     126F  0187               	clrf	7
 27767     1270  3F40               	moviw [0]fsr1
 27768     1271  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27769     1272  3F41               	moviw [1]fsr1
 27770     1273  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27771     1274  0878               	movf	rdBlkRegCompleteHandler@p,w
 27772     1275  3E02               	addlw	2
 27773     1276  0086               	movwf	6
 27774     1277  0187               	clrf	7
 27775     1278  0801               	movf	1,w
 27776     1279  3190  206C  3192   	fcall	_I2C1_SetBuffer
 27777                           
 27778                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27779     127C  3000               	movlw	0
 27780     127D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27781     127E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27782     127F  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27783     1280  319F  27EA  3192   	fcall	_I2C1_SetDataCompleteCallback
 27784     1283                     l12570:
 27785                           
 27786                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27787     1283  3002               	movlw	2
 27788     1284                     l561:
 27789     1284  0008               	return
 27790     1285                     __end_of_rdBlkRegCompleteHandler:
 27791                           
 27792                           	psect	text148
 27793     1108                     __ptext148:	
 27794 ;; *************** function _wr2RegCompleteHandler *****************
 27795 ;; Defined at:
 27796 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27797 ;; Parameters:    Size  Location     Type
 27798 ;;  p               1    8[COMMON] PTR void 
 27799 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27800 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27801 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27802 ;; Auto vars:     Size  Location     Type
 27803 ;;		None
 27804 ;; Return value:  Size  Location     Type
 27805 ;;                  1    wreg      enum E363
 27806 ;; Registers used:
 27807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27808 ;; Tracked objects:
 27809 ;;		On entry : 0/0
 27810 ;;		On exit  : 0/0
 27811 ;;		Unchanged: 0/0
 27812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27813 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27817 ;;Total ram usage:        1 bytes
 27818 ;; Hardware stack levels used: 1
 27819 ;; Hardware stack levels required when called: 6
 27820 ;; This function calls:
 27821 ;;		_I2C1_SetBuffer
 27822 ;;		_I2C1_SetDataCompleteCallback
 27823 ;; This function is called by:
 27824 ;;		_i2c_write2ByteRegister
 27825 ;;		_I2C1_DO_TX
 27826 ;;		_I2C1_DO_RX
 27827 ;;		_I2C1_DO_TX_EMPTY
 27828 ;;		_I2C1_DO_ADDRESS_NACK
 27829 ;;		_I2C1_DO_RX_EMPTY
 27830 ;; This function uses a non-reentrant model
 27831 ;;
 27832                           
 27833     1108                     _wr2RegCompleteHandler:	
 27834                           ;psect for function _wr2RegCompleteHandler
 27835                           
 27836     1108                     l12560:	
 27837                           ;incstack = 0
 27838                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27839                           
 27840                           
 27841                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27842     1108  3002               	movlw	2
 27843     1109  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27844     110A  3000               	movlw	0
 27845     110B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27846     110C  0878               	movf	wr2RegCompleteHandler@p,w
 27847     110D  3190  206C  3191   	fcall	_I2C1_SetBuffer
 27848     1110                     l12562:
 27849                           
 27850                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27851     1110  3000               	movlw	0
 27852     1111  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27853     1112  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27854     1113  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27855     1114  319F  27EA  3191   	fcall	_I2C1_SetDataCompleteCallback
 27856     1117                     l12564:
 27857                           
 27858                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27859     1117  3004               	movlw	4
 27860     1118                     l549:
 27861     1118  0008               	return
 27862     1119                     __end_of_wr2RegCompleteHandler:
 27863                           
 27864                           	psect	text149
 27865     10F7                     __ptext149:	
 27866 ;; *************** function _rd2RegCompleteHandler *****************
 27867 ;; Defined at:
 27868 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27869 ;; Parameters:    Size  Location     Type
 27870 ;;  p               1    8[COMMON] PTR void 
 27871 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27872 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27873 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27874 ;; Auto vars:     Size  Location     Type
 27875 ;;		None
 27876 ;; Return value:  Size  Location     Type
 27877 ;;                  1    wreg      enum E363
 27878 ;; Registers used:
 27879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27880 ;; Tracked objects:
 27881 ;;		On entry : 0/0
 27882 ;;		On exit  : 0/0
 27883 ;;		Unchanged: 0/0
 27884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27889 ;;Total ram usage:        1 bytes
 27890 ;; Hardware stack levels used: 1
 27891 ;; Hardware stack levels required when called: 6
 27892 ;; This function calls:
 27893 ;;		_I2C1_SetBuffer
 27894 ;;		_I2C1_SetDataCompleteCallback
 27895 ;; This function is called by:
 27896 ;;		_i2c_read2ByteRegister
 27897 ;;		_I2C1_DO_TX
 27898 ;;		_I2C1_DO_RX
 27899 ;;		_I2C1_DO_TX_EMPTY
 27900 ;;		_I2C1_DO_ADDRESS_NACK
 27901 ;;		_I2C1_DO_RX_EMPTY
 27902 ;; This function uses a non-reentrant model
 27903 ;;
 27904                           
 27905     10F7                     _rd2RegCompleteHandler:	
 27906                           ;psect for function _rd2RegCompleteHandler
 27907                           
 27908     10F7                     l12552:	
 27909                           ;incstack = 0
 27910                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27911                           
 27912                           
 27913                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27914     10F7  3002               	movlw	2
 27915     10F8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27916     10F9  3000               	movlw	0
 27917     10FA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27918     10FB  0878               	movf	rd2RegCompleteHandler@p,w
 27919     10FC  3190  206C  3190   	fcall	_I2C1_SetBuffer
 27920     10FF                     l12554:
 27921                           
 27922                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27923     10FF  3000               	movlw	0
 27924     1100  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27925     1101  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27926     1102  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27927     1103  319F  27EA  3190   	fcall	_I2C1_SetDataCompleteCallback
 27928     1106                     l12556:
 27929                           
 27930                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27931     1106  3002               	movlw	2
 27932     1107                     l537:
 27933     1107  0008               	return
 27934     1108                     __end_of_rd2RegCompleteHandler:
 27935                           
 27936                           	psect	text150
 27937     10E6                     __ptext150:	
 27938 ;; *************** function _rd1RegCompleteHandler *****************
 27939 ;; Defined at:
 27940 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27941 ;; Parameters:    Size  Location     Type
 27942 ;;  p               1    8[COMMON] PTR void 
 27943 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27944 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27945 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27946 ;; Auto vars:     Size  Location     Type
 27947 ;;		None
 27948 ;; Return value:  Size  Location     Type
 27949 ;;                  1    wreg      enum E363
 27950 ;; Registers used:
 27951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27952 ;; Tracked objects:
 27953 ;;		On entry : 0/0
 27954 ;;		On exit  : 0/0
 27955 ;;		Unchanged: 0/0
 27956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27961 ;;Total ram usage:        1 bytes
 27962 ;; Hardware stack levels used: 1
 27963 ;; Hardware stack levels required when called: 6
 27964 ;; This function calls:
 27965 ;;		_I2C1_SetBuffer
 27966 ;;		_I2C1_SetDataCompleteCallback
 27967 ;; This function is called by:
 27968 ;;		_i2c_read1ByteRegister
 27969 ;;		_I2C1_DO_TX
 27970 ;;		_I2C1_DO_RX
 27971 ;;		_I2C1_DO_TX_EMPTY
 27972 ;;		_I2C1_DO_ADDRESS_NACK
 27973 ;;		_I2C1_DO_RX_EMPTY
 27974 ;; This function uses a non-reentrant model
 27975 ;;
 27976                           
 27977     10E6                     _rd1RegCompleteHandler:	
 27978                           ;psect for function _rd1RegCompleteHandler
 27979                           
 27980     10E6                     l12544:	
 27981                           ;incstack = 0
 27982                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27983                           
 27984                           
 27985                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27986     10E6  3001               	movlw	1
 27987     10E7  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27988     10E8  3000               	movlw	0
 27989     10E9  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27990     10EA  0878               	movf	rd1RegCompleteHandler@p,w
 27991     10EB  3190  206C  3190   	fcall	_I2C1_SetBuffer
 27992     10EE                     l12546:
 27993                           
 27994                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27995     10EE  3000               	movlw	0
 27996     10EF  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27997     10F0  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27998     10F1  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27999     10F2  319F  27EA  3190   	fcall	_I2C1_SetDataCompleteCallback
 28000     10F5                     l12548:
 28001                           
 28002                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 28003     10F5  3002               	movlw	2
 28004     10F6                     l522:
 28005     10F6  0008               	return
 28006     10F7                     __end_of_rd1RegCompleteHandler:
 28007                           
 28008                           	psect	text151
 28009     10D5                     __ptext151:	
 28010 ;; *************** function _wr1RegCompleteHandler *****************
 28011 ;; Defined at:
 28012 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28013 ;; Parameters:    Size  Location     Type
 28014 ;;  p               1    8[COMMON] PTR void 
 28015 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28016 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28017 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28018 ;; Auto vars:     Size  Location     Type
 28019 ;;		None
 28020 ;; Return value:  Size  Location     Type
 28021 ;;                  1    wreg      enum E363
 28022 ;; Registers used:
 28023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28024 ;; Tracked objects:
 28025 ;;		On entry : 0/0
 28026 ;;		On exit  : 0/0
 28027 ;;		Unchanged: 0/0
 28028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28029 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28033 ;;Total ram usage:        1 bytes
 28034 ;; Hardware stack levels used: 1
 28035 ;; Hardware stack levels required when called: 6
 28036 ;; This function calls:
 28037 ;;		_I2C1_SetBuffer
 28038 ;;		_I2C1_SetDataCompleteCallback
 28039 ;; This function is called by:
 28040 ;;		_i2c_write1ByteRegister
 28041 ;;		_I2C1_DO_TX
 28042 ;;		_I2C1_DO_RX
 28043 ;;		_I2C1_DO_TX_EMPTY
 28044 ;;		_I2C1_DO_ADDRESS_NACK
 28045 ;;		_I2C1_DO_RX_EMPTY
 28046 ;; This function uses a non-reentrant model
 28047 ;;
 28048                           
 28049     10D5                     _wr1RegCompleteHandler:	
 28050                           ;psect for function _wr1RegCompleteHandler
 28051                           
 28052     10D5                     l12536:	
 28053                           ;incstack = 0
 28054                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 28055                           
 28056                           
 28057                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 28058     10D5  3001               	movlw	1
 28059     10D6  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28060     10D7  3000               	movlw	0
 28061     10D8  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28062     10D9  0878               	movf	wr1RegCompleteHandler@p,w
 28063     10DA  3190  206C  3190   	fcall	_I2C1_SetBuffer
 28064     10DD                     l12538:
 28065                           
 28066                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28067     10DD  3000               	movlw	0
 28068     10DE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28069     10DF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28070     10E0  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28071     10E1  319F  27EA  3190   	fcall	_I2C1_SetDataCompleteCallback
 28072     10E4                     l12540:
 28073                           
 28074                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 28075     10E4  3004               	movlw	4
 28076     10E5                     l501:
 28077     10E5  0008               	return
 28078     10E6                     __end_of_wr1RegCompleteHandler:
 28079                           
 28080                           	psect	text152
 28081     10C4                     __ptext152:	
 28082 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1262 *****************
 28083 ;; Defined at:
 28084 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 28085 ;; Parameters:    Size  Location     Type
 28086 ;;  ptr             1    8[COMMON] PTR void 
 28087 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28088 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28089 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28090 ;; Auto vars:     Size  Location     Type
 28091 ;;		None
 28092 ;; Return value:  Size  Location     Type
 28093 ;;                  1    wreg      enum E363
 28094 ;; Registers used:
 28095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28096 ;; Tracked objects:
 28097 ;;		On entry : 0/0
 28098 ;;		On exit  : 0/0
 28099 ;;		Unchanged: 0/0
 28100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28101 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28105 ;;Total ram usage:        1 bytes
 28106 ;; Hardware stack levels used: 1
 28107 ;; Hardware stack levels required when called: 6
 28108 ;; This function calls:
 28109 ;;		_I2C1_SetBuffer
 28110 ;;		_I2C1_SetDataCompleteCallback
 28111 ;; This function is called by:
 28112 ;;		_I2C1_Write2ByteRegister
 28113 ;;		_I2C1_DO_TX
 28114 ;;		_I2C1_DO_RX
 28115 ;;		_I2C1_DO_TX_EMPTY
 28116 ;;		_I2C1_DO_ADDRESS_NACK
 28117 ;;		_I2C1_DO_RX_EMPTY
 28118 ;; This function uses a non-reentrant model
 28119 ;;
 28120                           
 28121     10C4                     _wr2RegCompleteHandler@i2c1_master_example$F1262:	
 28122                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1262
 28123                           
 28124     10C4                     l12598:	
 28125                           ;incstack = 0
 28126                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1262: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28127                           
 28128                           
 28129                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 28130     10C4  3002               	movlw	2
 28131     10C5  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28132     10C6  3000               	movlw	0
 28133     10C7  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28134     10C8  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1262@ptr,w
 28135     10C9  3190  206C  3190   	fcall	_I2C1_SetBuffer
 28136     10CC                     l12600:
 28137                           
 28138                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 28139     10CC  3000               	movlw	0
 28140     10CD  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28141     10CE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28142     10CF  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28143     10D0  319F  27EA  3190   	fcall	_I2C1_SetDataCompleteCallback
 28144     10D3                     l12602:
 28145                           
 28146                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 28147     10D3  3004               	movlw	4
 28148     10D4                     l739:
 28149     10D4  0008               	return
 28150     10D5                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262:
 28151                           
 28152                           	psect	text153
 28153     1FEA                     __ptext153:	
 28154 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28155 ;; Defined at:
 28156 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28157 ;; Parameters:    Size  Location     Type
 28158 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28159 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28160 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28161 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28162 ;;  ptr             1    7[COMMON] PTR void 
 28163 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28164 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28165 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28166 ;; Auto vars:     Size  Location     Type
 28167 ;;		None
 28168 ;; Return value:  Size  Location     Type
 28169 ;;                  1    wreg      void 
 28170 ;; Registers used:
 28171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28172 ;; Tracked objects:
 28173 ;;		On entry : 0/0
 28174 ;;		On exit  : 0/0
 28175 ;;		Unchanged: 0/0
 28176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28177 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28181 ;;Total ram usage:        3 bytes
 28182 ;; Hardware stack levels used: 1
 28183 ;; Hardware stack levels required when called: 5
 28184 ;; This function calls:
 28185 ;;		_I2C1_SetCallback
 28186 ;; This function is called by:
 28187 ;;		_wr1RegCompleteHandler
 28188 ;;		_i2c_write1ByteRegister
 28189 ;;		_rd1RegCompleteHandler
 28190 ;;		_i2c_read1ByteRegister
 28191 ;;		_rd2RegCompleteHandler
 28192 ;;		_i2c_read2ByteRegister
 28193 ;;		_wr2RegCompleteHandler
 28194 ;;		_rdBlkRegCompleteHandler
 28195 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28196 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28197 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28198 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28199 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28200 ;;		_i2c_write2ByteRegister
 28201 ;;		_i2c_readDataBlock
 28202 ;;		_I2C1_Read1ByteRegister
 28203 ;;		_I2C1_Read2ByteRegister
 28204 ;;		_I2C1_Write1ByteRegister
 28205 ;;		_I2C1_Write2ByteRegister
 28206 ;;		_I2C1_ReadDataBlock
 28207 ;; This function uses a non-reentrant model
 28208 ;;
 28209                           
 28210     1FEA                     _I2C1_SetDataCompleteCallback:	
 28211                           ;psect for function _I2C1_SetDataCompleteCallback
 28212                           
 28213     1FEA                     l12528:	
 28214                           ;incstack = 0
 28215                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28216                           
 28217                           
 28218                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28219     1FEA  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28220     1FEB  00F2               	movwf	I2C1_SetCallback@cb+1
 28221     1FEC  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28222     1FED  00F1               	movwf	I2C1_SetCallback@cb
 28223     1FEE  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28224     1FEF  00F3               	movwf	I2C1_SetCallback@ptr
 28225     1FF0  3000               	movlw	0
 28226     1FF1  3194  2469  319F   	fcall	_I2C1_SetCallback
 28227     1FF4                     l1772:
 28228     1FF4  0008               	return
 28229     1FF5                     __end_of_I2C1_SetDataCompleteCallback:
 28230                           
 28231                           	psect	text154
 28232     1469                     __ptext154:	
 28233 ;; *************** function _I2C1_SetCallback *****************
 28234 ;; Defined at:
 28235 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28236 ;; Parameters:    Size  Location     Type
 28237 ;;  idx             1    wreg     enum E12583
 28238 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28239 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28240 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28241 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28242 ;;  ptr             1    3[COMMON] PTR void 
 28243 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28244 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28245 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28246 ;; Auto vars:     Size  Location     Type
 28247 ;;  idx             1    4[COMMON] enum E12583
 28248 ;; Return value:  Size  Location     Type
 28249 ;;                  1    wreg      void 
 28250 ;; Registers used:
 28251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28252 ;; Tracked objects:
 28253 ;;		On entry : 0/0
 28254 ;;		On exit  : 0/0
 28255 ;;		Unchanged: 0/0
 28256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28257 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28261 ;;Total ram usage:        4 bytes
 28262 ;; Hardware stack levels used: 1
 28263 ;; Hardware stack levels required when called: 4
 28264 ;; This function calls:
 28265 ;;		Nothing
 28266 ;; This function is called by:
 28267 ;;		_I2C1_SetDataCompleteCallback
 28268 ;;		_I2C1_SetAddressNackCallback
 28269 ;;		_I2C1_SetWriteCollisionCallback
 28270 ;;		_I2C1_SetDataNackCallback
 28271 ;;		_I2C1_SetTimeoutCallback
 28272 ;; This function uses a non-reentrant model
 28273 ;;
 28274                           
 28275     1469                     _I2C1_SetCallback:	
 28276                           ;psect for function _I2C1_SetCallback
 28277                           
 28278                           
 28279                           ;incstack = 0
 28280                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28281                           ;I2C1_SetCallback@idx stored from wreg
 28282     1469  00F4               	movwf	I2C1_SetCallback@idx
 28283     146A                     l12516:
 28284                           
 28285                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28286     146A  0871               	movf	I2C1_SetCallback@cb,w
 28287     146B  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28288     146C  1903               	btfsc	3,2
 28289     146D  2C6F               	goto	u9621
 28290     146E  2C70               	goto	u9620
 28291     146F                     u9621:
 28292     146F  2C7F               	goto	l12520
 28293     1470                     u9620:
 28294     1470                     l12518:
 28295                           
 28296                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28297     1470  3574               	lslf	I2C1_SetCallback@idx,w
 28298     1471  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28299     1472  0086               	movwf	6
 28300     1473  0187               	clrf	7
 28301     1474  0871               	movf	I2C1_SetCallback@cb,w
 28302     1475  3FC0               	movwi [0]fsr1
 28303     1476  0872               	movf	I2C1_SetCallback@cb+1,w
 28304     1477  3FC1               	movwi [1]fsr1
 28305                           
 28306                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28307     1478  0874               	movf	I2C1_SetCallback@idx,w
 28308     1479  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28309     147A  0086               	movwf	6
 28310     147B  0187               	clrf	7
 28311     147C  0873               	movf	I2C1_SetCallback@ptr,w
 28312     147D  0081               	movwf	1
 28313                           
 28314                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28315     147E  2C8C               	goto	l1789
 28316     147F                     l12520:
 28317                           
 28318                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28319     147F  3574               	lslf	I2C1_SetCallback@idx,w
 28320     1480  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28321     1481  0086               	movwf	6
 28322     1482  0187               	clrf	7
 28323     1483  3078               	movlw	low _I2C1_CallbackReturnStop
 28324     1484  3FC0               	movwi [0]fsr1
 28325     1485  301E               	movlw	high _I2C1_CallbackReturnStop
 28326     1486  3FC1               	movwi [1]fsr1
 28327                           
 28328                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28329     1487  0874               	movf	I2C1_SetCallback@idx,w
 28330     1488  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28331     1489  0086               	movwf	6
 28332     148A  0187               	clrf	7
 28333     148B  0181               	clrf	1
 28334     148C                     l1789:
 28335     148C  0008               	return
 28336     148D                     __end_of_I2C1_SetCallback:
 28337                           
 28338                           	psect	text155
 28339     106C                     __ptext155:	
 28340 ;; *************** function _I2C1_SetBuffer *****************
 28341 ;; Defined at:
 28342 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28343 ;; Parameters:    Size  Location     Type
 28344 ;;  buffer          1    wreg     PTR void 
 28345 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28346 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28347 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28348 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28349 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28350 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28351 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28352 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28353 ;;  bufferSize      2    1[COMMON] unsigned int 
 28354 ;; Auto vars:     Size  Location     Type
 28355 ;;  buffer          1    3[COMMON] PTR void 
 28356 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28357 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28358 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28359 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28360 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28361 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28362 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28363 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28364 ;; Return value:  Size  Location     Type
 28365 ;;                  1    wreg      void 
 28366 ;; Registers used:
 28367 ;;		wreg
 28368 ;; Tracked objects:
 28369 ;;		On entry : 0/0
 28370 ;;		On exit  : 0/0
 28371 ;;		Unchanged: 0/0
 28372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28376 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28377 ;;Total ram usage:        3 bytes
 28378 ;; Hardware stack levels used: 1
 28379 ;; Hardware stack levels required when called: 4
 28380 ;; This function calls:
 28381 ;;		Nothing
 28382 ;; This function is called by:
 28383 ;;		_wr1RegCompleteHandler
 28384 ;;		_i2c_write1ByteRegister
 28385 ;;		_rd1RegCompleteHandler
 28386 ;;		_i2c_read1ByteRegister
 28387 ;;		_rd2RegCompleteHandler
 28388 ;;		_i2c_read2ByteRegister
 28389 ;;		_wr2RegCompleteHandler
 28390 ;;		_rdBlkRegCompleteHandler
 28391 ;;		_i2c_readNBytes
 28392 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28393 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28394 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28395 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28396 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28397 ;;		_i2c_writeNBytes
 28398 ;;		_i2c_write2ByteRegister
 28399 ;;		_i2c_readDataBlock
 28400 ;;		_I2C1_Read1ByteRegister
 28401 ;;		_I2C1_Read2ByteRegister
 28402 ;;		_I2C1_Write1ByteRegister
 28403 ;;		_I2C1_Write2ByteRegister
 28404 ;;		_I2C1_WriteNBytes
 28405 ;;		_I2C1_ReadNBytes
 28406 ;;		_I2C1_ReadDataBlock
 28407 ;; This function uses a non-reentrant model
 28408 ;;
 28409                           
 28410     106C                     _I2C1_SetBuffer:	
 28411                           ;psect for function _I2C1_SetBuffer
 28412                           
 28413                           
 28414                           ;incstack = 0
 28415                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28416                           ;I2C1_SetBuffer@buffer stored from wreg
 28417     106C  00F3               	movwf	I2C1_SetBuffer@buffer
 28418     106D                     l12522:
 28419                           
 28420                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28421     106D  0141               	movlb	1	; select bank1
 28422     106E  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 28423     106F  2871               	goto	u9631
 28424     1070  2872               	goto	u9630
 28425     1071                     u9631:
 28426     1071  2879               	goto	l1769
 28427     1072                     u9630:
 28428     1072                     l12524:
 28429                           
 28430                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28431     1072  0873               	movf	I2C1_SetBuffer@buffer,w
 28432     1073  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28433                           
 28434                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28435     1074  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 28436     1075  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 28437     1076  0871               	movf	I2C1_SetBuffer@bufferSize,w
 28438     1077  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 28439     1078                     l12526:
 28440                           
 28441                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28442     1078  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 28443     1079                     l1769:
 28444     1079  0008               	return
 28445     107A                     __end_of_I2C1_SetBuffer:
 28446                           
 28447                           	psect	text156
 28448     1E8B                     __ptext156:	
 28449 ;; *************** function _I2C1_MasterStop *****************
 28450 ;; Defined at:
 28451 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28452 ;; Parameters:    Size  Location     Type
 28453 ;;		None
 28454 ;; Auto vars:     Size  Location     Type
 28455 ;;		None
 28456 ;; Return value:  Size  Location     Type
 28457 ;;                  1    wreg      void 
 28458 ;; Registers used:
 28459 ;;		None
 28460 ;; Tracked objects:
 28461 ;;		On entry : 0/0
 28462 ;;		On exit  : 0/0
 28463 ;;		Unchanged: 0/0
 28464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28469 ;;Total ram usage:        0 bytes
 28470 ;; Hardware stack levels used: 1
 28471 ;; Hardware stack levels required when called: 4
 28472 ;; This function calls:
 28473 ;;		Nothing
 28474 ;; This function is called by:
 28475 ;;		_I2C1_DO_SEND_STOP
 28476 ;; This function uses a non-reentrant model
 28477 ;;
 28478                           
 28479     1E8B                     _I2C1_MasterStop:	
 28480                           ;psect for function _I2C1_MasterStop
 28481                           
 28482     1E8B                     l12532:	
 28483                           ;incstack = 0
 28484                           ; Regs used in _I2C1_MasterStop: []
 28485                           
 28486                           
 28487                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28488     1E8B  0143               	movlb	3	; select bank3
 28489     1E8C  1511               	bsf	17,2	;volatile
 28490     1E8D                     l1935:
 28491     1E8D  0008               	return
 28492     1E8E                     __end_of_I2C1_MasterStop:
 28493                           
 28494                           	psect	text157
 28495     1E88                     __ptext157:	
 28496 ;; *************** function _I2C1_MasterEnableRestart *****************
 28497 ;; Defined at:
 28498 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28499 ;; Parameters:    Size  Location     Type
 28500 ;;		None
 28501 ;; Auto vars:     Size  Location     Type
 28502 ;;		None
 28503 ;; Return value:  Size  Location     Type
 28504 ;;                  1    wreg      void 
 28505 ;; Registers used:
 28506 ;;		None
 28507 ;; Tracked objects:
 28508 ;;		On entry : 0/0
 28509 ;;		On exit  : 0/0
 28510 ;;		Unchanged: 0/0
 28511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28516 ;;Total ram usage:        0 bytes
 28517 ;; Hardware stack levels used: 1
 28518 ;; Hardware stack levels required when called: 4
 28519 ;; This function calls:
 28520 ;;		Nothing
 28521 ;; This function is called by:
 28522 ;;		_I2C1_DO_SEND_RESTART_READ
 28523 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28524 ;;		_I2C1_DO_SEND_RESTART
 28525 ;;		_I2C1_DO_RX_EMPTY
 28526 ;; This function uses a non-reentrant model
 28527 ;;
 28528                           
 28529     1E88                     _I2C1_MasterEnableRestart:	
 28530                           ;psect for function _I2C1_MasterEnableRestart
 28531                           
 28532     1E88                     l12530:	
 28533                           ;incstack = 0
 28534                           ; Regs used in _I2C1_MasterEnableRestart: []
 28535                           
 28536                           
 28537                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28538     1E88  0143               	movlb	3	; select bank3
 28539     1E89  1491               	bsf	17,1	;volatile
 28540     1E8A                     l1923:
 28541     1E8A  0008               	return
 28542     1E8B                     __end_of_I2C1_MasterEnableRestart:
 28543                           
 28544                           	psect	text158
 28545     1E85                     __ptext158:	
 28546 ;; *************** function _I2C1_MasterStart *****************
 28547 ;; Defined at:
 28548 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28549 ;; Parameters:    Size  Location     Type
 28550 ;;		None
 28551 ;; Auto vars:     Size  Location     Type
 28552 ;;		None
 28553 ;; Return value:  Size  Location     Type
 28554 ;;                  1    wreg      void 
 28555 ;; Registers used:
 28556 ;;		None
 28557 ;; Tracked objects:
 28558 ;;		On entry : 0/0
 28559 ;;		On exit  : 0/0
 28560 ;;		Unchanged: 0/0
 28561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28566 ;;Total ram usage:        0 bytes
 28567 ;; Hardware stack levels used: 1
 28568 ;; Hardware stack levels required when called: 4
 28569 ;; This function calls:
 28570 ;;		Nothing
 28571 ;; This function is called by:
 28572 ;;		_I2C1_MasterOperation
 28573 ;; This function uses a non-reentrant model
 28574 ;;
 28575                           
 28576     1E85                     _I2C1_MasterStart:	
 28577                           ;psect for function _I2C1_MasterStart
 28578                           
 28579     1E85                     l12846:	
 28580                           ;incstack = 0
 28581                           ; Regs used in _I2C1_MasterStart: []
 28582                           
 28583                           
 28584                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28585     1E85  0143               	movlb	3	; select bank3
 28586     1E86  1411               	bsf	17,0	;volatile
 28587     1E87                     l1932:
 28588     1E87  0008               	return
 28589     1E88                     __end_of_I2C1_MasterStart:
 28590                           
 28591                           	psect	text159
 28592     1255                     __ptext159:	
 28593 ;; *************** function _I2C1_Close *****************
 28594 ;; Defined at:
 28595 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28596 ;; Parameters:    Size  Location     Type
 28597 ;;		None
 28598 ;; Auto vars:     Size  Location     Type
 28599 ;;  returnValue     1    1[COMMON] enum E358
 28600 ;; Return value:  Size  Location     Type
 28601 ;;                  1    wreg      enum E358
 28602 ;; Registers used:
 28603 ;;		wreg, status,2, status,0, pclath, cstack
 28604 ;; Tracked objects:
 28605 ;;		On entry : 0/0
 28606 ;;		On exit  : 0/0
 28607 ;;		Unchanged: 0/0
 28608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28613 ;;Total ram usage:        1 bytes
 28614 ;; Hardware stack levels used: 1
 28615 ;; Hardware stack levels required when called: 5
 28616 ;; This function calls:
 28617 ;;		_I2C1_MasterClearIrq
 28618 ;;		_I2C1_MasterClose
 28619 ;;		_I2C1_MasterDisableIrq
 28620 ;; This function is called by:
 28621 ;;		_i2c_write1ByteRegister
 28622 ;;		_i2c_read1ByteRegister
 28623 ;;		_i2c_read2ByteRegister
 28624 ;;		_i2c_readNBytes
 28625 ;;		_i2c_writeNBytes
 28626 ;;		_i2c_write2ByteRegister
 28627 ;;		_i2c_readDataBlock
 28628 ;;		_I2C1_Read1ByteRegister
 28629 ;;		_I2C1_Read2ByteRegister
 28630 ;;		_I2C1_Write1ByteRegister
 28631 ;;		_I2C1_Write2ByteRegister
 28632 ;;		_I2C1_WriteNBytes
 28633 ;;		_I2C1_ReadNBytes
 28634 ;;		_I2C1_ReadDataBlock
 28635 ;; This function uses a non-reentrant model
 28636 ;;
 28637                           
 28638     1255                     _I2C1_Close:	
 28639                           ;psect for function _I2C1_Close
 28640                           
 28641     1255                     l12924:	
 28642                           ;incstack = 0
 28643                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28644                           
 28645                           
 28646                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28647     1255  01F1               	clrf	I2C1_Close@returnValue
 28648     1256  0AF1               	incf	I2C1_Close@returnValue,f
 28649                           
 28650                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28651     1257  0141               	movlb	1	; select bank1
 28652     1258  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 28653     1259  2A5B               	goto	u9751
 28654     125A  2A5C               	goto	u9750
 28655     125B                     u9751:
 28656     125B  2A6B               	goto	l12938
 28657     125C                     u9750:
 28658     125C                     l12926:
 28659                           
 28660                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28661     125C  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 28662     125D                     l12928:
 28663                           
 28664                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28665     125D  30FF               	movlw	255
 28666     125E  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28667     125F                     l12930:
 28668                           
 28669                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28670     125F  319E  267C  3192   	fcall	_I2C1_MasterClearIrq
 28671     1262                     l12932:
 28672                           
 28673                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28674     1262  319E  2682  3192   	fcall	_I2C1_MasterDisableIrq
 28675     1265                     l12934:
 28676                           
 28677                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28678     1265  319E  267F  3192   	fcall	_I2C1_MasterClose
 28679     1268                     l12936:
 28680                           
 28681                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28682     1268  0141               	movlb	1	; select bank1
 28683     1269  083B               	movf	(_I2C1_Status^(0+128)+27),w
 28684     126A  00F1               	movwf	I2C1_Close@returnValue
 28685     126B                     l12938:
 28686                           
 28687                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28688     126B  0871               	movf	I2C1_Close@returnValue,w
 28689     126C                     l1750:
 28690     126C  0008               	return
 28691     126D                     __end_of_I2C1_Close:
 28692                           
 28693                           	psect	text160
 28694     1E82                     __ptext160:	
 28695 ;; *************** function _I2C1_MasterDisableIrq *****************
 28696 ;; Defined at:
 28697 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28698 ;; Parameters:    Size  Location     Type
 28699 ;;		None
 28700 ;; Auto vars:     Size  Location     Type
 28701 ;;		None
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1    wreg      void 
 28704 ;; Registers used:
 28705 ;;		None
 28706 ;; Tracked objects:
 28707 ;;		On entry : 0/0
 28708 ;;		On exit  : 0/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28715 ;;Total ram usage:        0 bytes
 28716 ;; Hardware stack levels used: 1
 28717 ;; Hardware stack levels required when called: 4
 28718 ;; This function calls:
 28719 ;;		Nothing
 28720 ;; This function is called by:
 28721 ;;		_I2C1_Close
 28722 ;;		_I2C1_SetTimeOut
 28723 ;; This function uses a non-reentrant model
 28724 ;;
 28725                           
 28726     1E82                     _I2C1_MasterDisableIrq:	
 28727                           ;psect for function _I2C1_MasterDisableIrq
 28728                           
 28729     1E82                     l12868:	
 28730                           ;incstack = 0
 28731                           ; Regs used in _I2C1_MasterDisableIrq: []
 28732                           
 28733                           
 28734                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28735     1E82  014E               	movlb	14	; select bank14
 28736     1E83  1019               	bcf	25,0	;volatile
 28737     1E84                     l1959:
 28738     1E84  0008               	return
 28739     1E85                     __end_of_I2C1_MasterDisableIrq:
 28740                           
 28741                           	psect	text161
 28742     1E7F                     __ptext161:	
 28743 ;; *************** function _I2C1_MasterClose *****************
 28744 ;; Defined at:
 28745 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28746 ;; Parameters:    Size  Location     Type
 28747 ;;		None
 28748 ;; Auto vars:     Size  Location     Type
 28749 ;;		None
 28750 ;; Return value:  Size  Location     Type
 28751 ;;                  1    wreg      void 
 28752 ;; Registers used:
 28753 ;;		None
 28754 ;; Tracked objects:
 28755 ;;		On entry : 0/0
 28756 ;;		On exit  : 0/0
 28757 ;;		Unchanged: 0/0
 28758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28763 ;;Total ram usage:        0 bytes
 28764 ;; Hardware stack levels used: 1
 28765 ;; Hardware stack levels required when called: 4
 28766 ;; This function calls:
 28767 ;;		Nothing
 28768 ;; This function is called by:
 28769 ;;		_I2C1_Close
 28770 ;; This function uses a non-reentrant model
 28771 ;;
 28772                           
 28773     1E7F                     _I2C1_MasterClose:	
 28774                           ;psect for function _I2C1_MasterClose
 28775                           
 28776     1E7F                     l12870:	
 28777                           ;incstack = 0
 28778                           ; Regs used in _I2C1_MasterClose: []
 28779                           
 28780                           
 28781                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28782     1E7F  0143               	movlb	3	; select bank3
 28783     1E80  1290               	bcf	16,5	;volatile
 28784     1E81                     l1914:
 28785     1E81  0008               	return
 28786     1E82                     __end_of_I2C1_MasterClose:
 28787                           
 28788                           	psect	text162
 28789     1E7C                     __ptext162:	
 28790 ;; *************** function _I2C1_MasterClearIrq *****************
 28791 ;; Defined at:
 28792 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28793 ;; Parameters:    Size  Location     Type
 28794 ;;		None
 28795 ;; Auto vars:     Size  Location     Type
 28796 ;;		None
 28797 ;; Return value:  Size  Location     Type
 28798 ;;                  1    wreg      void 
 28799 ;; Registers used:
 28800 ;;		None
 28801 ;; Tracked objects:
 28802 ;;		On entry : 0/0
 28803 ;;		On exit  : 0/0
 28804 ;;		Unchanged: 0/0
 28805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28810 ;;Total ram usage:        0 bytes
 28811 ;; Hardware stack levels used: 1
 28812 ;; Hardware stack levels required when called: 4
 28813 ;; This function calls:
 28814 ;;		Nothing
 28815 ;; This function is called by:
 28816 ;;		_I2C1_Open
 28817 ;;		_I2C1_Close
 28818 ;;		_I2C1_MasterFsm
 28819 ;; This function uses a non-reentrant model
 28820 ;;
 28821                           
 28822     1E7C                     _I2C1_MasterClearIrq:	
 28823                           ;psect for function _I2C1_MasterClearIrq
 28824                           
 28825     1E7C                     l12672:	
 28826                           ;incstack = 0
 28827                           ; Regs used in _I2C1_MasterClearIrq: []
 28828                           
 28829                           
 28830                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28831     1E7C  014E               	movlb	14	; select bank14
 28832     1E7D  100F               	bcf	15,0	;volatile
 28833     1E7E                     l1962:
 28834     1E7E  0008               	return
 28835     1E7F                     __end_of_I2C1_MasterClearIrq:
 28836                           
 28837                           	psect	intentry
 28838     0004                     __pintentry:	
 28839 ;; *************** function _INTERRUPT_InterruptManager *****************
 28840 ;; Defined at:
 28841 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28842 ;; Parameters:    Size  Location     Type
 28843 ;;		None
 28844 ;; Auto vars:     Size  Location     Type
 28845 ;;		None
 28846 ;; Return value:  Size  Location     Type
 28847 ;;                  1    wreg      void 
 28848 ;; Registers used:
 28849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28850 ;; Tracked objects:
 28851 ;;		On entry : 0/0
 28852 ;;		On exit  : 0/0
 28853 ;;		Unchanged: 0/0
 28854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28859 ;;Total ram usage:        0 bytes
 28860 ;; Hardware stack levels used: 1
 28861 ;; Hardware stack levels required when called: 3
 28862 ;; This function calls:
 28863 ;;		NULL
 28864 ;;		_EUSART1_Receive_ISR
 28865 ;;		_EUSART1_Transmit_ISR
 28866 ;;		_EUSART2_Receive_ISR
 28867 ;;		_EUSART2_Transmit_ISR
 28868 ;;		_PIN_MANAGER_IOC
 28869 ;; This function is called by:
 28870 ;;		Interrupt level 1
 28871 ;; This function uses a non-reentrant model
 28872 ;;
 28873                           
 28874     0004                     _INTERRUPT_InterruptManager:
 28875                           
 28876                           ;incstack = 0
 28877 ;; hardware stack exceeded
 28878     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28879                           
 28880                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28881     0005  3180               	pagesel	$
 28882     0006                     i1l14948:
 28883                           
 28884                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28885     0006  014E               	movlb	14	; select bank14
 28886     0007  1E16               	btfss	22,4	;volatile
 28887     0008  280A               	goto	u1220_21
 28888     0009  280B               	goto	u1220_20
 28889     000A                     u1220_21:
 28890     000A  2813               	goto	i1l1295
 28891     000B                     u1220_20:
 28892     000B                     i1l14950:
 28893     000B  1E0C               	btfss	12,4	;volatile
 28894     000C  280E               	goto	u1221_21
 28895     000D  280F               	goto	u1221_20
 28896     000E                     u1221_21:
 28897     000E  2813               	goto	i1l1295
 28898     000F                     u1221_20:
 28899     000F                     i1l14952:
 28900                           
 28901                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28902     000F  319F  278B  3180   	fcall	_PIN_MANAGER_IOC
 28903                           
 28904                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28905     0012  2853               	goto	i1l1307
 28906     0013                     i1l1295:	
 28907                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28908                           
 28909     0013  1F0B               	btfss	11,6	;volatile
 28910     0014  2816               	goto	u1222_21
 28911     0015  2817               	goto	u1222_20
 28912     0016                     u1222_21:
 28913     0016  2853               	goto	i1l1307
 28914     0017                     u1222_20:
 28915     0017                     i1l14954:
 28916                           
 28917                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28918     0017  1F19               	btfss	25,6	;volatile
 28919     0018  281A               	goto	u1223_21
 28920     0019  281B               	goto	u1223_20
 28921     001A                     u1223_21:
 28922     001A  2826               	goto	i1l1298
 28923     001B                     u1223_20:
 28924     001B                     i1l14956:
 28925     001B  1F0F               	btfss	15,6	;volatile
 28926     001C  281E               	goto	u1224_21
 28927     001D  281F               	goto	u1224_20
 28928     001E                     u1224_21:
 28929     001E  2826               	goto	i1l1298
 28930     001F                     u1224_20:
 28931     001F                     i1l14958:
 28932                           
 28933                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28934     001F  0141               	movlb	1	; select bank1
 28935     0020  086E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28936     0021  008A               	movwf	10
 28937     0022  086D               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28938     0023  000A               	callw
 28939     0024  3180               	pagesel	$
 28940                           
 28941                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28942     0025  2853               	goto	i1l1307
 28943     0026                     i1l1298:	
 28944                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28945                           
 28946     0026  1F99               	btfss	25,7	;volatile
 28947     0027  2829               	goto	u1225_21
 28948     0028  282A               	goto	u1225_20
 28949     0029                     u1225_21:
 28950     0029  2835               	goto	i1l1300
 28951     002A                     u1225_20:
 28952     002A                     i1l14960:
 28953     002A  1F8F               	btfss	15,7	;volatile
 28954     002B  282D               	goto	u1226_21
 28955     002C  282E               	goto	u1226_20
 28956     002D                     u1226_21:
 28957     002D  2835               	goto	i1l1300
 28958     002E                     u1226_20:
 28959     002E                     i1l14962:
 28960                           
 28961                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28962     002E  0141               	movlb	1	; select bank1
 28963     002F  086C               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28964     0030  008A               	movwf	10
 28965     0031  086B               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28966     0032  000A               	callw
 28967     0033  3180               	pagesel	$
 28968                           
 28969                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28970     0034  2853               	goto	i1l1307
 28971     0035                     i1l1300:	
 28972                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28973                           
 28974     0035  1E19               	btfss	25,4	;volatile
 28975     0036  2838               	goto	u1227_21
 28976     0037  2839               	goto	u1227_20
 28977     0038                     u1227_21:
 28978     0038  2844               	goto	i1l1302
 28979     0039                     u1227_20:
 28980     0039                     i1l14964:
 28981     0039  1E0F               	btfss	15,4	;volatile
 28982     003A  283C               	goto	u1228_21
 28983     003B  283D               	goto	u1228_20
 28984     003C                     u1228_21:
 28985     003C  2844               	goto	i1l1302
 28986     003D                     u1228_20:
 28987     003D                     i1l14966:
 28988                           
 28989                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28990     003D  0142               	movlb	2	; select bank2
 28991     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28992     003F  008A               	movwf	10
 28993     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28994     0041  000A               	callw
 28995     0042  3180               	pagesel	$
 28996                           
 28997                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28998     0043  2853               	goto	i1l1307
 28999     0044                     i1l1302:	
 29000                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 29001                           
 29002     0044  1E99               	btfss	25,5	;volatile
 29003     0045  2847               	goto	u1229_21
 29004     0046  2848               	goto	u1229_20
 29005     0047                     u1229_21:
 29006     0047  2853               	goto	i1l1301
 29007     0048                     u1229_20:
 29008     0048                     i1l14968:
 29009     0048  1E8F               	btfss	15,5	;volatile
 29010     0049  284B               	goto	u1230_21
 29011     004A  284C               	goto	u1230_20
 29012     004B                     u1230_21:
 29013     004B  2853               	goto	i1l1301
 29014     004C                     u1230_20:
 29015     004C                     i1l14970:
 29016                           
 29017                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 29018     004C  0142               	movlb	2	; select bank2
 29019     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 29020     004E  008A               	movwf	10
 29021     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 29022     0050  000A               	callw
 29023     0051  3180               	pagesel	$
 29024                           
 29025                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 29026     0052  2853               	goto	i1l1307
 29027     0053                     i1l1301:
 29028     0053                     i1l1307:
 29029     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 29030     0054  0009               	retfie
 29031     0055                     __end_of_INTERRUPT_InterruptManager:
 29032                           
 29033                           	psect	text164
 29034     1F8B                     __ptext164:	
 29035 ;; *************** function _PIN_MANAGER_IOC *****************
 29036 ;; Defined at:
 29037 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 29038 ;; Parameters:    Size  Location     Type
 29039 ;;		None
 29040 ;; Auto vars:     Size  Location     Type
 29041 ;;		None
 29042 ;; Return value:  Size  Location     Type
 29043 ;;                  1    wreg      void 
 29044 ;; Registers used:
 29045 ;;		wreg, status,2, status,0, pclath, cstack
 29046 ;; Tracked objects:
 29047 ;;		On entry : 0/0
 29048 ;;		On exit  : 0/0
 29049 ;;		Unchanged: 0/0
 29050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29055 ;;Total ram usage:        0 bytes
 29056 ;; Hardware stack levels used: 1
 29057 ;; Hardware stack levels required when called: 2
 29058 ;; This function calls:
 29059 ;;		_IOCAF6_ISR
 29060 ;; This function is called by:
 29061 ;;		_INTERRUPT_InterruptManager
 29062 ;; This function uses a non-reentrant model
 29063 ;;
 29064                           
 29065     1F8B                     _PIN_MANAGER_IOC:	
 29066                           ;psect for function _PIN_MANAGER_IOC
 29067                           
 29068     1F8B                     i1l10264:	
 29069                           ;incstack = 0
 29070 ;; hardware stack exceeded
 29071                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 29072                           
 29073                           
 29074                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 29075     1F8B  017E               	movlb	62	; select bank62
 29076     1F8C  1F3F               	btfss	63,6	;volatile
 29077     1F8D  2F8F               	goto	u710_21
 29078     1F8E  2F90               	goto	u710_20
 29079     1F8F                     u710_21:
 29080     1F8F  2F93               	goto	i1l1447
 29081     1F90                     u710_20:
 29082     1F90                     i1l10266:
 29083                           
 29084                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 29085     1F90  3190  2096  319F   	fcall	_IOCAF6_ISR
 29086     1F93                     i1l1447:
 29087     1F93  0008               	return
 29088     1F94                     __end_of_PIN_MANAGER_IOC:
 29089                           
 29090                           	psect	text165
 29091     1096                     __ptext165:	
 29092 ;; *************** function _IOCAF6_ISR *****************
 29093 ;; Defined at:
 29094 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 29095 ;; Parameters:    Size  Location     Type
 29096 ;;		None
 29097 ;; Auto vars:     Size  Location     Type
 29098 ;;		None
 29099 ;; Return value:  Size  Location     Type
 29100 ;;                  1    wreg      void 
 29101 ;; Registers used:
 29102 ;;		wreg, status,2, status,0, pclath, cstack
 29103 ;; Tracked objects:
 29104 ;;		On entry : 0/0
 29105 ;;		On exit  : 0/0
 29106 ;;		Unchanged: 0/0
 29107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29112 ;;Total ram usage:        0 bytes
 29113 ;; Hardware stack levels used: 1
 29114 ;; Hardware stack levels required when called: 1
 29115 ;; This function calls:
 29116 ;;		NULL
 29117 ;;		_IOCAF6_DefaultInterruptHandler
 29118 ;; This function is called by:
 29119 ;;		_PIN_MANAGER_IOC
 29120 ;; This function uses a non-reentrant model
 29121 ;;
 29122                           
 29123     1096                     _IOCAF6_ISR:	
 29124                           ;psect for function _IOCAF6_ISR
 29125                           
 29126     1096                     i1l9340:	
 29127                           ;incstack = 0
 29128 ;; hardware stack exceeded
 29129                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 29130                           
 29131                           
 29132                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 29133     1096  0141               	movlb	1	; select bank1
 29134     1097  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29135     1098  046A               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29136     1099  1903               	btfsc	3,2
 29137     109A  289C               	goto	u590_21
 29138     109B  289D               	goto	u590_20
 29139     109C                     u590_21:
 29140     109C  28A2               	goto	i1l9344
 29141     109D                     u590_20:
 29142     109D                     i1l9342:
 29143                           
 29144                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29145     109D  086A               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29146     109E  008A               	movwf	10
 29147     109F  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29148     10A0  000A               	callw
 29149     10A1  3190               	pagesel	$
 29150     10A2                     i1l9344:
 29151                           
 29152                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29153     10A2  017E               	movlb	62	; select bank62
 29154     10A3  133F               	bcf	63,6	;volatile
 29155     10A4                     i1l1451:
 29156     10A4  0008               	return
 29157     10A5                     __end_of_IOCAF6_ISR:
 29158                           
 29159                           	psect	text166
 29160     07FF                     __ptext166:	
 29161 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29162 ;; Defined at:
 29163 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29164 ;; Parameters:    Size  Location     Type
 29165 ;;		None
 29166 ;; Auto vars:     Size  Location     Type
 29167 ;;		None
 29168 ;; Return value:  Size  Location     Type
 29169 ;;                  1    wreg      void 
 29170 ;; Registers used:
 29171 ;;		None
 29172 ;; Tracked objects:
 29173 ;;		On entry : 0/0
 29174 ;;		On exit  : 0/0
 29175 ;;		Unchanged: 0/0
 29176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29181 ;;Total ram usage:        0 bytes
 29182 ;; Hardware stack levels used: 1
 29183 ;; This function calls:
 29184 ;;		Nothing
 29185 ;; This function is called by:
 29186 ;;		_PIN_MANAGER_Initialize
 29187 ;;		_IOCAF6_ISR
 29188 ;; This function uses a non-reentrant model
 29189 ;;
 29190                           
 29191     07FF                     _IOCAF6_DefaultInterruptHandler:	
 29192                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29193                           
 29194     07FF                     i1l1457:	
 29195                           ;incstack = 0
 29196 ;; hardware stack exceeded
 29197                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29198                           
 29199     07FF  0008               	return
 29200     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 29201                           
 29202                           	psect	text167
 29203     1424                     __ptext167:	
 29204 ;; *************** function _EUSART1_Transmit_ISR *****************
 29205 ;; Defined at:
 29206 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29207 ;; Parameters:    Size  Location     Type
 29208 ;;		None
 29209 ;; Auto vars:     Size  Location     Type
 29210 ;;		None
 29211 ;; Return value:  Size  Location     Type
 29212 ;;                  1    wreg      void 
 29213 ;; Registers used:
 29214 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29215 ;; Tracked objects:
 29216 ;;		On entry : 0/0
 29217 ;;		On exit  : 0/0
 29218 ;;		Unchanged: 0/0
 29219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29224 ;;Total ram usage:        1 bytes
 29225 ;; Hardware stack levels used: 1
 29226 ;; This function calls:
 29227 ;;		Nothing
 29228 ;; This function is called by:
 29229 ;;		_EUSART1_Initialize
 29230 ;;		_INTERRUPT_InterruptManager
 29231 ;; This function uses a non-reentrant model
 29232 ;;
 29233                           
 29234     1424                     _EUSART1_Transmit_ISR:	
 29235                           ;psect for function _EUSART1_Transmit_ISR
 29236                           
 29237     1424                     i1l10232:	
 29238                           ;incstack = 0
 29239 ;; hardware stack exceeded
 29240                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29241                           
 29242                           
 29243                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29244     1424  3008               	movlw	8
 29245     1425  0140               	movlb	0	; select bank0
 29246     1426  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29247     1427  1803               	skipnc
 29248     1428  2C2A               	goto	u705_21
 29249     1429  2C2B               	goto	u705_20
 29250     142A                     u705_21:
 29251     142A  2C43               	goto	i1l1232
 29252     142B                     u705_20:
 29253     142B                     i1l10234:
 29254                           
 29255                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29256     142B  085C               	movf	_eusart1TxTail,w
 29257     142C  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 29258     142D  0086               	movwf	6
 29259     142E  0187               	clrf	7
 29260     142F  0801               	movf	1,w
 29261     1430  0142               	movlb	2	; select bank2
 29262     1431  009A               	movwf	26	;volatile
 29263     1432                     i1l10236:
 29264     1432  3001               	movlw	1
 29265     1433  00F0               	movwf	??_EUSART1_Transmit_ISR
 29266     1434  0870               	movf	??_EUSART1_Transmit_ISR,w
 29267     1435  0140               	movlb	0	; select bank0
 29268     1436  07DC               	addwf	_eusart1TxTail,f	;volatile
 29269     1437                     i1l10238:
 29270                           
 29271                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29272     1437  3008               	movlw	8
 29273     1438  025C               	subwf	_eusart1TxTail,w	;volatile
 29274     1439  1C03               	skipc
 29275     143A  2C3C               	goto	u706_21
 29276     143B  2C3D               	goto	u706_20
 29277     143C                     u706_21:
 29278     143C  2C3E               	goto	i1l10242
 29279     143D                     u706_20:
 29280     143D                     i1l10240:
 29281                           
 29282                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29283     143D  01DC               	clrf	_eusart1TxTail	;volatile
 29284     143E                     i1l10242:
 29285                           
 29286                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29287     143E  3001               	movlw	1
 29288     143F  00F0               	movwf	??_EUSART1_Transmit_ISR
 29289     1440  0870               	movf	??_EUSART1_Transmit_ISR,w
 29290     1441  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29291                           
 29292                           ;mcc_generated_files/eusart1.c: 218:     }
 29293     1442  2C45               	goto	i1l1235
 29294     1443                     i1l1232:	
 29295                           ;mcc_generated_files/eusart1.c: 219:     else
 29296                           
 29297                           
 29298                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29299     1443  014E               	movlb	14	; select bank14
 29300     1444  1219               	bcf	25,4	;volatile
 29301     1445                     i1l1235:
 29302     1445  0008               	return
 29303     1446                     __end_of_EUSART1_Transmit_ISR:
 29304                           
 29305                           	psect	text168
 29306     1402                     __ptext168:	
 29307 ;; *************** function _EUSART2_Transmit_ISR *****************
 29308 ;; Defined at:
 29309 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29310 ;; Parameters:    Size  Location     Type
 29311 ;;		None
 29312 ;; Auto vars:     Size  Location     Type
 29313 ;;		None
 29314 ;; Return value:  Size  Location     Type
 29315 ;;                  1    wreg      void 
 29316 ;; Registers used:
 29317 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29318 ;; Tracked objects:
 29319 ;;		On entry : 0/0
 29320 ;;		On exit  : 0/0
 29321 ;;		Unchanged: 0/0
 29322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29327 ;;Total ram usage:        1 bytes
 29328 ;; Hardware stack levels used: 1
 29329 ;; This function calls:
 29330 ;;		Nothing
 29331 ;; This function is called by:
 29332 ;;		_EUSART2_Initialize
 29333 ;;		_INTERRUPT_InterruptManager
 29334 ;; This function uses a non-reentrant model
 29335 ;;
 29336                           
 29337     1402                     _EUSART2_Transmit_ISR:	
 29338                           ;psect for function _EUSART2_Transmit_ISR
 29339                           
 29340     1402                     i1l10200:	
 29341                           ;incstack = 0
 29342 ;; hardware stack exceeded
 29343                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29344                           
 29345                           
 29346                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29347     1402  3008               	movlw	8
 29348     1403  0140               	movlb	0	; select bank0
 29349     1404  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29350     1405  1803               	skipnc
 29351     1406  2C08               	goto	u700_21
 29352     1407  2C09               	goto	u700_20
 29353     1408                     u700_21:
 29354     1408  2C21               	goto	i1l1082
 29355     1409                     u700_20:
 29356     1409                     i1l10202:
 29357                           
 29358                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29359     1409  0862               	movf	_eusart2TxTail,w
 29360     140A  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29361     140B  0086               	movwf	6
 29362     140C  0187               	clrf	7
 29363     140D  0801               	movf	1,w
 29364     140E  0154               	movlb	20	; select bank20
 29365     140F  009A               	movwf	26	;volatile
 29366     1410                     i1l10204:
 29367     1410  3001               	movlw	1
 29368     1411  00F0               	movwf	??_EUSART2_Transmit_ISR
 29369     1412  0870               	movf	??_EUSART2_Transmit_ISR,w
 29370     1413  0140               	movlb	0	; select bank0
 29371     1414  07E2               	addwf	_eusart2TxTail,f	;volatile
 29372     1415                     i1l10206:
 29373                           
 29374                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29375     1415  3008               	movlw	8
 29376     1416  0262               	subwf	_eusart2TxTail,w	;volatile
 29377     1417  1C03               	skipc
 29378     1418  2C1A               	goto	u701_21
 29379     1419  2C1B               	goto	u701_20
 29380     141A                     u701_21:
 29381     141A  2C1C               	goto	i1l10210
 29382     141B                     u701_20:
 29383     141B                     i1l10208:
 29384                           
 29385                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29386     141B  01E2               	clrf	_eusart2TxTail	;volatile
 29387     141C                     i1l10210:
 29388                           
 29389                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29390     141C  3001               	movlw	1
 29391     141D  00F0               	movwf	??_EUSART2_Transmit_ISR
 29392     141E  0870               	movf	??_EUSART2_Transmit_ISR,w
 29393     141F  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29394                           
 29395                           ;mcc_generated_files/eusart2.c: 209:     }
 29396     1420  2C23               	goto	i1l1085
 29397     1421                     i1l1082:	
 29398                           ;mcc_generated_files/eusart2.c: 210:     else
 29399                           
 29400                           
 29401                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29402     1421  014E               	movlb	14	; select bank14
 29403     1422  1319               	bcf	25,6	;volatile
 29404     1423                     i1l1085:
 29405     1423  0008               	return
 29406     1424                     __end_of_EUSART2_Transmit_ISR:
 29407                           
 29408                           	psect	text169
 29409     0897                     __ptext169:	
 29410 ;; *************** function _EUSART1_Receive_ISR *****************
 29411 ;; Defined at:
 29412 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29413 ;; Parameters:    Size  Location     Type
 29414 ;;		None
 29415 ;; Auto vars:     Size  Location     Type
 29416 ;;		None
 29417 ;; Return value:  Size  Location     Type
 29418 ;;                  1    wreg      void 
 29419 ;; Registers used:
 29420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29421 ;; Tracked objects:
 29422 ;;		On entry : 0/0
 29423 ;;		On exit  : 0/0
 29424 ;;		Unchanged: 0/0
 29425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29430 ;;Total ram usage:        0 bytes
 29431 ;; Hardware stack levels used: 1
 29432 ;; Hardware stack levels required when called: 2
 29433 ;; This function calls:
 29434 ;;		NULL
 29435 ;;		_EUSART1_DefaultErrorHandler
 29436 ;;		_EUSART1_DefaultFramingErrorHandler
 29437 ;;		_EUSART1_DefaultOverrunErrorHandler
 29438 ;;		_EUSART1_RxDataHandler
 29439 ;; This function is called by:
 29440 ;;		_EUSART1_Initialize
 29441 ;;		_INTERRUPT_InterruptManager
 29442 ;; This function uses a non-reentrant model
 29443 ;;
 29444                           
 29445     0897                     _EUSART1_Receive_ISR:	
 29446                           ;psect for function _EUSART1_Receive_ISR
 29447                           
 29448     0897                     i1l10244:	
 29449                           ;incstack = 0
 29450 ;; hardware stack exceeded
 29451                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29452                           
 29453                           
 29454                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29455     0897  0140               	movlb	0	; select bank0
 29456     0898  085A               	movf	_eusart1RxHead,w	;volatile
 29457     0899  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29458     089A  0086               	movwf	6
 29459     089B  0187               	clrf	7
 29460     089C  0181               	clrf	1
 29461     089D                     i1l10246:
 29462                           
 29463                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29464     089D  0142               	movlb	2	; select bank2
 29465     089E  1D1D               	btfss	29,2	;volatile
 29466     089F  28A1               	goto	u707_21
 29467     08A0  28A2               	goto	u707_20
 29468     08A1                     u707_21:
 29469     08A1  28AE               	goto	i1l10252
 29470     08A2                     u707_20:
 29471     08A2                     i1l10248:
 29472                           
 29473                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29474     08A2  0140               	movlb	0	; select bank0
 29475     08A3  085A               	movf	_eusart1RxHead,w	;volatile
 29476     08A4  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29477     08A5  0086               	movwf	6
 29478     08A6  0187               	clrf	7
 29479     08A7  1481               	bsf	1,1
 29480     08A8                     i1l10250:
 29481                           
 29482                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29483     08A8  0142               	movlb	2	; select bank2
 29484     08A9  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29485     08AA  008A               	movwf	10
 29486     08AB  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29487     08AC  000A               	callw
 29488     08AD  3188               	pagesel	$
 29489     08AE                     i1l10252:
 29490                           
 29491                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29492     08AE  0142               	movlb	2	; select bank2
 29493     08AF  1C9D               	btfss	29,1	;volatile
 29494     08B0  28B2               	goto	u708_21
 29495     08B1  28B3               	goto	u708_20
 29496     08B2                     u708_21:
 29497     08B2  28BF               	goto	i1l10258
 29498     08B3                     u708_20:
 29499     08B3                     i1l10254:
 29500                           
 29501                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29502     08B3  0140               	movlb	0	; select bank0
 29503     08B4  085A               	movf	_eusart1RxHead,w	;volatile
 29504     08B5  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29505     08B6  0086               	movwf	6
 29506     08B7  0187               	clrf	7
 29507     08B8  1501               	bsf	1,2
 29508     08B9                     i1l10256:
 29509                           
 29510                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29511     08B9  0142               	movlb	2	; select bank2
 29512     08BA  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29513     08BB  008A               	movwf	10
 29514     08BC  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29515     08BD  000A               	callw
 29516     08BE  3188               	pagesel	$
 29517     08BF                     i1l10258:
 29518                           
 29519                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29520     08BF  0140               	movlb	0	; select bank0
 29521     08C0  085A               	movf	_eusart1RxHead,w	;volatile
 29522     08C1  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29523     08C2  0086               	movwf	6
 29524     08C3  0187               	clrf	7
 29525     08C4  0801               	movf	1,w
 29526     08C5  1903               	btfsc	3,2
 29527     08C6  28C8               	goto	u709_21
 29528     08C7  28C9               	goto	u709_20
 29529     08C8                     u709_21:
 29530     08C8  28D0               	goto	i1l10262
 29531     08C9                     u709_20:
 29532     08C9                     i1l10260:
 29533                           
 29534                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29535     08C9  0142               	movlb	2	; select bank2
 29536     08CA  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29537     08CB  008A               	movwf	10
 29538     08CC  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29539     08CD  000A               	callw
 29540     08CE  3188               	pagesel	$
 29541                           
 29542                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29543     08CF  28D3               	goto	i1l1242
 29544     08D0                     i1l10262:
 29545                           
 29546                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29547     08D0  3193  2300  3188   	fcall	_EUSART1_RxDataHandler
 29548     08D3                     i1l1242:
 29549     08D3  0008               	return
 29550     08D4                     __end_of_EUSART1_Receive_ISR:
 29551                           
 29552                           	psect	text170
 29553     085E                     __ptext170:	
 29554 ;; *************** function _EUSART2_Receive_ISR *****************
 29555 ;; Defined at:
 29556 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29557 ;; Parameters:    Size  Location     Type
 29558 ;;		None
 29559 ;; Auto vars:     Size  Location     Type
 29560 ;;		None
 29561 ;; Return value:  Size  Location     Type
 29562 ;;                  1    wreg      void 
 29563 ;; Registers used:
 29564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29565 ;; Tracked objects:
 29566 ;;		On entry : 0/0
 29567 ;;		On exit  : 0/0
 29568 ;;		Unchanged: 0/0
 29569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29574 ;;Total ram usage:        0 bytes
 29575 ;; Hardware stack levels used: 1
 29576 ;; Hardware stack levels required when called: 2
 29577 ;; This function calls:
 29578 ;;		NULL
 29579 ;;		_EUSART2_DefaultErrorHandler
 29580 ;;		_EUSART2_DefaultFramingErrorHandler
 29581 ;;		_EUSART2_DefaultOverrunErrorHandler
 29582 ;;		_EUSART2_RxDataHandler
 29583 ;; This function is called by:
 29584 ;;		_EUSART2_Initialize
 29585 ;;		_INTERRUPT_InterruptManager
 29586 ;; This function uses a non-reentrant model
 29587 ;;
 29588                           
 29589     085E                     _EUSART2_Receive_ISR:	
 29590                           ;psect for function _EUSART2_Receive_ISR
 29591                           
 29592     085E                     i1l14502:	
 29593                           ;incstack = 0
 29594 ;; hardware stack exceeded
 29595                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29596                           
 29597                           
 29598                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29599     085E  087C               	movf	_eusart2RxHead,w	;volatile
 29600     085F  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29601     0860  0086               	movwf	6
 29602     0861  0187               	clrf	7
 29603     0862  0181               	clrf	1
 29604     0863                     i1l14504:
 29605                           
 29606                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29607     0863  0154               	movlb	20	; select bank20
 29608     0864  1D1D               	btfss	29,2	;volatile
 29609     0865  2867               	goto	u1171_21
 29610     0866  2868               	goto	u1171_20
 29611     0867                     u1171_21:
 29612     0867  2873               	goto	i1l14510
 29613     0868                     u1171_20:
 29614     0868                     i1l14506:
 29615                           
 29616                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29617     0868  087C               	movf	_eusart2RxHead,w	;volatile
 29618     0869  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29619     086A  0086               	movwf	6
 29620     086B  0187               	clrf	7
 29621     086C  1481               	bsf	1,1
 29622     086D                     i1l14508:
 29623                           
 29624                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29625     086D  0142               	movlb	2	; select bank2
 29626     086E  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29627     086F  008A               	movwf	10
 29628     0870  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29629     0871  000A               	callw
 29630     0872  3188               	pagesel	$
 29631     0873                     i1l14510:
 29632                           
 29633                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29634     0873  0154               	movlb	20	; select bank20
 29635     0874  1C9D               	btfss	29,1	;volatile
 29636     0875  2877               	goto	u1172_21
 29637     0876  2878               	goto	u1172_20
 29638     0877                     u1172_21:
 29639     0877  2883               	goto	i1l14516
 29640     0878                     u1172_20:
 29641     0878                     i1l14512:
 29642                           
 29643                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29644     0878  087C               	movf	_eusart2RxHead,w	;volatile
 29645     0879  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29646     087A  0086               	movwf	6
 29647     087B  0187               	clrf	7
 29648     087C  1501               	bsf	1,2
 29649     087D                     i1l14514:
 29650                           
 29651                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29652     087D  0142               	movlb	2	; select bank2
 29653     087E  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29654     087F  008A               	movwf	10
 29655     0880  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29656     0881  000A               	callw
 29657     0882  3188               	pagesel	$
 29658     0883                     i1l14516:
 29659                           
 29660                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29661     0883  087C               	movf	_eusart2RxHead,w	;volatile
 29662     0884  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29663     0885  0086               	movwf	6
 29664     0886  0187               	clrf	7
 29665     0887  0801               	movf	1,w
 29666     0888  1903               	btfsc	3,2
 29667     0889  288B               	goto	u1173_21
 29668     088A  288C               	goto	u1173_20
 29669     088B                     u1173_21:
 29670     088B  2893               	goto	i1l14520
 29671     088C                     u1173_20:
 29672     088C                     i1l14518:
 29673                           
 29674                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29675     088C  0142               	movlb	2	; select bank2
 29676     088D  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29677     088E  008A               	movwf	10
 29678     088F  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29679     0890  000A               	callw
 29680     0891  3188               	pagesel	$
 29681                           
 29682                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29683     0892  2896               	goto	i1l1092
 29684     0893                     i1l14520:
 29685                           
 29686                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29687     0893  3192  223D  3188   	fcall	_EUSART2_RxDataHandler
 29688     0896                     i1l1092:
 29689     0896  0008               	return
 29690     0897                     __end_of_EUSART2_Receive_ISR:
 29691                           
 29692                           	psect	text171
 29693     1EA6                     __ptext171:	
 29694 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29695 ;; Defined at:
 29696 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29697 ;; Parameters:    Size  Location     Type
 29698 ;;		None
 29699 ;; Auto vars:     Size  Location     Type
 29700 ;;		None
 29701 ;; Return value:  Size  Location     Type
 29702 ;;                  1    wreg      void 
 29703 ;; Registers used:
 29704 ;;		None
 29705 ;; Tracked objects:
 29706 ;;		On entry : 0/0
 29707 ;;		On exit  : 0/0
 29708 ;;		Unchanged: 0/0
 29709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29714 ;;Total ram usage:        0 bytes
 29715 ;; Hardware stack levels used: 1
 29716 ;; This function calls:
 29717 ;;		Nothing
 29718 ;; This function is called by:
 29719 ;;		_EUSART2_Initialize
 29720 ;;		_EUSART2_Receive_ISR
 29721 ;; This function uses a non-reentrant model
 29722 ;;
 29723                           
 29724     1EA6                     _EUSART2_DefaultOverrunErrorHandler:	
 29725                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29726                           
 29727     1EA6                     i1l13704:	
 29728                           ;incstack = 0
 29729 ;; hardware stack exceeded
 29730                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29731                           
 29732                           
 29733                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29734     1EA6  0154               	movlb	20	; select bank20
 29735     1EA7  121D               	bcf	29,4	;volatile
 29736                           
 29737                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29738     1EA8  161D               	bsf	29,4	;volatile
 29739     1EA9                     i1l1102:
 29740     1EA9  0008               	return
 29741     1EAA                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29742                           
 29743                           	psect	text172
 29744     1E77                     __ptext172:	
 29745 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29746 ;; Defined at:
 29747 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29748 ;; Parameters:    Size  Location     Type
 29749 ;;		None
 29750 ;; Auto vars:     Size  Location     Type
 29751 ;;		None
 29752 ;; Return value:  Size  Location     Type
 29753 ;;                  1    wreg      void 
 29754 ;; Registers used:
 29755 ;;		None
 29756 ;; Tracked objects:
 29757 ;;		On entry : 0/0
 29758 ;;		On exit  : 0/0
 29759 ;;		Unchanged: 0/0
 29760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29765 ;;Total ram usage:        0 bytes
 29766 ;; Hardware stack levels used: 1
 29767 ;; This function calls:
 29768 ;;		Nothing
 29769 ;; This function is called by:
 29770 ;;		_EUSART2_Initialize
 29771 ;;		_EUSART2_Receive_ISR
 29772 ;; This function uses a non-reentrant model
 29773 ;;
 29774                           
 29775     1E77                     _EUSART2_DefaultFramingErrorHandler:	
 29776                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29777                           
 29778     1E77                     i1l1099:	
 29779                           ;incstack = 0
 29780 ;; hardware stack exceeded
 29781                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29782                           
 29783     1E77  0008               	return
 29784     1E78                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29785                           
 29786                           	psect	text173
 29787     1EA2                     __ptext173:	
 29788 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29789 ;; Defined at:
 29790 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29791 ;; Parameters:    Size  Location     Type
 29792 ;;		None
 29793 ;; Auto vars:     Size  Location     Type
 29794 ;;		None
 29795 ;; Return value:  Size  Location     Type
 29796 ;;                  1    wreg      void 
 29797 ;; Registers used:
 29798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29799 ;; Tracked objects:
 29800 ;;		On entry : 0/0
 29801 ;;		On exit  : 0/0
 29802 ;;		Unchanged: 0/0
 29803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29808 ;;Total ram usage:        0 bytes
 29809 ;; Hardware stack levels used: 1
 29810 ;; Hardware stack levels required when called: 1
 29811 ;; This function calls:
 29812 ;;		_EUSART2_RxDataHandler
 29813 ;; This function is called by:
 29814 ;;		_EUSART2_Initialize
 29815 ;;		_EUSART2_Receive_ISR
 29816 ;; This function uses a non-reentrant model
 29817 ;;
 29818                           
 29819     1EA2                     _EUSART2_DefaultErrorHandler:	
 29820                           ;psect for function _EUSART2_DefaultErrorHandler
 29821                           
 29822     1EA2                     i1l13706:	
 29823                           ;incstack = 0
 29824 ;; hardware stack exceeded
 29825                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29826                           
 29827                           
 29828                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29829     1EA2  3192  223D  319E   	fcall	_EUSART2_RxDataHandler
 29830     1EA5                     i1l1105:
 29831     1EA5  0008               	return
 29832     1EA6                     __end_of_EUSART2_DefaultErrorHandler:
 29833                           
 29834                           	psect	text174
 29835     123D                     __ptext174:	
 29836 ;; *************** function _EUSART2_RxDataHandler *****************
 29837 ;; Defined at:
 29838 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29839 ;; Parameters:    Size  Location     Type
 29840 ;;		None
 29841 ;; Auto vars:     Size  Location     Type
 29842 ;;		None
 29843 ;; Return value:  Size  Location     Type
 29844 ;;                  1    wreg      void 
 29845 ;; Registers used:
 29846 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29847 ;; Tracked objects:
 29848 ;;		On entry : 0/0
 29849 ;;		On exit  : 0/0
 29850 ;;		Unchanged: 0/0
 29851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29856 ;;Total ram usage:        1 bytes
 29857 ;; Hardware stack levels used: 1
 29858 ;; This function calls:
 29859 ;;		Nothing
 29860 ;; This function is called by:
 29861 ;;		_EUSART2_Receive_ISR
 29862 ;;		_EUSART2_DefaultErrorHandler
 29863 ;; This function uses a non-reentrant model
 29864 ;;
 29865                           
 29866     123D                     _EUSART2_RxDataHandler:	
 29867                           ;psect for function _EUSART2_RxDataHandler
 29868                           
 29869     123D                     i1l13494:	
 29870                           ;incstack = 0
 29871 ;; hardware stack exceeded
 29872                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29873                           
 29874                           
 29875                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29876     123D  087C               	movf	_eusart2RxHead,w
 29877     123E  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29878     123F  0086               	movwf	6
 29879     1240  0187               	clrf	7
 29880     1241  0154               	movlb	20	; select bank20
 29881     1242  0819               	movf	25,w	;volatile
 29882     1243  0081               	movwf	1
 29883     1244                     i1l13496:
 29884     1244  3001               	movlw	1
 29885     1245  00F0               	movwf	??_EUSART2_RxDataHandler
 29886     1246  0870               	movf	??_EUSART2_RxDataHandler,w
 29887     1247  07FC               	addwf	_eusart2RxHead,f	;volatile
 29888     1248                     i1l13498:
 29889                           
 29890                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29891     1248  3008               	movlw	8
 29892     1249  027C               	subwf	_eusart2RxHead,w	;volatile
 29893     124A  1C03               	skipc
 29894     124B  2A4D               	goto	u1045_21
 29895     124C  2A4E               	goto	u1045_20
 29896     124D                     u1045_21:
 29897     124D  2A4F               	goto	i1l13502
 29898     124E                     u1045_20:
 29899     124E                     i1l13500:
 29900                           
 29901                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29902     124E  01FC               	clrf	_eusart2RxHead	;volatile
 29903     124F                     i1l13502:
 29904                           
 29905                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29906     124F  3001               	movlw	1
 29907     1250  00F0               	movwf	??_EUSART2_RxDataHandler
 29908     1251  0870               	movf	??_EUSART2_RxDataHandler,w
 29909     1252  0140               	movlb	0	; select bank0
 29910     1253  07DF               	addwf	_eusart2RxCount,f	;volatile
 29911     1254                     i1l1096:
 29912     1254  0008               	return
 29913     1255                     __end_of_EUSART2_RxDataHandler:
 29914                           
 29915                           	psect	text175
 29916     1E9E                     __ptext175:	
 29917 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29918 ;; Defined at:
 29919 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29920 ;; Parameters:    Size  Location     Type
 29921 ;;		None
 29922 ;; Auto vars:     Size  Location     Type
 29923 ;;		None
 29924 ;; Return value:  Size  Location     Type
 29925 ;;                  1    wreg      void 
 29926 ;; Registers used:
 29927 ;;		None
 29928 ;; Tracked objects:
 29929 ;;		On entry : 0/0
 29930 ;;		On exit  : 0/0
 29931 ;;		Unchanged: 0/0
 29932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29937 ;;Total ram usage:        0 bytes
 29938 ;; Hardware stack levels used: 1
 29939 ;; This function calls:
 29940 ;;		Nothing
 29941 ;; This function is called by:
 29942 ;;		_EUSART1_Initialize
 29943 ;;		_EUSART1_Receive_ISR
 29944 ;; This function uses a non-reentrant model
 29945 ;;
 29946                           
 29947     1E9E                     _EUSART1_DefaultOverrunErrorHandler:	
 29948                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29949                           
 29950     1E9E                     i1l9246:	
 29951                           ;incstack = 0
 29952 ;; hardware stack exceeded
 29953                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29954                           
 29955                           
 29956                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29957     1E9E  0142               	movlb	2	; select bank2
 29958     1E9F  121D               	bcf	29,4	;volatile
 29959                           
 29960                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29961     1EA0  161D               	bsf	29,4	;volatile
 29962     1EA1                     i1l1252:
 29963     1EA1  0008               	return
 29964     1EA2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29965                           
 29966                           	psect	text176
 29967     1E76                     __ptext176:	
 29968 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29969 ;; Defined at:
 29970 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29971 ;; Parameters:    Size  Location     Type
 29972 ;;		None
 29973 ;; Auto vars:     Size  Location     Type
 29974 ;;		None
 29975 ;; Return value:  Size  Location     Type
 29976 ;;                  1    wreg      void 
 29977 ;; Registers used:
 29978 ;;		None
 29979 ;; Tracked objects:
 29980 ;;		On entry : 0/0
 29981 ;;		On exit  : 0/0
 29982 ;;		Unchanged: 0/0
 29983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29988 ;;Total ram usage:        0 bytes
 29989 ;; Hardware stack levels used: 1
 29990 ;; This function calls:
 29991 ;;		Nothing
 29992 ;; This function is called by:
 29993 ;;		_EUSART1_Initialize
 29994 ;;		_EUSART1_Receive_ISR
 29995 ;; This function uses a non-reentrant model
 29996 ;;
 29997                           
 29998     1E76                     _EUSART1_DefaultFramingErrorHandler:	
 29999                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 30000                           
 30001     1E76                     i1l1249:	
 30002                           ;incstack = 0
 30003 ;; hardware stack exceeded
 30004                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 30005                           
 30006     1E76  0008               	return
 30007     1E77                     __end_of_EUSART1_DefaultFramingErrorHandler:
 30008                           
 30009                           	psect	text177
 30010     1E9A                     __ptext177:	
 30011 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 30012 ;; Defined at:
 30013 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 30014 ;; Parameters:    Size  Location     Type
 30015 ;;		None
 30016 ;; Auto vars:     Size  Location     Type
 30017 ;;		None
 30018 ;; Return value:  Size  Location     Type
 30019 ;;                  1    wreg      void 
 30020 ;; Registers used:
 30021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30022 ;; Tracked objects:
 30023 ;;		On entry : 0/0
 30024 ;;		On exit  : 0/0
 30025 ;;		Unchanged: 0/0
 30026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30031 ;;Total ram usage:        0 bytes
 30032 ;; Hardware stack levels used: 1
 30033 ;; Hardware stack levels required when called: 1
 30034 ;; This function calls:
 30035 ;;		_EUSART1_RxDataHandler
 30036 ;; This function is called by:
 30037 ;;		_EUSART1_Initialize
 30038 ;;		_EUSART1_Receive_ISR
 30039 ;; This function uses a non-reentrant model
 30040 ;;
 30041                           
 30042     1E9A                     _EUSART1_DefaultErrorHandler:	
 30043                           ;psect for function _EUSART1_DefaultErrorHandler
 30044                           
 30045     1E9A                     i1l9248:	
 30046                           ;incstack = 0
 30047 ;; hardware stack exceeded
 30048                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 30049                           
 30050                           
 30051                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 30052     1E9A  3193  2300  319E   	fcall	_EUSART1_RxDataHandler
 30053     1E9D                     i1l1255:
 30054     1E9D  0008               	return
 30055     1E9E                     __end_of_EUSART1_DefaultErrorHandler:
 30056                           
 30057                           	psect	text178
 30058     1300                     __ptext178:	
 30059 ;; *************** function _EUSART1_RxDataHandler *****************
 30060 ;; Defined at:
 30061 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 30062 ;; Parameters:    Size  Location     Type
 30063 ;;		None
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;		None
 30066 ;; Return value:  Size  Location     Type
 30067 ;;                  1    wreg      void 
 30068 ;; Registers used:
 30069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30070 ;; Tracked objects:
 30071 ;;		On entry : 0/0
 30072 ;;		On exit  : 0/0
 30073 ;;		Unchanged: 0/0
 30074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30079 ;;Total ram usage:        1 bytes
 30080 ;; Hardware stack levels used: 1
 30081 ;; This function calls:
 30082 ;;		Nothing
 30083 ;; This function is called by:
 30084 ;;		_EUSART1_Receive_ISR
 30085 ;;		_EUSART1_DefaultErrorHandler
 30086 ;; This function uses a non-reentrant model
 30087 ;;
 30088                           
 30089     1300                     _EUSART1_RxDataHandler:	
 30090                           ;psect for function _EUSART1_RxDataHandler
 30091                           
 30092     1300                     i1l8974:	
 30093                           ;incstack = 0
 30094 ;; hardware stack exceeded
 30095                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 30096                           
 30097                           
 30098                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 30099     1300  0140               	movlb	0	; select bank0
 30100     1301  085A               	movf	_eusart1RxHead,w
 30101     1302  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 30102     1303  0086               	movwf	6
 30103     1304  3001               	movlw	1	; select bank2/3
 30104     1305  0087               	movwf	7
 30105     1306  0142               	movlb	2	; select bank2
 30106     1307  0819               	movf	25,w	;volatile
 30107     1308  0081               	movwf	1
 30108     1309                     i1l8976:
 30109     1309  3001               	movlw	1
 30110     130A  00F0               	movwf	??_EUSART1_RxDataHandler
 30111     130B  0870               	movf	??_EUSART1_RxDataHandler,w
 30112     130C  0140               	movlb	0	; select bank0
 30113     130D  07DA               	addwf	_eusart1RxHead,f	;volatile
 30114     130E                     i1l8978:
 30115                           
 30116                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 30117     130E  3008               	movlw	8
 30118     130F  025A               	subwf	_eusart1RxHead,w	;volatile
 30119     1310  1C03               	skipc
 30120     1311  2B13               	goto	u567_21
 30121     1312  2B14               	goto	u567_20
 30122     1313                     u567_21:
 30123     1313  2B15               	goto	i1l8982
 30124     1314                     u567_20:
 30125     1314                     i1l8980:
 30126                           
 30127                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 30128     1314  01DA               	clrf	_eusart1RxHead	;volatile
 30129     1315                     i1l8982:
 30130                           
 30131                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 30132     1315  3001               	movlw	1
 30133     1316  00F0               	movwf	??_EUSART1_RxDataHandler
 30134     1317  0870               	movf	??_EUSART1_RxDataHandler,w
 30135     1318  07D8               	addwf	_eusart1RxCount,f	;volatile
 30136     1319                     i1l1246:
 30137     1319  0008               	return
 30138     131A                     __end_of_EUSART1_RxDataHandler:
 30139     007E                     btemp	set	126	;btemp
 30140     007E                     int$flags	set	126
 30141     007E                     wtemp0	set	126
 30142                           
 30143                           	psect	idloc
 30144                           
 30145                           ;Config register IDLOC0 @ 0x8000
 30146                           ;	unspecified, using default values
 30147     8000                     	org	32768
 30148     8000  3FFF               	dw	16383
 30149                           
 30150                           ;Config register IDLOC1 @ 0x8001
 30151                           ;	unspecified, using default values
 30152     8001                     	org	32769
 30153     8001  3FFF               	dw	16383
 30154                           
 30155                           ;Config register IDLOC2 @ 0x8002
 30156                           ;	unspecified, using default values
 30157     8002                     	org	32770
 30158     8002  3FFF               	dw	16383
 30159                           
 30160                           ;Config register IDLOC3 @ 0x8003
 30161                           ;	unspecified, using default values
 30162     8003                     	org	32771
 30163     8003  3FFF               	dw	16383
 30164                           
 30165                           	psect	config
 30166                           
 30167                           ;Config register CONFIG1 @ 0x8007
 30168                           ;	External Oscillator mode selection bits
 30169                           ;	FEXTOSC = OFF, Oscillator not enabled
 30170                           ;	Power-up default value for COSC bits
 30171                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30172                           ;	Clock Out Enable bit
 30173                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30174                           ;	Clock Switch Enable bit
 30175                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30176                           ;	Fail-Safe Clock Monitor Enable bit
 30177                           ;	FCMEN = ON, FSCM timer enabled
 30178     8007                     	org	32775
 30179     8007  3FEC               	dw	16364
 30180                           
 30181                           ;Config register CONFIG2 @ 0x8008
 30182                           ;	Master Clear Enable bit
 30183                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30184                           ;	Power-up Timer Enable bit
 30185                           ;	PWRTS = OFF, PWRT disabled
 30186                           ;	Low-Power BOR enable bit
 30187                           ;	LPBOREN = OFF, ULPBOR disabled
 30188                           ;	Brown-out reset enable bits
 30189                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30190                           ;	Brown-out Reset Voltage Selection
 30191                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30192                           ;	Zero-cross detect disable
 30193                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30194                           ;	Peripheral Pin Select one-way control
 30195                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30196                           ;	Stack Overflow/Underflow Reset Enable bit
 30197                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30198     8008                     	org	32776
 30199     8008  3FFF               	dw	16383
 30200                           
 30201                           ;Config register CONFIG3 @ 0x8009
 30202                           ;	WDT Period Select bits
 30203                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30204                           ;	WDT operating mode
 30205                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30206                           ;	WDT Window Select bits
 30207                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30208                           ;	WDT input clock selector
 30209                           ;	WDTCCS = SC, Software Control
 30210     8009                     	org	32777
 30211     8009  3F9F               	dw	16287
 30212                           
 30213                           ;Config register CONFIG4 @ 0x800A
 30214                           ;	Boot Block Size Selection bits
 30215                           ;	BBSIZE = BB512, 512 words boot block size
 30216                           ;	Boot Block Enable bit
 30217                           ;	BBEN = OFF, Boot Block disabled
 30218                           ;	SAF Enable bit
 30219                           ;	SAFEN = OFF, SAF disabled
 30220                           ;	Application Block Write Protection bit
 30221                           ;	WRTAPP = OFF, Application Block not write protected
 30222                           ;	Boot Block Write Protection bit
 30223                           ;	WRTB = OFF, Boot Block not write protected
 30224                           ;	Configuration Register Write Protection bit
 30225                           ;	WRTC = OFF, Configuration Register not write protected
 30226                           ;	Data EEPROM write protection bit
 30227                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30228                           ;	Storage Area Flash Write Protection bit
 30229                           ;	WRTSAF = OFF, SAF not write protected
 30230                           ;	Low Voltage Programming Enable bit
 30231                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30232     800A                     	org	32778
 30233     800A  3FFF               	dw	16383
 30234                           
 30235                           ;Config register CONFIG5 @ 0x800B
 30236                           ;	UserNVM Program memory code protection bit
 30237                           ;	CP = OFF, UserNVM code protection disabled
 30238     800B                     	org	32779
 30239     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         458
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      1      80
    BANK2            80      0      77
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5433	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_DO_TX$5433$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5438	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5432	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_readNBytes@data	PTR void  size(1) Largest target is 1
		 -> readRegisters@dataBuffer(BANK0[1]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1239@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1250@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    readRegisters@dataBuffer	PTR unsigned char  size(1) Largest target is 8
		 -> getManufacturerID@databuffer(COMMON[2]), getTemp@databuffer(COMMON[2]), readRegister@regVal(BANK0[1]), readWakeUpAndSleepData@wakeupRegisterRead(COMMON[8]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 

    S1020$data	PTR unsigned char  size(2) Largest target is 0

    S231$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    S231$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S231$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S231$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S231$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S231$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    S231$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S231$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S231$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S231$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3148$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    S3148$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    S360$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S360$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S360$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S360$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S360$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S360$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S360$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S360$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S674$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S674$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1256@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1262@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1381->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1381->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _readRegisters->_i2c_readNBytes
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _wr2RegCompleteHandler@i2c1_master_example$F1262->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1256->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1273->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1250->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1239->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcTemperature
    _TMAG5273_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_readRegisters
    _readRegisters->_i2c_readNBytes
    _I2C1_MasterRead->_I2C1_MasterOperation
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 11669317
                                             41 BANK0      1     1      0
                                              0 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 8578042
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1187180
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1188916
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  384762
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  375957
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  377382
                                             15 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  367073
                                             14 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                             8     4      4   57495
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  376113
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  376113
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  378715
                                             14 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10046
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1381 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383668
                                             23 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         2     0      2  376082
                                             21 BANK0      2     0      2
           _TMAG5273_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcTemperature                             9     7      2  375947
                                             13 BANK0      8     6      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375811
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1381                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 2633367
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 2625633
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  367039
                                             12 BANK0      2     2      0
                      _readRegisters
 ---------------------------------------------------------------------------------
 (4) _readRegisters                                        5     3      2  366943
                                              7 BANK0      5     3      2
                     _i2c_readNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_readNBytes                                       4     1      3  366009
                                             11 COMMON     1     1      0
                                              4 BANK0      3     0      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1262     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1256     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1273   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1250     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1239     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (17) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _readRegisters
           _i2c_readNBytes
             _I2C1_Close
             _I2C1_MasterRead
               _I2C1_MasterOperation
             _I2C1_Open
             _I2C1_SetBuffer
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1381 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1381 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 20 12:42:06 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1F00  
                                                       l35 16A3  
                                                       l44 0C9A  
                                                       l53 115C  
                                                       l29 1675  
                                                       l56 116D  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 0031  
                                                      l121 1F11  
                                                      l202 1F1D  
                                                      l130 1191  
                                                      l211 10B3  
                                                      l124 12E6  
                                                      l205 1F17  
                                                      l133 14D6  
                                                      l221 083B  
                                                      l214 136A  
                                                      l230 085D  
                                                      l127 16D1  
                                                      l208 1EFA  
                                                      l224 083D  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 10E5  
                                                      l510 172F  
                                                      l193 0FFF  
                                                      l522 10F6  
                                                      l187 065B  
                                                      l196 1095  
                                                      l534 0BAE  
                                                      l199 1760  
                                                      l537 1107  
                                                      l561 1284  
                                                      l730 1129  
                                                      l546 0A8E  
                                                      l802 1010  
                                                      l811 1005  
                                                      l549 1118  
                                                      l733 113A  
                                                      l805 1013  
                                                      l742 129C  
                                                      l814 1008  
                                                      l822 1034  
                                                      l807 1015  
                                                      l736 114B  
                                                      l816 100A  
                                                      l832 1647  
                                                      l921 123C  
                                                      l825 1036  
                                                      l842 1468  
                                                      l739 10D4  
                                                      l579 13E0  
                                                      l827 1037  
                                                      l819 102D  
                                                      l835 0BFC  
                                                      l908 0F73  
                                                      l933 0B1A  
                                                      l829 1038  
                                                      l926 134E  
                                                      l783 1E99  
                                                      l855 0AD2  
                                                      l792 1FCB  
                                                      l848 17C9  
                                                      l952 12B4  
                                                      l786 102C  
                                                      l795 1FD5  
                                                      l964 1044  
                                                      l789 1FC1  
                                                      l973 0EE9  
                                                      l957 1386  
                                                      l798 1F82  
                                                      l886 16FF  
                                                      l974 0EE5  
                                                      l879 07FE  
                                                      l976 0EEB  
                                                      l897 15ED  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11FA  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F48  
                           _EUSART2_SetFramingErrorHandler 1F42  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1EDD  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 1F4D  
                                                     l1120 1F53  
                                                     l1201 1FAE  
                                                     l1114 1F41  
                                                     l1051 09C9  
                                                     l1220 1533  
                                                     l1060 1EB5  
                                                     l1204 1EB9  
                                                     l1108 1F47  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1F59  
                                                     l1070 14FC  
                                                     l1214 1571  
                                                     l1223 154A  
                                                     l1057 1FA5  
                                                     l2130 10C3  
                                                     l1075 1503  
                                                     l1219 152A  
                                                     l1076 150C  
                                                     l2220 07A0  
                                                     l1261 1F2F  
                                                     l2117 0C4A  
                                                     l1270 1F35  
                                                     l2046 04FC  
                                                     l1079 1523  
                                                     l2127 11E3  
                                            ?_RN487X_Delay 0074  
                                                     l2136 1087  
                                                     l1264 1F23  
                                                     l1352 120F  
                                                     l2240 0373  
                                                     l2216 079D  
                                                     l2057 0563  
                                                     l1258 1F29  
                                                     l1267 1F3B  
                                                     l1195 098B  
                                                     l1355 1FDF  
                                                     l1443 0B63  
                                                     l2139 1020  
                                                     l2332 094D  
                                                     l1454 1F5F  
                                                     l1358 1FE9  
                                                     l2246 0376  
                                                     l2350 0910  
                                                     l2326 0A08  
                                                     l3313 12CD  
                                                     l1802 1EC3  
                                                     l1474 11A5  
                                                     l2442 1225  
                                                     l1811 0D23  
                                                     l3307 1333  
                                                     l3332 13A4  
                                                     l1492 1EFF  
                                                     l2452 0D92  
                                                     l1901 1E7B  
                                                     l1805 1F9C  
                                                     l1750 126C  
                                                     l1814 0D3F  
                                                     l3334 13C1  
                                                     l3326 0E8F  
                                                     l1742 1FB7  
                                                     l2550 0DE5  
                                                     l2462 04BC  
                                                     l1911 105E  
                                                     l2455 0D91  
                                                     l1920 1EBE  
                                                     l1808 1F7A  
                                                     l2640 0E3A  
                                                     l1745 17FE  
                                                     l1914 1E81  
                                                     l1762 1EF0  
                                                     l1746 17FF  
                                                     l1923 1E8A  
                                                     l1827 0A25  
                                                     l3339 0CEC  
                                                     l2547 0DE6  
                                                     l1932 1E87  
                                                     l1772 1FF4  
                                                     l1828 0A4B  
                                                     l1756 1401  
                                                     l2580 11CE  
                                                     l2636 1F8A  
                                                     l1917 1E93  
                                                     l1941 1EB1  
                                                     l1845 161A  
                                                     l1935 1E8D  
                                                     l1839 1F72  
                                                     l1863 1EC8  
                                                     l1759 1EF5  
                                                     l1944 1EAD  
                                                     l1872 1ED7  
                                                     l2672 14B0  
                                                     l1769 1079  
                                                     l1929 1E90  
                                                     l1881 1EE6  
                                                     l2681 12FF  
                                                     l1962 1E7E  
                                                     l1938 1F05  
                                                     l1866 1ECD  
                                                     l1890 1599  
                                                     l1778 1FFF  
                                                     l2690 106B  
                                                     l1875 1EDC  
                                                     l1795 1051  
                                                     l1884 1EEB  
                                                     l1972 1F0B  
                                                     l1980 11F9  
                                                     l2684 11B9  
                                                     l1789 148C  
                                                     l1965 1E96  
                                                     l1869 1ED2  
                                                     l2693 13A3  
                                                     l1878 1EE1  
                                                     l2678 0825  
                                                     l1959 1E84  
                                                     l1799 15C2  
                                                     l1968 1F06  
                                                     l1898 1E79  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9620 1470  
                                                     u9700 1051  
                                                     u9621 146F  
                                                     u9701 1050  
                                                     u9630 1072  
                                                     u9710 1057  
                                                     u9631 1071  
                                                     u9711 1056  
                                                     u9640 0CF5  
                                                     u9720 13EA  
                                                     u9800 151E  
                                                     u9641 0CF4  
                                                     u9721 13E9  
                                                     u9801 151D  
                                                     u9650 0D3C  
                                                     u9730 13F2  
                                                     u9810 1551  
                                                     u9651 0D3B  
                                                     u9731 13F1  
                                                     u9811 1550  
                                                     u9660 0A20  
                                                     u9740 17D2  
                                                     u9820 1568  
                                                     u9900 1333  
                                                     u9661 0A1F  
                                                     u9741 17D1  
                                                     u9821 1567  
                                                     u9901 1332  
                                                     u9750 125C  
                                                     u9670 1F0B  
                                                     u9830 152A  
                                                     u9910 16E3  
                                                     u9751 125B  
                                                     u9671 1F0A  
                                                     u9831 1529  
                                                     u9911 16E2  
                                                     u9680 15A2  
                                                     u9840 152F  
                                                     u9760 14DD  
                                                     u9920 16FF  
                                                     u9681 15A1  
                                                     u9841 152E  
                                                     u9761 14DC  
                                                     u9921 16FE  
                                                     u9690 15AA  
                                                     u9850 1545  
                                                     u9770 14F3  
                                                     u9930 15E0  
                                                     u9691 15A9  
                                                     u9851 1544  
                                                     u9771 14F2  
                                                     u9931 15DF  
                                                     u9860 13CC  
                                                     u9780 1503  
                                                     u9940 15EC  
                                                     u9861 13CB  
                                                     u9781 1502  
                                                     u9941 15EB  
                                                     u9870 13E0  
                                                     u9790 1508  
                                                     u9950 0F12  
                                                     u9871 13DF  
                                                     u9791 1507  
                                                     u9951 0F11  
                                                     u9880 12C7  
                                                     u9960 0F18  
                                                     u9881 12C6  
                                                     u9961 0F17  
                                                     u9890 11F9  
                                                     u9970 0F21  
                                                     u9891 11F8  
                                                     u9971 0F20  
                                                     u9980 0F27  
                                                     u9981 0F26  
                                                     u9990 0CA7  
                                                     u9991 0CA6  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1524  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FD  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C3  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 11A6  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16D2  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09CA  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 1424  
                              __end_of_RN487X_EnterCmdMode 123D  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08D4  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 094E  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 11A6  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002E  
                                   _i2c_write1ByteRegister 1700  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1FE0  
                                                    l13000 155E  
                                                    l13010 156E  
                                                    l13002 1562  
                                                    l13020 152F  
                                                    l13012 1570  
                                                    l13004 1568  
                                                    l13100 15E2  
                                                    l13030 1546  
                                                    l13022 1534  
                                                    l13006 1569  
                                                    l13102 15E6  
                                                    l13110 0EED  
                                                    l13200 0BA7  
                                                    l13040 13D5  
                                                    l13024 153B  
                                                    l13032 1548  
                                                    l13016 1524  
                                                    l13008 156B  
                                                    l13104 15EC  
                                                    l13120 0F18  
                                                    l13112 0EF7  
                                                    l14000 0923  
                                                    l13202 0BAD  
                                                    l13042 13D8  
                                                    l13034 13C3  
                                                    l13210 1085  
                                                    l13026 153F  
                                                    l13018 1524  
                                                    l13050 1FC2  
                                                    l13122 0F1B  
                                                    l13114 0F01  
                                                    l14010 094A  
                                                    l14002 092C  
                                                    l13036 13C3  
                                                    l13028 1545  
                                                    l13044 1021  
                                                    l13060 12C7  
                                                    l13124 0F21  
                                                    l13116 0F0C  
                                                    l13108 0EEC  
                                                    l13300 0E3B  
                                                    l14020 1224  
                                                    l14100 03CB  
                                                    l14004 0934  
                                                    l13038 13CC  
                                                    l13142 10B6  
                                                    l13206 107C  
                                                    l13054 12B5  
                                                    l13070 11E4  
                                                    l13046 1FB8  
                                                    l13214 1226  
                                                    l13126 0F27  
                                                    l13118 0F12  
                                                    l13134 0F2B  
                                                    l13230 0AE3  
                                                    l13222 0AD3  
                                                    l13310 0E7E  
                                                    l13302 0E41  
                                                    l14014 1210  
                                                    l14102 03D0  
                                                    l14030 0D53  
                                                    l14006 0939  
                                                    l12520 147F  
                                                    l12600 10CC  
                                                    l13064 1FF5  
                                                    l13208 107D  
                                                    l13056 12BA  
                                                    l13072 11E5  
                                                    l13080 16D3  
                                                    l13216 122D  
                                                    l13128 0F29  
                                                    l13136 0F33  
                                                    l13240 0AF4  
                                                    l13232 0AE7  
                                                    l13224 0ADA  
                                                    l13160 0CCE  
                                                    l13152 0CAA  
                                                    l13312 0E84  
                                                    l13304 0E4E  
                                                    l13400 14AF  
                                                    l14016 1210  
                                                    l14200 046A  
                                                    l14120 03F0  
                                                    l14104 03D5  
                                                    l14032 0D61  
                                                    l14024 0D40  
                                                    l13320 1701  
                                                    l14008 0943  
                                                    l12530 1E88  
                                                    l12522 106D  
                                                    l12602 10D3  
                                                    l13066 1EEC  
                                                    l13058 12BE  
                                                    l13074 11ED  
                                                    l13090 15C3  
                                                    l13082 16D5  
                                                    l13218 1233  
                                                    l13138 0F72  
                                                    l13250 0B03  
                                                    l13242 0AF7  
                                                    l13234 0AEB  
                                                    l13226 0ADE  
                                                    l13170 13AF  
                                                    l13162 0CDE  
                                                    l13154 0CB6  
                                                    l13146 0C9B  
                                                    l13306 0E64  
                                                    l13314 0E8D  
                                                    l14018 1216  
                                                    l14202 046F  
                                                    l14130 03FC  
                                                    l14122 03F5  
                                                    l14106 03DA  
                                                    l14114 03E1  
                                                    l14034 0D66  
                                                    l14042 0D6D  
                                                    l14026 0D40  
                                                    l13410 11A6  
                                                    l13330 1727  
                                                    l13322 170A  
                                                    l15010 04BD  
                                                    l12532 1E8B  
                                                    l12524 1072  
                                                    l12516 146A  
                                                    l12540 10E4  
                                                    l12612 1F00  
                                                    l12620 1EC7  
                                                    l13332 114C  
                                                    l13420 164A  
                                                    l13340 116C  
                                                    l13092 15C5  
                                                    l13084 16E3  
                                                    l13260 0B11  
                                                    l13252 0B05  
                                                    l13244 0AF9  
                                                    l13236 0AEE  
                                                    l13228 0AE1  
                                                    l13076 131B  
                                                    l13172 13BF  
                                                    l13156 0CBF  
                                                    l13148 0CA7  
                                                    l13308 0E65  
                                                    l14300 0DD7  
                                                    l14220 048F  
                                                    l14204 0474  
                                                    l14212 047B  
                                                    l14132 0401  
                                                    l14116 03E6  
                                                    l14108 03DF  
                                                    l14044 0D72  
                                                    l14052 0D79  
                                                    l14036 0D6B  
                                                    l14028 0D46  
                                                    l13412 11A8  
                                                    l13404 1F83  
                                                    l13324 1713  
                                                    l15020 04D4  
                                                    l15012 04C9  
                                                    l12526 1078  
                                                    l12518 1470  
                                                    l12606 1285  
                                                    l12534 1EAA  
                                                    l12710 0CFE  
                                                    l12702 0CF6  
                                                    l12630 1ED3  
                                                    l13190 0B90  
                                                    l13182 0B6C  
                                                    l13334 115B  
                                                    l13422 164A  
                                                    l13430 1678  
                                                    l13094 15CF  
                                                    l13086 16F5  
                                                    l13270 1345  
                                                    l13262 0B17  
                                                    l13254 0B09  
                                                    l13246 0AFB  
                                                    l13238 0AF0  
                                                    l13350 0A61  
                                                    l13078 131D  
                                                    l13166 13A4  
                                                    l13158 0CC8  
                                                    l13510 1F2A  
                                                    l14310 0DE3  
                                                    l14230 049B  
                                                    l14214 0480  
                                                    l14206 0479  
                                                    l14150 0421  
                                                    l14134 0406  
                                                    l14142 040D  
                                                    l14118 03EB  
                                                    l14054 0D7E  
                                                    l14062 0D85  
                                                    l14046 0D77  
                                                    l13414 11AA  
                                                    l13406 1F89  
                                                    l13326 171B  
                                                    l13318 1701  
                                                    l15030 0505  
                                                    l15022 04DC  
                                                    l15014 04CA  
                                                    l12528 1FEA  
                                                    l12536 10D5  
                                                    l12544 10E6  
                                                    l12552 10F7  
                                                    l12560 1108  
                                                    l12608 129B  
                                                    l12640 1EAE  
                                                    l12616 1EBB  
                                                    l12720 0D31  
                                                    l12624 1EC9  
                                                    l12632 1ED6  
                                                    l12800 1EDB  
                                                    l13192 0B93  
                                                    l13184 0B76  
                                                    l13176 0B66  
                                                    l13424 1652  
                                                    l13432 1680  
                                                    l13600 0C91  
                                                    l13440 1749  
                                                    l13096 15E0  
                                                    l13088 16F9  
                                                    l13256 0B0D  
                                                    l13248 0AFF  
                                                    l14400 0596  
                                                    l13352 0A69  
                                                    l13344 0A4E  
                                                    l14320 12CE  
                                                    l13280 0BAF  
                                                    l13168 13AE  
                                                    l13512 1F1E  
                                                    l13504 1F30  
                                                    l14232 04A0  
                                                    l14240 04A7  
                                                    l14216 0485  
                                                    l14160 042D  
                                                    l14144 0412  
                                                    l14136 040B  
                                                    l14128 03F7  
                                                    l14080 038B  
                                                    l14064 0D8A  
                                                    l14056 0D83  
                                                    l13416 11B9  
                                                    l13520 0DF9  
                                                    l13328 1724  
                                                    l15040 0539  
                                                    l15032 0517  
                                                    l15024 04E4  
                                                    l15016 04CB  
                                                    l12538 10DD  
                                                    l12546 10EE  
                                                    l12554 10FF  
                                                    l12562 1110  
                                                    l12570 1283  
                                                    l12722 0D3C  
                                                    l12706 0CFA  
                                                    l12618 1EC4  
                                                    l12626 1ECC  
                                                    l12650 1EE0  
                                                    l12642 1EE2  
                                                    l13194 0B9D  
                                                    l13186 0B7F  
                                                    l13426 1663  
                                                    l13338 115D  
                                                    l13434 1691  
                                                    l13610 0F97  
                                                    l13442 174D  
                                                    l14330 16A6  
                                                    l13274 1F7B  
                                                    l13266 1334  
                                                    l13258 0B0F  
                                                    l13362 134F  
                                                    l13450 10B0  
                                                    l14410 05BC  
                                                    l14402 059B  
                                                    l13354 0A72  
                                                    l13346 0A4E  
                                                    l13602 105F  
                                                    l14322 12D0  
                                                    l13282 1447  
                                                    l13290 1795  
                                                    l13370 0A8F  
                                                    l13506 1F36  
                                                    l13514 1F5A  
                                                    l14306 0DD9  
                                                    l14242 04AC  
                                                    l14234 04A5  
                                                    l14218 048A  
                                                    l14226 0491  
                                                    l14162 0432  
                                                    l14170 0439  
                                                    l14146 0417  
                                                    l14090 03BF  
                                                    l14082 0399  
                                                    l14074 0377  
                                                    l14066 0D8F  
                                                    l13530 0E2D  
                                                    l13522 0E07  
                                                    l15050 056C  
                                                    l15042 053D  
                                                    l15034 0522  
                                                    l15026 04E6  
                                                    l15018 04CE  
                                                    l12548 10F5  
                                                    l12556 1106  
                                                    l12564 1117  
                                                    l12636 1E91  
                                                    l12724 0D3E  
                                                    l12716 0D02  
                                                    l12740 0A23  
                                                    l12732 0A09  
                                                    l12644 1EE5  
                                                    l12804 1EE7  
                                                    l12820 157B  
                                                    l12812 1572  
                                                    l12900 17D6  
                                                    l13188 0B87  
                                                    l13428 1678  
                                                    l13620 0FEC  
                                                    l13612 0FA2  
                                                    l13444 1758  
                                                    l13436 1731  
                                                    l13604 1089  
                                                    l14332 16AA  
                                                    l13268 133F  
                                                    l13364 1352  
                                                    l14420 05DF  
                                                    l14412 05C5  
                                                    l14404 05A1  
                                                    l14340 117F  
                                                    l13356 0A75  
                                                    l13348 0A58  
                                                    l14324 12D7  
                                                    l13452 1FCC  
                                                    l14500 07F0  
                                                    l13284 144C  
                                                    l13292 179D  
                                                    l13380 0AC3  
                                                    l13372 0AA4  
                                                    l13460 0EA0  
                                                    l13508 1F24  
                                                    l13700 09C2  
                                                    l14308 0DDE  
                                                    l14244 04B1  
                                                    l14228 0496  
                                                    l14172 043E  
                                                    l14164 0437  
                                                    l14148 041C  
                                                    l14156 0423  
                                                    l14092 03C4  
                                                    l14084 03A7  
                                                    l14076 0377  
                                                    l14260 11BA  
                                                    l13532 0E32  
                                                    l13540 0E39  
                                                    l13524 0E15  
                                                    l13516 0DE7  
                                                    l15052 057F  
                                                    l15044 0540  
                                                    l15036 052D  
                                                    l15028 04F6  
                                                    l12574 1119  
                                                    l12582 112A  
                                                    l12590 113B  
                                                    l12654 1E8E  
                                                    l12662 1E94  
                                                    l12718 0D25  
                                                    l12750 0A2B  
                                                    l12734 0A11  
                                                    l12806 1EE9  
                                                    l12814 1574  
                                                    l12910 17EC  
                                                    l12902 17DD  
                                                    l13198 0BA3  
                                                    l13622 0FF4  
                                                    l13614 0FC2  
                                                    l13606 0F75  
                                                    l13446 175C  
                                                    l13438 173B  
                                                    l14334 16B5  
                                                    l14318 1F0C  
                                                    l14350 14B6  
                                                    l13366 135F  
                                                    l14430 05F8  
                                                    l14422 05E8  
                                                    l14414 05CC  
                                                    l14406 05AA  
                                                    l14342 1184  
                                                    l13358 0A7D  
                                                    l14326 12E0  
                                                    l13390 1FA6  
                                                    l13286 1458  
                                                    l13294 17A0  
                                                    l13278 161B  
                                                    l13382 0ACA  
                                                    l13374 0AA8  
                                                    l13470 0ECD  
                                                    l13462 0EA6  
                                                    l13710 0950  
                                                    l13702 09C7  
                                                    l14270 0D93  
                                                    l14246 04B6  
                                                    l14190 045E  
                                                    l14174 0443  
                                                    l14158 0428  
                                                    l14094 03C9  
                                                    l14086 03B5  
                                                    l14078 037D  
                                                    l14262 11C0  
                                                    l13534 0E37  
                                                    l13526 0E23  
                                                    l13518 0DEC  
                                                    l13550 1018  
                                                    l15038 0533  
                                                    l15046 0544  
                                                    l12672 1E7C  
                                                    l12568 126D  
                                                    l12576 1121  
                                                    l12584 1132  
                                                    l12592 1143  
                                                    l12664 1E78  
                                                    l12736 0A16  
                                                    l12656 1ECE  
                                                    l12648 1EDD  
                                                    l12808 1EEA  
                                                    l12816 1577  
                                                    l12840 15A2  
                                                    l12920 17FD  
                                                    l12912 17F1  
                                                    l12904 17E2  
                                                    l13616 0FDA  
                                                    l13608 0F92  
                                                    l14336 16C0  
                                                    l14328 16A4  
                                                    l13632 1EF6  
                                                    l14360 14D0  
                                                    l14352 14B7  
                                                    l13368 1367  
                                                    l13448 10A7  
                                                    l13640 0837  
                                                    l14440 0624  
                                                    l14432 05FB  
                                                    l14424 05EF  
                                                    l14416 05D6  
                                                    l14408 05B6  
                                                    l13624 1F18  
                                                    l14344 1185  
                                                    l13288 145D  
                                                    l13296 17AF  
                                                    l13384 0ACD  
                                                    l13376 0ABA  
                                                    l13480 0EE7  
                                                    l13472 0ED3  
                                                    l13464 0EA7  
                                                    l13456 0E90  
                                                    l13720 0967  
                                                    l13712 0957  
                                                    l13800 0B50  
                                                    l14280 0DBF  
                                                    l14272 0D99  
                                                    l14248 04BB  
                                                    l14192 0463  
                                                    l14176 0448  
                                                    l14184 044F  
                                                    l14088 03BA  
                                                    l14264 11CD  
                                                    l13544 12E7  
                                                    l13560 0809  
                                                    l13528 0E28  
                                                    l15048 0553  
                                                    l12930 125F  
                                                    l12578 1128  
                                                    l12586 1139  
                                                    l12594 114A  
                                                    l12674 1EBF  
                                                    l12682 1F94  
                                                    l12690 1F73  
                                                    l12746 0A27  
                                                    l12738 0A20  
                                                    l12658 1ED1  
                                                    l12826 157F  
                                                    l12842 15AA  
                                                    l12850 1046  
                                                    l12914 17F2  
                                                    l12906 17E3  
                                                    l13618 0FE8  
                                                    l14338 16CB  
                                                    l14354 14BD  
                                                    l13642 083F  
                                                    l14450 0633  
                                                    l14442 062A  
                                                    l14434 0601  
                                                    l14426 05F1  
                                                    l14418 05D9  
                                                    l14346 118B  
                                                    l14370 1779  
                                                    l14362 1761  
                                                    l13570 1393  
                                                    l13386 1F9D  
                                                    l13298 17B4  
                                                    l13378 0AC0  
                                                    l13466 0EAC  
                                                    l13474 0ED8  
                                                    l13458 0E9B  
                                                    l13650 136B  
                                                    l13730 0980  
                                                    l13722 0969  
                                                    l13714 0960  
                                                    l13490 1F48  
                                                    l13810 0B5C  
                                                    l13802 0B53  
                                                    l14530 1206  
                                                    l14522 11FA  
                                                    l13394 148D  
                                                    l14290 0DCB  
                                                    l14274 0DA7  
                                                    l14186 0454  
                                                    l14178 044D  
                                                    l14258 11BA  
                                                    l13546 12F3  
                                                    l13562 0817  
                                                    l13554 0800  
                                                    l12932 1262  
                                                    l12924 1255  
                                                    l12668 1E7A  
                                                    l12780 15F8  
                                                    l12772 15EE  
                                                    l12676 1EC1  
                                                    l12684 1F96  
                                                    l12692 1F75  
                                                    l12756 0A2F  
                                                    l12764 1F6C  
                                                    l12844 15AD  
                                                    l12836 159A  
                                                    l12852 1049  
                                                    l12860 1058  
                                                    l12916 17F7  
                                                    l12908 17E8  
                                                    l13580 0C4D  
                                                    l13628 1F12  
                                                    l14356 14C3  
                                                    l14348 14B1  
                                                    l13644 0849  
                                                    l13636 0828  
                                                    l14452 0639  
                                                    l14444 062D  
                                                    l14436 060A  
                                                    l14428 05F6  
                                                    l14372 178E  
                                                    l14364 1765  
                                                    l14380 0684  
                                                    l13572 1393  
                                                    l13476 0EDE  
                                                    l13468 0EBA  
                                                    l13652 1371  
                                                    l13732 0982  
                                                    l13724 096B  
                                                    l13716 0963  
                                                    l13708 094E  
                                                    l13492 1F3C  
                                                    l13484 1F4E  
                                                    l13820 1FDA  
                                                    l13812 0B5F  
                                                    l13804 0B56  
                                                    l13740 1FE0  
                                                    l14532 1209  
                                                    l14524 11FD  
                                                    l13396 14AD  
                                                    l14276 0DB5  
                                                    l14268 0D93  
                                                    l14188 0459  
                                                    l13564 0818  
                                                    l13556 0800  
                                                    l13900 02C1  
                                                    l14540 0BFD  
                     __end_of_TMAG5273_GetTemperatureValue 106C  
                             _TMAG5273_GetTemperatureValue 105F  
                                                    l12870 1E7F  
                                                    l12934 1265  
                                                    l12926 125C  
                                                    l12846 1E85  
                                                    l12598 10C4  
                                                    l12774 15F1  
                                                    l12790 15FE  
                                                    l12678 1EC2  
                                                    l12686 1F9B  
                                                    l12694 1F79  
                                                    l12766 1F6E  
                                                    l12838 159D  
                                                    l12854 104C  
                                                    l12862 105A  
                                                    l12918 17FA  
                                                    l12942 1EF1  
                                                    l13590 0C70  
                                                    l13582 0C4E  
                                                    l14358 14CA  
                                                    l12950 14D7  
                                                    l13638 0829  
                                                    l14438 0611  
                                                    l14366 176E  
                                                    l14390 06ED  
                                                    l14382 0689  
                                                    l14374 065D  
                                                    l13574 1395  
                                                    l13670 102F  
                                                    l13478 0EE0  
                                                    l13662 1385  
                                                    l14470 12AE  
                                                    l13734 0983  
                                                    l13726 0972  
                                                    l13718 0965  
                                                    l13486 1F54  
                                                    l13742 1FAF  
                                                    l13822 1FDD  
                                                    l13814 0B61  
                                                    l13806 0B58  
                                                    l13750 0B1B  
                                                    l14534 120C  
                                                    l14526 1200  
                                                    l14278 0DBA  
                                                    l14286 0DC1  
                                                    l14198 0465  
                                                    l13830 11CF  
                                                    l13558 0802  
                                                    l13910 032F  
                                                    l13902 02C7  
                                                    l12936 1268  
                                                    l12928 125D  
                                                    l12784 15FA  
                                                    l12768 1F71  
                                                    l12848 1045  
                                                    l12880 13F2  
                                                    l12872 13E3  
                                                    l12864 105D  
                                                    l12856 1052  
                                                    l13592 0C78  
                                                    l13584 0C54  
                                                    l12960 14F3  
                                                    l12952 14D7  
                                                    l13648 0855  
                                                    l14456 063C  
                                                    l14368 1774  
                                                    l14392 06F1  
                                                    l14384 0694  
                                                    l14376 0667  
                                                    l13576 139F  
                                                    l13568 1387  
                                                    l13656 1373  
                                                    l14472 12B1  
                                                    l14464 129D  
                                                    l13736 0984  
                                                    l13728 0979  
                                                    l13488 1F42  
                                                    l13680 09A1  
                                                    l13672 098C  
                                                    l13744 1FB1  
                                                    l13824 1FDE  
                                                    l13816 1FD6  
                                                    l13808 0B5A  
                                                    l13760 0B2E  
                                                    l13752 0B1D  
                                                    l14528 1203  
                                                    l14536 1EFB  
                                                    l14288 0DC6  
                                                    l14296 0DCD  
                                                    l13832 11D7  
                                                    l13912 0337  
                                                    l13904 02F4  
                                                    l14560 0C3E  
                                                    l14552 0C2C  
                                                    l14544 0C06  
                                                    l12938 126B  
                                                    l12778 15F5  
                                                    l12698 0CED  
                                                    l12882 13F6  
                                                    l12874 13EA  
                                                    l12858 1057  
                                                    l13594 0C7C  
                                                    l13586 0C5A  
                                                    l12962 14F4  
                                                    l12954 14DD  
                                                    l12946 1EB2  
                                                    l14394 06FA  
                                                    l14386 06AB  
                                                    l14378 0672  
                                                    l13666 100B  
                                                    l14482 1E97  
                                                    l13658 1381  
                                                    l14490 1041  
                                                    l14466 12A3  
                                                    l13738 0989  
                                                    l13690 09B0  
                                                    l13682 09A3  
                                                    l13674 098E  
                                                    l13746 1FB3  
                                                    l13818 1FD9  
                                                    l13770 0B34  
                                                    l13762 0B30  
                                                    l13754 0B1F  
                                                    l13826 1192  
                                                    l14298 0DD2  
                                                    l13834 11E0  
                                                    l13914 033D  
                                                    l13906 02FC  
                                                    l13850 00E5  
                                                    l13842 00AA  
                                                    l13930 08EF  
                                                    l13922 08D6  
                                                    l12868 1E82  
                                                    l12884 13F9  
                                                    l12876 13EB  
                                                    l12892 17CB  
                                                    l13596 0C85  
                                                    l13588 0C69  
                                                    l12980 1514  
                                                    l12972 14FD  
                                                    l12964 14F6  
                                                    l12956 14E9  
                                                    l14396 0592  
                                                    l14388 06BD  
                                                    l13668 1000  
                                                    l14492 1043  
                                                    l14468 12A9  
                                                    l13692 09B7  
                                                    l13684 09A5  
                                                    l13676 0995  
                                                    l13748 1FB6  
                                                    l13780 0B3A  
                                                    l13772 0B35  
                                                    l13764 0B31  
                                                    l13756 0B2A  
                                                    l13828 11A0  
                                                    l13916 036B  
                                                    l13908 0302  
                                                    l13860 012C  
                                                    l13852 00ED  
                                                    l13844 00AA  
                                                    l13932 08F7  
                                                    l13924 08D6  
                                                    l14564 0C47  
                                                    l14556 0C35  
                                                    l14548 0C23  
                                                    l12798 1ED8  
                                                    l12886 13FC  
                                                    l12878 13ED  
                                                    l12894 17D2  
                                                    l13598 0C8D  
                                                    l12982 1518  
                                                    l12974 14FD  
                                                    l12966 14F9  
                                                    l12958 14ED  
                                                    l12990 1EB6  
                                                    l14398 0593  
                                                    l14486 1039  
                                                    l14478 12B3  
                                                    l13694 09BE  
                                                    l13686 09A7  
                                                    l13678 099E  
                                                    l13790 0B44  
                                                    l13782 0B3C  
                                                    l13774 0B36  
                                                    l13766 0B32  
                                                    l13758 0B2C  
                                                    l13838 11E2  
                                                    l13870 019B  
                                                    l13862 0158  
                                                    l13854 00F2  
                                                    l13918 0373  
                                                    l13846 00B5  
                                                    l13950 072C  
                                                    l13942 0708  
                                                    l13934 08FC  
                                                    l13926 08E1  
                                                    l12888 13FF  
                                                    l12896 17D4  
                                                    l12984 151E  
                                                    l12976 1508  
                                                    l12968 14FB  
                                                    l14496 07A1  
                                                    l14488 1039  
                                                    l13696 09C0  
                                                    l13688 09A9  
                                                    l13792 0B45  
                                                    l13784 0B3E  
                                                    l13776 0B37  
                                                    l13768 0B33  
                                                    l13880 0208  
                                                    l13872 01A1  
                                                    l13864 0160  
                                                    l13856 011E  
                                                    l13848 00BA  
                                                    l13960 075C  
                                                    l13952 0734  
                                                    l13944 0708  
                                                    l13936 0906  
                                                    l13928 08E6  
                                                    l12898 17D5  
                                                    l12986 151F  
                                                    l12978 150D  
                                                    l12994 154B  
                                                    l14498 07E7  
                                                    l13698 09C1  
                                                    l13794 0B46  
                                                    l13786 0B40  
                                                    l13778 0B38  
                                                    l13890 0251  
                                                    l13882 0210  
                                                    l13874 01CD  
                                                    l13866 0166  
                                                    l13858 0126  
                                                    l13962 0771  
                                                    l13954 0739  
                                                    l13970 079D  
                                                    l13946 0713  
                                                    l13938 090D  
                                                    l12988 1521  
                                                    l12996 154B  
                                                    l13796 0B47  
                                                    l13788 0B42  
                                                    l13892 027F  
                                                    l13884 0216  
                                                    l13876 01D5  
                                                    l13868 0193  
                                                    l13964 0779  
                                                    l13956 074E  
                                                    l13948 0718  
                                                    l13980 09DC  
                                                    l16630 0A3D  
                                                    l12998 1551  
                                                    l13798 0B4E  
                                                    l13894 0287  
                                                    l13886 0243  
                                                    l13878 01DB  
                                                    l13966 077F  
                                                    l13958 0756  
                                                    l13990 0A05  
                                                    l13982 09E6  
                                                    l13974 09CC  
                                                    l16632 0D15  
                                                    l13896 028D  
                                                    l13888 024B  
                                                    l13968 0795  
                                                    l13984 09EE  
                                                    l13976 09CC  
                                                    l16634 160C  
                                                    l16626 0644  
                                                    l13898 02B9  
                                                    l13986 09F3  
                                                    l13978 09D7  
                                                    l13994 0913  
                                                    l16628 1591  
                                                    l13988 09FE  
                                                    l13996 0913  
                                                    l13998 091E  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                                           _i2c_readNBytes 13C2  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0CBF  
                                                    u10001 0CBE  
                                                    u10010 0CC8  
                                                    u10011 0CC7  
                                                    u10100 0ADE  
                                                    u10020 0CCE  
                                                    u10101 0ADD  
                                                    u10021 0CCD  
                                                    u10110 0AEB  
                                                    u10030 0CDE  
                                                    u10111 0AEA  
                                                    u10031 0CDD  
                                                    u10120 144C  
                                                    u10040 13AE  
                                                    u11000 03BF  
                                                    u10200 172F  
                                                    u10121 144B  
                                                    u10041 13AD  
                                                    u11001 03BE  
                                                    u10201 172E  
                                                    u10210 1159  
                                                    u10130 145D  
                                                    u10050 13BF  
                                                    u11010 03C4  
                                                    u10211 1157  
                                                    u10131 145C  
                                                    u10051 13BE  
                                                    u11011 03C3  
                                                    u10060 0B76  
                                                    u10220 115A  
                                                    u10300 1FA5  
                                                    u10140 17C9  
                                                    u11100 03F5  
                                                    u11020 03C9  
                                                    u10061 0B75  
                                                    u10141 17C8  
                                                    u11101 03F4  
                                                    u11021 03C8  
                                                    u10070 0B9D  
                                                    u10230 116A  
                                                    u10310 1FAD  
                                                    u10150 0E41  
                                                    u11110 03FC  
                                                    u11030 03D0  
                                                    u10071 0B9C  
                                                    u10231 1168  
                                                    u10311 1FAB  
                                                    u10151 0E40  
                                                    u11111 03FB  
                                                    u11031 03CF  
                                                    u10080 0BA2  
                                                    u10240 116B  
                                                    u10320 1FAE  
                                                    u10160 0E64  
                                                    u11200 042D  
                                                    u11120 0401  
                                                    u11040 03D5  
                                                    u10081 0BA1  
                                                    u10145 17C5  
                                                    u10161 0E63  
                                                    u11201 042C  
                                                    u11121 0400  
                                                    u11041 03D4  
                                                    u10090 0BAD  
                                                    u10250 0A58  
                                                    u10170 0E84  
                                                    u10410 0EA0  
                                                    u11210 0432  
                                                    u11130 0406  
                                                    u11050 03DA  
                                                    u10091 0BAC  
                                                    u10251 0A57  
                                                    u10171 0E83  
                                                    u10411 0E9F  
                                                    u11211 0431  
                                                    u11131 0405  
                                                    u11051 03D9  
                                                    u10260 0A7D  
                                                    u10180 0E8D  
                                                    u10420 0EA6  
                                                    u10340 149E  
                                                    u11300 0463  
                                                    u11220 0437  
                                                    u11140 040B  
                                                    u11060 03DF  
                                                    u10500 0809  
                                                    u10405 1697  
                                                    u10261 0A7C  
                                                    u10181 0E8C  
                                                    u10421 0EA5  
                                                    u10341 149C  
                                                    u11301 0462  
                                                    u11221 0436  
                                                    u11141 040A  
                                                    u11061 03DE  
                                                    u10501 0808  
                                                    u10270 0AA4  
                                                    u10430 0ECD  
                                                    u10350 149F  
                                                    u10334 1495  
                                                    u11310 046A  
                                                    u11230 043E  
                                                    u11150 0412  
                                                    u11070 03E6  
                                                    u10190 170A  
                                                    u10271 0AA3  
                                                    u10431 0ECC  
                                                    u10335 1493  
                                                    u11311 0469  
                                                    u11231 043D  
                                                    u11151 0411  
                                                    u11071 03E5  
                                                    u10191 1709  
                                                    u10600 083B  
                                                    u10280 0ABA  
                                                    u10440 0EDE  
                                                    u10360 14AD  
                                                    u11400 049B  
                                                    u11320 046F  
                                                    u11240 0443  
                                                    u11160 0417  
                                                    u11080 03EB  
                                                    u10601 083A  
                                                    u10281 0AB9  
                                                    u10441 0EDD  
                                                    u10361 14AC  
                                                    u11401 049A  
                                                    u11321 046E  
                                                    u11241 0442  
                                                    u11161 0416  
                                                    u11081 03EA  
                                                    u10370 1652  
                                                    u10610 0844  
                                                    u10290 1FA4  
                                                    u11410 04A0  
                                                    u11330 0474  
                                                    u11250 0448  
                                                    u11170 041C  
                                                    u11090 03F0  
                                                    u10514 0810  
                                                    u10371 1651  
                                                    u10611 0842  
                                                    u10291 1FA2  
                                                    u10435 0EC9  
                                                    u11411 049F  
                                                    u11331 0473  
                                                    u11251 0447  
                                                    u11171 041B  
                                                    u11091 03EF  
                                                    u10515 080F  
                                                    u10540 0C78  
                                                    u10620 0845  
                                                    u11500 0DCB  
                                                    u11420 04A5  
                                                    u11340 0479  
                                                    u11260 044D  
                                                    u11180 0421  
                                                    u10524 081D  
                                                    u10460 0E28  
                                                    u10700 00F2  
                                                    u10541 0C77  
                                                    u11501 0DCA  
                                                    u11421 04A4  
                                                    u11341 0478  
                                                    u11261 044C  
                                                    u11181 0420  
                                                    u10525 081C  
                                                    u10461 0E27  
                                                    u10701 00F1  
                                                    u10390 1680  
                                                    u10550 0C8D  
                                                    u10630 1371  
                                                    u11510 0DD2  
                                                    u11430 04AC  
                                                    u11350 0480  
                                                    u11270 0454  
                                                    u11190 0428  
                                                    u10470 0E2D  
                                                    u10710 012C  
                                                    u10391 167F  
                                                    u10551 0C8C  
                                                    u10535 0C5D  
                                                    u10631 1370  
                                                    u11511 0DD1  
                                                    u11431 04AB  
                                                    u11351 047F  
                                                    u11271 0453  
                                                    u11191 0427  
                                                    u10471 0E2C  
                                                    u10711 012B  
                                                    u11600 05BC  
                                                    u10640 1381  
                                                    u11520 0DD7  
                                                    u11440 04B1  
                                                    u11360 0485  
                                                    u11280 0459  
                                                    u10480 0E32  
                                                    u10800 033D  
                                                    u10720 0166  
                                                    u12400 058D  
                                                    u12320 04DC  
                                                    u10385 1669  
                                                    u11601 05BB  
                                                    u10641 1380  
                                                    u11521 0DD6  
                                                    u11441 04B0  
                                                    u11361 0484  
                                                    u11281 0458  
                                                    u10481 0E31  
                                                    u10801 033C  
                                                    u10721 0165  
                                                    u12401 058C  
                                                    u12321 04DB  
                                                    u10570 0FF4  
                                                    u10650 1010  
                                                    u11530 0DDE  
                                                    u11450 04B6  
                                                    u11370 048A  
                                                    u11290 045E  
                                                    u10490 0E37  
                                                    u10730 01A1  
                                                    u10810 08E6  
                                                    u12330 04E4  
                                                    u10571 0FF3  
                                                    u10651 100F  
                                                    u11531 0DDD  
                                                    u11451 04B5  
                                                    u11371 0489  
                                                    u11291 045D  
                                                    u10491 0E36  
                                                    u10731 01A0  
                                                    u10811 08E5  
                                                    u12331 04E3  
                                                    u11620 05DF  
                                                    u10660 1005  
                                                    u11700 07FE  
                                                    u11540 0DE3  
                                                    u11460 04BB  
                                                    u11380 048F  
                                                    u10740 01DB  
                                                    u10820 08FC  
                                                    u10900 0939  
                                                    u12340 0504  
                                                    u10565 0FAD  
                                                    u11621 05DE  
                                                    u10661 1004  
                                                    u11701 07FD  
                                                    u11541 0DE2  
                                                    u11461 04BA  
                                                    u11381 048E  
                                                    u10741 01DA  
                                                    u10821 08FB  
                                                    u10901 0938  
                                                    u12341 0503  
                                                    u10590 0837  
                                                    u11630 05F6  
                                                    u11550 178E  
                                                    u10670 1034  
                                                    u11470 0DBA  
                                                    u11390 0496  
                                                    u10910 0D66  
                                                    u10750 0216  
                                                    u10830 0718  
                                                    u12350 0522  
                                                    u10591 0836  
                                                    u11631 05F5  
                                                    u11615 05CF  
                                                    u11551 178D  
                                                    u10671 1033  
                                                    u11471 0DB9  
                                                    u11391 0495  
                                                    u10911 0D65  
                                                    u10751 0215  
                                                    u10831 0717  
                                                    u12351 0521  
                                                    u11640 0601  
                                                    u11480 0DBF  
                                                    u10920 0D6B  
                                                    u10680 11E0  
                                                    u10760 0251  
                                                    u10840 0739  
                                                    u12360 052D  
                                                    u10585 082C  
                                                    u11641 0600  
                                                    u11481 0DBE  
                                                    u10921 0D6A  
                                                    u10681 11DF  
                                                    u10761 0250  
                                                    u10841 0738  
                                                    u12361 052C  
                                                    u11650 0632  
                                                    u11490 0DC6  
                                                    u10930 0D72  
                                                    u10770 028D  
                                                    u10690 00BA  
                                                    u10850 075C  
                                                    u12370 0533  
                                                    u11651 0631  
                                                    u11555 178A  
                                                    u11491 0DC5  
                                                    u10931 0D71  
                                                    u10771 028C  
                                                    u10691 00B9  
                                                    u10851 075B  
                                                    u12371 0532  
                                                    u11660 0639  
                                                    u11580 06FA  
                                                    u10940 0D77  
                                                    u10780 02C7  
                                                    u10860 077F  
                                                    u11740 0C05  
                                                    u12380 0552  
                                                    u11661 0638  
                                                    u11581 06F9  
                                                    u11565 0697  
                                                    u10941 0D76  
                                                    u10781 02C6  
                                                    u10861 077E  
                                                    u11741 0C04  
                                                    u12381 0551  
                                                    u11590 05A1  
                                                    u11670 12A3  
                                                    u10950 0D7E  
                                                    u10790 0302  
                                                    u10870 09DC  
                                                    u11750 0C22  
                                                    u12390 056B  
                                                    u11591 05A0  
                                                    u11575 06C4  
                                                    u11671 12A2  
                                                    u10951 0D7D  
                                                    u10791 0301  
                                                    u10871 09DB  
                                                    u11751 0C21  
                                                    u12391 056A  
                                                    u11680 12A9  
                                                    u10960 0D83  
                                                    u10880 09F3  
                                                    u11760 0C2B  
                                                    u11681 12A8  
                                                    u10961 0D82  
                                                    u10881 09F2  
                                                    u11761 0C2A  
                                                    u11690 1041  
                                                    u10970 0D8A  
                                                    u10890 0923  
                                                    u11770 0C34  
                                                    u11691 1040  
                                                    u10971 0D89  
                                                    u10891 0922  
                                                    u11771 0C33  
                                                    u10980 0D8F  
                                                    u11780 0C3D  
                                                    u10981 0D8E  
                                                    u11781 0C3C  
                                                    u10990 03BA  
                                                    u11790 0C46  
                                                    u14167 11E8  
                                                    u10991 03B9  
                                                    u11791 0C45  
                            __end_of_rn487x_driver_version 2012  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 14B1  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                        ??_I2C1_MasterRead 007B  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1424  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004E  
                                                    _begin 0BFD  
                                  __end_of_PIN_MANAGER_IOC 1F94  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B64  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EE  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 1700  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 0A09  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CED  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E77  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E76  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 134F  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F5A  
                            _EUSART2_SetTxInterruptHandler 1F54  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0BAF  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 098C  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11BA  
                                 _LIGHTBLUE_UpdateErrorLed 134F  
                                   __end_of_i2c_readNBytes 13E1  
                               __end_of_RN487X_is_rx_ready 1FD6  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0035  
                      __end_of_EUSART2_DefaultErrorHandler 1EA6  
                              _EUSART2_DefaultErrorHandler 1EA2  
                                  _LIGHTBLUE_PerformAction 0826  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0A4C  
                                       __end_of_I2C1_DO_TX 0D40  
                                         _RN487X_DataReady 136B  
                                       __end_of_I2C1_Close 126D  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09CA  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A4C  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1EA9  
                                                   i1l1105 1EA5  
                                                   _RC4PPS 1F24  
                                                   i1l1300 0035  
                                                   i1l1301 0053  
                                                   i1l1302 0044  
                                                   i1l1232 1443  
                                                   i1l1242 08D3  
                                                   i1l1082 1421  
                                                   i1l1235 1445  
                                                   i1l1307 0053  
                                                   i1l1252 1EA1  
                                                   i1l1092 0896  
                                                   i1l1085 1423  
                                                   i1l1246 1319  
                                                   i1l1255 1E9D  
                                                   i1l1096 1254  
                                                   i1l1249 1E76  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1E77  
                                                   i1l1451 10A4  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1447 1F93  
                                                   i1l1295 0013  
                                                   i1l1457 07FF  
                                                   i1l1298 0026  
                                                   _RN487X 1868  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9340 1096  
                                                   i1l9246 1E9E  
                                                   i1l9342 109D  
                                                   i1l9248 1E9A  
                                                   i1l9344 10A2  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l8980 1314  
                                                   i1l8982 1315  
                                                   i1l8974 1300  
                                                   i1l8976 1309  
                                                   i1l8978 130E  
                                                   u700_20 1409  
                                                   u700_21 1408  
                                                   u701_20 141B  
                                                   u701_21 141A  
                                                   u710_20 1F90  
                                                   u710_21 1F8F  
                                                   u705_20 142B  
                                                   u705_21 142A  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   u706_20 143D  
                                                   u706_21 143C  
                                                   u707_20 08A2  
                                                   u707_21 08A1  
                                                   u708_20 08B3  
                                                   u708_21 08B2  
                                                   _OSCFRQ 0893  
                                                   u709_20 08C9  
                                                   u709_21 08C8  
                                                   u590_20 109D  
                                                   u590_21 109C  
                                                   u567_20 1314  
                                                   u567_21 1313  
                                          ?_RN487X_SendCmd 0077  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EE  
                                         __end_of_bitWrite 0826  
                                setXYAxisRange@xyAxisRange 0038  
                                         __end_of_getError 0E3B  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003C  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1676  
                             __end_of_BMA253_GetAccelDataZ 16A4  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                          ?_i2c_readNBytes 0024  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F18  
                                                   _strchr 13A4  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 131A  
                                                   _strlen 12B5  
                                                   _strstr 0E3B  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F94  
                                           _PMD_Initialize 1FE0  
                                  _BMA253_NewAccelDataRdyY 114C  
                                  _BMA253_NewAccelDataRdyZ 115D  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007C  
                                     _EUSART2_Transmit_ISR 1402  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 004A  
                                  _I2C1_DO_RX_NACK_RESTART 1EE2  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 0A8F  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D5  
                                          _eusart1TxBuffer 00C5  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 11FA  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DD  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 0030  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 131A  
                                  _rdBlkRegCompleteHandler 126D  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 116E  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E8B  
                                            __end_of_begin 0C4B  
                                     __end_of_RN487X_Delay 1F83  
                                            _readRegisters 10B4  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 1016  
                                   setOperatingMode@opMode 0038  
                                     __end_of_RN487X_Write 102D  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FEA  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 10A5  
                                     __end_of_EUSART1_Read 1572  
                                     __end_of_EUSART2_Read 14FD  
                                      _LIGHTBLUE_SplitByte 1730  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1088  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1334  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08D4  
                                    __end_of_I2C1_DO_RESET 1EEC  
                                       readRegister@regVal 002D  
                                 __end_of_setTemperatureEn 0911  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1210  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1F0C  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D7  
                            __end_of_rd2RegCompleteHandler 1108  
                                       _DELAY_milliseconds 11E4  
                             __end_of_LIGHTBLUE_Initialize 1F12  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1119  
                        TMAG5273_CalcTemperature@lowerByte 0032  
                                    _rd1RegCompleteHandler 10E6  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1ED3  
                                    _wr1RegCompleteHandler 10D5  
                          __end_of_EUSART1_SetErrorHandler 1F24  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D93  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                    i2c_readNBytes@address 007B  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 0030  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                           ?_readRegisters 0027  
                                          _I2C1_MasterRead 1EF1  
                                          _I2C1_MasterOpen 1052  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E8B  
                                          _I2C1_Initialize 1FAF  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 1052  
                            __end_of_LIGHTBLUE_AccelSensor 16D2  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F2A  
                           _EUSART1_SetFramingErrorHandler 1F24  
                                                  ?_strstr 0078  
                                                  u1220_20 000B  
                                                  u1220_21 000A  
                                                  u1045_20 124E  
                                                  u1221_20 000F  
                                                  u1045_21 124D  
                                                  u1221_21 000E  
                                                  u1230_20 004C  
                                                  u1222_20 0017  
                                                  u1230_21 004B  
                                                  u1222_21 0016  
                                    _eusart2RxStatusBuffer 00CD  
                                                  u1223_20 001B  
                                                  u1223_21 001A  
                                                  u1224_20 001F  
                                                  u1224_21 001E  
                                                  u1225_20 002A  
                                                  u1225_21 0029  
                                                  u1226_20 002E  
                                                  u1226_21 002D  
                                                  u1171_20 0868  
                                                  u1227_20 0039  
                                                  u1171_21 0867  
                                                  u1227_21 0038  
                                                  u1172_20 0878  
                                                  u1228_20 003D  
                                                  u1172_21 0877  
                                                  u1228_21 003C  
                                                  u1173_20 088C  
                                                  u1229_20 0048  
                                                  u1173_21 088B  
                                                  u1229_21 0047  
                                                  i1l10200 1402  
                                                  i1l10210 141C  
                                                  i1l10202 1409  
                                                  i1l10204 1410  
                                                  i1l10206 1415  
                                                  i1l10208 141B  
                                                  i1l10240 143D  
                                                  i1l10232 1424  
                                                  i1l10250 08A8  
                                                  i1l10242 143E  
                                                  i1l10234 142B  
                                                  i1l10260 08C9  
                                                  i1l10252 08AE  
                                                  i1l10244 0897  
                                                  i1l10236 1432  
                                                  i1l10262 08D0  
                                                  i1l10254 08B3  
                                                  i1l10246 089D  
                                                  i1l10238 1437  
                                                  i1l10256 08B9  
                                                  i1l10248 08A2  
                                                  i1l10264 1F8B  
                                                  i1l10258 08BF  
                                                  i1l10266 1F90  
                                                  i1l13500 124E  
                                                  i1l13502 124F  
                                                  i1l14510 0873  
                                                  i1l14502 085E  
                                                  i1l13704 1EA6  
                                                  i1l14520 0893  
                                                  i1l14512 0878  
                                                  i1l14504 0863  
                                                  i1l13706 1EA2  
                                                  i1l14514 087D  
                                                  i1l14506 0868  
                                                  i1l14516 0883  
                                                  i1l14508 086D  
                                                  i1l13494 123D  
                                                  i1l14518 088C  
                                                  i1l13496 1244  
                                                  i1l13498 1248  
                                                  i1l14950 000B  
                                                  i1l14960 002A  
                                                  i1l14952 000F  
                                                  i1l14970 004C  
                                                  i1l14962 002E  
                                                  i1l14954 0017  
                                                  i1l14964 0039  
                                                  i1l14956 001B  
                                                  i1l14948 0006  
                                                  i1l14966 003D  
                                                  i1l14958 001F  
                                                  i1l14968 0048  
                             getMagneticChannel@magChannel 0030  
                                    ?_RN487X_EnterDataMode 0070  
                                ?_TMAG5273_CalcTemperature 002D  
                                            _writeRegister 1016  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1F00  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250 113B  
          _rd2RegCompleteHandler@i2c1_master_example$F1250 112A  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262 10D5  
          _wr2RegCompleteHandler@i2c1_master_example$F1262 10C4  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239 112A  
          _rd1RegCompleteHandler@i2c1_master_example$F1239 1119  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256 114C  
          _wr1RegCompleteHandler@i2c1_master_example$F1256 113B  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273 129D  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1273 1285  
                              __end_of_EUSART2_Receive_ISR 0897  
                       __end_of_IOCAF6_SetInterruptHandler 1F60  
                               _IOCAF6_SetInterruptHandler 1F5A  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 1300  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E94  
                                     ??_getMagneticChannel 002E  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0036  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10B4  
                               _LIGHTBLUE_SetErrorLedValue 10A5  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1648  
                                     _BMA253_GetAccelDataZ 1676  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1EFB  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E5  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1ED8  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1730  
                                        _RN487X_FilterData 0E90  
                                 __end_of_RN487X_DataReady 1387  
                             __end_of_LIGHTBLUE_PushButton 1192  
                                     __end_of_readRegister 1088  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1FA6  
                                                  _bitRead 148D  
                               __end_of_EUSART1_is_tx_done 1EBA  
                          __end_of_EUSART2_SetErrorHandler 1F42  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                       i2c_readNBytes@data 0024  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1000  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0BFD  
                                                  __ptext2 0911  
                                                  __ptext3 09CA  
                                                  __ptext4 08D4  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 1016  
                                                  __ptext8 1700  
                                                  __ptext9 0DE7  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1E88  
                                __end_of_I2C1_MasterIsNack 1F06  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1EAA  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1EA6  
                                    _OSCILLATOR_Initialize 1FD6  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E97  
                                 __end_of_I2C1_DO_TX_EMPTY 161B  
                                       _EUSART1_Initialize 094E  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002F  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FCC  
                                         ??_setXYAxisRange 0036  
                  TMAG5273_GetTemperatureValue@temperature 0035  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F61  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C9B  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EC9  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1EB2  
               __end_of_RN487X_Read@rn487x_interface$F1381 1FC2  
                       _RN487X_Read@rn487x_interface$F1381 1FB8  
                      ?_RN487X_Read@rn487x_interface$F1382 0070  
                     ??_RN487X_Read@rn487x_interface$F1384 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 12E7  
                              _LIGHTBLUE_TemperatureSensor 12CE  
                                      _I2C1_MasterClearIrq 1E7C  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1EB6  
                           __end_of_rn487x_PrintMessageEnd 0BFD  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F66  
                               __end_of_I2C1_MasterStartRx 1E91  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F67  
                                   _I2C1_DO_SEND_ADR_WRITE 1F73  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0035  
                                __end_of_RN487X_FilterData 0EEC  
                             __end_of_I2C1_DO_SEND_RESTART 1ED3  
                                  __end_of_I2C1_MasterRead 1EF6  
                                  __end_of_I2C1_MasterOpen 105F  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E8E  
                                  __end_of_I2C1_Initialize 1FB8  
                    __end_of_EUSART1_SetRxInterruptHandler 1F36  
                            _EUSART1_SetRxInterruptHandler 1F30  
                                              _I2C1_Poller 1045  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 098C  
                            __end_of_I2C1_MasterDisableIrq 1E85  
                                         ??_i2c_readNBytes 007B  
                                              _I2C1_Status 00A0  
                                          ??_readRegisters 0029  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0D40  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1E9A  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1EAA  
                      __end_of_I2C1_SetAddressNackCallback 2000  
                              _I2C1_SetAddressNackCallback 1FF5  
                                __end_of_RN487X_IndicateRx 100B  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1ECE  
                               _I2C1_DO_SEND_RESTART_WRITE 1EC9  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0036  
                                      _EUSART2_is_rx_ready 1F9D  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0AD3  
                          __end_of_rdBlkRegCompleteHandler 1285  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1F0C  
                                  _statusBuffer@main$F3783 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002E  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E9  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 002E  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F7B  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 0031  
                                  getOperatingMode@opMode1 0032  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0C4B  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 100B  
                                _LIGHTBLUE_GetDataLedValue 1F12  
                                             _RN487X_Write 1021  
                                        ??_getDeviceStatus 007C  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 154B  
                                             _EUSART2_Read 14D7  
                         __end_of_LIGHTBLUE_GetButtonValue 1F1E  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004C  
                            __end_of_EUSART2_RxDataHandler 1255  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 161B  
                                __end_of_RN487X_SetOutputs 0B1B  
                                            _setZAxisRange 0911  
                                           _I2C1_DO_RX_ACK 1ED8  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1E7A  
                                  readRegisters@dataBuffer 0027  
                            __end_of_I2C1_MasterSendTxData 1EBF  
                                           __end_of_strchr 13C2  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1334  
                                           __end_of_strlen 12CE  
                                           __end_of_strstr 0E90  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0038  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 11BA  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0039  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 117F  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0039  
                                    __end_of_EUSART1_Write 154B  
                                    __end_of_EUSART2_Write 1524  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 1226  
                                       ??_setTemperatureEn 0036  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 0031  
                               getMagneticChannel@magMode5 0032  
                               getMagneticChannel@magMode6 0033  
                               getMagneticChannel@magMode7 0034  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterRead 0070  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F4E  
                           _EUSART2_SetOverrunErrorHandler 1F48  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0033  
                                      __end_of_isConnected 11E4  
                  TMAG5273_CalcTemperature@temperatureData 0033  
                                getTemperatureEN@tempENreg 0031  
                         __end_of_TMAG5273_CalcTemperature 13A4  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0039  
                                   __end_of_I2C1_DO_RX_ACK 1EDD  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 1300  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14B1  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1ECE  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 107A  
                                      __end_of_RN487X_Init 07FF  
                                      __end_of_RN487X_Read 1045  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                  readRegisters@regAddress 002B  
                                      _RN487X_EnterCmdMode 1226  
                                     __end_of_I2C1_DO_IDLE 1EC4  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F73  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00E9  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 10F7  
                                    __end_of_fsmStateTable 1868  
                                                _main$5439 00EF  
                                   _PIN_MANAGER_Initialize 0B1B  
                                    _wr2RegCompleteHandler 1108  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 159A  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 0C4B  
                                                __ptext101 107A  
                                                __ptext110 1FF5  
                                                __ptext102 10B4  
                                                __ptext111 17CA  
                                                __ptext103 13C2  
                                                __ptext120 1EE2  
                                                __ptext112 1052  
                                                __ptext104 1EF1  
                                                __ptext121 1EDD  
                                                __ptext113 1EEC  
                                                __ptext105 1676  
                                                __ptext130 1F73  
                                                __ptext122 1ED8  
                                                __ptext114 13E1  
                                                __ptext106 115D  
                                                __ptext131 1F94  
                                                __ptext123 1ED3  
                                                __ptext115 1045  
                                                __ptext107 1648  
                                                __ptext140 1E8E  
                                                __ptext132 1EBF  
                                                __ptext124 1ECE  
                                                __ptext116 1F06  
                                                __ptext108 114C  
                                                __ptext141 1E7A  
                                                __ptext133 15EE  
                                                __ptext125 1EC9  
                                                __ptext117 159A  
                                                __ptext109 0B64  
                                                __ptext150 10E6  
                                                __ptext142 1E78  
                                                __ptext134 1E94  
                                                __ptext126 1EC4  
                                                __ptext118 1572  
                                                __ptext151 10D5  
                                                __ptext143 1285  
                                                __ptext135 1F00  
                                                __ptext127 1F6C  
                                                __ptext119 1EE7  
                                                __ptext160 1E82  
                                                __ptext152 10C4  
                                                __ptext144 113B  
                                                __ptext136 1EBA  
                                                __ptext128 0A09  
                                                __ptext161 1E7F  
                                                __ptext153 1FEA  
                                                __ptext145 112A  
                                                __ptext137 1EAE  
                                                __ptext129 0CED  
                                                __ptext170 085E  
                                                __ptext162 1E7C  
                                                __ptext154 1469  
                                                __ptext146 1119  
                                                __ptext138 1E91  
                                                __ptext171 1EA6  
                                                __ptext155 106C  
                                                __ptext147 126D  
                                                __ptext139 1EAA  
                                                __ptext172 1E77  
                                                __ptext164 1F8B  
                                                __ptext156 1E8B  
                                                __ptext148 1108  
                                                __ptext173 1EA2  
                                                __ptext165 1096  
                                                __ptext157 1E88  
                                                __ptext149 10F7  
                                                __ptext174 123D  
                                                __ptext166 07FF  
                                                __ptext158 1E85  
                                                __ptext175 1E9E  
                                                __ptext167 1424  
                                                __ptext159 1255  
                                                __ptext176 1E76  
                                                __ptext168 1402  
                                                __ptext177 1E9A  
                                                __ptext169 0897  
                                                __ptext178 1300  
                                      getAngleEn@angleDir2 0031  
                                      getAngleEn@angleDir3 0032  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E7  
                                    readRegisters@numBytes 0028  
                                 _LIGHTBLUE_GetButtonValue 1F18  
                        _EUSART2_TxDefaultInterruptHandler 00ED  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1F06  
                                         _I2C1_MasterClose 1E7F  
                                  getError@oscillatorError 0034  
                                           _I2C1_SetBuffer 106C  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E85  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1EEC  
                                    _LIGHTBLUE_AccelSensor 16A4  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_rd1RegCompleteHandler@strncmp$F4861 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4863 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4855 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4864 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4857 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4873 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4866 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4875 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4867 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4869 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1EA2  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E9E  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1210  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F1E  
                              __end_of_LIGHTBLUE_SplitByte 1761  
                                 __end_of_getOperatingMode 0D93  
                         __end_of_I2C1_CallbackReturnReset 1E7C  
                              __end_of_LIGHTBLUE_SplitWord 1096  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 0032  
                                       _EUSART1_is_tx_done 1EB6  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                        i2c_readNBytes@len 0025  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11CF  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1469  
                                        _RN487X_is_tx_done 1FC2  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0A09  
                                               _I2C1_DO_TX 0CED  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F60  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 1255  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C3  
                             __end_of_I2C1_MasterGetRxData 1E94  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002E  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0036  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12E7  
                                       _I2C1_MasterSendAck 1EAE  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1469  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1446  
                                _I2C1_DO_SEND_RESTART_READ 1EC4  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0039  
                                       _EUSART2_is_tx_done 1EB2  
                                   __end_of_I2C1_SetBuffer 107A  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FF5  
                             _I2C1_SetDataCompleteCallback 1FEA  
                                       _I2C1_MasterStartRx 1E8E  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 _TMAG5273_CalcTemperature 1387  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 07A1  
                                              _RN487X_Read 1039  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 0031  
                             __end_of_RN487X_SetSystemMode 1039  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F83  
                             __end_of_I2C1_DO_ADDRESS_NACK 159A  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1E97  
                            __end_of_i2c_read1ByteRegister 0BAF  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F7B  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1EE7  
                                              _asyncBuffer 0050  
                                       __end_of_getAngleEn 0DE7  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0039  
                                __end_of_RN487X_is_tx_done 1FCC  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F3C  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0038  
                             __end_of_I2C1_MasterOperation 1402  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 085E  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F3C  
                            _EUSART1_SetTxInterruptHandler 1F36  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F54  
                            _EUSART2_SetRxInterruptHandler 1F4E  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11CF  
       rd2RegCompleteHandler@i2c1_master_example$F1250@ptr 0078  
       wr2RegCompleteHandler@i2c1_master_example$F1262@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1239@ptr 0078  
                                  setZAxisRange@zAxisRange 0038  
       wr1RegCompleteHandler@i2c1_master_example$F1256@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                                    __end_of_readRegisters 10C4  
                              __end_of_rn487x_PrintMessage 17CA  
                                    _I2C1_MasterDisableIrq 1E82  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002C  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0077  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E9E  
                              _EUSART1_DefaultErrorHandler 1E9A  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1FAF  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C9B  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 0800  
                       LIGHTBLUE_TemperatureSensor@payload 0037  
                            __end_of_i2c_read2ByteRegister 0A8F  
                                                 _getError 0DE7  
                                                 __ptext10 1F83  
                                                 __ptext11 0800  
                                                 __ptext20 148D  
                                                 __ptext12 11CF  
                                                 __ptext21 1EFB  
                                                 __ptext13 12E7  
                                                 __ptext30 1F54  
                                                 __ptext22 11FA  
                                                 __ptext14 11A6  
                                                 __ptext31 1F4E  
                                                 __ptext23 1192  
                                                 __ptext15 11BA  
                                                 __ptext40 1F1E  
                                                 __ptext32 1F48  
                                                 __ptext24 1FE0  
                                                 __ptext16 0D40  
                                                 __ptext41 129D  
                                                 __ptext33 1F42  
                                                 __ptext25 0B1B  
                                                 __ptext17 0377  
                                                 __ptext50 0BAF  
                                                 __ptext42 1039  
                                                 __ptext34 1F3C  
                                                 __ptext26 1F5A  
                                                 __ptext18 1210  
                                                 __ptext51 1795  
                                                 __ptext43 136B  
                                                 __ptext35 094E  
                                                 __ptext27 1FD6  
                                                 __ptext19 0D93  
                                                 __ptext60 100B  
                                                 __ptext52 131A  
                                                 __ptext44 0E90  
                                                 __ptext36 1F36  
                                                 __ptext28 1FAF  
                                                 __ptext61 1000  
                                                 __ptext53 1446  
                                                 __ptext45 0A8F  
                                                 __ptext37 1F30  
                                                 __ptext29 098C  
                                                 __ptext70 0590  
                                                 __ptext62 12CE  
                                                 __ptext54 1E97  
                                                 __ptext46 0E3B  
                                                 __ptext38 1F2A  
                                                 __ptext71 0826  
                                                 __ptext63 105F  
                                                 __ptext55 07A1  
                                                 __ptext47 0C9B  
                                                 __ptext39 1F24  
                                                 __ptext80 1EB6  
                                                 __ptext72 10A5  
                                                 __ptext64 1387  
                                                 __ptext56 1FCC  
                                                 __ptext48 13A4  
                                                 __ptext81 1EB2  
                                                 __ptext73 134F  
                                                 __ptext65 0A4C  
                                                 __ptext57 1FA6  
                                                 __ptext49 161B  
                                                 __ptext90 1F12  
                                                 __ptext82 15C3  
                                                 __ptext74 0AD3  
                                                 __ptext66 065C  
                                                 __ptext58 1F9D  
                                                 __ptext91 1F0C  
                                                 __ptext83 1FB8  
                                                 __ptext75 0EEC  
                                                 __ptext67 1761  
                                                 __ptext59 102D  
                                                 __ptext92 16A4  
                                                 __ptext84 154B  
                                                 __ptext76 1334  
                                                 __ptext68 117F  
                                                 __ptext93 1088  
                                                 __ptext85 14D7  
                                                 __ptext77 1226  
                                                 __ptext69 1F18  
                                                 __ptext94 1730  
                                                 __ptext86 1F7B  
                                                 __ptext78 16D2  
                                                 __ptext95 0F74  
                                                 __ptext87 11E4  
                                                 __ptext79 1FC2  
                                                 __ptext96 12B5  
                                                 __ptext88 14B1  
                                                 __ptext97 1021  
                                                 __ptext89 1EF6  
                                                 __ptext98 1524  
                                                 __ptext99 14FD  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1096  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1E7A  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E78  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E77  
                          __end_of_BMA253_NewAccelDataRdyY 115D  
                          __end_of_BMA253_NewAccelDataRdyZ 116E  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E7F  
                             __end_of_I2C1_DO_RX_NACK_STOP 1EE2  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1EFB  
                               _LIGHTBLUE_GetErrorLedValue 1EF6  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1EE7  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 0030  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 123D  
                                  __end_of_getDeviceStatus 1F8B  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F9D  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1EBF  
                                      _EUSART1_Receive_ISR 0897  
                                             _I2C1_DO_RCEN 1F6C  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EAE  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1021  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1FA6  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 0030  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E91  
                                    _I2C1_MasterSendTxData 1EBA  
                            __end_of_RN487X_MessageHandler 0AD3  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@lsb 0078  
                                              bitWrite@reg 0071  
                                              bitWrite@msb 0076  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E82  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E88  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1EF1  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F30  
                           _EUSART1_SetOverrunErrorHandler 1F2A  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E78  
                             __end_of_EUSART1_Transmit_ISR 1446  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 102D  
                                     _I2C1_DO_ADDRESS_NACK 1572  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 12B5  
                            _RN487X_SetAsyncMessageHandler 129D  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 085E  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 148D  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13E1  
                                          _TMR0_Initialize 1192  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$463 002D  
                        _LIGHTBLUE_ParseIncomingPacket$464 002F  
                        _LIGHTBLUE_ParseIncomingPacket$465 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B64  
                                       ??_getOperatingMode 002E  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 10F7  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1648  
                                          _PIN_MANAGER_IOC 1F8B  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 10E6  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 136B  
                               ??_TMAG5273_CalcTemperature 002F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EB  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
