

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Dec 23 18:27:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,inline,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   197                           	psect	intentry,global,class=CODE,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,delta=2
   200                           	psect	text163,local,class=CODE,merge=1,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   214                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   215                           	dabs	1,0x7E,2
   216     0000                     
   217                           ; Version 2.35
   218                           ; Generated 01/06/2021 GMT
   219                           ; 
   220                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   221                           ; All rights reserved.
   222                           ; 
   223                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   224                           ; 
   225                           ; Redistribution and use in source and binary forms, with or without modification, are
   226                           ; permitted provided that the following conditions are met:
   227                           ; 
   228                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   229                           ;        conditions and the following disclaimer.
   230                           ; 
   231                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   232                           ;        of conditions and the following disclaimer in the documentation and/or other
   233                           ;        materials provided with the distribution. Publication is not required when
   234                           ;        this file is used in an embedded application.
   235                           ; 
   236                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   237                           ;        software without specific prior written permission.
   238                           ; 
   239                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   240                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   241                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   242                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   243                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   244                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   245                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   246                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   247                           ; 
   248                           ; 
   249                           ; Code-generator required, PIC16LF18456 Definitions
   250                           ; 
   251                           ; SFR Addresses
   252     0000                     	;# 
   253     0001                     	;# 
   254     0002                     	;# 
   255     0003                     	;# 
   256     0004                     	;# 
   257     0005                     	;# 
   258     0006                     	;# 
   259     0007                     	;# 
   260     0008                     	;# 
   261     0009                     	;# 
   262     000A                     	;# 
   263     000B                     	;# 
   264     000C                     	;# 
   265     000D                     	;# 
   266     000E                     	;# 
   267     0010                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0016                     	;# 
   272     0018                     	;# 
   273     0019                     	;# 
   274     001A                     	;# 
   275     001C                     	;# 
   276     008C                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0090                     	;# 
   284     0091                     	;# 
   285     0092                     	;# 
   286     0092                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0094                     	;# 
   290     0095                     	;# 
   291     0096                     	;# 
   292     0096                     	;# 
   293     0097                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009A                     	;# 
   297     009B                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009D                     	;# 
   302     009E                     	;# 
   303     009F                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     010F                     	;# 
   310     0110                     	;# 
   311     0111                     	;# 
   312     0112                     	;# 
   313     0113                     	;# 
   314     0114                     	;# 
   315     0115                     	;# 
   316     0116                     	;# 
   317     0117                     	;# 
   318     0118                     	;# 
   319     0119                     	;# 
   320     0119                     	;# 
   321     0119                     	;# 
   322     011A                     	;# 
   323     011A                     	;# 
   324     011A                     	;# 
   325     011B                     	;# 
   326     011B                     	;# 
   327     011B                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011C                     	;# 
   331     011C                     	;# 
   332     011C                     	;# 
   333     011D                     	;# 
   334     011D                     	;# 
   335     011D                     	;# 
   336     011E                     	;# 
   337     011E                     	;# 
   338     011E                     	;# 
   339     011F                     	;# 
   340     011F                     	;# 
   341     011F                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     018C                     	;# 
   345     018D                     	;# 
   346     018E                     	;# 
   347     018F                     	;# 
   348     0190                     	;# 
   349     0191                     	;# 
   350     0192                     	;# 
   351     0196                     	;# 
   352     0197                     	;# 
   353     0198                     	;# 
   354     0199                     	;# 
   355     019A                     	;# 
   356     019B                     	;# 
   357     019C                     	;# 
   358     020C                     	;# 
   359     020D                     	;# 
   360     020E                     	;# 
   361     020E                     	;# 
   362     020F                     	;# 
   363     020F                     	;# 
   364     0210                     	;# 
   365     0210                     	;# 
   366     0211                     	;# 
   367     0211                     	;# 
   368     0212                     	;# 
   369     0213                     	;# 
   370     0214                     	;# 
   371     0214                     	;# 
   372     0215                     	;# 
   373     0215                     	;# 
   374     0216                     	;# 
   375     0216                     	;# 
   376     0217                     	;# 
   377     0217                     	;# 
   378     0218                     	;# 
   379     0219                     	;# 
   380     021A                     	;# 
   381     021A                     	;# 
   382     021B                     	;# 
   383     021B                     	;# 
   384     021C                     	;# 
   385     021C                     	;# 
   386     021D                     	;# 
   387     021D                     	;# 
   388     021E                     	;# 
   389     021F                     	;# 
   390     028C                     	;# 
   391     028C                     	;# 
   392     028D                     	;# 
   393     028D                     	;# 
   394     028E                     	;# 
   395     028F                     	;# 
   396     0290                     	;# 
   397     0291                     	;# 
   398     0292                     	;# 
   399     0292                     	;# 
   400     0293                     	;# 
   401     0293                     	;# 
   402     0294                     	;# 
   403     0295                     	;# 
   404     0296                     	;# 
   405     0297                     	;# 
   406     0298                     	;# 
   407     0298                     	;# 
   408     0299                     	;# 
   409     0299                     	;# 
   410     029A                     	;# 
   411     029B                     	;# 
   412     029C                     	;# 
   413     029D                     	;# 
   414     029F                     	;# 
   415     030C                     	;# 
   416     030C                     	;# 
   417     030D                     	;# 
   418     030E                     	;# 
   419     030F                     	;# 
   420     0310                     	;# 
   421     0310                     	;# 
   422     0311                     	;# 
   423     0312                     	;# 
   424     0313                     	;# 
   425     0314                     	;# 
   426     0314                     	;# 
   427     0315                     	;# 
   428     0316                     	;# 
   429     0317                     	;# 
   430     0318                     	;# 
   431     0318                     	;# 
   432     0319                     	;# 
   433     031A                     	;# 
   434     031B                     	;# 
   435     031C                     	;# 
   436     031C                     	;# 
   437     031D                     	;# 
   438     031E                     	;# 
   439     031F                     	;# 
   440     038C                     	;# 
   441     038C                     	;# 
   442     038D                     	;# 
   443     038E                     	;# 
   444     0390                     	;# 
   445     0390                     	;# 
   446     0391                     	;# 
   447     0392                     	;# 
   448     048C                     	;# 
   449     048C                     	;# 
   450     048D                     	;# 
   451     048E                     	;# 
   452     048F                     	;# 
   453     048F                     	;# 
   454     0490                     	;# 
   455     0491                     	;# 
   456     0492                     	;# 
   457     0492                     	;# 
   458     0493                     	;# 
   459     0494                     	;# 
   460     0495                     	;# 
   461     0495                     	;# 
   462     0496                     	;# 
   463     0497                     	;# 
   464     0498                     	;# 
   465     0499                     	;# 
   466     049A                     	;# 
   467     049B                     	;# 
   468     049C                     	;# 
   469     049D                     	;# 
   470     050C                     	;# 
   471     050C                     	;# 
   472     050D                     	;# 
   473     050E                     	;# 
   474     050F                     	;# 
   475     050F                     	;# 
   476     0510                     	;# 
   477     0511                     	;# 
   478     0512                     	;# 
   479     0512                     	;# 
   480     0513                     	;# 
   481     0514                     	;# 
   482     0515                     	;# 
   483     0515                     	;# 
   484     0516                     	;# 
   485     0517                     	;# 
   486     0518                     	;# 
   487     0519                     	;# 
   488     051A                     	;# 
   489     051B                     	;# 
   490     051C                     	;# 
   491     051D                     	;# 
   492     058C                     	;# 
   493     058C                     	;# 
   494     058D                     	;# 
   495     058E                     	;# 
   496     058F                     	;# 
   497     058F                     	;# 
   498     0590                     	;# 
   499     0591                     	;# 
   500     0592                     	;# 
   501     0593                     	;# 
   502     059C                     	;# 
   503     059C                     	;# 
   504     059D                     	;# 
   505     059D                     	;# 
   506     059E                     	;# 
   507     059F                     	;# 
   508     060C                     	;# 
   509     060C                     	;# 
   510     060D                     	;# 
   511     060D                     	;# 
   512     060E                     	;# 
   513     060F                     	;# 
   514     0610                     	;# 
   515     0611                     	;# 
   516     0612                     	;# 
   517     0613                     	;# 
   518     0614                     	;# 
   519     0616                     	;# 
   520     0616                     	;# 
   521     0617                     	;# 
   522     0617                     	;# 
   523     0618                     	;# 
   524     0619                     	;# 
   525     061A                     	;# 
   526     061B                     	;# 
   527     061C                     	;# 
   528     061D                     	;# 
   529     061E                     	;# 
   530     068C                     	;# 
   531     068D                     	;# 
   532     068E                     	;# 
   533     068F                     	;# 
   534     0690                     	;# 
   535     0691                     	;# 
   536     0692                     	;# 
   537     0693                     	;# 
   538     0694                     	;# 
   539     070C                     	;# 
   540     070D                     	;# 
   541     070E                     	;# 
   542     070F                     	;# 
   543     0710                     	;# 
   544     0711                     	;# 
   545     0712                     	;# 
   546     0713                     	;# 
   547     0714                     	;# 
   548     0716                     	;# 
   549     0717                     	;# 
   550     0718                     	;# 
   551     0719                     	;# 
   552     071A                     	;# 
   553     071B                     	;# 
   554     071C                     	;# 
   555     071D                     	;# 
   556     071E                     	;# 
   557     0796                     	;# 
   558     0797                     	;# 
   559     0798                     	;# 
   560     0799                     	;# 
   561     079A                     	;# 
   562     079B                     	;# 
   563     079C                     	;# 
   564     079D                     	;# 
   565     080C                     	;# 
   566     080D                     	;# 
   567     080E                     	;# 
   568     080F                     	;# 
   569     0810                     	;# 
   570     0811                     	;# 
   571     0813                     	;# 
   572     0814                     	;# 
   573     081A                     	;# 
   574     081A                     	;# 
   575     081B                     	;# 
   576     081C                     	;# 
   577     081C                     	;# 
   578     081D                     	;# 
   579     081E                     	;# 
   580     081F                     	;# 
   581     088C                     	;# 
   582     088D                     	;# 
   583     088E                     	;# 
   584     088F                     	;# 
   585     0890                     	;# 
   586     0891                     	;# 
   587     0892                     	;# 
   588     0893                     	;# 
   589     0895                     	;# 
   590     0896                     	;# 
   591     0897                     	;# 
   592     0898                     	;# 
   593     0899                     	;# 
   594     089A                     	;# 
   595     089B                     	;# 
   596     090C                     	;# 
   597     090E                     	;# 
   598     090F                     	;# 
   599     091F                     	;# 
   600     098F                     	;# 
   601     098F                     	;# 
   602     0990                     	;# 
   603     0991                     	;# 
   604     0992                     	;# 
   605     0993                     	;# 
   606     0994                     	;# 
   607     0995                     	;# 
   608     0996                     	;# 
   609     0997                     	;# 
   610     0A19                     	;# 
   611     0A19                     	;# 
   612     0A1A                     	;# 
   613     0A1A                     	;# 
   614     0A1B                     	;# 
   615     0A1B                     	;# 
   616     0A1B                     	;# 
   617     0A1C                     	;# 
   618     0A1C                     	;# 
   619     0A1D                     	;# 
   620     0A1D                     	;# 
   621     0A1E                     	;# 
   622     0A1E                     	;# 
   623     0A1F                     	;# 
   624     0A1F                     	;# 
   625     0A1F                     	;# 
   626     1E0F                     	;# 
   627     1E10                     	;# 
   628     1E11                     	;# 
   629     1E12                     	;# 
   630     1E13                     	;# 
   631     1E14                     	;# 
   632     1E15                     	;# 
   633     1E16                     	;# 
   634     1E17                     	;# 
   635     1E18                     	;# 
   636     1E19                     	;# 
   637     1E1A                     	;# 
   638     1E1B                     	;# 
   639     1E1C                     	;# 
   640     1E1D                     	;# 
   641     1E1E                     	;# 
   642     1E1F                     	;# 
   643     1E20                     	;# 
   644     1E21                     	;# 
   645     1E22                     	;# 
   646     1E23                     	;# 
   647     1E24                     	;# 
   648     1E25                     	;# 
   649     1E26                     	;# 
   650     1E27                     	;# 
   651     1E28                     	;# 
   652     1E29                     	;# 
   653     1E2A                     	;# 
   654     1E2B                     	;# 
   655     1E2C                     	;# 
   656     1E2D                     	;# 
   657     1E2E                     	;# 
   658     1E2F                     	;# 
   659     1E30                     	;# 
   660     1E31                     	;# 
   661     1E32                     	;# 
   662     1E33                     	;# 
   663     1E34                     	;# 
   664     1E35                     	;# 
   665     1E36                     	;# 
   666     1E37                     	;# 
   667     1E8F                     	;# 
   668     1E90                     	;# 
   669     1E91                     	;# 
   670     1E92                     	;# 
   671     1E93                     	;# 
   672     1E94                     	;# 
   673     1E95                     	;# 
   674     1E96                     	;# 
   675     1E97                     	;# 
   676     1E9C                     	;# 
   677     1E9D                     	;# 
   678     1E9E                     	;# 
   679     1EA1                     	;# 
   680     1EA2                     	;# 
   681     1EA3                     	;# 
   682     1EA4                     	;# 
   683     1EA5                     	;# 
   684     1EA9                     	;# 
   685     1EAA                     	;# 
   686     1EAB                     	;# 
   687     1EAC                     	;# 
   688     1EB1                     	;# 
   689     1EB2                     	;# 
   690     1EB3                     	;# 
   691     1EB8                     	;# 
   692     1EB9                     	;# 
   693     1EBA                     	;# 
   694     1EBB                     	;# 
   695     1EBC                     	;# 
   696     1EBD                     	;# 
   697     1EBE                     	;# 
   698     1EC3                     	;# 
   699     1EC5                     	;# 
   700     1EC6                     	;# 
   701     1EC7                     	;# 
   702     1EC8                     	;# 
   703     1EC9                     	;# 
   704     1ECA                     	;# 
   705     1ECB                     	;# 
   706     1ECC                     	;# 
   707     1ECD                     	;# 
   708     1ECE                     	;# 
   709     1F10                     	;# 
   710     1F11                     	;# 
   711     1F12                     	;# 
   712     1F13                     	;# 
   713     1F14                     	;# 
   714     1F15                     	;# 
   715     1F16                     	;# 
   716     1F17                     	;# 
   717     1F18                     	;# 
   718     1F19                     	;# 
   719     1F1A                     	;# 
   720     1F1B                     	;# 
   721     1F1C                     	;# 
   722     1F1D                     	;# 
   723     1F1E                     	;# 
   724     1F1F                     	;# 
   725     1F20                     	;# 
   726     1F21                     	;# 
   727     1F22                     	;# 
   728     1F23                     	;# 
   729     1F24                     	;# 
   730     1F25                     	;# 
   731     1F26                     	;# 
   732     1F27                     	;# 
   733     1F38                     	;# 
   734     1F39                     	;# 
   735     1F3A                     	;# 
   736     1F3B                     	;# 
   737     1F3C                     	;# 
   738     1F3D                     	;# 
   739     1F3E                     	;# 
   740     1F3F                     	;# 
   741     1F43                     	;# 
   742     1F44                     	;# 
   743     1F45                     	;# 
   744     1F46                     	;# 
   745     1F47                     	;# 
   746     1F48                     	;# 
   747     1F49                     	;# 
   748     1F4A                     	;# 
   749     1F4E                     	;# 
   750     1F4F                     	;# 
   751     1F50                     	;# 
   752     1F51                     	;# 
   753     1F52                     	;# 
   754     1F53                     	;# 
   755     1F54                     	;# 
   756     1F55                     	;# 
   757     1F65                     	;# 
   758     1F66                     	;# 
   759     1F67                     	;# 
   760     1F68                     	;# 
   761     1F69                     	;# 
   762     1F6A                     	;# 
   763     1F6B                     	;# 
   764     1FE4                     	;# 
   765     1FE5                     	;# 
   766     1FE6                     	;# 
   767     1FE7                     	;# 
   768     1FE8                     	;# 
   769     1FE8                     	;# 
   770     1FE9                     	;# 
   771     1FEA                     	;# 
   772     1FEB                     	;# 
   773     1FED                     	;# 
   774     1FEE                     	;# 
   775     1FEF                     	;# 
   776     0000                     	;# 
   777     0001                     	;# 
   778     0002                     	;# 
   779     0003                     	;# 
   780     0004                     	;# 
   781     0005                     	;# 
   782     0006                     	;# 
   783     0007                     	;# 
   784     0008                     	;# 
   785     0009                     	;# 
   786     000A                     	;# 
   787     000B                     	;# 
   788     000C                     	;# 
   789     000D                     	;# 
   790     000E                     	;# 
   791     0010                     	;# 
   792     0012                     	;# 
   793     0013                     	;# 
   794     0014                     	;# 
   795     0016                     	;# 
   796     0018                     	;# 
   797     0019                     	;# 
   798     001A                     	;# 
   799     001C                     	;# 
   800     008C                     	;# 
   801     008C                     	;# 
   802     008D                     	;# 
   803     008E                     	;# 
   804     008E                     	;# 
   805     008F                     	;# 
   806     0090                     	;# 
   807     0090                     	;# 
   808     0091                     	;# 
   809     0092                     	;# 
   810     0092                     	;# 
   811     0093                     	;# 
   812     0094                     	;# 
   813     0094                     	;# 
   814     0095                     	;# 
   815     0096                     	;# 
   816     0096                     	;# 
   817     0097                     	;# 
   818     0098                     	;# 
   819     0099                     	;# 
   820     009A                     	;# 
   821     009B                     	;# 
   822     009B                     	;# 
   823     009C                     	;# 
   824     009D                     	;# 
   825     009D                     	;# 
   826     009E                     	;# 
   827     009F                     	;# 
   828     010C                     	;# 
   829     010C                     	;# 
   830     010D                     	;# 
   831     010E                     	;# 
   832     010F                     	;# 
   833     010F                     	;# 
   834     0110                     	;# 
   835     0111                     	;# 
   836     0112                     	;# 
   837     0113                     	;# 
   838     0114                     	;# 
   839     0115                     	;# 
   840     0116                     	;# 
   841     0117                     	;# 
   842     0118                     	;# 
   843     0119                     	;# 
   844     0119                     	;# 
   845     0119                     	;# 
   846     011A                     	;# 
   847     011A                     	;# 
   848     011A                     	;# 
   849     011B                     	;# 
   850     011B                     	;# 
   851     011B                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011C                     	;# 
   855     011C                     	;# 
   856     011C                     	;# 
   857     011D                     	;# 
   858     011D                     	;# 
   859     011D                     	;# 
   860     011E                     	;# 
   861     011E                     	;# 
   862     011E                     	;# 
   863     011F                     	;# 
   864     011F                     	;# 
   865     011F                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     018C                     	;# 
   869     018D                     	;# 
   870     018E                     	;# 
   871     018F                     	;# 
   872     0190                     	;# 
   873     0191                     	;# 
   874     0192                     	;# 
   875     0196                     	;# 
   876     0197                     	;# 
   877     0198                     	;# 
   878     0199                     	;# 
   879     019A                     	;# 
   880     019B                     	;# 
   881     019C                     	;# 
   882     020C                     	;# 
   883     020D                     	;# 
   884     020E                     	;# 
   885     020E                     	;# 
   886     020F                     	;# 
   887     020F                     	;# 
   888     0210                     	;# 
   889     0210                     	;# 
   890     0211                     	;# 
   891     0211                     	;# 
   892     0212                     	;# 
   893     0213                     	;# 
   894     0214                     	;# 
   895     0214                     	;# 
   896     0215                     	;# 
   897     0215                     	;# 
   898     0216                     	;# 
   899     0216                     	;# 
   900     0217                     	;# 
   901     0217                     	;# 
   902     0218                     	;# 
   903     0219                     	;# 
   904     021A                     	;# 
   905     021A                     	;# 
   906     021B                     	;# 
   907     021B                     	;# 
   908     021C                     	;# 
   909     021C                     	;# 
   910     021D                     	;# 
   911     021D                     	;# 
   912     021E                     	;# 
   913     021F                     	;# 
   914     028C                     	;# 
   915     028C                     	;# 
   916     028D                     	;# 
   917     028D                     	;# 
   918     028E                     	;# 
   919     028F                     	;# 
   920     0290                     	;# 
   921     0291                     	;# 
   922     0292                     	;# 
   923     0292                     	;# 
   924     0293                     	;# 
   925     0293                     	;# 
   926     0294                     	;# 
   927     0295                     	;# 
   928     0296                     	;# 
   929     0297                     	;# 
   930     0298                     	;# 
   931     0298                     	;# 
   932     0299                     	;# 
   933     0299                     	;# 
   934     029A                     	;# 
   935     029B                     	;# 
   936     029C                     	;# 
   937     029D                     	;# 
   938     029F                     	;# 
   939     030C                     	;# 
   940     030C                     	;# 
   941     030D                     	;# 
   942     030E                     	;# 
   943     030F                     	;# 
   944     0310                     	;# 
   945     0310                     	;# 
   946     0311                     	;# 
   947     0312                     	;# 
   948     0313                     	;# 
   949     0314                     	;# 
   950     0314                     	;# 
   951     0315                     	;# 
   952     0316                     	;# 
   953     0317                     	;# 
   954     0318                     	;# 
   955     0318                     	;# 
   956     0319                     	;# 
   957     031A                     	;# 
   958     031B                     	;# 
   959     031C                     	;# 
   960     031C                     	;# 
   961     031D                     	;# 
   962     031E                     	;# 
   963     031F                     	;# 
   964     038C                     	;# 
   965     038C                     	;# 
   966     038D                     	;# 
   967     038E                     	;# 
   968     0390                     	;# 
   969     0390                     	;# 
   970     0391                     	;# 
   971     0392                     	;# 
   972     048C                     	;# 
   973     048C                     	;# 
   974     048D                     	;# 
   975     048E                     	;# 
   976     048F                     	;# 
   977     048F                     	;# 
   978     0490                     	;# 
   979     0491                     	;# 
   980     0492                     	;# 
   981     0492                     	;# 
   982     0493                     	;# 
   983     0494                     	;# 
   984     0495                     	;# 
   985     0495                     	;# 
   986     0496                     	;# 
   987     0497                     	;# 
   988     0498                     	;# 
   989     0499                     	;# 
   990     049A                     	;# 
   991     049B                     	;# 
   992     049C                     	;# 
   993     049D                     	;# 
   994     050C                     	;# 
   995     050C                     	;# 
   996     050D                     	;# 
   997     050E                     	;# 
   998     050F                     	;# 
   999     050F                     	;# 
  1000     0510                     	;# 
  1001     0511                     	;# 
  1002     0512                     	;# 
  1003     0512                     	;# 
  1004     0513                     	;# 
  1005     0514                     	;# 
  1006     0515                     	;# 
  1007     0515                     	;# 
  1008     0516                     	;# 
  1009     0517                     	;# 
  1010     0518                     	;# 
  1011     0519                     	;# 
  1012     051A                     	;# 
  1013     051B                     	;# 
  1014     051C                     	;# 
  1015     051D                     	;# 
  1016     058C                     	;# 
  1017     058C                     	;# 
  1018     058D                     	;# 
  1019     058E                     	;# 
  1020     058F                     	;# 
  1021     058F                     	;# 
  1022     0590                     	;# 
  1023     0591                     	;# 
  1024     0592                     	;# 
  1025     0593                     	;# 
  1026     059C                     	;# 
  1027     059C                     	;# 
  1028     059D                     	;# 
  1029     059D                     	;# 
  1030     059E                     	;# 
  1031     059F                     	;# 
  1032     060C                     	;# 
  1033     060C                     	;# 
  1034     060D                     	;# 
  1035     060D                     	;# 
  1036     060E                     	;# 
  1037     060F                     	;# 
  1038     0610                     	;# 
  1039     0611                     	;# 
  1040     0612                     	;# 
  1041     0613                     	;# 
  1042     0614                     	;# 
  1043     0616                     	;# 
  1044     0616                     	;# 
  1045     0617                     	;# 
  1046     0617                     	;# 
  1047     0618                     	;# 
  1048     0619                     	;# 
  1049     061A                     	;# 
  1050     061B                     	;# 
  1051     061C                     	;# 
  1052     061D                     	;# 
  1053     061E                     	;# 
  1054     068C                     	;# 
  1055     068D                     	;# 
  1056     068E                     	;# 
  1057     068F                     	;# 
  1058     0690                     	;# 
  1059     0691                     	;# 
  1060     0692                     	;# 
  1061     0693                     	;# 
  1062     0694                     	;# 
  1063     070C                     	;# 
  1064     070D                     	;# 
  1065     070E                     	;# 
  1066     070F                     	;# 
  1067     0710                     	;# 
  1068     0711                     	;# 
  1069     0712                     	;# 
  1070     0713                     	;# 
  1071     0714                     	;# 
  1072     0716                     	;# 
  1073     0717                     	;# 
  1074     0718                     	;# 
  1075     0719                     	;# 
  1076     071A                     	;# 
  1077     071B                     	;# 
  1078     071C                     	;# 
  1079     071D                     	;# 
  1080     071E                     	;# 
  1081     0796                     	;# 
  1082     0797                     	;# 
  1083     0798                     	;# 
  1084     0799                     	;# 
  1085     079A                     	;# 
  1086     079B                     	;# 
  1087     079C                     	;# 
  1088     079D                     	;# 
  1089     080C                     	;# 
  1090     080D                     	;# 
  1091     080E                     	;# 
  1092     080F                     	;# 
  1093     0810                     	;# 
  1094     0811                     	;# 
  1095     0813                     	;# 
  1096     0814                     	;# 
  1097     081A                     	;# 
  1098     081A                     	;# 
  1099     081B                     	;# 
  1100     081C                     	;# 
  1101     081C                     	;# 
  1102     081D                     	;# 
  1103     081E                     	;# 
  1104     081F                     	;# 
  1105     088C                     	;# 
  1106     088D                     	;# 
  1107     088E                     	;# 
  1108     088F                     	;# 
  1109     0890                     	;# 
  1110     0891                     	;# 
  1111     0892                     	;# 
  1112     0893                     	;# 
  1113     0895                     	;# 
  1114     0896                     	;# 
  1115     0897                     	;# 
  1116     0898                     	;# 
  1117     0899                     	;# 
  1118     089A                     	;# 
  1119     089B                     	;# 
  1120     090C                     	;# 
  1121     090E                     	;# 
  1122     090F                     	;# 
  1123     091F                     	;# 
  1124     098F                     	;# 
  1125     098F                     	;# 
  1126     0990                     	;# 
  1127     0991                     	;# 
  1128     0992                     	;# 
  1129     0993                     	;# 
  1130     0994                     	;# 
  1131     0995                     	;# 
  1132     0996                     	;# 
  1133     0997                     	;# 
  1134     0A19                     	;# 
  1135     0A19                     	;# 
  1136     0A1A                     	;# 
  1137     0A1A                     	;# 
  1138     0A1B                     	;# 
  1139     0A1B                     	;# 
  1140     0A1B                     	;# 
  1141     0A1C                     	;# 
  1142     0A1C                     	;# 
  1143     0A1D                     	;# 
  1144     0A1D                     	;# 
  1145     0A1E                     	;# 
  1146     0A1E                     	;# 
  1147     0A1F                     	;# 
  1148     0A1F                     	;# 
  1149     0A1F                     	;# 
  1150     1E0F                     	;# 
  1151     1E10                     	;# 
  1152     1E11                     	;# 
  1153     1E12                     	;# 
  1154     1E13                     	;# 
  1155     1E14                     	;# 
  1156     1E15                     	;# 
  1157     1E16                     	;# 
  1158     1E17                     	;# 
  1159     1E18                     	;# 
  1160     1E19                     	;# 
  1161     1E1A                     	;# 
  1162     1E1B                     	;# 
  1163     1E1C                     	;# 
  1164     1E1D                     	;# 
  1165     1E1E                     	;# 
  1166     1E1F                     	;# 
  1167     1E20                     	;# 
  1168     1E21                     	;# 
  1169     1E22                     	;# 
  1170     1E23                     	;# 
  1171     1E24                     	;# 
  1172     1E25                     	;# 
  1173     1E26                     	;# 
  1174     1E27                     	;# 
  1175     1E28                     	;# 
  1176     1E29                     	;# 
  1177     1E2A                     	;# 
  1178     1E2B                     	;# 
  1179     1E2C                     	;# 
  1180     1E2D                     	;# 
  1181     1E2E                     	;# 
  1182     1E2F                     	;# 
  1183     1E30                     	;# 
  1184     1E31                     	;# 
  1185     1E32                     	;# 
  1186     1E33                     	;# 
  1187     1E34                     	;# 
  1188     1E35                     	;# 
  1189     1E36                     	;# 
  1190     1E37                     	;# 
  1191     1E8F                     	;# 
  1192     1E90                     	;# 
  1193     1E91                     	;# 
  1194     1E92                     	;# 
  1195     1E93                     	;# 
  1196     1E94                     	;# 
  1197     1E95                     	;# 
  1198     1E96                     	;# 
  1199     1E97                     	;# 
  1200     1E9C                     	;# 
  1201     1E9D                     	;# 
  1202     1E9E                     	;# 
  1203     1EA1                     	;# 
  1204     1EA2                     	;# 
  1205     1EA3                     	;# 
  1206     1EA4                     	;# 
  1207     1EA5                     	;# 
  1208     1EA9                     	;# 
  1209     1EAA                     	;# 
  1210     1EAB                     	;# 
  1211     1EAC                     	;# 
  1212     1EB1                     	;# 
  1213     1EB2                     	;# 
  1214     1EB3                     	;# 
  1215     1EB8                     	;# 
  1216     1EB9                     	;# 
  1217     1EBA                     	;# 
  1218     1EBB                     	;# 
  1219     1EBC                     	;# 
  1220     1EBD                     	;# 
  1221     1EBE                     	;# 
  1222     1EC3                     	;# 
  1223     1EC5                     	;# 
  1224     1EC6                     	;# 
  1225     1EC7                     	;# 
  1226     1EC8                     	;# 
  1227     1EC9                     	;# 
  1228     1ECA                     	;# 
  1229     1ECB                     	;# 
  1230     1ECC                     	;# 
  1231     1ECD                     	;# 
  1232     1ECE                     	;# 
  1233     1F10                     	;# 
  1234     1F11                     	;# 
  1235     1F12                     	;# 
  1236     1F13                     	;# 
  1237     1F14                     	;# 
  1238     1F15                     	;# 
  1239     1F16                     	;# 
  1240     1F17                     	;# 
  1241     1F18                     	;# 
  1242     1F19                     	;# 
  1243     1F1A                     	;# 
  1244     1F1B                     	;# 
  1245     1F1C                     	;# 
  1246     1F1D                     	;# 
  1247     1F1E                     	;# 
  1248     1F1F                     	;# 
  1249     1F20                     	;# 
  1250     1F21                     	;# 
  1251     1F22                     	;# 
  1252     1F23                     	;# 
  1253     1F24                     	;# 
  1254     1F25                     	;# 
  1255     1F26                     	;# 
  1256     1F27                     	;# 
  1257     1F38                     	;# 
  1258     1F39                     	;# 
  1259     1F3A                     	;# 
  1260     1F3B                     	;# 
  1261     1F3C                     	;# 
  1262     1F3D                     	;# 
  1263     1F3E                     	;# 
  1264     1F3F                     	;# 
  1265     1F43                     	;# 
  1266     1F44                     	;# 
  1267     1F45                     	;# 
  1268     1F46                     	;# 
  1269     1F47                     	;# 
  1270     1F48                     	;# 
  1271     1F49                     	;# 
  1272     1F4A                     	;# 
  1273     1F4E                     	;# 
  1274     1F4F                     	;# 
  1275     1F50                     	;# 
  1276     1F51                     	;# 
  1277     1F52                     	;# 
  1278     1F53                     	;# 
  1279     1F54                     	;# 
  1280     1F55                     	;# 
  1281     1F65                     	;# 
  1282     1F66                     	;# 
  1283     1F67                     	;# 
  1284     1F68                     	;# 
  1285     1F69                     	;# 
  1286     1F6A                     	;# 
  1287     1F6B                     	;# 
  1288     1FE4                     	;# 
  1289     1FE5                     	;# 
  1290     1FE6                     	;# 
  1291     1FE7                     	;# 
  1292     1FE8                     	;# 
  1293     1FE8                     	;# 
  1294     1FE9                     	;# 
  1295     1FEA                     	;# 
  1296     1FEB                     	;# 
  1297     1FED                     	;# 
  1298     1FEE                     	;# 
  1299     1FEF                     	;# 
  1300     0000                     	;# 
  1301     0001                     	;# 
  1302     0002                     	;# 
  1303     0003                     	;# 
  1304     0004                     	;# 
  1305     0005                     	;# 
  1306     0006                     	;# 
  1307     0007                     	;# 
  1308     0008                     	;# 
  1309     0009                     	;# 
  1310     000A                     	;# 
  1311     000B                     	;# 
  1312     000C                     	;# 
  1313     000D                     	;# 
  1314     000E                     	;# 
  1315     0010                     	;# 
  1316     0012                     	;# 
  1317     0013                     	;# 
  1318     0014                     	;# 
  1319     0016                     	;# 
  1320     0018                     	;# 
  1321     0019                     	;# 
  1322     001A                     	;# 
  1323     001C                     	;# 
  1324     008C                     	;# 
  1325     008C                     	;# 
  1326     008D                     	;# 
  1327     008E                     	;# 
  1328     008E                     	;# 
  1329     008F                     	;# 
  1330     0090                     	;# 
  1331     0090                     	;# 
  1332     0091                     	;# 
  1333     0092                     	;# 
  1334     0092                     	;# 
  1335     0093                     	;# 
  1336     0094                     	;# 
  1337     0094                     	;# 
  1338     0095                     	;# 
  1339     0096                     	;# 
  1340     0096                     	;# 
  1341     0097                     	;# 
  1342     0098                     	;# 
  1343     0099                     	;# 
  1344     009A                     	;# 
  1345     009B                     	;# 
  1346     009B                     	;# 
  1347     009C                     	;# 
  1348     009D                     	;# 
  1349     009D                     	;# 
  1350     009E                     	;# 
  1351     009F                     	;# 
  1352     010C                     	;# 
  1353     010C                     	;# 
  1354     010D                     	;# 
  1355     010E                     	;# 
  1356     010F                     	;# 
  1357     010F                     	;# 
  1358     0110                     	;# 
  1359     0111                     	;# 
  1360     0112                     	;# 
  1361     0113                     	;# 
  1362     0114                     	;# 
  1363     0115                     	;# 
  1364     0116                     	;# 
  1365     0117                     	;# 
  1366     0118                     	;# 
  1367     0119                     	;# 
  1368     0119                     	;# 
  1369     0119                     	;# 
  1370     011A                     	;# 
  1371     011A                     	;# 
  1372     011A                     	;# 
  1373     011B                     	;# 
  1374     011B                     	;# 
  1375     011B                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011C                     	;# 
  1379     011C                     	;# 
  1380     011C                     	;# 
  1381     011D                     	;# 
  1382     011D                     	;# 
  1383     011D                     	;# 
  1384     011E                     	;# 
  1385     011E                     	;# 
  1386     011E                     	;# 
  1387     011F                     	;# 
  1388     011F                     	;# 
  1389     011F                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     018C                     	;# 
  1393     018D                     	;# 
  1394     018E                     	;# 
  1395     018F                     	;# 
  1396     0190                     	;# 
  1397     0191                     	;# 
  1398     0192                     	;# 
  1399     0196                     	;# 
  1400     0197                     	;# 
  1401     0198                     	;# 
  1402     0199                     	;# 
  1403     019A                     	;# 
  1404     019B                     	;# 
  1405     019C                     	;# 
  1406     020C                     	;# 
  1407     020D                     	;# 
  1408     020E                     	;# 
  1409     020E                     	;# 
  1410     020F                     	;# 
  1411     020F                     	;# 
  1412     0210                     	;# 
  1413     0210                     	;# 
  1414     0211                     	;# 
  1415     0211                     	;# 
  1416     0212                     	;# 
  1417     0213                     	;# 
  1418     0214                     	;# 
  1419     0214                     	;# 
  1420     0215                     	;# 
  1421     0215                     	;# 
  1422     0216                     	;# 
  1423     0216                     	;# 
  1424     0217                     	;# 
  1425     0217                     	;# 
  1426     0218                     	;# 
  1427     0219                     	;# 
  1428     021A                     	;# 
  1429     021A                     	;# 
  1430     021B                     	;# 
  1431     021B                     	;# 
  1432     021C                     	;# 
  1433     021C                     	;# 
  1434     021D                     	;# 
  1435     021D                     	;# 
  1436     021E                     	;# 
  1437     021F                     	;# 
  1438     028C                     	;# 
  1439     028C                     	;# 
  1440     028D                     	;# 
  1441     028D                     	;# 
  1442     028E                     	;# 
  1443     028F                     	;# 
  1444     0290                     	;# 
  1445     0291                     	;# 
  1446     0292                     	;# 
  1447     0292                     	;# 
  1448     0293                     	;# 
  1449     0293                     	;# 
  1450     0294                     	;# 
  1451     0295                     	;# 
  1452     0296                     	;# 
  1453     0297                     	;# 
  1454     0298                     	;# 
  1455     0298                     	;# 
  1456     0299                     	;# 
  1457     0299                     	;# 
  1458     029A                     	;# 
  1459     029B                     	;# 
  1460     029C                     	;# 
  1461     029D                     	;# 
  1462     029F                     	;# 
  1463     030C                     	;# 
  1464     030C                     	;# 
  1465     030D                     	;# 
  1466     030E                     	;# 
  1467     030F                     	;# 
  1468     0310                     	;# 
  1469     0310                     	;# 
  1470     0311                     	;# 
  1471     0312                     	;# 
  1472     0313                     	;# 
  1473     0314                     	;# 
  1474     0314                     	;# 
  1475     0315                     	;# 
  1476     0316                     	;# 
  1477     0317                     	;# 
  1478     0318                     	;# 
  1479     0318                     	;# 
  1480     0319                     	;# 
  1481     031A                     	;# 
  1482     031B                     	;# 
  1483     031C                     	;# 
  1484     031C                     	;# 
  1485     031D                     	;# 
  1486     031E                     	;# 
  1487     031F                     	;# 
  1488     038C                     	;# 
  1489     038C                     	;# 
  1490     038D                     	;# 
  1491     038E                     	;# 
  1492     0390                     	;# 
  1493     0390                     	;# 
  1494     0391                     	;# 
  1495     0392                     	;# 
  1496     048C                     	;# 
  1497     048C                     	;# 
  1498     048D                     	;# 
  1499     048E                     	;# 
  1500     048F                     	;# 
  1501     048F                     	;# 
  1502     0490                     	;# 
  1503     0491                     	;# 
  1504     0492                     	;# 
  1505     0492                     	;# 
  1506     0493                     	;# 
  1507     0494                     	;# 
  1508     0495                     	;# 
  1509     0495                     	;# 
  1510     0496                     	;# 
  1511     0497                     	;# 
  1512     0498                     	;# 
  1513     0499                     	;# 
  1514     049A                     	;# 
  1515     049B                     	;# 
  1516     049C                     	;# 
  1517     049D                     	;# 
  1518     050C                     	;# 
  1519     050C                     	;# 
  1520     050D                     	;# 
  1521     050E                     	;# 
  1522     050F                     	;# 
  1523     050F                     	;# 
  1524     0510                     	;# 
  1525     0511                     	;# 
  1526     0512                     	;# 
  1527     0512                     	;# 
  1528     0513                     	;# 
  1529     0514                     	;# 
  1530     0515                     	;# 
  1531     0515                     	;# 
  1532     0516                     	;# 
  1533     0517                     	;# 
  1534     0518                     	;# 
  1535     0519                     	;# 
  1536     051A                     	;# 
  1537     051B                     	;# 
  1538     051C                     	;# 
  1539     051D                     	;# 
  1540     058C                     	;# 
  1541     058C                     	;# 
  1542     058D                     	;# 
  1543     058E                     	;# 
  1544     058F                     	;# 
  1545     058F                     	;# 
  1546     0590                     	;# 
  1547     0591                     	;# 
  1548     0592                     	;# 
  1549     0593                     	;# 
  1550     059C                     	;# 
  1551     059C                     	;# 
  1552     059D                     	;# 
  1553     059D                     	;# 
  1554     059E                     	;# 
  1555     059F                     	;# 
  1556     060C                     	;# 
  1557     060C                     	;# 
  1558     060D                     	;# 
  1559     060D                     	;# 
  1560     060E                     	;# 
  1561     060F                     	;# 
  1562     0610                     	;# 
  1563     0611                     	;# 
  1564     0612                     	;# 
  1565     0613                     	;# 
  1566     0614                     	;# 
  1567     0616                     	;# 
  1568     0616                     	;# 
  1569     0617                     	;# 
  1570     0617                     	;# 
  1571     0618                     	;# 
  1572     0619                     	;# 
  1573     061A                     	;# 
  1574     061B                     	;# 
  1575     061C                     	;# 
  1576     061D                     	;# 
  1577     061E                     	;# 
  1578     068C                     	;# 
  1579     068D                     	;# 
  1580     068E                     	;# 
  1581     068F                     	;# 
  1582     0690                     	;# 
  1583     0691                     	;# 
  1584     0692                     	;# 
  1585     0693                     	;# 
  1586     0694                     	;# 
  1587     070C                     	;# 
  1588     070D                     	;# 
  1589     070E                     	;# 
  1590     070F                     	;# 
  1591     0710                     	;# 
  1592     0711                     	;# 
  1593     0712                     	;# 
  1594     0713                     	;# 
  1595     0714                     	;# 
  1596     0716                     	;# 
  1597     0717                     	;# 
  1598     0718                     	;# 
  1599     0719                     	;# 
  1600     071A                     	;# 
  1601     071B                     	;# 
  1602     071C                     	;# 
  1603     071D                     	;# 
  1604     071E                     	;# 
  1605     0796                     	;# 
  1606     0797                     	;# 
  1607     0798                     	;# 
  1608     0799                     	;# 
  1609     079A                     	;# 
  1610     079B                     	;# 
  1611     079C                     	;# 
  1612     079D                     	;# 
  1613     080C                     	;# 
  1614     080D                     	;# 
  1615     080E                     	;# 
  1616     080F                     	;# 
  1617     0810                     	;# 
  1618     0811                     	;# 
  1619     0813                     	;# 
  1620     0814                     	;# 
  1621     081A                     	;# 
  1622     081A                     	;# 
  1623     081B                     	;# 
  1624     081C                     	;# 
  1625     081C                     	;# 
  1626     081D                     	;# 
  1627     081E                     	;# 
  1628     081F                     	;# 
  1629     088C                     	;# 
  1630     088D                     	;# 
  1631     088E                     	;# 
  1632     088F                     	;# 
  1633     0890                     	;# 
  1634     0891                     	;# 
  1635     0892                     	;# 
  1636     0893                     	;# 
  1637     0895                     	;# 
  1638     0896                     	;# 
  1639     0897                     	;# 
  1640     0898                     	;# 
  1641     0899                     	;# 
  1642     089A                     	;# 
  1643     089B                     	;# 
  1644     090C                     	;# 
  1645     090E                     	;# 
  1646     090F                     	;# 
  1647     091F                     	;# 
  1648     098F                     	;# 
  1649     098F                     	;# 
  1650     0990                     	;# 
  1651     0991                     	;# 
  1652     0992                     	;# 
  1653     0993                     	;# 
  1654     0994                     	;# 
  1655     0995                     	;# 
  1656     0996                     	;# 
  1657     0997                     	;# 
  1658     0A19                     	;# 
  1659     0A19                     	;# 
  1660     0A1A                     	;# 
  1661     0A1A                     	;# 
  1662     0A1B                     	;# 
  1663     0A1B                     	;# 
  1664     0A1B                     	;# 
  1665     0A1C                     	;# 
  1666     0A1C                     	;# 
  1667     0A1D                     	;# 
  1668     0A1D                     	;# 
  1669     0A1E                     	;# 
  1670     0A1E                     	;# 
  1671     0A1F                     	;# 
  1672     0A1F                     	;# 
  1673     0A1F                     	;# 
  1674     1E0F                     	;# 
  1675     1E10                     	;# 
  1676     1E11                     	;# 
  1677     1E12                     	;# 
  1678     1E13                     	;# 
  1679     1E14                     	;# 
  1680     1E15                     	;# 
  1681     1E16                     	;# 
  1682     1E17                     	;# 
  1683     1E18                     	;# 
  1684     1E19                     	;# 
  1685     1E1A                     	;# 
  1686     1E1B                     	;# 
  1687     1E1C                     	;# 
  1688     1E1D                     	;# 
  1689     1E1E                     	;# 
  1690     1E1F                     	;# 
  1691     1E20                     	;# 
  1692     1E21                     	;# 
  1693     1E22                     	;# 
  1694     1E23                     	;# 
  1695     1E24                     	;# 
  1696     1E25                     	;# 
  1697     1E26                     	;# 
  1698     1E27                     	;# 
  1699     1E28                     	;# 
  1700     1E29                     	;# 
  1701     1E2A                     	;# 
  1702     1E2B                     	;# 
  1703     1E2C                     	;# 
  1704     1E2D                     	;# 
  1705     1E2E                     	;# 
  1706     1E2F                     	;# 
  1707     1E30                     	;# 
  1708     1E31                     	;# 
  1709     1E32                     	;# 
  1710     1E33                     	;# 
  1711     1E34                     	;# 
  1712     1E35                     	;# 
  1713     1E36                     	;# 
  1714     1E37                     	;# 
  1715     1E8F                     	;# 
  1716     1E90                     	;# 
  1717     1E91                     	;# 
  1718     1E92                     	;# 
  1719     1E93                     	;# 
  1720     1E94                     	;# 
  1721     1E95                     	;# 
  1722     1E96                     	;# 
  1723     1E97                     	;# 
  1724     1E9C                     	;# 
  1725     1E9D                     	;# 
  1726     1E9E                     	;# 
  1727     1EA1                     	;# 
  1728     1EA2                     	;# 
  1729     1EA3                     	;# 
  1730     1EA4                     	;# 
  1731     1EA5                     	;# 
  1732     1EA9                     	;# 
  1733     1EAA                     	;# 
  1734     1EAB                     	;# 
  1735     1EAC                     	;# 
  1736     1EB1                     	;# 
  1737     1EB2                     	;# 
  1738     1EB3                     	;# 
  1739     1EB8                     	;# 
  1740     1EB9                     	;# 
  1741     1EBA                     	;# 
  1742     1EBB                     	;# 
  1743     1EBC                     	;# 
  1744     1EBD                     	;# 
  1745     1EBE                     	;# 
  1746     1EC3                     	;# 
  1747     1EC5                     	;# 
  1748     1EC6                     	;# 
  1749     1EC7                     	;# 
  1750     1EC8                     	;# 
  1751     1EC9                     	;# 
  1752     1ECA                     	;# 
  1753     1ECB                     	;# 
  1754     1ECC                     	;# 
  1755     1ECD                     	;# 
  1756     1ECE                     	;# 
  1757     1F10                     	;# 
  1758     1F11                     	;# 
  1759     1F12                     	;# 
  1760     1F13                     	;# 
  1761     1F14                     	;# 
  1762     1F15                     	;# 
  1763     1F16                     	;# 
  1764     1F17                     	;# 
  1765     1F18                     	;# 
  1766     1F19                     	;# 
  1767     1F1A                     	;# 
  1768     1F1B                     	;# 
  1769     1F1C                     	;# 
  1770     1F1D                     	;# 
  1771     1F1E                     	;# 
  1772     1F1F                     	;# 
  1773     1F20                     	;# 
  1774     1F21                     	;# 
  1775     1F22                     	;# 
  1776     1F23                     	;# 
  1777     1F24                     	;# 
  1778     1F25                     	;# 
  1779     1F26                     	;# 
  1780     1F27                     	;# 
  1781     1F38                     	;# 
  1782     1F39                     	;# 
  1783     1F3A                     	;# 
  1784     1F3B                     	;# 
  1785     1F3C                     	;# 
  1786     1F3D                     	;# 
  1787     1F3E                     	;# 
  1788     1F3F                     	;# 
  1789     1F43                     	;# 
  1790     1F44                     	;# 
  1791     1F45                     	;# 
  1792     1F46                     	;# 
  1793     1F47                     	;# 
  1794     1F48                     	;# 
  1795     1F49                     	;# 
  1796     1F4A                     	;# 
  1797     1F4E                     	;# 
  1798     1F4F                     	;# 
  1799     1F50                     	;# 
  1800     1F51                     	;# 
  1801     1F52                     	;# 
  1802     1F53                     	;# 
  1803     1F54                     	;# 
  1804     1F55                     	;# 
  1805     1F65                     	;# 
  1806     1F66                     	;# 
  1807     1F67                     	;# 
  1808     1F68                     	;# 
  1809     1F69                     	;# 
  1810     1F6A                     	;# 
  1811     1F6B                     	;# 
  1812     1FE4                     	;# 
  1813     1FE5                     	;# 
  1814     1FE6                     	;# 
  1815     1FE7                     	;# 
  1816     1FE8                     	;# 
  1817     1FE8                     	;# 
  1818     1FE9                     	;# 
  1819     1FEA                     	;# 
  1820     1FEB                     	;# 
  1821     1FED                     	;# 
  1822     1FEE                     	;# 
  1823     1FEF                     	;# 
  1824     0000                     	;# 
  1825     0001                     	;# 
  1826     0002                     	;# 
  1827     0003                     	;# 
  1828     0004                     	;# 
  1829     0005                     	;# 
  1830     0006                     	;# 
  1831     0007                     	;# 
  1832     0008                     	;# 
  1833     0009                     	;# 
  1834     000A                     	;# 
  1835     000B                     	;# 
  1836     000C                     	;# 
  1837     000D                     	;# 
  1838     000E                     	;# 
  1839     0010                     	;# 
  1840     0012                     	;# 
  1841     0013                     	;# 
  1842     0014                     	;# 
  1843     0016                     	;# 
  1844     0018                     	;# 
  1845     0019                     	;# 
  1846     001A                     	;# 
  1847     001C                     	;# 
  1848     008C                     	;# 
  1849     008C                     	;# 
  1850     008D                     	;# 
  1851     008E                     	;# 
  1852     008E                     	;# 
  1853     008F                     	;# 
  1854     0090                     	;# 
  1855     0090                     	;# 
  1856     0091                     	;# 
  1857     0092                     	;# 
  1858     0092                     	;# 
  1859     0093                     	;# 
  1860     0094                     	;# 
  1861     0094                     	;# 
  1862     0095                     	;# 
  1863     0096                     	;# 
  1864     0096                     	;# 
  1865     0097                     	;# 
  1866     0098                     	;# 
  1867     0099                     	;# 
  1868     009A                     	;# 
  1869     009B                     	;# 
  1870     009B                     	;# 
  1871     009C                     	;# 
  1872     009D                     	;# 
  1873     009D                     	;# 
  1874     009E                     	;# 
  1875     009F                     	;# 
  1876     010C                     	;# 
  1877     010C                     	;# 
  1878     010D                     	;# 
  1879     010E                     	;# 
  1880     010F                     	;# 
  1881     010F                     	;# 
  1882     0110                     	;# 
  1883     0111                     	;# 
  1884     0112                     	;# 
  1885     0113                     	;# 
  1886     0114                     	;# 
  1887     0115                     	;# 
  1888     0116                     	;# 
  1889     0117                     	;# 
  1890     0118                     	;# 
  1891     0119                     	;# 
  1892     0119                     	;# 
  1893     0119                     	;# 
  1894     011A                     	;# 
  1895     011A                     	;# 
  1896     011A                     	;# 
  1897     011B                     	;# 
  1898     011B                     	;# 
  1899     011B                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011C                     	;# 
  1903     011C                     	;# 
  1904     011C                     	;# 
  1905     011D                     	;# 
  1906     011D                     	;# 
  1907     011D                     	;# 
  1908     011E                     	;# 
  1909     011E                     	;# 
  1910     011E                     	;# 
  1911     011F                     	;# 
  1912     011F                     	;# 
  1913     011F                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     018C                     	;# 
  1917     018D                     	;# 
  1918     018E                     	;# 
  1919     018F                     	;# 
  1920     0190                     	;# 
  1921     0191                     	;# 
  1922     0192                     	;# 
  1923     0196                     	;# 
  1924     0197                     	;# 
  1925     0198                     	;# 
  1926     0199                     	;# 
  1927     019A                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     020C                     	;# 
  1931     020D                     	;# 
  1932     020E                     	;# 
  1933     020E                     	;# 
  1934     020F                     	;# 
  1935     020F                     	;# 
  1936     0210                     	;# 
  1937     0210                     	;# 
  1938     0211                     	;# 
  1939     0211                     	;# 
  1940     0212                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0216                     	;# 
  1947     0216                     	;# 
  1948     0217                     	;# 
  1949     0217                     	;# 
  1950     0218                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021A                     	;# 
  1954     021B                     	;# 
  1955     021B                     	;# 
  1956     021C                     	;# 
  1957     021C                     	;# 
  1958     021D                     	;# 
  1959     021D                     	;# 
  1960     021E                     	;# 
  1961     021F                     	;# 
  1962     028C                     	;# 
  1963     028C                     	;# 
  1964     028D                     	;# 
  1965     028D                     	;# 
  1966     028E                     	;# 
  1967     028F                     	;# 
  1968     0290                     	;# 
  1969     0291                     	;# 
  1970     0292                     	;# 
  1971     0292                     	;# 
  1972     0293                     	;# 
  1973     0293                     	;# 
  1974     0294                     	;# 
  1975     0295                     	;# 
  1976     0296                     	;# 
  1977     0297                     	;# 
  1978     0298                     	;# 
  1979     0298                     	;# 
  1980     0299                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029C                     	;# 
  1985     029D                     	;# 
  1986     029F                     	;# 
  1987     030C                     	;# 
  1988     030C                     	;# 
  1989     030D                     	;# 
  1990     030E                     	;# 
  1991     030F                     	;# 
  1992     0310                     	;# 
  1993     0310                     	;# 
  1994     0311                     	;# 
  1995     0312                     	;# 
  1996     0313                     	;# 
  1997     0314                     	;# 
  1998     0314                     	;# 
  1999     0315                     	;# 
  2000     0316                     	;# 
  2001     0317                     	;# 
  2002     0318                     	;# 
  2003     0318                     	;# 
  2004     0319                     	;# 
  2005     031A                     	;# 
  2006     031B                     	;# 
  2007     031C                     	;# 
  2008     031C                     	;# 
  2009     031D                     	;# 
  2010     031E                     	;# 
  2011     031F                     	;# 
  2012     038C                     	;# 
  2013     038C                     	;# 
  2014     038D                     	;# 
  2015     038E                     	;# 
  2016     0390                     	;# 
  2017     0390                     	;# 
  2018     0391                     	;# 
  2019     0392                     	;# 
  2020     048C                     	;# 
  2021     048C                     	;# 
  2022     048D                     	;# 
  2023     048E                     	;# 
  2024     048F                     	;# 
  2025     048F                     	;# 
  2026     0490                     	;# 
  2027     0491                     	;# 
  2028     0492                     	;# 
  2029     0492                     	;# 
  2030     0493                     	;# 
  2031     0494                     	;# 
  2032     0495                     	;# 
  2033     0495                     	;# 
  2034     0496                     	;# 
  2035     0497                     	;# 
  2036     0498                     	;# 
  2037     0499                     	;# 
  2038     049A                     	;# 
  2039     049B                     	;# 
  2040     049C                     	;# 
  2041     049D                     	;# 
  2042     050C                     	;# 
  2043     050C                     	;# 
  2044     050D                     	;# 
  2045     050E                     	;# 
  2046     050F                     	;# 
  2047     050F                     	;# 
  2048     0510                     	;# 
  2049     0511                     	;# 
  2050     0512                     	;# 
  2051     0512                     	;# 
  2052     0513                     	;# 
  2053     0514                     	;# 
  2054     0515                     	;# 
  2055     0515                     	;# 
  2056     0516                     	;# 
  2057     0517                     	;# 
  2058     0518                     	;# 
  2059     0519                     	;# 
  2060     051A                     	;# 
  2061     051B                     	;# 
  2062     051C                     	;# 
  2063     051D                     	;# 
  2064     058C                     	;# 
  2065     058C                     	;# 
  2066     058D                     	;# 
  2067     058E                     	;# 
  2068     058F                     	;# 
  2069     058F                     	;# 
  2070     0590                     	;# 
  2071     0591                     	;# 
  2072     0592                     	;# 
  2073     0593                     	;# 
  2074     059C                     	;# 
  2075     059C                     	;# 
  2076     059D                     	;# 
  2077     059D                     	;# 
  2078     059E                     	;# 
  2079     059F                     	;# 
  2080     060C                     	;# 
  2081     060C                     	;# 
  2082     060D                     	;# 
  2083     060D                     	;# 
  2084     060E                     	;# 
  2085     060F                     	;# 
  2086     0610                     	;# 
  2087     0611                     	;# 
  2088     0612                     	;# 
  2089     0613                     	;# 
  2090     0614                     	;# 
  2091     0616                     	;# 
  2092     0616                     	;# 
  2093     0617                     	;# 
  2094     0617                     	;# 
  2095     0618                     	;# 
  2096     0619                     	;# 
  2097     061A                     	;# 
  2098     061B                     	;# 
  2099     061C                     	;# 
  2100     061D                     	;# 
  2101     061E                     	;# 
  2102     068C                     	;# 
  2103     068D                     	;# 
  2104     068E                     	;# 
  2105     068F                     	;# 
  2106     0690                     	;# 
  2107     0691                     	;# 
  2108     0692                     	;# 
  2109     0693                     	;# 
  2110     0694                     	;# 
  2111     070C                     	;# 
  2112     070D                     	;# 
  2113     070E                     	;# 
  2114     070F                     	;# 
  2115     0710                     	;# 
  2116     0711                     	;# 
  2117     0712                     	;# 
  2118     0713                     	;# 
  2119     0714                     	;# 
  2120     0716                     	;# 
  2121     0717                     	;# 
  2122     0718                     	;# 
  2123     0719                     	;# 
  2124     071A                     	;# 
  2125     071B                     	;# 
  2126     071C                     	;# 
  2127     071D                     	;# 
  2128     071E                     	;# 
  2129     0796                     	;# 
  2130     0797                     	;# 
  2131     0798                     	;# 
  2132     0799                     	;# 
  2133     079A                     	;# 
  2134     079B                     	;# 
  2135     079C                     	;# 
  2136     079D                     	;# 
  2137     080C                     	;# 
  2138     080D                     	;# 
  2139     080E                     	;# 
  2140     080F                     	;# 
  2141     0810                     	;# 
  2142     0811                     	;# 
  2143     0813                     	;# 
  2144     0814                     	;# 
  2145     081A                     	;# 
  2146     081A                     	;# 
  2147     081B                     	;# 
  2148     081C                     	;# 
  2149     081C                     	;# 
  2150     081D                     	;# 
  2151     081E                     	;# 
  2152     081F                     	;# 
  2153     088C                     	;# 
  2154     088D                     	;# 
  2155     088E                     	;# 
  2156     088F                     	;# 
  2157     0890                     	;# 
  2158     0891                     	;# 
  2159     0892                     	;# 
  2160     0893                     	;# 
  2161     0895                     	;# 
  2162     0896                     	;# 
  2163     0897                     	;# 
  2164     0898                     	;# 
  2165     0899                     	;# 
  2166     089A                     	;# 
  2167     089B                     	;# 
  2168     090C                     	;# 
  2169     090E                     	;# 
  2170     090F                     	;# 
  2171     091F                     	;# 
  2172     098F                     	;# 
  2173     098F                     	;# 
  2174     0990                     	;# 
  2175     0991                     	;# 
  2176     0992                     	;# 
  2177     0993                     	;# 
  2178     0994                     	;# 
  2179     0995                     	;# 
  2180     0996                     	;# 
  2181     0997                     	;# 
  2182     0A19                     	;# 
  2183     0A19                     	;# 
  2184     0A1A                     	;# 
  2185     0A1A                     	;# 
  2186     0A1B                     	;# 
  2187     0A1B                     	;# 
  2188     0A1B                     	;# 
  2189     0A1C                     	;# 
  2190     0A1C                     	;# 
  2191     0A1D                     	;# 
  2192     0A1D                     	;# 
  2193     0A1E                     	;# 
  2194     0A1E                     	;# 
  2195     0A1F                     	;# 
  2196     0A1F                     	;# 
  2197     0A1F                     	;# 
  2198     1E0F                     	;# 
  2199     1E10                     	;# 
  2200     1E11                     	;# 
  2201     1E12                     	;# 
  2202     1E13                     	;# 
  2203     1E14                     	;# 
  2204     1E15                     	;# 
  2205     1E16                     	;# 
  2206     1E17                     	;# 
  2207     1E18                     	;# 
  2208     1E19                     	;# 
  2209     1E1A                     	;# 
  2210     1E1B                     	;# 
  2211     1E1C                     	;# 
  2212     1E1D                     	;# 
  2213     1E1E                     	;# 
  2214     1E1F                     	;# 
  2215     1E20                     	;# 
  2216     1E21                     	;# 
  2217     1E22                     	;# 
  2218     1E23                     	;# 
  2219     1E24                     	;# 
  2220     1E25                     	;# 
  2221     1E26                     	;# 
  2222     1E27                     	;# 
  2223     1E28                     	;# 
  2224     1E29                     	;# 
  2225     1E2A                     	;# 
  2226     1E2B                     	;# 
  2227     1E2C                     	;# 
  2228     1E2D                     	;# 
  2229     1E2E                     	;# 
  2230     1E2F                     	;# 
  2231     1E30                     	;# 
  2232     1E31                     	;# 
  2233     1E32                     	;# 
  2234     1E33                     	;# 
  2235     1E34                     	;# 
  2236     1E35                     	;# 
  2237     1E36                     	;# 
  2238     1E37                     	;# 
  2239     1E8F                     	;# 
  2240     1E90                     	;# 
  2241     1E91                     	;# 
  2242     1E92                     	;# 
  2243     1E93                     	;# 
  2244     1E94                     	;# 
  2245     1E95                     	;# 
  2246     1E96                     	;# 
  2247     1E97                     	;# 
  2248     1E9C                     	;# 
  2249     1E9D                     	;# 
  2250     1E9E                     	;# 
  2251     1EA1                     	;# 
  2252     1EA2                     	;# 
  2253     1EA3                     	;# 
  2254     1EA4                     	;# 
  2255     1EA5                     	;# 
  2256     1EA9                     	;# 
  2257     1EAA                     	;# 
  2258     1EAB                     	;# 
  2259     1EAC                     	;# 
  2260     1EB1                     	;# 
  2261     1EB2                     	;# 
  2262     1EB3                     	;# 
  2263     1EB8                     	;# 
  2264     1EB9                     	;# 
  2265     1EBA                     	;# 
  2266     1EBB                     	;# 
  2267     1EBC                     	;# 
  2268     1EBD                     	;# 
  2269     1EBE                     	;# 
  2270     1EC3                     	;# 
  2271     1EC5                     	;# 
  2272     1EC6                     	;# 
  2273     1EC7                     	;# 
  2274     1EC8                     	;# 
  2275     1EC9                     	;# 
  2276     1ECA                     	;# 
  2277     1ECB                     	;# 
  2278     1ECC                     	;# 
  2279     1ECD                     	;# 
  2280     1ECE                     	;# 
  2281     1F10                     	;# 
  2282     1F11                     	;# 
  2283     1F12                     	;# 
  2284     1F13                     	;# 
  2285     1F14                     	;# 
  2286     1F15                     	;# 
  2287     1F16                     	;# 
  2288     1F17                     	;# 
  2289     1F18                     	;# 
  2290     1F19                     	;# 
  2291     1F1A                     	;# 
  2292     1F1B                     	;# 
  2293     1F1C                     	;# 
  2294     1F1D                     	;# 
  2295     1F1E                     	;# 
  2296     1F1F                     	;# 
  2297     1F20                     	;# 
  2298     1F21                     	;# 
  2299     1F22                     	;# 
  2300     1F23                     	;# 
  2301     1F24                     	;# 
  2302     1F25                     	;# 
  2303     1F26                     	;# 
  2304     1F27                     	;# 
  2305     1F38                     	;# 
  2306     1F39                     	;# 
  2307     1F3A                     	;# 
  2308     1F3B                     	;# 
  2309     1F3C                     	;# 
  2310     1F3D                     	;# 
  2311     1F3E                     	;# 
  2312     1F3F                     	;# 
  2313     1F43                     	;# 
  2314     1F44                     	;# 
  2315     1F45                     	;# 
  2316     1F46                     	;# 
  2317     1F47                     	;# 
  2318     1F48                     	;# 
  2319     1F49                     	;# 
  2320     1F4A                     	;# 
  2321     1F4E                     	;# 
  2322     1F4F                     	;# 
  2323     1F50                     	;# 
  2324     1F51                     	;# 
  2325     1F52                     	;# 
  2326     1F53                     	;# 
  2327     1F54                     	;# 
  2328     1F55                     	;# 
  2329     1F65                     	;# 
  2330     1F66                     	;# 
  2331     1F67                     	;# 
  2332     1F68                     	;# 
  2333     1F69                     	;# 
  2334     1F6A                     	;# 
  2335     1F6B                     	;# 
  2336     1FE4                     	;# 
  2337     1FE5                     	;# 
  2338     1FE6                     	;# 
  2339     1FE7                     	;# 
  2340     1FE8                     	;# 
  2341     1FE8                     	;# 
  2342     1FE9                     	;# 
  2343     1FEA                     	;# 
  2344     1FEB                     	;# 
  2345     1FED                     	;# 
  2346     1FEE                     	;# 
  2347     1FEF                     	;# 
  2348     0000                     	;# 
  2349     0001                     	;# 
  2350     0002                     	;# 
  2351     0003                     	;# 
  2352     0004                     	;# 
  2353     0005                     	;# 
  2354     0006                     	;# 
  2355     0007                     	;# 
  2356     0008                     	;# 
  2357     0009                     	;# 
  2358     000A                     	;# 
  2359     000B                     	;# 
  2360     000C                     	;# 
  2361     000D                     	;# 
  2362     000E                     	;# 
  2363     0010                     	;# 
  2364     0012                     	;# 
  2365     0013                     	;# 
  2366     0014                     	;# 
  2367     0016                     	;# 
  2368     0018                     	;# 
  2369     0019                     	;# 
  2370     001A                     	;# 
  2371     001C                     	;# 
  2372     008C                     	;# 
  2373     008C                     	;# 
  2374     008D                     	;# 
  2375     008E                     	;# 
  2376     008E                     	;# 
  2377     008F                     	;# 
  2378     0090                     	;# 
  2379     0090                     	;# 
  2380     0091                     	;# 
  2381     0092                     	;# 
  2382     0092                     	;# 
  2383     0093                     	;# 
  2384     0094                     	;# 
  2385     0094                     	;# 
  2386     0095                     	;# 
  2387     0096                     	;# 
  2388     0096                     	;# 
  2389     0097                     	;# 
  2390     0098                     	;# 
  2391     0099                     	;# 
  2392     009A                     	;# 
  2393     009B                     	;# 
  2394     009B                     	;# 
  2395     009C                     	;# 
  2396     009D                     	;# 
  2397     009D                     	;# 
  2398     009E                     	;# 
  2399     009F                     	;# 
  2400     010C                     	;# 
  2401     010C                     	;# 
  2402     010D                     	;# 
  2403     010E                     	;# 
  2404     010F                     	;# 
  2405     010F                     	;# 
  2406     0110                     	;# 
  2407     0111                     	;# 
  2408     0112                     	;# 
  2409     0113                     	;# 
  2410     0114                     	;# 
  2411     0115                     	;# 
  2412     0116                     	;# 
  2413     0117                     	;# 
  2414     0118                     	;# 
  2415     0119                     	;# 
  2416     0119                     	;# 
  2417     0119                     	;# 
  2418     011A                     	;# 
  2419     011A                     	;# 
  2420     011A                     	;# 
  2421     011B                     	;# 
  2422     011B                     	;# 
  2423     011B                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011C                     	;# 
  2427     011C                     	;# 
  2428     011C                     	;# 
  2429     011D                     	;# 
  2430     011D                     	;# 
  2431     011D                     	;# 
  2432     011E                     	;# 
  2433     011E                     	;# 
  2434     011E                     	;# 
  2435     011F                     	;# 
  2436     011F                     	;# 
  2437     011F                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     018C                     	;# 
  2441     018D                     	;# 
  2442     018E                     	;# 
  2443     018F                     	;# 
  2444     0190                     	;# 
  2445     0191                     	;# 
  2446     0192                     	;# 
  2447     0196                     	;# 
  2448     0197                     	;# 
  2449     0198                     	;# 
  2450     0199                     	;# 
  2451     019A                     	;# 
  2452     019B                     	;# 
  2453     019C                     	;# 
  2454     020C                     	;# 
  2455     020D                     	;# 
  2456     020E                     	;# 
  2457     020E                     	;# 
  2458     020F                     	;# 
  2459     020F                     	;# 
  2460     0210                     	;# 
  2461     0210                     	;# 
  2462     0211                     	;# 
  2463     0211                     	;# 
  2464     0212                     	;# 
  2465     0213                     	;# 
  2466     0214                     	;# 
  2467     0214                     	;# 
  2468     0215                     	;# 
  2469     0215                     	;# 
  2470     0216                     	;# 
  2471     0216                     	;# 
  2472     0217                     	;# 
  2473     0217                     	;# 
  2474     0218                     	;# 
  2475     0219                     	;# 
  2476     021A                     	;# 
  2477     021A                     	;# 
  2478     021B                     	;# 
  2479     021B                     	;# 
  2480     021C                     	;# 
  2481     021C                     	;# 
  2482     021D                     	;# 
  2483     021D                     	;# 
  2484     021E                     	;# 
  2485     021F                     	;# 
  2486     028C                     	;# 
  2487     028C                     	;# 
  2488     028D                     	;# 
  2489     028D                     	;# 
  2490     028E                     	;# 
  2491     028F                     	;# 
  2492     0290                     	;# 
  2493     0291                     	;# 
  2494     0292                     	;# 
  2495     0292                     	;# 
  2496     0293                     	;# 
  2497     0293                     	;# 
  2498     0294                     	;# 
  2499     0295                     	;# 
  2500     0296                     	;# 
  2501     0297                     	;# 
  2502     0298                     	;# 
  2503     0298                     	;# 
  2504     0299                     	;# 
  2505     0299                     	;# 
  2506     029A                     	;# 
  2507     029B                     	;# 
  2508     029C                     	;# 
  2509     029D                     	;# 
  2510     029F                     	;# 
  2511     030C                     	;# 
  2512     030C                     	;# 
  2513     030D                     	;# 
  2514     030E                     	;# 
  2515     030F                     	;# 
  2516     0310                     	;# 
  2517     0310                     	;# 
  2518     0311                     	;# 
  2519     0312                     	;# 
  2520     0313                     	;# 
  2521     0314                     	;# 
  2522     0314                     	;# 
  2523     0315                     	;# 
  2524     0316                     	;# 
  2525     0317                     	;# 
  2526     0318                     	;# 
  2527     0318                     	;# 
  2528     0319                     	;# 
  2529     031A                     	;# 
  2530     031B                     	;# 
  2531     031C                     	;# 
  2532     031C                     	;# 
  2533     031D                     	;# 
  2534     031E                     	;# 
  2535     031F                     	;# 
  2536     038C                     	;# 
  2537     038C                     	;# 
  2538     038D                     	;# 
  2539     038E                     	;# 
  2540     0390                     	;# 
  2541     0390                     	;# 
  2542     0391                     	;# 
  2543     0392                     	;# 
  2544     048C                     	;# 
  2545     048C                     	;# 
  2546     048D                     	;# 
  2547     048E                     	;# 
  2548     048F                     	;# 
  2549     048F                     	;# 
  2550     0490                     	;# 
  2551     0491                     	;# 
  2552     0492                     	;# 
  2553     0492                     	;# 
  2554     0493                     	;# 
  2555     0494                     	;# 
  2556     0495                     	;# 
  2557     0495                     	;# 
  2558     0496                     	;# 
  2559     0497                     	;# 
  2560     0498                     	;# 
  2561     0499                     	;# 
  2562     049A                     	;# 
  2563     049B                     	;# 
  2564     049C                     	;# 
  2565     049D                     	;# 
  2566     050C                     	;# 
  2567     050C                     	;# 
  2568     050D                     	;# 
  2569     050E                     	;# 
  2570     050F                     	;# 
  2571     050F                     	;# 
  2572     0510                     	;# 
  2573     0511                     	;# 
  2574     0512                     	;# 
  2575     0512                     	;# 
  2576     0513                     	;# 
  2577     0514                     	;# 
  2578     0515                     	;# 
  2579     0515                     	;# 
  2580     0516                     	;# 
  2581     0517                     	;# 
  2582     0518                     	;# 
  2583     0519                     	;# 
  2584     051A                     	;# 
  2585     051B                     	;# 
  2586     051C                     	;# 
  2587     051D                     	;# 
  2588     058C                     	;# 
  2589     058C                     	;# 
  2590     058D                     	;# 
  2591     058E                     	;# 
  2592     058F                     	;# 
  2593     058F                     	;# 
  2594     0590                     	;# 
  2595     0591                     	;# 
  2596     0592                     	;# 
  2597     0593                     	;# 
  2598     059C                     	;# 
  2599     059C                     	;# 
  2600     059D                     	;# 
  2601     059D                     	;# 
  2602     059E                     	;# 
  2603     059F                     	;# 
  2604     060C                     	;# 
  2605     060C                     	;# 
  2606     060D                     	;# 
  2607     060D                     	;# 
  2608     060E                     	;# 
  2609     060F                     	;# 
  2610     0610                     	;# 
  2611     0611                     	;# 
  2612     0612                     	;# 
  2613     0613                     	;# 
  2614     0614                     	;# 
  2615     0616                     	;# 
  2616     0616                     	;# 
  2617     0617                     	;# 
  2618     0617                     	;# 
  2619     0618                     	;# 
  2620     0619                     	;# 
  2621     061A                     	;# 
  2622     061B                     	;# 
  2623     061C                     	;# 
  2624     061D                     	;# 
  2625     061E                     	;# 
  2626     068C                     	;# 
  2627     068D                     	;# 
  2628     068E                     	;# 
  2629     068F                     	;# 
  2630     0690                     	;# 
  2631     0691                     	;# 
  2632     0692                     	;# 
  2633     0693                     	;# 
  2634     0694                     	;# 
  2635     070C                     	;# 
  2636     070D                     	;# 
  2637     070E                     	;# 
  2638     070F                     	;# 
  2639     0710                     	;# 
  2640     0711                     	;# 
  2641     0712                     	;# 
  2642     0713                     	;# 
  2643     0714                     	;# 
  2644     0716                     	;# 
  2645     0717                     	;# 
  2646     0718                     	;# 
  2647     0719                     	;# 
  2648     071A                     	;# 
  2649     071B                     	;# 
  2650     071C                     	;# 
  2651     071D                     	;# 
  2652     071E                     	;# 
  2653     0796                     	;# 
  2654     0797                     	;# 
  2655     0798                     	;# 
  2656     0799                     	;# 
  2657     079A                     	;# 
  2658     079B                     	;# 
  2659     079C                     	;# 
  2660     079D                     	;# 
  2661     080C                     	;# 
  2662     080D                     	;# 
  2663     080E                     	;# 
  2664     080F                     	;# 
  2665     0810                     	;# 
  2666     0811                     	;# 
  2667     0813                     	;# 
  2668     0814                     	;# 
  2669     081A                     	;# 
  2670     081A                     	;# 
  2671     081B                     	;# 
  2672     081C                     	;# 
  2673     081C                     	;# 
  2674     081D                     	;# 
  2675     081E                     	;# 
  2676     081F                     	;# 
  2677     088C                     	;# 
  2678     088D                     	;# 
  2679     088E                     	;# 
  2680     088F                     	;# 
  2681     0890                     	;# 
  2682     0891                     	;# 
  2683     0892                     	;# 
  2684     0893                     	;# 
  2685     0895                     	;# 
  2686     0896                     	;# 
  2687     0897                     	;# 
  2688     0898                     	;# 
  2689     0899                     	;# 
  2690     089A                     	;# 
  2691     089B                     	;# 
  2692     090C                     	;# 
  2693     090E                     	;# 
  2694     090F                     	;# 
  2695     091F                     	;# 
  2696     098F                     	;# 
  2697     098F                     	;# 
  2698     0990                     	;# 
  2699     0991                     	;# 
  2700     0992                     	;# 
  2701     0993                     	;# 
  2702     0994                     	;# 
  2703     0995                     	;# 
  2704     0996                     	;# 
  2705     0997                     	;# 
  2706     0A19                     	;# 
  2707     0A19                     	;# 
  2708     0A1A                     	;# 
  2709     0A1A                     	;# 
  2710     0A1B                     	;# 
  2711     0A1B                     	;# 
  2712     0A1B                     	;# 
  2713     0A1C                     	;# 
  2714     0A1C                     	;# 
  2715     0A1D                     	;# 
  2716     0A1D                     	;# 
  2717     0A1E                     	;# 
  2718     0A1E                     	;# 
  2719     0A1F                     	;# 
  2720     0A1F                     	;# 
  2721     0A1F                     	;# 
  2722     1E0F                     	;# 
  2723     1E10                     	;# 
  2724     1E11                     	;# 
  2725     1E12                     	;# 
  2726     1E13                     	;# 
  2727     1E14                     	;# 
  2728     1E15                     	;# 
  2729     1E16                     	;# 
  2730     1E17                     	;# 
  2731     1E18                     	;# 
  2732     1E19                     	;# 
  2733     1E1A                     	;# 
  2734     1E1B                     	;# 
  2735     1E1C                     	;# 
  2736     1E1D                     	;# 
  2737     1E1E                     	;# 
  2738     1E1F                     	;# 
  2739     1E20                     	;# 
  2740     1E21                     	;# 
  2741     1E22                     	;# 
  2742     1E23                     	;# 
  2743     1E24                     	;# 
  2744     1E25                     	;# 
  2745     1E26                     	;# 
  2746     1E27                     	;# 
  2747     1E28                     	;# 
  2748     1E29                     	;# 
  2749     1E2A                     	;# 
  2750     1E2B                     	;# 
  2751     1E2C                     	;# 
  2752     1E2D                     	;# 
  2753     1E2E                     	;# 
  2754     1E2F                     	;# 
  2755     1E30                     	;# 
  2756     1E31                     	;# 
  2757     1E32                     	;# 
  2758     1E33                     	;# 
  2759     1E34                     	;# 
  2760     1E35                     	;# 
  2761     1E36                     	;# 
  2762     1E37                     	;# 
  2763     1E8F                     	;# 
  2764     1E90                     	;# 
  2765     1E91                     	;# 
  2766     1E92                     	;# 
  2767     1E93                     	;# 
  2768     1E94                     	;# 
  2769     1E95                     	;# 
  2770     1E96                     	;# 
  2771     1E97                     	;# 
  2772     1E9C                     	;# 
  2773     1E9D                     	;# 
  2774     1E9E                     	;# 
  2775     1EA1                     	;# 
  2776     1EA2                     	;# 
  2777     1EA3                     	;# 
  2778     1EA4                     	;# 
  2779     1EA5                     	;# 
  2780     1EA9                     	;# 
  2781     1EAA                     	;# 
  2782     1EAB                     	;# 
  2783     1EAC                     	;# 
  2784     1EB1                     	;# 
  2785     1EB2                     	;# 
  2786     1EB3                     	;# 
  2787     1EB8                     	;# 
  2788     1EB9                     	;# 
  2789     1EBA                     	;# 
  2790     1EBB                     	;# 
  2791     1EBC                     	;# 
  2792     1EBD                     	;# 
  2793     1EBE                     	;# 
  2794     1EC3                     	;# 
  2795     1EC5                     	;# 
  2796     1EC6                     	;# 
  2797     1EC7                     	;# 
  2798     1EC8                     	;# 
  2799     1EC9                     	;# 
  2800     1ECA                     	;# 
  2801     1ECB                     	;# 
  2802     1ECC                     	;# 
  2803     1ECD                     	;# 
  2804     1ECE                     	;# 
  2805     1F10                     	;# 
  2806     1F11                     	;# 
  2807     1F12                     	;# 
  2808     1F13                     	;# 
  2809     1F14                     	;# 
  2810     1F15                     	;# 
  2811     1F16                     	;# 
  2812     1F17                     	;# 
  2813     1F18                     	;# 
  2814     1F19                     	;# 
  2815     1F1A                     	;# 
  2816     1F1B                     	;# 
  2817     1F1C                     	;# 
  2818     1F1D                     	;# 
  2819     1F1E                     	;# 
  2820     1F1F                     	;# 
  2821     1F20                     	;# 
  2822     1F21                     	;# 
  2823     1F22                     	;# 
  2824     1F23                     	;# 
  2825     1F24                     	;# 
  2826     1F25                     	;# 
  2827     1F26                     	;# 
  2828     1F27                     	;# 
  2829     1F38                     	;# 
  2830     1F39                     	;# 
  2831     1F3A                     	;# 
  2832     1F3B                     	;# 
  2833     1F3C                     	;# 
  2834     1F3D                     	;# 
  2835     1F3E                     	;# 
  2836     1F3F                     	;# 
  2837     1F43                     	;# 
  2838     1F44                     	;# 
  2839     1F45                     	;# 
  2840     1F46                     	;# 
  2841     1F47                     	;# 
  2842     1F48                     	;# 
  2843     1F49                     	;# 
  2844     1F4A                     	;# 
  2845     1F4E                     	;# 
  2846     1F4F                     	;# 
  2847     1F50                     	;# 
  2848     1F51                     	;# 
  2849     1F52                     	;# 
  2850     1F53                     	;# 
  2851     1F54                     	;# 
  2852     1F55                     	;# 
  2853     1F65                     	;# 
  2854     1F66                     	;# 
  2855     1F67                     	;# 
  2856     1F68                     	;# 
  2857     1F69                     	;# 
  2858     1F6A                     	;# 
  2859     1F6B                     	;# 
  2860     1FE4                     	;# 
  2861     1FE5                     	;# 
  2862     1FE6                     	;# 
  2863     1FE7                     	;# 
  2864     1FE8                     	;# 
  2865     1FE8                     	;# 
  2866     1FE9                     	;# 
  2867     1FEA                     	;# 
  2868     1FEB                     	;# 
  2869     1FED                     	;# 
  2870     1FEE                     	;# 
  2871     1FEF                     	;# 
  2872     0000                     	;# 
  2873     0001                     	;# 
  2874     0002                     	;# 
  2875     0003                     	;# 
  2876     0004                     	;# 
  2877     0005                     	;# 
  2878     0006                     	;# 
  2879     0007                     	;# 
  2880     0008                     	;# 
  2881     0009                     	;# 
  2882     000A                     	;# 
  2883     000B                     	;# 
  2884     000C                     	;# 
  2885     000D                     	;# 
  2886     000E                     	;# 
  2887     0010                     	;# 
  2888     0012                     	;# 
  2889     0013                     	;# 
  2890     0014                     	;# 
  2891     0016                     	;# 
  2892     0018                     	;# 
  2893     0019                     	;# 
  2894     001A                     	;# 
  2895     001C                     	;# 
  2896     008C                     	;# 
  2897     008C                     	;# 
  2898     008D                     	;# 
  2899     008E                     	;# 
  2900     008E                     	;# 
  2901     008F                     	;# 
  2902     0090                     	;# 
  2903     0090                     	;# 
  2904     0091                     	;# 
  2905     0092                     	;# 
  2906     0092                     	;# 
  2907     0093                     	;# 
  2908     0094                     	;# 
  2909     0094                     	;# 
  2910     0095                     	;# 
  2911     0096                     	;# 
  2912     0096                     	;# 
  2913     0097                     	;# 
  2914     0098                     	;# 
  2915     0099                     	;# 
  2916     009A                     	;# 
  2917     009B                     	;# 
  2918     009B                     	;# 
  2919     009C                     	;# 
  2920     009D                     	;# 
  2921     009D                     	;# 
  2922     009E                     	;# 
  2923     009F                     	;# 
  2924     010C                     	;# 
  2925     010C                     	;# 
  2926     010D                     	;# 
  2927     010E                     	;# 
  2928     010F                     	;# 
  2929     010F                     	;# 
  2930     0110                     	;# 
  2931     0111                     	;# 
  2932     0112                     	;# 
  2933     0113                     	;# 
  2934     0114                     	;# 
  2935     0115                     	;# 
  2936     0116                     	;# 
  2937     0117                     	;# 
  2938     0118                     	;# 
  2939     0119                     	;# 
  2940     0119                     	;# 
  2941     0119                     	;# 
  2942     011A                     	;# 
  2943     011A                     	;# 
  2944     011A                     	;# 
  2945     011B                     	;# 
  2946     011B                     	;# 
  2947     011B                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011C                     	;# 
  2951     011C                     	;# 
  2952     011C                     	;# 
  2953     011D                     	;# 
  2954     011D                     	;# 
  2955     011D                     	;# 
  2956     011E                     	;# 
  2957     011E                     	;# 
  2958     011E                     	;# 
  2959     011F                     	;# 
  2960     011F                     	;# 
  2961     011F                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     018C                     	;# 
  2965     018D                     	;# 
  2966     018E                     	;# 
  2967     018F                     	;# 
  2968     0190                     	;# 
  2969     0191                     	;# 
  2970     0192                     	;# 
  2971     0196                     	;# 
  2972     0197                     	;# 
  2973     0198                     	;# 
  2974     0199                     	;# 
  2975     019A                     	;# 
  2976     019B                     	;# 
  2977     019C                     	;# 
  2978     020C                     	;# 
  2979     020D                     	;# 
  2980     020E                     	;# 
  2981     020E                     	;# 
  2982     020F                     	;# 
  2983     020F                     	;# 
  2984     0210                     	;# 
  2985     0210                     	;# 
  2986     0211                     	;# 
  2987     0211                     	;# 
  2988     0212                     	;# 
  2989     0213                     	;# 
  2990     0214                     	;# 
  2991     0214                     	;# 
  2992     0215                     	;# 
  2993     0215                     	;# 
  2994     0216                     	;# 
  2995     0216                     	;# 
  2996     0217                     	;# 
  2997     0217                     	;# 
  2998     0218                     	;# 
  2999     0219                     	;# 
  3000     021A                     	;# 
  3001     021A                     	;# 
  3002     021B                     	;# 
  3003     021B                     	;# 
  3004     021C                     	;# 
  3005     021C                     	;# 
  3006     021D                     	;# 
  3007     021D                     	;# 
  3008     021E                     	;# 
  3009     021F                     	;# 
  3010     028C                     	;# 
  3011     028C                     	;# 
  3012     028D                     	;# 
  3013     028D                     	;# 
  3014     028E                     	;# 
  3015     028F                     	;# 
  3016     0290                     	;# 
  3017     0291                     	;# 
  3018     0292                     	;# 
  3019     0292                     	;# 
  3020     0293                     	;# 
  3021     0293                     	;# 
  3022     0294                     	;# 
  3023     0295                     	;# 
  3024     0296                     	;# 
  3025     0297                     	;# 
  3026     0298                     	;# 
  3027     0298                     	;# 
  3028     0299                     	;# 
  3029     0299                     	;# 
  3030     029A                     	;# 
  3031     029B                     	;# 
  3032     029C                     	;# 
  3033     029D                     	;# 
  3034     029F                     	;# 
  3035     030C                     	;# 
  3036     030C                     	;# 
  3037     030D                     	;# 
  3038     030E                     	;# 
  3039     030F                     	;# 
  3040     0310                     	;# 
  3041     0310                     	;# 
  3042     0311                     	;# 
  3043     0312                     	;# 
  3044     0313                     	;# 
  3045     0314                     	;# 
  3046     0314                     	;# 
  3047     0315                     	;# 
  3048     0316                     	;# 
  3049     0317                     	;# 
  3050     0318                     	;# 
  3051     0318                     	;# 
  3052     0319                     	;# 
  3053     031A                     	;# 
  3054     031B                     	;# 
  3055     031C                     	;# 
  3056     031C                     	;# 
  3057     031D                     	;# 
  3058     031E                     	;# 
  3059     031F                     	;# 
  3060     038C                     	;# 
  3061     038C                     	;# 
  3062     038D                     	;# 
  3063     038E                     	;# 
  3064     0390                     	;# 
  3065     0390                     	;# 
  3066     0391                     	;# 
  3067     0392                     	;# 
  3068     048C                     	;# 
  3069     048C                     	;# 
  3070     048D                     	;# 
  3071     048E                     	;# 
  3072     048F                     	;# 
  3073     048F                     	;# 
  3074     0490                     	;# 
  3075     0491                     	;# 
  3076     0492                     	;# 
  3077     0492                     	;# 
  3078     0493                     	;# 
  3079     0494                     	;# 
  3080     0495                     	;# 
  3081     0495                     	;# 
  3082     0496                     	;# 
  3083     0497                     	;# 
  3084     0498                     	;# 
  3085     0499                     	;# 
  3086     049A                     	;# 
  3087     049B                     	;# 
  3088     049C                     	;# 
  3089     049D                     	;# 
  3090     050C                     	;# 
  3091     050C                     	;# 
  3092     050D                     	;# 
  3093     050E                     	;# 
  3094     050F                     	;# 
  3095     050F                     	;# 
  3096     0510                     	;# 
  3097     0511                     	;# 
  3098     0512                     	;# 
  3099     0512                     	;# 
  3100     0513                     	;# 
  3101     0514                     	;# 
  3102     0515                     	;# 
  3103     0515                     	;# 
  3104     0516                     	;# 
  3105     0517                     	;# 
  3106     0518                     	;# 
  3107     0519                     	;# 
  3108     051A                     	;# 
  3109     051B                     	;# 
  3110     051C                     	;# 
  3111     051D                     	;# 
  3112     058C                     	;# 
  3113     058C                     	;# 
  3114     058D                     	;# 
  3115     058E                     	;# 
  3116     058F                     	;# 
  3117     058F                     	;# 
  3118     0590                     	;# 
  3119     0591                     	;# 
  3120     0592                     	;# 
  3121     0593                     	;# 
  3122     059C                     	;# 
  3123     059C                     	;# 
  3124     059D                     	;# 
  3125     059D                     	;# 
  3126     059E                     	;# 
  3127     059F                     	;# 
  3128     060C                     	;# 
  3129     060C                     	;# 
  3130     060D                     	;# 
  3131     060D                     	;# 
  3132     060E                     	;# 
  3133     060F                     	;# 
  3134     0610                     	;# 
  3135     0611                     	;# 
  3136     0612                     	;# 
  3137     0613                     	;# 
  3138     0614                     	;# 
  3139     0616                     	;# 
  3140     0616                     	;# 
  3141     0617                     	;# 
  3142     0617                     	;# 
  3143     0618                     	;# 
  3144     0619                     	;# 
  3145     061A                     	;# 
  3146     061B                     	;# 
  3147     061C                     	;# 
  3148     061D                     	;# 
  3149     061E                     	;# 
  3150     068C                     	;# 
  3151     068D                     	;# 
  3152     068E                     	;# 
  3153     068F                     	;# 
  3154     0690                     	;# 
  3155     0691                     	;# 
  3156     0692                     	;# 
  3157     0693                     	;# 
  3158     0694                     	;# 
  3159     070C                     	;# 
  3160     070D                     	;# 
  3161     070E                     	;# 
  3162     070F                     	;# 
  3163     0710                     	;# 
  3164     0711                     	;# 
  3165     0712                     	;# 
  3166     0713                     	;# 
  3167     0714                     	;# 
  3168     0716                     	;# 
  3169     0717                     	;# 
  3170     0718                     	;# 
  3171     0719                     	;# 
  3172     071A                     	;# 
  3173     071B                     	;# 
  3174     071C                     	;# 
  3175     071D                     	;# 
  3176     071E                     	;# 
  3177     0796                     	;# 
  3178     0797                     	;# 
  3179     0798                     	;# 
  3180     0799                     	;# 
  3181     079A                     	;# 
  3182     079B                     	;# 
  3183     079C                     	;# 
  3184     079D                     	;# 
  3185     080C                     	;# 
  3186     080D                     	;# 
  3187     080E                     	;# 
  3188     080F                     	;# 
  3189     0810                     	;# 
  3190     0811                     	;# 
  3191     0813                     	;# 
  3192     0814                     	;# 
  3193     081A                     	;# 
  3194     081A                     	;# 
  3195     081B                     	;# 
  3196     081C                     	;# 
  3197     081C                     	;# 
  3198     081D                     	;# 
  3199     081E                     	;# 
  3200     081F                     	;# 
  3201     088C                     	;# 
  3202     088D                     	;# 
  3203     088E                     	;# 
  3204     088F                     	;# 
  3205     0890                     	;# 
  3206     0891                     	;# 
  3207     0892                     	;# 
  3208     0893                     	;# 
  3209     0895                     	;# 
  3210     0896                     	;# 
  3211     0897                     	;# 
  3212     0898                     	;# 
  3213     0899                     	;# 
  3214     089A                     	;# 
  3215     089B                     	;# 
  3216     090C                     	;# 
  3217     090E                     	;# 
  3218     090F                     	;# 
  3219     091F                     	;# 
  3220     098F                     	;# 
  3221     098F                     	;# 
  3222     0990                     	;# 
  3223     0991                     	;# 
  3224     0992                     	;# 
  3225     0993                     	;# 
  3226     0994                     	;# 
  3227     0995                     	;# 
  3228     0996                     	;# 
  3229     0997                     	;# 
  3230     0A19                     	;# 
  3231     0A19                     	;# 
  3232     0A1A                     	;# 
  3233     0A1A                     	;# 
  3234     0A1B                     	;# 
  3235     0A1B                     	;# 
  3236     0A1B                     	;# 
  3237     0A1C                     	;# 
  3238     0A1C                     	;# 
  3239     0A1D                     	;# 
  3240     0A1D                     	;# 
  3241     0A1E                     	;# 
  3242     0A1E                     	;# 
  3243     0A1F                     	;# 
  3244     0A1F                     	;# 
  3245     0A1F                     	;# 
  3246     1E0F                     	;# 
  3247     1E10                     	;# 
  3248     1E11                     	;# 
  3249     1E12                     	;# 
  3250     1E13                     	;# 
  3251     1E14                     	;# 
  3252     1E15                     	;# 
  3253     1E16                     	;# 
  3254     1E17                     	;# 
  3255     1E18                     	;# 
  3256     1E19                     	;# 
  3257     1E1A                     	;# 
  3258     1E1B                     	;# 
  3259     1E1C                     	;# 
  3260     1E1D                     	;# 
  3261     1E1E                     	;# 
  3262     1E1F                     	;# 
  3263     1E20                     	;# 
  3264     1E21                     	;# 
  3265     1E22                     	;# 
  3266     1E23                     	;# 
  3267     1E24                     	;# 
  3268     1E25                     	;# 
  3269     1E26                     	;# 
  3270     1E27                     	;# 
  3271     1E28                     	;# 
  3272     1E29                     	;# 
  3273     1E2A                     	;# 
  3274     1E2B                     	;# 
  3275     1E2C                     	;# 
  3276     1E2D                     	;# 
  3277     1E2E                     	;# 
  3278     1E2F                     	;# 
  3279     1E30                     	;# 
  3280     1E31                     	;# 
  3281     1E32                     	;# 
  3282     1E33                     	;# 
  3283     1E34                     	;# 
  3284     1E35                     	;# 
  3285     1E36                     	;# 
  3286     1E37                     	;# 
  3287     1E8F                     	;# 
  3288     1E90                     	;# 
  3289     1E91                     	;# 
  3290     1E92                     	;# 
  3291     1E93                     	;# 
  3292     1E94                     	;# 
  3293     1E95                     	;# 
  3294     1E96                     	;# 
  3295     1E97                     	;# 
  3296     1E9C                     	;# 
  3297     1E9D                     	;# 
  3298     1E9E                     	;# 
  3299     1EA1                     	;# 
  3300     1EA2                     	;# 
  3301     1EA3                     	;# 
  3302     1EA4                     	;# 
  3303     1EA5                     	;# 
  3304     1EA9                     	;# 
  3305     1EAA                     	;# 
  3306     1EAB                     	;# 
  3307     1EAC                     	;# 
  3308     1EB1                     	;# 
  3309     1EB2                     	;# 
  3310     1EB3                     	;# 
  3311     1EB8                     	;# 
  3312     1EB9                     	;# 
  3313     1EBA                     	;# 
  3314     1EBB                     	;# 
  3315     1EBC                     	;# 
  3316     1EBD                     	;# 
  3317     1EBE                     	;# 
  3318     1EC3                     	;# 
  3319     1EC5                     	;# 
  3320     1EC6                     	;# 
  3321     1EC7                     	;# 
  3322     1EC8                     	;# 
  3323     1EC9                     	;# 
  3324     1ECA                     	;# 
  3325     1ECB                     	;# 
  3326     1ECC                     	;# 
  3327     1ECD                     	;# 
  3328     1ECE                     	;# 
  3329     1F10                     	;# 
  3330     1F11                     	;# 
  3331     1F12                     	;# 
  3332     1F13                     	;# 
  3333     1F14                     	;# 
  3334     1F15                     	;# 
  3335     1F16                     	;# 
  3336     1F17                     	;# 
  3337     1F18                     	;# 
  3338     1F19                     	;# 
  3339     1F1A                     	;# 
  3340     1F1B                     	;# 
  3341     1F1C                     	;# 
  3342     1F1D                     	;# 
  3343     1F1E                     	;# 
  3344     1F1F                     	;# 
  3345     1F20                     	;# 
  3346     1F21                     	;# 
  3347     1F22                     	;# 
  3348     1F23                     	;# 
  3349     1F24                     	;# 
  3350     1F25                     	;# 
  3351     1F26                     	;# 
  3352     1F27                     	;# 
  3353     1F38                     	;# 
  3354     1F39                     	;# 
  3355     1F3A                     	;# 
  3356     1F3B                     	;# 
  3357     1F3C                     	;# 
  3358     1F3D                     	;# 
  3359     1F3E                     	;# 
  3360     1F3F                     	;# 
  3361     1F43                     	;# 
  3362     1F44                     	;# 
  3363     1F45                     	;# 
  3364     1F46                     	;# 
  3365     1F47                     	;# 
  3366     1F48                     	;# 
  3367     1F49                     	;# 
  3368     1F4A                     	;# 
  3369     1F4E                     	;# 
  3370     1F4F                     	;# 
  3371     1F50                     	;# 
  3372     1F51                     	;# 
  3373     1F52                     	;# 
  3374     1F53                     	;# 
  3375     1F54                     	;# 
  3376     1F55                     	;# 
  3377     1F65                     	;# 
  3378     1F66                     	;# 
  3379     1F67                     	;# 
  3380     1F68                     	;# 
  3381     1F69                     	;# 
  3382     1F6A                     	;# 
  3383     1F6B                     	;# 
  3384     1FE4                     	;# 
  3385     1FE5                     	;# 
  3386     1FE6                     	;# 
  3387     1FE7                     	;# 
  3388     1FE8                     	;# 
  3389     1FE8                     	;# 
  3390     1FE9                     	;# 
  3391     1FEA                     	;# 
  3392     1FEB                     	;# 
  3393     1FED                     	;# 
  3394     1FEE                     	;# 
  3395     1FEF                     	;# 
  3396     0000                     	;# 
  3397     0001                     	;# 
  3398     0002                     	;# 
  3399     0003                     	;# 
  3400     0004                     	;# 
  3401     0005                     	;# 
  3402     0006                     	;# 
  3403     0007                     	;# 
  3404     0008                     	;# 
  3405     0009                     	;# 
  3406     000A                     	;# 
  3407     000B                     	;# 
  3408     000C                     	;# 
  3409     000D                     	;# 
  3410     000E                     	;# 
  3411     0010                     	;# 
  3412     0012                     	;# 
  3413     0013                     	;# 
  3414     0014                     	;# 
  3415     0016                     	;# 
  3416     0018                     	;# 
  3417     0019                     	;# 
  3418     001A                     	;# 
  3419     001C                     	;# 
  3420     008C                     	;# 
  3421     008C                     	;# 
  3422     008D                     	;# 
  3423     008E                     	;# 
  3424     008E                     	;# 
  3425     008F                     	;# 
  3426     0090                     	;# 
  3427     0090                     	;# 
  3428     0091                     	;# 
  3429     0092                     	;# 
  3430     0092                     	;# 
  3431     0093                     	;# 
  3432     0094                     	;# 
  3433     0094                     	;# 
  3434     0095                     	;# 
  3435     0096                     	;# 
  3436     0096                     	;# 
  3437     0097                     	;# 
  3438     0098                     	;# 
  3439     0099                     	;# 
  3440     009A                     	;# 
  3441     009B                     	;# 
  3442     009B                     	;# 
  3443     009C                     	;# 
  3444     009D                     	;# 
  3445     009D                     	;# 
  3446     009E                     	;# 
  3447     009F                     	;# 
  3448     010C                     	;# 
  3449     010C                     	;# 
  3450     010D                     	;# 
  3451     010E                     	;# 
  3452     010F                     	;# 
  3453     010F                     	;# 
  3454     0110                     	;# 
  3455     0111                     	;# 
  3456     0112                     	;# 
  3457     0113                     	;# 
  3458     0114                     	;# 
  3459     0115                     	;# 
  3460     0116                     	;# 
  3461     0117                     	;# 
  3462     0118                     	;# 
  3463     0119                     	;# 
  3464     0119                     	;# 
  3465     0119                     	;# 
  3466     011A                     	;# 
  3467     011A                     	;# 
  3468     011A                     	;# 
  3469     011B                     	;# 
  3470     011B                     	;# 
  3471     011B                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011C                     	;# 
  3475     011C                     	;# 
  3476     011C                     	;# 
  3477     011D                     	;# 
  3478     011D                     	;# 
  3479     011D                     	;# 
  3480     011E                     	;# 
  3481     011E                     	;# 
  3482     011E                     	;# 
  3483     011F                     	;# 
  3484     011F                     	;# 
  3485     011F                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     018C                     	;# 
  3489     018D                     	;# 
  3490     018E                     	;# 
  3491     018F                     	;# 
  3492     0190                     	;# 
  3493     0191                     	;# 
  3494     0192                     	;# 
  3495     0196                     	;# 
  3496     0197                     	;# 
  3497     0198                     	;# 
  3498     0199                     	;# 
  3499     019A                     	;# 
  3500     019B                     	;# 
  3501     019C                     	;# 
  3502     020C                     	;# 
  3503     020D                     	;# 
  3504     020E                     	;# 
  3505     020E                     	;# 
  3506     020F                     	;# 
  3507     020F                     	;# 
  3508     0210                     	;# 
  3509     0210                     	;# 
  3510     0211                     	;# 
  3511     0211                     	;# 
  3512     0212                     	;# 
  3513     0213                     	;# 
  3514     0214                     	;# 
  3515     0214                     	;# 
  3516     0215                     	;# 
  3517     0215                     	;# 
  3518     0216                     	;# 
  3519     0216                     	;# 
  3520     0217                     	;# 
  3521     0217                     	;# 
  3522     0218                     	;# 
  3523     0219                     	;# 
  3524     021A                     	;# 
  3525     021A                     	;# 
  3526     021B                     	;# 
  3527     021B                     	;# 
  3528     021C                     	;# 
  3529     021C                     	;# 
  3530     021D                     	;# 
  3531     021D                     	;# 
  3532     021E                     	;# 
  3533     021F                     	;# 
  3534     028C                     	;# 
  3535     028C                     	;# 
  3536     028D                     	;# 
  3537     028D                     	;# 
  3538     028E                     	;# 
  3539     028F                     	;# 
  3540     0290                     	;# 
  3541     0291                     	;# 
  3542     0292                     	;# 
  3543     0292                     	;# 
  3544     0293                     	;# 
  3545     0293                     	;# 
  3546     0294                     	;# 
  3547     0295                     	;# 
  3548     0296                     	;# 
  3549     0297                     	;# 
  3550     0298                     	;# 
  3551     0298                     	;# 
  3552     0299                     	;# 
  3553     0299                     	;# 
  3554     029A                     	;# 
  3555     029B                     	;# 
  3556     029C                     	;# 
  3557     029D                     	;# 
  3558     029F                     	;# 
  3559     030C                     	;# 
  3560     030C                     	;# 
  3561     030D                     	;# 
  3562     030E                     	;# 
  3563     030F                     	;# 
  3564     0310                     	;# 
  3565     0310                     	;# 
  3566     0311                     	;# 
  3567     0312                     	;# 
  3568     0313                     	;# 
  3569     0314                     	;# 
  3570     0314                     	;# 
  3571     0315                     	;# 
  3572     0316                     	;# 
  3573     0317                     	;# 
  3574     0318                     	;# 
  3575     0318                     	;# 
  3576     0319                     	;# 
  3577     031A                     	;# 
  3578     031B                     	;# 
  3579     031C                     	;# 
  3580     031C                     	;# 
  3581     031D                     	;# 
  3582     031E                     	;# 
  3583     031F                     	;# 
  3584     038C                     	;# 
  3585     038C                     	;# 
  3586     038D                     	;# 
  3587     038E                     	;# 
  3588     0390                     	;# 
  3589     0390                     	;# 
  3590     0391                     	;# 
  3591     0392                     	;# 
  3592     048C                     	;# 
  3593     048C                     	;# 
  3594     048D                     	;# 
  3595     048E                     	;# 
  3596     048F                     	;# 
  3597     048F                     	;# 
  3598     0490                     	;# 
  3599     0491                     	;# 
  3600     0492                     	;# 
  3601     0492                     	;# 
  3602     0493                     	;# 
  3603     0494                     	;# 
  3604     0495                     	;# 
  3605     0495                     	;# 
  3606     0496                     	;# 
  3607     0497                     	;# 
  3608     0498                     	;# 
  3609     0499                     	;# 
  3610     049A                     	;# 
  3611     049B                     	;# 
  3612     049C                     	;# 
  3613     049D                     	;# 
  3614     050C                     	;# 
  3615     050C                     	;# 
  3616     050D                     	;# 
  3617     050E                     	;# 
  3618     050F                     	;# 
  3619     050F                     	;# 
  3620     0510                     	;# 
  3621     0511                     	;# 
  3622     0512                     	;# 
  3623     0512                     	;# 
  3624     0513                     	;# 
  3625     0514                     	;# 
  3626     0515                     	;# 
  3627     0515                     	;# 
  3628     0516                     	;# 
  3629     0517                     	;# 
  3630     0518                     	;# 
  3631     0519                     	;# 
  3632     051A                     	;# 
  3633     051B                     	;# 
  3634     051C                     	;# 
  3635     051D                     	;# 
  3636     058C                     	;# 
  3637     058C                     	;# 
  3638     058D                     	;# 
  3639     058E                     	;# 
  3640     058F                     	;# 
  3641     058F                     	;# 
  3642     0590                     	;# 
  3643     0591                     	;# 
  3644     0592                     	;# 
  3645     0593                     	;# 
  3646     059C                     	;# 
  3647     059C                     	;# 
  3648     059D                     	;# 
  3649     059D                     	;# 
  3650     059E                     	;# 
  3651     059F                     	;# 
  3652     060C                     	;# 
  3653     060C                     	;# 
  3654     060D                     	;# 
  3655     060D                     	;# 
  3656     060E                     	;# 
  3657     060F                     	;# 
  3658     0610                     	;# 
  3659     0611                     	;# 
  3660     0612                     	;# 
  3661     0613                     	;# 
  3662     0614                     	;# 
  3663     0616                     	;# 
  3664     0616                     	;# 
  3665     0617                     	;# 
  3666     0617                     	;# 
  3667     0618                     	;# 
  3668     0619                     	;# 
  3669     061A                     	;# 
  3670     061B                     	;# 
  3671     061C                     	;# 
  3672     061D                     	;# 
  3673     061E                     	;# 
  3674     068C                     	;# 
  3675     068D                     	;# 
  3676     068E                     	;# 
  3677     068F                     	;# 
  3678     0690                     	;# 
  3679     0691                     	;# 
  3680     0692                     	;# 
  3681     0693                     	;# 
  3682     0694                     	;# 
  3683     070C                     	;# 
  3684     070D                     	;# 
  3685     070E                     	;# 
  3686     070F                     	;# 
  3687     0710                     	;# 
  3688     0711                     	;# 
  3689     0712                     	;# 
  3690     0713                     	;# 
  3691     0714                     	;# 
  3692     0716                     	;# 
  3693     0717                     	;# 
  3694     0718                     	;# 
  3695     0719                     	;# 
  3696     071A                     	;# 
  3697     071B                     	;# 
  3698     071C                     	;# 
  3699     071D                     	;# 
  3700     071E                     	;# 
  3701     0796                     	;# 
  3702     0797                     	;# 
  3703     0798                     	;# 
  3704     0799                     	;# 
  3705     079A                     	;# 
  3706     079B                     	;# 
  3707     079C                     	;# 
  3708     079D                     	;# 
  3709     080C                     	;# 
  3710     080D                     	;# 
  3711     080E                     	;# 
  3712     080F                     	;# 
  3713     0810                     	;# 
  3714     0811                     	;# 
  3715     0813                     	;# 
  3716     0814                     	;# 
  3717     081A                     	;# 
  3718     081A                     	;# 
  3719     081B                     	;# 
  3720     081C                     	;# 
  3721     081C                     	;# 
  3722     081D                     	;# 
  3723     081E                     	;# 
  3724     081F                     	;# 
  3725     088C                     	;# 
  3726     088D                     	;# 
  3727     088E                     	;# 
  3728     088F                     	;# 
  3729     0890                     	;# 
  3730     0891                     	;# 
  3731     0892                     	;# 
  3732     0893                     	;# 
  3733     0895                     	;# 
  3734     0896                     	;# 
  3735     0897                     	;# 
  3736     0898                     	;# 
  3737     0899                     	;# 
  3738     089A                     	;# 
  3739     089B                     	;# 
  3740     090C                     	;# 
  3741     090E                     	;# 
  3742     090F                     	;# 
  3743     091F                     	;# 
  3744     098F                     	;# 
  3745     098F                     	;# 
  3746     0990                     	;# 
  3747     0991                     	;# 
  3748     0992                     	;# 
  3749     0993                     	;# 
  3750     0994                     	;# 
  3751     0995                     	;# 
  3752     0996                     	;# 
  3753     0997                     	;# 
  3754     0A19                     	;# 
  3755     0A19                     	;# 
  3756     0A1A                     	;# 
  3757     0A1A                     	;# 
  3758     0A1B                     	;# 
  3759     0A1B                     	;# 
  3760     0A1B                     	;# 
  3761     0A1C                     	;# 
  3762     0A1C                     	;# 
  3763     0A1D                     	;# 
  3764     0A1D                     	;# 
  3765     0A1E                     	;# 
  3766     0A1E                     	;# 
  3767     0A1F                     	;# 
  3768     0A1F                     	;# 
  3769     0A1F                     	;# 
  3770     1E0F                     	;# 
  3771     1E10                     	;# 
  3772     1E11                     	;# 
  3773     1E12                     	;# 
  3774     1E13                     	;# 
  3775     1E14                     	;# 
  3776     1E15                     	;# 
  3777     1E16                     	;# 
  3778     1E17                     	;# 
  3779     1E18                     	;# 
  3780     1E19                     	;# 
  3781     1E1A                     	;# 
  3782     1E1B                     	;# 
  3783     1E1C                     	;# 
  3784     1E1D                     	;# 
  3785     1E1E                     	;# 
  3786     1E1F                     	;# 
  3787     1E20                     	;# 
  3788     1E21                     	;# 
  3789     1E22                     	;# 
  3790     1E23                     	;# 
  3791     1E24                     	;# 
  3792     1E25                     	;# 
  3793     1E26                     	;# 
  3794     1E27                     	;# 
  3795     1E28                     	;# 
  3796     1E29                     	;# 
  3797     1E2A                     	;# 
  3798     1E2B                     	;# 
  3799     1E2C                     	;# 
  3800     1E2D                     	;# 
  3801     1E2E                     	;# 
  3802     1E2F                     	;# 
  3803     1E30                     	;# 
  3804     1E31                     	;# 
  3805     1E32                     	;# 
  3806     1E33                     	;# 
  3807     1E34                     	;# 
  3808     1E35                     	;# 
  3809     1E36                     	;# 
  3810     1E37                     	;# 
  3811     1E8F                     	;# 
  3812     1E90                     	;# 
  3813     1E91                     	;# 
  3814     1E92                     	;# 
  3815     1E93                     	;# 
  3816     1E94                     	;# 
  3817     1E95                     	;# 
  3818     1E96                     	;# 
  3819     1E97                     	;# 
  3820     1E9C                     	;# 
  3821     1E9D                     	;# 
  3822     1E9E                     	;# 
  3823     1EA1                     	;# 
  3824     1EA2                     	;# 
  3825     1EA3                     	;# 
  3826     1EA4                     	;# 
  3827     1EA5                     	;# 
  3828     1EA9                     	;# 
  3829     1EAA                     	;# 
  3830     1EAB                     	;# 
  3831     1EAC                     	;# 
  3832     1EB1                     	;# 
  3833     1EB2                     	;# 
  3834     1EB3                     	;# 
  3835     1EB8                     	;# 
  3836     1EB9                     	;# 
  3837     1EBA                     	;# 
  3838     1EBB                     	;# 
  3839     1EBC                     	;# 
  3840     1EBD                     	;# 
  3841     1EBE                     	;# 
  3842     1EC3                     	;# 
  3843     1EC5                     	;# 
  3844     1EC6                     	;# 
  3845     1EC7                     	;# 
  3846     1EC8                     	;# 
  3847     1EC9                     	;# 
  3848     1ECA                     	;# 
  3849     1ECB                     	;# 
  3850     1ECC                     	;# 
  3851     1ECD                     	;# 
  3852     1ECE                     	;# 
  3853     1F10                     	;# 
  3854     1F11                     	;# 
  3855     1F12                     	;# 
  3856     1F13                     	;# 
  3857     1F14                     	;# 
  3858     1F15                     	;# 
  3859     1F16                     	;# 
  3860     1F17                     	;# 
  3861     1F18                     	;# 
  3862     1F19                     	;# 
  3863     1F1A                     	;# 
  3864     1F1B                     	;# 
  3865     1F1C                     	;# 
  3866     1F1D                     	;# 
  3867     1F1E                     	;# 
  3868     1F1F                     	;# 
  3869     1F20                     	;# 
  3870     1F21                     	;# 
  3871     1F22                     	;# 
  3872     1F23                     	;# 
  3873     1F24                     	;# 
  3874     1F25                     	;# 
  3875     1F26                     	;# 
  3876     1F27                     	;# 
  3877     1F38                     	;# 
  3878     1F39                     	;# 
  3879     1F3A                     	;# 
  3880     1F3B                     	;# 
  3881     1F3C                     	;# 
  3882     1F3D                     	;# 
  3883     1F3E                     	;# 
  3884     1F3F                     	;# 
  3885     1F43                     	;# 
  3886     1F44                     	;# 
  3887     1F45                     	;# 
  3888     1F46                     	;# 
  3889     1F47                     	;# 
  3890     1F48                     	;# 
  3891     1F49                     	;# 
  3892     1F4A                     	;# 
  3893     1F4E                     	;# 
  3894     1F4F                     	;# 
  3895     1F50                     	;# 
  3896     1F51                     	;# 
  3897     1F52                     	;# 
  3898     1F53                     	;# 
  3899     1F54                     	;# 
  3900     1F55                     	;# 
  3901     1F65                     	;# 
  3902     1F66                     	;# 
  3903     1F67                     	;# 
  3904     1F68                     	;# 
  3905     1F69                     	;# 
  3906     1F6A                     	;# 
  3907     1F6B                     	;# 
  3908     1FE4                     	;# 
  3909     1FE5                     	;# 
  3910     1FE6                     	;# 
  3911     1FE7                     	;# 
  3912     1FE8                     	;# 
  3913     1FE8                     	;# 
  3914     1FE9                     	;# 
  3915     1FEA                     	;# 
  3916     1FEB                     	;# 
  3917     1FED                     	;# 
  3918     1FEE                     	;# 
  3919     1FEF                     	;# 
  3920     0000                     	;# 
  3921     0001                     	;# 
  3922     0002                     	;# 
  3923     0003                     	;# 
  3924     0004                     	;# 
  3925     0005                     	;# 
  3926     0006                     	;# 
  3927     0007                     	;# 
  3928     0008                     	;# 
  3929     0009                     	;# 
  3930     000A                     	;# 
  3931     000B                     	;# 
  3932     000C                     	;# 
  3933     000D                     	;# 
  3934     000E                     	;# 
  3935     0010                     	;# 
  3936     0012                     	;# 
  3937     0013                     	;# 
  3938     0014                     	;# 
  3939     0016                     	;# 
  3940     0018                     	;# 
  3941     0019                     	;# 
  3942     001A                     	;# 
  3943     001C                     	;# 
  3944     008C                     	;# 
  3945     008C                     	;# 
  3946     008D                     	;# 
  3947     008E                     	;# 
  3948     008E                     	;# 
  3949     008F                     	;# 
  3950     0090                     	;# 
  3951     0090                     	;# 
  3952     0091                     	;# 
  3953     0092                     	;# 
  3954     0092                     	;# 
  3955     0093                     	;# 
  3956     0094                     	;# 
  3957     0094                     	;# 
  3958     0095                     	;# 
  3959     0096                     	;# 
  3960     0096                     	;# 
  3961     0097                     	;# 
  3962     0098                     	;# 
  3963     0099                     	;# 
  3964     009A                     	;# 
  3965     009B                     	;# 
  3966     009B                     	;# 
  3967     009C                     	;# 
  3968     009D                     	;# 
  3969     009D                     	;# 
  3970     009E                     	;# 
  3971     009F                     	;# 
  3972     010C                     	;# 
  3973     010C                     	;# 
  3974     010D                     	;# 
  3975     010E                     	;# 
  3976     010F                     	;# 
  3977     010F                     	;# 
  3978     0110                     	;# 
  3979     0111                     	;# 
  3980     0112                     	;# 
  3981     0113                     	;# 
  3982     0114                     	;# 
  3983     0115                     	;# 
  3984     0116                     	;# 
  3985     0117                     	;# 
  3986     0118                     	;# 
  3987     0119                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     011A                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011B                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011C                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011D                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011E                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011F                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     018C                     	;# 
  4013     018D                     	;# 
  4014     018E                     	;# 
  4015     018F                     	;# 
  4016     0190                     	;# 
  4017     0191                     	;# 
  4018     0192                     	;# 
  4019     0196                     	;# 
  4020     0197                     	;# 
  4021     0198                     	;# 
  4022     0199                     	;# 
  4023     019A                     	;# 
  4024     019B                     	;# 
  4025     019C                     	;# 
  4026     020C                     	;# 
  4027     020D                     	;# 
  4028     020E                     	;# 
  4029     020E                     	;# 
  4030     020F                     	;# 
  4031     020F                     	;# 
  4032     0210                     	;# 
  4033     0210                     	;# 
  4034     0211                     	;# 
  4035     0211                     	;# 
  4036     0212                     	;# 
  4037     0213                     	;# 
  4038     0214                     	;# 
  4039     0214                     	;# 
  4040     0215                     	;# 
  4041     0215                     	;# 
  4042     0216                     	;# 
  4043     0216                     	;# 
  4044     0217                     	;# 
  4045     0217                     	;# 
  4046     0218                     	;# 
  4047     0219                     	;# 
  4048     021A                     	;# 
  4049     021A                     	;# 
  4050     021B                     	;# 
  4051     021B                     	;# 
  4052     021C                     	;# 
  4053     021C                     	;# 
  4054     021D                     	;# 
  4055     021D                     	;# 
  4056     021E                     	;# 
  4057     021F                     	;# 
  4058     028C                     	;# 
  4059     028C                     	;# 
  4060     028D                     	;# 
  4061     028D                     	;# 
  4062     028E                     	;# 
  4063     028F                     	;# 
  4064     0290                     	;# 
  4065     0291                     	;# 
  4066     0292                     	;# 
  4067     0292                     	;# 
  4068     0293                     	;# 
  4069     0293                     	;# 
  4070     0294                     	;# 
  4071     0295                     	;# 
  4072     0296                     	;# 
  4073     0297                     	;# 
  4074     0298                     	;# 
  4075     0298                     	;# 
  4076     0299                     	;# 
  4077     0299                     	;# 
  4078     029A                     	;# 
  4079     029B                     	;# 
  4080     029C                     	;# 
  4081     029D                     	;# 
  4082     029F                     	;# 
  4083     030C                     	;# 
  4084     030C                     	;# 
  4085     030D                     	;# 
  4086     030E                     	;# 
  4087     030F                     	;# 
  4088     0310                     	;# 
  4089     0310                     	;# 
  4090     0311                     	;# 
  4091     0312                     	;# 
  4092     0313                     	;# 
  4093     0314                     	;# 
  4094     0314                     	;# 
  4095     0315                     	;# 
  4096     0316                     	;# 
  4097     0317                     	;# 
  4098     0318                     	;# 
  4099     0318                     	;# 
  4100     0319                     	;# 
  4101     031A                     	;# 
  4102     031B                     	;# 
  4103     031C                     	;# 
  4104     031C                     	;# 
  4105     031D                     	;# 
  4106     031E                     	;# 
  4107     031F                     	;# 
  4108     038C                     	;# 
  4109     038C                     	;# 
  4110     038D                     	;# 
  4111     038E                     	;# 
  4112     0390                     	;# 
  4113     0390                     	;# 
  4114     0391                     	;# 
  4115     0392                     	;# 
  4116     048C                     	;# 
  4117     048C                     	;# 
  4118     048D                     	;# 
  4119     048E                     	;# 
  4120     048F                     	;# 
  4121     048F                     	;# 
  4122     0490                     	;# 
  4123     0491                     	;# 
  4124     0492                     	;# 
  4125     0492                     	;# 
  4126     0493                     	;# 
  4127     0494                     	;# 
  4128     0495                     	;# 
  4129     0495                     	;# 
  4130     0496                     	;# 
  4131     0497                     	;# 
  4132     0498                     	;# 
  4133     0499                     	;# 
  4134     049A                     	;# 
  4135     049B                     	;# 
  4136     049C                     	;# 
  4137     049D                     	;# 
  4138     050C                     	;# 
  4139     050C                     	;# 
  4140     050D                     	;# 
  4141     050E                     	;# 
  4142     050F                     	;# 
  4143     050F                     	;# 
  4144     0510                     	;# 
  4145     0511                     	;# 
  4146     0512                     	;# 
  4147     0512                     	;# 
  4148     0513                     	;# 
  4149     0514                     	;# 
  4150     0515                     	;# 
  4151     0515                     	;# 
  4152     0516                     	;# 
  4153     0517                     	;# 
  4154     0518                     	;# 
  4155     0519                     	;# 
  4156     051A                     	;# 
  4157     051B                     	;# 
  4158     051C                     	;# 
  4159     051D                     	;# 
  4160     058C                     	;# 
  4161     058C                     	;# 
  4162     058D                     	;# 
  4163     058E                     	;# 
  4164     058F                     	;# 
  4165     058F                     	;# 
  4166     0590                     	;# 
  4167     0591                     	;# 
  4168     0592                     	;# 
  4169     0593                     	;# 
  4170     059C                     	;# 
  4171     059C                     	;# 
  4172     059D                     	;# 
  4173     059D                     	;# 
  4174     059E                     	;# 
  4175     059F                     	;# 
  4176     060C                     	;# 
  4177     060C                     	;# 
  4178     060D                     	;# 
  4179     060D                     	;# 
  4180     060E                     	;# 
  4181     060F                     	;# 
  4182     0610                     	;# 
  4183     0611                     	;# 
  4184     0612                     	;# 
  4185     0613                     	;# 
  4186     0614                     	;# 
  4187     0616                     	;# 
  4188     0616                     	;# 
  4189     0617                     	;# 
  4190     0617                     	;# 
  4191     0618                     	;# 
  4192     0619                     	;# 
  4193     061A                     	;# 
  4194     061B                     	;# 
  4195     061C                     	;# 
  4196     061D                     	;# 
  4197     061E                     	;# 
  4198     068C                     	;# 
  4199     068D                     	;# 
  4200     068E                     	;# 
  4201     068F                     	;# 
  4202     0690                     	;# 
  4203     0691                     	;# 
  4204     0692                     	;# 
  4205     0693                     	;# 
  4206     0694                     	;# 
  4207     070C                     	;# 
  4208     070D                     	;# 
  4209     070E                     	;# 
  4210     070F                     	;# 
  4211     0710                     	;# 
  4212     0711                     	;# 
  4213     0712                     	;# 
  4214     0713                     	;# 
  4215     0714                     	;# 
  4216     0716                     	;# 
  4217     0717                     	;# 
  4218     0718                     	;# 
  4219     0719                     	;# 
  4220     071A                     	;# 
  4221     071B                     	;# 
  4222     071C                     	;# 
  4223     071D                     	;# 
  4224     071E                     	;# 
  4225     0796                     	;# 
  4226     0797                     	;# 
  4227     0798                     	;# 
  4228     0799                     	;# 
  4229     079A                     	;# 
  4230     079B                     	;# 
  4231     079C                     	;# 
  4232     079D                     	;# 
  4233     080C                     	;# 
  4234     080D                     	;# 
  4235     080E                     	;# 
  4236     080F                     	;# 
  4237     0810                     	;# 
  4238     0811                     	;# 
  4239     0813                     	;# 
  4240     0814                     	;# 
  4241     081A                     	;# 
  4242     081A                     	;# 
  4243     081B                     	;# 
  4244     081C                     	;# 
  4245     081C                     	;# 
  4246     081D                     	;# 
  4247     081E                     	;# 
  4248     081F                     	;# 
  4249     088C                     	;# 
  4250     088D                     	;# 
  4251     088E                     	;# 
  4252     088F                     	;# 
  4253     0890                     	;# 
  4254     0891                     	;# 
  4255     0892                     	;# 
  4256     0893                     	;# 
  4257     0895                     	;# 
  4258     0896                     	;# 
  4259     0897                     	;# 
  4260     0898                     	;# 
  4261     0899                     	;# 
  4262     089A                     	;# 
  4263     089B                     	;# 
  4264     090C                     	;# 
  4265     090E                     	;# 
  4266     090F                     	;# 
  4267     091F                     	;# 
  4268     098F                     	;# 
  4269     098F                     	;# 
  4270     0990                     	;# 
  4271     0991                     	;# 
  4272     0992                     	;# 
  4273     0993                     	;# 
  4274     0994                     	;# 
  4275     0995                     	;# 
  4276     0996                     	;# 
  4277     0997                     	;# 
  4278     0A19                     	;# 
  4279     0A19                     	;# 
  4280     0A1A                     	;# 
  4281     0A1A                     	;# 
  4282     0A1B                     	;# 
  4283     0A1B                     	;# 
  4284     0A1B                     	;# 
  4285     0A1C                     	;# 
  4286     0A1C                     	;# 
  4287     0A1D                     	;# 
  4288     0A1D                     	;# 
  4289     0A1E                     	;# 
  4290     0A1E                     	;# 
  4291     0A1F                     	;# 
  4292     0A1F                     	;# 
  4293     0A1F                     	;# 
  4294     1E0F                     	;# 
  4295     1E10                     	;# 
  4296     1E11                     	;# 
  4297     1E12                     	;# 
  4298     1E13                     	;# 
  4299     1E14                     	;# 
  4300     1E15                     	;# 
  4301     1E16                     	;# 
  4302     1E17                     	;# 
  4303     1E18                     	;# 
  4304     1E19                     	;# 
  4305     1E1A                     	;# 
  4306     1E1B                     	;# 
  4307     1E1C                     	;# 
  4308     1E1D                     	;# 
  4309     1E1E                     	;# 
  4310     1E1F                     	;# 
  4311     1E20                     	;# 
  4312     1E21                     	;# 
  4313     1E22                     	;# 
  4314     1E23                     	;# 
  4315     1E24                     	;# 
  4316     1E25                     	;# 
  4317     1E26                     	;# 
  4318     1E27                     	;# 
  4319     1E28                     	;# 
  4320     1E29                     	;# 
  4321     1E2A                     	;# 
  4322     1E2B                     	;# 
  4323     1E2C                     	;# 
  4324     1E2D                     	;# 
  4325     1E2E                     	;# 
  4326     1E2F                     	;# 
  4327     1E30                     	;# 
  4328     1E31                     	;# 
  4329     1E32                     	;# 
  4330     1E33                     	;# 
  4331     1E34                     	;# 
  4332     1E35                     	;# 
  4333     1E36                     	;# 
  4334     1E37                     	;# 
  4335     1E8F                     	;# 
  4336     1E90                     	;# 
  4337     1E91                     	;# 
  4338     1E92                     	;# 
  4339     1E93                     	;# 
  4340     1E94                     	;# 
  4341     1E95                     	;# 
  4342     1E96                     	;# 
  4343     1E97                     	;# 
  4344     1E9C                     	;# 
  4345     1E9D                     	;# 
  4346     1E9E                     	;# 
  4347     1EA1                     	;# 
  4348     1EA2                     	;# 
  4349     1EA3                     	;# 
  4350     1EA4                     	;# 
  4351     1EA5                     	;# 
  4352     1EA9                     	;# 
  4353     1EAA                     	;# 
  4354     1EAB                     	;# 
  4355     1EAC                     	;# 
  4356     1EB1                     	;# 
  4357     1EB2                     	;# 
  4358     1EB3                     	;# 
  4359     1EB8                     	;# 
  4360     1EB9                     	;# 
  4361     1EBA                     	;# 
  4362     1EBB                     	;# 
  4363     1EBC                     	;# 
  4364     1EBD                     	;# 
  4365     1EBE                     	;# 
  4366     1EC3                     	;# 
  4367     1EC5                     	;# 
  4368     1EC6                     	;# 
  4369     1EC7                     	;# 
  4370     1EC8                     	;# 
  4371     1EC9                     	;# 
  4372     1ECA                     	;# 
  4373     1ECB                     	;# 
  4374     1ECC                     	;# 
  4375     1ECD                     	;# 
  4376     1ECE                     	;# 
  4377     1F10                     	;# 
  4378     1F11                     	;# 
  4379     1F12                     	;# 
  4380     1F13                     	;# 
  4381     1F14                     	;# 
  4382     1F15                     	;# 
  4383     1F16                     	;# 
  4384     1F17                     	;# 
  4385     1F18                     	;# 
  4386     1F19                     	;# 
  4387     1F1A                     	;# 
  4388     1F1B                     	;# 
  4389     1F1C                     	;# 
  4390     1F1D                     	;# 
  4391     1F1E                     	;# 
  4392     1F1F                     	;# 
  4393     1F20                     	;# 
  4394     1F21                     	;# 
  4395     1F22                     	;# 
  4396     1F23                     	;# 
  4397     1F24                     	;# 
  4398     1F25                     	;# 
  4399     1F26                     	;# 
  4400     1F27                     	;# 
  4401     1F38                     	;# 
  4402     1F39                     	;# 
  4403     1F3A                     	;# 
  4404     1F3B                     	;# 
  4405     1F3C                     	;# 
  4406     1F3D                     	;# 
  4407     1F3E                     	;# 
  4408     1F3F                     	;# 
  4409     1F43                     	;# 
  4410     1F44                     	;# 
  4411     1F45                     	;# 
  4412     1F46                     	;# 
  4413     1F47                     	;# 
  4414     1F48                     	;# 
  4415     1F49                     	;# 
  4416     1F4A                     	;# 
  4417     1F4E                     	;# 
  4418     1F4F                     	;# 
  4419     1F50                     	;# 
  4420     1F51                     	;# 
  4421     1F52                     	;# 
  4422     1F53                     	;# 
  4423     1F54                     	;# 
  4424     1F55                     	;# 
  4425     1F65                     	;# 
  4426     1F66                     	;# 
  4427     1F67                     	;# 
  4428     1F68                     	;# 
  4429     1F69                     	;# 
  4430     1F6A                     	;# 
  4431     1F6B                     	;# 
  4432     1FE4                     	;# 
  4433     1FE5                     	;# 
  4434     1FE6                     	;# 
  4435     1FE7                     	;# 
  4436     1FE8                     	;# 
  4437     1FE8                     	;# 
  4438     1FE9                     	;# 
  4439     1FEA                     	;# 
  4440     1FEB                     	;# 
  4441     1FED                     	;# 
  4442     1FEE                     	;# 
  4443     1FEF                     	;# 
  4444     0000                     	;# 
  4445     0001                     	;# 
  4446     0002                     	;# 
  4447     0003                     	;# 
  4448     0004                     	;# 
  4449     0005                     	;# 
  4450     0006                     	;# 
  4451     0007                     	;# 
  4452     0008                     	;# 
  4453     0009                     	;# 
  4454     000A                     	;# 
  4455     000B                     	;# 
  4456     000C                     	;# 
  4457     000D                     	;# 
  4458     000E                     	;# 
  4459     0010                     	;# 
  4460     0012                     	;# 
  4461     0013                     	;# 
  4462     0014                     	;# 
  4463     0016                     	;# 
  4464     0018                     	;# 
  4465     0019                     	;# 
  4466     001A                     	;# 
  4467     001C                     	;# 
  4468     008C                     	;# 
  4469     008C                     	;# 
  4470     008D                     	;# 
  4471     008E                     	;# 
  4472     008E                     	;# 
  4473     008F                     	;# 
  4474     0090                     	;# 
  4475     0090                     	;# 
  4476     0091                     	;# 
  4477     0092                     	;# 
  4478     0092                     	;# 
  4479     0093                     	;# 
  4480     0094                     	;# 
  4481     0094                     	;# 
  4482     0095                     	;# 
  4483     0096                     	;# 
  4484     0096                     	;# 
  4485     0097                     	;# 
  4486     0098                     	;# 
  4487     0099                     	;# 
  4488     009A                     	;# 
  4489     009B                     	;# 
  4490     009B                     	;# 
  4491     009C                     	;# 
  4492     009D                     	;# 
  4493     009D                     	;# 
  4494     009E                     	;# 
  4495     009F                     	;# 
  4496     010C                     	;# 
  4497     010C                     	;# 
  4498     010D                     	;# 
  4499     010E                     	;# 
  4500     010F                     	;# 
  4501     010F                     	;# 
  4502     0110                     	;# 
  4503     0111                     	;# 
  4504     0112                     	;# 
  4505     0113                     	;# 
  4506     0114                     	;# 
  4507     0115                     	;# 
  4508     0116                     	;# 
  4509     0117                     	;# 
  4510     0118                     	;# 
  4511     0119                     	;# 
  4512     0119                     	;# 
  4513     0119                     	;# 
  4514     011A                     	;# 
  4515     011A                     	;# 
  4516     011A                     	;# 
  4517     011B                     	;# 
  4518     011B                     	;# 
  4519     011B                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011C                     	;# 
  4523     011C                     	;# 
  4524     011C                     	;# 
  4525     011D                     	;# 
  4526     011D                     	;# 
  4527     011D                     	;# 
  4528     011E                     	;# 
  4529     011E                     	;# 
  4530     011E                     	;# 
  4531     011F                     	;# 
  4532     011F                     	;# 
  4533     011F                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     018C                     	;# 
  4537     018D                     	;# 
  4538     018E                     	;# 
  4539     018F                     	;# 
  4540     0190                     	;# 
  4541     0191                     	;# 
  4542     0192                     	;# 
  4543     0196                     	;# 
  4544     0197                     	;# 
  4545     0198                     	;# 
  4546     0199                     	;# 
  4547     019A                     	;# 
  4548     019B                     	;# 
  4549     019C                     	;# 
  4550     020C                     	;# 
  4551     020D                     	;# 
  4552     020E                     	;# 
  4553     020E                     	;# 
  4554     020F                     	;# 
  4555     020F                     	;# 
  4556     0210                     	;# 
  4557     0210                     	;# 
  4558     0211                     	;# 
  4559     0211                     	;# 
  4560     0212                     	;# 
  4561     0213                     	;# 
  4562     0214                     	;# 
  4563     0214                     	;# 
  4564     0215                     	;# 
  4565     0215                     	;# 
  4566     0216                     	;# 
  4567     0216                     	;# 
  4568     0217                     	;# 
  4569     0217                     	;# 
  4570     0218                     	;# 
  4571     0219                     	;# 
  4572     021A                     	;# 
  4573     021A                     	;# 
  4574     021B                     	;# 
  4575     021B                     	;# 
  4576     021C                     	;# 
  4577     021C                     	;# 
  4578     021D                     	;# 
  4579     021D                     	;# 
  4580     021E                     	;# 
  4581     021F                     	;# 
  4582     028C                     	;# 
  4583     028C                     	;# 
  4584     028D                     	;# 
  4585     028D                     	;# 
  4586     028E                     	;# 
  4587     028F                     	;# 
  4588     0290                     	;# 
  4589     0291                     	;# 
  4590     0292                     	;# 
  4591     0292                     	;# 
  4592     0293                     	;# 
  4593     0293                     	;# 
  4594     0294                     	;# 
  4595     0295                     	;# 
  4596     0296                     	;# 
  4597     0297                     	;# 
  4598     0298                     	;# 
  4599     0298                     	;# 
  4600     0299                     	;# 
  4601     0299                     	;# 
  4602     029A                     	;# 
  4603     029B                     	;# 
  4604     029C                     	;# 
  4605     029D                     	;# 
  4606     029F                     	;# 
  4607     030C                     	;# 
  4608     030C                     	;# 
  4609     030D                     	;# 
  4610     030E                     	;# 
  4611     030F                     	;# 
  4612     0310                     	;# 
  4613     0310                     	;# 
  4614     0311                     	;# 
  4615     0312                     	;# 
  4616     0313                     	;# 
  4617     0314                     	;# 
  4618     0314                     	;# 
  4619     0315                     	;# 
  4620     0316                     	;# 
  4621     0317                     	;# 
  4622     0318                     	;# 
  4623     0318                     	;# 
  4624     0319                     	;# 
  4625     031A                     	;# 
  4626     031B                     	;# 
  4627     031C                     	;# 
  4628     031C                     	;# 
  4629     031D                     	;# 
  4630     031E                     	;# 
  4631     031F                     	;# 
  4632     038C                     	;# 
  4633     038C                     	;# 
  4634     038D                     	;# 
  4635     038E                     	;# 
  4636     0390                     	;# 
  4637     0390                     	;# 
  4638     0391                     	;# 
  4639     0392                     	;# 
  4640     048C                     	;# 
  4641     048C                     	;# 
  4642     048D                     	;# 
  4643     048E                     	;# 
  4644     048F                     	;# 
  4645     048F                     	;# 
  4646     0490                     	;# 
  4647     0491                     	;# 
  4648     0492                     	;# 
  4649     0492                     	;# 
  4650     0493                     	;# 
  4651     0494                     	;# 
  4652     0495                     	;# 
  4653     0495                     	;# 
  4654     0496                     	;# 
  4655     0497                     	;# 
  4656     0498                     	;# 
  4657     0499                     	;# 
  4658     049A                     	;# 
  4659     049B                     	;# 
  4660     049C                     	;# 
  4661     049D                     	;# 
  4662     050C                     	;# 
  4663     050C                     	;# 
  4664     050D                     	;# 
  4665     050E                     	;# 
  4666     050F                     	;# 
  4667     050F                     	;# 
  4668     0510                     	;# 
  4669     0511                     	;# 
  4670     0512                     	;# 
  4671     0512                     	;# 
  4672     0513                     	;# 
  4673     0514                     	;# 
  4674     0515                     	;# 
  4675     0515                     	;# 
  4676     0516                     	;# 
  4677     0517                     	;# 
  4678     0518                     	;# 
  4679     0519                     	;# 
  4680     051A                     	;# 
  4681     051B                     	;# 
  4682     051C                     	;# 
  4683     051D                     	;# 
  4684     058C                     	;# 
  4685     058C                     	;# 
  4686     058D                     	;# 
  4687     058E                     	;# 
  4688     058F                     	;# 
  4689     058F                     	;# 
  4690     0590                     	;# 
  4691     0591                     	;# 
  4692     0592                     	;# 
  4693     0593                     	;# 
  4694     059C                     	;# 
  4695     059C                     	;# 
  4696     059D                     	;# 
  4697     059D                     	;# 
  4698     059E                     	;# 
  4699     059F                     	;# 
  4700     060C                     	;# 
  4701     060C                     	;# 
  4702     060D                     	;# 
  4703     060D                     	;# 
  4704     060E                     	;# 
  4705     060F                     	;# 
  4706     0610                     	;# 
  4707     0611                     	;# 
  4708     0612                     	;# 
  4709     0613                     	;# 
  4710     0614                     	;# 
  4711     0616                     	;# 
  4712     0616                     	;# 
  4713     0617                     	;# 
  4714     0617                     	;# 
  4715     0618                     	;# 
  4716     0619                     	;# 
  4717     061A                     	;# 
  4718     061B                     	;# 
  4719     061C                     	;# 
  4720     061D                     	;# 
  4721     061E                     	;# 
  4722     068C                     	;# 
  4723     068D                     	;# 
  4724     068E                     	;# 
  4725     068F                     	;# 
  4726     0690                     	;# 
  4727     0691                     	;# 
  4728     0692                     	;# 
  4729     0693                     	;# 
  4730     0694                     	;# 
  4731     070C                     	;# 
  4732     070D                     	;# 
  4733     070E                     	;# 
  4734     070F                     	;# 
  4735     0710                     	;# 
  4736     0711                     	;# 
  4737     0712                     	;# 
  4738     0713                     	;# 
  4739     0714                     	;# 
  4740     0716                     	;# 
  4741     0717                     	;# 
  4742     0718                     	;# 
  4743     0719                     	;# 
  4744     071A                     	;# 
  4745     071B                     	;# 
  4746     071C                     	;# 
  4747     071D                     	;# 
  4748     071E                     	;# 
  4749     0796                     	;# 
  4750     0797                     	;# 
  4751     0798                     	;# 
  4752     0799                     	;# 
  4753     079A                     	;# 
  4754     079B                     	;# 
  4755     079C                     	;# 
  4756     079D                     	;# 
  4757     080C                     	;# 
  4758     080D                     	;# 
  4759     080E                     	;# 
  4760     080F                     	;# 
  4761     0810                     	;# 
  4762     0811                     	;# 
  4763     0813                     	;# 
  4764     0814                     	;# 
  4765     081A                     	;# 
  4766     081A                     	;# 
  4767     081B                     	;# 
  4768     081C                     	;# 
  4769     081C                     	;# 
  4770     081D                     	;# 
  4771     081E                     	;# 
  4772     081F                     	;# 
  4773     088C                     	;# 
  4774     088D                     	;# 
  4775     088E                     	;# 
  4776     088F                     	;# 
  4777     0890                     	;# 
  4778     0891                     	;# 
  4779     0892                     	;# 
  4780     0893                     	;# 
  4781     0895                     	;# 
  4782     0896                     	;# 
  4783     0897                     	;# 
  4784     0898                     	;# 
  4785     0899                     	;# 
  4786     089A                     	;# 
  4787     089B                     	;# 
  4788     090C                     	;# 
  4789     090E                     	;# 
  4790     090F                     	;# 
  4791     091F                     	;# 
  4792     098F                     	;# 
  4793     098F                     	;# 
  4794     0990                     	;# 
  4795     0991                     	;# 
  4796     0992                     	;# 
  4797     0993                     	;# 
  4798     0994                     	;# 
  4799     0995                     	;# 
  4800     0996                     	;# 
  4801     0997                     	;# 
  4802     0A19                     	;# 
  4803     0A19                     	;# 
  4804     0A1A                     	;# 
  4805     0A1A                     	;# 
  4806     0A1B                     	;# 
  4807     0A1B                     	;# 
  4808     0A1B                     	;# 
  4809     0A1C                     	;# 
  4810     0A1C                     	;# 
  4811     0A1D                     	;# 
  4812     0A1D                     	;# 
  4813     0A1E                     	;# 
  4814     0A1E                     	;# 
  4815     0A1F                     	;# 
  4816     0A1F                     	;# 
  4817     0A1F                     	;# 
  4818     1E0F                     	;# 
  4819     1E10                     	;# 
  4820     1E11                     	;# 
  4821     1E12                     	;# 
  4822     1E13                     	;# 
  4823     1E14                     	;# 
  4824     1E15                     	;# 
  4825     1E16                     	;# 
  4826     1E17                     	;# 
  4827     1E18                     	;# 
  4828     1E19                     	;# 
  4829     1E1A                     	;# 
  4830     1E1B                     	;# 
  4831     1E1C                     	;# 
  4832     1E1D                     	;# 
  4833     1E1E                     	;# 
  4834     1E1F                     	;# 
  4835     1E20                     	;# 
  4836     1E21                     	;# 
  4837     1E22                     	;# 
  4838     1E23                     	;# 
  4839     1E24                     	;# 
  4840     1E25                     	;# 
  4841     1E26                     	;# 
  4842     1E27                     	;# 
  4843     1E28                     	;# 
  4844     1E29                     	;# 
  4845     1E2A                     	;# 
  4846     1E2B                     	;# 
  4847     1E2C                     	;# 
  4848     1E2D                     	;# 
  4849     1E2E                     	;# 
  4850     1E2F                     	;# 
  4851     1E30                     	;# 
  4852     1E31                     	;# 
  4853     1E32                     	;# 
  4854     1E33                     	;# 
  4855     1E34                     	;# 
  4856     1E35                     	;# 
  4857     1E36                     	;# 
  4858     1E37                     	;# 
  4859     1E8F                     	;# 
  4860     1E90                     	;# 
  4861     1E91                     	;# 
  4862     1E92                     	;# 
  4863     1E93                     	;# 
  4864     1E94                     	;# 
  4865     1E95                     	;# 
  4866     1E96                     	;# 
  4867     1E97                     	;# 
  4868     1E9C                     	;# 
  4869     1E9D                     	;# 
  4870     1E9E                     	;# 
  4871     1EA1                     	;# 
  4872     1EA2                     	;# 
  4873     1EA3                     	;# 
  4874     1EA4                     	;# 
  4875     1EA5                     	;# 
  4876     1EA9                     	;# 
  4877     1EAA                     	;# 
  4878     1EAB                     	;# 
  4879     1EAC                     	;# 
  4880     1EB1                     	;# 
  4881     1EB2                     	;# 
  4882     1EB3                     	;# 
  4883     1EB8                     	;# 
  4884     1EB9                     	;# 
  4885     1EBA                     	;# 
  4886     1EBB                     	;# 
  4887     1EBC                     	;# 
  4888     1EBD                     	;# 
  4889     1EBE                     	;# 
  4890     1EC3                     	;# 
  4891     1EC5                     	;# 
  4892     1EC6                     	;# 
  4893     1EC7                     	;# 
  4894     1EC8                     	;# 
  4895     1EC9                     	;# 
  4896     1ECA                     	;# 
  4897     1ECB                     	;# 
  4898     1ECC                     	;# 
  4899     1ECD                     	;# 
  4900     1ECE                     	;# 
  4901     1F10                     	;# 
  4902     1F11                     	;# 
  4903     1F12                     	;# 
  4904     1F13                     	;# 
  4905     1F14                     	;# 
  4906     1F15                     	;# 
  4907     1F16                     	;# 
  4908     1F17                     	;# 
  4909     1F18                     	;# 
  4910     1F19                     	;# 
  4911     1F1A                     	;# 
  4912     1F1B                     	;# 
  4913     1F1C                     	;# 
  4914     1F1D                     	;# 
  4915     1F1E                     	;# 
  4916     1F1F                     	;# 
  4917     1F20                     	;# 
  4918     1F21                     	;# 
  4919     1F22                     	;# 
  4920     1F23                     	;# 
  4921     1F24                     	;# 
  4922     1F25                     	;# 
  4923     1F26                     	;# 
  4924     1F27                     	;# 
  4925     1F38                     	;# 
  4926     1F39                     	;# 
  4927     1F3A                     	;# 
  4928     1F3B                     	;# 
  4929     1F3C                     	;# 
  4930     1F3D                     	;# 
  4931     1F3E                     	;# 
  4932     1F3F                     	;# 
  4933     1F43                     	;# 
  4934     1F44                     	;# 
  4935     1F45                     	;# 
  4936     1F46                     	;# 
  4937     1F47                     	;# 
  4938     1F48                     	;# 
  4939     1F49                     	;# 
  4940     1F4A                     	;# 
  4941     1F4E                     	;# 
  4942     1F4F                     	;# 
  4943     1F50                     	;# 
  4944     1F51                     	;# 
  4945     1F52                     	;# 
  4946     1F53                     	;# 
  4947     1F54                     	;# 
  4948     1F55                     	;# 
  4949     1F65                     	;# 
  4950     1F66                     	;# 
  4951     1F67                     	;# 
  4952     1F68                     	;# 
  4953     1F69                     	;# 
  4954     1F6A                     	;# 
  4955     1F6B                     	;# 
  4956     1FE4                     	;# 
  4957     1FE5                     	;# 
  4958     1FE6                     	;# 
  4959     1FE7                     	;# 
  4960     1FE8                     	;# 
  4961     1FE8                     	;# 
  4962     1FE9                     	;# 
  4963     1FEA                     	;# 
  4964     1FEB                     	;# 
  4965     1FED                     	;# 
  4966     1FEE                     	;# 
  4967     1FEF                     	;# 
  4968     0000                     	;# 
  4969     0001                     	;# 
  4970     0002                     	;# 
  4971     0003                     	;# 
  4972     0004                     	;# 
  4973     0005                     	;# 
  4974     0006                     	;# 
  4975     0007                     	;# 
  4976     0008                     	;# 
  4977     0009                     	;# 
  4978     000A                     	;# 
  4979     000B                     	;# 
  4980     000C                     	;# 
  4981     000D                     	;# 
  4982     000E                     	;# 
  4983     0010                     	;# 
  4984     0012                     	;# 
  4985     0013                     	;# 
  4986     0014                     	;# 
  4987     0016                     	;# 
  4988     0018                     	;# 
  4989     0019                     	;# 
  4990     001A                     	;# 
  4991     001C                     	;# 
  4992     008C                     	;# 
  4993     008C                     	;# 
  4994     008D                     	;# 
  4995     008E                     	;# 
  4996     008E                     	;# 
  4997     008F                     	;# 
  4998     0090                     	;# 
  4999     0090                     	;# 
  5000     0091                     	;# 
  5001     0092                     	;# 
  5002     0092                     	;# 
  5003     0093                     	;# 
  5004     0094                     	;# 
  5005     0094                     	;# 
  5006     0095                     	;# 
  5007     0096                     	;# 
  5008     0096                     	;# 
  5009     0097                     	;# 
  5010     0098                     	;# 
  5011     0099                     	;# 
  5012     009A                     	;# 
  5013     009B                     	;# 
  5014     009B                     	;# 
  5015     009C                     	;# 
  5016     009D                     	;# 
  5017     009D                     	;# 
  5018     009E                     	;# 
  5019     009F                     	;# 
  5020     010C                     	;# 
  5021     010C                     	;# 
  5022     010D                     	;# 
  5023     010E                     	;# 
  5024     010F                     	;# 
  5025     010F                     	;# 
  5026     0110                     	;# 
  5027     0111                     	;# 
  5028     0112                     	;# 
  5029     0113                     	;# 
  5030     0114                     	;# 
  5031     0115                     	;# 
  5032     0116                     	;# 
  5033     0117                     	;# 
  5034     0118                     	;# 
  5035     0119                     	;# 
  5036     0119                     	;# 
  5037     0119                     	;# 
  5038     011A                     	;# 
  5039     011A                     	;# 
  5040     011A                     	;# 
  5041     011B                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011C                     	;# 
  5047     011C                     	;# 
  5048     011C                     	;# 
  5049     011D                     	;# 
  5050     011D                     	;# 
  5051     011D                     	;# 
  5052     011E                     	;# 
  5053     011E                     	;# 
  5054     011E                     	;# 
  5055     011F                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     018C                     	;# 
  5061     018D                     	;# 
  5062     018E                     	;# 
  5063     018F                     	;# 
  5064     0190                     	;# 
  5065     0191                     	;# 
  5066     0192                     	;# 
  5067     0196                     	;# 
  5068     0197                     	;# 
  5069     0198                     	;# 
  5070     0199                     	;# 
  5071     019A                     	;# 
  5072     019B                     	;# 
  5073     019C                     	;# 
  5074     020C                     	;# 
  5075     020D                     	;# 
  5076     020E                     	;# 
  5077     020E                     	;# 
  5078     020F                     	;# 
  5079     020F                     	;# 
  5080     0210                     	;# 
  5081     0210                     	;# 
  5082     0211                     	;# 
  5083     0211                     	;# 
  5084     0212                     	;# 
  5085     0213                     	;# 
  5086     0214                     	;# 
  5087     0214                     	;# 
  5088     0215                     	;# 
  5089     0215                     	;# 
  5090     0216                     	;# 
  5091     0216                     	;# 
  5092     0217                     	;# 
  5093     0217                     	;# 
  5094     0218                     	;# 
  5095     0219                     	;# 
  5096     021A                     	;# 
  5097     021A                     	;# 
  5098     021B                     	;# 
  5099     021B                     	;# 
  5100     021C                     	;# 
  5101     021C                     	;# 
  5102     021D                     	;# 
  5103     021D                     	;# 
  5104     021E                     	;# 
  5105     021F                     	;# 
  5106     028C                     	;# 
  5107     028C                     	;# 
  5108     028D                     	;# 
  5109     028D                     	;# 
  5110     028E                     	;# 
  5111     028F                     	;# 
  5112     0290                     	;# 
  5113     0291                     	;# 
  5114     0292                     	;# 
  5115     0292                     	;# 
  5116     0293                     	;# 
  5117     0293                     	;# 
  5118     0294                     	;# 
  5119     0295                     	;# 
  5120     0296                     	;# 
  5121     0297                     	;# 
  5122     0298                     	;# 
  5123     0298                     	;# 
  5124     0299                     	;# 
  5125     0299                     	;# 
  5126     029A                     	;# 
  5127     029B                     	;# 
  5128     029C                     	;# 
  5129     029D                     	;# 
  5130     029F                     	;# 
  5131     030C                     	;# 
  5132     030C                     	;# 
  5133     030D                     	;# 
  5134     030E                     	;# 
  5135     030F                     	;# 
  5136     0310                     	;# 
  5137     0310                     	;# 
  5138     0311                     	;# 
  5139     0312                     	;# 
  5140     0313                     	;# 
  5141     0314                     	;# 
  5142     0314                     	;# 
  5143     0315                     	;# 
  5144     0316                     	;# 
  5145     0317                     	;# 
  5146     0318                     	;# 
  5147     0318                     	;# 
  5148     0319                     	;# 
  5149     031A                     	;# 
  5150     031B                     	;# 
  5151     031C                     	;# 
  5152     031C                     	;# 
  5153     031D                     	;# 
  5154     031E                     	;# 
  5155     031F                     	;# 
  5156     038C                     	;# 
  5157     038C                     	;# 
  5158     038D                     	;# 
  5159     038E                     	;# 
  5160     0390                     	;# 
  5161     0390                     	;# 
  5162     0391                     	;# 
  5163     0392                     	;# 
  5164     048C                     	;# 
  5165     048C                     	;# 
  5166     048D                     	;# 
  5167     048E                     	;# 
  5168     048F                     	;# 
  5169     048F                     	;# 
  5170     0490                     	;# 
  5171     0491                     	;# 
  5172     0492                     	;# 
  5173     0492                     	;# 
  5174     0493                     	;# 
  5175     0494                     	;# 
  5176     0495                     	;# 
  5177     0495                     	;# 
  5178     0496                     	;# 
  5179     0497                     	;# 
  5180     0498                     	;# 
  5181     0499                     	;# 
  5182     049A                     	;# 
  5183     049B                     	;# 
  5184     049C                     	;# 
  5185     049D                     	;# 
  5186     050C                     	;# 
  5187     050C                     	;# 
  5188     050D                     	;# 
  5189     050E                     	;# 
  5190     050F                     	;# 
  5191     050F                     	;# 
  5192     0510                     	;# 
  5193     0511                     	;# 
  5194     0512                     	;# 
  5195     0512                     	;# 
  5196     0513                     	;# 
  5197     0514                     	;# 
  5198     0515                     	;# 
  5199     0515                     	;# 
  5200     0516                     	;# 
  5201     0517                     	;# 
  5202     0518                     	;# 
  5203     0519                     	;# 
  5204     051A                     	;# 
  5205     051B                     	;# 
  5206     051C                     	;# 
  5207     051D                     	;# 
  5208     058C                     	;# 
  5209     058C                     	;# 
  5210     058D                     	;# 
  5211     058E                     	;# 
  5212     058F                     	;# 
  5213     058F                     	;# 
  5214     0590                     	;# 
  5215     0591                     	;# 
  5216     0592                     	;# 
  5217     0593                     	;# 
  5218     059C                     	;# 
  5219     059C                     	;# 
  5220     059D                     	;# 
  5221     059D                     	;# 
  5222     059E                     	;# 
  5223     059F                     	;# 
  5224     060C                     	;# 
  5225     060C                     	;# 
  5226     060D                     	;# 
  5227     060D                     	;# 
  5228     060E                     	;# 
  5229     060F                     	;# 
  5230     0610                     	;# 
  5231     0611                     	;# 
  5232     0612                     	;# 
  5233     0613                     	;# 
  5234     0614                     	;# 
  5235     0616                     	;# 
  5236     0616                     	;# 
  5237     0617                     	;# 
  5238     0617                     	;# 
  5239     0618                     	;# 
  5240     0619                     	;# 
  5241     061A                     	;# 
  5242     061B                     	;# 
  5243     061C                     	;# 
  5244     061D                     	;# 
  5245     061E                     	;# 
  5246     068C                     	;# 
  5247     068D                     	;# 
  5248     068E                     	;# 
  5249     068F                     	;# 
  5250     0690                     	;# 
  5251     0691                     	;# 
  5252     0692                     	;# 
  5253     0693                     	;# 
  5254     0694                     	;# 
  5255     070C                     	;# 
  5256     070D                     	;# 
  5257     070E                     	;# 
  5258     070F                     	;# 
  5259     0710                     	;# 
  5260     0711                     	;# 
  5261     0712                     	;# 
  5262     0713                     	;# 
  5263     0714                     	;# 
  5264     0716                     	;# 
  5265     0717                     	;# 
  5266     0718                     	;# 
  5267     0719                     	;# 
  5268     071A                     	;# 
  5269     071B                     	;# 
  5270     071C                     	;# 
  5271     071D                     	;# 
  5272     071E                     	;# 
  5273     0796                     	;# 
  5274     0797                     	;# 
  5275     0798                     	;# 
  5276     0799                     	;# 
  5277     079A                     	;# 
  5278     079B                     	;# 
  5279     079C                     	;# 
  5280     079D                     	;# 
  5281     080C                     	;# 
  5282     080D                     	;# 
  5283     080E                     	;# 
  5284     080F                     	;# 
  5285     0810                     	;# 
  5286     0811                     	;# 
  5287     0813                     	;# 
  5288     0814                     	;# 
  5289     081A                     	;# 
  5290     081A                     	;# 
  5291     081B                     	;# 
  5292     081C                     	;# 
  5293     081C                     	;# 
  5294     081D                     	;# 
  5295     081E                     	;# 
  5296     081F                     	;# 
  5297     088C                     	;# 
  5298     088D                     	;# 
  5299     088E                     	;# 
  5300     088F                     	;# 
  5301     0890                     	;# 
  5302     0891                     	;# 
  5303     0892                     	;# 
  5304     0893                     	;# 
  5305     0895                     	;# 
  5306     0896                     	;# 
  5307     0897                     	;# 
  5308     0898                     	;# 
  5309     0899                     	;# 
  5310     089A                     	;# 
  5311     089B                     	;# 
  5312     090C                     	;# 
  5313     090E                     	;# 
  5314     090F                     	;# 
  5315     091F                     	;# 
  5316     098F                     	;# 
  5317     098F                     	;# 
  5318     0990                     	;# 
  5319     0991                     	;# 
  5320     0992                     	;# 
  5321     0993                     	;# 
  5322     0994                     	;# 
  5323     0995                     	;# 
  5324     0996                     	;# 
  5325     0997                     	;# 
  5326     0A19                     	;# 
  5327     0A19                     	;# 
  5328     0A1A                     	;# 
  5329     0A1A                     	;# 
  5330     0A1B                     	;# 
  5331     0A1B                     	;# 
  5332     0A1B                     	;# 
  5333     0A1C                     	;# 
  5334     0A1C                     	;# 
  5335     0A1D                     	;# 
  5336     0A1D                     	;# 
  5337     0A1E                     	;# 
  5338     0A1E                     	;# 
  5339     0A1F                     	;# 
  5340     0A1F                     	;# 
  5341     0A1F                     	;# 
  5342     1E0F                     	;# 
  5343     1E10                     	;# 
  5344     1E11                     	;# 
  5345     1E12                     	;# 
  5346     1E13                     	;# 
  5347     1E14                     	;# 
  5348     1E15                     	;# 
  5349     1E16                     	;# 
  5350     1E17                     	;# 
  5351     1E18                     	;# 
  5352     1E19                     	;# 
  5353     1E1A                     	;# 
  5354     1E1B                     	;# 
  5355     1E1C                     	;# 
  5356     1E1D                     	;# 
  5357     1E1E                     	;# 
  5358     1E1F                     	;# 
  5359     1E20                     	;# 
  5360     1E21                     	;# 
  5361     1E22                     	;# 
  5362     1E23                     	;# 
  5363     1E24                     	;# 
  5364     1E25                     	;# 
  5365     1E26                     	;# 
  5366     1E27                     	;# 
  5367     1E28                     	;# 
  5368     1E29                     	;# 
  5369     1E2A                     	;# 
  5370     1E2B                     	;# 
  5371     1E2C                     	;# 
  5372     1E2D                     	;# 
  5373     1E2E                     	;# 
  5374     1E2F                     	;# 
  5375     1E30                     	;# 
  5376     1E31                     	;# 
  5377     1E32                     	;# 
  5378     1E33                     	;# 
  5379     1E34                     	;# 
  5380     1E35                     	;# 
  5381     1E36                     	;# 
  5382     1E37                     	;# 
  5383     1E8F                     	;# 
  5384     1E90                     	;# 
  5385     1E91                     	;# 
  5386     1E92                     	;# 
  5387     1E93                     	;# 
  5388     1E94                     	;# 
  5389     1E95                     	;# 
  5390     1E96                     	;# 
  5391     1E97                     	;# 
  5392     1E9C                     	;# 
  5393     1E9D                     	;# 
  5394     1E9E                     	;# 
  5395     1EA1                     	;# 
  5396     1EA2                     	;# 
  5397     1EA3                     	;# 
  5398     1EA4                     	;# 
  5399     1EA5                     	;# 
  5400     1EA9                     	;# 
  5401     1EAA                     	;# 
  5402     1EAB                     	;# 
  5403     1EAC                     	;# 
  5404     1EB1                     	;# 
  5405     1EB2                     	;# 
  5406     1EB3                     	;# 
  5407     1EB8                     	;# 
  5408     1EB9                     	;# 
  5409     1EBA                     	;# 
  5410     1EBB                     	;# 
  5411     1EBC                     	;# 
  5412     1EBD                     	;# 
  5413     1EBE                     	;# 
  5414     1EC3                     	;# 
  5415     1EC5                     	;# 
  5416     1EC6                     	;# 
  5417     1EC7                     	;# 
  5418     1EC8                     	;# 
  5419     1EC9                     	;# 
  5420     1ECA                     	;# 
  5421     1ECB                     	;# 
  5422     1ECC                     	;# 
  5423     1ECD                     	;# 
  5424     1ECE                     	;# 
  5425     1F10                     	;# 
  5426     1F11                     	;# 
  5427     1F12                     	;# 
  5428     1F13                     	;# 
  5429     1F14                     	;# 
  5430     1F15                     	;# 
  5431     1F16                     	;# 
  5432     1F17                     	;# 
  5433     1F18                     	;# 
  5434     1F19                     	;# 
  5435     1F1A                     	;# 
  5436     1F1B                     	;# 
  5437     1F1C                     	;# 
  5438     1F1D                     	;# 
  5439     1F1E                     	;# 
  5440     1F1F                     	;# 
  5441     1F20                     	;# 
  5442     1F21                     	;# 
  5443     1F22                     	;# 
  5444     1F23                     	;# 
  5445     1F24                     	;# 
  5446     1F25                     	;# 
  5447     1F26                     	;# 
  5448     1F27                     	;# 
  5449     1F38                     	;# 
  5450     1F39                     	;# 
  5451     1F3A                     	;# 
  5452     1F3B                     	;# 
  5453     1F3C                     	;# 
  5454     1F3D                     	;# 
  5455     1F3E                     	;# 
  5456     1F3F                     	;# 
  5457     1F43                     	;# 
  5458     1F44                     	;# 
  5459     1F45                     	;# 
  5460     1F46                     	;# 
  5461     1F47                     	;# 
  5462     1F48                     	;# 
  5463     1F49                     	;# 
  5464     1F4A                     	;# 
  5465     1F4E                     	;# 
  5466     1F4F                     	;# 
  5467     1F50                     	;# 
  5468     1F51                     	;# 
  5469     1F52                     	;# 
  5470     1F53                     	;# 
  5471     1F54                     	;# 
  5472     1F55                     	;# 
  5473     1F65                     	;# 
  5474     1F66                     	;# 
  5475     1F67                     	;# 
  5476     1F68                     	;# 
  5477     1F69                     	;# 
  5478     1F6A                     	;# 
  5479     1F6B                     	;# 
  5480     1FE4                     	;# 
  5481     1FE5                     	;# 
  5482     1FE6                     	;# 
  5483     1FE7                     	;# 
  5484     1FE8                     	;# 
  5485     1FE8                     	;# 
  5486     1FE9                     	;# 
  5487     1FEA                     	;# 
  5488     1FEB                     	;# 
  5489     1FED                     	;# 
  5490     1FEE                     	;# 
  5491     1FEF                     	;# 
  5492     0000                     	;# 
  5493     0001                     	;# 
  5494     0002                     	;# 
  5495     0003                     	;# 
  5496     0004                     	;# 
  5497     0005                     	;# 
  5498     0006                     	;# 
  5499     0007                     	;# 
  5500     0008                     	;# 
  5501     0009                     	;# 
  5502     000A                     	;# 
  5503     000B                     	;# 
  5504     000C                     	;# 
  5505     000D                     	;# 
  5506     000E                     	;# 
  5507     0010                     	;# 
  5508     0012                     	;# 
  5509     0013                     	;# 
  5510     0014                     	;# 
  5511     0016                     	;# 
  5512     0018                     	;# 
  5513     0019                     	;# 
  5514     001A                     	;# 
  5515     001C                     	;# 
  5516     008C                     	;# 
  5517     008C                     	;# 
  5518     008D                     	;# 
  5519     008E                     	;# 
  5520     008E                     	;# 
  5521     008F                     	;# 
  5522     0090                     	;# 
  5523     0090                     	;# 
  5524     0091                     	;# 
  5525     0092                     	;# 
  5526     0092                     	;# 
  5527     0093                     	;# 
  5528     0094                     	;# 
  5529     0094                     	;# 
  5530     0095                     	;# 
  5531     0096                     	;# 
  5532     0096                     	;# 
  5533     0097                     	;# 
  5534     0098                     	;# 
  5535     0099                     	;# 
  5536     009A                     	;# 
  5537     009B                     	;# 
  5538     009B                     	;# 
  5539     009C                     	;# 
  5540     009D                     	;# 
  5541     009D                     	;# 
  5542     009E                     	;# 
  5543     009F                     	;# 
  5544     010C                     	;# 
  5545     010C                     	;# 
  5546     010D                     	;# 
  5547     010E                     	;# 
  5548     010F                     	;# 
  5549     010F                     	;# 
  5550     0110                     	;# 
  5551     0111                     	;# 
  5552     0112                     	;# 
  5553     0113                     	;# 
  5554     0114                     	;# 
  5555     0115                     	;# 
  5556     0116                     	;# 
  5557     0117                     	;# 
  5558     0118                     	;# 
  5559     0119                     	;# 
  5560     0119                     	;# 
  5561     0119                     	;# 
  5562     011A                     	;# 
  5563     011A                     	;# 
  5564     011A                     	;# 
  5565     011B                     	;# 
  5566     011B                     	;# 
  5567     011B                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011C                     	;# 
  5571     011C                     	;# 
  5572     011C                     	;# 
  5573     011D                     	;# 
  5574     011D                     	;# 
  5575     011D                     	;# 
  5576     011E                     	;# 
  5577     011E                     	;# 
  5578     011E                     	;# 
  5579     011F                     	;# 
  5580     011F                     	;# 
  5581     011F                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     018C                     	;# 
  5585     018D                     	;# 
  5586     018E                     	;# 
  5587     018F                     	;# 
  5588     0190                     	;# 
  5589     0191                     	;# 
  5590     0192                     	;# 
  5591     0196                     	;# 
  5592     0197                     	;# 
  5593     0198                     	;# 
  5594     0199                     	;# 
  5595     019A                     	;# 
  5596     019B                     	;# 
  5597     019C                     	;# 
  5598     020C                     	;# 
  5599     020D                     	;# 
  5600     020E                     	;# 
  5601     020E                     	;# 
  5602     020F                     	;# 
  5603     020F                     	;# 
  5604     0210                     	;# 
  5605     0210                     	;# 
  5606     0211                     	;# 
  5607     0211                     	;# 
  5608     0212                     	;# 
  5609     0213                     	;# 
  5610     0214                     	;# 
  5611     0214                     	;# 
  5612     0215                     	;# 
  5613     0215                     	;# 
  5614     0216                     	;# 
  5615     0216                     	;# 
  5616     0217                     	;# 
  5617     0217                     	;# 
  5618     0218                     	;# 
  5619     0219                     	;# 
  5620     021A                     	;# 
  5621     021A                     	;# 
  5622     021B                     	;# 
  5623     021B                     	;# 
  5624     021C                     	;# 
  5625     021C                     	;# 
  5626     021D                     	;# 
  5627     021D                     	;# 
  5628     021E                     	;# 
  5629     021F                     	;# 
  5630     028C                     	;# 
  5631     028C                     	;# 
  5632     028D                     	;# 
  5633     028D                     	;# 
  5634     028E                     	;# 
  5635     028F                     	;# 
  5636     0290                     	;# 
  5637     0291                     	;# 
  5638     0292                     	;# 
  5639     0292                     	;# 
  5640     0293                     	;# 
  5641     0293                     	;# 
  5642     0294                     	;# 
  5643     0295                     	;# 
  5644     0296                     	;# 
  5645     0297                     	;# 
  5646     0298                     	;# 
  5647     0298                     	;# 
  5648     0299                     	;# 
  5649     0299                     	;# 
  5650     029A                     	;# 
  5651     029B                     	;# 
  5652     029C                     	;# 
  5653     029D                     	;# 
  5654     029F                     	;# 
  5655     030C                     	;# 
  5656     030C                     	;# 
  5657     030D                     	;# 
  5658     030E                     	;# 
  5659     030F                     	;# 
  5660     0310                     	;# 
  5661     0310                     	;# 
  5662     0311                     	;# 
  5663     0312                     	;# 
  5664     0313                     	;# 
  5665     0314                     	;# 
  5666     0314                     	;# 
  5667     0315                     	;# 
  5668     0316                     	;# 
  5669     0317                     	;# 
  5670     0318                     	;# 
  5671     0318                     	;# 
  5672     0319                     	;# 
  5673     031A                     	;# 
  5674     031B                     	;# 
  5675     031C                     	;# 
  5676     031C                     	;# 
  5677     031D                     	;# 
  5678     031E                     	;# 
  5679     031F                     	;# 
  5680     038C                     	;# 
  5681     038C                     	;# 
  5682     038D                     	;# 
  5683     038E                     	;# 
  5684     0390                     	;# 
  5685     0390                     	;# 
  5686     0391                     	;# 
  5687     0392                     	;# 
  5688     048C                     	;# 
  5689     048C                     	;# 
  5690     048D                     	;# 
  5691     048E                     	;# 
  5692     048F                     	;# 
  5693     048F                     	;# 
  5694     0490                     	;# 
  5695     0491                     	;# 
  5696     0492                     	;# 
  5697     0492                     	;# 
  5698     0493                     	;# 
  5699     0494                     	;# 
  5700     0495                     	;# 
  5701     0495                     	;# 
  5702     0496                     	;# 
  5703     0497                     	;# 
  5704     0498                     	;# 
  5705     0499                     	;# 
  5706     049A                     	;# 
  5707     049B                     	;# 
  5708     049C                     	;# 
  5709     049D                     	;# 
  5710     050C                     	;# 
  5711     050C                     	;# 
  5712     050D                     	;# 
  5713     050E                     	;# 
  5714     050F                     	;# 
  5715     050F                     	;# 
  5716     0510                     	;# 
  5717     0511                     	;# 
  5718     0512                     	;# 
  5719     0512                     	;# 
  5720     0513                     	;# 
  5721     0514                     	;# 
  5722     0515                     	;# 
  5723     0515                     	;# 
  5724     0516                     	;# 
  5725     0517                     	;# 
  5726     0518                     	;# 
  5727     0519                     	;# 
  5728     051A                     	;# 
  5729     051B                     	;# 
  5730     051C                     	;# 
  5731     051D                     	;# 
  5732     058C                     	;# 
  5733     058C                     	;# 
  5734     058D                     	;# 
  5735     058E                     	;# 
  5736     058F                     	;# 
  5737     058F                     	;# 
  5738     0590                     	;# 
  5739     0591                     	;# 
  5740     0592                     	;# 
  5741     0593                     	;# 
  5742     059C                     	;# 
  5743     059C                     	;# 
  5744     059D                     	;# 
  5745     059D                     	;# 
  5746     059E                     	;# 
  5747     059F                     	;# 
  5748     060C                     	;# 
  5749     060C                     	;# 
  5750     060D                     	;# 
  5751     060D                     	;# 
  5752     060E                     	;# 
  5753     060F                     	;# 
  5754     0610                     	;# 
  5755     0611                     	;# 
  5756     0612                     	;# 
  5757     0613                     	;# 
  5758     0614                     	;# 
  5759     0616                     	;# 
  5760     0616                     	;# 
  5761     0617                     	;# 
  5762     0617                     	;# 
  5763     0618                     	;# 
  5764     0619                     	;# 
  5765     061A                     	;# 
  5766     061B                     	;# 
  5767     061C                     	;# 
  5768     061D                     	;# 
  5769     061E                     	;# 
  5770     068C                     	;# 
  5771     068D                     	;# 
  5772     068E                     	;# 
  5773     068F                     	;# 
  5774     0690                     	;# 
  5775     0691                     	;# 
  5776     0692                     	;# 
  5777     0693                     	;# 
  5778     0694                     	;# 
  5779     070C                     	;# 
  5780     070D                     	;# 
  5781     070E                     	;# 
  5782     070F                     	;# 
  5783     0710                     	;# 
  5784     0711                     	;# 
  5785     0712                     	;# 
  5786     0713                     	;# 
  5787     0714                     	;# 
  5788     0716                     	;# 
  5789     0717                     	;# 
  5790     0718                     	;# 
  5791     0719                     	;# 
  5792     071A                     	;# 
  5793     071B                     	;# 
  5794     071C                     	;# 
  5795     071D                     	;# 
  5796     071E                     	;# 
  5797     0796                     	;# 
  5798     0797                     	;# 
  5799     0798                     	;# 
  5800     0799                     	;# 
  5801     079A                     	;# 
  5802     079B                     	;# 
  5803     079C                     	;# 
  5804     079D                     	;# 
  5805     080C                     	;# 
  5806     080D                     	;# 
  5807     080E                     	;# 
  5808     080F                     	;# 
  5809     0810                     	;# 
  5810     0811                     	;# 
  5811     0813                     	;# 
  5812     0814                     	;# 
  5813     081A                     	;# 
  5814     081A                     	;# 
  5815     081B                     	;# 
  5816     081C                     	;# 
  5817     081C                     	;# 
  5818     081D                     	;# 
  5819     081E                     	;# 
  5820     081F                     	;# 
  5821     088C                     	;# 
  5822     088D                     	;# 
  5823     088E                     	;# 
  5824     088F                     	;# 
  5825     0890                     	;# 
  5826     0891                     	;# 
  5827     0892                     	;# 
  5828     0893                     	;# 
  5829     0895                     	;# 
  5830     0896                     	;# 
  5831     0897                     	;# 
  5832     0898                     	;# 
  5833     0899                     	;# 
  5834     089A                     	;# 
  5835     089B                     	;# 
  5836     090C                     	;# 
  5837     090E                     	;# 
  5838     090F                     	;# 
  5839     091F                     	;# 
  5840     098F                     	;# 
  5841     098F                     	;# 
  5842     0990                     	;# 
  5843     0991                     	;# 
  5844     0992                     	;# 
  5845     0993                     	;# 
  5846     0994                     	;# 
  5847     0995                     	;# 
  5848     0996                     	;# 
  5849     0997                     	;# 
  5850     0A19                     	;# 
  5851     0A19                     	;# 
  5852     0A1A                     	;# 
  5853     0A1A                     	;# 
  5854     0A1B                     	;# 
  5855     0A1B                     	;# 
  5856     0A1B                     	;# 
  5857     0A1C                     	;# 
  5858     0A1C                     	;# 
  5859     0A1D                     	;# 
  5860     0A1D                     	;# 
  5861     0A1E                     	;# 
  5862     0A1E                     	;# 
  5863     0A1F                     	;# 
  5864     0A1F                     	;# 
  5865     0A1F                     	;# 
  5866     1E0F                     	;# 
  5867     1E10                     	;# 
  5868     1E11                     	;# 
  5869     1E12                     	;# 
  5870     1E13                     	;# 
  5871     1E14                     	;# 
  5872     1E15                     	;# 
  5873     1E16                     	;# 
  5874     1E17                     	;# 
  5875     1E18                     	;# 
  5876     1E19                     	;# 
  5877     1E1A                     	;# 
  5878     1E1B                     	;# 
  5879     1E1C                     	;# 
  5880     1E1D                     	;# 
  5881     1E1E                     	;# 
  5882     1E1F                     	;# 
  5883     1E20                     	;# 
  5884     1E21                     	;# 
  5885     1E22                     	;# 
  5886     1E23                     	;# 
  5887     1E24                     	;# 
  5888     1E25                     	;# 
  5889     1E26                     	;# 
  5890     1E27                     	;# 
  5891     1E28                     	;# 
  5892     1E29                     	;# 
  5893     1E2A                     	;# 
  5894     1E2B                     	;# 
  5895     1E2C                     	;# 
  5896     1E2D                     	;# 
  5897     1E2E                     	;# 
  5898     1E2F                     	;# 
  5899     1E30                     	;# 
  5900     1E31                     	;# 
  5901     1E32                     	;# 
  5902     1E33                     	;# 
  5903     1E34                     	;# 
  5904     1E35                     	;# 
  5905     1E36                     	;# 
  5906     1E37                     	;# 
  5907     1E8F                     	;# 
  5908     1E90                     	;# 
  5909     1E91                     	;# 
  5910     1E92                     	;# 
  5911     1E93                     	;# 
  5912     1E94                     	;# 
  5913     1E95                     	;# 
  5914     1E96                     	;# 
  5915     1E97                     	;# 
  5916     1E9C                     	;# 
  5917     1E9D                     	;# 
  5918     1E9E                     	;# 
  5919     1EA1                     	;# 
  5920     1EA2                     	;# 
  5921     1EA3                     	;# 
  5922     1EA4                     	;# 
  5923     1EA5                     	;# 
  5924     1EA9                     	;# 
  5925     1EAA                     	;# 
  5926     1EAB                     	;# 
  5927     1EAC                     	;# 
  5928     1EB1                     	;# 
  5929     1EB2                     	;# 
  5930     1EB3                     	;# 
  5931     1EB8                     	;# 
  5932     1EB9                     	;# 
  5933     1EBA                     	;# 
  5934     1EBB                     	;# 
  5935     1EBC                     	;# 
  5936     1EBD                     	;# 
  5937     1EBE                     	;# 
  5938     1EC3                     	;# 
  5939     1EC5                     	;# 
  5940     1EC6                     	;# 
  5941     1EC7                     	;# 
  5942     1EC8                     	;# 
  5943     1EC9                     	;# 
  5944     1ECA                     	;# 
  5945     1ECB                     	;# 
  5946     1ECC                     	;# 
  5947     1ECD                     	;# 
  5948     1ECE                     	;# 
  5949     1F10                     	;# 
  5950     1F11                     	;# 
  5951     1F12                     	;# 
  5952     1F13                     	;# 
  5953     1F14                     	;# 
  5954     1F15                     	;# 
  5955     1F16                     	;# 
  5956     1F17                     	;# 
  5957     1F18                     	;# 
  5958     1F19                     	;# 
  5959     1F1A                     	;# 
  5960     1F1B                     	;# 
  5961     1F1C                     	;# 
  5962     1F1D                     	;# 
  5963     1F1E                     	;# 
  5964     1F1F                     	;# 
  5965     1F20                     	;# 
  5966     1F21                     	;# 
  5967     1F22                     	;# 
  5968     1F23                     	;# 
  5969     1F24                     	;# 
  5970     1F25                     	;# 
  5971     1F26                     	;# 
  5972     1F27                     	;# 
  5973     1F38                     	;# 
  5974     1F39                     	;# 
  5975     1F3A                     	;# 
  5976     1F3B                     	;# 
  5977     1F3C                     	;# 
  5978     1F3D                     	;# 
  5979     1F3E                     	;# 
  5980     1F3F                     	;# 
  5981     1F43                     	;# 
  5982     1F44                     	;# 
  5983     1F45                     	;# 
  5984     1F46                     	;# 
  5985     1F47                     	;# 
  5986     1F48                     	;# 
  5987     1F49                     	;# 
  5988     1F4A                     	;# 
  5989     1F4E                     	;# 
  5990     1F4F                     	;# 
  5991     1F50                     	;# 
  5992     1F51                     	;# 
  5993     1F52                     	;# 
  5994     1F53                     	;# 
  5995     1F54                     	;# 
  5996     1F55                     	;# 
  5997     1F65                     	;# 
  5998     1F66                     	;# 
  5999     1F67                     	;# 
  6000     1F68                     	;# 
  6001     1F69                     	;# 
  6002     1F6A                     	;# 
  6003     1F6B                     	;# 
  6004     1FE4                     	;# 
  6005     1FE5                     	;# 
  6006     1FE6                     	;# 
  6007     1FE7                     	;# 
  6008     1FE8                     	;# 
  6009     1FE8                     	;# 
  6010     1FE9                     	;# 
  6011     1FEA                     	;# 
  6012     1FEB                     	;# 
  6013     1FED                     	;# 
  6014     1FEE                     	;# 
  6015     1FEF                     	;# 
  6016     0000                     	;# 
  6017     0001                     	;# 
  6018     0002                     	;# 
  6019     0003                     	;# 
  6020     0004                     	;# 
  6021     0005                     	;# 
  6022     0006                     	;# 
  6023     0007                     	;# 
  6024     0008                     	;# 
  6025     0009                     	;# 
  6026     000A                     	;# 
  6027     000B                     	;# 
  6028     000C                     	;# 
  6029     000D                     	;# 
  6030     000E                     	;# 
  6031     0010                     	;# 
  6032     0012                     	;# 
  6033     0013                     	;# 
  6034     0014                     	;# 
  6035     0016                     	;# 
  6036     0018                     	;# 
  6037     0019                     	;# 
  6038     001A                     	;# 
  6039     001C                     	;# 
  6040     008C                     	;# 
  6041     008C                     	;# 
  6042     008D                     	;# 
  6043     008E                     	;# 
  6044     008E                     	;# 
  6045     008F                     	;# 
  6046     0090                     	;# 
  6047     0090                     	;# 
  6048     0091                     	;# 
  6049     0092                     	;# 
  6050     0092                     	;# 
  6051     0093                     	;# 
  6052     0094                     	;# 
  6053     0094                     	;# 
  6054     0095                     	;# 
  6055     0096                     	;# 
  6056     0096                     	;# 
  6057     0097                     	;# 
  6058     0098                     	;# 
  6059     0099                     	;# 
  6060     009A                     	;# 
  6061     009B                     	;# 
  6062     009B                     	;# 
  6063     009C                     	;# 
  6064     009D                     	;# 
  6065     009D                     	;# 
  6066     009E                     	;# 
  6067     009F                     	;# 
  6068     010C                     	;# 
  6069     010C                     	;# 
  6070     010D                     	;# 
  6071     010E                     	;# 
  6072     010F                     	;# 
  6073     010F                     	;# 
  6074     0110                     	;# 
  6075     0111                     	;# 
  6076     0112                     	;# 
  6077     0113                     	;# 
  6078     0114                     	;# 
  6079     0115                     	;# 
  6080     0116                     	;# 
  6081     0117                     	;# 
  6082     0118                     	;# 
  6083     0119                     	;# 
  6084     0119                     	;# 
  6085     0119                     	;# 
  6086     011A                     	;# 
  6087     011A                     	;# 
  6088     011A                     	;# 
  6089     011B                     	;# 
  6090     011B                     	;# 
  6091     011B                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011C                     	;# 
  6095     011C                     	;# 
  6096     011C                     	;# 
  6097     011D                     	;# 
  6098     011D                     	;# 
  6099     011D                     	;# 
  6100     011E                     	;# 
  6101     011E                     	;# 
  6102     011E                     	;# 
  6103     011F                     	;# 
  6104     011F                     	;# 
  6105     011F                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     018C                     	;# 
  6109     018D                     	;# 
  6110     018E                     	;# 
  6111     018F                     	;# 
  6112     0190                     	;# 
  6113     0191                     	;# 
  6114     0192                     	;# 
  6115     0196                     	;# 
  6116     0197                     	;# 
  6117     0198                     	;# 
  6118     0199                     	;# 
  6119     019A                     	;# 
  6120     019B                     	;# 
  6121     019C                     	;# 
  6122     020C                     	;# 
  6123     020D                     	;# 
  6124     020E                     	;# 
  6125     020E                     	;# 
  6126     020F                     	;# 
  6127     020F                     	;# 
  6128     0210                     	;# 
  6129     0210                     	;# 
  6130     0211                     	;# 
  6131     0211                     	;# 
  6132     0212                     	;# 
  6133     0213                     	;# 
  6134     0214                     	;# 
  6135     0214                     	;# 
  6136     0215                     	;# 
  6137     0215                     	;# 
  6138     0216                     	;# 
  6139     0216                     	;# 
  6140     0217                     	;# 
  6141     0217                     	;# 
  6142     0218                     	;# 
  6143     0219                     	;# 
  6144     021A                     	;# 
  6145     021A                     	;# 
  6146     021B                     	;# 
  6147     021B                     	;# 
  6148     021C                     	;# 
  6149     021C                     	;# 
  6150     021D                     	;# 
  6151     021D                     	;# 
  6152     021E                     	;# 
  6153     021F                     	;# 
  6154     028C                     	;# 
  6155     028C                     	;# 
  6156     028D                     	;# 
  6157     028D                     	;# 
  6158     028E                     	;# 
  6159     028F                     	;# 
  6160     0290                     	;# 
  6161     0291                     	;# 
  6162     0292                     	;# 
  6163     0292                     	;# 
  6164     0293                     	;# 
  6165     0293                     	;# 
  6166     0294                     	;# 
  6167     0295                     	;# 
  6168     0296                     	;# 
  6169     0297                     	;# 
  6170     0298                     	;# 
  6171     0298                     	;# 
  6172     0299                     	;# 
  6173     0299                     	;# 
  6174     029A                     	;# 
  6175     029B                     	;# 
  6176     029C                     	;# 
  6177     029D                     	;# 
  6178     029F                     	;# 
  6179     030C                     	;# 
  6180     030C                     	;# 
  6181     030D                     	;# 
  6182     030E                     	;# 
  6183     030F                     	;# 
  6184     0310                     	;# 
  6185     0310                     	;# 
  6186     0311                     	;# 
  6187     0312                     	;# 
  6188     0313                     	;# 
  6189     0314                     	;# 
  6190     0314                     	;# 
  6191     0315                     	;# 
  6192     0316                     	;# 
  6193     0317                     	;# 
  6194     0318                     	;# 
  6195     0318                     	;# 
  6196     0319                     	;# 
  6197     031A                     	;# 
  6198     031B                     	;# 
  6199     031C                     	;# 
  6200     031C                     	;# 
  6201     031D                     	;# 
  6202     031E                     	;# 
  6203     031F                     	;# 
  6204     038C                     	;# 
  6205     038C                     	;# 
  6206     038D                     	;# 
  6207     038E                     	;# 
  6208     0390                     	;# 
  6209     0390                     	;# 
  6210     0391                     	;# 
  6211     0392                     	;# 
  6212     048C                     	;# 
  6213     048C                     	;# 
  6214     048D                     	;# 
  6215     048E                     	;# 
  6216     048F                     	;# 
  6217     048F                     	;# 
  6218     0490                     	;# 
  6219     0491                     	;# 
  6220     0492                     	;# 
  6221     0492                     	;# 
  6222     0493                     	;# 
  6223     0494                     	;# 
  6224     0495                     	;# 
  6225     0495                     	;# 
  6226     0496                     	;# 
  6227     0497                     	;# 
  6228     0498                     	;# 
  6229     0499                     	;# 
  6230     049A                     	;# 
  6231     049B                     	;# 
  6232     049C                     	;# 
  6233     049D                     	;# 
  6234     050C                     	;# 
  6235     050C                     	;# 
  6236     050D                     	;# 
  6237     050E                     	;# 
  6238     050F                     	;# 
  6239     050F                     	;# 
  6240     0510                     	;# 
  6241     0511                     	;# 
  6242     0512                     	;# 
  6243     0512                     	;# 
  6244     0513                     	;# 
  6245     0514                     	;# 
  6246     0515                     	;# 
  6247     0515                     	;# 
  6248     0516                     	;# 
  6249     0517                     	;# 
  6250     0518                     	;# 
  6251     0519                     	;# 
  6252     051A                     	;# 
  6253     051B                     	;# 
  6254     051C                     	;# 
  6255     051D                     	;# 
  6256     058C                     	;# 
  6257     058C                     	;# 
  6258     058D                     	;# 
  6259     058E                     	;# 
  6260     058F                     	;# 
  6261     058F                     	;# 
  6262     0590                     	;# 
  6263     0591                     	;# 
  6264     0592                     	;# 
  6265     0593                     	;# 
  6266     059C                     	;# 
  6267     059C                     	;# 
  6268     059D                     	;# 
  6269     059D                     	;# 
  6270     059E                     	;# 
  6271     059F                     	;# 
  6272     060C                     	;# 
  6273     060C                     	;# 
  6274     060D                     	;# 
  6275     060D                     	;# 
  6276     060E                     	;# 
  6277     060F                     	;# 
  6278     0610                     	;# 
  6279     0611                     	;# 
  6280     0612                     	;# 
  6281     0613                     	;# 
  6282     0614                     	;# 
  6283     0616                     	;# 
  6284     0616                     	;# 
  6285     0617                     	;# 
  6286     0617                     	;# 
  6287     0618                     	;# 
  6288     0619                     	;# 
  6289     061A                     	;# 
  6290     061B                     	;# 
  6291     061C                     	;# 
  6292     061D                     	;# 
  6293     061E                     	;# 
  6294     068C                     	;# 
  6295     068D                     	;# 
  6296     068E                     	;# 
  6297     068F                     	;# 
  6298     0690                     	;# 
  6299     0691                     	;# 
  6300     0692                     	;# 
  6301     0693                     	;# 
  6302     0694                     	;# 
  6303     070C                     	;# 
  6304     070D                     	;# 
  6305     070E                     	;# 
  6306     070F                     	;# 
  6307     0710                     	;# 
  6308     0711                     	;# 
  6309     0712                     	;# 
  6310     0713                     	;# 
  6311     0714                     	;# 
  6312     0716                     	;# 
  6313     0717                     	;# 
  6314     0718                     	;# 
  6315     0719                     	;# 
  6316     071A                     	;# 
  6317     071B                     	;# 
  6318     071C                     	;# 
  6319     071D                     	;# 
  6320     071E                     	;# 
  6321     0796                     	;# 
  6322     0797                     	;# 
  6323     0798                     	;# 
  6324     0799                     	;# 
  6325     079A                     	;# 
  6326     079B                     	;# 
  6327     079C                     	;# 
  6328     079D                     	;# 
  6329     080C                     	;# 
  6330     080D                     	;# 
  6331     080E                     	;# 
  6332     080F                     	;# 
  6333     0810                     	;# 
  6334     0811                     	;# 
  6335     0813                     	;# 
  6336     0814                     	;# 
  6337     081A                     	;# 
  6338     081A                     	;# 
  6339     081B                     	;# 
  6340     081C                     	;# 
  6341     081C                     	;# 
  6342     081D                     	;# 
  6343     081E                     	;# 
  6344     081F                     	;# 
  6345     088C                     	;# 
  6346     088D                     	;# 
  6347     088E                     	;# 
  6348     088F                     	;# 
  6349     0890                     	;# 
  6350     0891                     	;# 
  6351     0892                     	;# 
  6352     0893                     	;# 
  6353     0895                     	;# 
  6354     0896                     	;# 
  6355     0897                     	;# 
  6356     0898                     	;# 
  6357     0899                     	;# 
  6358     089A                     	;# 
  6359     089B                     	;# 
  6360     090C                     	;# 
  6361     090E                     	;# 
  6362     090F                     	;# 
  6363     091F                     	;# 
  6364     098F                     	;# 
  6365     098F                     	;# 
  6366     0990                     	;# 
  6367     0991                     	;# 
  6368     0992                     	;# 
  6369     0993                     	;# 
  6370     0994                     	;# 
  6371     0995                     	;# 
  6372     0996                     	;# 
  6373     0997                     	;# 
  6374     0A19                     	;# 
  6375     0A19                     	;# 
  6376     0A1A                     	;# 
  6377     0A1A                     	;# 
  6378     0A1B                     	;# 
  6379     0A1B                     	;# 
  6380     0A1B                     	;# 
  6381     0A1C                     	;# 
  6382     0A1C                     	;# 
  6383     0A1D                     	;# 
  6384     0A1D                     	;# 
  6385     0A1E                     	;# 
  6386     0A1E                     	;# 
  6387     0A1F                     	;# 
  6388     0A1F                     	;# 
  6389     0A1F                     	;# 
  6390     1E0F                     	;# 
  6391     1E10                     	;# 
  6392     1E11                     	;# 
  6393     1E12                     	;# 
  6394     1E13                     	;# 
  6395     1E14                     	;# 
  6396     1E15                     	;# 
  6397     1E16                     	;# 
  6398     1E17                     	;# 
  6399     1E18                     	;# 
  6400     1E19                     	;# 
  6401     1E1A                     	;# 
  6402     1E1B                     	;# 
  6403     1E1C                     	;# 
  6404     1E1D                     	;# 
  6405     1E1E                     	;# 
  6406     1E1F                     	;# 
  6407     1E20                     	;# 
  6408     1E21                     	;# 
  6409     1E22                     	;# 
  6410     1E23                     	;# 
  6411     1E24                     	;# 
  6412     1E25                     	;# 
  6413     1E26                     	;# 
  6414     1E27                     	;# 
  6415     1E28                     	;# 
  6416     1E29                     	;# 
  6417     1E2A                     	;# 
  6418     1E2B                     	;# 
  6419     1E2C                     	;# 
  6420     1E2D                     	;# 
  6421     1E2E                     	;# 
  6422     1E2F                     	;# 
  6423     1E30                     	;# 
  6424     1E31                     	;# 
  6425     1E32                     	;# 
  6426     1E33                     	;# 
  6427     1E34                     	;# 
  6428     1E35                     	;# 
  6429     1E36                     	;# 
  6430     1E37                     	;# 
  6431     1E8F                     	;# 
  6432     1E90                     	;# 
  6433     1E91                     	;# 
  6434     1E92                     	;# 
  6435     1E93                     	;# 
  6436     1E94                     	;# 
  6437     1E95                     	;# 
  6438     1E96                     	;# 
  6439     1E97                     	;# 
  6440     1E9C                     	;# 
  6441     1E9D                     	;# 
  6442     1E9E                     	;# 
  6443     1EA1                     	;# 
  6444     1EA2                     	;# 
  6445     1EA3                     	;# 
  6446     1EA4                     	;# 
  6447     1EA5                     	;# 
  6448     1EA9                     	;# 
  6449     1EAA                     	;# 
  6450     1EAB                     	;# 
  6451     1EAC                     	;# 
  6452     1EB1                     	;# 
  6453     1EB2                     	;# 
  6454     1EB3                     	;# 
  6455     1EB8                     	;# 
  6456     1EB9                     	;# 
  6457     1EBA                     	;# 
  6458     1EBB                     	;# 
  6459     1EBC                     	;# 
  6460     1EBD                     	;# 
  6461     1EBE                     	;# 
  6462     1EC3                     	;# 
  6463     1EC5                     	;# 
  6464     1EC6                     	;# 
  6465     1EC7                     	;# 
  6466     1EC8                     	;# 
  6467     1EC9                     	;# 
  6468     1ECA                     	;# 
  6469     1ECB                     	;# 
  6470     1ECC                     	;# 
  6471     1ECD                     	;# 
  6472     1ECE                     	;# 
  6473     1F10                     	;# 
  6474     1F11                     	;# 
  6475     1F12                     	;# 
  6476     1F13                     	;# 
  6477     1F14                     	;# 
  6478     1F15                     	;# 
  6479     1F16                     	;# 
  6480     1F17                     	;# 
  6481     1F18                     	;# 
  6482     1F19                     	;# 
  6483     1F1A                     	;# 
  6484     1F1B                     	;# 
  6485     1F1C                     	;# 
  6486     1F1D                     	;# 
  6487     1F1E                     	;# 
  6488     1F1F                     	;# 
  6489     1F20                     	;# 
  6490     1F21                     	;# 
  6491     1F22                     	;# 
  6492     1F23                     	;# 
  6493     1F24                     	;# 
  6494     1F25                     	;# 
  6495     1F26                     	;# 
  6496     1F27                     	;# 
  6497     1F38                     	;# 
  6498     1F39                     	;# 
  6499     1F3A                     	;# 
  6500     1F3B                     	;# 
  6501     1F3C                     	;# 
  6502     1F3D                     	;# 
  6503     1F3E                     	;# 
  6504     1F3F                     	;# 
  6505     1F43                     	;# 
  6506     1F44                     	;# 
  6507     1F45                     	;# 
  6508     1F46                     	;# 
  6509     1F47                     	;# 
  6510     1F48                     	;# 
  6511     1F49                     	;# 
  6512     1F4A                     	;# 
  6513     1F4E                     	;# 
  6514     1F4F                     	;# 
  6515     1F50                     	;# 
  6516     1F51                     	;# 
  6517     1F52                     	;# 
  6518     1F53                     	;# 
  6519     1F54                     	;# 
  6520     1F55                     	;# 
  6521     1F65                     	;# 
  6522     1F66                     	;# 
  6523     1F67                     	;# 
  6524     1F68                     	;# 
  6525     1F69                     	;# 
  6526     1F6A                     	;# 
  6527     1F6B                     	;# 
  6528     1FE4                     	;# 
  6529     1FE5                     	;# 
  6530     1FE6                     	;# 
  6531     1FE7                     	;# 
  6532     1FE8                     	;# 
  6533     1FE8                     	;# 
  6534     1FE9                     	;# 
  6535     1FEA                     	;# 
  6536     1FEB                     	;# 
  6537     1FED                     	;# 
  6538     1FEE                     	;# 
  6539     1FEF                     	;# 
  6540     0000                     	;# 
  6541     0001                     	;# 
  6542     0002                     	;# 
  6543     0003                     	;# 
  6544     0004                     	;# 
  6545     0005                     	;# 
  6546     0006                     	;# 
  6547     0007                     	;# 
  6548     0008                     	;# 
  6549     0009                     	;# 
  6550     000A                     	;# 
  6551     000B                     	;# 
  6552     000C                     	;# 
  6553     000D                     	;# 
  6554     000E                     	;# 
  6555     0010                     	;# 
  6556     0012                     	;# 
  6557     0013                     	;# 
  6558     0014                     	;# 
  6559     0016                     	;# 
  6560     0018                     	;# 
  6561     0019                     	;# 
  6562     001A                     	;# 
  6563     001C                     	;# 
  6564     008C                     	;# 
  6565     008C                     	;# 
  6566     008D                     	;# 
  6567     008E                     	;# 
  6568     008E                     	;# 
  6569     008F                     	;# 
  6570     0090                     	;# 
  6571     0090                     	;# 
  6572     0091                     	;# 
  6573     0092                     	;# 
  6574     0092                     	;# 
  6575     0093                     	;# 
  6576     0094                     	;# 
  6577     0094                     	;# 
  6578     0095                     	;# 
  6579     0096                     	;# 
  6580     0096                     	;# 
  6581     0097                     	;# 
  6582     0098                     	;# 
  6583     0099                     	;# 
  6584     009A                     	;# 
  6585     009B                     	;# 
  6586     009B                     	;# 
  6587     009C                     	;# 
  6588     009D                     	;# 
  6589     009D                     	;# 
  6590     009E                     	;# 
  6591     009F                     	;# 
  6592     010C                     	;# 
  6593     010C                     	;# 
  6594     010D                     	;# 
  6595     010E                     	;# 
  6596     010F                     	;# 
  6597     010F                     	;# 
  6598     0110                     	;# 
  6599     0111                     	;# 
  6600     0112                     	;# 
  6601     0113                     	;# 
  6602     0114                     	;# 
  6603     0115                     	;# 
  6604     0116                     	;# 
  6605     0117                     	;# 
  6606     0118                     	;# 
  6607     0119                     	;# 
  6608     0119                     	;# 
  6609     0119                     	;# 
  6610     011A                     	;# 
  6611     011A                     	;# 
  6612     011A                     	;# 
  6613     011B                     	;# 
  6614     011B                     	;# 
  6615     011B                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011C                     	;# 
  6619     011C                     	;# 
  6620     011C                     	;# 
  6621     011D                     	;# 
  6622     011D                     	;# 
  6623     011D                     	;# 
  6624     011E                     	;# 
  6625     011E                     	;# 
  6626     011E                     	;# 
  6627     011F                     	;# 
  6628     011F                     	;# 
  6629     011F                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     018C                     	;# 
  6633     018D                     	;# 
  6634     018E                     	;# 
  6635     018F                     	;# 
  6636     0190                     	;# 
  6637     0191                     	;# 
  6638     0192                     	;# 
  6639     0196                     	;# 
  6640     0197                     	;# 
  6641     0198                     	;# 
  6642     0199                     	;# 
  6643     019A                     	;# 
  6644     019B                     	;# 
  6645     019C                     	;# 
  6646     020C                     	;# 
  6647     020D                     	;# 
  6648     020E                     	;# 
  6649     020E                     	;# 
  6650     020F                     	;# 
  6651     020F                     	;# 
  6652     0210                     	;# 
  6653     0210                     	;# 
  6654     0211                     	;# 
  6655     0211                     	;# 
  6656     0212                     	;# 
  6657     0213                     	;# 
  6658     0214                     	;# 
  6659     0214                     	;# 
  6660     0215                     	;# 
  6661     0215                     	;# 
  6662     0216                     	;# 
  6663     0216                     	;# 
  6664     0217                     	;# 
  6665     0217                     	;# 
  6666     0218                     	;# 
  6667     0219                     	;# 
  6668     021A                     	;# 
  6669     021A                     	;# 
  6670     021B                     	;# 
  6671     021B                     	;# 
  6672     021C                     	;# 
  6673     021C                     	;# 
  6674     021D                     	;# 
  6675     021D                     	;# 
  6676     021E                     	;# 
  6677     021F                     	;# 
  6678     028C                     	;# 
  6679     028C                     	;# 
  6680     028D                     	;# 
  6681     028D                     	;# 
  6682     028E                     	;# 
  6683     028F                     	;# 
  6684     0290                     	;# 
  6685     0291                     	;# 
  6686     0292                     	;# 
  6687     0292                     	;# 
  6688     0293                     	;# 
  6689     0293                     	;# 
  6690     0294                     	;# 
  6691     0295                     	;# 
  6692     0296                     	;# 
  6693     0297                     	;# 
  6694     0298                     	;# 
  6695     0298                     	;# 
  6696     0299                     	;# 
  6697     0299                     	;# 
  6698     029A                     	;# 
  6699     029B                     	;# 
  6700     029C                     	;# 
  6701     029D                     	;# 
  6702     029F                     	;# 
  6703     030C                     	;# 
  6704     030C                     	;# 
  6705     030D                     	;# 
  6706     030E                     	;# 
  6707     030F                     	;# 
  6708     0310                     	;# 
  6709     0310                     	;# 
  6710     0311                     	;# 
  6711     0312                     	;# 
  6712     0313                     	;# 
  6713     0314                     	;# 
  6714     0314                     	;# 
  6715     0315                     	;# 
  6716     0316                     	;# 
  6717     0317                     	;# 
  6718     0318                     	;# 
  6719     0318                     	;# 
  6720     0319                     	;# 
  6721     031A                     	;# 
  6722     031B                     	;# 
  6723     031C                     	;# 
  6724     031C                     	;# 
  6725     031D                     	;# 
  6726     031E                     	;# 
  6727     031F                     	;# 
  6728     038C                     	;# 
  6729     038C                     	;# 
  6730     038D                     	;# 
  6731     038E                     	;# 
  6732     0390                     	;# 
  6733     0390                     	;# 
  6734     0391                     	;# 
  6735     0392                     	;# 
  6736     048C                     	;# 
  6737     048C                     	;# 
  6738     048D                     	;# 
  6739     048E                     	;# 
  6740     048F                     	;# 
  6741     048F                     	;# 
  6742     0490                     	;# 
  6743     0491                     	;# 
  6744     0492                     	;# 
  6745     0492                     	;# 
  6746     0493                     	;# 
  6747     0494                     	;# 
  6748     0495                     	;# 
  6749     0495                     	;# 
  6750     0496                     	;# 
  6751     0497                     	;# 
  6752     0498                     	;# 
  6753     0499                     	;# 
  6754     049A                     	;# 
  6755     049B                     	;# 
  6756     049C                     	;# 
  6757     049D                     	;# 
  6758     050C                     	;# 
  6759     050C                     	;# 
  6760     050D                     	;# 
  6761     050E                     	;# 
  6762     050F                     	;# 
  6763     050F                     	;# 
  6764     0510                     	;# 
  6765     0511                     	;# 
  6766     0512                     	;# 
  6767     0512                     	;# 
  6768     0513                     	;# 
  6769     0514                     	;# 
  6770     0515                     	;# 
  6771     0515                     	;# 
  6772     0516                     	;# 
  6773     0517                     	;# 
  6774     0518                     	;# 
  6775     0519                     	;# 
  6776     051A                     	;# 
  6777     051B                     	;# 
  6778     051C                     	;# 
  6779     051D                     	;# 
  6780     058C                     	;# 
  6781     058C                     	;# 
  6782     058D                     	;# 
  6783     058E                     	;# 
  6784     058F                     	;# 
  6785     058F                     	;# 
  6786     0590                     	;# 
  6787     0591                     	;# 
  6788     0592                     	;# 
  6789     0593                     	;# 
  6790     059C                     	;# 
  6791     059C                     	;# 
  6792     059D                     	;# 
  6793     059D                     	;# 
  6794     059E                     	;# 
  6795     059F                     	;# 
  6796     060C                     	;# 
  6797     060C                     	;# 
  6798     060D                     	;# 
  6799     060D                     	;# 
  6800     060E                     	;# 
  6801     060F                     	;# 
  6802     0610                     	;# 
  6803     0611                     	;# 
  6804     0612                     	;# 
  6805     0613                     	;# 
  6806     0614                     	;# 
  6807     0616                     	;# 
  6808     0616                     	;# 
  6809     0617                     	;# 
  6810     0617                     	;# 
  6811     0618                     	;# 
  6812     0619                     	;# 
  6813     061A                     	;# 
  6814     061B                     	;# 
  6815     061C                     	;# 
  6816     061D                     	;# 
  6817     061E                     	;# 
  6818     068C                     	;# 
  6819     068D                     	;# 
  6820     068E                     	;# 
  6821     068F                     	;# 
  6822     0690                     	;# 
  6823     0691                     	;# 
  6824     0692                     	;# 
  6825     0693                     	;# 
  6826     0694                     	;# 
  6827     070C                     	;# 
  6828     070D                     	;# 
  6829     070E                     	;# 
  6830     070F                     	;# 
  6831     0710                     	;# 
  6832     0711                     	;# 
  6833     0712                     	;# 
  6834     0713                     	;# 
  6835     0714                     	;# 
  6836     0716                     	;# 
  6837     0717                     	;# 
  6838     0718                     	;# 
  6839     0719                     	;# 
  6840     071A                     	;# 
  6841     071B                     	;# 
  6842     071C                     	;# 
  6843     071D                     	;# 
  6844     071E                     	;# 
  6845     0796                     	;# 
  6846     0797                     	;# 
  6847     0798                     	;# 
  6848     0799                     	;# 
  6849     079A                     	;# 
  6850     079B                     	;# 
  6851     079C                     	;# 
  6852     079D                     	;# 
  6853     080C                     	;# 
  6854     080D                     	;# 
  6855     080E                     	;# 
  6856     080F                     	;# 
  6857     0810                     	;# 
  6858     0811                     	;# 
  6859     0813                     	;# 
  6860     0814                     	;# 
  6861     081A                     	;# 
  6862     081A                     	;# 
  6863     081B                     	;# 
  6864     081C                     	;# 
  6865     081C                     	;# 
  6866     081D                     	;# 
  6867     081E                     	;# 
  6868     081F                     	;# 
  6869     088C                     	;# 
  6870     088D                     	;# 
  6871     088E                     	;# 
  6872     088F                     	;# 
  6873     0890                     	;# 
  6874     0891                     	;# 
  6875     0892                     	;# 
  6876     0893                     	;# 
  6877     0895                     	;# 
  6878     0896                     	;# 
  6879     0897                     	;# 
  6880     0898                     	;# 
  6881     0899                     	;# 
  6882     089A                     	;# 
  6883     089B                     	;# 
  6884     090C                     	;# 
  6885     090E                     	;# 
  6886     090F                     	;# 
  6887     091F                     	;# 
  6888     098F                     	;# 
  6889     098F                     	;# 
  6890     0990                     	;# 
  6891     0991                     	;# 
  6892     0992                     	;# 
  6893     0993                     	;# 
  6894     0994                     	;# 
  6895     0995                     	;# 
  6896     0996                     	;# 
  6897     0997                     	;# 
  6898     0A19                     	;# 
  6899     0A19                     	;# 
  6900     0A1A                     	;# 
  6901     0A1A                     	;# 
  6902     0A1B                     	;# 
  6903     0A1B                     	;# 
  6904     0A1B                     	;# 
  6905     0A1C                     	;# 
  6906     0A1C                     	;# 
  6907     0A1D                     	;# 
  6908     0A1D                     	;# 
  6909     0A1E                     	;# 
  6910     0A1E                     	;# 
  6911     0A1F                     	;# 
  6912     0A1F                     	;# 
  6913     0A1F                     	;# 
  6914     1E0F                     	;# 
  6915     1E10                     	;# 
  6916     1E11                     	;# 
  6917     1E12                     	;# 
  6918     1E13                     	;# 
  6919     1E14                     	;# 
  6920     1E15                     	;# 
  6921     1E16                     	;# 
  6922     1E17                     	;# 
  6923     1E18                     	;# 
  6924     1E19                     	;# 
  6925     1E1A                     	;# 
  6926     1E1B                     	;# 
  6927     1E1C                     	;# 
  6928     1E1D                     	;# 
  6929     1E1E                     	;# 
  6930     1E1F                     	;# 
  6931     1E20                     	;# 
  6932     1E21                     	;# 
  6933     1E22                     	;# 
  6934     1E23                     	;# 
  6935     1E24                     	;# 
  6936     1E25                     	;# 
  6937     1E26                     	;# 
  6938     1E27                     	;# 
  6939     1E28                     	;# 
  6940     1E29                     	;# 
  6941     1E2A                     	;# 
  6942     1E2B                     	;# 
  6943     1E2C                     	;# 
  6944     1E2D                     	;# 
  6945     1E2E                     	;# 
  6946     1E2F                     	;# 
  6947     1E30                     	;# 
  6948     1E31                     	;# 
  6949     1E32                     	;# 
  6950     1E33                     	;# 
  6951     1E34                     	;# 
  6952     1E35                     	;# 
  6953     1E36                     	;# 
  6954     1E37                     	;# 
  6955     1E8F                     	;# 
  6956     1E90                     	;# 
  6957     1E91                     	;# 
  6958     1E92                     	;# 
  6959     1E93                     	;# 
  6960     1E94                     	;# 
  6961     1E95                     	;# 
  6962     1E96                     	;# 
  6963     1E97                     	;# 
  6964     1E9C                     	;# 
  6965     1E9D                     	;# 
  6966     1E9E                     	;# 
  6967     1EA1                     	;# 
  6968     1EA2                     	;# 
  6969     1EA3                     	;# 
  6970     1EA4                     	;# 
  6971     1EA5                     	;# 
  6972     1EA9                     	;# 
  6973     1EAA                     	;# 
  6974     1EAB                     	;# 
  6975     1EAC                     	;# 
  6976     1EB1                     	;# 
  6977     1EB2                     	;# 
  6978     1EB3                     	;# 
  6979     1EB8                     	;# 
  6980     1EB9                     	;# 
  6981     1EBA                     	;# 
  6982     1EBB                     	;# 
  6983     1EBC                     	;# 
  6984     1EBD                     	;# 
  6985     1EBE                     	;# 
  6986     1EC3                     	;# 
  6987     1EC5                     	;# 
  6988     1EC6                     	;# 
  6989     1EC7                     	;# 
  6990     1EC8                     	;# 
  6991     1EC9                     	;# 
  6992     1ECA                     	;# 
  6993     1ECB                     	;# 
  6994     1ECC                     	;# 
  6995     1ECD                     	;# 
  6996     1ECE                     	;# 
  6997     1F10                     	;# 
  6998     1F11                     	;# 
  6999     1F12                     	;# 
  7000     1F13                     	;# 
  7001     1F14                     	;# 
  7002     1F15                     	;# 
  7003     1F16                     	;# 
  7004     1F17                     	;# 
  7005     1F18                     	;# 
  7006     1F19                     	;# 
  7007     1F1A                     	;# 
  7008     1F1B                     	;# 
  7009     1F1C                     	;# 
  7010     1F1D                     	;# 
  7011     1F1E                     	;# 
  7012     1F1F                     	;# 
  7013     1F20                     	;# 
  7014     1F21                     	;# 
  7015     1F22                     	;# 
  7016     1F23                     	;# 
  7017     1F24                     	;# 
  7018     1F25                     	;# 
  7019     1F26                     	;# 
  7020     1F27                     	;# 
  7021     1F38                     	;# 
  7022     1F39                     	;# 
  7023     1F3A                     	;# 
  7024     1F3B                     	;# 
  7025     1F3C                     	;# 
  7026     1F3D                     	;# 
  7027     1F3E                     	;# 
  7028     1F3F                     	;# 
  7029     1F43                     	;# 
  7030     1F44                     	;# 
  7031     1F45                     	;# 
  7032     1F46                     	;# 
  7033     1F47                     	;# 
  7034     1F48                     	;# 
  7035     1F49                     	;# 
  7036     1F4A                     	;# 
  7037     1F4E                     	;# 
  7038     1F4F                     	;# 
  7039     1F50                     	;# 
  7040     1F51                     	;# 
  7041     1F52                     	;# 
  7042     1F53                     	;# 
  7043     1F54                     	;# 
  7044     1F55                     	;# 
  7045     1F65                     	;# 
  7046     1F66                     	;# 
  7047     1F67                     	;# 
  7048     1F68                     	;# 
  7049     1F69                     	;# 
  7050     1F6A                     	;# 
  7051     1F6B                     	;# 
  7052     1FE4                     	;# 
  7053     1FE5                     	;# 
  7054     1FE6                     	;# 
  7055     1FE7                     	;# 
  7056     1FE8                     	;# 
  7057     1FE8                     	;# 
  7058     1FE9                     	;# 
  7059     1FEA                     	;# 
  7060     1FEB                     	;# 
  7061     1FED                     	;# 
  7062     1FEE                     	;# 
  7063     1FEF                     	;# 
  7064     0000                     	;# 
  7065     0001                     	;# 
  7066     0002                     	;# 
  7067     0003                     	;# 
  7068     0004                     	;# 
  7069     0005                     	;# 
  7070     0006                     	;# 
  7071     0007                     	;# 
  7072     0008                     	;# 
  7073     0009                     	;# 
  7074     000A                     	;# 
  7075     000B                     	;# 
  7076     000C                     	;# 
  7077     000D                     	;# 
  7078     000E                     	;# 
  7079     0010                     	;# 
  7080     0012                     	;# 
  7081     0013                     	;# 
  7082     0014                     	;# 
  7083     0016                     	;# 
  7084     0018                     	;# 
  7085     0019                     	;# 
  7086     001A                     	;# 
  7087     001C                     	;# 
  7088     008C                     	;# 
  7089     008C                     	;# 
  7090     008D                     	;# 
  7091     008E                     	;# 
  7092     008E                     	;# 
  7093     008F                     	;# 
  7094     0090                     	;# 
  7095     0090                     	;# 
  7096     0091                     	;# 
  7097     0092                     	;# 
  7098     0092                     	;# 
  7099     0093                     	;# 
  7100     0094                     	;# 
  7101     0094                     	;# 
  7102     0095                     	;# 
  7103     0096                     	;# 
  7104     0096                     	;# 
  7105     0097                     	;# 
  7106     0098                     	;# 
  7107     0099                     	;# 
  7108     009A                     	;# 
  7109     009B                     	;# 
  7110     009B                     	;# 
  7111     009C                     	;# 
  7112     009D                     	;# 
  7113     009D                     	;# 
  7114     009E                     	;# 
  7115     009F                     	;# 
  7116     010C                     	;# 
  7117     010C                     	;# 
  7118     010D                     	;# 
  7119     010E                     	;# 
  7120     010F                     	;# 
  7121     010F                     	;# 
  7122     0110                     	;# 
  7123     0111                     	;# 
  7124     0112                     	;# 
  7125     0113                     	;# 
  7126     0114                     	;# 
  7127     0115                     	;# 
  7128     0116                     	;# 
  7129     0117                     	;# 
  7130     0118                     	;# 
  7131     0119                     	;# 
  7132     0119                     	;# 
  7133     0119                     	;# 
  7134     011A                     	;# 
  7135     011A                     	;# 
  7136     011A                     	;# 
  7137     011B                     	;# 
  7138     011B                     	;# 
  7139     011B                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011C                     	;# 
  7143     011C                     	;# 
  7144     011C                     	;# 
  7145     011D                     	;# 
  7146     011D                     	;# 
  7147     011D                     	;# 
  7148     011E                     	;# 
  7149     011E                     	;# 
  7150     011E                     	;# 
  7151     011F                     	;# 
  7152     011F                     	;# 
  7153     011F                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     018C                     	;# 
  7157     018D                     	;# 
  7158     018E                     	;# 
  7159     018F                     	;# 
  7160     0190                     	;# 
  7161     0191                     	;# 
  7162     0192                     	;# 
  7163     0196                     	;# 
  7164     0197                     	;# 
  7165     0198                     	;# 
  7166     0199                     	;# 
  7167     019A                     	;# 
  7168     019B                     	;# 
  7169     019C                     	;# 
  7170     020C                     	;# 
  7171     020D                     	;# 
  7172     020E                     	;# 
  7173     020E                     	;# 
  7174     020F                     	;# 
  7175     020F                     	;# 
  7176     0210                     	;# 
  7177     0210                     	;# 
  7178     0211                     	;# 
  7179     0211                     	;# 
  7180     0212                     	;# 
  7181     0213                     	;# 
  7182     0214                     	;# 
  7183     0214                     	;# 
  7184     0215                     	;# 
  7185     0215                     	;# 
  7186     0216                     	;# 
  7187     0216                     	;# 
  7188     0217                     	;# 
  7189     0217                     	;# 
  7190     0218                     	;# 
  7191     0219                     	;# 
  7192     021A                     	;# 
  7193     021A                     	;# 
  7194     021B                     	;# 
  7195     021B                     	;# 
  7196     021C                     	;# 
  7197     021C                     	;# 
  7198     021D                     	;# 
  7199     021D                     	;# 
  7200     021E                     	;# 
  7201     021F                     	;# 
  7202     028C                     	;# 
  7203     028C                     	;# 
  7204     028D                     	;# 
  7205     028D                     	;# 
  7206     028E                     	;# 
  7207     028F                     	;# 
  7208     0290                     	;# 
  7209     0291                     	;# 
  7210     0292                     	;# 
  7211     0292                     	;# 
  7212     0293                     	;# 
  7213     0293                     	;# 
  7214     0294                     	;# 
  7215     0295                     	;# 
  7216     0296                     	;# 
  7217     0297                     	;# 
  7218     0298                     	;# 
  7219     0298                     	;# 
  7220     0299                     	;# 
  7221     0299                     	;# 
  7222     029A                     	;# 
  7223     029B                     	;# 
  7224     029C                     	;# 
  7225     029D                     	;# 
  7226     029F                     	;# 
  7227     030C                     	;# 
  7228     030C                     	;# 
  7229     030D                     	;# 
  7230     030E                     	;# 
  7231     030F                     	;# 
  7232     0310                     	;# 
  7233     0310                     	;# 
  7234     0311                     	;# 
  7235     0312                     	;# 
  7236     0313                     	;# 
  7237     0314                     	;# 
  7238     0314                     	;# 
  7239     0315                     	;# 
  7240     0316                     	;# 
  7241     0317                     	;# 
  7242     0318                     	;# 
  7243     0318                     	;# 
  7244     0319                     	;# 
  7245     031A                     	;# 
  7246     031B                     	;# 
  7247     031C                     	;# 
  7248     031C                     	;# 
  7249     031D                     	;# 
  7250     031E                     	;# 
  7251     031F                     	;# 
  7252     038C                     	;# 
  7253     038C                     	;# 
  7254     038D                     	;# 
  7255     038E                     	;# 
  7256     0390                     	;# 
  7257     0390                     	;# 
  7258     0391                     	;# 
  7259     0392                     	;# 
  7260     048C                     	;# 
  7261     048C                     	;# 
  7262     048D                     	;# 
  7263     048E                     	;# 
  7264     048F                     	;# 
  7265     048F                     	;# 
  7266     0490                     	;# 
  7267     0491                     	;# 
  7268     0492                     	;# 
  7269     0492                     	;# 
  7270     0493                     	;# 
  7271     0494                     	;# 
  7272     0495                     	;# 
  7273     0495                     	;# 
  7274     0496                     	;# 
  7275     0497                     	;# 
  7276     0498                     	;# 
  7277     0499                     	;# 
  7278     049A                     	;# 
  7279     049B                     	;# 
  7280     049C                     	;# 
  7281     049D                     	;# 
  7282     050C                     	;# 
  7283     050C                     	;# 
  7284     050D                     	;# 
  7285     050E                     	;# 
  7286     050F                     	;# 
  7287     050F                     	;# 
  7288     0510                     	;# 
  7289     0511                     	;# 
  7290     0512                     	;# 
  7291     0512                     	;# 
  7292     0513                     	;# 
  7293     0514                     	;# 
  7294     0515                     	;# 
  7295     0515                     	;# 
  7296     0516                     	;# 
  7297     0517                     	;# 
  7298     0518                     	;# 
  7299     0519                     	;# 
  7300     051A                     	;# 
  7301     051B                     	;# 
  7302     051C                     	;# 
  7303     051D                     	;# 
  7304     058C                     	;# 
  7305     058C                     	;# 
  7306     058D                     	;# 
  7307     058E                     	;# 
  7308     058F                     	;# 
  7309     058F                     	;# 
  7310     0590                     	;# 
  7311     0591                     	;# 
  7312     0592                     	;# 
  7313     0593                     	;# 
  7314     059C                     	;# 
  7315     059C                     	;# 
  7316     059D                     	;# 
  7317     059D                     	;# 
  7318     059E                     	;# 
  7319     059F                     	;# 
  7320     060C                     	;# 
  7321     060C                     	;# 
  7322     060D                     	;# 
  7323     060D                     	;# 
  7324     060E                     	;# 
  7325     060F                     	;# 
  7326     0610                     	;# 
  7327     0611                     	;# 
  7328     0612                     	;# 
  7329     0613                     	;# 
  7330     0614                     	;# 
  7331     0616                     	;# 
  7332     0616                     	;# 
  7333     0617                     	;# 
  7334     0617                     	;# 
  7335     0618                     	;# 
  7336     0619                     	;# 
  7337     061A                     	;# 
  7338     061B                     	;# 
  7339     061C                     	;# 
  7340     061D                     	;# 
  7341     061E                     	;# 
  7342     068C                     	;# 
  7343     068D                     	;# 
  7344     068E                     	;# 
  7345     068F                     	;# 
  7346     0690                     	;# 
  7347     0691                     	;# 
  7348     0692                     	;# 
  7349     0693                     	;# 
  7350     0694                     	;# 
  7351     070C                     	;# 
  7352     070D                     	;# 
  7353     070E                     	;# 
  7354     070F                     	;# 
  7355     0710                     	;# 
  7356     0711                     	;# 
  7357     0712                     	;# 
  7358     0713                     	;# 
  7359     0714                     	;# 
  7360     0716                     	;# 
  7361     0717                     	;# 
  7362     0718                     	;# 
  7363     0719                     	;# 
  7364     071A                     	;# 
  7365     071B                     	;# 
  7366     071C                     	;# 
  7367     071D                     	;# 
  7368     071E                     	;# 
  7369     0796                     	;# 
  7370     0797                     	;# 
  7371     0798                     	;# 
  7372     0799                     	;# 
  7373     079A                     	;# 
  7374     079B                     	;# 
  7375     079C                     	;# 
  7376     079D                     	;# 
  7377     080C                     	;# 
  7378     080D                     	;# 
  7379     080E                     	;# 
  7380     080F                     	;# 
  7381     0810                     	;# 
  7382     0811                     	;# 
  7383     0813                     	;# 
  7384     0814                     	;# 
  7385     081A                     	;# 
  7386     081A                     	;# 
  7387     081B                     	;# 
  7388     081C                     	;# 
  7389     081C                     	;# 
  7390     081D                     	;# 
  7391     081E                     	;# 
  7392     081F                     	;# 
  7393     088C                     	;# 
  7394     088D                     	;# 
  7395     088E                     	;# 
  7396     088F                     	;# 
  7397     0890                     	;# 
  7398     0891                     	;# 
  7399     0892                     	;# 
  7400     0893                     	;# 
  7401     0895                     	;# 
  7402     0896                     	;# 
  7403     0897                     	;# 
  7404     0898                     	;# 
  7405     0899                     	;# 
  7406     089A                     	;# 
  7407     089B                     	;# 
  7408     090C                     	;# 
  7409     090E                     	;# 
  7410     090F                     	;# 
  7411     091F                     	;# 
  7412     098F                     	;# 
  7413     098F                     	;# 
  7414     0990                     	;# 
  7415     0991                     	;# 
  7416     0992                     	;# 
  7417     0993                     	;# 
  7418     0994                     	;# 
  7419     0995                     	;# 
  7420     0996                     	;# 
  7421     0997                     	;# 
  7422     0A19                     	;# 
  7423     0A19                     	;# 
  7424     0A1A                     	;# 
  7425     0A1A                     	;# 
  7426     0A1B                     	;# 
  7427     0A1B                     	;# 
  7428     0A1B                     	;# 
  7429     0A1C                     	;# 
  7430     0A1C                     	;# 
  7431     0A1D                     	;# 
  7432     0A1D                     	;# 
  7433     0A1E                     	;# 
  7434     0A1E                     	;# 
  7435     0A1F                     	;# 
  7436     0A1F                     	;# 
  7437     0A1F                     	;# 
  7438     1E0F                     	;# 
  7439     1E10                     	;# 
  7440     1E11                     	;# 
  7441     1E12                     	;# 
  7442     1E13                     	;# 
  7443     1E14                     	;# 
  7444     1E15                     	;# 
  7445     1E16                     	;# 
  7446     1E17                     	;# 
  7447     1E18                     	;# 
  7448     1E19                     	;# 
  7449     1E1A                     	;# 
  7450     1E1B                     	;# 
  7451     1E1C                     	;# 
  7452     1E1D                     	;# 
  7453     1E1E                     	;# 
  7454     1E1F                     	;# 
  7455     1E20                     	;# 
  7456     1E21                     	;# 
  7457     1E22                     	;# 
  7458     1E23                     	;# 
  7459     1E24                     	;# 
  7460     1E25                     	;# 
  7461     1E26                     	;# 
  7462     1E27                     	;# 
  7463     1E28                     	;# 
  7464     1E29                     	;# 
  7465     1E2A                     	;# 
  7466     1E2B                     	;# 
  7467     1E2C                     	;# 
  7468     1E2D                     	;# 
  7469     1E2E                     	;# 
  7470     1E2F                     	;# 
  7471     1E30                     	;# 
  7472     1E31                     	;# 
  7473     1E32                     	;# 
  7474     1E33                     	;# 
  7475     1E34                     	;# 
  7476     1E35                     	;# 
  7477     1E36                     	;# 
  7478     1E37                     	;# 
  7479     1E8F                     	;# 
  7480     1E90                     	;# 
  7481     1E91                     	;# 
  7482     1E92                     	;# 
  7483     1E93                     	;# 
  7484     1E94                     	;# 
  7485     1E95                     	;# 
  7486     1E96                     	;# 
  7487     1E97                     	;# 
  7488     1E9C                     	;# 
  7489     1E9D                     	;# 
  7490     1E9E                     	;# 
  7491     1EA1                     	;# 
  7492     1EA2                     	;# 
  7493     1EA3                     	;# 
  7494     1EA4                     	;# 
  7495     1EA5                     	;# 
  7496     1EA9                     	;# 
  7497     1EAA                     	;# 
  7498     1EAB                     	;# 
  7499     1EAC                     	;# 
  7500     1EB1                     	;# 
  7501     1EB2                     	;# 
  7502     1EB3                     	;# 
  7503     1EB8                     	;# 
  7504     1EB9                     	;# 
  7505     1EBA                     	;# 
  7506     1EBB                     	;# 
  7507     1EBC                     	;# 
  7508     1EBD                     	;# 
  7509     1EBE                     	;# 
  7510     1EC3                     	;# 
  7511     1EC5                     	;# 
  7512     1EC6                     	;# 
  7513     1EC7                     	;# 
  7514     1EC8                     	;# 
  7515     1EC9                     	;# 
  7516     1ECA                     	;# 
  7517     1ECB                     	;# 
  7518     1ECC                     	;# 
  7519     1ECD                     	;# 
  7520     1ECE                     	;# 
  7521     1F10                     	;# 
  7522     1F11                     	;# 
  7523     1F12                     	;# 
  7524     1F13                     	;# 
  7525     1F14                     	;# 
  7526     1F15                     	;# 
  7527     1F16                     	;# 
  7528     1F17                     	;# 
  7529     1F18                     	;# 
  7530     1F19                     	;# 
  7531     1F1A                     	;# 
  7532     1F1B                     	;# 
  7533     1F1C                     	;# 
  7534     1F1D                     	;# 
  7535     1F1E                     	;# 
  7536     1F1F                     	;# 
  7537     1F20                     	;# 
  7538     1F21                     	;# 
  7539     1F22                     	;# 
  7540     1F23                     	;# 
  7541     1F24                     	;# 
  7542     1F25                     	;# 
  7543     1F26                     	;# 
  7544     1F27                     	;# 
  7545     1F38                     	;# 
  7546     1F39                     	;# 
  7547     1F3A                     	;# 
  7548     1F3B                     	;# 
  7549     1F3C                     	;# 
  7550     1F3D                     	;# 
  7551     1F3E                     	;# 
  7552     1F3F                     	;# 
  7553     1F43                     	;# 
  7554     1F44                     	;# 
  7555     1F45                     	;# 
  7556     1F46                     	;# 
  7557     1F47                     	;# 
  7558     1F48                     	;# 
  7559     1F49                     	;# 
  7560     1F4A                     	;# 
  7561     1F4E                     	;# 
  7562     1F4F                     	;# 
  7563     1F50                     	;# 
  7564     1F51                     	;# 
  7565     1F52                     	;# 
  7566     1F53                     	;# 
  7567     1F54                     	;# 
  7568     1F55                     	;# 
  7569     1F65                     	;# 
  7570     1F66                     	;# 
  7571     1F67                     	;# 
  7572     1F68                     	;# 
  7573     1F69                     	;# 
  7574     1F6A                     	;# 
  7575     1F6B                     	;# 
  7576     1FE4                     	;# 
  7577     1FE5                     	;# 
  7578     1FE6                     	;# 
  7579     1FE7                     	;# 
  7580     1FE8                     	;# 
  7581     1FE8                     	;# 
  7582     1FE9                     	;# 
  7583     1FEA                     	;# 
  7584     1FEB                     	;# 
  7585     1FED                     	;# 
  7586     1FEE                     	;# 
  7587     1FEF                     	;# 
  7588     0000                     	;# 
  7589     0001                     	;# 
  7590     0002                     	;# 
  7591     0003                     	;# 
  7592     0004                     	;# 
  7593     0005                     	;# 
  7594     0006                     	;# 
  7595     0007                     	;# 
  7596     0008                     	;# 
  7597     0009                     	;# 
  7598     000A                     	;# 
  7599     000B                     	;# 
  7600     000C                     	;# 
  7601     000D                     	;# 
  7602     000E                     	;# 
  7603     0010                     	;# 
  7604     0012                     	;# 
  7605     0013                     	;# 
  7606     0014                     	;# 
  7607     0016                     	;# 
  7608     0018                     	;# 
  7609     0019                     	;# 
  7610     001A                     	;# 
  7611     001C                     	;# 
  7612     008C                     	;# 
  7613     008C                     	;# 
  7614     008D                     	;# 
  7615     008E                     	;# 
  7616     008E                     	;# 
  7617     008F                     	;# 
  7618     0090                     	;# 
  7619     0090                     	;# 
  7620     0091                     	;# 
  7621     0092                     	;# 
  7622     0092                     	;# 
  7623     0093                     	;# 
  7624     0094                     	;# 
  7625     0094                     	;# 
  7626     0095                     	;# 
  7627     0096                     	;# 
  7628     0096                     	;# 
  7629     0097                     	;# 
  7630     0098                     	;# 
  7631     0099                     	;# 
  7632     009A                     	;# 
  7633     009B                     	;# 
  7634     009B                     	;# 
  7635     009C                     	;# 
  7636     009D                     	;# 
  7637     009D                     	;# 
  7638     009E                     	;# 
  7639     009F                     	;# 
  7640     010C                     	;# 
  7641     010C                     	;# 
  7642     010D                     	;# 
  7643     010E                     	;# 
  7644     010F                     	;# 
  7645     010F                     	;# 
  7646     0110                     	;# 
  7647     0111                     	;# 
  7648     0112                     	;# 
  7649     0113                     	;# 
  7650     0114                     	;# 
  7651     0115                     	;# 
  7652     0116                     	;# 
  7653     0117                     	;# 
  7654     0118                     	;# 
  7655     0119                     	;# 
  7656     0119                     	;# 
  7657     0119                     	;# 
  7658     011A                     	;# 
  7659     011A                     	;# 
  7660     011A                     	;# 
  7661     011B                     	;# 
  7662     011B                     	;# 
  7663     011B                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011C                     	;# 
  7667     011C                     	;# 
  7668     011C                     	;# 
  7669     011D                     	;# 
  7670     011D                     	;# 
  7671     011D                     	;# 
  7672     011E                     	;# 
  7673     011E                     	;# 
  7674     011E                     	;# 
  7675     011F                     	;# 
  7676     011F                     	;# 
  7677     011F                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     018C                     	;# 
  7681     018D                     	;# 
  7682     018E                     	;# 
  7683     018F                     	;# 
  7684     0190                     	;# 
  7685     0191                     	;# 
  7686     0192                     	;# 
  7687     0196                     	;# 
  7688     0197                     	;# 
  7689     0198                     	;# 
  7690     0199                     	;# 
  7691     019A                     	;# 
  7692     019B                     	;# 
  7693     019C                     	;# 
  7694     020C                     	;# 
  7695     020D                     	;# 
  7696     020E                     	;# 
  7697     020E                     	;# 
  7698     020F                     	;# 
  7699     020F                     	;# 
  7700     0210                     	;# 
  7701     0210                     	;# 
  7702     0211                     	;# 
  7703     0211                     	;# 
  7704     0212                     	;# 
  7705     0213                     	;# 
  7706     0214                     	;# 
  7707     0214                     	;# 
  7708     0215                     	;# 
  7709     0215                     	;# 
  7710     0216                     	;# 
  7711     0216                     	;# 
  7712     0217                     	;# 
  7713     0217                     	;# 
  7714     0218                     	;# 
  7715     0219                     	;# 
  7716     021A                     	;# 
  7717     021A                     	;# 
  7718     021B                     	;# 
  7719     021B                     	;# 
  7720     021C                     	;# 
  7721     021C                     	;# 
  7722     021D                     	;# 
  7723     021D                     	;# 
  7724     021E                     	;# 
  7725     021F                     	;# 
  7726     028C                     	;# 
  7727     028C                     	;# 
  7728     028D                     	;# 
  7729     028D                     	;# 
  7730     028E                     	;# 
  7731     028F                     	;# 
  7732     0290                     	;# 
  7733     0291                     	;# 
  7734     0292                     	;# 
  7735     0292                     	;# 
  7736     0293                     	;# 
  7737     0293                     	;# 
  7738     0294                     	;# 
  7739     0295                     	;# 
  7740     0296                     	;# 
  7741     0297                     	;# 
  7742     0298                     	;# 
  7743     0298                     	;# 
  7744     0299                     	;# 
  7745     0299                     	;# 
  7746     029A                     	;# 
  7747     029B                     	;# 
  7748     029C                     	;# 
  7749     029D                     	;# 
  7750     029F                     	;# 
  7751     030C                     	;# 
  7752     030C                     	;# 
  7753     030D                     	;# 
  7754     030E                     	;# 
  7755     030F                     	;# 
  7756     0310                     	;# 
  7757     0310                     	;# 
  7758     0311                     	;# 
  7759     0312                     	;# 
  7760     0313                     	;# 
  7761     0314                     	;# 
  7762     0314                     	;# 
  7763     0315                     	;# 
  7764     0316                     	;# 
  7765     0317                     	;# 
  7766     0318                     	;# 
  7767     0318                     	;# 
  7768     0319                     	;# 
  7769     031A                     	;# 
  7770     031B                     	;# 
  7771     031C                     	;# 
  7772     031C                     	;# 
  7773     031D                     	;# 
  7774     031E                     	;# 
  7775     031F                     	;# 
  7776     038C                     	;# 
  7777     038C                     	;# 
  7778     038D                     	;# 
  7779     038E                     	;# 
  7780     0390                     	;# 
  7781     0390                     	;# 
  7782     0391                     	;# 
  7783     0392                     	;# 
  7784     048C                     	;# 
  7785     048C                     	;# 
  7786     048D                     	;# 
  7787     048E                     	;# 
  7788     048F                     	;# 
  7789     048F                     	;# 
  7790     0490                     	;# 
  7791     0491                     	;# 
  7792     0492                     	;# 
  7793     0492                     	;# 
  7794     0493                     	;# 
  7795     0494                     	;# 
  7796     0495                     	;# 
  7797     0495                     	;# 
  7798     0496                     	;# 
  7799     0497                     	;# 
  7800     0498                     	;# 
  7801     0499                     	;# 
  7802     049A                     	;# 
  7803     049B                     	;# 
  7804     049C                     	;# 
  7805     049D                     	;# 
  7806     050C                     	;# 
  7807     050C                     	;# 
  7808     050D                     	;# 
  7809     050E                     	;# 
  7810     050F                     	;# 
  7811     050F                     	;# 
  7812     0510                     	;# 
  7813     0511                     	;# 
  7814     0512                     	;# 
  7815     0512                     	;# 
  7816     0513                     	;# 
  7817     0514                     	;# 
  7818     0515                     	;# 
  7819     0515                     	;# 
  7820     0516                     	;# 
  7821     0517                     	;# 
  7822     0518                     	;# 
  7823     0519                     	;# 
  7824     051A                     	;# 
  7825     051B                     	;# 
  7826     051C                     	;# 
  7827     051D                     	;# 
  7828     058C                     	;# 
  7829     058C                     	;# 
  7830     058D                     	;# 
  7831     058E                     	;# 
  7832     058F                     	;# 
  7833     058F                     	;# 
  7834     0590                     	;# 
  7835     0591                     	;# 
  7836     0592                     	;# 
  7837     0593                     	;# 
  7838     059C                     	;# 
  7839     059C                     	;# 
  7840     059D                     	;# 
  7841     059D                     	;# 
  7842     059E                     	;# 
  7843     059F                     	;# 
  7844     060C                     	;# 
  7845     060C                     	;# 
  7846     060D                     	;# 
  7847     060D                     	;# 
  7848     060E                     	;# 
  7849     060F                     	;# 
  7850     0610                     	;# 
  7851     0611                     	;# 
  7852     0612                     	;# 
  7853     0613                     	;# 
  7854     0614                     	;# 
  7855     0616                     	;# 
  7856     0616                     	;# 
  7857     0617                     	;# 
  7858     0617                     	;# 
  7859     0618                     	;# 
  7860     0619                     	;# 
  7861     061A                     	;# 
  7862     061B                     	;# 
  7863     061C                     	;# 
  7864     061D                     	;# 
  7865     061E                     	;# 
  7866     068C                     	;# 
  7867     068D                     	;# 
  7868     068E                     	;# 
  7869     068F                     	;# 
  7870     0690                     	;# 
  7871     0691                     	;# 
  7872     0692                     	;# 
  7873     0693                     	;# 
  7874     0694                     	;# 
  7875     070C                     	;# 
  7876     070D                     	;# 
  7877     070E                     	;# 
  7878     070F                     	;# 
  7879     0710                     	;# 
  7880     0711                     	;# 
  7881     0712                     	;# 
  7882     0713                     	;# 
  7883     0714                     	;# 
  7884     0716                     	;# 
  7885     0717                     	;# 
  7886     0718                     	;# 
  7887     0719                     	;# 
  7888     071A                     	;# 
  7889     071B                     	;# 
  7890     071C                     	;# 
  7891     071D                     	;# 
  7892     071E                     	;# 
  7893     0796                     	;# 
  7894     0797                     	;# 
  7895     0798                     	;# 
  7896     0799                     	;# 
  7897     079A                     	;# 
  7898     079B                     	;# 
  7899     079C                     	;# 
  7900     079D                     	;# 
  7901     080C                     	;# 
  7902     080D                     	;# 
  7903     080E                     	;# 
  7904     080F                     	;# 
  7905     0810                     	;# 
  7906     0811                     	;# 
  7907     0813                     	;# 
  7908     0814                     	;# 
  7909     081A                     	;# 
  7910     081A                     	;# 
  7911     081B                     	;# 
  7912     081C                     	;# 
  7913     081C                     	;# 
  7914     081D                     	;# 
  7915     081E                     	;# 
  7916     081F                     	;# 
  7917     088C                     	;# 
  7918     088D                     	;# 
  7919     088E                     	;# 
  7920     088F                     	;# 
  7921     0890                     	;# 
  7922     0891                     	;# 
  7923     0892                     	;# 
  7924     0893                     	;# 
  7925     0895                     	;# 
  7926     0896                     	;# 
  7927     0897                     	;# 
  7928     0898                     	;# 
  7929     0899                     	;# 
  7930     089A                     	;# 
  7931     089B                     	;# 
  7932     090C                     	;# 
  7933     090E                     	;# 
  7934     090F                     	;# 
  7935     091F                     	;# 
  7936     098F                     	;# 
  7937     098F                     	;# 
  7938     0990                     	;# 
  7939     0991                     	;# 
  7940     0992                     	;# 
  7941     0993                     	;# 
  7942     0994                     	;# 
  7943     0995                     	;# 
  7944     0996                     	;# 
  7945     0997                     	;# 
  7946     0A19                     	;# 
  7947     0A19                     	;# 
  7948     0A1A                     	;# 
  7949     0A1A                     	;# 
  7950     0A1B                     	;# 
  7951     0A1B                     	;# 
  7952     0A1B                     	;# 
  7953     0A1C                     	;# 
  7954     0A1C                     	;# 
  7955     0A1D                     	;# 
  7956     0A1D                     	;# 
  7957     0A1E                     	;# 
  7958     0A1E                     	;# 
  7959     0A1F                     	;# 
  7960     0A1F                     	;# 
  7961     0A1F                     	;# 
  7962     1E0F                     	;# 
  7963     1E10                     	;# 
  7964     1E11                     	;# 
  7965     1E12                     	;# 
  7966     1E13                     	;# 
  7967     1E14                     	;# 
  7968     1E15                     	;# 
  7969     1E16                     	;# 
  7970     1E17                     	;# 
  7971     1E18                     	;# 
  7972     1E19                     	;# 
  7973     1E1A                     	;# 
  7974     1E1B                     	;# 
  7975     1E1C                     	;# 
  7976     1E1D                     	;# 
  7977     1E1E                     	;# 
  7978     1E1F                     	;# 
  7979     1E20                     	;# 
  7980     1E21                     	;# 
  7981     1E22                     	;# 
  7982     1E23                     	;# 
  7983     1E24                     	;# 
  7984     1E25                     	;# 
  7985     1E26                     	;# 
  7986     1E27                     	;# 
  7987     1E28                     	;# 
  7988     1E29                     	;# 
  7989     1E2A                     	;# 
  7990     1E2B                     	;# 
  7991     1E2C                     	;# 
  7992     1E2D                     	;# 
  7993     1E2E                     	;# 
  7994     1E2F                     	;# 
  7995     1E30                     	;# 
  7996     1E31                     	;# 
  7997     1E32                     	;# 
  7998     1E33                     	;# 
  7999     1E34                     	;# 
  8000     1E35                     	;# 
  8001     1E36                     	;# 
  8002     1E37                     	;# 
  8003     1E8F                     	;# 
  8004     1E90                     	;# 
  8005     1E91                     	;# 
  8006     1E92                     	;# 
  8007     1E93                     	;# 
  8008     1E94                     	;# 
  8009     1E95                     	;# 
  8010     1E96                     	;# 
  8011     1E97                     	;# 
  8012     1E9C                     	;# 
  8013     1E9D                     	;# 
  8014     1E9E                     	;# 
  8015     1EA1                     	;# 
  8016     1EA2                     	;# 
  8017     1EA3                     	;# 
  8018     1EA4                     	;# 
  8019     1EA5                     	;# 
  8020     1EA9                     	;# 
  8021     1EAA                     	;# 
  8022     1EAB                     	;# 
  8023     1EAC                     	;# 
  8024     1EB1                     	;# 
  8025     1EB2                     	;# 
  8026     1EB3                     	;# 
  8027     1EB8                     	;# 
  8028     1EB9                     	;# 
  8029     1EBA                     	;# 
  8030     1EBB                     	;# 
  8031     1EBC                     	;# 
  8032     1EBD                     	;# 
  8033     1EBE                     	;# 
  8034     1EC3                     	;# 
  8035     1EC5                     	;# 
  8036     1EC6                     	;# 
  8037     1EC7                     	;# 
  8038     1EC8                     	;# 
  8039     1EC9                     	;# 
  8040     1ECA                     	;# 
  8041     1ECB                     	;# 
  8042     1ECC                     	;# 
  8043     1ECD                     	;# 
  8044     1ECE                     	;# 
  8045     1F10                     	;# 
  8046     1F11                     	;# 
  8047     1F12                     	;# 
  8048     1F13                     	;# 
  8049     1F14                     	;# 
  8050     1F15                     	;# 
  8051     1F16                     	;# 
  8052     1F17                     	;# 
  8053     1F18                     	;# 
  8054     1F19                     	;# 
  8055     1F1A                     	;# 
  8056     1F1B                     	;# 
  8057     1F1C                     	;# 
  8058     1F1D                     	;# 
  8059     1F1E                     	;# 
  8060     1F1F                     	;# 
  8061     1F20                     	;# 
  8062     1F21                     	;# 
  8063     1F22                     	;# 
  8064     1F23                     	;# 
  8065     1F24                     	;# 
  8066     1F25                     	;# 
  8067     1F26                     	;# 
  8068     1F27                     	;# 
  8069     1F38                     	;# 
  8070     1F39                     	;# 
  8071     1F3A                     	;# 
  8072     1F3B                     	;# 
  8073     1F3C                     	;# 
  8074     1F3D                     	;# 
  8075     1F3E                     	;# 
  8076     1F3F                     	;# 
  8077     1F43                     	;# 
  8078     1F44                     	;# 
  8079     1F45                     	;# 
  8080     1F46                     	;# 
  8081     1F47                     	;# 
  8082     1F48                     	;# 
  8083     1F49                     	;# 
  8084     1F4A                     	;# 
  8085     1F4E                     	;# 
  8086     1F4F                     	;# 
  8087     1F50                     	;# 
  8088     1F51                     	;# 
  8089     1F52                     	;# 
  8090     1F53                     	;# 
  8091     1F54                     	;# 
  8092     1F55                     	;# 
  8093     1F65                     	;# 
  8094     1F66                     	;# 
  8095     1F67                     	;# 
  8096     1F68                     	;# 
  8097     1F69                     	;# 
  8098     1F6A                     	;# 
  8099     1F6B                     	;# 
  8100     1FE4                     	;# 
  8101     1FE5                     	;# 
  8102     1FE6                     	;# 
  8103     1FE7                     	;# 
  8104     1FE8                     	;# 
  8105     1FE8                     	;# 
  8106     1FE9                     	;# 
  8107     1FEA                     	;# 
  8108     1FEB                     	;# 
  8109     1FED                     	;# 
  8110     1FEE                     	;# 
  8111     1FEF                     	;# 
  8112     0000                     	;# 
  8113     0001                     	;# 
  8114     0002                     	;# 
  8115     0003                     	;# 
  8116     0004                     	;# 
  8117     0005                     	;# 
  8118     0006                     	;# 
  8119     0007                     	;# 
  8120     0008                     	;# 
  8121     0009                     	;# 
  8122     000A                     	;# 
  8123     000B                     	;# 
  8124     000C                     	;# 
  8125     000D                     	;# 
  8126     000E                     	;# 
  8127     0010                     	;# 
  8128     0012                     	;# 
  8129     0013                     	;# 
  8130     0014                     	;# 
  8131     0016                     	;# 
  8132     0018                     	;# 
  8133     0019                     	;# 
  8134     001A                     	;# 
  8135     001C                     	;# 
  8136     008C                     	;# 
  8137     008C                     	;# 
  8138     008D                     	;# 
  8139     008E                     	;# 
  8140     008E                     	;# 
  8141     008F                     	;# 
  8142     0090                     	;# 
  8143     0090                     	;# 
  8144     0091                     	;# 
  8145     0092                     	;# 
  8146     0092                     	;# 
  8147     0093                     	;# 
  8148     0094                     	;# 
  8149     0094                     	;# 
  8150     0095                     	;# 
  8151     0096                     	;# 
  8152     0096                     	;# 
  8153     0097                     	;# 
  8154     0098                     	;# 
  8155     0099                     	;# 
  8156     009A                     	;# 
  8157     009B                     	;# 
  8158     009B                     	;# 
  8159     009C                     	;# 
  8160     009D                     	;# 
  8161     009D                     	;# 
  8162     009E                     	;# 
  8163     009F                     	;# 
  8164     010C                     	;# 
  8165     010C                     	;# 
  8166     010D                     	;# 
  8167     010E                     	;# 
  8168     010F                     	;# 
  8169     010F                     	;# 
  8170     0110                     	;# 
  8171     0111                     	;# 
  8172     0112                     	;# 
  8173     0113                     	;# 
  8174     0114                     	;# 
  8175     0115                     	;# 
  8176     0116                     	;# 
  8177     0117                     	;# 
  8178     0118                     	;# 
  8179     0119                     	;# 
  8180     0119                     	;# 
  8181     0119                     	;# 
  8182     011A                     	;# 
  8183     011A                     	;# 
  8184     011A                     	;# 
  8185     011B                     	;# 
  8186     011B                     	;# 
  8187     011B                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011C                     	;# 
  8191     011C                     	;# 
  8192     011C                     	;# 
  8193     011D                     	;# 
  8194     011D                     	;# 
  8195     011D                     	;# 
  8196     011E                     	;# 
  8197     011E                     	;# 
  8198     011E                     	;# 
  8199     011F                     	;# 
  8200     011F                     	;# 
  8201     011F                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     018C                     	;# 
  8205     018D                     	;# 
  8206     018E                     	;# 
  8207     018F                     	;# 
  8208     0190                     	;# 
  8209     0191                     	;# 
  8210     0192                     	;# 
  8211     0196                     	;# 
  8212     0197                     	;# 
  8213     0198                     	;# 
  8214     0199                     	;# 
  8215     019A                     	;# 
  8216     019B                     	;# 
  8217     019C                     	;# 
  8218     020C                     	;# 
  8219     020D                     	;# 
  8220     020E                     	;# 
  8221     020E                     	;# 
  8222     020F                     	;# 
  8223     020F                     	;# 
  8224     0210                     	;# 
  8225     0210                     	;# 
  8226     0211                     	;# 
  8227     0211                     	;# 
  8228     0212                     	;# 
  8229     0213                     	;# 
  8230     0214                     	;# 
  8231     0214                     	;# 
  8232     0215                     	;# 
  8233     0215                     	;# 
  8234     0216                     	;# 
  8235     0216                     	;# 
  8236     0217                     	;# 
  8237     0217                     	;# 
  8238     0218                     	;# 
  8239     0219                     	;# 
  8240     021A                     	;# 
  8241     021A                     	;# 
  8242     021B                     	;# 
  8243     021B                     	;# 
  8244     021C                     	;# 
  8245     021C                     	;# 
  8246     021D                     	;# 
  8247     021D                     	;# 
  8248     021E                     	;# 
  8249     021F                     	;# 
  8250     028C                     	;# 
  8251     028C                     	;# 
  8252     028D                     	;# 
  8253     028D                     	;# 
  8254     028E                     	;# 
  8255     028F                     	;# 
  8256     0290                     	;# 
  8257     0291                     	;# 
  8258     0292                     	;# 
  8259     0292                     	;# 
  8260     0293                     	;# 
  8261     0293                     	;# 
  8262     0294                     	;# 
  8263     0295                     	;# 
  8264     0296                     	;# 
  8265     0297                     	;# 
  8266     0298                     	;# 
  8267     0298                     	;# 
  8268     0299                     	;# 
  8269     0299                     	;# 
  8270     029A                     	;# 
  8271     029B                     	;# 
  8272     029C                     	;# 
  8273     029D                     	;# 
  8274     029F                     	;# 
  8275     030C                     	;# 
  8276     030C                     	;# 
  8277     030D                     	;# 
  8278     030E                     	;# 
  8279     030F                     	;# 
  8280     0310                     	;# 
  8281     0310                     	;# 
  8282     0311                     	;# 
  8283     0312                     	;# 
  8284     0313                     	;# 
  8285     0314                     	;# 
  8286     0314                     	;# 
  8287     0315                     	;# 
  8288     0316                     	;# 
  8289     0317                     	;# 
  8290     0318                     	;# 
  8291     0318                     	;# 
  8292     0319                     	;# 
  8293     031A                     	;# 
  8294     031B                     	;# 
  8295     031C                     	;# 
  8296     031C                     	;# 
  8297     031D                     	;# 
  8298     031E                     	;# 
  8299     031F                     	;# 
  8300     038C                     	;# 
  8301     038C                     	;# 
  8302     038D                     	;# 
  8303     038E                     	;# 
  8304     0390                     	;# 
  8305     0390                     	;# 
  8306     0391                     	;# 
  8307     0392                     	;# 
  8308     048C                     	;# 
  8309     048C                     	;# 
  8310     048D                     	;# 
  8311     048E                     	;# 
  8312     048F                     	;# 
  8313     048F                     	;# 
  8314     0490                     	;# 
  8315     0491                     	;# 
  8316     0492                     	;# 
  8317     0492                     	;# 
  8318     0493                     	;# 
  8319     0494                     	;# 
  8320     0495                     	;# 
  8321     0495                     	;# 
  8322     0496                     	;# 
  8323     0497                     	;# 
  8324     0498                     	;# 
  8325     0499                     	;# 
  8326     049A                     	;# 
  8327     049B                     	;# 
  8328     049C                     	;# 
  8329     049D                     	;# 
  8330     050C                     	;# 
  8331     050C                     	;# 
  8332     050D                     	;# 
  8333     050E                     	;# 
  8334     050F                     	;# 
  8335     050F                     	;# 
  8336     0510                     	;# 
  8337     0511                     	;# 
  8338     0512                     	;# 
  8339     0512                     	;# 
  8340     0513                     	;# 
  8341     0514                     	;# 
  8342     0515                     	;# 
  8343     0515                     	;# 
  8344     0516                     	;# 
  8345     0517                     	;# 
  8346     0518                     	;# 
  8347     0519                     	;# 
  8348     051A                     	;# 
  8349     051B                     	;# 
  8350     051C                     	;# 
  8351     051D                     	;# 
  8352     058C                     	;# 
  8353     058C                     	;# 
  8354     058D                     	;# 
  8355     058E                     	;# 
  8356     058F                     	;# 
  8357     058F                     	;# 
  8358     0590                     	;# 
  8359     0591                     	;# 
  8360     0592                     	;# 
  8361     0593                     	;# 
  8362     059C                     	;# 
  8363     059C                     	;# 
  8364     059D                     	;# 
  8365     059D                     	;# 
  8366     059E                     	;# 
  8367     059F                     	;# 
  8368     060C                     	;# 
  8369     060C                     	;# 
  8370     060D                     	;# 
  8371     060D                     	;# 
  8372     060E                     	;# 
  8373     060F                     	;# 
  8374     0610                     	;# 
  8375     0611                     	;# 
  8376     0612                     	;# 
  8377     0613                     	;# 
  8378     0614                     	;# 
  8379     0616                     	;# 
  8380     0616                     	;# 
  8381     0617                     	;# 
  8382     0617                     	;# 
  8383     0618                     	;# 
  8384     0619                     	;# 
  8385     061A                     	;# 
  8386     061B                     	;# 
  8387     061C                     	;# 
  8388     061D                     	;# 
  8389     061E                     	;# 
  8390     068C                     	;# 
  8391     068D                     	;# 
  8392     068E                     	;# 
  8393     068F                     	;# 
  8394     0690                     	;# 
  8395     0691                     	;# 
  8396     0692                     	;# 
  8397     0693                     	;# 
  8398     0694                     	;# 
  8399     070C                     	;# 
  8400     070D                     	;# 
  8401     070E                     	;# 
  8402     070F                     	;# 
  8403     0710                     	;# 
  8404     0711                     	;# 
  8405     0712                     	;# 
  8406     0713                     	;# 
  8407     0714                     	;# 
  8408     0716                     	;# 
  8409     0717                     	;# 
  8410     0718                     	;# 
  8411     0719                     	;# 
  8412     071A                     	;# 
  8413     071B                     	;# 
  8414     071C                     	;# 
  8415     071D                     	;# 
  8416     071E                     	;# 
  8417     0796                     	;# 
  8418     0797                     	;# 
  8419     0798                     	;# 
  8420     0799                     	;# 
  8421     079A                     	;# 
  8422     079B                     	;# 
  8423     079C                     	;# 
  8424     079D                     	;# 
  8425     080C                     	;# 
  8426     080D                     	;# 
  8427     080E                     	;# 
  8428     080F                     	;# 
  8429     0810                     	;# 
  8430     0811                     	;# 
  8431     0813                     	;# 
  8432     0814                     	;# 
  8433     081A                     	;# 
  8434     081A                     	;# 
  8435     081B                     	;# 
  8436     081C                     	;# 
  8437     081C                     	;# 
  8438     081D                     	;# 
  8439     081E                     	;# 
  8440     081F                     	;# 
  8441     088C                     	;# 
  8442     088D                     	;# 
  8443     088E                     	;# 
  8444     088F                     	;# 
  8445     0890                     	;# 
  8446     0891                     	;# 
  8447     0892                     	;# 
  8448     0893                     	;# 
  8449     0895                     	;# 
  8450     0896                     	;# 
  8451     0897                     	;# 
  8452     0898                     	;# 
  8453     0899                     	;# 
  8454     089A                     	;# 
  8455     089B                     	;# 
  8456     090C                     	;# 
  8457     090E                     	;# 
  8458     090F                     	;# 
  8459     091F                     	;# 
  8460     098F                     	;# 
  8461     098F                     	;# 
  8462     0990                     	;# 
  8463     0991                     	;# 
  8464     0992                     	;# 
  8465     0993                     	;# 
  8466     0994                     	;# 
  8467     0995                     	;# 
  8468     0996                     	;# 
  8469     0997                     	;# 
  8470     0A19                     	;# 
  8471     0A19                     	;# 
  8472     0A1A                     	;# 
  8473     0A1A                     	;# 
  8474     0A1B                     	;# 
  8475     0A1B                     	;# 
  8476     0A1B                     	;# 
  8477     0A1C                     	;# 
  8478     0A1C                     	;# 
  8479     0A1D                     	;# 
  8480     0A1D                     	;# 
  8481     0A1E                     	;# 
  8482     0A1E                     	;# 
  8483     0A1F                     	;# 
  8484     0A1F                     	;# 
  8485     0A1F                     	;# 
  8486     1E0F                     	;# 
  8487     1E10                     	;# 
  8488     1E11                     	;# 
  8489     1E12                     	;# 
  8490     1E13                     	;# 
  8491     1E14                     	;# 
  8492     1E15                     	;# 
  8493     1E16                     	;# 
  8494     1E17                     	;# 
  8495     1E18                     	;# 
  8496     1E19                     	;# 
  8497     1E1A                     	;# 
  8498     1E1B                     	;# 
  8499     1E1C                     	;# 
  8500     1E1D                     	;# 
  8501     1E1E                     	;# 
  8502     1E1F                     	;# 
  8503     1E20                     	;# 
  8504     1E21                     	;# 
  8505     1E22                     	;# 
  8506     1E23                     	;# 
  8507     1E24                     	;# 
  8508     1E25                     	;# 
  8509     1E26                     	;# 
  8510     1E27                     	;# 
  8511     1E28                     	;# 
  8512     1E29                     	;# 
  8513     1E2A                     	;# 
  8514     1E2B                     	;# 
  8515     1E2C                     	;# 
  8516     1E2D                     	;# 
  8517     1E2E                     	;# 
  8518     1E2F                     	;# 
  8519     1E30                     	;# 
  8520     1E31                     	;# 
  8521     1E32                     	;# 
  8522     1E33                     	;# 
  8523     1E34                     	;# 
  8524     1E35                     	;# 
  8525     1E36                     	;# 
  8526     1E37                     	;# 
  8527     1E8F                     	;# 
  8528     1E90                     	;# 
  8529     1E91                     	;# 
  8530     1E92                     	;# 
  8531     1E93                     	;# 
  8532     1E94                     	;# 
  8533     1E95                     	;# 
  8534     1E96                     	;# 
  8535     1E97                     	;# 
  8536     1E9C                     	;# 
  8537     1E9D                     	;# 
  8538     1E9E                     	;# 
  8539     1EA1                     	;# 
  8540     1EA2                     	;# 
  8541     1EA3                     	;# 
  8542     1EA4                     	;# 
  8543     1EA5                     	;# 
  8544     1EA9                     	;# 
  8545     1EAA                     	;# 
  8546     1EAB                     	;# 
  8547     1EAC                     	;# 
  8548     1EB1                     	;# 
  8549     1EB2                     	;# 
  8550     1EB3                     	;# 
  8551     1EB8                     	;# 
  8552     1EB9                     	;# 
  8553     1EBA                     	;# 
  8554     1EBB                     	;# 
  8555     1EBC                     	;# 
  8556     1EBD                     	;# 
  8557     1EBE                     	;# 
  8558     1EC3                     	;# 
  8559     1EC5                     	;# 
  8560     1EC6                     	;# 
  8561     1EC7                     	;# 
  8562     1EC8                     	;# 
  8563     1EC9                     	;# 
  8564     1ECA                     	;# 
  8565     1ECB                     	;# 
  8566     1ECC                     	;# 
  8567     1ECD                     	;# 
  8568     1ECE                     	;# 
  8569     1F10                     	;# 
  8570     1F11                     	;# 
  8571     1F12                     	;# 
  8572     1F13                     	;# 
  8573     1F14                     	;# 
  8574     1F15                     	;# 
  8575     1F16                     	;# 
  8576     1F17                     	;# 
  8577     1F18                     	;# 
  8578     1F19                     	;# 
  8579     1F1A                     	;# 
  8580     1F1B                     	;# 
  8581     1F1C                     	;# 
  8582     1F1D                     	;# 
  8583     1F1E                     	;# 
  8584     1F1F                     	;# 
  8585     1F20                     	;# 
  8586     1F21                     	;# 
  8587     1F22                     	;# 
  8588     1F23                     	;# 
  8589     1F24                     	;# 
  8590     1F25                     	;# 
  8591     1F26                     	;# 
  8592     1F27                     	;# 
  8593     1F38                     	;# 
  8594     1F39                     	;# 
  8595     1F3A                     	;# 
  8596     1F3B                     	;# 
  8597     1F3C                     	;# 
  8598     1F3D                     	;# 
  8599     1F3E                     	;# 
  8600     1F3F                     	;# 
  8601     1F43                     	;# 
  8602     1F44                     	;# 
  8603     1F45                     	;# 
  8604     1F46                     	;# 
  8605     1F47                     	;# 
  8606     1F48                     	;# 
  8607     1F49                     	;# 
  8608     1F4A                     	;# 
  8609     1F4E                     	;# 
  8610     1F4F                     	;# 
  8611     1F50                     	;# 
  8612     1F51                     	;# 
  8613     1F52                     	;# 
  8614     1F53                     	;# 
  8615     1F54                     	;# 
  8616     1F55                     	;# 
  8617     1F65                     	;# 
  8618     1F66                     	;# 
  8619     1F67                     	;# 
  8620     1F68                     	;# 
  8621     1F69                     	;# 
  8622     1F6A                     	;# 
  8623     1F6B                     	;# 
  8624     1FE4                     	;# 
  8625     1FE5                     	;# 
  8626     1FE6                     	;# 
  8627     1FE7                     	;# 
  8628     1FE8                     	;# 
  8629     1FE8                     	;# 
  8630     1FE9                     	;# 
  8631     1FEA                     	;# 
  8632     1FEB                     	;# 
  8633     1FED                     	;# 
  8634     1FEE                     	;# 
  8635     1FEF                     	;# 
  8636     0000                     	;# 
  8637     0001                     	;# 
  8638     0002                     	;# 
  8639     0003                     	;# 
  8640     0004                     	;# 
  8641     0005                     	;# 
  8642     0006                     	;# 
  8643     0007                     	;# 
  8644     0008                     	;# 
  8645     0009                     	;# 
  8646     000A                     	;# 
  8647     000B                     	;# 
  8648     000C                     	;# 
  8649     000D                     	;# 
  8650     000E                     	;# 
  8651     0010                     	;# 
  8652     0012                     	;# 
  8653     0013                     	;# 
  8654     0014                     	;# 
  8655     0016                     	;# 
  8656     0018                     	;# 
  8657     0019                     	;# 
  8658     001A                     	;# 
  8659     001C                     	;# 
  8660     008C                     	;# 
  8661     008C                     	;# 
  8662     008D                     	;# 
  8663     008E                     	;# 
  8664     008E                     	;# 
  8665     008F                     	;# 
  8666     0090                     	;# 
  8667     0090                     	;# 
  8668     0091                     	;# 
  8669     0092                     	;# 
  8670     0092                     	;# 
  8671     0093                     	;# 
  8672     0094                     	;# 
  8673     0094                     	;# 
  8674     0095                     	;# 
  8675     0096                     	;# 
  8676     0096                     	;# 
  8677     0097                     	;# 
  8678     0098                     	;# 
  8679     0099                     	;# 
  8680     009A                     	;# 
  8681     009B                     	;# 
  8682     009B                     	;# 
  8683     009C                     	;# 
  8684     009D                     	;# 
  8685     009D                     	;# 
  8686     009E                     	;# 
  8687     009F                     	;# 
  8688     010C                     	;# 
  8689     010C                     	;# 
  8690     010D                     	;# 
  8691     010E                     	;# 
  8692     010F                     	;# 
  8693     010F                     	;# 
  8694     0110                     	;# 
  8695     0111                     	;# 
  8696     0112                     	;# 
  8697     0113                     	;# 
  8698     0114                     	;# 
  8699     0115                     	;# 
  8700     0116                     	;# 
  8701     0117                     	;# 
  8702     0118                     	;# 
  8703     0119                     	;# 
  8704     0119                     	;# 
  8705     0119                     	;# 
  8706     011A                     	;# 
  8707     011A                     	;# 
  8708     011A                     	;# 
  8709     011B                     	;# 
  8710     011B                     	;# 
  8711     011B                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011C                     	;# 
  8715     011C                     	;# 
  8716     011C                     	;# 
  8717     011D                     	;# 
  8718     011D                     	;# 
  8719     011D                     	;# 
  8720     011E                     	;# 
  8721     011E                     	;# 
  8722     011E                     	;# 
  8723     011F                     	;# 
  8724     011F                     	;# 
  8725     011F                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     018C                     	;# 
  8729     018D                     	;# 
  8730     018E                     	;# 
  8731     018F                     	;# 
  8732     0190                     	;# 
  8733     0191                     	;# 
  8734     0192                     	;# 
  8735     0196                     	;# 
  8736     0197                     	;# 
  8737     0198                     	;# 
  8738     0199                     	;# 
  8739     019A                     	;# 
  8740     019B                     	;# 
  8741     019C                     	;# 
  8742     020C                     	;# 
  8743     020D                     	;# 
  8744     020E                     	;# 
  8745     020E                     	;# 
  8746     020F                     	;# 
  8747     020F                     	;# 
  8748     0210                     	;# 
  8749     0210                     	;# 
  8750     0211                     	;# 
  8751     0211                     	;# 
  8752     0212                     	;# 
  8753     0213                     	;# 
  8754     0214                     	;# 
  8755     0214                     	;# 
  8756     0215                     	;# 
  8757     0215                     	;# 
  8758     0216                     	;# 
  8759     0216                     	;# 
  8760     0217                     	;# 
  8761     0217                     	;# 
  8762     0218                     	;# 
  8763     0219                     	;# 
  8764     021A                     	;# 
  8765     021A                     	;# 
  8766     021B                     	;# 
  8767     021B                     	;# 
  8768     021C                     	;# 
  8769     021C                     	;# 
  8770     021D                     	;# 
  8771     021D                     	;# 
  8772     021E                     	;# 
  8773     021F                     	;# 
  8774     028C                     	;# 
  8775     028C                     	;# 
  8776     028D                     	;# 
  8777     028D                     	;# 
  8778     028E                     	;# 
  8779     028F                     	;# 
  8780     0290                     	;# 
  8781     0291                     	;# 
  8782     0292                     	;# 
  8783     0292                     	;# 
  8784     0293                     	;# 
  8785     0293                     	;# 
  8786     0294                     	;# 
  8787     0295                     	;# 
  8788     0296                     	;# 
  8789     0297                     	;# 
  8790     0298                     	;# 
  8791     0298                     	;# 
  8792     0299                     	;# 
  8793     0299                     	;# 
  8794     029A                     	;# 
  8795     029B                     	;# 
  8796     029C                     	;# 
  8797     029D                     	;# 
  8798     029F                     	;# 
  8799     030C                     	;# 
  8800     030C                     	;# 
  8801     030D                     	;# 
  8802     030E                     	;# 
  8803     030F                     	;# 
  8804     0310                     	;# 
  8805     0310                     	;# 
  8806     0311                     	;# 
  8807     0312                     	;# 
  8808     0313                     	;# 
  8809     0314                     	;# 
  8810     0314                     	;# 
  8811     0315                     	;# 
  8812     0316                     	;# 
  8813     0317                     	;# 
  8814     0318                     	;# 
  8815     0318                     	;# 
  8816     0319                     	;# 
  8817     031A                     	;# 
  8818     031B                     	;# 
  8819     031C                     	;# 
  8820     031C                     	;# 
  8821     031D                     	;# 
  8822     031E                     	;# 
  8823     031F                     	;# 
  8824     038C                     	;# 
  8825     038C                     	;# 
  8826     038D                     	;# 
  8827     038E                     	;# 
  8828     0390                     	;# 
  8829     0390                     	;# 
  8830     0391                     	;# 
  8831     0392                     	;# 
  8832     048C                     	;# 
  8833     048C                     	;# 
  8834     048D                     	;# 
  8835     048E                     	;# 
  8836     048F                     	;# 
  8837     048F                     	;# 
  8838     0490                     	;# 
  8839     0491                     	;# 
  8840     0492                     	;# 
  8841     0492                     	;# 
  8842     0493                     	;# 
  8843     0494                     	;# 
  8844     0495                     	;# 
  8845     0495                     	;# 
  8846     0496                     	;# 
  8847     0497                     	;# 
  8848     0498                     	;# 
  8849     0499                     	;# 
  8850     049A                     	;# 
  8851     049B                     	;# 
  8852     049C                     	;# 
  8853     049D                     	;# 
  8854     050C                     	;# 
  8855     050C                     	;# 
  8856     050D                     	;# 
  8857     050E                     	;# 
  8858     050F                     	;# 
  8859     050F                     	;# 
  8860     0510                     	;# 
  8861     0511                     	;# 
  8862     0512                     	;# 
  8863     0512                     	;# 
  8864     0513                     	;# 
  8865     0514                     	;# 
  8866     0515                     	;# 
  8867     0515                     	;# 
  8868     0516                     	;# 
  8869     0517                     	;# 
  8870     0518                     	;# 
  8871     0519                     	;# 
  8872     051A                     	;# 
  8873     051B                     	;# 
  8874     051C                     	;# 
  8875     051D                     	;# 
  8876     058C                     	;# 
  8877     058C                     	;# 
  8878     058D                     	;# 
  8879     058E                     	;# 
  8880     058F                     	;# 
  8881     058F                     	;# 
  8882     0590                     	;# 
  8883     0591                     	;# 
  8884     0592                     	;# 
  8885     0593                     	;# 
  8886     059C                     	;# 
  8887     059C                     	;# 
  8888     059D                     	;# 
  8889     059D                     	;# 
  8890     059E                     	;# 
  8891     059F                     	;# 
  8892     060C                     	;# 
  8893     060C                     	;# 
  8894     060D                     	;# 
  8895     060D                     	;# 
  8896     060E                     	;# 
  8897     060F                     	;# 
  8898     0610                     	;# 
  8899     0611                     	;# 
  8900     0612                     	;# 
  8901     0613                     	;# 
  8902     0614                     	;# 
  8903     0616                     	;# 
  8904     0616                     	;# 
  8905     0617                     	;# 
  8906     0617                     	;# 
  8907     0618                     	;# 
  8908     0619                     	;# 
  8909     061A                     	;# 
  8910     061B                     	;# 
  8911     061C                     	;# 
  8912     061D                     	;# 
  8913     061E                     	;# 
  8914     068C                     	;# 
  8915     068D                     	;# 
  8916     068E                     	;# 
  8917     068F                     	;# 
  8918     0690                     	;# 
  8919     0691                     	;# 
  8920     0692                     	;# 
  8921     0693                     	;# 
  8922     0694                     	;# 
  8923     070C                     	;# 
  8924     070D                     	;# 
  8925     070E                     	;# 
  8926     070F                     	;# 
  8927     0710                     	;# 
  8928     0711                     	;# 
  8929     0712                     	;# 
  8930     0713                     	;# 
  8931     0714                     	;# 
  8932     0716                     	;# 
  8933     0717                     	;# 
  8934     0718                     	;# 
  8935     0719                     	;# 
  8936     071A                     	;# 
  8937     071B                     	;# 
  8938     071C                     	;# 
  8939     071D                     	;# 
  8940     071E                     	;# 
  8941     0796                     	;# 
  8942     0797                     	;# 
  8943     0798                     	;# 
  8944     0799                     	;# 
  8945     079A                     	;# 
  8946     079B                     	;# 
  8947     079C                     	;# 
  8948     079D                     	;# 
  8949     080C                     	;# 
  8950     080D                     	;# 
  8951     080E                     	;# 
  8952     080F                     	;# 
  8953     0810                     	;# 
  8954     0811                     	;# 
  8955     0813                     	;# 
  8956     0814                     	;# 
  8957     081A                     	;# 
  8958     081A                     	;# 
  8959     081B                     	;# 
  8960     081C                     	;# 
  8961     081C                     	;# 
  8962     081D                     	;# 
  8963     081E                     	;# 
  8964     081F                     	;# 
  8965     088C                     	;# 
  8966     088D                     	;# 
  8967     088E                     	;# 
  8968     088F                     	;# 
  8969     0890                     	;# 
  8970     0891                     	;# 
  8971     0892                     	;# 
  8972     0893                     	;# 
  8973     0895                     	;# 
  8974     0896                     	;# 
  8975     0897                     	;# 
  8976     0898                     	;# 
  8977     0899                     	;# 
  8978     089A                     	;# 
  8979     089B                     	;# 
  8980     090C                     	;# 
  8981     090E                     	;# 
  8982     090F                     	;# 
  8983     091F                     	;# 
  8984     098F                     	;# 
  8985     098F                     	;# 
  8986     0990                     	;# 
  8987     0991                     	;# 
  8988     0992                     	;# 
  8989     0993                     	;# 
  8990     0994                     	;# 
  8991     0995                     	;# 
  8992     0996                     	;# 
  8993     0997                     	;# 
  8994     0A19                     	;# 
  8995     0A19                     	;# 
  8996     0A1A                     	;# 
  8997     0A1A                     	;# 
  8998     0A1B                     	;# 
  8999     0A1B                     	;# 
  9000     0A1B                     	;# 
  9001     0A1C                     	;# 
  9002     0A1C                     	;# 
  9003     0A1D                     	;# 
  9004     0A1D                     	;# 
  9005     0A1E                     	;# 
  9006     0A1E                     	;# 
  9007     0A1F                     	;# 
  9008     0A1F                     	;# 
  9009     0A1F                     	;# 
  9010     1E0F                     	;# 
  9011     1E10                     	;# 
  9012     1E11                     	;# 
  9013     1E12                     	;# 
  9014     1E13                     	;# 
  9015     1E14                     	;# 
  9016     1E15                     	;# 
  9017     1E16                     	;# 
  9018     1E17                     	;# 
  9019     1E18                     	;# 
  9020     1E19                     	;# 
  9021     1E1A                     	;# 
  9022     1E1B                     	;# 
  9023     1E1C                     	;# 
  9024     1E1D                     	;# 
  9025     1E1E                     	;# 
  9026     1E1F                     	;# 
  9027     1E20                     	;# 
  9028     1E21                     	;# 
  9029     1E22                     	;# 
  9030     1E23                     	;# 
  9031     1E24                     	;# 
  9032     1E25                     	;# 
  9033     1E26                     	;# 
  9034     1E27                     	;# 
  9035     1E28                     	;# 
  9036     1E29                     	;# 
  9037     1E2A                     	;# 
  9038     1E2B                     	;# 
  9039     1E2C                     	;# 
  9040     1E2D                     	;# 
  9041     1E2E                     	;# 
  9042     1E2F                     	;# 
  9043     1E30                     	;# 
  9044     1E31                     	;# 
  9045     1E32                     	;# 
  9046     1E33                     	;# 
  9047     1E34                     	;# 
  9048     1E35                     	;# 
  9049     1E36                     	;# 
  9050     1E37                     	;# 
  9051     1E8F                     	;# 
  9052     1E90                     	;# 
  9053     1E91                     	;# 
  9054     1E92                     	;# 
  9055     1E93                     	;# 
  9056     1E94                     	;# 
  9057     1E95                     	;# 
  9058     1E96                     	;# 
  9059     1E97                     	;# 
  9060     1E9C                     	;# 
  9061     1E9D                     	;# 
  9062     1E9E                     	;# 
  9063     1EA1                     	;# 
  9064     1EA2                     	;# 
  9065     1EA3                     	;# 
  9066     1EA4                     	;# 
  9067     1EA5                     	;# 
  9068     1EA9                     	;# 
  9069     1EAA                     	;# 
  9070     1EAB                     	;# 
  9071     1EAC                     	;# 
  9072     1EB1                     	;# 
  9073     1EB2                     	;# 
  9074     1EB3                     	;# 
  9075     1EB8                     	;# 
  9076     1EB9                     	;# 
  9077     1EBA                     	;# 
  9078     1EBB                     	;# 
  9079     1EBC                     	;# 
  9080     1EBD                     	;# 
  9081     1EBE                     	;# 
  9082     1EC3                     	;# 
  9083     1EC5                     	;# 
  9084     1EC6                     	;# 
  9085     1EC7                     	;# 
  9086     1EC8                     	;# 
  9087     1EC9                     	;# 
  9088     1ECA                     	;# 
  9089     1ECB                     	;# 
  9090     1ECC                     	;# 
  9091     1ECD                     	;# 
  9092     1ECE                     	;# 
  9093     1F10                     	;# 
  9094     1F11                     	;# 
  9095     1F12                     	;# 
  9096     1F13                     	;# 
  9097     1F14                     	;# 
  9098     1F15                     	;# 
  9099     1F16                     	;# 
  9100     1F17                     	;# 
  9101     1F18                     	;# 
  9102     1F19                     	;# 
  9103     1F1A                     	;# 
  9104     1F1B                     	;# 
  9105     1F1C                     	;# 
  9106     1F1D                     	;# 
  9107     1F1E                     	;# 
  9108     1F1F                     	;# 
  9109     1F20                     	;# 
  9110     1F21                     	;# 
  9111     1F22                     	;# 
  9112     1F23                     	;# 
  9113     1F24                     	;# 
  9114     1F25                     	;# 
  9115     1F26                     	;# 
  9116     1F27                     	;# 
  9117     1F38                     	;# 
  9118     1F39                     	;# 
  9119     1F3A                     	;# 
  9120     1F3B                     	;# 
  9121     1F3C                     	;# 
  9122     1F3D                     	;# 
  9123     1F3E                     	;# 
  9124     1F3F                     	;# 
  9125     1F43                     	;# 
  9126     1F44                     	;# 
  9127     1F45                     	;# 
  9128     1F46                     	;# 
  9129     1F47                     	;# 
  9130     1F48                     	;# 
  9131     1F49                     	;# 
  9132     1F4A                     	;# 
  9133     1F4E                     	;# 
  9134     1F4F                     	;# 
  9135     1F50                     	;# 
  9136     1F51                     	;# 
  9137     1F52                     	;# 
  9138     1F53                     	;# 
  9139     1F54                     	;# 
  9140     1F55                     	;# 
  9141     1F65                     	;# 
  9142     1F66                     	;# 
  9143     1F67                     	;# 
  9144     1F68                     	;# 
  9145     1F69                     	;# 
  9146     1F6A                     	;# 
  9147     1F6B                     	;# 
  9148     1FE4                     	;# 
  9149     1FE5                     	;# 
  9150     1FE6                     	;# 
  9151     1FE7                     	;# 
  9152     1FE8                     	;# 
  9153     1FE8                     	;# 
  9154     1FE9                     	;# 
  9155     1FEA                     	;# 
  9156     1FEB                     	;# 
  9157     1FED                     	;# 
  9158     1FEE                     	;# 
  9159     1FEF                     	;# 
  9160     0000                     	;# 
  9161     0001                     	;# 
  9162     0002                     	;# 
  9163     0003                     	;# 
  9164     0004                     	;# 
  9165     0005                     	;# 
  9166     0006                     	;# 
  9167     0007                     	;# 
  9168     0008                     	;# 
  9169     0009                     	;# 
  9170     000A                     	;# 
  9171     000B                     	;# 
  9172     000C                     	;# 
  9173     000D                     	;# 
  9174     000E                     	;# 
  9175     0010                     	;# 
  9176     0012                     	;# 
  9177     0013                     	;# 
  9178     0014                     	;# 
  9179     0016                     	;# 
  9180     0018                     	;# 
  9181     0019                     	;# 
  9182     001A                     	;# 
  9183     001C                     	;# 
  9184     008C                     	;# 
  9185     008C                     	;# 
  9186     008D                     	;# 
  9187     008E                     	;# 
  9188     008E                     	;# 
  9189     008F                     	;# 
  9190     0090                     	;# 
  9191     0090                     	;# 
  9192     0091                     	;# 
  9193     0092                     	;# 
  9194     0092                     	;# 
  9195     0093                     	;# 
  9196     0094                     	;# 
  9197     0094                     	;# 
  9198     0095                     	;# 
  9199     0096                     	;# 
  9200     0096                     	;# 
  9201     0097                     	;# 
  9202     0098                     	;# 
  9203     0099                     	;# 
  9204     009A                     	;# 
  9205     009B                     	;# 
  9206     009B                     	;# 
  9207     009C                     	;# 
  9208     009D                     	;# 
  9209     009D                     	;# 
  9210     009E                     	;# 
  9211     009F                     	;# 
  9212     010C                     	;# 
  9213     010C                     	;# 
  9214     010D                     	;# 
  9215     010E                     	;# 
  9216     010F                     	;# 
  9217     010F                     	;# 
  9218     0110                     	;# 
  9219     0111                     	;# 
  9220     0112                     	;# 
  9221     0113                     	;# 
  9222     0114                     	;# 
  9223     0115                     	;# 
  9224     0116                     	;# 
  9225     0117                     	;# 
  9226     0118                     	;# 
  9227     0119                     	;# 
  9228     0119                     	;# 
  9229     0119                     	;# 
  9230     011A                     	;# 
  9231     011A                     	;# 
  9232     011A                     	;# 
  9233     011B                     	;# 
  9234     011B                     	;# 
  9235     011B                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011C                     	;# 
  9239     011C                     	;# 
  9240     011C                     	;# 
  9241     011D                     	;# 
  9242     011D                     	;# 
  9243     011D                     	;# 
  9244     011E                     	;# 
  9245     011E                     	;# 
  9246     011E                     	;# 
  9247     011F                     	;# 
  9248     011F                     	;# 
  9249     011F                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     018C                     	;# 
  9253     018D                     	;# 
  9254     018E                     	;# 
  9255     018F                     	;# 
  9256     0190                     	;# 
  9257     0191                     	;# 
  9258     0192                     	;# 
  9259     0196                     	;# 
  9260     0197                     	;# 
  9261     0198                     	;# 
  9262     0199                     	;# 
  9263     019A                     	;# 
  9264     019B                     	;# 
  9265     019C                     	;# 
  9266     020C                     	;# 
  9267     020D                     	;# 
  9268     020E                     	;# 
  9269     020E                     	;# 
  9270     020F                     	;# 
  9271     020F                     	;# 
  9272     0210                     	;# 
  9273     0210                     	;# 
  9274     0211                     	;# 
  9275     0211                     	;# 
  9276     0212                     	;# 
  9277     0213                     	;# 
  9278     0214                     	;# 
  9279     0214                     	;# 
  9280     0215                     	;# 
  9281     0215                     	;# 
  9282     0216                     	;# 
  9283     0216                     	;# 
  9284     0217                     	;# 
  9285     0217                     	;# 
  9286     0218                     	;# 
  9287     0219                     	;# 
  9288     021A                     	;# 
  9289     021A                     	;# 
  9290     021B                     	;# 
  9291     021B                     	;# 
  9292     021C                     	;# 
  9293     021C                     	;# 
  9294     021D                     	;# 
  9295     021D                     	;# 
  9296     021E                     	;# 
  9297     021F                     	;# 
  9298     028C                     	;# 
  9299     028C                     	;# 
  9300     028D                     	;# 
  9301     028D                     	;# 
  9302     028E                     	;# 
  9303     028F                     	;# 
  9304     0290                     	;# 
  9305     0291                     	;# 
  9306     0292                     	;# 
  9307     0292                     	;# 
  9308     0293                     	;# 
  9309     0293                     	;# 
  9310     0294                     	;# 
  9311     0295                     	;# 
  9312     0296                     	;# 
  9313     0297                     	;# 
  9314     0298                     	;# 
  9315     0298                     	;# 
  9316     0299                     	;# 
  9317     0299                     	;# 
  9318     029A                     	;# 
  9319     029B                     	;# 
  9320     029C                     	;# 
  9321     029D                     	;# 
  9322     029F                     	;# 
  9323     030C                     	;# 
  9324     030C                     	;# 
  9325     030D                     	;# 
  9326     030E                     	;# 
  9327     030F                     	;# 
  9328     0310                     	;# 
  9329     0310                     	;# 
  9330     0311                     	;# 
  9331     0312                     	;# 
  9332     0313                     	;# 
  9333     0314                     	;# 
  9334     0314                     	;# 
  9335     0315                     	;# 
  9336     0316                     	;# 
  9337     0317                     	;# 
  9338     0318                     	;# 
  9339     0318                     	;# 
  9340     0319                     	;# 
  9341     031A                     	;# 
  9342     031B                     	;# 
  9343     031C                     	;# 
  9344     031C                     	;# 
  9345     031D                     	;# 
  9346     031E                     	;# 
  9347     031F                     	;# 
  9348     038C                     	;# 
  9349     038C                     	;# 
  9350     038D                     	;# 
  9351     038E                     	;# 
  9352     0390                     	;# 
  9353     0390                     	;# 
  9354     0391                     	;# 
  9355     0392                     	;# 
  9356     048C                     	;# 
  9357     048C                     	;# 
  9358     048D                     	;# 
  9359     048E                     	;# 
  9360     048F                     	;# 
  9361     048F                     	;# 
  9362     0490                     	;# 
  9363     0491                     	;# 
  9364     0492                     	;# 
  9365     0492                     	;# 
  9366     0493                     	;# 
  9367     0494                     	;# 
  9368     0495                     	;# 
  9369     0495                     	;# 
  9370     0496                     	;# 
  9371     0497                     	;# 
  9372     0498                     	;# 
  9373     0499                     	;# 
  9374     049A                     	;# 
  9375     049B                     	;# 
  9376     049C                     	;# 
  9377     049D                     	;# 
  9378     050C                     	;# 
  9379     050C                     	;# 
  9380     050D                     	;# 
  9381     050E                     	;# 
  9382     050F                     	;# 
  9383     050F                     	;# 
  9384     0510                     	;# 
  9385     0511                     	;# 
  9386     0512                     	;# 
  9387     0512                     	;# 
  9388     0513                     	;# 
  9389     0514                     	;# 
  9390     0515                     	;# 
  9391     0515                     	;# 
  9392     0516                     	;# 
  9393     0517                     	;# 
  9394     0518                     	;# 
  9395     0519                     	;# 
  9396     051A                     	;# 
  9397     051B                     	;# 
  9398     051C                     	;# 
  9399     051D                     	;# 
  9400     058C                     	;# 
  9401     058C                     	;# 
  9402     058D                     	;# 
  9403     058E                     	;# 
  9404     058F                     	;# 
  9405     058F                     	;# 
  9406     0590                     	;# 
  9407     0591                     	;# 
  9408     0592                     	;# 
  9409     0593                     	;# 
  9410     059C                     	;# 
  9411     059C                     	;# 
  9412     059D                     	;# 
  9413     059D                     	;# 
  9414     059E                     	;# 
  9415     059F                     	;# 
  9416     060C                     	;# 
  9417     060C                     	;# 
  9418     060D                     	;# 
  9419     060D                     	;# 
  9420     060E                     	;# 
  9421     060F                     	;# 
  9422     0610                     	;# 
  9423     0611                     	;# 
  9424     0612                     	;# 
  9425     0613                     	;# 
  9426     0614                     	;# 
  9427     0616                     	;# 
  9428     0616                     	;# 
  9429     0617                     	;# 
  9430     0617                     	;# 
  9431     0618                     	;# 
  9432     0619                     	;# 
  9433     061A                     	;# 
  9434     061B                     	;# 
  9435     061C                     	;# 
  9436     061D                     	;# 
  9437     061E                     	;# 
  9438     068C                     	;# 
  9439     068D                     	;# 
  9440     068E                     	;# 
  9441     068F                     	;# 
  9442     0690                     	;# 
  9443     0691                     	;# 
  9444     0692                     	;# 
  9445     0693                     	;# 
  9446     0694                     	;# 
  9447     070C                     	;# 
  9448     070D                     	;# 
  9449     070E                     	;# 
  9450     070F                     	;# 
  9451     0710                     	;# 
  9452     0711                     	;# 
  9453     0712                     	;# 
  9454     0713                     	;# 
  9455     0714                     	;# 
  9456     0716                     	;# 
  9457     0717                     	;# 
  9458     0718                     	;# 
  9459     0719                     	;# 
  9460     071A                     	;# 
  9461     071B                     	;# 
  9462     071C                     	;# 
  9463     071D                     	;# 
  9464     071E                     	;# 
  9465     0796                     	;# 
  9466     0797                     	;# 
  9467     0798                     	;# 
  9468     0799                     	;# 
  9469     079A                     	;# 
  9470     079B                     	;# 
  9471     079C                     	;# 
  9472     079D                     	;# 
  9473     080C                     	;# 
  9474     080D                     	;# 
  9475     080E                     	;# 
  9476     080F                     	;# 
  9477     0810                     	;# 
  9478     0811                     	;# 
  9479     0813                     	;# 
  9480     0814                     	;# 
  9481     081A                     	;# 
  9482     081A                     	;# 
  9483     081B                     	;# 
  9484     081C                     	;# 
  9485     081C                     	;# 
  9486     081D                     	;# 
  9487     081E                     	;# 
  9488     081F                     	;# 
  9489     088C                     	;# 
  9490     088D                     	;# 
  9491     088E                     	;# 
  9492     088F                     	;# 
  9493     0890                     	;# 
  9494     0891                     	;# 
  9495     0892                     	;# 
  9496     0893                     	;# 
  9497     0895                     	;# 
  9498     0896                     	;# 
  9499     0897                     	;# 
  9500     0898                     	;# 
  9501     0899                     	;# 
  9502     089A                     	;# 
  9503     089B                     	;# 
  9504     090C                     	;# 
  9505     090E                     	;# 
  9506     090F                     	;# 
  9507     091F                     	;# 
  9508     098F                     	;# 
  9509     098F                     	;# 
  9510     0990                     	;# 
  9511     0991                     	;# 
  9512     0992                     	;# 
  9513     0993                     	;# 
  9514     0994                     	;# 
  9515     0995                     	;# 
  9516     0996                     	;# 
  9517     0997                     	;# 
  9518     0A19                     	;# 
  9519     0A19                     	;# 
  9520     0A1A                     	;# 
  9521     0A1A                     	;# 
  9522     0A1B                     	;# 
  9523     0A1B                     	;# 
  9524     0A1B                     	;# 
  9525     0A1C                     	;# 
  9526     0A1C                     	;# 
  9527     0A1D                     	;# 
  9528     0A1D                     	;# 
  9529     0A1E                     	;# 
  9530     0A1E                     	;# 
  9531     0A1F                     	;# 
  9532     0A1F                     	;# 
  9533     0A1F                     	;# 
  9534     1E0F                     	;# 
  9535     1E10                     	;# 
  9536     1E11                     	;# 
  9537     1E12                     	;# 
  9538     1E13                     	;# 
  9539     1E14                     	;# 
  9540     1E15                     	;# 
  9541     1E16                     	;# 
  9542     1E17                     	;# 
  9543     1E18                     	;# 
  9544     1E19                     	;# 
  9545     1E1A                     	;# 
  9546     1E1B                     	;# 
  9547     1E1C                     	;# 
  9548     1E1D                     	;# 
  9549     1E1E                     	;# 
  9550     1E1F                     	;# 
  9551     1E20                     	;# 
  9552     1E21                     	;# 
  9553     1E22                     	;# 
  9554     1E23                     	;# 
  9555     1E24                     	;# 
  9556     1E25                     	;# 
  9557     1E26                     	;# 
  9558     1E27                     	;# 
  9559     1E28                     	;# 
  9560     1E29                     	;# 
  9561     1E2A                     	;# 
  9562     1E2B                     	;# 
  9563     1E2C                     	;# 
  9564     1E2D                     	;# 
  9565     1E2E                     	;# 
  9566     1E2F                     	;# 
  9567     1E30                     	;# 
  9568     1E31                     	;# 
  9569     1E32                     	;# 
  9570     1E33                     	;# 
  9571     1E34                     	;# 
  9572     1E35                     	;# 
  9573     1E36                     	;# 
  9574     1E37                     	;# 
  9575     1E8F                     	;# 
  9576     1E90                     	;# 
  9577     1E91                     	;# 
  9578     1E92                     	;# 
  9579     1E93                     	;# 
  9580     1E94                     	;# 
  9581     1E95                     	;# 
  9582     1E96                     	;# 
  9583     1E97                     	;# 
  9584     1E9C                     	;# 
  9585     1E9D                     	;# 
  9586     1E9E                     	;# 
  9587     1EA1                     	;# 
  9588     1EA2                     	;# 
  9589     1EA3                     	;# 
  9590     1EA4                     	;# 
  9591     1EA5                     	;# 
  9592     1EA9                     	;# 
  9593     1EAA                     	;# 
  9594     1EAB                     	;# 
  9595     1EAC                     	;# 
  9596     1EB1                     	;# 
  9597     1EB2                     	;# 
  9598     1EB3                     	;# 
  9599     1EB8                     	;# 
  9600     1EB9                     	;# 
  9601     1EBA                     	;# 
  9602     1EBB                     	;# 
  9603     1EBC                     	;# 
  9604     1EBD                     	;# 
  9605     1EBE                     	;# 
  9606     1EC3                     	;# 
  9607     1EC5                     	;# 
  9608     1EC6                     	;# 
  9609     1EC7                     	;# 
  9610     1EC8                     	;# 
  9611     1EC9                     	;# 
  9612     1ECA                     	;# 
  9613     1ECB                     	;# 
  9614     1ECC                     	;# 
  9615     1ECD                     	;# 
  9616     1ECE                     	;# 
  9617     1F10                     	;# 
  9618     1F11                     	;# 
  9619     1F12                     	;# 
  9620     1F13                     	;# 
  9621     1F14                     	;# 
  9622     1F15                     	;# 
  9623     1F16                     	;# 
  9624     1F17                     	;# 
  9625     1F18                     	;# 
  9626     1F19                     	;# 
  9627     1F1A                     	;# 
  9628     1F1B                     	;# 
  9629     1F1C                     	;# 
  9630     1F1D                     	;# 
  9631     1F1E                     	;# 
  9632     1F1F                     	;# 
  9633     1F20                     	;# 
  9634     1F21                     	;# 
  9635     1F22                     	;# 
  9636     1F23                     	;# 
  9637     1F24                     	;# 
  9638     1F25                     	;# 
  9639     1F26                     	;# 
  9640     1F27                     	;# 
  9641     1F38                     	;# 
  9642     1F39                     	;# 
  9643     1F3A                     	;# 
  9644     1F3B                     	;# 
  9645     1F3C                     	;# 
  9646     1F3D                     	;# 
  9647     1F3E                     	;# 
  9648     1F3F                     	;# 
  9649     1F43                     	;# 
  9650     1F44                     	;# 
  9651     1F45                     	;# 
  9652     1F46                     	;# 
  9653     1F47                     	;# 
  9654     1F48                     	;# 
  9655     1F49                     	;# 
  9656     1F4A                     	;# 
  9657     1F4E                     	;# 
  9658     1F4F                     	;# 
  9659     1F50                     	;# 
  9660     1F51                     	;# 
  9661     1F52                     	;# 
  9662     1F53                     	;# 
  9663     1F54                     	;# 
  9664     1F55                     	;# 
  9665     1F65                     	;# 
  9666     1F66                     	;# 
  9667     1F67                     	;# 
  9668     1F68                     	;# 
  9669     1F69                     	;# 
  9670     1F6A                     	;# 
  9671     1F6B                     	;# 
  9672     1FE4                     	;# 
  9673     1FE5                     	;# 
  9674     1FE6                     	;# 
  9675     1FE7                     	;# 
  9676     1FE8                     	;# 
  9677     1FE8                     	;# 
  9678     1FE9                     	;# 
  9679     1FEA                     	;# 
  9680     1FEB                     	;# 
  9681     1FED                     	;# 
  9682     1FEE                     	;# 
  9683     1FEF                     	;# 
  9684     0000                     	;# 
  9685     0001                     	;# 
  9686     0002                     	;# 
  9687     0003                     	;# 
  9688     0004                     	;# 
  9689     0005                     	;# 
  9690     0006                     	;# 
  9691     0007                     	;# 
  9692     0008                     	;# 
  9693     0009                     	;# 
  9694     000A                     	;# 
  9695     000B                     	;# 
  9696     000C                     	;# 
  9697     000D                     	;# 
  9698     000E                     	;# 
  9699     0010                     	;# 
  9700     0012                     	;# 
  9701     0013                     	;# 
  9702     0014                     	;# 
  9703     0016                     	;# 
  9704     0018                     	;# 
  9705     0019                     	;# 
  9706     001A                     	;# 
  9707     001C                     	;# 
  9708     008C                     	;# 
  9709     008C                     	;# 
  9710     008D                     	;# 
  9711     008E                     	;# 
  9712     008E                     	;# 
  9713     008F                     	;# 
  9714     0090                     	;# 
  9715     0090                     	;# 
  9716     0091                     	;# 
  9717     0092                     	;# 
  9718     0092                     	;# 
  9719     0093                     	;# 
  9720     0094                     	;# 
  9721     0094                     	;# 
  9722     0095                     	;# 
  9723     0096                     	;# 
  9724     0096                     	;# 
  9725     0097                     	;# 
  9726     0098                     	;# 
  9727     0099                     	;# 
  9728     009A                     	;# 
  9729     009B                     	;# 
  9730     009B                     	;# 
  9731     009C                     	;# 
  9732     009D                     	;# 
  9733     009D                     	;# 
  9734     009E                     	;# 
  9735     009F                     	;# 
  9736     010C                     	;# 
  9737     010C                     	;# 
  9738     010D                     	;# 
  9739     010E                     	;# 
  9740     010F                     	;# 
  9741     010F                     	;# 
  9742     0110                     	;# 
  9743     0111                     	;# 
  9744     0112                     	;# 
  9745     0113                     	;# 
  9746     0114                     	;# 
  9747     0115                     	;# 
  9748     0116                     	;# 
  9749     0117                     	;# 
  9750     0118                     	;# 
  9751     0119                     	;# 
  9752     0119                     	;# 
  9753     0119                     	;# 
  9754     011A                     	;# 
  9755     011A                     	;# 
  9756     011A                     	;# 
  9757     011B                     	;# 
  9758     011B                     	;# 
  9759     011B                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011C                     	;# 
  9763     011C                     	;# 
  9764     011C                     	;# 
  9765     011D                     	;# 
  9766     011D                     	;# 
  9767     011D                     	;# 
  9768     011E                     	;# 
  9769     011E                     	;# 
  9770     011E                     	;# 
  9771     011F                     	;# 
  9772     011F                     	;# 
  9773     011F                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     018C                     	;# 
  9777     018D                     	;# 
  9778     018E                     	;# 
  9779     018F                     	;# 
  9780     0190                     	;# 
  9781     0191                     	;# 
  9782     0192                     	;# 
  9783     0196                     	;# 
  9784     0197                     	;# 
  9785     0198                     	;# 
  9786     0199                     	;# 
  9787     019A                     	;# 
  9788     019B                     	;# 
  9789     019C                     	;# 
  9790     020C                     	;# 
  9791     020D                     	;# 
  9792     020E                     	;# 
  9793     020E                     	;# 
  9794     020F                     	;# 
  9795     020F                     	;# 
  9796     0210                     	;# 
  9797     0210                     	;# 
  9798     0211                     	;# 
  9799     0211                     	;# 
  9800     0212                     	;# 
  9801     0213                     	;# 
  9802     0214                     	;# 
  9803     0214                     	;# 
  9804     0215                     	;# 
  9805     0215                     	;# 
  9806     0216                     	;# 
  9807     0216                     	;# 
  9808     0217                     	;# 
  9809     0217                     	;# 
  9810     0218                     	;# 
  9811     0219                     	;# 
  9812     021A                     	;# 
  9813     021A                     	;# 
  9814     021B                     	;# 
  9815     021B                     	;# 
  9816     021C                     	;# 
  9817     021C                     	;# 
  9818     021D                     	;# 
  9819     021D                     	;# 
  9820     021E                     	;# 
  9821     021F                     	;# 
  9822     028C                     	;# 
  9823     028C                     	;# 
  9824     028D                     	;# 
  9825     028D                     	;# 
  9826     028E                     	;# 
  9827     028F                     	;# 
  9828     0290                     	;# 
  9829     0291                     	;# 
  9830     0292                     	;# 
  9831     0292                     	;# 
  9832     0293                     	;# 
  9833     0293                     	;# 
  9834     0294                     	;# 
  9835     0295                     	;# 
  9836     0296                     	;# 
  9837     0297                     	;# 
  9838     0298                     	;# 
  9839     0298                     	;# 
  9840     0299                     	;# 
  9841     0299                     	;# 
  9842     029A                     	;# 
  9843     029B                     	;# 
  9844     029C                     	;# 
  9845     029D                     	;# 
  9846     029F                     	;# 
  9847     030C                     	;# 
  9848     030C                     	;# 
  9849     030D                     	;# 
  9850     030E                     	;# 
  9851     030F                     	;# 
  9852     0310                     	;# 
  9853     0310                     	;# 
  9854     0311                     	;# 
  9855     0312                     	;# 
  9856     0313                     	;# 
  9857     0314                     	;# 
  9858     0314                     	;# 
  9859     0315                     	;# 
  9860     0316                     	;# 
  9861     0317                     	;# 
  9862     0318                     	;# 
  9863     0318                     	;# 
  9864     0319                     	;# 
  9865     031A                     	;# 
  9866     031B                     	;# 
  9867     031C                     	;# 
  9868     031C                     	;# 
  9869     031D                     	;# 
  9870     031E                     	;# 
  9871     031F                     	;# 
  9872     038C                     	;# 
  9873     038C                     	;# 
  9874     038D                     	;# 
  9875     038E                     	;# 
  9876     0390                     	;# 
  9877     0390                     	;# 
  9878     0391                     	;# 
  9879     0392                     	;# 
  9880     048C                     	;# 
  9881     048C                     	;# 
  9882     048D                     	;# 
  9883     048E                     	;# 
  9884     048F                     	;# 
  9885     048F                     	;# 
  9886     0490                     	;# 
  9887     0491                     	;# 
  9888     0492                     	;# 
  9889     0492                     	;# 
  9890     0493                     	;# 
  9891     0494                     	;# 
  9892     0495                     	;# 
  9893     0495                     	;# 
  9894     0496                     	;# 
  9895     0497                     	;# 
  9896     0498                     	;# 
  9897     0499                     	;# 
  9898     049A                     	;# 
  9899     049B                     	;# 
  9900     049C                     	;# 
  9901     049D                     	;# 
  9902     050C                     	;# 
  9903     050C                     	;# 
  9904     050D                     	;# 
  9905     050E                     	;# 
  9906     050F                     	;# 
  9907     050F                     	;# 
  9908     0510                     	;# 
  9909     0511                     	;# 
  9910     0512                     	;# 
  9911     0512                     	;# 
  9912     0513                     	;# 
  9913     0514                     	;# 
  9914     0515                     	;# 
  9915     0515                     	;# 
  9916     0516                     	;# 
  9917     0517                     	;# 
  9918     0518                     	;# 
  9919     0519                     	;# 
  9920     051A                     	;# 
  9921     051B                     	;# 
  9922     051C                     	;# 
  9923     051D                     	;# 
  9924     058C                     	;# 
  9925     058C                     	;# 
  9926     058D                     	;# 
  9927     058E                     	;# 
  9928     058F                     	;# 
  9929     058F                     	;# 
  9930     0590                     	;# 
  9931     0591                     	;# 
  9932     0592                     	;# 
  9933     0593                     	;# 
  9934     059C                     	;# 
  9935     059C                     	;# 
  9936     059D                     	;# 
  9937     059D                     	;# 
  9938     059E                     	;# 
  9939     059F                     	;# 
  9940     060C                     	;# 
  9941     060C                     	;# 
  9942     060D                     	;# 
  9943     060D                     	;# 
  9944     060E                     	;# 
  9945     060F                     	;# 
  9946     0610                     	;# 
  9947     0611                     	;# 
  9948     0612                     	;# 
  9949     0613                     	;# 
  9950     0614                     	;# 
  9951     0616                     	;# 
  9952     0616                     	;# 
  9953     0617                     	;# 
  9954     0617                     	;# 
  9955     0618                     	;# 
  9956     0619                     	;# 
  9957     061A                     	;# 
  9958     061B                     	;# 
  9959     061C                     	;# 
  9960     061D                     	;# 
  9961     061E                     	;# 
  9962     068C                     	;# 
  9963     068D                     	;# 
  9964     068E                     	;# 
  9965     068F                     	;# 
  9966     0690                     	;# 
  9967     0691                     	;# 
  9968     0692                     	;# 
  9969     0693                     	;# 
  9970     0694                     	;# 
  9971     070C                     	;# 
  9972     070D                     	;# 
  9973     070E                     	;# 
  9974     070F                     	;# 
  9975     0710                     	;# 
  9976     0711                     	;# 
  9977     0712                     	;# 
  9978     0713                     	;# 
  9979     0714                     	;# 
  9980     0716                     	;# 
  9981     0717                     	;# 
  9982     0718                     	;# 
  9983     0719                     	;# 
  9984     071A                     	;# 
  9985     071B                     	;# 
  9986     071C                     	;# 
  9987     071D                     	;# 
  9988     071E                     	;# 
  9989     0796                     	;# 
  9990     0797                     	;# 
  9991     0798                     	;# 
  9992     0799                     	;# 
  9993     079A                     	;# 
  9994     079B                     	;# 
  9995     079C                     	;# 
  9996     079D                     	;# 
  9997     080C                     	;# 
  9998     080D                     	;# 
  9999     080E                     	;# 
 10000     080F                     	;# 
 10001     0810                     	;# 
 10002     0811                     	;# 
 10003     0813                     	;# 
 10004     0814                     	;# 
 10005     081A                     	;# 
 10006     081A                     	;# 
 10007     081B                     	;# 
 10008     081C                     	;# 
 10009     081C                     	;# 
 10010     081D                     	;# 
 10011     081E                     	;# 
 10012     081F                     	;# 
 10013     088C                     	;# 
 10014     088D                     	;# 
 10015     088E                     	;# 
 10016     088F                     	;# 
 10017     0890                     	;# 
 10018     0891                     	;# 
 10019     0892                     	;# 
 10020     0893                     	;# 
 10021     0895                     	;# 
 10022     0896                     	;# 
 10023     0897                     	;# 
 10024     0898                     	;# 
 10025     0899                     	;# 
 10026     089A                     	;# 
 10027     089B                     	;# 
 10028     090C                     	;# 
 10029     090E                     	;# 
 10030     090F                     	;# 
 10031     091F                     	;# 
 10032     098F                     	;# 
 10033     098F                     	;# 
 10034     0990                     	;# 
 10035     0991                     	;# 
 10036     0992                     	;# 
 10037     0993                     	;# 
 10038     0994                     	;# 
 10039     0995                     	;# 
 10040     0996                     	;# 
 10041     0997                     	;# 
 10042     0A19                     	;# 
 10043     0A19                     	;# 
 10044     0A1A                     	;# 
 10045     0A1A                     	;# 
 10046     0A1B                     	;# 
 10047     0A1B                     	;# 
 10048     0A1B                     	;# 
 10049     0A1C                     	;# 
 10050     0A1C                     	;# 
 10051     0A1D                     	;# 
 10052     0A1D                     	;# 
 10053     0A1E                     	;# 
 10054     0A1E                     	;# 
 10055     0A1F                     	;# 
 10056     0A1F                     	;# 
 10057     0A1F                     	;# 
 10058     1E0F                     	;# 
 10059     1E10                     	;# 
 10060     1E11                     	;# 
 10061     1E12                     	;# 
 10062     1E13                     	;# 
 10063     1E14                     	;# 
 10064     1E15                     	;# 
 10065     1E16                     	;# 
 10066     1E17                     	;# 
 10067     1E18                     	;# 
 10068     1E19                     	;# 
 10069     1E1A                     	;# 
 10070     1E1B                     	;# 
 10071     1E1C                     	;# 
 10072     1E1D                     	;# 
 10073     1E1E                     	;# 
 10074     1E1F                     	;# 
 10075     1E20                     	;# 
 10076     1E21                     	;# 
 10077     1E22                     	;# 
 10078     1E23                     	;# 
 10079     1E24                     	;# 
 10080     1E25                     	;# 
 10081     1E26                     	;# 
 10082     1E27                     	;# 
 10083     1E28                     	;# 
 10084     1E29                     	;# 
 10085     1E2A                     	;# 
 10086     1E2B                     	;# 
 10087     1E2C                     	;# 
 10088     1E2D                     	;# 
 10089     1E2E                     	;# 
 10090     1E2F                     	;# 
 10091     1E30                     	;# 
 10092     1E31                     	;# 
 10093     1E32                     	;# 
 10094     1E33                     	;# 
 10095     1E34                     	;# 
 10096     1E35                     	;# 
 10097     1E36                     	;# 
 10098     1E37                     	;# 
 10099     1E8F                     	;# 
 10100     1E90                     	;# 
 10101     1E91                     	;# 
 10102     1E92                     	;# 
 10103     1E93                     	;# 
 10104     1E94                     	;# 
 10105     1E95                     	;# 
 10106     1E96                     	;# 
 10107     1E97                     	;# 
 10108     1E9C                     	;# 
 10109     1E9D                     	;# 
 10110     1E9E                     	;# 
 10111     1EA1                     	;# 
 10112     1EA2                     	;# 
 10113     1EA3                     	;# 
 10114     1EA4                     	;# 
 10115     1EA5                     	;# 
 10116     1EA9                     	;# 
 10117     1EAA                     	;# 
 10118     1EAB                     	;# 
 10119     1EAC                     	;# 
 10120     1EB1                     	;# 
 10121     1EB2                     	;# 
 10122     1EB3                     	;# 
 10123     1EB8                     	;# 
 10124     1EB9                     	;# 
 10125     1EBA                     	;# 
 10126     1EBB                     	;# 
 10127     1EBC                     	;# 
 10128     1EBD                     	;# 
 10129     1EBE                     	;# 
 10130     1EC3                     	;# 
 10131     1EC5                     	;# 
 10132     1EC6                     	;# 
 10133     1EC7                     	;# 
 10134     1EC8                     	;# 
 10135     1EC9                     	;# 
 10136     1ECA                     	;# 
 10137     1ECB                     	;# 
 10138     1ECC                     	;# 
 10139     1ECD                     	;# 
 10140     1ECE                     	;# 
 10141     1F10                     	;# 
 10142     1F11                     	;# 
 10143     1F12                     	;# 
 10144     1F13                     	;# 
 10145     1F14                     	;# 
 10146     1F15                     	;# 
 10147     1F16                     	;# 
 10148     1F17                     	;# 
 10149     1F18                     	;# 
 10150     1F19                     	;# 
 10151     1F1A                     	;# 
 10152     1F1B                     	;# 
 10153     1F1C                     	;# 
 10154     1F1D                     	;# 
 10155     1F1E                     	;# 
 10156     1F1F                     	;# 
 10157     1F20                     	;# 
 10158     1F21                     	;# 
 10159     1F22                     	;# 
 10160     1F23                     	;# 
 10161     1F24                     	;# 
 10162     1F25                     	;# 
 10163     1F26                     	;# 
 10164     1F27                     	;# 
 10165     1F38                     	;# 
 10166     1F39                     	;# 
 10167     1F3A                     	;# 
 10168     1F3B                     	;# 
 10169     1F3C                     	;# 
 10170     1F3D                     	;# 
 10171     1F3E                     	;# 
 10172     1F3F                     	;# 
 10173     1F43                     	;# 
 10174     1F44                     	;# 
 10175     1F45                     	;# 
 10176     1F46                     	;# 
 10177     1F47                     	;# 
 10178     1F48                     	;# 
 10179     1F49                     	;# 
 10180     1F4A                     	;# 
 10181     1F4E                     	;# 
 10182     1F4F                     	;# 
 10183     1F50                     	;# 
 10184     1F51                     	;# 
 10185     1F52                     	;# 
 10186     1F53                     	;# 
 10187     1F54                     	;# 
 10188     1F55                     	;# 
 10189     1F65                     	;# 
 10190     1F66                     	;# 
 10191     1F67                     	;# 
 10192     1F68                     	;# 
 10193     1F69                     	;# 
 10194     1F6A                     	;# 
 10195     1F6B                     	;# 
 10196     1FE4                     	;# 
 10197     1FE5                     	;# 
 10198     1FE6                     	;# 
 10199     1FE7                     	;# 
 10200     1FE8                     	;# 
 10201     1FE8                     	;# 
 10202     1FE9                     	;# 
 10203     1FEA                     	;# 
 10204     1FEB                     	;# 
 10205     1FED                     	;# 
 10206     1FEE                     	;# 
 10207     1FEF                     	;# 
 10208                           
 10209 ;; Function _do_I2C_RESET is unused but had its address taken
 10210     0000                     
 10211 ;; Function _do_I2C_IDLE is unused but had its address taken
 10212     0000                     
 10213 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10214     0000                     
 10215 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10216     0000                     
 10217 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10218     0000                     
 10219 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10220     0000                     
 10221 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10222     0000                     
 10223 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10224     0000                     
 10225 ;; Function _do_I2C_RCEN is unused but had its address taken
 10226     0000                     
 10227 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10228     0000                     
 10229 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10230     0000                     
 10231 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10232     0000                     
 10233 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10234     0000                     
 10235 ;; Function _do_I2C_TX is unused but had its address taken
 10236     0000                     
 10237 ;; Function _do_I2C_RX is unused but had its address taken
 10238     0000                     
 10239 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10240     0000                     
 10241 ;; Function _i2c_ISR is unused but had its address taken
 10242     0000                     
 10243 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10244     0000                     
 10245 ;; Function _returnStop is unused but had its address taken
 10246     0000                     
 10247 ;; Function _returnReset is unused but had its address taken
 10248     0000                     
 10249 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10250     0000                     
 10251 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10252     0000                     
 10253                           	psect	idataBANK0
 10254     0002                     __pidataBANK0:
 10255                           
 10256                           ;initializer for RN487X_GetInputsValues@F12901
 10257     0002  3430               	retlw	48
 10258     0003  3430               	retlw	48
 10259                           
 10260                           	psect	idataBANK2
 10261     10E4                     __pidataBANK2:
 10262                           
 10263                           ;initializer for __hex
 10264     10E4  3430               	retlw	48
 10265     10E5  3431               	retlw	49
 10266     10E6  3432               	retlw	50
 10267     10E7  3433               	retlw	51
 10268     10E8  3434               	retlw	52
 10269     10E9  3435               	retlw	53
 10270     10EA  3436               	retlw	54
 10271     10EB  3437               	retlw	55
 10272     10EC  3438               	retlw	56
 10273     10ED  3439               	retlw	57
 10274     10EE  3441               	retlw	65
 10275     10EF  3442               	retlw	66
 10276     10F0  3443               	retlw	67
 10277     10F1  3444               	retlw	68
 10278     10F2  3445               	retlw	69
 10279     10F3  3446               	retlw	70
 10280     10F4  3400               	retlw	0
 10281                           
 10282                           	psect	stringtext1
 10283     1800                     __pstringtext1:
 10284     1800                     _uart:
 10285     1800  3448               	retlw	low _EUSART1_Read
 10286     1801  3415               	retlw	high _EUSART1_Read
 10287     1802  3421               	retlw	low _EUSART1_Write
 10288     1803  3415               	retlw	high _EUSART1_Write
 10289     1804  3400               	retlw	0
 10290     1805  3400               	retlw	0
 10291     1806  34B1               	retlw	low _EUSART1_is_rx_ready
 10292     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10293     1808  3442               	retlw	low _EUSART1_SetTxInterruptHandler
 10294     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10295     180A  3488               	retlw	low _EUSART1_Receive_ISR
 10296     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10297     180C  343C               	retlw	low _EUSART1_SetRxInterruptHandler
 10298     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10299     180E  3400               	retlw	low _EUSART1_is_tx_done
 10300     180F  3410               	retlw	high _EUSART1_is_tx_done
 10301     1810  34FF               	retlw	low _EUSART1_Transmit_ISR
 10302     1811  3413               	retlw	high _EUSART1_Transmit_ISR
 10303     1812  343F               	retlw	low _EUSART1_Initialize
 10304     1813  3409               	retlw	high _EUSART1_Initialize
 10305     1814  34D4               	retlw	low _EUSART2_Read
 10306     1815  3414               	retlw	high _EUSART2_Read
 10307     1816  34FA               	retlw	low _EUSART2_Write
 10308     1817  3414               	retlw	high _EUSART2_Write
 10309     1818  3400               	retlw	0
 10310     1819  3400               	retlw	0
 10311     181A  34A8               	retlw	low _EUSART2_is_rx_ready
 10312     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10313     181C  3460               	retlw	low _EUSART2_SetTxInterruptHandler
 10314     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10315     181E  344F               	retlw	low _EUSART2_Receive_ISR
 10316     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10317     1820  345A               	retlw	low _EUSART2_SetRxInterruptHandler
 10318     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10319     1822  34C7               	retlw	low _EUSART2_is_tx_done
 10320     1823  341E               	retlw	high _EUSART2_is_tx_done
 10321     1824  34DD               	retlw	low _EUSART2_Transmit_ISR
 10322     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10323     1826  347D               	retlw	low _EUSART2_Initialize
 10324     1827  3409               	retlw	high _EUSART2_Initialize
 10325     1828                     __end_of_uart:
 10326                           
 10327                           	psect	stringtext2
 10328     1828                     __pstringtext2:
 10329     1828                     _i2c1_fsmStateTable:
 10330     1828  34D0               	retlw	low _I2C1_DO_IDLE
 10331     1829  341E               	retlw	high _I2C1_DO_IDLE
 10332     182A  349F               	retlw	low _I2C1_DO_SEND_ADR_READ
 10333     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10334     182C  3486               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10335     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10336     182E  343A               	retlw	low _I2C1_DO_TX
 10337     182F  340E               	retlw	high _I2C1_DO_TX
 10338     1830  34CC               	retlw	low _I2C1_DO_RX
 10339     1831  340A               	retlw	high _I2C1_DO_RX
 10340     1832  3478               	retlw	low _I2C1_DO_RCEN
 10341     1833  341F               	retlw	high _I2C1_DO_RCEN
 10342     1834  34EB               	retlw	low _I2C1_DO_TX_EMPTY
 10343     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10344     1836  34D5               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10345     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10346     1838  34DA               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10347     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10348     183A  34DF               	retlw	low _I2C1_DO_SEND_RESTART
 10349     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10350     183C  34E4               	retlw	low _I2C1_DO_SEND_STOP
 10351     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10352     183E  34E9               	retlw	low _I2C1_DO_RX_ACK
 10353     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10354     1840  34EE               	retlw	low _I2C1_DO_RX_NACK_STOP
 10355     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10356     1842  34F3               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10357     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10358     1844  34F8               	retlw	low _I2C1_DO_RESET
 10359     1845  341E               	retlw	high _I2C1_DO_RESET
 10360     1846  346F               	retlw	low _I2C1_DO_ADDRESS_NACK
 10361     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10362     1848                     __end_of_i2c1_fsmStateTable:
 10363                           
 10364                           	psect	stringtext3
 10365     1848                     __pstringtext3:
 10366     1848                     _fsmStateTable:
 10367     1848  3400               	retlw	0
 10368     1849  3400               	retlw	0
 10369     184A  3400               	retlw	0
 10370     184B  3400               	retlw	0
 10371     184C  3400               	retlw	0
 10372     184D  3400               	retlw	0
 10373     184E  3400               	retlw	0
 10374     184F  3400               	retlw	0
 10375     1850  3400               	retlw	0
 10376     1851  3400               	retlw	0
 10377     1852  3400               	retlw	0
 10378     1853  3400               	retlw	0
 10379     1854  3400               	retlw	0
 10380     1855  3400               	retlw	0
 10381     1856  3400               	retlw	0
 10382     1857  3400               	retlw	0
 10383     1858  3400               	retlw	0
 10384     1859  3400               	retlw	0
 10385     185A  3400               	retlw	0
 10386     185B  3400               	retlw	0
 10387     185C  3400               	retlw	0
 10388     185D  3400               	retlw	0
 10389     185E  3400               	retlw	0
 10390     185F  3400               	retlw	0
 10391     1860  3400               	retlw	0
 10392     1861  3400               	retlw	0
 10393     1862  3400               	retlw	0
 10394     1863  3400               	retlw	0
 10395     1864  3400               	retlw	0
 10396     1865  3400               	retlw	0
 10397     1866  3400               	retlw	0
 10398     1867  3400               	retlw	0
 10399     1868                     __end_of_fsmStateTable:
 10400                           
 10401                           	psect	stringtext4
 10402     1868                     __pstringtext4:
 10403     1868                     _RN487X:
 10404     1868  343C               	retlw	low _RN487X_Write
 10405     1869  3410               	retlw	high _RN487X_Write
 10406     186A  34C3               	retlw	low _RN487X_Read@rn487x_interface$F1843
 10407     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1843
 10408     186C  34CD               	retlw	low _RN487X_is_tx_done
 10409     186D  341F               	retlw	high _RN487X_is_tx_done
 10410     186E  34D7               	retlw	low _RN487X_is_rx_ready
 10411     186F  341F               	retlw	high _RN487X_is_rx_ready
 10412     1870  340F               	retlw	low _RN487X_IndicateRx
 10413     1871  3410               	retlw	high _RN487X_IndicateRx
 10414     1872  341A               	retlw	low _RN487X_Reset
 10415     1873  3410               	retlw	high _RN487X_Reset
 10416     1874  3448               	retlw	low _RN487X_SetSystemMode
 10417     1875  3410               	retlw	high _RN487X_SetSystemMode
 10418     1876  348E               	retlw	low _RN487X_Delay
 10419     1877  341F               	retlw	high _RN487X_Delay
 10420     1878  34FA               	retlw	low _RN487X_MessageHandler
 10421     1879  3409               	retlw	high _RN487X_MessageHandler
 10422     187A                     __end_of_RN487X:
 10423                           
 10424                           	psect	stringtext5
 10425     2010                     __pstringtext5:
 10426     2010                     _rn487x_driver_version:
 10427     2010  3400               	retlw	low (STR_1| (0+32768))
 10428     2011  34A0               	retlw	high (STR_1| (0+32768))
 10429     2012                     __end_of_rn487x_driver_version:
 10430                           
 10431                           	psect	stringtext6
 10432     2012                     __pstringtext6:
 10433     2012                     _protocol_version_number:
 10434     2012  3400               	retlw	low (STR_1| (0+32768))
 10435     2013  34A0               	retlw	high (STR_1| (0+32768))
 10436     2014                     __end_of_protocol_version_number:
 10437                           
 10438                           	psect	stringtext7
 10439     1886                     __pstringtext7:
 10440     1886                     RN487X_RebootCmd@reboot:
 10441     1886  3452               	retlw	82
 10442     1887  3465               	retlw	101
 10443     1888  3462               	retlw	98
 10444     1889  346F               	retlw	111
 10445     188A  346F               	retlw	111
 10446     188B  3474               	retlw	116
 10447     188C  3469               	retlw	105
 10448     188D  346E               	retlw	110
 10449     188E  3467               	retlw	103
 10450     188F  340D               	retlw	13
 10451     1890  340A               	retlw	10
 10452     1891                     __end_ofRN487X_RebootCmd@reboot:
 10453                           
 10454                           	psect	stringtext8
 10455     2006                     __pstringtext8:
 10456     2006                     RN487X_EnterDataMode@cmdPrompt:
 10457     2006  3445               	retlw	69
 10458     2007  344E               	retlw	78
 10459     2008  3444               	retlw	68
 10460     2009  340D               	retlw	13
 10461     200A  340A               	retlw	10
 10462     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10463                           
 10464                           	psect	stringtext9
 10465     200B                     __pstringtext9:
 10466     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10467     200B  3443               	retlw	67
 10468     200C  344D               	retlw	77
 10469     200D  3444               	retlw	68
 10470     200E  343E               	retlw	62
 10471     200F  3420               	retlw	32
 10472     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10473                           
 10474                           	psect	nvBANK1
 10475     00EA                     __pnvBANK1:
 10476     00EA                     _IOCAF6_InterruptHandler:
 10477     00EA                     	ds	2
 10478     00EC                     _EUSART2_RxDefaultInterruptHandler:
 10479     00EC                     	ds	2
 10480     00EE                     _EUSART2_TxDefaultInterruptHandler:
 10481     00EE                     	ds	2
 10482                           
 10483                           	psect	nvBANK2
 10484     015D                     __pnvBANK2:
 10485     015D                     _EUSART1_ErrorHandler:
 10486     015D                     	ds	2
 10487     015F                     _EUSART1_OverrunErrorHandler:
 10488     015F                     	ds	2
 10489     0161                     _EUSART1_FramingErrorHandler:
 10490     0161                     	ds	2
 10491     0163                     _EUSART1_RxDefaultInterruptHandler:
 10492     0163                     	ds	2
 10493     0165                     _EUSART1_TxDefaultInterruptHandler:
 10494     0165                     	ds	2
 10495     0167                     _EUSART2_ErrorHandler:
 10496     0167                     	ds	2
 10497     0169                     _EUSART2_OverrunErrorHandler:
 10498     0169                     	ds	2
 10499     016B                     _EUSART2_FramingErrorHandler:
 10500     016B                     	ds	2
 10501     0014                     _TRISC	set	20
 10502     0013                     _TRISB	set	19
 10503     0012                     _TRISA	set	18
 10504     0016                     _TRISE	set	22
 10505     001A                     _LATC	set	26
 10506     0019                     _LATB	set	25
 10507     0018                     _LATA	set	24
 10508     001C                     _LATE	set	28
 10509     0012                     _TRISAbits	set	18
 10510     001A                     _LATCbits	set	26
 10511     000B                     _INTCONbits	set	11
 10512     0018                     _LATAbits	set	24
 10513     000C                     _PORTAbits	set	12
 10514     0119                     _RC1REG	set	281
 10515     011D                     _RC1STAbits	set	285
 10516     011A                     _TX1REG	set	282
 10517     011E                     _TX1STAbits	set	286
 10518     011C                     _SP1BRGH	set	284
 10519     011B                     _SP1BRGL	set	283
 10520     011E                     _TX1STA	set	286
 10521     011D                     _RC1STA	set	285
 10522     011F                     _BAUD1CON	set	287
 10523     018F                     _SSP1STATbits	set	399
 10524     018E                     _SSP1MSK	set	398
 10525     018C                     _SSP1BUF	set	396
 10526     0191                     _SSP1CON2bits	set	401
 10527     018D                     _SSP1ADD	set	397
 10528     0191                     _SSP1CON2	set	401
 10529     0190                     _SSP1CON1	set	400
 10530     018F                     _SSP1STAT	set	399
 10531     0190                     _SSP1CON1bits	set	400
 10532     059E                     _T0CON0bits	set	1438
 10533     059E                     _T0CON0	set	1438
 10534     059C                     _TMR0L	set	1436
 10535     059D                     _TMR0H	set	1437
 10536     059F                     _T0CON1	set	1439
 10537     070F                     _PIR3bits	set	1807
 10538     070C                     _PIR0bits	set	1804
 10539     0716                     _PIE0bits	set	1814
 10540     0719                     _PIE3bits	set	1817
 10541     079D                     _PMD7	set	1949
 10542     079C                     _PMD6	set	1948
 10543     079B                     _PMD5	set	1947
 10544     079A                     _PMD4	set	1946
 10545     0799                     _PMD3	set	1945
 10546     0798                     _PMD2	set	1944
 10547     0797                     _PMD1	set	1943
 10548     0796                     _PMD0	set	1942
 10549     0892                     _OSCTUNE	set	2194
 10550     0890                     _OSCSTAT	set	2192
 10551     0893                     _OSCFRQ	set	2195
 10552     0891                     _OSCEN	set	2193
 10553     088F                     _OSCCON3	set	2191
 10554     088D                     _OSCCON1	set	2189
 10555     0A19                     _RC2REG	set	2585
 10556     0A1D                     _RC2STAbits	set	2589
 10557     0A1A                     _TX2REG	set	2586
 10558     0A1E                     _TX2STAbits	set	2590
 10559     0A1C                     _SP2BRGH	set	2588
 10560     0A1B                     _SP2BRGL	set	2587
 10561     0A1E                     _TX2STA	set	2590
 10562     0A1D                     _RC2STA	set	2589
 10563     0A1F                     _BAUD2CON	set	2591
 10564     1ECB                     _RX1DTPPS	set	7883
 10565     1EC6                     _SSP1DATPPS	set	7878
 10566     1ECD                     _RX2DTPPS	set	7885
 10567     1EC5                     _SSP1CLKPPS	set	7877
 10568     1F1C                     _RB4PPS	set	7964
 10569     1F24                     _RC4PPS	set	7972
 10570     1F1A                     _RB2PPS	set	7962
 10571     1F19                     _RB1PPS	set	7961
 10572     1F3D                     _IOCAPbits	set	7997
 10573     1F3E                     _IOCANbits	set	7998
 10574     1F3F                     _IOCAFbits	set	7999
 10575     1F52                     _INLVLC	set	8018
 10576     1F47                     _INLVLB	set	8007
 10577     1F3C                     _INLVLA	set	7996
 10578     1F51                     _SLRCONC	set	8017
 10579     1F46                     _SLRCONB	set	8006
 10580     1F3B                     _SLRCONA	set	7995
 10581     1F50                     _ODCONC	set	8016
 10582     1F45                     _ODCONB	set	8005
 10583     1F3A                     _ODCONA	set	7994
 10584     1F66                     _ODCONE	set	8038
 10585     1F4F                     _WPUC	set	8015
 10586     1F39                     _WPUA	set	7993
 10587     1F44                     _WPUB	set	8004
 10588     1F65                     _WPUE	set	8037
 10589     1F38                     _ANSELA	set	7992
 10590     1F43                     _ANSELB	set	8003
 10591     1F4E                     _ANSELC	set	8014
 10592                           
 10593                           	psect	stringtext10
 10594     187A                     __pstringtext10:
 10595     187A                     STR_4:
 10596     187A  3453               	retlw	83	;'S'
 10597     187B  3454               	retlw	84	;'T'
 10598     187C  3452               	retlw	82	;'R'
 10599     187D  3445               	retlw	69	;'E'
 10600     187E  3441               	retlw	65	;'A'
 10601     187F  344D               	retlw	77	;'M'
 10602     1880  345F               	retlw	95	;'_'
 10603     1881  344F               	retlw	79	;'O'
 10604     1882  3450               	retlw	80	;'P'
 10605     1883  3445               	retlw	69	;'E'
 10606     1884  344E               	retlw	78	;'N'
 10607     1885  3400               	retlw	0
 10608                           
 10609                           	psect	stringtext11
 10610     1891                     __pstringtext11:
 10611     1891                     STR_2:
 10612     1891  3444               	retlw	68	;'D'
 10613     1892  3449               	retlw	73	;'I'
 10614     1893  3453               	retlw	83	;'S'
 10615     1894  3443               	retlw	67	;'C'
 10616     1895  344F               	retlw	79	;'O'
 10617     1896  344E               	retlw	78	;'N'
 10618     1897  344E               	retlw	78	;'N'
 10619     1898  3445               	retlw	69	;'E'
 10620     1899  3443               	retlw	67	;'C'
 10621     189A  3454               	retlw	84	;'T'
 10622     189B  3400               	retlw	0
 10623                           
 10624                           	psect	stringtext12
 10625     2000                     __pstringtext12:
 10626     2000                     STR_1:
 10627     2000  3431               	retlw	49	;'1'
 10628     2001  342E               	retlw	46	;'.'
 10629     2002  3431               	retlw	49	;'1'
 10630     2003  342E               	retlw	46	;'.'
 10631     2004  3430               	retlw	48	;'0'
 10632     2005  3400               	retlw	0
 10633                           
 10634                           	psect	stringtext13
 10635     0000                     __pstringtext13:
 10636     2000                     
 10637                           	psect	cinit
 10638     0057                     start_initialization:	
 10639                           ; #config settings
 10640                           
 10641     0057                     __initialization:
 10642                           
 10643                           ; Initialize objects allocated to BANK0
 10644     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10645     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10646     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10647     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10648                           
 10649                           ; Initialize objects allocated to BANK2
 10650     005F  30E4               	movlw	low __pidataBANK2
 10651     0060  0084               	movwf	4
 10652     0061  3090               	movlw	(high __pidataBANK2)| (0+128)
 10653     0062  0085               	movwf	5
 10654     0063  304C               	movlw	low __pdataBANK2
 10655     0064  0086               	movwf	6
 10656     0065  3001               	movlw	high __pdataBANK2
 10657     0066  0087               	movwf	7
 10658     0067  3011               	movlw	17
 10659     0068  319F  2772  3180   	fcall	init_ram
 10660                           
 10661                           ; Clear objects allocated to COMMON
 10662     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10663                           
 10664                           ; Clear objects allocated to BANK0
 10665     006C  304A               	movlw	low __pbssBANK0
 10666     006D  0084               	movwf	4
 10667     006E  3000               	movlw	high __pbssBANK0
 10668     006F  0085               	movwf	5
 10669     0070  3024               	movlw	36
 10670     0071  319F  276C  3180   	fcall	clear_ram0
 10671                           
 10672                           ; Clear objects allocated to BANK1
 10673     0074  30A0               	movlw	low __pbssBANK1
 10674     0075  0084               	movwf	4
 10675     0076  3000               	movlw	high __pbssBANK1
 10676     0077  0085               	movwf	5
 10677     0078  304A               	movlw	74
 10678     0079  319F  276C  3180   	fcall	clear_ram0
 10679                           
 10680                           ; Clear objects allocated to BANK2
 10681     007C  3020               	movlw	low __pbssBANK2
 10682     007D  0084               	movwf	4
 10683     007E  3001               	movlw	high __pbssBANK2
 10684     007F  0085               	movwf	5
 10685     0080  302C               	movlw	44
 10686     0081  319F  276C  3180   	fcall	clear_ram0
 10687                           
 10688                           ; Clear objects allocated to BANK3
 10689     0084  30A0               	movlw	low __pbssBANK3
 10690     0085  0084               	movwf	4
 10691     0086  3001               	movlw	high __pbssBANK3
 10692     0087  0085               	movwf	5
 10693     0088  3040               	movlw	64
 10694     0089  319F  276C  3180   	fcall	clear_ram0
 10695                           
 10696                           ; Clear objects allocated to BANK4
 10697     008C  3020               	movlw	low __pbssBANK4
 10698     008D  0084               	movwf	4
 10699     008E  3002               	movlw	high __pbssBANK4
 10700     008F  0085               	movwf	5
 10701     0090  3050               	movlw	80
 10702     0091  319F  276C  3180   	fcall	clear_ram0
 10703                           
 10704                           ; Clear objects allocated to BANK5
 10705     0094  30A0               	movlw	low __pbssBANK5
 10706     0095  0084               	movwf	4
 10707     0096  3002               	movlw	high __pbssBANK5
 10708     0097  0085               	movwf	5
 10709     0098  3050               	movlw	80
 10710     0099  319F  276C  3180   	fcall	clear_ram0
 10711                           
 10712                           ; Clear objects allocated to BANK6
 10713     009C  3020               	movlw	low __pbssBANK6
 10714     009D  0084               	movwf	4
 10715     009E  3003               	movlw	high __pbssBANK6
 10716     009F  0085               	movwf	5
 10717     00A0  3050               	movlw	80
 10718     00A1  319F  276C  3180   	fcall	clear_ram0
 10719     00A4                     end_of_initialization:	
 10720                           ;End of C runtime variable initialization code
 10721                           
 10722     00A4                     __end_of__initialization:
 10723     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10724     00A5  0140               	movlb	0
 10725     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10726                           
 10727                           	psect	bssCOMMON
 10728     007C                     __pbssCOMMON:
 10729     007C                     _eusart2RxHead:
 10730     007C                     	ds	1
 10731                           
 10732                           	psect	bssBANK0
 10733     004A                     __pbssBANK0:
 10734     004A                     _timer0ReloadVal16bit:
 10735     004A                     	ds	2
 10736     004C                     _pHead:
 10737     004C                     	ds	2
 10738     004E                     _asyncBuffer:
 10739     004E                     	ds	2
 10740     0050                     _manufactureId:
 10741     0050                     	ds	2
 10742     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10743     0052                     	ds	2
 10744     0054                     _bitMap:
 10745     0054                     	ds	2
 10746     0056                     _serialIndex:
 10747     0056                     	ds	1
 10748     0057                     _eusart1RxLastError:
 10749     0057                     	ds	1
 10750     0058                     _eusart1RxCount:
 10751     0058                     	ds	1
 10752     0059                     _eusart1RxTail:
 10753     0059                     	ds	1
 10754     005A                     _eusart1RxHead:
 10755     005A                     	ds	1
 10756     005B                     _eusart1TxBufferRemaining:
 10757     005B                     	ds	1
 10758     005C                     _eusart1TxTail:
 10759     005C                     	ds	1
 10760     005D                     _eusart1TxHead:
 10761     005D                     	ds	1
 10762     005E                     _eusart2RxLastError:
 10763     005E                     	ds	1
 10764     005F                     _eusart2RxCount:
 10765     005F                     	ds	1
 10766     0060                     _eusart2RxTail:
 10767     0060                     	ds	1
 10768     0061                     _eusart2TxBufferRemaining:
 10769     0061                     	ds	1
 10770     0062                     _eusart2TxTail:
 10771     0062                     	ds	1
 10772     0063                     _eusart2TxHead:
 10773     0063                     	ds	1
 10774     0064                     RN487X_FilterData@asyncBuffering:
 10775     0064                     	ds	1
 10776     0065                     _dataReady:
 10777     0065                     	ds	1
 10778     0066                     _peek:
 10779     0066                     	ds	1
 10780     0067                     _asyncBufferSize:
 10781     0067                     	ds	1
 10782     0068                     _connected:
 10783     0068                     	ds	1
 10784     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10785     0069                     	ds	1
 10786     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10787     006A                     	ds	1
 10788     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10789     006B                     	ds	1
 10790     006C                     _sequenceNumber:
 10791     006C                     	ds	1
 10792     006D                     __deviceAddress:
 10793     006D                     	ds	1
 10794                           
 10795                           	psect	dataBANK0
 10796     006E                     __pdataBANK0:
 10797     006E                     RN487X_GetInputsValues@F12901:
 10798     006E                     	ds	2
 10799                           
 10800                           	psect	bssBANK1
 10801     00A0                     __pbssBANK1:
 10802     00A0                     _I2C1_Status:
 10803     00A0                     	ds	30
 10804     00BE                     _eusart1RxStatusBuffer:
 10805     00BE                     	ds	8
 10806     00C6                     _eusart1TxBuffer:
 10807     00C6                     	ds	8
 10808     00CE                     _eusart2RxStatusBuffer:
 10809     00CE                     	ds	8
 10810     00D6                     _eusart2RxBuffer:
 10811     00D6                     	ds	8
 10812     00DE                     _eusart2TxBuffer:
 10813     00DE                     	ds	8
 10814     00E6                     _i2c1_driver_i2cISR:
 10815     00E6                     	ds	2
 10816     00E8                     _i2c1_driver_busCollisionISR:
 10817     00E8                     	ds	2
 10818                           
 10819                           	psect	bssBANK2
 10820     0120                     __pbssBANK2:
 10821     0120                     _i2c_status:
 10822     0120                     	ds	36
 10823     0144                     _eusart1RxBuffer:
 10824     0144                     	ds	8
 10825                           
 10826                           	psect	dataBANK2
 10827     014C                     __pdataBANK2:
 10828     014C                     __hex:
 10829     014C                     	ds	17
 10830                           
 10831                           	psect	bssBANK3
 10832     01A0                     __pbssBANK3:
 10833     01A0                     _cmdBuf:
 10834     01A0                     	ds	64
 10835                           
 10836                           	psect	bssBANK4
 10837     0220                     __pbssBANK4:
 10838     0220                     _lightBlueSerial:
 10839     0220                     	ds	80
 10840                           
 10841                           	psect	bssBANK5
 10842     02A0                     __pbssBANK5:
 10843     02A0                     _statusBuffer:
 10844     02A0                     	ds	80
 10845                           
 10846                           	psect	bssBANK6
 10847     0320                     __pbssBANK6:
 10848     0320                     _statusBuffer@main$F4242:
 10849     0320                     	ds	80
 10850                           
 10851                           	psect	inittext
 10852     1F72                     init_ram:
 10853     1F72  00FE               	movwf	btemp
 10854     1F73                     initloop:
 10855     1F73  0012               	moviw fsr0++
 10856     1F74  001E               	movwi fsr1++
 10857     1F75  0BFE               	decfsz	btemp,f
 10858     1F76  2F73               	goto	initloop
 10859     1F77  3400               	retlw	0
 10860                           
 10861                           	psect	clrtext
 10862     1F6C                     clear_ram0:	
 10863                           ;	Called with FSR0 containing the base address, and
 10864                           ;	WREG with the size to clear
 10865                           
 10866     1F6C  0064               	clrwdt	;clear the watchdog before getting into this loop
 10867     1F6D                     clrloop0:
 10868     1F6D  0180               	clrf	0	;clear RAM location pointed to by FSR
 10869     1F6E  3101               	addfsr 0,1
 10870     1F6F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10871     1F70  2F6D               	goto	clrloop0	;have we reached the end yet?
 10872     1F71  3400               	retlw	0	;all done for this memory range, return
 10873                           
 10874                           	psect	cstackBANK2
 10875     016D                     __pcstackBANK2:
 10876     016D                     _main$5433:
 10877                           
 10878                           ; 1 bytes @ 0x0
 10879     016D                     	ds	1
 10880                           
 10881                           	psect	cstackCOMMON
 10882     0070                     __pcstackCOMMON:
 10883     0070                     ?_BMA253_NewAccelDataRdyY:
 10884     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10885                           ; 1 bytes @ 0x0
 10886                           
 10887     0070                     ?_readRegister:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890     0070                     ?_TMAG5273_GetTemperatureValue:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905     0070                     ?_RN487X_EnterCmdMode:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908     0070                     ?_RN487X_EnterDataMode:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911     0070                     ?_EUSART1_Read:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914     0070                     ?_EUSART1_is_rx_ready:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917     0070                     ?_EUSART1_Receive_ISR:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920     0070                     ?_EUSART1_is_tx_done:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923     0070                     ?_EUSART1_Transmit_ISR:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926     0070                     ??_EUSART1_Transmit_ISR:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929     0070                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932     0070                     ?_EUSART2_Read:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935     0070                     ?_EUSART2_is_rx_ready:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938     0070                     ?_EUSART2_Receive_ISR:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941     0070                     ?_EUSART2_is_tx_done:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944     0070                     ?_EUSART2_Transmit_ISR:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947     0070                     ??_EUSART2_Transmit_ISR:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950     0070                     ?_EUSART2_Initialize:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953     0070                     ?_I2C1_Open:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956     0070                     ?_I2C1_MasterWrite:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959     0070                     ?_I2C1_Close:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962     0070                     ?_isConnected:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965     0070                     ?_setMagneticChannel:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968     0070                     ?_setTemperatureEn:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971     0070                     ?_setOperatingMode:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974     0070                     ?_setXYAxisRange:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977     0070                     ?_setZAxisRange:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0070                     ?_getError:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0070                     ?_getLowPower:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0070                     ?_getOperatingMode:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0070                     ?_getMagneticChannel:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0070                     ?_getTemperatureEN:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995     0070                     ?_getAngleEn:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998     0070                     ?_RN487X_IsConnected:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001     0070                     ?_RN487X_Read:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004     0070                     ?_RN487X_DataReady:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007     0070                     ?_RN487X_Read@rn487x_interface$F1844:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010     0070                     ?_RN487X_is_tx_done:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013     0070                     ?_RN487X_is_rx_ready:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016     0070                     ?_RN487X_FilterData:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031     0070                     ?_EUSART2_DefaultErrorHandler:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034     0070                     ?_EUSART2_RxDataHandler:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037     0070                     ??_EUSART2_RxDataHandler:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052     0070                     ?_EUSART1_DefaultErrorHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055     0070                     ?_EUSART1_RxDataHandler:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058     0070                     ??_EUSART1_RxDataHandler:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061     0070                     ?_PIN_MANAGER_IOC:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064     0070                     ??_PIN_MANAGER_IOC:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067     0070                     ?_PMD_Initialize:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070     0070                     ?_I2C1_Initialize:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073     0070                     ?_PIN_MANAGER_Initialize:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076     0070                     ?_OSCILLATOR_Initialize:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079     0070                     ?_TMR0_Initialize:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088     0070                     ?_IOCAF6_ISR:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091     0070                     ??_IOCAF6_ISR:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094     0070                     ?_I2C1_DO_IDLE:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103     0070                     ?_I2C1_DO_TX:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106     0070                     ?_I2C1_DO_RX:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109     0070                     ?_I2C1_DO_RCEN:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112     0070                     ?_I2C1_DO_TX_EMPTY:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121     0070                     ?_I2C1_DO_SEND_RESTART:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124     0070                     ?_I2C1_DO_SEND_STOP:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127     0070                     ?_I2C1_DO_RX_ACK:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136     0070                     ?_I2C1_DO_RESET:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142     0070                     ?_I2C1_MasterClearIrq:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145     0070                     ?_I2C1_MasterOpen:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148     0070                     ?_I2C1_MasterDisableIrq:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151     0070                     ?_I2C1_MasterClose:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154     0070                     ?_I2C1_MasterStart:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157     0070                     ?_I2C1_Poller:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160     0070                     ?_I2C1_MasterWaitForEvent:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163     0070                     ?_I2C1_MasterFsm:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166     0070                     ?_I2C1_MasterIsNack:	
 11167                           ; 1 bytes @ 0x0
 11168                           
 11169     0070                     ?_I2C1_MasterSendTxData:	
 11170                           ; 1 bytes @ 0x0
 11171                           
 11172     0070                     ?_I2C1_MasterGetRxData:	
 11173                           ; 1 bytes @ 0x0
 11174                           
 11175     0070                     ?_I2C1_MasterSendAck:	
 11176                           ; 1 bytes @ 0x0
 11177                           
 11178     0070                     ?_I2C1_MasterStartRx:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181     0070                     ?_I2C1_MasterSetIrq:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184     0070                     ?_I2C1_MasterEnableRestart:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187     0070                     ?_I2C1_MasterStop:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190     0070                     ?_I2C1_MasterSendNack:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193     0070                     ?_BMA253_GetAccelDataY:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196     0070                     ?_BMA253_GetAccelDataZ:	
 11197                           ; 1 bytes @ 0x0
 11198                           
 11199     0070                     ?_BMA253_GetAccelDataXYZ:	
 11200                           ; 1 bytes @ 0x0
 11201                           
 11202     0070                     ?_LIGHTBLUE_Initialize:	
 11203                           ; 1 bytes @ 0x0
 11204                           
 11205     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11206                           ; 1 bytes @ 0x0
 11207                           
 11208     0070                     ?_LIGHTBLUE_AccelSensor:	
 11209                           ; 1 bytes @ 0x0
 11210                           
 11211     0070                     ?_LIGHTBLUE_PushButton:	
 11212                           ; 1 bytes @ 0x0
 11213                           
 11214     0070                     ?_LIGHTBLUE_LedState:	
 11215                           ; 1 bytes @ 0x0
 11216                           
 11217     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220     0070                     ?_LIGHTBLUE_SendSerialData:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229     0070                     ?_begin:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232     0070                     ?_getDeviceStatus:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235     0070                     ?_rn487x_PrintMessageStart:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238     0070                     ?_rn487x_PrintMessageEnd:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244     0070                     ?_RN487X_Init:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247     0070                     ?_RN487X_ReadDefaultResponse:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250     0070                     ?_INTERRUPT_InterruptManager:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253     0070                     ?_SYSTEM_Initialize:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256     0070                     ?_TMR0_HasOverflowOccured:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259     0070                     ?_I2C1_MasterOperation:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262     0070                     ?_main:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265                           
 11266                           ; 2 bytes @ 0x0
 11267     0070                     	ds	1
 11268     0071                     ??_LIGHTBLUE_GetButtonValue:
 11269     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11270                           ; 1 bytes @ 0x1
 11271                           
 11272     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11273                           ; 1 bytes @ 0x1
 11274                           
 11275     0071                     ??_EUSART1_Read:	
 11276                           ; 1 bytes @ 0x1
 11277                           
 11278     0071                     ?_EUSART1_Write:	
 11279                           ; 1 bytes @ 0x1
 11280                           
 11281     0071                     ??_EUSART1_is_rx_ready:	
 11282                           ; 1 bytes @ 0x1
 11283                           
 11284     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11285                           ; 1 bytes @ 0x1
 11286                           
 11287     0071                     ??_EUSART1_Receive_ISR:	
 11288                           ; 1 bytes @ 0x1
 11289                           
 11290     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11291                           ; 1 bytes @ 0x1
 11292                           
 11293     0071                     ??_EUSART1_is_tx_done:	
 11294                           ; 1 bytes @ 0x1
 11295                           
 11296     0071                     ??_EUSART2_Read:	
 11297                           ; 1 bytes @ 0x1
 11298                           
 11299     0071                     ?_EUSART2_Write:	
 11300                           ; 1 bytes @ 0x1
 11301                           
 11302     0071                     ??_EUSART2_is_rx_ready:	
 11303                           ; 1 bytes @ 0x1
 11304                           
 11305     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11306                           ; 1 bytes @ 0x1
 11307                           
 11308     0071                     ??_EUSART2_Receive_ISR:	
 11309                           ; 1 bytes @ 0x1
 11310                           
 11311     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11312                           ; 1 bytes @ 0x1
 11313                           
 11314     0071                     ??_EUSART2_is_tx_done:	
 11315                           ; 1 bytes @ 0x1
 11316                           
 11317     0071                     ?_I2C1_SetBuffer:	
 11318                           ; 1 bytes @ 0x1
 11319                           
 11320     0071                     ??_I2C1_Open:	
 11321                           ; 1 bytes @ 0x1
 11322                           
 11323     0071                     ??_I2C1_Close:	
 11324                           ; 1 bytes @ 0x1
 11325                           
 11326     0071                     ?_bitWrite:	
 11327                           ; 1 bytes @ 0x1
 11328                           
 11329     0071                     ?_bitRead:	
 11330                           ; 1 bytes @ 0x1
 11331                           
 11332     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11333                           ; 1 bytes @ 0x1
 11334                           
 11335     0071                     ??_RN487X_IsConnected:	
 11336                           ; 1 bytes @ 0x1
 11337                           
 11338     0071                     ??_RN487X_is_tx_done:	
 11339                           ; 1 bytes @ 0x1
 11340                           
 11341     0071                     ??_RN487X_is_rx_ready:	
 11342                           ; 1 bytes @ 0x1
 11343                           
 11344     0071                     ?_RN487X_IndicateRx:	
 11345                           ; 1 bytes @ 0x1
 11346                           
 11347     0071                     ?_RN487X_Reset:	
 11348                           ; 1 bytes @ 0x1
 11349                           
 11350     0071                     ?_RN487X_SetSystemMode:	
 11351                           ; 1 bytes @ 0x1
 11352                           
 11353     0071                     ?_DELAY_milliseconds:	
 11354                           ; 1 bytes @ 0x1
 11355                           
 11356     0071                     ?_strcpy:	
 11357                           ; 1 bytes @ 0x1
 11358                           
 11359     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11360                           ; 1 bytes @ 0x1
 11361                           
 11362     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11363                           ; 1 bytes @ 0x1
 11364                           
 11365     0071                     ?_EUSART2_SetErrorHandler:	
 11366                           ; 1 bytes @ 0x1
 11367                           
 11368     0071                     ??_EUSART2_DefaultErrorHandler:	
 11369                           ; 1 bytes @ 0x1
 11370                           
 11371     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11372                           ; 1 bytes @ 0x1
 11373                           
 11374     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11375                           ; 1 bytes @ 0x1
 11376                           
 11377     0071                     ?_EUSART1_SetErrorHandler:	
 11378                           ; 1 bytes @ 0x1
 11379                           
 11380     0071                     ??_EUSART1_DefaultErrorHandler:	
 11381                           ; 1 bytes @ 0x1
 11382                           
 11383     0071                     ??_PMD_Initialize:	
 11384                           ; 1 bytes @ 0x1
 11385                           
 11386     0071                     ??_I2C1_Initialize:	
 11387                           ; 1 bytes @ 0x1
 11388                           
 11389     0071                     ??_OSCILLATOR_Initialize:	
 11390                           ; 1 bytes @ 0x1
 11391                           
 11392     0071                     ??_TMR0_Initialize:	
 11393                           ; 1 bytes @ 0x1
 11394                           
 11395     0071                     ?_IOCAF6_SetInterruptHandler:	
 11396                           ; 1 bytes @ 0x1
 11397                           
 11398     0071                     ??_I2C1_DO_IDLE:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11402                           ; 1 bytes @ 0x1
 11403                           
 11404     0071                     ??_I2C1_DO_RCEN:	
 11405                           ; 1 bytes @ 0x1
 11406                           
 11407     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11408                           ; 1 bytes @ 0x1
 11409                           
 11410     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11411                           ; 1 bytes @ 0x1
 11412                           
 11413     0071                     ??_I2C1_DO_SEND_RESTART:	
 11414                           ; 1 bytes @ 0x1
 11415                           
 11416     0071                     ??_I2C1_DO_SEND_STOP:	
 11417                           ; 1 bytes @ 0x1
 11418                           
 11419     0071                     ??_I2C1_DO_RX_ACK:	
 11420                           ; 1 bytes @ 0x1
 11421                           
 11422     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11423                           ; 1 bytes @ 0x1
 11424                           
 11425     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11426                           ; 1 bytes @ 0x1
 11427                           
 11428     0071                     ??_I2C1_DO_RESET:	
 11429                           ; 1 bytes @ 0x1
 11430                           
 11431     0071                     ??_I2C1_MasterClearIrq:	
 11432                           ; 1 bytes @ 0x1
 11433                           
 11434     0071                     ??_I2C1_MasterOpen:	
 11435                           ; 1 bytes @ 0x1
 11436                           
 11437     0071                     ??_I2C1_MasterDisableIrq:	
 11438                           ; 1 bytes @ 0x1
 11439                           
 11440     0071                     ??_I2C1_MasterClose:	
 11441                           ; 1 bytes @ 0x1
 11442                           
 11443     0071                     ??_I2C1_MasterStart:	
 11444                           ; 1 bytes @ 0x1
 11445                           
 11446     0071                     ?_I2C1_SetCallback:	
 11447                           ; 1 bytes @ 0x1
 11448                           
 11449     0071                     ??_I2C1_MasterWaitForEvent:	
 11450                           ; 1 bytes @ 0x1
 11451                           
 11452     0071                     ??_I2C1_MasterIsNack:	
 11453                           ; 1 bytes @ 0x1
 11454                           
 11455     0071                     ??_I2C1_MasterSendTxData:	
 11456                           ; 1 bytes @ 0x1
 11457                           
 11458     0071                     ??_I2C1_MasterGetRxData:	
 11459                           ; 1 bytes @ 0x1
 11460                           
 11461     0071                     ??_I2C1_MasterSendAck:	
 11462                           ; 1 bytes @ 0x1
 11463                           
 11464     0071                     ??_I2C1_MasterStartRx:	
 11465                           ; 1 bytes @ 0x1
 11466                           
 11467     0071                     ??_I2C1_MasterSetIrq:	
 11468                           ; 1 bytes @ 0x1
 11469                           
 11470     0071                     ??_I2C1_MasterEnableRestart:	
 11471                           ; 1 bytes @ 0x1
 11472                           
 11473     0071                     ??_I2C1_MasterStop:	
 11474                           ; 1 bytes @ 0x1
 11475                           
 11476     0071                     ??_I2C1_MasterSendNack:	
 11477                           ; 1 bytes @ 0x1
 11478                           
 11479     0071                     ??_LIGHTBLUE_Initialize:	
 11480                           ; 1 bytes @ 0x1
 11481                           
 11482     0071                     ??_INTERRUPT_InterruptManager:	
 11483                           ; 1 bytes @ 0x1
 11484                           
 11485     0071                     ??_TMR0_HasOverflowOccured:	
 11486                           ; 1 bytes @ 0x1
 11487                           
 11488     0071                     ?_strlen:	
 11489                           ; 1 bytes @ 0x1
 11490                           
 11491     0071                     ?_swap:	
 11492                           ; 2 bytes @ 0x1
 11493                           
 11494     0071                     ?_strncmp:	
 11495                           ; 2 bytes @ 0x1
 11496                           
 11497     0071                     ?_strchr:	
 11498                           ; 2 bytes @ 0x1
 11499                           
 11500     0071                     RN487X_Reset@value:	
 11501                           ; 2 bytes @ 0x1
 11502                           
 11503     0071                     RN487X_IndicateRx@value:	
 11504                           ; 1 bytes @ 0x1
 11505                           
 11506     0071                     RN487X_SetSystemMode@mode:	
 11507                           ; 1 bytes @ 0x1
 11508                           
 11509     0071                     EUSART2_Write@txData:	
 11510                           ; 1 bytes @ 0x1
 11511                           
 11512     0071                     EUSART1_Write@txData:	
 11513                           ; 1 bytes @ 0x1
 11514                           
 11515     0071                     I2C1_Open@address:	
 11516                           ; 1 bytes @ 0x1
 11517                           
 11518     0071                     I2C1_Close@returnValue:	
 11519                           ; 1 bytes @ 0x1
 11520                           
 11521     0071                     I2C1_MasterSendTxData@data:	
 11522                           ; 1 bytes @ 0x1
 11523                           
 11524     0071                     bitRead@reg:	
 11525                           ; 1 bytes @ 0x1
 11526                           
 11527     0071                     bitWrite@reg:	
 11528                           ; 2 bytes @ 0x1
 11529                           
 11530     0071                     swap@reg:	
 11531                           ; 2 bytes @ 0x1
 11532                           
 11533     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11534                           ; 2 bytes @ 0x1
 11535                           
 11536     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11537                           ; 2 bytes @ 0x1
 11538                           
 11539     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11540                           ; 2 bytes @ 0x1
 11541                           
 11542     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11543                           ; 2 bytes @ 0x1
 11544                           
 11545     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11546                           ; 2 bytes @ 0x1
 11547                           
 11548     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11549                           ; 2 bytes @ 0x1
 11550                           
 11551     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11552                           ; 2 bytes @ 0x1
 11553                           
 11554     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11555                           ; 2 bytes @ 0x1
 11556                           
 11557     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11558                           ; 2 bytes @ 0x1
 11559                           
 11560     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11561                           ; 2 bytes @ 0x1
 11562                           
 11563     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11564                           ; 2 bytes @ 0x1
 11565                           
 11566     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11567                           ; 2 bytes @ 0x1
 11568                           
 11569     0071                     I2C1_SetBuffer@buffer:	
 11570                           ; 2 bytes @ 0x1
 11571                           
 11572     0071                     I2C1_SetCallback@cb:	
 11573                           ; 2 bytes @ 0x1
 11574                           
 11575     0071                     DELAY_milliseconds@milliseconds:	
 11576                           ; 2 bytes @ 0x1
 11577                           
 11578     0071                     strcpy@src:	
 11579                           ; 2 bytes @ 0x1
 11580                           
 11581     0071                     strlen@s:	
 11582                           ; 2 bytes @ 0x1
 11583                           
 11584     0071                     strchr@s:	
 11585                           ; 2 bytes @ 0x1
 11586                           
 11587     0071                     strncmp@l:	
 11588                           ; 2 bytes @ 0x1
 11589                           
 11590                           
 11591                           ; 2 bytes @ 0x1
 11592     0071                     	ds	1
 11593     0072                     ??_EUSART1_Write:
 11594     0072                     ??_EUSART2_Write:	
 11595                           ; 1 bytes @ 0x2
 11596                           
 11597     0072                     ??_RN487X_IndicateRx:	
 11598                           ; 1 bytes @ 0x2
 11599                           
 11600     0072                     ??_RN487X_Reset:	
 11601                           ; 1 bytes @ 0x2
 11602                           
 11603     0072                     ??_RN487X_SetSystemMode:	
 11604                           ; 1 bytes @ 0x2
 11605                           
 11606     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11607                           ; 1 bytes @ 0x2
 11608                           
 11609     0072                     EUSART2_Read@readValue:	
 11610                           ; 1 bytes @ 0x2
 11611                           
 11612     0072                     EUSART1_Read@readValue:	
 11613                           ; 1 bytes @ 0x2
 11614                           
 11615     0072                     I2C1_Open@returnValue:	
 11616                           ; 1 bytes @ 0x2
 11617                           
 11618                           
 11619                           ; 1 bytes @ 0x2
 11620     0072                     	ds	1
 11621     0073                     ??_strlen:
 11622     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11623                           ; 1 bytes @ 0x3
 11624                           
 11625     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11626                           ; 1 bytes @ 0x3
 11627                           
 11628     0073                     ??_EUSART1_Initialize:	
 11629                           ; 1 bytes @ 0x3
 11630                           
 11631     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11632                           ; 1 bytes @ 0x3
 11633                           
 11634     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11635                           ; 1 bytes @ 0x3
 11636                           
 11637     0073                     ??_EUSART2_Initialize:	
 11638                           ; 1 bytes @ 0x3
 11639                           
 11640     0073                     ??_swap:	
 11641                           ; 1 bytes @ 0x3
 11642                           
 11643     0073                     ??_RN487X_Read@rn487x_interface$F1846:	
 11644                           ; 1 bytes @ 0x3
 11645                           
 11646     0073                     ??_DELAY_milliseconds:	
 11647                           ; 1 bytes @ 0x3
 11648                           
 11649     0073                     ??_strcpy:	
 11650                           ; 1 bytes @ 0x3
 11651                           
 11652     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11653                           ; 1 bytes @ 0x3
 11654                           
 11655     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11656                           ; 1 bytes @ 0x3
 11657                           
 11658     0073                     ??_EUSART2_SetErrorHandler:	
 11659                           ; 1 bytes @ 0x3
 11660                           
 11661     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11662                           ; 1 bytes @ 0x3
 11663                           
 11664     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11665                           ; 1 bytes @ 0x3
 11666                           
 11667     0073                     ??_EUSART1_SetErrorHandler:	
 11668                           ; 1 bytes @ 0x3
 11669                           
 11670     0073                     ??_PIN_MANAGER_Initialize:	
 11671                           ; 1 bytes @ 0x3
 11672                           
 11673     0073                     ??_IOCAF6_SetInterruptHandler:	
 11674                           ; 1 bytes @ 0x3
 11675                           
 11676     0073                     ??_rn487x_PrintMessageStart:	
 11677                           ; 1 bytes @ 0x3
 11678                           
 11679     0073                     ??_rn487x_PrintMessageEnd:	
 11680                           ; 1 bytes @ 0x3
 11681                           
 11682     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11683                           ; 1 bytes @ 0x3
 11684                           
 11685     0073                     ?_RN487X_ReadMsg:	
 11686                           ; 1 bytes @ 0x3
 11687                           
 11688     0073                     ??_RN487X_ReadDefaultResponse:	
 11689                           ; 1 bytes @ 0x3
 11690                           
 11691     0073                     ??_SYSTEM_Initialize:	
 11692                           ; 1 bytes @ 0x3
 11693                           
 11694     0073                     bitRead@position:	
 11695                           ; 1 bytes @ 0x3
 11696                           
 11697     0073                     bitWrite@position:	
 11698                           ; 1 bytes @ 0x3
 11699                           
 11700     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11701                           ; 1 bytes @ 0x3
 11702                           
 11703     0073                     RN487X_SetAsyncMessageHandler@len:	
 11704                           ; 1 bytes @ 0x3
 11705                           
 11706     0073                     I2C1_SetCallback@ptr:	
 11707                           ; 1 bytes @ 0x3
 11708                           
 11709     0073                     RN487X_ReadMsg@expectedMsg:	
 11710                           ; 1 bytes @ 0x3
 11711                           
 11712     0073                     I2C1_SetBuffer@bufferSize:	
 11713                           ; 2 bytes @ 0x3
 11714                           
 11715     0073                     strchr@c:	
 11716                           ; 2 bytes @ 0x3
 11717                           
 11718     0073                     strncmp@r:	
 11719                           ; 2 bytes @ 0x3
 11720                           
 11721     0073                     RN487X_ReadDefaultResponse@resp:	
 11722                           ; 2 bytes @ 0x3
 11723                           
 11724                           
 11725                           ; 3 bytes @ 0x3
 11726     0073                     	ds	1
 11727     0074                     ??_bitRead:
 11728     0074                     ??_RN487X_SetAsyncMessageHandler:	
 11729                           ; 1 bytes @ 0x4
 11730                           
 11731     0074                     ?_RN487X_Delay:	
 11732                           ; 1 bytes @ 0x4
 11733                           
 11734     0074                     ??_I2C1_SetCallback:	
 11735                           ; 1 bytes @ 0x4
 11736                           
 11737     0074                     bitWrite@value:	
 11738                           ; 1 bytes @ 0x4
 11739                           
 11740     0074                     I2C1_SetCallback@idx:	
 11741                           ; 1 bytes @ 0x4
 11742                           
 11743     0074                     RN487X_Delay@delayCount:	
 11744                           ; 1 bytes @ 0x4
 11745                           
 11746     0074                     strlen@a:	
 11747                           ; 2 bytes @ 0x4
 11748                           
 11749                           
 11750                           ; 2 bytes @ 0x4
 11751     0074                     	ds	1
 11752     0075                     ??_I2C1_SetBuffer:
 11753     0075                     ?_I2C1_SetDataCompleteCallback:	
 11754                           ; 1 bytes @ 0x5
 11755                           
 11756     0075                     ?_I2C1_SetAddressNackCallback:	
 11757                           ; 1 bytes @ 0x5
 11758                           
 11759     0075                     ??_bitWrite:	
 11760                           ; 1 bytes @ 0x5
 11761                           
 11762     0075                     ??_strchr:	
 11763                           ; 1 bytes @ 0x5
 11764                           
 11765     0075                     RN487X_ReadMsg@msgLen:	
 11766                           ; 1 bytes @ 0x5
 11767                           
 11768     0075                     strcpy@d:	
 11769                           ; 1 bytes @ 0x5
 11770                           
 11771     0075                     I2C1_SetDataCompleteCallback@cb:	
 11772                           ; 1 bytes @ 0x5
 11773                           
 11774     0075                     I2C1_SetAddressNackCallback@cb:	
 11775                           ; 2 bytes @ 0x5
 11776                           
 11777     0075                     strncmp@n:	
 11778                           ; 2 bytes @ 0x5
 11779                           
 11780                           
 11781                           ; 2 bytes @ 0x5
 11782     0075                     	ds	1
 11783     0076                     ?_LIGHTBLUE_SplitByte:
 11784     0076                     ?_RN487X_Write:	
 11785                           ; 1 bytes @ 0x6
 11786                           
 11787     0076                     ??_RN487X_Delay:	
 11788                           ; 1 bytes @ 0x6
 11789                           
 11790     0076                     ??_RN487X_Init:	
 11791                           ; 1 bytes @ 0x6
 11792                           
 11793     0076                     ??_RN487X_ReadMsg:	
 11794                           ; 1 bytes @ 0x6
 11795                           
 11796     0076                     LIGHTBLUE_SplitByte@value:	
 11797                           ; 1 bytes @ 0x6
 11798                           
 11799     0076                     RN487X_Write@txData:	
 11800                           ; 1 bytes @ 0x6
 11801                           
 11802     0076                     RN487X_ReadDefaultResponse@status:	
 11803                           ; 1 bytes @ 0x6
 11804                           
 11805     0076                     strcpy@dest:	
 11806                           ; 1 bytes @ 0x6
 11807                           
 11808                           
 11809                           ; 1 bytes @ 0x6
 11810     0076                     	ds	1
 11811     0077                     ?_LIGHTBLUE_SendPacket:
 11812     0077                     ??_LIGHTBLUE_SplitByte:	
 11813                           ; 1 bytes @ 0x7
 11814                           
 11815     0077                     ??_RN487X_Write:	
 11816                           ; 1 bytes @ 0x7
 11817                           
 11818     0077                     ??_strncmp:	
 11819                           ; 1 bytes @ 0x7
 11820                           
 11821     0077                     ??_LIGHTBLUE_SendSerialData:	
 11822                           ; 1 bytes @ 0x7
 11823                           
 11824     0077                     ?_rn487x_PrintMessage:	
 11825                           ; 1 bytes @ 0x7
 11826                           
 11827     0077                     ?_RN487X_SendCmd:	
 11828                           ; 1 bytes @ 0x7
 11829                           
 11830     0077                     LIGHTBLUE_SendPacket@payload:	
 11831                           ; 1 bytes @ 0x7
 11832                           
 11833     0077                     RN487X_SendCmd@cmdLen:	
 11834                           ; 1 bytes @ 0x7
 11835                           
 11836     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11837                           ; 1 bytes @ 0x7
 11838                           
 11839     0077                     rn487x_PrintMessage@passedMessage:	
 11840                           ; 1 bytes @ 0x7
 11841                           
 11842     0077                     I2C1_SetAddressNackCallback@ptr:	
 11843                           ; 2 bytes @ 0x7
 11844                           
 11845                           
 11846                           ; 2 bytes @ 0x7
 11847     0077                     	ds	1
 11848     0078                     ??_LIGHTBLUE_SendPacket:
 11849     0078                     ??_I2C1_SetDataCompleteCallback:	
 11850                           ; 1 bytes @ 0x8
 11851                           
 11852     0078                     ?_rd1RegCompleteHandler:	
 11853                           ; 1 bytes @ 0x8
 11854                           
 11855     0078                     ?_rd2RegCompleteHandler:	
 11856                           ; 1 bytes @ 0x8
 11857                           
 11858     0078                     ?_wr1RegCompleteHandler:	
 11859                           ; 1 bytes @ 0x8
 11860                           
 11861     0078                     ?_wr2RegCompleteHandler:	
 11862                           ; 1 bytes @ 0x8
 11863                           
 11864     0078                     ?_rdBlkRegCompleteHandler:	
 11865                           ; 1 bytes @ 0x8
 11866                           
 11867     0078                     ?_I2C1_CallbackReturnStop:	
 11868                           ; 1 bytes @ 0x8
 11869                           
 11870     0078                     ?_I2C1_CallbackReturnReset:	
 11871                           ; 1 bytes @ 0x8
 11872                           
 11873     0078                     ?_wr1RegCompleteHandler@strncmp$F4850:	
 11874                           ; 1 bytes @ 0x8
 11875                           
 11876     0078                     ?_rd1RegCompleteHandler@strncmp$F4856:	
 11877                           ; 1 bytes @ 0x8
 11878                           
 11879     0078                     ?_rd2RegCompleteHandler@strncmp$F4859:	
 11880                           ; 1 bytes @ 0x8
 11881                           
 11882     0078                     ?_wr2RegCompleteHandler@strncmp$F4862:	
 11883                           ; 1 bytes @ 0x8
 11884                           
 11885     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4868:	
 11886                           ; 1 bytes @ 0x8
 11887                           
 11888     0078                     ??_RN487X_SendCmd:	
 11889                           ; 1 bytes @ 0x8
 11890                           
 11891     0078                     ?_strstr:	
 11892                           ; 1 bytes @ 0x8
 11893                           
 11894     0078                     LIGHTBLUE_SendSerialData@length:	
 11895                           ; 2 bytes @ 0x8
 11896                           
 11897     0078                     LIGHTBLUE_SplitByte@payload:	
 11898                           ; 1 bytes @ 0x8
 11899                           
 11900     0078                     wr1RegCompleteHandler@p:	
 11901                           ; 1 bytes @ 0x8
 11902                           
 11903     0078                     rd1RegCompleteHandler@p:	
 11904                           ; 1 bytes @ 0x8
 11905                           
 11906     0078                     rd2RegCompleteHandler@p:	
 11907                           ; 1 bytes @ 0x8
 11908                           
 11909     0078                     wr2RegCompleteHandler@p:	
 11910                           ; 1 bytes @ 0x8
 11911                           
 11912     0078                     rdBlkRegCompleteHandler@p:	
 11913                           ; 1 bytes @ 0x8
 11914                           
 11915     0078                     swap@upperByte:	
 11916                           ; 1 bytes @ 0x8
 11917                           
 11918     0078                     rd1RegCompleteHandler@i2c1_master_example$F1701@ptr:	
 11919                           ; 1 bytes @ 0x8
 11920                           
 11921     0078                     rd2RegCompleteHandler@i2c1_master_example$F1712@ptr:	
 11922                           ; 1 bytes @ 0x8
 11923                           
 11924     0078                     wr1RegCompleteHandler@i2c1_master_example$F1718@ptr:	
 11925                           ; 1 bytes @ 0x8
 11926                           
 11927     0078                     wr2RegCompleteHandler@i2c1_master_example$F1724@ptr:	
 11928                           ; 1 bytes @ 0x8
 11929                           
 11930     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr:	
 11931                           ; 1 bytes @ 0x8
 11932                           
 11933     0078                     RN487X_ReadMsg@resp:	
 11934                           ; 1 bytes @ 0x8
 11935                           
 11936     0078                     I2C1_CallbackReturnStop@funPtr:	
 11937                           ; 1 bytes @ 0x8
 11938                           
 11939     0078                     I2C1_CallbackReturnReset@funPtr:	
 11940                           ; 1 bytes @ 0x8
 11941                           
 11942     0078                     bitRead@mask:	
 11943                           ; 1 bytes @ 0x8
 11944                           
 11945     0078                     strstr@h:	
 11946                           ; 2 bytes @ 0x8
 11947                           
 11948                           
 11949                           ; 2 bytes @ 0x8
 11950     0078                     	ds	1
 11951     0079                     ?_LIGHTBLUE_SplitWord:
 11952     0079                     ??_I2C1_SetAddressNackCallback:	
 11953                           ; 1 bytes @ 0x9
 11954                           
 11955     0079                     ??_rd1RegCompleteHandler:	
 11956                           ; 1 bytes @ 0x9
 11957                           
 11958     0079                     ??_rd2RegCompleteHandler:	
 11959                           ; 1 bytes @ 0x9
 11960                           
 11961     0079                     ??_wr1RegCompleteHandler:	
 11962                           ; 1 bytes @ 0x9
 11963                           
 11964     0079                     ??_wr2RegCompleteHandler:	
 11965                           ; 1 bytes @ 0x9
 11966                           
 11967     0079                     ??_rdBlkRegCompleteHandler:	
 11968                           ; 1 bytes @ 0x9
 11969                           
 11970     0079                     ??_I2C1_DO_TX:	
 11971                           ; 1 bytes @ 0x9
 11972                           
 11973     0079                     ??_I2C1_DO_RX:	
 11974                           ; 1 bytes @ 0x9
 11975                           
 11976     0079                     ??_I2C1_DO_TX_EMPTY:	
 11977                           ; 1 bytes @ 0x9
 11978                           
 11979     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11980                           ; 1 bytes @ 0x9
 11981                           
 11982     0079                     ??_I2C1_CallbackReturnStop:	
 11983                           ; 1 bytes @ 0x9
 11984                           
 11985     0079                     ??_I2C1_CallbackReturnReset:	
 11986                           ; 1 bytes @ 0x9
 11987                           
 11988     0079                     ??_wr1RegCompleteHandler@strncmp$F4852:	
 11989                           ; 1 bytes @ 0x9
 11990                           
 11991     0079                     ??_rd1RegCompleteHandler@strncmp$F4858:	
 11992                           ; 1 bytes @ 0x9
 11993                           
 11994     0079                     ??_rd2RegCompleteHandler@strncmp$F4861:	
 11995                           ; 1 bytes @ 0x9
 11996                           
 11997     0079                     ??_wr2RegCompleteHandler@strncmp$F4864:	
 11998                           ; 1 bytes @ 0x9
 11999                           
 12000     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4870:	
 12001                           ; 1 bytes @ 0x9
 12002                           
 12003     0079                     ??_rn487x_PrintMessage:	
 12004                           ; 1 bytes @ 0x9
 12005                           
 12006     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12007                           ; 1 bytes @ 0x9
 12008                           
 12009     0079                     swap@lowerByte:	
 12010                           ; 1 bytes @ 0x9
 12011                           
 12012     0079                     RN487X_SendCmd@index:	
 12013                           ; 1 bytes @ 0x9
 12014                           
 12015     0079                     RN487X_ReadMsg@index:	
 12016                           ; 1 bytes @ 0x9
 12017                           
 12018     0079                     LIGHTBLUE_SplitWord@value:	
 12019                           ; 1 bytes @ 0x9
 12020                           
 12021     0079                     bitWrite@mask:	
 12022                           ; 2 bytes @ 0x9
 12023                           
 12024                           
 12025                           ; 2 bytes @ 0x9
 12026     0079                     	ds	1
 12027     007A                     LIGHTBLUE_SendPacket@packetID:
 12028     007A                     RN487X_SendCmd@cmd:	
 12029                           ; 1 bytes @ 0xA
 12030                           
 12031     007A                     strstr@n:	
 12032                           ; 1 bytes @ 0xA
 12033                           
 12034                           
 12035                           ; 2 bytes @ 0xA
 12036     007A                     	ds	1
 12037     007B                     ??_i2c_write1ByteRegister:
 12038     007B                     ??_i2c_read1ByteRegister:	
 12039                           ; 1 bytes @ 0xB
 12040                           
 12041     007B                     ??_BMA253_NewAccelDataRdyY:	
 12042                           ; 1 bytes @ 0xB
 12043                           
 12044     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12045                           ; 1 bytes @ 0xB
 12046                           
 12047     007B                     ??_readRegister:	
 12048                           ; 1 bytes @ 0xB
 12049                           
 12050     007B                     ??_TMAG5273_GetTemperatureValue:	
 12051                           ; 1 bytes @ 0xB
 12052                           
 12053     007B                     ??_LIGHTBLUE_SplitWord:	
 12054                           ; 1 bytes @ 0xB
 12055                           
 12056     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12057                           ; 1 bytes @ 0xB
 12058                           
 12059     007B                     ??_RN487X_EnterCmdMode:	
 12060                           ; 1 bytes @ 0xB
 12061                           
 12062     007B                     ??_RN487X_SetOutputs:	
 12063                           ; 1 bytes @ 0xB
 12064                           
 12065     007B                     ??_RN487X_EnterDataMode:	
 12066                           ; 1 bytes @ 0xB
 12067                           
 12068     007B                     ??_I2C1_MasterWrite:	
 12069                           ; 1 bytes @ 0xB
 12070                           
 12071     007B                     ??_isConnected:	
 12072                           ; 1 bytes @ 0xB
 12073                           
 12074     007B                     ??_TMAG5273_GetManufacture:	
 12075                           ; 1 bytes @ 0xB
 12076                           
 12077     007B                     ??_I2C1_Poller:	
 12078                           ; 1 bytes @ 0xB
 12079                           
 12080     007B                     ??_LIGHTBLUE_PushButton:	
 12081                           ; 1 bytes @ 0xB
 12082                           
 12083     007B                     ??_LIGHTBLUE_LedState:	
 12084                           ; 1 bytes @ 0xB
 12085                           
 12086     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12087                           ; 1 bytes @ 0xB
 12088                           
 12089     007B                     ??_getDeviceStatus:	
 12090                           ; 1 bytes @ 0xB
 12091                           
 12092     007B                     ??_I2C1_MasterOperation:	
 12093                           ; 1 bytes @ 0xB
 12094                           
 12095     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12096                           ; 1 bytes @ 0xB
 12097                           
 12098     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12099                           ; 1 bytes @ 0xB
 12100                           
 12101     007B                     LIGHTBLUE_SplitWord@payload:	
 12102                           ; 1 bytes @ 0xB
 12103                           
 12104     007B                     i2c_write1ByteRegister@address:	
 12105                           ; 1 bytes @ 0xB
 12106                           
 12107     007B                     getDeviceStatus@deviceStatusReg:	
 12108                           ; 1 bytes @ 0xB
 12109                           
 12110     007B                     TMAG5273_GetTemperatureValue@temperature:	
 12111                           ; 1 bytes @ 0xB
 12112                           
 12113                           
 12114                           ; 1 bytes @ 0xB
 12115     007B                     	ds	1
 12116     007C                     ??_RN487X_Read:
 12117     007C                     ??_RN487X_DataReady:	
 12118                           ; 1 bytes @ 0xC
 12119                           
 12120     007C                     ??_RN487X_MessageHandler:	
 12121                           ; 1 bytes @ 0xC
 12122                           
 12123     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12124                           ; 1 bytes @ 0xC
 12125                           
 12126     007C                     ??_LIGHTBLUE_AccelSensor:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     007C                     ??_begin:	
 12130                           ; 1 bytes @ 0xC
 12131                           
 12132     007C                     ??_writeRegister:	
 12133                           ; 1 bytes @ 0xC
 12134                           
 12135                           
 12136                           	psect	cstackBANK0
 12137     0020                     __pcstackBANK0:	
 12138                           ; 1 bytes @ 0xC
 12139                           
 12140     0020                     ?_RN487X_SetOutputs:
 12141     0020                     ??_strstr:	
 12142                           ; 1 bytes @ 0x0
 12143                           
 12144     0020                     ??_I2C1_MasterFsm:	
 12145                           ; 1 bytes @ 0x0
 12146                           
 12147     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12148                           ; 1 bytes @ 0x0
 12149                           
 12150     0020                     LIGHTBLUE_PushButton@button:	
 12151                           ; 1 bytes @ 0x0
 12152                           
 12153     0020                     RN487X_SetOutputs@bitMap:	
 12154                           ; 1 bytes @ 0x0
 12155                           
 12156     0020                     LIGHTBLUE_LedState@payload:	
 12157                           ; 2 bytes @ 0x0
 12158                           
 12159     0020                     rn487x_PrintMessage@printCharacter:	
 12160                           ; 3 bytes @ 0x0
 12161                           
 12162                           
 12163                           ; 32 bytes @ 0x0
 12164     0020                     	ds	1
 12165     0021                     LIGHTBLUE_PushButton@payload:
 12166                           
 12167                           ; 3 bytes @ 0x1
 12168     0021                     	ds	1
 12169     0022                     RN487X_SetOutputs@ioLowNibble:
 12170     0022                     I2C1_MasterOperation@read:	
 12171                           ; 1 bytes @ 0x2
 12172                           
 12173     0022                     strstr@nl:	
 12174                           ; 1 bytes @ 0x2
 12175                           
 12176     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12177                           ; 2 bytes @ 0x2
 12178                           
 12179                           
 12180                           ; 19 bytes @ 0x2
 12181     0022                     	ds	1
 12182     0023                     LIGHTBLUE_LedState@led:
 12183     0023                     RN487X_SetOutputs@stateLowNibble:	
 12184                           ; 1 bytes @ 0x3
 12185                           
 12186     0023                     I2C1_MasterOperation@returnValue:	
 12187                           ; 1 bytes @ 0x3
 12188                           
 12189                           
 12190                           ; 1 bytes @ 0x3
 12191     0023                     	ds	1
 12192     0024                     ?_i2c_write1ByteRegister:
 12193     0024                     ?_i2c_read1ByteRegister:	
 12194                           ; 1 bytes @ 0x4
 12195                           
 12196     0024                     ?_i2c_read2ByteRegister:	
 12197                           ; 1 bytes @ 0x4
 12198                           
 12199     0024                     i2c_write1ByteRegister@reg:	
 12200                           ; 2 bytes @ 0x4
 12201                           
 12202     0024                     i2c_read1ByteRegister@reg:	
 12203                           ; 1 bytes @ 0x4
 12204                           
 12205     0024                     i2c_read2ByteRegister@reg:	
 12206                           ; 1 bytes @ 0x4
 12207                           
 12208     0024                     RN487X_SetOutputs@ioHighNibble:	
 12209                           ; 1 bytes @ 0x4
 12210                           
 12211                           
 12212                           ; 1 bytes @ 0x4
 12213     0024                     	ds	1
 12214     0025                     i2c_write1ByteRegister@data:
 12215     0025                     i2c_read1ByteRegister@address:	
 12216                           ; 1 bytes @ 0x5
 12217                           
 12218     0025                     RN487X_SetOutputs@stateHighNibble:	
 12219                           ; 1 bytes @ 0x5
 12220                           
 12221                           
 12222                           ; 1 bytes @ 0x5
 12223     0025                     	ds	1
 12224     0026                     ??_i2c_read2ByteRegister:
 12225     0026                     ?_writeRegister:	
 12226                           ; 1 bytes @ 0x6
 12227                           
 12228     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12229                           ; 1 bytes @ 0x6
 12230                           
 12231     0026                     i2c_read1ByteRegister@e:	
 12232                           ; 1 bytes @ 0x6
 12233                           
 12234     0026                     writeRegister@data:	
 12235                           ; 1 bytes @ 0x6
 12236                           
 12237                           
 12238                           ; 1 bytes @ 0x6
 12239     0026                     	ds	1
 12240     0027                     ?_LIGHTBLUE_PerformAction:
 12241     0027                     LIGHTBLUE_PerformAction@data:	
 12242                           ; 1 bytes @ 0x7
 12243                           
 12244     0027                     writeRegister@regAddress:	
 12245                           ; 1 bytes @ 0x7
 12246                           
 12247     0027                     i2c_read1ByteRegister@x:	
 12248                           ; 1 bytes @ 0x7
 12249                           
 12250                           
 12251                           ; 2 bytes @ 0x7
 12252     0027                     	ds	1
 12253     0028                     ??_LIGHTBLUE_PerformAction:
 12254                           
 12255                           ; 1 bytes @ 0x8
 12256     0028                     	ds	1
 12257     0029                     LIGHTBLUE_PerformAction@id:
 12258     0029                     i2c_read1ByteRegister@d2:	
 12259                           ; 1 bytes @ 0x9
 12260                           
 12261                           
 12262                           ; 1 bytes @ 0x9
 12263     0029                     	ds	1
 12264     002A                     ??_BMA253_GetAccelDataY:
 12265     002A                     ??_BMA253_GetAccelDataZ:	
 12266                           ; 1 bytes @ 0xA
 12267                           
 12268     002A                     LIGHTBLUE_PerformAction@led:	
 12269                           ; 1 bytes @ 0xA
 12270                           
 12271     002A                     i2c_read2ByteRegister@address:	
 12272                           ; 1 bytes @ 0xA
 12273                           
 12274     002A                     readRegister@regAddress:	
 12275                           ; 1 bytes @ 0xA
 12276                           
 12277                           
 12278                           ; 1 bytes @ 0xA
 12279     002A                     	ds	1
 12280     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12281     002B                     readRegister@regVal:	
 12282                           ; 1 bytes @ 0xB
 12283                           
 12284     002B                     i2c_read2ByteRegister@result:	
 12285                           ; 1 bytes @ 0xB
 12286                           
 12287                           
 12288                           ; 2 bytes @ 0xB
 12289     002B                     	ds	1
 12290     002C                     ??_getError:
 12291     002C                     ??_getLowPower:	
 12292                           ; 1 bytes @ 0xC
 12293                           
 12294     002C                     ??_getOperatingMode:	
 12295                           ; 1 bytes @ 0xC
 12296                           
 12297     002C                     ??_getMagneticChannel:	
 12298                           ; 1 bytes @ 0xC
 12299                           
 12300     002C                     ??_getTemperatureEN:	
 12301                           ; 1 bytes @ 0xC
 12302                           
 12303     002C                     ??_getAngleEn:	
 12304                           ; 1 bytes @ 0xC
 12305                           
 12306                           
 12307                           ; 1 bytes @ 0xC
 12308     002C                     	ds	1
 12309     002D                     ?_TMAG5273_GetManufacture:
 12310     002D                     ?_TMAG5273_CalcTemperature:	
 12311                           ; 2 bytes @ 0xD
 12312                           
 12313     002D                     BMA253_GetAccelDataY@yAccelData:	
 12314                           ; 2 bytes @ 0xD
 12315                           
 12316     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12317                           ; 1 bytes @ 0xD
 12318                           
 12319     002D                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12320                           ; 1 bytes @ 0xD
 12321                           
 12322                           
 12323                           ; 2 bytes @ 0xD
 12324     002D                     	ds	1
 12325     002E                     BMA253_GetAccelDataY@lsbData:
 12326     002E                     BMA253_GetAccelDataZ@lsbData:	
 12327                           ; 1 bytes @ 0xE
 12328                           
 12329     002E                     getLowPower@lowPowerModeBit:	
 12330                           ; 1 bytes @ 0xE
 12331                           
 12332     002E                     getOperatingMode@opMode:	
 12333                           ; 1 bytes @ 0xE
 12334                           
 12335     002E                     getMagneticChannel@magChannel:	
 12336                           ; 1 bytes @ 0xE
 12337                           
 12338     002E                     getAngleEn@angleReg:	
 12339                           ; 1 bytes @ 0xE
 12340                           
 12341     002E                     getTemperatureEN@tempEN:	
 12342                           ; 1 bytes @ 0xE
 12343                           
 12344     002E                     getError@undervoltageError:	
 12345                           ; 1 bytes @ 0xE
 12346                           
 12347                           
 12348                           ; 1 bytes @ 0xE
 12349     002E                     	ds	1
 12350     002F                     ??_TMAG5273_CalcTemperature:
 12351     002F                     BMA253_GetAccelDataY@msbData:	
 12352                           ; 1 bytes @ 0xF
 12353                           
 12354     002F                     BMA253_GetAccelDataZ@msbData:	
 12355                           ; 1 bytes @ 0xF
 12356                           
 12357     002F                     getLowPower@lowPowerMode:	
 12358                           ; 1 bytes @ 0xF
 12359                           
 12360     002F                     getOperatingMode@opMode0:	
 12361                           ; 1 bytes @ 0xF
 12362                           
 12363     002F                     getMagneticChannel@magMode4:	
 12364                           ; 1 bytes @ 0xF
 12365                           
 12366     002F                     getAngleEn@angleDir2:	
 12367                           ; 1 bytes @ 0xF
 12368                           
 12369     002F                     getTemperatureEN@tempENreg:	
 12370                           ; 1 bytes @ 0xF
 12371                           
 12372     002F                     getError@otpCrcError:	
 12373                           ; 1 bytes @ 0xF
 12374                           
 12375     002F                     _LIGHTBLUE_ParseIncomingPacket$464:	
 12376                           ; 1 bytes @ 0xF
 12377                           
 12378     002F                     TMAG5273_GetManufacture@read:	
 12379                           ; 2 bytes @ 0xF
 12380                           
 12381                           
 12382                           ; 2 bytes @ 0xF
 12383     002F                     	ds	1
 12384     0030                     ??_BMA253_GetAccelDataXYZ:
 12385     0030                     getOperatingMode@opMode1:	
 12386                           ; 1 bytes @ 0x10
 12387                           
 12388     0030                     getMagneticChannel@magMode5:	
 12389                           ; 1 bytes @ 0x10
 12390                           
 12391     0030                     getAngleEn@angleDir3:	
 12392                           ; 1 bytes @ 0x10
 12393                           
 12394     0030                     getError@intPinError:	
 12395                           ; 1 bytes @ 0x10
 12396                           
 12397                           
 12398                           ; 1 bytes @ 0x10
 12399     0030                     	ds	1
 12400     0031                     BMA253_GetAccelDataXYZ@lSB:
 12401     0031                     getMagneticChannel@magMode6:	
 12402                           ; 1 bytes @ 0x11
 12403                           
 12404     0031                     getError@oscillatorError:	
 12405                           ; 1 bytes @ 0x11
 12406                           
 12407     0031                     _LIGHTBLUE_ParseIncomingPacket$465:	
 12408                           ; 1 bytes @ 0x11
 12409                           
 12410                           
 12411                           ; 2 bytes @ 0x11
 12412     0031                     	ds	1
 12413     0032                     BMA253_GetAccelDataXYZ@mSB:
 12414     0032                     getMagneticChannel@magMode7:	
 12415                           ; 1 bytes @ 0x12
 12416                           
 12417     0032                     getError@statusReg:	
 12418                           ; 1 bytes @ 0x12
 12419                           
 12420     0032                     TMAG5273_CalcTemperature@lowerByte:	
 12421                           ; 1 bytes @ 0x12
 12422                           
 12423                           
 12424                           ; 1 bytes @ 0x12
 12425     0032                     	ds	1
 12426     0033                     ??_setMagneticChannel:
 12427     0033                     ??_setTemperatureEn:	
 12428                           ; 1 bytes @ 0x13
 12429                           
 12430     0033                     ??_setOperatingMode:	
 12431                           ; 1 bytes @ 0x13
 12432                           
 12433     0033                     ??_setXYAxisRange:	
 12434                           ; 1 bytes @ 0x13
 12435                           
 12436     0033                     ??_setZAxisRange:	
 12437                           ; 1 bytes @ 0x13
 12438                           
 12439     0033                     BMA253_GetAccelDataXYZ@accelData:	
 12440                           ; 1 bytes @ 0x13
 12441                           
 12442     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12443                           ; 1 bytes @ 0x13
 12444                           
 12445     0033                     TMAG5273_CalcTemperature@temperatureData:	
 12446                           ; 1 bytes @ 0x13
 12447                           
 12448                           
 12449                           ; 2 bytes @ 0x13
 12450     0033                     	ds	1
 12451     0034                     BMA253_GetAccelDataXYZ@sensorValue:
 12452                           
 12453                           ; 2 bytes @ 0x14
 12454     0034                     	ds	1
 12455     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12456     0035                     setOperatingMode@opMode:	
 12457                           ; 1 bytes @ 0x15
 12458                           
 12459     0035                     setMagneticChannel@channelMode:	
 12460                           ; 1 bytes @ 0x15
 12461                           
 12462     0035                     setXYAxisRange@xyAxisRange:	
 12463                           ; 1 bytes @ 0x15
 12464                           
 12465     0035                     setZAxisRange@zAxisRange:	
 12466                           ; 1 bytes @ 0x15
 12467                           
 12468     0035                     setTemperatureEn@temperatureEnable:	
 12469                           ; 1 bytes @ 0x15
 12470                           
 12471     0035                     LIGHTBLUE_TemperatureSensor@payload:	
 12472                           ; 1 bytes @ 0x15
 12473                           
 12474                           
 12475                           ; 5 bytes @ 0x15
 12476     0035                     	ds	1
 12477     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 12478     0036                     setOperatingMode@mode:	
 12479                           ; 1 bytes @ 0x16
 12480                           
 12481     0036                     setMagneticChannel@mode:	
 12482                           ; 2 bytes @ 0x16
 12483                           
 12484     0036                     setXYAxisRange@mode:	
 12485                           ; 2 bytes @ 0x16
 12486                           
 12487     0036                     setZAxisRange@mode:	
 12488                           ; 2 bytes @ 0x16
 12489                           
 12490     0036                     setTemperatureEn@mode:	
 12491                           ; 2 bytes @ 0x16
 12492                           
 12493     0036                     LIGHTBLUE_AccelSensor@payload:	
 12494                           ; 2 bytes @ 0x16
 12495                           
 12496                           
 12497                           ; 13 bytes @ 0x16
 12498     0036                     	ds	4
 12499     003A                     LIGHTBLUE_TemperatureSensor@temperature:
 12500                           
 12501                           ; 2 bytes @ 0x1A
 12502     003A                     	ds	6
 12503     0040                     rn487x_PrintMessage@messageIndex:
 12504                           
 12505                           ; 1 bytes @ 0x20
 12506     0040                     	ds	1
 12507     0041                     ?_RN487X_MessageHandler:
 12508     0041                     RN487X_MessageHandler@message:	
 12509                           ; 1 bytes @ 0x21
 12510                           
 12511                           
 12512                           ; 2 bytes @ 0x21
 12513     0041                     	ds	2
 12514     0043                     RN487X_MessageHandler@messageType:
 12515     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12516                           ; 1 bytes @ 0x23
 12517                           
 12518                           
 12519                           ; 6 bytes @ 0x23
 12520     0043                     	ds	1
 12521     0044                     ??_RN487X_FilterData:
 12522                           
 12523                           ; 1 bytes @ 0x24
 12524     0044                     	ds	4
 12525     0048                     RN487X_FilterData@readChar:
 12526                           
 12527                           ; 1 bytes @ 0x28
 12528     0048                     	ds	1
 12529     0049                     ??_main:
 12530                           
 12531                           ; 1 bytes @ 0x29
 12532     0049                     	ds	1
 12533                           
 12534                           	psect	maintext
 12535     04BD                     __pmaintext:	
 12536 ;;
 12537 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12538 ;;
 12539 ;; *************** function _main *****************
 12540 ;; Defined at:
 12541 ;;		line 72 in file "main.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  2  2666[None  ] int 
 12548 ;; Registers used:
 12549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : B3F/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12556 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;Total ram usage:        2 bytes
 12560 ;; Hardware stack levels required when called: 18
 12561 ;; This function calls:
 12562 ;;		_EUSART1_Read
 12563 ;;		_EUSART1_Write
 12564 ;;		_EUSART1_is_rx_ready
 12565 ;;		_EUSART2_Read
 12566 ;;		_EUSART2_Write
 12567 ;;		_EUSART2_is_rx_ready
 12568 ;;		_LIGHTBLUE_AccelSensor
 12569 ;;		_LIGHTBLUE_Initialize
 12570 ;;		_LIGHTBLUE_LedState
 12571 ;;		_LIGHTBLUE_ParseIncomingPacket
 12572 ;;		_LIGHTBLUE_PushButton
 12573 ;;		_LIGHTBLUE_SendProtocolVersion
 12574 ;;		_LIGHTBLUE_SendSerialData
 12575 ;;		_LIGHTBLUE_TemperatureSensor
 12576 ;;		_RN487X_DataReady
 12577 ;;		_RN487X_Init
 12578 ;;		_RN487X_IsConnected
 12579 ;;		_RN487X_Read
 12580 ;;		_RN487X_SetAsyncMessageHandler
 12581 ;;		_RN487X_Write
 12582 ;;		_SYSTEM_Initialize
 12583 ;;		_TMR0_HasOverflowOccured
 12584 ;;		_begin
 12585 ;; This function is called by:
 12586 ;;		Startup code after reset
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590     04BD                     _main:	
 12591                           ;psect for function _main
 12592                           
 12593     04BD                     l16419:	
 12594                           ;incstack = 0
 12595 ;; hardware stack exceeded
 12596                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12597                           
 12598                           
 12599                           ;main.c: 75:     SYSTEM_Initialize();
 12600     04BD  3192  221E  3184   	fcall	_SYSTEM_Initialize
 12601                           
 12602                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12603     04C0  3020               	movlw	low _statusBuffer@main$F4242
 12604     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12605     04C2  3003               	movlw	high _statusBuffer@main$F4242
 12606     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12607     04C4  3050               	movlw	80
 12608     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12609     04C6  3192  227A  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12610     04C9                     l16421:
 12611                           
 12612                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12613     04C9  178B               	bsf	11,7	;volatile
 12614     04CA                     l16423:
 12615                           
 12616                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12617     04CA  170B               	bsf	11,6	;volatile
 12618     04CB                     l16425:
 12619                           
 12620                           ;main.c: 84:     RN487X_Init();
 12621     04CB  3187  27A1  3184   	fcall	_RN487X_Init
 12622     04CE                     l16427:
 12623                           
 12624                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12625     04CE  319F  2718  3184   	fcall	_LIGHTBLUE_Initialize
 12626                           
 12627                           ;main.c: 86:     begin();
 12628     04D1  318B  23FA  3184   	fcall	_begin
 12629     04D4                     l16429:
 12630                           
 12631                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12632     04D4  319E  26AC  3184   	fcall	_RN487X_IsConnected
 12633     04D7  3A01               	xorlw	1
 12634     04D8  1D03               	skipz
 12635     04D9  2CDB               	goto	u13951
 12636     04DA  2CDC               	goto	u13950
 12637     04DB                     u13951:
 12638     04DB  2D63               	goto	l2682
 12639     04DC                     u13950:
 12640     04DC                     l16431:
 12641                           
 12642                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12643     04DC  319F  2707  3184   	fcall	_TMR0_HasOverflowOccured
 12644     04DF  3A01               	xorlw	1
 12645     04E0  1D03               	skipz
 12646     04E1  2CE3               	goto	u13961
 12647     04E2  2CE4               	goto	u13960
 12648     04E3                     u13961:
 12649     04E3  2CFC               	goto	l2671
 12650     04E4                     u13960:
 12651     04E4                     l16433:
 12652                           
 12653                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12654     04E4  014E               	movlb	14	; select bank14
 12655     04E5  128C               	bcf	12,5	;volatile
 12656     04E6                     l16435:
 12657                           
 12658                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12659     04E6  3192  2208  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12660                           
 12661                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12662     04E9  3196  26A1  3184   	fcall	_LIGHTBLUE_AccelSensor
 12663                           
 12664                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12665     04EC  3191  218D  3184   	fcall	_LIGHTBLUE_PushButton
 12666                           
 12667                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12668     04EF  3194  24AE  3184   	fcall	_LIGHTBLUE_LedState
 12669                           
 12670                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12671     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12672                           
 12673                           ;main.c: 101:             }
 12674     04F5  2CD4               	goto	l16429
 12675     04F6                     l16437:
 12676                           
 12677                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12678     04F6  3190  2054  3184   	fcall	_RN487X_Read
 12679     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12680     04FC                     l2671:	
 12681                           ;main.c: 107:                 }
 12682                           
 12683                           
 12684                           ;main.c: 104:                 while (RN487X_DataReady())
 12685     04FC  3193  2365  3184   	fcall	_RN487X_DataReady
 12686     04FF  3A00               	xorlw	0
 12687     0500  1D03               	skipz
 12688     0501  2D03               	goto	u13971
 12689     0502  2D04               	goto	u13970
 12690     0503                     u13971:
 12691     0503  2CF6               	goto	l16437
 12692     0504                     u13970:
 12693     0504  2D44               	goto	l16455
 12694     0505                     l16439:
 12695                           
 12696                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12697     0505  3000               	movlw	low (_uart| (0+32768))
 12698     0506  0084               	movwf	4
 12699     0507  3098               	movlw	high (_uart| (0+32768))
 12700     0508  0085               	movwf	5
 12701     0509  3F01               	moviw [1]fsr0
 12702     050A  008A               	movwf	10
 12703     050B  3F00               	moviw [0]fsr0
 12704     050C  000A               	callw
 12705     050D  3184               	pagesel	$
 12706     050E  0140               	movlb	0	; select bank0
 12707     050F  00C9               	movwf	??_main
 12708     0510  0856               	movf	_serialIndex,w
 12709     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12710     0512  0086               	movwf	6
 12711     0513  3002               	movlw	2	; select bank4/5
 12712     0514  0087               	movwf	7
 12713     0515  0849               	movf	??_main,w
 12714     0516  0081               	movwf	1
 12715     0517                     l16441:
 12716                           
 12717                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12718     0517  0856               	movf	_serialIndex,w
 12719     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12720     0519  0086               	movwf	6
 12721     051A  3002               	movlw	2	; select bank4/5
 12722     051B  0087               	movwf	7
 12723     051C  300D               	movlw	13
 12724     051D  0601               	xorwf	1,w
 12725     051E  1903               	btfsc	3,2
 12726     051F  2D21               	goto	u13981
 12727     0520  2D22               	goto	u13980
 12728     0521                     u13981:
 12729     0521  2D33               	goto	l16447
 12730     0522                     u13980:
 12731     0522                     l16443:
 12732     0522  0856               	movf	_serialIndex,w
 12733     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12734     0524  0086               	movwf	6
 12735     0525  3002               	movlw	2	; select bank4/5
 12736     0526  0087               	movwf	7
 12737     0527  300A               	movlw	10
 12738     0528  0601               	xorwf	1,w
 12739     0529  1903               	btfsc	3,2
 12740     052A  2D2C               	goto	u13991
 12741     052B  2D2D               	goto	u13990
 12742     052C                     u13991:
 12743     052C  2D33               	goto	l16447
 12744     052D                     u13990:
 12745     052D                     l16445:
 12746     052D  304F               	movlw	79
 12747     052E  0656               	xorwf	_serialIndex,w
 12748     052F  1D03               	btfss	3,2
 12749     0530  2D32               	goto	u14001
 12750     0531  2D33               	goto	u14000
 12751     0532                     u14001:
 12752     0532  2D40               	goto	l16453
 12753     0533                     u14000:
 12754     0533                     l16447:
 12755                           
 12756                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12757     0533  0856               	movf	_serialIndex,w
 12758     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12759     0535  0086               	movwf	6
 12760     0536  3002               	movlw	2	; select bank4/5
 12761     0537  0087               	movwf	7
 12762     0538  0181               	clrf	1
 12763     0539                     l16449:
 12764                           
 12765                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12766     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12767     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12768     053D                     l16451:
 12769                           
 12770                           ;main.c: 117:                         serialIndex = 0;
 12771     053D  0140               	movlb	0	; select bank0
 12772     053E  01D6               	clrf	_serialIndex
 12773                           
 12774                           ;main.c: 118:                     }
 12775     053F  2D44               	goto	l16455
 12776     0540                     l16453:
 12777                           
 12778                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12779     0540  3001               	movlw	1
 12780     0541  00C9               	movwf	??_main
 12781     0542  0849               	movf	??_main,w
 12782     0543  07D6               	addwf	_serialIndex,f
 12783     0544                     l16455:
 12784                           
 12785                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12786     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12787     0545  0084               	movwf	4
 12788     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12789     0547  0085               	movwf	5
 12790     0548  3F01               	moviw [1]fsr0
 12791     0549  008A               	movwf	10
 12792     054A  3F00               	moviw [0]fsr0
 12793     054B  000A               	callw
 12794     054C  3184               	pagesel	$
 12795     054D  3A00               	xorlw	0
 12796     054E  1D03               	skipz
 12797     054F  2D51               	goto	u14011
 12798     0550  2D52               	goto	u14010
 12799     0551                     u14011:
 12800     0551  2D05               	goto	l16439
 12801     0552                     u14010:
 12802     0552  2CD4               	goto	l16429
 12803     0553                     l16457:
 12804                           
 12805                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12806     0553  3190  2054  3184   	fcall	_RN487X_Read
 12807     0556  0142               	movlb	2	; select bank2
 12808     0557  00ED               	movwf	_main$5433^(0+256)
 12809                           
 12810                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12811     0558  086D               	movf	_main$5433^(0+256),w
 12812     0559  00F1               	movwf	EUSART2_Write@txData
 12813     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12814     055B  0084               	movwf	4
 12815     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12816     055D  0085               	movwf	5
 12817     055E  3F01               	moviw [1]fsr0
 12818     055F  008A               	movwf	10
 12819     0560  3F00               	moviw [0]fsr0
 12820     0561  000A               	callw
 12821     0562  3184               	pagesel	$
 12822     0563                     l2682:	
 12823                           ;main.c: 132:             }
 12824                           
 12825                           
 12826                           ;main.c: 129:             while(RN487X_DataReady())
 12827     0563  3193  2365  3184   	fcall	_RN487X_DataReady
 12828     0566  3A00               	xorlw	0
 12829     0567  1D03               	skipz
 12830     0568  2D6A               	goto	u14021
 12831     0569  2D6B               	goto	u14020
 12832     056A                     u14021:
 12833     056A  2D53               	goto	l16457
 12834     056B                     u14020:
 12835     056B  2D7F               	goto	l16461
 12836     056C                     l16459:
 12837                           
 12838                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12839     056C  3000               	movlw	low (_uart| (0+32768))
 12840     056D  0084               	movwf	4
 12841     056E  3098               	movlw	high (_uart| (0+32768))
 12842     056F  0085               	movwf	5
 12843     0570  3F01               	moviw [1]fsr0
 12844     0571  008A               	movwf	10
 12845     0572  3F00               	moviw [0]fsr0
 12846     0573  000A               	callw
 12847     0574  3184               	pagesel	$
 12848     0575  00F6               	movwf	RN487X_Write@txData
 12849     0576  3068               	movlw	low (_RN487X| (0+32768))
 12850     0577  0084               	movwf	4
 12851     0578  3098               	movlw	high (_RN487X| (0+32768))
 12852     0579  0085               	movwf	5
 12853     057A  3F01               	moviw [1]fsr0
 12854     057B  008A               	movwf	10
 12855     057C  3F00               	moviw [0]fsr0
 12856     057D  000A               	callw
 12857     057E  3184               	pagesel	$
 12858     057F                     l16461:
 12859                           
 12860                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12861     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12862     0580  0084               	movwf	4
 12863     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12864     0582  0085               	movwf	5
 12865     0583  3F01               	moviw [1]fsr0
 12866     0584  008A               	movwf	10
 12867     0585  3F00               	moviw [0]fsr0
 12868     0586  000A               	callw
 12869     0587  3184               	pagesel	$
 12870     0588  3A00               	xorlw	0
 12871     0589  1D03               	skipz
 12872     058A  2D8C               	goto	u14031
 12873     058B  2D8D               	goto	u14030
 12874     058C                     u14031:
 12875     058C  2D6C               	goto	l16459
 12876     058D                     u14030:
 12877     058D  2CD4               	goto	l16429
 12878     058E  3180  2855         	ljmp	start
 12879     0590                     __end_of_main:
 12880                           
 12881                           	psect	text1
 12882     0BFA                     __ptext1:	
 12883 ;; *************** function _begin *****************
 12884 ;; Defined at:
 12885 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;		None
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;		None
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      char 
 12892 ;; Registers used:
 12893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12903 ;;Total ram usage:        0 bytes
 12904 ;; Hardware stack levels used: 1
 12905 ;; Hardware stack levels required when called: 17
 12906 ;; This function calls:
 12907 ;;		_getAngleEn
 12908 ;;		_getError
 12909 ;;		_getLowPower
 12910 ;;		_getMagneticChannel
 12911 ;;		_getOperatingMode
 12912 ;;		_getTemperatureEN
 12913 ;;		_isConnected
 12914 ;;		_setMagneticChannel
 12915 ;;		_setOperatingMode
 12916 ;;		_setTemperatureEn
 12917 ;;		_setXYAxisRange
 12918 ;;		_setZAxisRange
 12919 ;; This function is called by:
 12920 ;;		_main
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924     0BFA                     _begin:	
 12925                           ;psect for function _begin
 12926                           
 12927     0BFA                     l14437:	
 12928                           ;incstack = 0
 12929 ;; hardware stack exceeded
 12930                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12931                           
 12932                           
 12933                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 43:     if (isConnecte
      +                          d() != 0) {
 12934     0BFA  3191  21DD  318B   	fcall	_isConnected
 12935     0BFD  3A00               	xorlw	0
 12936     0BFE  1903               	skipnz
 12937     0BFF  2C01               	goto	u11551
 12938     0C00  2C02               	goto	u11550
 12939     0C01                     u11551:
 12940     0C01  2C03               	goto	l14441
 12941     0C02                     u11550:
 12942     0C02  2C47               	goto	l645
 12943     0C03                     l14441:
 12944                           
 12945                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     setMagneticCha
      +                          nnel(0X7);
 12946     0C03  3007               	movlw	7
 12947     0C04  3180  20A8  318B   	fcall	_setMagneticChannel
 12948                           
 12949                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     setTemperature
      +                          En(1);
 12950     0C07  3001               	movlw	1
 12951     0C08  3188  20C5  318B   	fcall	_setTemperatureEn
 12952                           
 12953                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     setOperatingMo
      +                          de(0X2);
 12954     0C0B  3002               	movlw	2
 12955     0C0C  3187  2706  318B   	fcall	_setOperatingMode
 12956                           
 12957                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 53:     setXYAxisRange
      +                          (0X1);
 12958     0C0F  3001               	movlw	1
 12959     0C10  3189  21BB  318B   	fcall	_setXYAxisRange
 12960                           
 12961                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     setZAxisRange(
      +                          0X1);
 12962     0C13  3001               	movlw	1
 12963     0C14  3189  2102  318B   	fcall	_setZAxisRange
 12964                           
 12965                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 57:     if (getError()
      +                           != 0) {
 12966     0C17  318D  2591  318B   	fcall	_getError
 12967     0C1A  3A00               	xorlw	0
 12968     0C1B  1903               	skipnz
 12969     0C1C  2C1E               	goto	u11561
 12970     0C1D  2C1F               	goto	u11560
 12971     0C1E                     u11561:
 12972     0C1E  2C20               	goto	l14445
 12973     0C1F                     u11560:
 12974     0C1F  2C47               	goto	l645
 12975     0C20                     l14445:
 12976                           
 12977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 62:     if (getLowPowe
      +                          r() != 0X0) {
 12978     0C20  3192  2234  318B   	fcall	_getLowPower
 12979     0C23  3A00               	xorlw	0
 12980     0C24  1903               	skipnz
 12981     0C25  2C27               	goto	u11571
 12982     0C26  2C28               	goto	u11570
 12983     0C27                     u11571:
 12984     0C27  2C29               	goto	l14449
 12985     0C28                     u11570:
 12986     0C28  2C47               	goto	l645
 12987     0C29                     l14449:
 12988                           
 12989                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 67:     if (getOperati
      +                          ngMode() != 0X2) {
 12990     0C29  318C  24EA  318B   	fcall	_getOperatingMode
 12991     0C2C  3A02               	xorlw	2
 12992     0C2D  1903               	skipnz
 12993     0C2E  2C30               	goto	u11581
 12994     0C2F  2C31               	goto	u11580
 12995     0C30                     u11581:
 12996     0C30  2C32               	goto	l14453
 12997     0C31                     u11580:
 12998     0C31  2C47               	goto	l645
 12999     0C32                     l14453:
 13000                           
 13001                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 72:     if (getMagneti
      +                          cChannel() != 0X7) {
 13002     0C32  3183  2377  318B   	fcall	_getMagneticChannel
 13003     0C35  3A07               	xorlw	7
 13004     0C36  1903               	skipnz
 13005     0C37  2C39               	goto	u11591
 13006     0C38  2C3A               	goto	u11590
 13007     0C39                     u11591:
 13008     0C39  2C3B               	goto	l14457
 13009     0C3A                     u11590:
 13010     0C3A  2C47               	goto	l645
 13011     0C3B                     l14457:
 13012                           
 13013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 77:     if (getTempera
      +                          tureEN() != 0X1) {
 13014     0C3B  3191  21C8  318B   	fcall	_getTemperatureEN
 13015     0C3E  3A01               	xorlw	1
 13016     0C3F  1903               	skipnz
 13017     0C40  2C42               	goto	u11601
 13018     0C41  2C43               	goto	u11600
 13019     0C42                     u11601:
 13020     0C42  2C44               	goto	l14461
 13021     0C43                     u11600:
 13022     0C43  2C47               	goto	l645
 13023     0C44                     l14461:
 13024                           
 13025                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 82:     if (getAngleEn
      +                          () != 0X0) {
 13026     0C44  318D  253D  318B   	fcall	_getAngleEn
 13027     0C47                     l645:
 13028     0C47  0008               	return
 13029     0C48                     __end_of_begin:
 13030                           
 13031                           	psect	text2
 13032     0902                     __ptext2:	
 13033 ;; *************** function _setZAxisRange *****************
 13034 ;; Defined at:
 13035 ;;		line 1011 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  zAxisRange      1    wreg     unsigned char 
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;  zAxisRange      1   21[BANK0 ] unsigned char 
 13040 ;;  mode            2   22[BANK0 ] unsigned short 
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      char 
 13043 ;; Registers used:
 13044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13052 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13053 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13054 ;;Total ram usage:        5 bytes
 13055 ;; Hardware stack levels used: 1
 13056 ;; Hardware stack levels required when called: 16
 13057 ;; This function calls:
 13058 ;;		_bitWrite
 13059 ;;		_getError
 13060 ;;		_readRegister
 13061 ;;		_writeRegister
 13062 ;; This function is called by:
 13063 ;;		_begin
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067     0902                     _setZAxisRange:	
 13068                           ;psect for function _setZAxisRange
 13069                           
 13070                           
 13071                           ;incstack = 0
 13072 ;; hardware stack exceeded
 13073                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13074                           ;setZAxisRange@zAxisRange stored from wreg
 13075     0902  0140               	movlb	0	; select bank0
 13076     0903  00B5               	movwf	setZAxisRange@zAxisRange
 13077     0904                     l13787:
 13078     0904                     l13789:
 13079                           
 13080                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13081     0904  3003               	movlw	3
 13082     0905  3190  2030  3189   	fcall	_readRegister
 13083     0908  0140               	movlb	0	; select bank0
 13084     0909  00B3               	movwf	??_setZAxisRange
 13085     090A  01B4               	clrf	??_setZAxisRange+1
 13086     090B  0833               	movf	??_setZAxisRange,w
 13087     090C  00B6               	movwf	setZAxisRange@mode
 13088     090D  0834               	movf	??_setZAxisRange+1,w
 13089     090E  00B7               	movwf	setZAxisRange@mode+1
 13090     090F                     l13791:
 13091                           
 13092                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     if (zAxisRan
      +                          ge == 0X0)
 13093     090F  0835               	movf	setZAxisRange@zAxisRange,w
 13094     0910  1D03               	btfss	3,2
 13095     0911  2913               	goto	u10721
 13096     0912  2914               	goto	u10720
 13097     0913                     u10721:
 13098     0913  2925               	goto	l13797
 13099     0914                     u10720:
 13100     0914                     l13793:
 13101                           
 13102                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:         bitWrite(mode, 0, 0
      +                          );
 13103     0914  0837               	movf	setZAxisRange@mode+1,w
 13104     0915  00F2               	movwf	bitWrite@reg+1
 13105     0916  0836               	movf	setZAxisRange@mode,w
 13106     0917  00F1               	movwf	bitWrite@reg
 13107     0918  01F3               	clrf	bitWrite@position
 13108     0919  01F4               	clrf	bitWrite@value
 13109     091A  3194  248A  3189   	fcall	_bitWrite
 13110     091D                     l13795:
 13111                           
 13112                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13113     091D  0140               	movlb	0	; select bank0
 13114     091E  0836               	movf	setZAxisRange@mode,w
 13115     091F  00A6               	movwf	writeRegister@data
 13116     0920  3003               	movlw	3
 13117     0921  3190  2025  3189   	fcall	_writeRegister
 13118                           
 13119                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     } else if (z
      +                          AxisRange == 0X1)
 13120     0924  293B               	goto	l13803
 13121     0925                     l13797:
 13122     0925  0335               	decf	setZAxisRange@zAxisRange,w
 13123     0926  1D03               	btfss	3,2
 13124     0927  2929               	goto	u10731
 13125     0928  292A               	goto	u10730
 13126     0929                     u10731:
 13127     0929  293B               	goto	l13803
 13128     092A                     u10730:
 13129     092A                     l13799:
 13130                           
 13131                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         bitWrite(mode, 0, 1
      +                          );
 13132     092A  0837               	movf	setZAxisRange@mode+1,w
 13133     092B  00F2               	movwf	bitWrite@reg+1
 13134     092C  0836               	movf	setZAxisRange@mode,w
 13135     092D  00F1               	movwf	bitWrite@reg
 13136     092E  01F3               	clrf	bitWrite@position
 13137     092F  01F4               	clrf	bitWrite@value
 13138     0930  0AF4               	incf	bitWrite@value,f
 13139     0931  3194  248A  3189   	fcall	_bitWrite
 13140     0934                     l13801:
 13141                           
 13142                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13143     0934  0140               	movlb	0	; select bank0
 13144     0935  0836               	movf	setZAxisRange@mode,w
 13145     0936  00A6               	movwf	writeRegister@data
 13146     0937  3003               	movlw	3
 13147     0938  3190  2025  3189   	fcall	_writeRegister
 13148     093B                     l13803:
 13149                           
 13150                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13151     093B  318D  2591  3189   	fcall	_getError
 13152     093E                     l857:
 13153     093E  0008               	return
 13154     093F                     __end_of_setZAxisRange:
 13155                           
 13156                           	psect	text3
 13157     09BB                     __ptext3:	
 13158 ;; *************** function _setXYAxisRange *****************
 13159 ;; Defined at:
 13160 ;;		line 984 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;  xyAxisRange     1    wreg     unsigned char 
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;  xyAxisRange     1   21[BANK0 ] unsigned char 
 13165 ;;  mode            2   22[BANK0 ] unsigned short 
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  1    wreg      char 
 13168 ;; Registers used:
 13169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13177 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13178 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13179 ;;Total ram usage:        5 bytes
 13180 ;; Hardware stack levels used: 1
 13181 ;; Hardware stack levels required when called: 16
 13182 ;; This function calls:
 13183 ;;		_bitWrite
 13184 ;;		_getError
 13185 ;;		_readRegister
 13186 ;;		_writeRegister
 13187 ;; This function is called by:
 13188 ;;		_begin
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192     09BB                     _setXYAxisRange:	
 13193                           ;psect for function _setXYAxisRange
 13194                           
 13195                           
 13196                           ;incstack = 0
 13197 ;; hardware stack exceeded
 13198                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13199                           ;setXYAxisRange@xyAxisRange stored from wreg
 13200     09BB  0140               	movlb	0	; select bank0
 13201     09BC  00B5               	movwf	setXYAxisRange@xyAxisRange
 13202     09BD                     l13767:
 13203     09BD                     l13769:
 13204                           
 13205                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 986:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_2);
 13206     09BD  3003               	movlw	3
 13207     09BE  3190  2030  3189   	fcall	_readRegister
 13208     09C1  0140               	movlb	0	; select bank0
 13209     09C2  00B3               	movwf	??_setXYAxisRange
 13210     09C3  01B4               	clrf	??_setXYAxisRange+1
 13211     09C4  0833               	movf	??_setXYAxisRange,w
 13212     09C5  00B6               	movwf	setXYAxisRange@mode
 13213     09C6  0834               	movf	??_setXYAxisRange+1,w
 13214     09C7  00B7               	movwf	setXYAxisRange@mode+1
 13215     09C8                     l13771:
 13216                           
 13217                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 989:     if (xyAxisRan
      +                          ge == 0X0)
 13218     09C8  0835               	movf	setXYAxisRange@xyAxisRange,w
 13219     09C9  1D03               	btfss	3,2
 13220     09CA  29CC               	goto	u10701
 13221     09CB  29CD               	goto	u10700
 13222     09CC                     u10701:
 13223     09CC  29DF               	goto	l13777
 13224     09CD                     u10700:
 13225     09CD                     l13773:
 13226                           
 13227                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 990:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 992:         bitWrite(mode, 1, 0);
 13228     09CD  0837               	movf	setXYAxisRange@mode+1,w
 13229     09CE  00F2               	movwf	bitWrite@reg+1
 13230     09CF  0836               	movf	setXYAxisRange@mode,w
 13231     09D0  00F1               	movwf	bitWrite@reg
 13232     09D1  01F3               	clrf	bitWrite@position
 13233     09D2  0AF3               	incf	bitWrite@position,f
 13234     09D3  01F4               	clrf	bitWrite@value
 13235     09D4  3194  248A  3189   	fcall	_bitWrite
 13236     09D7                     l13775:
 13237                           
 13238                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 994:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13239     09D7  0140               	movlb	0	; select bank0
 13240     09D8  0836               	movf	setXYAxisRange@mode,w
 13241     09D9  00A6               	movwf	writeRegister@data
 13242     09DA  3003               	movlw	3
 13243     09DB  3190  2025  3189   	fcall	_writeRegister
 13244                           
 13245                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 995:     } else if (xy
      +                          AxisRange == 0X1)
 13246     09DE  29F6               	goto	l13783
 13247     09DF                     l13777:
 13248     09DF  0335               	decf	setXYAxisRange@xyAxisRange,w
 13249     09E0  1D03               	btfss	3,2
 13250     09E1  29E3               	goto	u10711
 13251     09E2  29E4               	goto	u10710
 13252     09E3                     u10711:
 13253     09E3  29F6               	goto	l13783
 13254     09E4                     u10710:
 13255     09E4                     l13779:
 13256                           
 13257                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 996:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 997:         bitWrite(mode, 1, 1);
 13258     09E4  0837               	movf	setXYAxisRange@mode+1,w
 13259     09E5  00F2               	movwf	bitWrite@reg+1
 13260     09E6  0836               	movf	setXYAxisRange@mode,w
 13261     09E7  00F1               	movwf	bitWrite@reg
 13262     09E8  01F3               	clrf	bitWrite@position
 13263     09E9  0AF3               	incf	bitWrite@position,f
 13264     09EA  01F4               	clrf	bitWrite@value
 13265     09EB  0AF4               	incf	bitWrite@value,f
 13266     09EC  3194  248A  3189   	fcall	_bitWrite
 13267     09EF                     l13781:
 13268                           
 13269                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 998:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13270     09EF  0140               	movlb	0	; select bank0
 13271     09F0  0836               	movf	setXYAxisRange@mode,w
 13272     09F1  00A6               	movwf	writeRegister@data
 13273     09F2  3003               	movlw	3
 13274     09F3  3190  2025  3189   	fcall	_writeRegister
 13275     09F6                     l13783:
 13276                           
 13277                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1001:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13278     09F6  318D  2591  3189   	fcall	_getError
 13279     09F9                     l851:
 13280     09F9  0008               	return
 13281     09FA                     __end_of_setXYAxisRange:
 13282                           
 13283                           	psect	text4
 13284     08C5                     __ptext4:	
 13285 ;; *************** function _setTemperatureEn *****************
 13286 ;; Defined at:
 13287 ;;		line 1110 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;  temperatureE    1    wreg     _Bool 
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;  temperatureE    1   21[BANK0 ] _Bool 
 13292 ;;  mode            2   22[BANK0 ] unsigned short 
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  1    wreg      char 
 13295 ;; Registers used:
 13296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13303 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13304 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13305 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13306 ;;Total ram usage:        5 bytes
 13307 ;; Hardware stack levels used: 1
 13308 ;; Hardware stack levels required when called: 16
 13309 ;; This function calls:
 13310 ;;		_bitWrite
 13311 ;;		_getError
 13312 ;;		_readRegister
 13313 ;;		_writeRegister
 13314 ;; This function is called by:
 13315 ;;		_begin
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319     08C5                     _setTemperatureEn:	
 13320                           ;psect for function _setTemperatureEn
 13321                           
 13322                           
 13323                           ;incstack = 0
 13324 ;; hardware stack exceeded
 13325                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13326                           ;setTemperatureEn@temperatureEnable stored from wreg
 13327     08C5  0140               	movlb	0	; select bank0
 13328     08C6  00B5               	movwf	setTemperatureEn@temperatureEnable
 13329     08C7                     l13715:
 13330     08C7                     l13717:
 13331                           
 13332                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1112:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13333     08C7  3007               	movlw	7
 13334     08C8  3190  2030  3188   	fcall	_readRegister
 13335     08CB  0140               	movlb	0	; select bank0
 13336     08CC  00B3               	movwf	??_setTemperatureEn
 13337     08CD  01B4               	clrf	??_setTemperatureEn+1
 13338     08CE  0833               	movf	??_setTemperatureEn,w
 13339     08CF  00B6               	movwf	setTemperatureEn@mode
 13340     08D0  0834               	movf	??_setTemperatureEn+1,w
 13341     08D1  00B7               	movwf	setTemperatureEn@mode+1
 13342     08D2                     l13719:
 13343                           
 13344                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1115:     if (temperat
      +                          ureEnable == 0)
 13345     08D2  0835               	movf	setTemperatureEn@temperatureEnable,w
 13346     08D3  1D03               	btfss	3,2
 13347     08D4  28D6               	goto	u10641
 13348     08D5  28D7               	goto	u10640
 13349     08D6                     u10641:
 13350     08D6  28E8               	goto	l13725
 13351     08D7                     u10640:
 13352     08D7                     l13721:
 13353                           
 13354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1116:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1118:         bitWrite(mode, 0, 0
      +                          );
 13355     08D7  0837               	movf	setTemperatureEn@mode+1,w
 13356     08D8  00F2               	movwf	bitWrite@reg+1
 13357     08D9  0836               	movf	setTemperatureEn@mode,w
 13358     08DA  00F1               	movwf	bitWrite@reg
 13359     08DB  01F3               	clrf	bitWrite@position
 13360     08DC  01F4               	clrf	bitWrite@value
 13361     08DD  3194  248A  3188   	fcall	_bitWrite
 13362     08E0                     l13723:
 13363                           
 13364                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1120:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13365     08E0  0140               	movlb	0	; select bank0
 13366     08E1  0836               	movf	setTemperatureEn@mode,w
 13367     08E2  00A6               	movwf	writeRegister@data
 13368     08E3  3007               	movlw	7
 13369     08E4  3190  2025  3188   	fcall	_writeRegister
 13370                           
 13371                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1121:     } else if (t
      +                          emperatureEnable == 1)
 13372     08E7  28FE               	goto	l13731
 13373     08E8                     l13725:
 13374     08E8  0335               	decf	setTemperatureEn@temperatureEnable,w
 13375     08E9  1D03               	btfss	3,2
 13376     08EA  28EC               	goto	u10651
 13377     08EB  28ED               	goto	u10650
 13378     08EC                     u10651:
 13379     08EC  28FE               	goto	l13731
 13380     08ED                     u10650:
 13381     08ED                     l13727:
 13382                           
 13383                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1122:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1123:         bitWrite(mode, 0, 1
      +                          );
 13384     08ED  0837               	movf	setTemperatureEn@mode+1,w
 13385     08EE  00F2               	movwf	bitWrite@reg+1
 13386     08EF  0836               	movf	setTemperatureEn@mode,w
 13387     08F0  00F1               	movwf	bitWrite@reg
 13388     08F1  01F3               	clrf	bitWrite@position
 13389     08F2  01F4               	clrf	bitWrite@value
 13390     08F3  0AF4               	incf	bitWrite@value,f
 13391     08F4  3194  248A  3188   	fcall	_bitWrite
 13392     08F7                     l13729:
 13393                           
 13394                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1124:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13395     08F7  0140               	movlb	0	; select bank0
 13396     08F8  0836               	movf	setTemperatureEn@mode,w
 13397     08F9  00A6               	movwf	writeRegister@data
 13398     08FA  3007               	movlw	7
 13399     08FB  3190  2025  3188   	fcall	_writeRegister
 13400     08FE                     l13731:
 13401                           
 13402                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1127:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13403     08FE  318D  2591  3188   	fcall	_getError
 13404     0901                     l875:
 13405     0901  0008               	return
 13406     0902                     __end_of_setTemperatureEn:
 13407                           
 13408                           	psect	text5
 13409     0706                     __ptext5:	
 13410 ;; *************** function _setOperatingMode *****************
 13411 ;; Defined at:
 13412 ;;		line 503 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  opMode          1    wreg     unsigned char 
 13415 ;; Auto vars:     Size  Location     Type
 13416 ;;  opMode          1   21[BANK0 ] unsigned char 
 13417 ;;  mode            2   22[BANK0 ] unsigned short 
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  1    wreg      char 
 13420 ;; Registers used:
 13421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13422 ;; Tracked objects:
 13423 ;;		On entry : 0/0
 13424 ;;		On exit  : 0/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13430 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13431 ;;Total ram usage:        5 bytes
 13432 ;; Hardware stack levels used: 1
 13433 ;; Hardware stack levels required when called: 16
 13434 ;; This function calls:
 13435 ;;		_bitWrite
 13436 ;;		_getError
 13437 ;;		_readRegister
 13438 ;;		_writeRegister
 13439 ;; This function is called by:
 13440 ;;		_begin
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444     0706                     _setOperatingMode:	
 13445                           ;psect for function _setOperatingMode
 13446                           
 13447                           
 13448                           ;incstack = 0
 13449 ;; hardware stack exceeded
 13450                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13451                           ;setOperatingMode@opMode stored from wreg
 13452     0706  0140               	movlb	0	; select bank0
 13453     0707  00B5               	movwf	setOperatingMode@opMode
 13454     0708                     l13735:
 13455     0708                     l13737:
 13456                           
 13457                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 505:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13458     0708  3001               	movlw	1
 13459     0709  3190  2030  3187   	fcall	_readRegister
 13460     070C  0140               	movlb	0	; select bank0
 13461     070D  00B3               	movwf	??_setOperatingMode
 13462     070E  01B4               	clrf	??_setOperatingMode+1
 13463     070F  0833               	movf	??_setOperatingMode,w
 13464     0710  00B6               	movwf	setOperatingMode@mode
 13465     0711  0834               	movf	??_setOperatingMode+1,w
 13466     0712  00B7               	movwf	setOperatingMode@mode+1
 13467     0713                     l13739:
 13468                           
 13469                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 508:     if (opMode ==
      +                           0)
 13470     0713  0835               	movf	setOperatingMode@opMode,w
 13471     0714  1D03               	btfss	3,2
 13472     0715  2F17               	goto	u10661
 13473     0716  2F18               	goto	u10660
 13474     0717                     u10661:
 13475     0717  2F34               	goto	l13745
 13476     0718                     u10660:
 13477     0718                     l13741:
 13478                           
 13479                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 509:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 511:         bitWrite(mode, 0, 0);
 13480     0718  0837               	movf	setOperatingMode@mode+1,w
 13481     0719  00F2               	movwf	bitWrite@reg+1
 13482     071A  0836               	movf	setOperatingMode@mode,w
 13483     071B  00F1               	movwf	bitWrite@reg
 13484     071C  01F3               	clrf	bitWrite@position
 13485     071D  01F4               	clrf	bitWrite@value
 13486     071E  3194  248A  3187   	fcall	_bitWrite
 13487                           
 13488                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 513:         bitWrite(
      +                          mode, 1, 0);
 13489     0721  0140               	movlb	0	; select bank0
 13490     0722  0837               	movf	setOperatingMode@mode+1,w
 13491     0723  00F2               	movwf	bitWrite@reg+1
 13492     0724  0836               	movf	setOperatingMode@mode,w
 13493     0725  00F1               	movwf	bitWrite@reg
 13494     0726  01F3               	clrf	bitWrite@position
 13495     0727  0AF3               	incf	bitWrite@position,f
 13496     0728  01F4               	clrf	bitWrite@value
 13497     0729  3194  248A  3187   	fcall	_bitWrite
 13498     072C                     l13743:
 13499                           
 13500                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 514:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13501     072C  0140               	movlb	0	; select bank0
 13502     072D  0836               	movf	setOperatingMode@mode,w
 13503     072E  00A6               	movwf	writeRegister@data
 13504     072F  3001               	movlw	1
 13505     0730  3190  2025  3187   	fcall	_writeRegister
 13506                           
 13507                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 515:     } else if (op
      +                          Mode == 0X1)
 13508     0733  2F9D               	goto	l13763
 13509     0734                     l13745:
 13510     0734  0335               	decf	setOperatingMode@opMode,w
 13511     0735  1D03               	btfss	3,2
 13512     0736  2F38               	goto	u10671
 13513     0737  2F39               	goto	u10670
 13514     0738                     u10671:
 13515     0738  2F56               	goto	l13751
 13516     0739                     u10670:
 13517     0739                     l13747:
 13518                           
 13519                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 516:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 518:         bitWrite(mode, 0, 1);
 13520     0739  0837               	movf	setOperatingMode@mode+1,w
 13521     073A  00F2               	movwf	bitWrite@reg+1
 13522     073B  0836               	movf	setOperatingMode@mode,w
 13523     073C  00F1               	movwf	bitWrite@reg
 13524     073D  01F3               	clrf	bitWrite@position
 13525     073E  01F4               	clrf	bitWrite@value
 13526     073F  0AF4               	incf	bitWrite@value,f
 13527     0740  3194  248A  3187   	fcall	_bitWrite
 13528                           
 13529                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 520:         bitWrite(
      +                          mode, 1, 0);
 13530     0743  0140               	movlb	0	; select bank0
 13531     0744  0837               	movf	setOperatingMode@mode+1,w
 13532     0745  00F2               	movwf	bitWrite@reg+1
 13533     0746  0836               	movf	setOperatingMode@mode,w
 13534     0747  00F1               	movwf	bitWrite@reg
 13535     0748  01F3               	clrf	bitWrite@position
 13536     0749  0AF3               	incf	bitWrite@position,f
 13537     074A  01F4               	clrf	bitWrite@value
 13538     074B  3194  248A  3187   	fcall	_bitWrite
 13539     074E                     l13749:
 13540                           
 13541                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 521:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13542     074E  0140               	movlb	0	; select bank0
 13543     074F  0836               	movf	setOperatingMode@mode,w
 13544     0750  00A6               	movwf	writeRegister@data
 13545     0751  3001               	movlw	1
 13546     0752  3190  2025  3187   	fcall	_writeRegister
 13547                           
 13548                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 522:     } else if (op
      +                          Mode == 0X2)
 13549     0755  2F9D               	goto	l13763
 13550     0756                     l13751:
 13551     0756  3002               	movlw	2
 13552     0757  0635               	xorwf	setOperatingMode@opMode,w
 13553     0758  1D03               	btfss	3,2
 13554     0759  2F5B               	goto	u10681
 13555     075A  2F5C               	goto	u10680
 13556     075B                     u10681:
 13557     075B  2F79               	goto	l13757
 13558     075C                     u10680:
 13559     075C                     l13753:
 13560                           
 13561                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 523:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 524:         bitWrite(mode, 0, 0);
 13562     075C  0837               	movf	setOperatingMode@mode+1,w
 13563     075D  00F2               	movwf	bitWrite@reg+1
 13564     075E  0836               	movf	setOperatingMode@mode,w
 13565     075F  00F1               	movwf	bitWrite@reg
 13566     0760  01F3               	clrf	bitWrite@position
 13567     0761  01F4               	clrf	bitWrite@value
 13568     0762  3194  248A  3187   	fcall	_bitWrite
 13569                           
 13570                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 525:         bitWrite(
      +                          mode, 1, 1);
 13571     0765  0140               	movlb	0	; select bank0
 13572     0766  0837               	movf	setOperatingMode@mode+1,w
 13573     0767  00F2               	movwf	bitWrite@reg+1
 13574     0768  0836               	movf	setOperatingMode@mode,w
 13575     0769  00F1               	movwf	bitWrite@reg
 13576     076A  01F3               	clrf	bitWrite@position
 13577     076B  0AF3               	incf	bitWrite@position,f
 13578     076C  01F4               	clrf	bitWrite@value
 13579     076D  0AF4               	incf	bitWrite@value,f
 13580     076E  3194  248A  3187   	fcall	_bitWrite
 13581     0771                     l13755:
 13582                           
 13583                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 526:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13584     0771  0140               	movlb	0	; select bank0
 13585     0772  0836               	movf	setOperatingMode@mode,w
 13586     0773  00A6               	movwf	writeRegister@data
 13587     0774  3001               	movlw	1
 13588     0775  3190  2025  3187   	fcall	_writeRegister
 13589                           
 13590                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 527:     } else if (op
      +                          Mode == 0X3)
 13591     0778  2F9D               	goto	l13763
 13592     0779                     l13757:
 13593     0779  3003               	movlw	3
 13594     077A  0635               	xorwf	setOperatingMode@opMode,w
 13595     077B  1D03               	btfss	3,2
 13596     077C  2F7E               	goto	u10691
 13597     077D  2F7F               	goto	u10690
 13598     077E                     u10691:
 13599     077E  2F9D               	goto	l741
 13600     077F                     u10690:
 13601     077F                     l13759:
 13602                           
 13603                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 528:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 529:         bitWrite(mode, 0, 1);
 13604     077F  0837               	movf	setOperatingMode@mode+1,w
 13605     0780  00F2               	movwf	bitWrite@reg+1
 13606     0781  0836               	movf	setOperatingMode@mode,w
 13607     0782  00F1               	movwf	bitWrite@reg
 13608     0783  01F3               	clrf	bitWrite@position
 13609     0784  01F4               	clrf	bitWrite@value
 13610     0785  0AF4               	incf	bitWrite@value,f
 13611     0786  3194  248A  3187   	fcall	_bitWrite
 13612                           
 13613                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 530:         bitWrite(
      +                          mode, 1, 1);
 13614     0789  0140               	movlb	0	; select bank0
 13615     078A  0837               	movf	setOperatingMode@mode+1,w
 13616     078B  00F2               	movwf	bitWrite@reg+1
 13617     078C  0836               	movf	setOperatingMode@mode,w
 13618     078D  00F1               	movwf	bitWrite@reg
 13619     078E  01F3               	clrf	bitWrite@position
 13620     078F  0AF3               	incf	bitWrite@position,f
 13621     0790  01F4               	clrf	bitWrite@value
 13622     0791  0AF4               	incf	bitWrite@value,f
 13623     0792  3194  248A  3187   	fcall	_bitWrite
 13624     0795                     l13761:
 13625                           
 13626                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 531:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13627     0795  0140               	movlb	0	; select bank0
 13628     0796  0836               	movf	setOperatingMode@mode,w
 13629     0797  00A6               	movwf	writeRegister@data
 13630     0798  3001               	movlw	1
 13631     0799  3190  2025  3187   	fcall	_writeRegister
 13632     079C  2F9D               	goto	l13763
 13633     079D                     l741:
 13634     079D                     l13763:
 13635                           
 13636                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 534:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13637     079D  318D  2591  3187   	fcall	_getError
 13638     07A0                     l745:
 13639     07A0  0008               	return
 13640     07A1                     __end_of_setOperatingMode:
 13641                           
 13642                           	psect	text6
 13643     00A8                     __ptext6:	
 13644 ;; *************** function _setMagneticChannel *****************
 13645 ;; Defined at:
 13646 ;;		line 555 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  channelMode     1    wreg     unsigned char 
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;  channelMode     1   21[BANK0 ] unsigned char 
 13651 ;;  mode            2   22[BANK0 ] unsigned short 
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  1    wreg      char 
 13654 ;; Registers used:
 13655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13662 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13664 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13665 ;;Total ram usage:        5 bytes
 13666 ;; Hardware stack levels used: 1
 13667 ;; Hardware stack levels required when called: 16
 13668 ;; This function calls:
 13669 ;;		_bitWrite
 13670 ;;		_getError
 13671 ;;		_readRegister
 13672 ;;		_writeRegister
 13673 ;; This function is called by:
 13674 ;;		_begin
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678     00A8                     _setMagneticChannel:	
 13679                           ;psect for function _setMagneticChannel
 13680                           
 13681                           
 13682                           ;incstack = 0
 13683 ;; hardware stack exceeded
 13684                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13685                           ;setMagneticChannel@channelMode stored from wreg
 13686     00A8  0140               	movlb	0	; select bank0
 13687     00A9  00B5               	movwf	setMagneticChannel@channelMode
 13688     00AA                     l13635:
 13689     00AA                     l13637:
 13690                           
 13691                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13692     00AA  3002               	movlw	2
 13693     00AB  3190  2030  3180   	fcall	_readRegister
 13694     00AE  0140               	movlb	0	; select bank0
 13695     00AF  00B3               	movwf	??_setMagneticChannel
 13696     00B0  01B4               	clrf	??_setMagneticChannel+1
 13697     00B1  0833               	movf	??_setMagneticChannel,w
 13698     00B2  00B6               	movwf	setMagneticChannel@mode
 13699     00B3  0834               	movf	??_setMagneticChannel+1,w
 13700     00B4  00B7               	movwf	setMagneticChannel@mode+1
 13701     00B5                     l13639:
 13702                           
 13703                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:     if (channelMo
      +                          de == 0X0)
 13704     00B5  0835               	movf	setMagneticChannel@channelMode,w
 13705     00B6  1D03               	btfss	3,2
 13706     00B7  28B9               	goto	u10521
 13707     00B8  28BA               	goto	u10520
 13708     00B9                     u10521:
 13709     00B9  28ED               	goto	l13645
 13710     00BA                     u10520:
 13711     00BA                     l13641:
 13712                           
 13713                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 563:         bitWrite(mode, 4, 0);
 13714     00BA  0837               	movf	setMagneticChannel@mode+1,w
 13715     00BB  00F2               	movwf	bitWrite@reg+1
 13716     00BC  0836               	movf	setMagneticChannel@mode,w
 13717     00BD  00F1               	movwf	bitWrite@reg
 13718     00BE  3004               	movlw	4
 13719     00BF  00F3               	movwf	bitWrite@position
 13720     00C0  01F4               	clrf	bitWrite@value
 13721     00C1  3194  248A  3180   	fcall	_bitWrite
 13722                           
 13723                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 565:         bitWrite(
      +                          mode, 5, 0);
 13724     00C4  0140               	movlb	0	; select bank0
 13725     00C5  0837               	movf	setMagneticChannel@mode+1,w
 13726     00C6  00F2               	movwf	bitWrite@reg+1
 13727     00C7  0836               	movf	setMagneticChannel@mode,w
 13728     00C8  00F1               	movwf	bitWrite@reg
 13729     00C9  3005               	movlw	5
 13730     00CA  00F3               	movwf	bitWrite@position
 13731     00CB  01F4               	clrf	bitWrite@value
 13732     00CC  3194  248A  3180   	fcall	_bitWrite
 13733                           
 13734                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 567:         bitWrite(
      +                          mode, 6, 0);
 13735     00CF  0140               	movlb	0	; select bank0
 13736     00D0  0837               	movf	setMagneticChannel@mode+1,w
 13737     00D1  00F2               	movwf	bitWrite@reg+1
 13738     00D2  0836               	movf	setMagneticChannel@mode,w
 13739     00D3  00F1               	movwf	bitWrite@reg
 13740     00D4  3006               	movlw	6
 13741     00D5  00F3               	movwf	bitWrite@position
 13742     00D6  01F4               	clrf	bitWrite@value
 13743     00D7  3194  248A  3180   	fcall	_bitWrite
 13744                           
 13745                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 569:         bitWrite(
      +                          mode, 7, 0);
 13746     00DA  0140               	movlb	0	; select bank0
 13747     00DB  0837               	movf	setMagneticChannel@mode+1,w
 13748     00DC  00F2               	movwf	bitWrite@reg+1
 13749     00DD  0836               	movf	setMagneticChannel@mode,w
 13750     00DE  00F1               	movwf	bitWrite@reg
 13751     00DF  3007               	movlw	7
 13752     00E0  00F3               	movwf	bitWrite@position
 13753     00E1  01F4               	clrf	bitWrite@value
 13754     00E2  3194  248A  3180   	fcall	_bitWrite
 13755     00E5                     l13643:
 13756                           
 13757                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 571:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13758     00E5  0140               	movlb	0	; select bank0
 13759     00E6  0836               	movf	setMagneticChannel@mode,w
 13760     00E7  00A6               	movwf	writeRegister@data
 13761     00E8  3002               	movlw	2
 13762     00E9  3190  2025  3180   	fcall	_writeRegister
 13763                           
 13764                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 573:     } else if (ch
      +                          annelMode == 0X1)
 13765     00EC  2B73               	goto	l13711
 13766     00ED                     l13645:
 13767     00ED  0335               	decf	setMagneticChannel@channelMode,w
 13768     00EE  1D03               	btfss	3,2
 13769     00EF  28F1               	goto	u10531
 13770     00F0  28F2               	goto	u10530
 13771     00F1                     u10531:
 13772     00F1  2926               	goto	l13651
 13773     00F2                     u10530:
 13774     00F2                     l13647:
 13775                           
 13776                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 574:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 575:         bitWrite(mode, 4, 1);
 13777     00F2  0837               	movf	setMagneticChannel@mode+1,w
 13778     00F3  00F2               	movwf	bitWrite@reg+1
 13779     00F4  0836               	movf	setMagneticChannel@mode,w
 13780     00F5  00F1               	movwf	bitWrite@reg
 13781     00F6  3004               	movlw	4
 13782     00F7  00F3               	movwf	bitWrite@position
 13783     00F8  01F4               	clrf	bitWrite@value
 13784     00F9  0AF4               	incf	bitWrite@value,f
 13785     00FA  3194  248A  3180   	fcall	_bitWrite
 13786                           
 13787                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 576:         bitWrite(
      +                          mode, 5, 0);
 13788     00FD  0140               	movlb	0	; select bank0
 13789     00FE  0837               	movf	setMagneticChannel@mode+1,w
 13790     00FF  00F2               	movwf	bitWrite@reg+1
 13791     0100  0836               	movf	setMagneticChannel@mode,w
 13792     0101  00F1               	movwf	bitWrite@reg
 13793     0102  3005               	movlw	5
 13794     0103  00F3               	movwf	bitWrite@position
 13795     0104  01F4               	clrf	bitWrite@value
 13796     0105  3194  248A  3180   	fcall	_bitWrite
 13797                           
 13798                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 577:         bitWrite(
      +                          mode, 6, 0);
 13799     0108  0140               	movlb	0	; select bank0
 13800     0109  0837               	movf	setMagneticChannel@mode+1,w
 13801     010A  00F2               	movwf	bitWrite@reg+1
 13802     010B  0836               	movf	setMagneticChannel@mode,w
 13803     010C  00F1               	movwf	bitWrite@reg
 13804     010D  3006               	movlw	6
 13805     010E  00F3               	movwf	bitWrite@position
 13806     010F  01F4               	clrf	bitWrite@value
 13807     0110  3194  248A  3180   	fcall	_bitWrite
 13808                           
 13809                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 578:         bitWrite(
      +                          mode, 7, 0);
 13810     0113  0140               	movlb	0	; select bank0
 13811     0114  0837               	movf	setMagneticChannel@mode+1,w
 13812     0115  00F2               	movwf	bitWrite@reg+1
 13813     0116  0836               	movf	setMagneticChannel@mode,w
 13814     0117  00F1               	movwf	bitWrite@reg
 13815     0118  3007               	movlw	7
 13816     0119  00F3               	movwf	bitWrite@position
 13817     011A  01F4               	clrf	bitWrite@value
 13818     011B  3194  248A  3180   	fcall	_bitWrite
 13819     011E                     l13649:
 13820                           
 13821                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 579:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13822     011E  0140               	movlb	0	; select bank0
 13823     011F  0836               	movf	setMagneticChannel@mode,w
 13824     0120  00A6               	movwf	writeRegister@data
 13825     0121  3002               	movlw	2
 13826     0122  3190  2025  3180   	fcall	_writeRegister
 13827                           
 13828                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 580:     } else if (ch
      +                          annelMode == 0X2)
 13829     0125  2B73               	goto	l13711
 13830     0126                     l13651:
 13831     0126  3002               	movlw	2
 13832     0127  0635               	xorwf	setMagneticChannel@channelMode,w
 13833     0128  1D03               	btfss	3,2
 13834     0129  292B               	goto	u10541
 13835     012A  292C               	goto	u10540
 13836     012B                     u10541:
 13837     012B  2960               	goto	l13657
 13838     012C                     u10540:
 13839     012C                     l13653:
 13840                           
 13841                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 581:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 582:         bitWrite(mode, 4, 0);
 13842     012C  0837               	movf	setMagneticChannel@mode+1,w
 13843     012D  00F2               	movwf	bitWrite@reg+1
 13844     012E  0836               	movf	setMagneticChannel@mode,w
 13845     012F  00F1               	movwf	bitWrite@reg
 13846     0130  3004               	movlw	4
 13847     0131  00F3               	movwf	bitWrite@position
 13848     0132  01F4               	clrf	bitWrite@value
 13849     0133  3194  248A  3180   	fcall	_bitWrite
 13850                           
 13851                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 583:         bitWrite(
      +                          mode, 5, 1);
 13852     0136  0140               	movlb	0	; select bank0
 13853     0137  0837               	movf	setMagneticChannel@mode+1,w
 13854     0138  00F2               	movwf	bitWrite@reg+1
 13855     0139  0836               	movf	setMagneticChannel@mode,w
 13856     013A  00F1               	movwf	bitWrite@reg
 13857     013B  3005               	movlw	5
 13858     013C  00F3               	movwf	bitWrite@position
 13859     013D  01F4               	clrf	bitWrite@value
 13860     013E  0AF4               	incf	bitWrite@value,f
 13861     013F  3194  248A  3180   	fcall	_bitWrite
 13862                           
 13863                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:         bitWrite(
      +                          mode, 6, 0);
 13864     0142  0140               	movlb	0	; select bank0
 13865     0143  0837               	movf	setMagneticChannel@mode+1,w
 13866     0144  00F2               	movwf	bitWrite@reg+1
 13867     0145  0836               	movf	setMagneticChannel@mode,w
 13868     0146  00F1               	movwf	bitWrite@reg
 13869     0147  3006               	movlw	6
 13870     0148  00F3               	movwf	bitWrite@position
 13871     0149  01F4               	clrf	bitWrite@value
 13872     014A  3194  248A  3180   	fcall	_bitWrite
 13873                           
 13874                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 585:         bitWrite(
      +                          mode, 7, 0);
 13875     014D  0140               	movlb	0	; select bank0
 13876     014E  0837               	movf	setMagneticChannel@mode+1,w
 13877     014F  00F2               	movwf	bitWrite@reg+1
 13878     0150  0836               	movf	setMagneticChannel@mode,w
 13879     0151  00F1               	movwf	bitWrite@reg
 13880     0152  3007               	movlw	7
 13881     0153  00F3               	movwf	bitWrite@position
 13882     0154  01F4               	clrf	bitWrite@value
 13883     0155  3194  248A  3180   	fcall	_bitWrite
 13884     0158                     l13655:
 13885                           
 13886                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 586:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13887     0158  0140               	movlb	0	; select bank0
 13888     0159  0836               	movf	setMagneticChannel@mode,w
 13889     015A  00A6               	movwf	writeRegister@data
 13890     015B  3002               	movlw	2
 13891     015C  3190  2025  3180   	fcall	_writeRegister
 13892                           
 13893                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     } else if (ch
      +                          annelMode == 0X3)
 13894     015F  2B73               	goto	l13711
 13895     0160                     l13657:
 13896     0160  3003               	movlw	3
 13897     0161  0635               	xorwf	setMagneticChannel@channelMode,w
 13898     0162  1D03               	btfss	3,2
 13899     0163  2965               	goto	u10551
 13900     0164  2966               	goto	u10550
 13901     0165                     u10551:
 13902     0165  299B               	goto	l13663
 13903     0166                     u10550:
 13904     0166                     l13659:
 13905                           
 13906                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 589:         bitWrite(mode, 4, 1);
 13907     0166  0837               	movf	setMagneticChannel@mode+1,w
 13908     0167  00F2               	movwf	bitWrite@reg+1
 13909     0168  0836               	movf	setMagneticChannel@mode,w
 13910     0169  00F1               	movwf	bitWrite@reg
 13911     016A  3004               	movlw	4
 13912     016B  00F3               	movwf	bitWrite@position
 13913     016C  01F4               	clrf	bitWrite@value
 13914     016D  0AF4               	incf	bitWrite@value,f
 13915     016E  3194  248A  3180   	fcall	_bitWrite
 13916                           
 13917                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite(
      +                          mode, 5, 1);
 13918     0171  0140               	movlb	0	; select bank0
 13919     0172  0837               	movf	setMagneticChannel@mode+1,w
 13920     0173  00F2               	movwf	bitWrite@reg+1
 13921     0174  0836               	movf	setMagneticChannel@mode,w
 13922     0175  00F1               	movwf	bitWrite@reg
 13923     0176  3005               	movlw	5
 13924     0177  00F3               	movwf	bitWrite@position
 13925     0178  01F4               	clrf	bitWrite@value
 13926     0179  0AF4               	incf	bitWrite@value,f
 13927     017A  3194  248A  3180   	fcall	_bitWrite
 13928                           
 13929                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 591:         bitWrite(
      +                          mode, 6, 0);
 13930     017D  0140               	movlb	0	; select bank0
 13931     017E  0837               	movf	setMagneticChannel@mode+1,w
 13932     017F  00F2               	movwf	bitWrite@reg+1
 13933     0180  0836               	movf	setMagneticChannel@mode,w
 13934     0181  00F1               	movwf	bitWrite@reg
 13935     0182  3006               	movlw	6
 13936     0183  00F3               	movwf	bitWrite@position
 13937     0184  01F4               	clrf	bitWrite@value
 13938     0185  3194  248A  3180   	fcall	_bitWrite
 13939                           
 13940                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite(
      +                          mode, 7, 0);
 13941     0188  0140               	movlb	0	; select bank0
 13942     0189  0837               	movf	setMagneticChannel@mode+1,w
 13943     018A  00F2               	movwf	bitWrite@reg+1
 13944     018B  0836               	movf	setMagneticChannel@mode,w
 13945     018C  00F1               	movwf	bitWrite@reg
 13946     018D  3007               	movlw	7
 13947     018E  00F3               	movwf	bitWrite@position
 13948     018F  01F4               	clrf	bitWrite@value
 13949     0190  3194  248A  3180   	fcall	_bitWrite
 13950     0193                     l13661:
 13951                           
 13952                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13953     0193  0140               	movlb	0	; select bank0
 13954     0194  0836               	movf	setMagneticChannel@mode,w
 13955     0195  00A6               	movwf	writeRegister@data
 13956     0196  3002               	movlw	2
 13957     0197  3190  2025  3180   	fcall	_writeRegister
 13958                           
 13959                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:     } else if (ch
      +                          annelMode == 0X4)
 13960     019A  2B73               	goto	l13711
 13961     019B                     l13663:
 13962     019B  3004               	movlw	4
 13963     019C  0635               	xorwf	setMagneticChannel@channelMode,w
 13964     019D  1D03               	btfss	3,2
 13965     019E  29A0               	goto	u10561
 13966     019F  29A1               	goto	u10560
 13967     01A0                     u10561:
 13968     01A0  29D5               	goto	l13669
 13969     01A1                     u10560:
 13970     01A1                     l13665:
 13971                           
 13972                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 595:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:         bitWrite(mode, 4, 0);
 13973     01A1  0837               	movf	setMagneticChannel@mode+1,w
 13974     01A2  00F2               	movwf	bitWrite@reg+1
 13975     01A3  0836               	movf	setMagneticChannel@mode,w
 13976     01A4  00F1               	movwf	bitWrite@reg
 13977     01A5  3004               	movlw	4
 13978     01A6  00F3               	movwf	bitWrite@position
 13979     01A7  01F4               	clrf	bitWrite@value
 13980     01A8  3194  248A  3180   	fcall	_bitWrite
 13981                           
 13982                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:         bitWrite(
      +                          mode, 5, 0);
 13983     01AB  0140               	movlb	0	; select bank0
 13984     01AC  0837               	movf	setMagneticChannel@mode+1,w
 13985     01AD  00F2               	movwf	bitWrite@reg+1
 13986     01AE  0836               	movf	setMagneticChannel@mode,w
 13987     01AF  00F1               	movwf	bitWrite@reg
 13988     01B0  3005               	movlw	5
 13989     01B1  00F3               	movwf	bitWrite@position
 13990     01B2  01F4               	clrf	bitWrite@value
 13991     01B3  3194  248A  3180   	fcall	_bitWrite
 13992                           
 13993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         bitWrite(
      +                          mode, 6, 1);
 13994     01B6  0140               	movlb	0	; select bank0
 13995     01B7  0837               	movf	setMagneticChannel@mode+1,w
 13996     01B8  00F2               	movwf	bitWrite@reg+1
 13997     01B9  0836               	movf	setMagneticChannel@mode,w
 13998     01BA  00F1               	movwf	bitWrite@reg
 13999     01BB  3006               	movlw	6
 14000     01BC  00F3               	movwf	bitWrite@position
 14001     01BD  01F4               	clrf	bitWrite@value
 14002     01BE  0AF4               	incf	bitWrite@value,f
 14003     01BF  3194  248A  3180   	fcall	_bitWrite
 14004                           
 14005                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite(
      +                          mode, 7, 0);
 14006     01C2  0140               	movlb	0	; select bank0
 14007     01C3  0837               	movf	setMagneticChannel@mode+1,w
 14008     01C4  00F2               	movwf	bitWrite@reg+1
 14009     01C5  0836               	movf	setMagneticChannel@mode,w
 14010     01C6  00F1               	movwf	bitWrite@reg
 14011     01C7  3007               	movlw	7
 14012     01C8  00F3               	movwf	bitWrite@position
 14013     01C9  01F4               	clrf	bitWrite@value
 14014     01CA  3194  248A  3180   	fcall	_bitWrite
 14015     01CD                     l13667:
 14016                           
 14017                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14018     01CD  0140               	movlb	0	; select bank0
 14019     01CE  0836               	movf	setMagneticChannel@mode,w
 14020     01CF  00A6               	movwf	writeRegister@data
 14021     01D0  3002               	movlw	2
 14022     01D1  3190  2025  3180   	fcall	_writeRegister
 14023                           
 14024                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:     } else if (ch
      +                          annelMode == 0X5)
 14025     01D4  2B73               	goto	l13711
 14026     01D5                     l13669:
 14027     01D5  3005               	movlw	5
 14028     01D6  0635               	xorwf	setMagneticChannel@channelMode,w
 14029     01D7  1D03               	btfss	3,2
 14030     01D8  29DA               	goto	u10571
 14031     01D9  29DB               	goto	u10570
 14032     01DA                     u10571:
 14033     01DA  2A10               	goto	l13675
 14034     01DB                     u10570:
 14035     01DB                     l13671:
 14036                           
 14037                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:         bitWrite(mode, 4, 1);
 14038     01DB  0837               	movf	setMagneticChannel@mode+1,w
 14039     01DC  00F2               	movwf	bitWrite@reg+1
 14040     01DD  0836               	movf	setMagneticChannel@mode,w
 14041     01DE  00F1               	movwf	bitWrite@reg
 14042     01DF  3004               	movlw	4
 14043     01E0  00F3               	movwf	bitWrite@position
 14044     01E1  01F4               	clrf	bitWrite@value
 14045     01E2  0AF4               	incf	bitWrite@value,f
 14046     01E3  3194  248A  3180   	fcall	_bitWrite
 14047                           
 14048                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         bitWrite(
      +                          mode, 5, 0);
 14049     01E6  0140               	movlb	0	; select bank0
 14050     01E7  0837               	movf	setMagneticChannel@mode+1,w
 14051     01E8  00F2               	movwf	bitWrite@reg+1
 14052     01E9  0836               	movf	setMagneticChannel@mode,w
 14053     01EA  00F1               	movwf	bitWrite@reg
 14054     01EB  3005               	movlw	5
 14055     01EC  00F3               	movwf	bitWrite@position
 14056     01ED  01F4               	clrf	bitWrite@value
 14057     01EE  3194  248A  3180   	fcall	_bitWrite
 14058                           
 14059                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(
      +                          mode, 6, 1);
 14060     01F1  0140               	movlb	0	; select bank0
 14061     01F2  0837               	movf	setMagneticChannel@mode+1,w
 14062     01F3  00F2               	movwf	bitWrite@reg+1
 14063     01F4  0836               	movf	setMagneticChannel@mode,w
 14064     01F5  00F1               	movwf	bitWrite@reg
 14065     01F6  3006               	movlw	6
 14066     01F7  00F3               	movwf	bitWrite@position
 14067     01F8  01F4               	clrf	bitWrite@value
 14068     01F9  0AF4               	incf	bitWrite@value,f
 14069     01FA  3194  248A  3180   	fcall	_bitWrite
 14070                           
 14071                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite(
      +                          mode, 7, 0);
 14072     01FD  0140               	movlb	0	; select bank0
 14073     01FE  0837               	movf	setMagneticChannel@mode+1,w
 14074     01FF  00F2               	movwf	bitWrite@reg+1
 14075     0200  0836               	movf	setMagneticChannel@mode,w
 14076     0201  00F1               	movwf	bitWrite@reg
 14077     0202  3007               	movlw	7
 14078     0203  00F3               	movwf	bitWrite@position
 14079     0204  01F4               	clrf	bitWrite@value
 14080     0205  3194  248A  3180   	fcall	_bitWrite
 14081     0208                     l13673:
 14082                           
 14083                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14084     0208  0140               	movlb	0	; select bank0
 14085     0209  0836               	movf	setMagneticChannel@mode,w
 14086     020A  00A6               	movwf	writeRegister@data
 14087     020B  3002               	movlw	2
 14088     020C  3190  2025  3180   	fcall	_writeRegister
 14089                           
 14090                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:     } else if (ch
      +                          annelMode == 0X6)
 14091     020F  2B73               	goto	l13711
 14092     0210                     l13675:
 14093     0210  3006               	movlw	6
 14094     0211  0635               	xorwf	setMagneticChannel@channelMode,w
 14095     0212  1D03               	btfss	3,2
 14096     0213  2A15               	goto	u10581
 14097     0214  2A16               	goto	u10580
 14098     0215                     u10581:
 14099     0215  2A4B               	goto	l13681
 14100     0216                     u10580:
 14101     0216                     l13677:
 14102                           
 14103                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite(mode, 4, 0);
 14104     0216  0837               	movf	setMagneticChannel@mode+1,w
 14105     0217  00F2               	movwf	bitWrite@reg+1
 14106     0218  0836               	movf	setMagneticChannel@mode,w
 14107     0219  00F1               	movwf	bitWrite@reg
 14108     021A  3004               	movlw	4
 14109     021B  00F3               	movwf	bitWrite@position
 14110     021C  01F4               	clrf	bitWrite@value
 14111     021D  3194  248A  3180   	fcall	_bitWrite
 14112                           
 14113                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite(
      +                          mode, 5, 1);
 14114     0220  0140               	movlb	0	; select bank0
 14115     0221  0837               	movf	setMagneticChannel@mode+1,w
 14116     0222  00F2               	movwf	bitWrite@reg+1
 14117     0223  0836               	movf	setMagneticChannel@mode,w
 14118     0224  00F1               	movwf	bitWrite@reg
 14119     0225  3005               	movlw	5
 14120     0226  00F3               	movwf	bitWrite@position
 14121     0227  01F4               	clrf	bitWrite@value
 14122     0228  0AF4               	incf	bitWrite@value,f
 14123     0229  3194  248A  3180   	fcall	_bitWrite
 14124                           
 14125                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(
      +                          mode, 6, 1);
 14126     022C  0140               	movlb	0	; select bank0
 14127     022D  0837               	movf	setMagneticChannel@mode+1,w
 14128     022E  00F2               	movwf	bitWrite@reg+1
 14129     022F  0836               	movf	setMagneticChannel@mode,w
 14130     0230  00F1               	movwf	bitWrite@reg
 14131     0231  3006               	movlw	6
 14132     0232  00F3               	movwf	bitWrite@position
 14133     0233  01F4               	clrf	bitWrite@value
 14134     0234  0AF4               	incf	bitWrite@value,f
 14135     0235  3194  248A  3180   	fcall	_bitWrite
 14136                           
 14137                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite(
      +                          mode, 7, 0);
 14138     0238  0140               	movlb	0	; select bank0
 14139     0239  0837               	movf	setMagneticChannel@mode+1,w
 14140     023A  00F2               	movwf	bitWrite@reg+1
 14141     023B  0836               	movf	setMagneticChannel@mode,w
 14142     023C  00F1               	movwf	bitWrite@reg
 14143     023D  3007               	movlw	7
 14144     023E  00F3               	movwf	bitWrite@position
 14145     023F  01F4               	clrf	bitWrite@value
 14146     0240  3194  248A  3180   	fcall	_bitWrite
 14147     0243                     l13679:
 14148                           
 14149                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14150     0243  0140               	movlb	0	; select bank0
 14151     0244  0836               	movf	setMagneticChannel@mode,w
 14152     0245  00A6               	movwf	writeRegister@data
 14153     0246  3002               	movlw	2
 14154     0247  3190  2025  3180   	fcall	_writeRegister
 14155                           
 14156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:     } else if (ch
      +                          annelMode == 0X7)
 14157     024A  2B73               	goto	l13711
 14158     024B                     l13681:
 14159     024B  3007               	movlw	7
 14160     024C  0635               	xorwf	setMagneticChannel@channelMode,w
 14161     024D  1D03               	btfss	3,2
 14162     024E  2A50               	goto	u10591
 14163     024F  2A51               	goto	u10590
 14164     0250                     u10591:
 14165     0250  2A87               	goto	l13687
 14166     0251                     u10590:
 14167     0251                     l13683:
 14168                           
 14169                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite(mode, 4, 1);
 14170     0251  0837               	movf	setMagneticChannel@mode+1,w
 14171     0252  00F2               	movwf	bitWrite@reg+1
 14172     0253  0836               	movf	setMagneticChannel@mode,w
 14173     0254  00F1               	movwf	bitWrite@reg
 14174     0255  3004               	movlw	4
 14175     0256  00F3               	movwf	bitWrite@position
 14176     0257  01F4               	clrf	bitWrite@value
 14177     0258  0AF4               	incf	bitWrite@value,f
 14178     0259  3194  248A  3180   	fcall	_bitWrite
 14179                           
 14180                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite(
      +                          mode, 5, 1);
 14181     025C  0140               	movlb	0	; select bank0
 14182     025D  0837               	movf	setMagneticChannel@mode+1,w
 14183     025E  00F2               	movwf	bitWrite@reg+1
 14184     025F  0836               	movf	setMagneticChannel@mode,w
 14185     0260  00F1               	movwf	bitWrite@reg
 14186     0261  3005               	movlw	5
 14187     0262  00F3               	movwf	bitWrite@position
 14188     0263  01F4               	clrf	bitWrite@value
 14189     0264  0AF4               	incf	bitWrite@value,f
 14190     0265  3194  248A  3180   	fcall	_bitWrite
 14191                           
 14192                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(
      +                          mode, 6, 1);
 14193     0268  0140               	movlb	0	; select bank0
 14194     0269  0837               	movf	setMagneticChannel@mode+1,w
 14195     026A  00F2               	movwf	bitWrite@reg+1
 14196     026B  0836               	movf	setMagneticChannel@mode,w
 14197     026C  00F1               	movwf	bitWrite@reg
 14198     026D  3006               	movlw	6
 14199     026E  00F3               	movwf	bitWrite@position
 14200     026F  01F4               	clrf	bitWrite@value
 14201     0270  0AF4               	incf	bitWrite@value,f
 14202     0271  3194  248A  3180   	fcall	_bitWrite
 14203                           
 14204                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite(
      +                          mode, 7, 0);
 14205     0274  0140               	movlb	0	; select bank0
 14206     0275  0837               	movf	setMagneticChannel@mode+1,w
 14207     0276  00F2               	movwf	bitWrite@reg+1
 14208     0277  0836               	movf	setMagneticChannel@mode,w
 14209     0278  00F1               	movwf	bitWrite@reg
 14210     0279  3007               	movlw	7
 14211     027A  00F3               	movwf	bitWrite@position
 14212     027B  01F4               	clrf	bitWrite@value
 14213     027C  3194  248A  3180   	fcall	_bitWrite
 14214     027F                     l13685:
 14215                           
 14216                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14217     027F  0140               	movlb	0	; select bank0
 14218     0280  0836               	movf	setMagneticChannel@mode,w
 14219     0281  00A6               	movwf	writeRegister@data
 14220     0282  3002               	movlw	2
 14221     0283  3190  2025  3180   	fcall	_writeRegister
 14222                           
 14223                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:     } else if (ch
      +                          annelMode == 0X8)
 14224     0286  2B73               	goto	l13711
 14225     0287                     l13687:
 14226     0287  3008               	movlw	8
 14227     0288  0635               	xorwf	setMagneticChannel@channelMode,w
 14228     0289  1D03               	btfss	3,2
 14229     028A  2A8C               	goto	u10601
 14230     028B  2A8D               	goto	u10600
 14231     028C                     u10601:
 14232     028C  2AC1               	goto	l13693
 14233     028D                     u10600:
 14234     028D                     l13689:
 14235                           
 14236                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite(mode, 4, 0);
 14237     028D  0837               	movf	setMagneticChannel@mode+1,w
 14238     028E  00F2               	movwf	bitWrite@reg+1
 14239     028F  0836               	movf	setMagneticChannel@mode,w
 14240     0290  00F1               	movwf	bitWrite@reg
 14241     0291  3004               	movlw	4
 14242     0292  00F3               	movwf	bitWrite@position
 14243     0293  01F4               	clrf	bitWrite@value
 14244     0294  3194  248A  3180   	fcall	_bitWrite
 14245                           
 14246                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite(
      +                          mode, 5, 0);
 14247     0297  0140               	movlb	0	; select bank0
 14248     0298  0837               	movf	setMagneticChannel@mode+1,w
 14249     0299  00F2               	movwf	bitWrite@reg+1
 14250     029A  0836               	movf	setMagneticChannel@mode,w
 14251     029B  00F1               	movwf	bitWrite@reg
 14252     029C  3005               	movlw	5
 14253     029D  00F3               	movwf	bitWrite@position
 14254     029E  01F4               	clrf	bitWrite@value
 14255     029F  3194  248A  3180   	fcall	_bitWrite
 14256                           
 14257                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(
      +                          mode, 6, 0);
 14258     02A2  0140               	movlb	0	; select bank0
 14259     02A3  0837               	movf	setMagneticChannel@mode+1,w
 14260     02A4  00F2               	movwf	bitWrite@reg+1
 14261     02A5  0836               	movf	setMagneticChannel@mode,w
 14262     02A6  00F1               	movwf	bitWrite@reg
 14263     02A7  3006               	movlw	6
 14264     02A8  00F3               	movwf	bitWrite@position
 14265     02A9  01F4               	clrf	bitWrite@value
 14266     02AA  3194  248A  3180   	fcall	_bitWrite
 14267                           
 14268                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite(
      +                          mode, 7, 1);
 14269     02AD  0140               	movlb	0	; select bank0
 14270     02AE  0837               	movf	setMagneticChannel@mode+1,w
 14271     02AF  00F2               	movwf	bitWrite@reg+1
 14272     02B0  0836               	movf	setMagneticChannel@mode,w
 14273     02B1  00F1               	movwf	bitWrite@reg
 14274     02B2  3007               	movlw	7
 14275     02B3  00F3               	movwf	bitWrite@position
 14276     02B4  01F4               	clrf	bitWrite@value
 14277     02B5  0AF4               	incf	bitWrite@value,f
 14278     02B6  3194  248A  3180   	fcall	_bitWrite
 14279     02B9                     l13691:
 14280                           
 14281                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14282     02B9  0140               	movlb	0	; select bank0
 14283     02BA  0836               	movf	setMagneticChannel@mode,w
 14284     02BB  00A6               	movwf	writeRegister@data
 14285     02BC  3002               	movlw	2
 14286     02BD  3190  2025  3180   	fcall	_writeRegister
 14287                           
 14288                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:     } else if (ch
      +                          annelMode == 0X9)
 14289     02C0  2B73               	goto	l13711
 14290     02C1                     l13693:
 14291     02C1  3009               	movlw	9
 14292     02C2  0635               	xorwf	setMagneticChannel@channelMode,w
 14293     02C3  1D03               	btfss	3,2
 14294     02C4  2AC6               	goto	u10611
 14295     02C5  2AC7               	goto	u10610
 14296     02C6                     u10611:
 14297     02C6  2AFC               	goto	l13699
 14298     02C7                     u10610:
 14299     02C7                     l13695:
 14300                           
 14301                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite(mode, 4, 1);
 14302     02C7  0837               	movf	setMagneticChannel@mode+1,w
 14303     02C8  00F2               	movwf	bitWrite@reg+1
 14304     02C9  0836               	movf	setMagneticChannel@mode,w
 14305     02CA  00F1               	movwf	bitWrite@reg
 14306     02CB  3004               	movlw	4
 14307     02CC  00F3               	movwf	bitWrite@position
 14308     02CD  01F4               	clrf	bitWrite@value
 14309     02CE  0AF4               	incf	bitWrite@value,f
 14310     02CF  3194  248A  3180   	fcall	_bitWrite
 14311                           
 14312                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite(
      +                          mode, 5, 0);
 14313     02D2  0140               	movlb	0	; select bank0
 14314     02D3  0837               	movf	setMagneticChannel@mode+1,w
 14315     02D4  00F2               	movwf	bitWrite@reg+1
 14316     02D5  0836               	movf	setMagneticChannel@mode,w
 14317     02D6  00F1               	movwf	bitWrite@reg
 14318     02D7  3005               	movlw	5
 14319     02D8  00F3               	movwf	bitWrite@position
 14320     02D9  01F4               	clrf	bitWrite@value
 14321     02DA  3194  248A  3180   	fcall	_bitWrite
 14322                           
 14323                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(
      +                          mode, 6, 0);
 14324     02DD  0140               	movlb	0	; select bank0
 14325     02DE  0837               	movf	setMagneticChannel@mode+1,w
 14326     02DF  00F2               	movwf	bitWrite@reg+1
 14327     02E0  0836               	movf	setMagneticChannel@mode,w
 14328     02E1  00F1               	movwf	bitWrite@reg
 14329     02E2  3006               	movlw	6
 14330     02E3  00F3               	movwf	bitWrite@position
 14331     02E4  01F4               	clrf	bitWrite@value
 14332     02E5  3194  248A  3180   	fcall	_bitWrite
 14333                           
 14334                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite(
      +                          mode, 7, 1);
 14335     02E8  0140               	movlb	0	; select bank0
 14336     02E9  0837               	movf	setMagneticChannel@mode+1,w
 14337     02EA  00F2               	movwf	bitWrite@reg+1
 14338     02EB  0836               	movf	setMagneticChannel@mode,w
 14339     02EC  00F1               	movwf	bitWrite@reg
 14340     02ED  3007               	movlw	7
 14341     02EE  00F3               	movwf	bitWrite@position
 14342     02EF  01F4               	clrf	bitWrite@value
 14343     02F0  0AF4               	incf	bitWrite@value,f
 14344     02F1  3194  248A  3180   	fcall	_bitWrite
 14345     02F4                     l13697:
 14346                           
 14347                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14348     02F4  0140               	movlb	0	; select bank0
 14349     02F5  0836               	movf	setMagneticChannel@mode,w
 14350     02F6  00A6               	movwf	writeRegister@data
 14351     02F7  3002               	movlw	2
 14352     02F8  3190  2025  3180   	fcall	_writeRegister
 14353                           
 14354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:     } else if (ch
      +                          annelMode == 0XA)
 14355     02FB  2B73               	goto	l13711
 14356     02FC                     l13699:
 14357     02FC  300A               	movlw	10
 14358     02FD  0635               	xorwf	setMagneticChannel@channelMode,w
 14359     02FE  1D03               	btfss	3,2
 14360     02FF  2B01               	goto	u10621
 14361     0300  2B02               	goto	u10620
 14362     0301                     u10621:
 14363     0301  2B37               	goto	l13705
 14364     0302                     u10620:
 14365     0302                     l13701:
 14366                           
 14367                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite(mode, 4, 0);
 14368     0302  0837               	movf	setMagneticChannel@mode+1,w
 14369     0303  00F2               	movwf	bitWrite@reg+1
 14370     0304  0836               	movf	setMagneticChannel@mode,w
 14371     0305  00F1               	movwf	bitWrite@reg
 14372     0306  3004               	movlw	4
 14373     0307  00F3               	movwf	bitWrite@position
 14374     0308  01F4               	clrf	bitWrite@value
 14375     0309  3194  248A  3180   	fcall	_bitWrite
 14376                           
 14377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite(
      +                          mode, 5, 1);
 14378     030C  0140               	movlb	0	; select bank0
 14379     030D  0837               	movf	setMagneticChannel@mode+1,w
 14380     030E  00F2               	movwf	bitWrite@reg+1
 14381     030F  0836               	movf	setMagneticChannel@mode,w
 14382     0310  00F1               	movwf	bitWrite@reg
 14383     0311  3005               	movlw	5
 14384     0312  00F3               	movwf	bitWrite@position
 14385     0313  01F4               	clrf	bitWrite@value
 14386     0314  0AF4               	incf	bitWrite@value,f
 14387     0315  3194  248A  3180   	fcall	_bitWrite
 14388                           
 14389                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(
      +                          mode, 6, 0);
 14390     0318  0140               	movlb	0	; select bank0
 14391     0319  0837               	movf	setMagneticChannel@mode+1,w
 14392     031A  00F2               	movwf	bitWrite@reg+1
 14393     031B  0836               	movf	setMagneticChannel@mode,w
 14394     031C  00F1               	movwf	bitWrite@reg
 14395     031D  3006               	movlw	6
 14396     031E  00F3               	movwf	bitWrite@position
 14397     031F  01F4               	clrf	bitWrite@value
 14398     0320  3194  248A  3180   	fcall	_bitWrite
 14399                           
 14400                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite(
      +                          mode, 7, 1);
 14401     0323  0140               	movlb	0	; select bank0
 14402     0324  0837               	movf	setMagneticChannel@mode+1,w
 14403     0325  00F2               	movwf	bitWrite@reg+1
 14404     0326  0836               	movf	setMagneticChannel@mode,w
 14405     0327  00F1               	movwf	bitWrite@reg
 14406     0328  3007               	movlw	7
 14407     0329  00F3               	movwf	bitWrite@position
 14408     032A  01F4               	clrf	bitWrite@value
 14409     032B  0AF4               	incf	bitWrite@value,f
 14410     032C  3194  248A  3180   	fcall	_bitWrite
 14411     032F                     l13703:
 14412                           
 14413                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14414     032F  0140               	movlb	0	; select bank0
 14415     0330  0836               	movf	setMagneticChannel@mode,w
 14416     0331  00A6               	movwf	writeRegister@data
 14417     0332  3002               	movlw	2
 14418     0333  3190  2025  3180   	fcall	_writeRegister
 14419                           
 14420                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:     } else if (ch
      +                          annelMode == 0XB)
 14421     0336  2B73               	goto	l13711
 14422     0337                     l13705:
 14423     0337  300B               	movlw	11
 14424     0338  0635               	xorwf	setMagneticChannel@channelMode,w
 14425     0339  1D03               	btfss	3,2
 14426     033A  2B3C               	goto	u10631
 14427     033B  2B3D               	goto	u10630
 14428     033C                     u10631:
 14429     033C  2B73               	goto	l765
 14430     033D                     u10630:
 14431     033D                     l13707:
 14432                           
 14433                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite(mode, 4, 1);
 14434     033D  0837               	movf	setMagneticChannel@mode+1,w
 14435     033E  00F2               	movwf	bitWrite@reg+1
 14436     033F  0836               	movf	setMagneticChannel@mode,w
 14437     0340  00F1               	movwf	bitWrite@reg
 14438     0341  3004               	movlw	4
 14439     0342  00F3               	movwf	bitWrite@position
 14440     0343  01F4               	clrf	bitWrite@value
 14441     0344  0AF4               	incf	bitWrite@value,f
 14442     0345  3194  248A  3180   	fcall	_bitWrite
 14443                           
 14444                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite(
      +                          mode, 5, 1);
 14445     0348  0140               	movlb	0	; select bank0
 14446     0349  0837               	movf	setMagneticChannel@mode+1,w
 14447     034A  00F2               	movwf	bitWrite@reg+1
 14448     034B  0836               	movf	setMagneticChannel@mode,w
 14449     034C  00F1               	movwf	bitWrite@reg
 14450     034D  3005               	movlw	5
 14451     034E  00F3               	movwf	bitWrite@position
 14452     034F  01F4               	clrf	bitWrite@value
 14453     0350  0AF4               	incf	bitWrite@value,f
 14454     0351  3194  248A  3180   	fcall	_bitWrite
 14455                           
 14456                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(
      +                          mode, 6, 0);
 14457     0354  0140               	movlb	0	; select bank0
 14458     0355  0837               	movf	setMagneticChannel@mode+1,w
 14459     0356  00F2               	movwf	bitWrite@reg+1
 14460     0357  0836               	movf	setMagneticChannel@mode,w
 14461     0358  00F1               	movwf	bitWrite@reg
 14462     0359  3006               	movlw	6
 14463     035A  00F3               	movwf	bitWrite@position
 14464     035B  01F4               	clrf	bitWrite@value
 14465     035C  3194  248A  3180   	fcall	_bitWrite
 14466                           
 14467                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite(
      +                          mode, 7, 1);
 14468     035F  0140               	movlb	0	; select bank0
 14469     0360  0837               	movf	setMagneticChannel@mode+1,w
 14470     0361  00F2               	movwf	bitWrite@reg+1
 14471     0362  0836               	movf	setMagneticChannel@mode,w
 14472     0363  00F1               	movwf	bitWrite@reg
 14473     0364  3007               	movlw	7
 14474     0365  00F3               	movwf	bitWrite@position
 14475     0366  01F4               	clrf	bitWrite@value
 14476     0367  0AF4               	incf	bitWrite@value,f
 14477     0368  3194  248A  3180   	fcall	_bitWrite
 14478     036B                     l13709:
 14479                           
 14480                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14481     036B  0140               	movlb	0	; select bank0
 14482     036C  0836               	movf	setMagneticChannel@mode,w
 14483     036D  00A6               	movwf	writeRegister@data
 14484     036E  3002               	movlw	2
 14485     036F  3190  2025  3180   	fcall	_writeRegister
 14486     0372  2B73               	goto	l13711
 14487     0373                     l765:
 14488     0373                     l13711:
 14489                           
 14490                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14491     0373  318D  2591  3180   	fcall	_getError
 14492     0376                     l771:
 14493     0376  0008               	return
 14494     0377                     __end_of_setMagneticChannel:
 14495                           
 14496                           	psect	text7
 14497     1025                     __ptext7:	
 14498 ;; *************** function _writeRegister *****************
 14499 ;; Defined at:
 14500 ;;		line 157 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;  regAddress      1    wreg     unsigned char 
 14503 ;;  data            1    6[BANK0 ] unsigned char 
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      unsigned char 
 14508 ;; Registers used:
 14509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14515 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14519 ;;Total ram usage:        2 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; Hardware stack levels required when called: 13
 14522 ;; This function calls:
 14523 ;;		_i2c_write1ByteRegister
 14524 ;; This function is called by:
 14525 ;;		_setOperatingMode
 14526 ;;		_setMagneticChannel
 14527 ;;		_setXYAxisRange
 14528 ;;		_setZAxisRange
 14529 ;;		_setTemperatureEn
 14530 ;;		_setupWakeUpAndSleep
 14531 ;;		_setCRCMode
 14532 ;;		_setMagTemp
 14533 ;;		_setConvAvg
 14534 ;;		_setIntThreshold
 14535 ;;		_setLowPower
 14536 ;;		_setGlitchFilter
 14537 ;;		_setTriggerMode
 14538 ;;		_setSleeptime
 14539 ;;		_setMagDir
 14540 ;;		_setMagnitudeGain
 14541 ;;		_setMagneticGain
 14542 ;;		_setMagneticOffset1
 14543 ;;		_setMagneticOffset2
 14544 ;;		_setAngleEn
 14545 ;;		_setXThreshold
 14546 ;;		_setYThreshold
 14547 ;;		_setZThreshold
 14548 ;;		_setTemperatureThreshold
 14549 ;;		_setInterruptResult
 14550 ;;		_setThresholdEn
 14551 ;;		_setIntPinState
 14552 ;;		_setInterruptMode
 14553 ;;		_setMaskInterrupt
 14554 ;;		_setI2CAddress
 14555 ;;		_setI2CAddressEN
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559     1025                     _writeRegister:	
 14560                           ;psect for function _writeRegister
 14561                           
 14562                           
 14563                           ;incstack = 0
 14564                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14565                           ;writeRegister@regAddress stored from wreg
 14566     1025  0140               	movlb	0	; select bank0
 14567     1026  00A7               	movwf	writeRegister@regAddress
 14568     1027                     l13453:
 14569                           
 14570                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 158:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14571     1027  0827               	movf	writeRegister@regAddress,w
 14572     1028  00A4               	movwf	i2c_write1ByteRegister@reg
 14573     1029  0826               	movf	writeRegister@data,w
 14574     102A  00A5               	movwf	i2c_write1ByteRegister@data
 14575     102B  3022               	movlw	34
 14576     102C  3197  272E  3190   	fcall	_i2c_write1ByteRegister
 14577     102F                     l664:
 14578     102F  0008               	return
 14579     1030                     __end_of_writeRegister:
 14580                           
 14581                           	psect	text8
 14582     172E                     __ptext8:	
 14583 ;; *************** function _i2c_write1ByteRegister *****************
 14584 ;; Defined at:
 14585 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  address         1    wreg     unsigned char 
 14588 ;;  reg             1    4[BANK0 ] unsigned char 
 14589 ;;  data            1    5[BANK0 ] unsigned char 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  address         1   11[COMMON] unsigned char 
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      void 
 14594 ;; Registers used:
 14595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14604 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14605 ;;Total ram usage:        3 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; Hardware stack levels required when called: 12
 14608 ;; This function calls:
 14609 ;;		_I2C1_Close
 14610 ;;		_I2C1_MasterWrite
 14611 ;;		_I2C1_Open
 14612 ;;		_I2C1_SetAddressNackCallback
 14613 ;;		_I2C1_SetBuffer
 14614 ;;		_I2C1_SetDataCompleteCallback
 14615 ;; This function is called by:
 14616 ;;		_writeRegister
 14617 ;;		_BMA253_Initialize
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621     172E                     _i2c_write1ByteRegister:	
 14622                           ;psect for function _i2c_write1ByteRegister
 14623                           
 14624                           
 14625                           ;incstack = 0
 14626                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14627                           ;i2c_write1ByteRegister@address stored from wreg
 14628     172E  00FB               	movwf	i2c_write1ByteRegister@address
 14629     172F                     l13281:
 14630     172F                     l13283:	
 14631                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14632                           
 14633     172F  087B               	movf	i2c_write1ByteRegister@address,w
 14634     1730  3197  27CA  3197   	fcall	_I2C1_Open
 14635     1733  3A00               	xorlw	0
 14636     1734  1903               	skipnz
 14637     1735  2F37               	goto	u10091
 14638     1736  2F38               	goto	u10090
 14639     1737                     u10091:
 14640     1737  2F2F               	goto	l13283
 14641     1738                     u10090:
 14642     1738                     l13285:
 14643                           
 14644                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14645     1738  3008               	movlw	low _wr1RegCompleteHandler
 14646     1739  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14647     173A  3011               	movlw	high _wr1RegCompleteHandler
 14648     173B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14649     173C  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14650     173D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14651     173E  319F  27F5  3197   	fcall	_I2C1_SetDataCompleteCallback
 14652     1741                     l13287:
 14653                           
 14654                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14655     1741  3024               	movlw	low i2c_write1ByteRegister@reg
 14656     1742  00F1               	movwf	I2C1_SetBuffer@buffer
 14657     1743  3000               	movlw	high i2c_write1ByteRegister@reg
 14658     1744  00F2               	movwf	I2C1_SetBuffer@buffer+1
 14659     1745  3001               	movlw	1
 14660     1746  00F3               	movwf	I2C1_SetBuffer@bufferSize
 14661     1747  3000               	movlw	0
 14662     1748  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 14663     1749  3190  20A4  3197   	fcall	_I2C1_SetBuffer
 14664     174C                     l13289:
 14665                           
 14666                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14667     174C  3000               	movlw	0
 14668     174D  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14669     174E  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14670     174F  3000               	movlw	0
 14671     1750  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14672     1751  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14673     1752  3190  2004  3197   	fcall	_I2C1_SetAddressNackCallback
 14674     1755                     l13291:
 14675                           
 14676                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14677     1755  319E  26FD  3197   	fcall	_I2C1_MasterWrite
 14678     1758                     l13293:	
 14679                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14680                           
 14681     1758  3192  2262  3197   	fcall	_I2C1_Close
 14682     175B  3A01               	xorlw	1
 14683     175C  1903               	skipnz
 14684     175D  2F5F               	goto	u10101
 14685     175E  2F60               	goto	u10100
 14686     175F                     u10101:
 14687     175F  2F58               	goto	l13293
 14688     1760                     u10100:
 14689     1760                     l510:
 14690     1760  0008               	return
 14691     1761                     __end_of_i2c_write1ByteRegister:
 14692                           
 14693                           	psect	text9
 14694     0D91                     __ptext9:	
 14695 ;; *************** function _getError *****************
 14696 ;; Defined at:
 14697 ;;		line 2287 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;		None
 14700 ;; Auto vars:     Size  Location     Type
 14701 ;;  statusReg       1   18[BANK0 ] unsigned char 
 14702 ;;  oscillatorEr    1   17[BANK0 ] unsigned char 
 14703 ;;  intPinError     1   16[BANK0 ] unsigned char 
 14704 ;;  otpCrcError     1   15[BANK0 ] unsigned char 
 14705 ;;  undervoltage    1   14[BANK0 ] unsigned char 
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  1    wreg      char 
 14708 ;; Registers used:
 14709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14710 ;; Tracked objects:
 14711 ;;		On entry : 0/0
 14712 ;;		On exit  : 0/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14716 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14719 ;;Total ram usage:        7 bytes
 14720 ;; Hardware stack levels used: 1
 14721 ;; Hardware stack levels required when called: 15
 14722 ;; This function calls:
 14723 ;;		_bitRead
 14724 ;;		_getDeviceStatus
 14725 ;; This function is called by:
 14726 ;;		_begin
 14727 ;;		_setOperatingMode
 14728 ;;		_setMagneticChannel
 14729 ;;		_setXYAxisRange
 14730 ;;		_setZAxisRange
 14731 ;;		_setTemperatureEn
 14732 ;;		_setupWakeUpAndSleep
 14733 ;;		_readWakeUpAndSleepData
 14734 ;;		_setCRCMode
 14735 ;;		_setMagTemp
 14736 ;;		_setConvAvg
 14737 ;;		_setReadMode
 14738 ;;		_setIntThreshold
 14739 ;;		_setLowPower
 14740 ;;		_setGlitchFilter
 14741 ;;		_setTriggerMode
 14742 ;;		_setSleeptime
 14743 ;;		_setMagDir
 14744 ;;		_setMagnitudeGain
 14745 ;;		_setMagneticGain
 14746 ;;		_setMagneticOffset1
 14747 ;;		_setMagneticOffset2
 14748 ;;		_setAngleEn
 14749 ;;		_setXThreshold
 14750 ;;		_setYThreshold
 14751 ;;		_setZThreshold
 14752 ;;		_setTemperatureThreshold
 14753 ;;		_setInterruptResult
 14754 ;;		_setThresholdEn
 14755 ;;		_setIntPinState
 14756 ;;		_setInterruptMode
 14757 ;;		_setMaskInterrupt
 14758 ;;		_setI2CAddress
 14759 ;;		_setI2CAddressEN
 14760 ;;		_setOscillatorError
 14761 ;; This function uses a non-reentrant model
 14762 ;;
 14763                           
 14764     0D91                     _getError:	
 14765                           ;psect for function _getError
 14766                           
 14767     0D91                     l13419:	
 14768                           ;incstack = 0
 14769 ;; hardware stack exceeded
 14770                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14771                           
 14772                           
 14773                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2289:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14774     0D91  319F  277F  318D   	fcall	_getDeviceStatus
 14775     0D94  0140               	movlb	0	; select bank0
 14776     0D95  00B2               	movwf	getError@statusReg
 14777     0D96                     l13421:
 14778                           
 14779                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2290:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14780     0D96  0832               	movf	getError@statusReg,w
 14781     0D97  00AC               	movwf	??_getError
 14782     0D98  01AD               	clrf	??_getError+1
 14783     0D99  082C               	movf	??_getError,w
 14784     0D9A  00F1               	movwf	bitRead@reg
 14785     0D9B  082D               	movf	??_getError+1,w
 14786     0D9C  00F2               	movwf	bitRead@reg+1
 14787     0D9D  01F3               	clrf	bitRead@position
 14788     0D9E  3194  2421  318D   	fcall	_bitRead
 14789     0DA1  0140               	movlb	0	; select bank0
 14790     0DA2  00AE               	movwf	getError@undervoltageError
 14791     0DA3                     l13423:
 14792                           
 14793                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2291:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14794     0DA3  0832               	movf	getError@statusReg,w
 14795     0DA4  00AC               	movwf	??_getError
 14796     0DA5  01AD               	clrf	??_getError+1
 14797     0DA6  082C               	movf	??_getError,w
 14798     0DA7  00F1               	movwf	bitRead@reg
 14799     0DA8  082D               	movf	??_getError+1,w
 14800     0DA9  00F2               	movwf	bitRead@reg+1
 14801     0DAA  01F3               	clrf	bitRead@position
 14802     0DAB  0AF3               	incf	bitRead@position,f
 14803     0DAC  3194  2421  318D   	fcall	_bitRead
 14804     0DAF  0140               	movlb	0	; select bank0
 14805     0DB0  00AF               	movwf	getError@otpCrcError
 14806     0DB1                     l13425:
 14807                           
 14808                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2292:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14809     0DB1  0832               	movf	getError@statusReg,w
 14810     0DB2  00AC               	movwf	??_getError
 14811     0DB3  01AD               	clrf	??_getError+1
 14812     0DB4  082C               	movf	??_getError,w
 14813     0DB5  00F1               	movwf	bitRead@reg
 14814     0DB6  082D               	movf	??_getError+1,w
 14815     0DB7  00F2               	movwf	bitRead@reg+1
 14816     0DB8  3002               	movlw	2
 14817     0DB9  00F3               	movwf	bitRead@position
 14818     0DBA  3194  2421  318D   	fcall	_bitRead
 14819     0DBD  0140               	movlb	0	; select bank0
 14820     0DBE  00B0               	movwf	getError@intPinError
 14821     0DBF                     l13427:
 14822                           
 14823                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2293:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14824     0DBF  0832               	movf	getError@statusReg,w
 14825     0DC0  00AC               	movwf	??_getError
 14826     0DC1  01AD               	clrf	??_getError+1
 14827     0DC2  082C               	movf	??_getError,w
 14828     0DC3  00F1               	movwf	bitRead@reg
 14829     0DC4  082D               	movf	??_getError+1,w
 14830     0DC5  00F2               	movwf	bitRead@reg+1
 14831     0DC6  3003               	movlw	3
 14832     0DC7  00F3               	movwf	bitRead@position
 14833     0DC8  3194  2421  318D   	fcall	_bitRead
 14834     0DCB  0140               	movlb	0	; select bank0
 14835     0DCC  00B1               	movwf	getError@oscillatorError
 14836     0DCD                     l13429:
 14837                           
 14838                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2296:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14839     0DCD  082E               	movf	getError@undervoltageError,w
 14840     0DCE  1903               	btfsc	3,2
 14841     0DCF  2DD1               	goto	u10291
 14842     0DD0  2DD2               	goto	u10290
 14843     0DD1                     u10291:
 14844     0DD1  2DE3               	goto	l13443
 14845     0DD2                     u10290:
 14846     0DD2                     l13431:
 14847     0DD2  082F               	movf	getError@otpCrcError,w
 14848     0DD3  1903               	btfsc	3,2
 14849     0DD4  2DD6               	goto	u10301
 14850     0DD5  2DD7               	goto	u10300
 14851     0DD6                     u10301:
 14852     0DD6  2DE3               	goto	l13443
 14853     0DD7                     u10300:
 14854     0DD7                     l13433:
 14855     0DD7  0830               	movf	getError@intPinError,w
 14856     0DD8  1903               	btfsc	3,2
 14857     0DD9  2DDB               	goto	u10311
 14858     0DDA  2DDC               	goto	u10310
 14859     0DDB                     u10311:
 14860     0DDB  2DE3               	goto	l13443
 14861     0DDC                     u10310:
 14862     0DDC                     l13435:
 14863     0DDC  0831               	movf	getError@oscillatorError,w
 14864     0DDD  1903               	btfsc	3,2
 14865     0DDE  2DE0               	goto	u10321
 14866     0DDF  2DE1               	goto	u10320
 14867     0DE0                     u10321:
 14868     0DE0  2DE3               	goto	l13443
 14869     0DE1                     u10320:
 14870     0DE1                     l13437:
 14871                           
 14872                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2297:         return -
      +                          1;
 14873     0DE1  30FF               	movlw	255
 14874     0DE2  2DE4               	goto	l1165
 14875     0DE3                     l13443:
 14876                           
 14877                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2299:         return 0
      +                          ;
 14878     0DE3  3000               	movlw	0
 14879     0DE4                     l1165:
 14880     0DE4  0008               	return
 14881     0DE5                     __end_of_getError:
 14882                           
 14883                           	psect	text10
 14884     1F7F                     __ptext10:	
 14885 ;; *************** function _getDeviceStatus *****************
 14886 ;; Defined at:
 14887 ;;		line 2273 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;		None
 14890 ;; Auto vars:     Size  Location     Type
 14891 ;;  deviceStatus    1   11[COMMON] unsigned char 
 14892 ;; Return value:  Size  Location     Type
 14893 ;;                  1    wreg      unsigned char 
 14894 ;; Registers used:
 14895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14896 ;; Tracked objects:
 14897 ;;		On entry : 0/0
 14898 ;;		On exit  : 0/0
 14899 ;;		Unchanged: 0/0
 14900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14905 ;;Total ram usage:        1 bytes
 14906 ;; Hardware stack levels used: 1
 14907 ;; Hardware stack levels required when called: 14
 14908 ;; This function calls:
 14909 ;;		_readRegister
 14910 ;; This function is called by:
 14911 ;;		_getError
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915     1F7F                     _getDeviceStatus:	
 14916                           ;psect for function _getDeviceStatus
 14917                           
 14918     1F7F                     l13347:	
 14919                           ;incstack = 0
 14920 ;; hardware stack exceeded
 14921                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14922                           
 14923                           
 14924                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2275:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14925     1F7F  301C               	movlw	28
 14926     1F80  3190  2030  319F   	fcall	_readRegister
 14927     1F83  00FB               	movwf	getDeviceStatus@deviceStatusReg
 14928     1F84                     l13349:
 14929                           
 14930                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2277:     return devic
      +                          eStatusReg;
 14931     1F84  087B               	movf	getDeviceStatus@deviceStatusReg,w
 14932     1F85                     l1161:
 14933     1F85  0008               	return
 14934     1F86                     __end_of_getDeviceStatus:
 14935                           
 14936                           	psect	text11
 14937     148A                     __ptext11:	
 14938 ;; *************** function _bitWrite *****************
 14939 ;; Defined at:
 14940 ;;		line 2487 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  reg             2    1[COMMON] PTR unsigned short 
 14943 ;;		 -> RAM(8192), 
 14944 ;;  position        1    3[COMMON] unsigned char 
 14945 ;;  value           1    4[COMMON] unsigned char 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  mask            2    9[COMMON] unsigned short 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      void 
 14950 ;; Registers used:
 14951 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14960 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14961 ;;Total ram usage:       10 bytes
 14962 ;; Hardware stack levels used: 1
 14963 ;; Hardware stack levels required when called: 4
 14964 ;; This function calls:
 14965 ;;		Nothing
 14966 ;; This function is called by:
 14967 ;;		_setOperatingMode
 14968 ;;		_setMagneticChannel
 14969 ;;		_setXYAxisRange
 14970 ;;		_setZAxisRange
 14971 ;;		_setTemperatureEn
 14972 ;;		_setCRCMode
 14973 ;;		_setMagTemp
 14974 ;;		_setConvAvg
 14975 ;;		_setReadMode
 14976 ;;		_setIntThreshold
 14977 ;;		_setLowPower
 14978 ;;		_setGlitchFilter
 14979 ;;		_setTriggerMode
 14980 ;;		_setSleeptime
 14981 ;;		_setMagDir
 14982 ;;		_setMagnitudeGain
 14983 ;;		_setAngleEn
 14984 ;;		_setInterruptResult
 14985 ;;		_setThresholdEn
 14986 ;;		_setIntPinState
 14987 ;;		_setMaskInterrupt
 14988 ;;		_setI2CAddressEN
 14989 ;;		_setOscillatorError
 14990 ;; This function uses a non-reentrant model
 14991 ;;
 14992                           
 14993     148A                     _bitWrite:	
 14994                           ;psect for function _bitWrite
 14995                           
 14996     148A                     l13457:	
 14997                           ;incstack = 0
 14998                           ; Regs used in _bitWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 14999                           
 15000     148A                     l13459:
 15001                           
 15002                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2489:     mask = value
      +                           << position;
 15003     148A  0874               	movf	bitWrite@value,w
 15004     148B  00F5               	movwf	??_bitWrite
 15005     148C  01F6               	clrf	??_bitWrite+1
 15006     148D  0A73               	incf	bitWrite@position,w
 15007     148E  2C91               	goto	u10334
 15008     148F                     u10335:
 15009     148F  35F5               	lslf	??_bitWrite,f
 15010     1490  0DF6               	rlf	??_bitWrite+1,f
 15011     1491                     u10334:
 15012     1491  0B89               	decfsz	9,f
 15013     1492  2C8F               	goto	u10335
 15014     1493  0875               	movf	??_bitWrite,w
 15015     1494  00F9               	movwf	bitWrite@mask
 15016     1495  0876               	movf	??_bitWrite+1,w
 15017     1496  00FA               	movwf	bitWrite@mask+1
 15018     1497                     l13461:
 15019                           
 15020                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2490:     *reg = *reg 
      +                          | mask;
 15021     1497  0871               	movf	bitWrite@reg,w
 15022     1498  0086               	movwf	6
 15023     1499  0872               	movf	bitWrite@reg+1,w
 15024     149A  0087               	movwf	7
 15025     149B  3F40               	moviw [0]fsr1
 15026     149C  00F5               	movwf	??_bitWrite
 15027     149D  3F41               	moviw [1]fsr1
 15028     149E  00F6               	movwf	??_bitWrite+1
 15029     149F  0879               	movf	bitWrite@mask,w
 15030     14A0  0475               	iorwf	??_bitWrite,w
 15031     14A1  00F7               	movwf	??_bitWrite+2
 15032     14A2  087A               	movf	bitWrite@mask+1,w
 15033     14A3  0476               	iorwf	??_bitWrite+1,w
 15034     14A4  00F8               	movwf	??_bitWrite+3
 15035     14A5  0871               	movf	bitWrite@reg,w
 15036     14A6  0086               	movwf	6
 15037     14A7  0872               	movf	bitWrite@reg+1,w
 15038     14A8  0087               	movwf	7
 15039     14A9  0877               	movf	??_bitWrite+2,w
 15040     14AA  3FC0               	movwi [0]fsr1
 15041     14AB  0878               	movf	??_bitWrite+3,w
 15042     14AC  3FC1               	movwi [1]fsr1
 15043     14AD                     l1201:
 15044     14AD  0008               	return
 15045     14AE                     __end_of_bitWrite:
 15046                           
 15047                           	psect	text12
 15048     11DD                     __ptext12:	
 15049 ;; *************** function _isConnected *****************
 15050 ;; Defined at:
 15051 ;;		line 95 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;		None
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;		None
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      char 
 15058 ;; Registers used:
 15059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;Total ram usage:        0 bytes
 15070 ;; Hardware stack levels used: 1
 15071 ;; Hardware stack levels required when called: 14
 15072 ;; This function calls:
 15073 ;;		_TMAG5273_GetManufacture
 15074 ;; This function is called by:
 15075 ;;		_begin
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079     11DD                     _isConnected:	
 15080                           ;psect for function _isConnected
 15081                           
 15082     11DD                     l13623:	
 15083                           ;incstack = 0
 15084                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15085                           
 15086                           
 15087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15088     11DD  3192  22AB  3191   	fcall	_TMAG5273_GetManufacture
 15089     11E0  0140               	movlb	0	; select bank0
 15090     11E1  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15091     11E2  00D1               	movwf	_manufactureId+1
 15092     11E3  082D               	movf	?_TMAG5273_GetManufacture,w
 15093     11E4  00D0               	movwf	_manufactureId
 15094     11E5                     l13625:
 15095                           
 15096                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 105:     if (manufactu
      +                          reId != 0x5449) {
 15097     11E5  3049               	movlw	73
 15098     11E6  0650               	xorwf	_manufactureId,w
 15099     11E7  3054               	movlw	84
 15100     11E8  1903               	skipnz
 15101     11E9  0651               	xorwf	_manufactureId+1,w
 15102     11EA  1903               	btfsc	3,2
 15103     11EB  29ED               	goto	u10511
 15104     11EC  29EE               	goto	u10510
 15105     11ED                     u10511:
 15106     11ED  29F0               	goto	l13631
 15107     11EE                     u10510:
 15108     11EE                     l13627:
 15109                           
 15110                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 106:         return -1
      +                          ;
 15111     11EE  30FF               	movlw	255
 15112     11EF  29F1               	goto	l655
 15113     11F0                     l13631:
 15114                           
 15115                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 109:     return 0;
 15116     11F0  3000               	movlw	0
 15117     11F1                     l655:
 15118     11F1  0008               	return
 15119     11F2                     __end_of_isConnected:
 15120                           
 15121                           	psect	text13
 15122     12AB                     __ptext13:	
 15123 ;; *************** function _TMAG5273_GetManufacture *****************
 15124 ;; Defined at:
 15125 ;;		line 2493 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;		None
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;  read            2   15[BANK0 ] unsigned short 
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  2   13[BANK0 ] unsigned short 
 15132 ;; Registers used:
 15133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15142 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15143 ;;Total ram usage:        4 bytes
 15144 ;; Hardware stack levels used: 1
 15145 ;; Hardware stack levels required when called: 13
 15146 ;; This function calls:
 15147 ;;		_i2c_read2ByteRegister
 15148 ;;		_swap
 15149 ;; This function is called by:
 15150 ;;		_isConnected
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154     12AB                     _TMAG5273_GetManufacture:	
 15155                           ;psect for function _TMAG5273_GetManufacture
 15156                           
 15157     12AB                     l13447:	
 15158                           ;incstack = 0
 15159                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15160                           
 15161                           
 15162                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2495:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15163     12AB  300E               	movlw	14
 15164     12AC  0140               	movlb	0	; select bank0
 15165     12AD  00A4               	movwf	i2c_read2ByteRegister@reg
 15166     12AE  3022               	movlw	34
 15167     12AF  318A  223E  3192   	fcall	_i2c_read2ByteRegister
 15168     12B2  0140               	movlb	0	; select bank0
 15169     12B3  0825               	movf	?_i2c_read2ByteRegister+1,w
 15170     12B4  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15171     12B5  0824               	movf	?_i2c_read2ByteRegister,w
 15172     12B6  00AF               	movwf	TMAG5273_GetManufacture@read
 15173     12B7                     l13449:
 15174                           
 15175                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2496:     return swap(
      +                          read);
 15176     12B7  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15177     12B8  00F2               	movwf	swap@reg+1
 15178     12B9  082F               	movf	TMAG5273_GetManufacture@read,w
 15179     12BA  00F1               	movwf	swap@reg
 15180     12BB  3191  21B4  3192   	fcall	_swap
 15181     12BE  0872               	movf	?_swap+1,w
 15182     12BF  0140               	movlb	0	; select bank0
 15183     12C0  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15184     12C1  0871               	movf	?_swap,w
 15185     12C2  00AD               	movwf	?_TMAG5273_GetManufacture
 15186     12C3                     l1204:
 15187     12C3  0008               	return
 15188     12C4                     __end_of_TMAG5273_GetManufacture:
 15189                           
 15190                           	psect	text14
 15191     11B4                     __ptext14:	
 15192 ;; *************** function _swap *****************
 15193 ;; Defined at:
 15194 ;;		line 2499 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;  reg             2    1[COMMON] unsigned short 
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  lowerByte       1    9[COMMON] unsigned char 
 15199 ;;  upperByte       1    8[COMMON] unsigned char 
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  2    1[COMMON] unsigned short 
 15202 ;; Registers used:
 15203 ;;		wreg, status,2
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15213 ;;Total ram usage:        9 bytes
 15214 ;; Hardware stack levels used: 1
 15215 ;; Hardware stack levels required when called: 4
 15216 ;; This function calls:
 15217 ;;		Nothing
 15218 ;; This function is called by:
 15219 ;;		_TMAG5273_GetManufacture
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223     11B4                     _swap:	
 15224                           ;psect for function _swap
 15225                           
 15226     11B4                     l13353:	
 15227                           ;incstack = 0
 15228                           ; Regs used in _swap: [wreg+status,2]
 15229                           
 15230                           
 15231                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2500:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2501:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2503:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15232     11B4  0872               	movf	swap@reg+1,w
 15233     11B5  00F8               	movwf	swap@upperByte
 15234     11B6                     l13355:
 15235                           
 15236                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2504:     lowerByte = 
      +                          (uint8_t) reg;
 15237     11B6  0871               	movf	swap@reg,w
 15238     11B7  00F9               	movwf	swap@lowerByte
 15239     11B8                     l13357:
 15240                           
 15241                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2506:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15242     11B8  0878               	movf	swap@upperByte,w
 15243     11B9  00F3               	movwf	??_swap
 15244     11BA  01F4               	clrf	??_swap+1
 15245     11BB  0879               	movf	swap@lowerByte,w
 15246     11BC  00F5               	movwf	??_swap+2
 15247     11BD  01F6               	clrf	??_swap+3
 15248     11BE  0875               	movf	??_swap+2,w
 15249     11BF  00F6               	movwf	??_swap+3
 15250     11C0  01F5               	clrf	??_swap+2
 15251     11C1  0873               	movf	??_swap,w
 15252     11C2  0475               	iorwf	??_swap+2,w
 15253     11C3  00F1               	movwf	swap@reg
 15254     11C4  0874               	movf	??_swap+1,w
 15255     11C5  0476               	iorwf	??_swap+3,w
 15256     11C6  00F2               	movwf	swap@reg+1
 15257     11C7                     l13359:
 15258     11C7                     l1207:	
 15259                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2508:     return reg;
 15260                           
 15261     11C7  0008               	return
 15262     11C8                     __end_of_swap:
 15263                           
 15264                           	psect	text15
 15265     11C8                     __ptext15:	
 15266 ;; *************** function _getTemperatureEN *****************
 15267 ;; Defined at:
 15268 ;;		line 2006 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;		None
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  tempENreg       1   15[BANK0 ] unsigned char 
 15273 ;;  tempEN          1   14[BANK0 ] unsigned char 
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      unsigned char 
 15276 ;; Registers used:
 15277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15286 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15287 ;;Total ram usage:        4 bytes
 15288 ;; Hardware stack levels used: 1
 15289 ;; Hardware stack levels required when called: 14
 15290 ;; This function calls:
 15291 ;;		_bitRead
 15292 ;;		_readRegister
 15293 ;; This function is called by:
 15294 ;;		_begin
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298     11C8                     _getTemperatureEN:	
 15299                           ;psect for function _getTemperatureEN
 15300                           
 15301     11C8                     l14051:	
 15302                           ;incstack = 0
 15303                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15304                           
 15305     11C8                     l14053:
 15306                           
 15307                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2008:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15308     11C8  3007               	movlw	7
 15309     11C9  3190  2030  3191   	fcall	_readRegister
 15310     11CC  0140               	movlb	0	; select bank0
 15311     11CD  00AF               	movwf	getTemperatureEN@tempENreg
 15312     11CE                     l14055:
 15313                           
 15314                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2010:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15315     11CE  082F               	movf	getTemperatureEN@tempENreg,w
 15316     11CF  00AC               	movwf	??_getTemperatureEN
 15317     11D0  01AD               	clrf	??_getTemperatureEN+1
 15318     11D1  082C               	movf	??_getTemperatureEN,w
 15319     11D2  00F1               	movwf	bitRead@reg
 15320     11D3  082D               	movf	??_getTemperatureEN+1,w
 15321     11D4  00F2               	movwf	bitRead@reg+1
 15322     11D5  01F3               	clrf	bitRead@position
 15323     11D6  3194  2421  3191   	fcall	_bitRead
 15324     11D9  0140               	movlb	0	; select bank0
 15325     11DA  00AE               	movwf	getTemperatureEN@tempEN
 15326     11DB                     l14057:
 15327                           
 15328                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2012:     return tempE
      +                          N;
 15329     11DB  082E               	movf	getTemperatureEN@tempEN,w
 15330     11DC                     l1105:
 15331     11DC  0008               	return
 15332     11DD                     __end_of_getTemperatureEN:
 15333                           
 15334                           	psect	text16
 15335     0CEA                     __ptext16:	
 15336 ;; *************** function _getOperatingMode *****************
 15337 ;; Defined at:
 15338 ;;		line 1552 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;		None
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  opMode1         1   16[BANK0 ] unsigned char 
 15343 ;;  opMode0         1   15[BANK0 ] unsigned char 
 15344 ;;  opMode          1   14[BANK0 ] unsigned char 
 15345 ;; Return value:  Size  Location     Type
 15346 ;;                  1    wreg      unsigned char 
 15347 ;; Registers used:
 15348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15349 ;; Tracked objects:
 15350 ;;		On entry : 0/0
 15351 ;;		On exit  : 0/0
 15352 ;;		Unchanged: 0/0
 15353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15355 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15357 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15358 ;;Total ram usage:        5 bytes
 15359 ;; Hardware stack levels used: 1
 15360 ;; Hardware stack levels required when called: 14
 15361 ;; This function calls:
 15362 ;;		_bitRead
 15363 ;;		_readRegister
 15364 ;; This function is called by:
 15365 ;;		_begin
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369     0CEA                     _getOperatingMode:	
 15370                           ;psect for function _getOperatingMode
 15371                           
 15372     0CEA                     l13817:	
 15373                           ;incstack = 0
 15374                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15375                           
 15376     0CEA                     l13819:
 15377                           
 15378                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1554:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15379     0CEA  3001               	movlw	1
 15380     0CEB  3190  2030  318C   	fcall	_readRegister
 15381     0CEE  0140               	movlb	0	; select bank0
 15382     0CEF  00AE               	movwf	getOperatingMode@opMode
 15383     0CF0                     l13821:
 15384                           
 15385                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1556:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15386     0CF0  082E               	movf	getOperatingMode@opMode,w
 15387     0CF1  00AC               	movwf	??_getOperatingMode
 15388     0CF2  01AD               	clrf	??_getOperatingMode+1
 15389     0CF3  082C               	movf	??_getOperatingMode,w
 15390     0CF4  00F1               	movwf	bitRead@reg
 15391     0CF5  082D               	movf	??_getOperatingMode+1,w
 15392     0CF6  00F2               	movwf	bitRead@reg+1
 15393     0CF7  01F3               	clrf	bitRead@position
 15394     0CF8  3194  2421  318C   	fcall	_bitRead
 15395     0CFB  0140               	movlb	0	; select bank0
 15396     0CFC  00AF               	movwf	getOperatingMode@opMode0
 15397     0CFD                     l13823:
 15398                           
 15399                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1557:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15400     0CFD  082E               	movf	getOperatingMode@opMode,w
 15401     0CFE  00AC               	movwf	??_getOperatingMode
 15402     0CFF  01AD               	clrf	??_getOperatingMode+1
 15403     0D00  082C               	movf	??_getOperatingMode,w
 15404     0D01  00F1               	movwf	bitRead@reg
 15405     0D02  082D               	movf	??_getOperatingMode+1,w
 15406     0D03  00F2               	movwf	bitRead@reg+1
 15407     0D04  01F3               	clrf	bitRead@position
 15408     0D05  0AF3               	incf	bitRead@position,f
 15409     0D06  3194  2421  318C   	fcall	_bitRead
 15410     0D09  0140               	movlb	0	; select bank0
 15411     0D0A  00B0               	movwf	getOperatingMode@opMode1
 15412     0D0B                     l13825:
 15413                           
 15414                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1559:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15415     0D0B  082F               	movf	getOperatingMode@opMode0,w
 15416     0D0C  1D03               	btfss	3,2
 15417     0D0D  2D0F               	goto	u10741
 15418     0D0E  2D10               	goto	u10740
 15419     0D0F                     u10741:
 15420     0D0F  2D17               	goto	l13835
 15421     0D10                     u10740:
 15422     0D10                     l13827:
 15423     0D10  0830               	movf	getOperatingMode@opMode1,w
 15424     0D11  1D03               	btfss	3,2
 15425     0D12  2D14               	goto	u10751
 15426     0D13  2D15               	goto	u10750
 15427     0D14                     u10751:
 15428     0D14  2D17               	goto	l13835
 15429     0D15                     u10750:
 15430     0D15                     l13829:
 15431                           
 15432                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1560:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1562:         return 0;
 15433     0D15  3000               	movlw	0
 15434     0D16  2D3C               	goto	l977
 15435     0D17                     l13835:
 15436     0D17  032F               	decf	getOperatingMode@opMode0,w
 15437     0D18  1D03               	btfss	3,2
 15438     0D19  2D1B               	goto	u10761
 15439     0D1A  2D1C               	goto	u10760
 15440     0D1B                     u10761:
 15441     0D1B  2D23               	goto	l13845
 15442     0D1C                     u10760:
 15443     0D1C                     l13837:
 15444     0D1C  0830               	movf	getOperatingMode@opMode1,w
 15445     0D1D  1D03               	btfss	3,2
 15446     0D1E  2D20               	goto	u10771
 15447     0D1F  2D21               	goto	u10770
 15448     0D20                     u10771:
 15449     0D20  2D23               	goto	l13845
 15450     0D21                     u10770:
 15451     0D21                     l13839:
 15452                           
 15453                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1564:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1566:         return 1;
 15454     0D21  3001               	movlw	1
 15455     0D22  2D3C               	goto	l977
 15456     0D23                     l13845:
 15457     0D23  082F               	movf	getOperatingMode@opMode0,w
 15458     0D24  1D03               	btfss	3,2
 15459     0D25  2D27               	goto	u10781
 15460     0D26  2D28               	goto	u10780
 15461     0D27                     u10781:
 15462     0D27  2D2F               	goto	l13855
 15463     0D28                     u10780:
 15464     0D28                     l13847:
 15465     0D28  0330               	decf	getOperatingMode@opMode1,w
 15466     0D29  1D03               	btfss	3,2
 15467     0D2A  2D2C               	goto	u10791
 15468     0D2B  2D2D               	goto	u10790
 15469     0D2C                     u10791:
 15470     0D2C  2D2F               	goto	l13855
 15471     0D2D                     u10790:
 15472     0D2D                     l13849:
 15473                           
 15474                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1568:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1570:         return 2;
 15475     0D2D  3002               	movlw	2
 15476     0D2E  2D3C               	goto	l977
 15477     0D2F                     l13855:
 15478     0D2F  032F               	decf	getOperatingMode@opMode0,w
 15479     0D30  1D03               	btfss	3,2
 15480     0D31  2D33               	goto	u10801
 15481     0D32  2D34               	goto	u10800
 15482     0D33                     u10801:
 15483     0D33  2D3B               	goto	l980
 15484     0D34                     u10800:
 15485     0D34                     l13857:
 15486     0D34  0330               	decf	getOperatingMode@opMode1,w
 15487     0D35  1D03               	btfss	3,2
 15488     0D36  2D38               	goto	u10811
 15489     0D37  2D39               	goto	u10810
 15490     0D38                     u10811:
 15491     0D38  2D3B               	goto	l980
 15492     0D39                     u10810:
 15493     0D39                     l13859:
 15494                           
 15495                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1572:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1574:         return 3;
 15496     0D39  3003               	movlw	3
 15497     0D3A  2D3C               	goto	l977
 15498     0D3B                     l980:
 15499     0D3B  2D15               	goto	l13829
 15500     0D3C                     l977:
 15501     0D3C  0008               	return
 15502     0D3D                     __end_of_getOperatingMode:
 15503                           
 15504                           	psect	text17
 15505     0377                     __ptext17:	
 15506 ;; *************** function _getMagneticChannel *****************
 15507 ;; Defined at:
 15508 ;;		line 1596 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15509 ;; Parameters:    Size  Location     Type
 15510 ;;		None
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;  magMode7        1   18[BANK0 ] unsigned char 
 15513 ;;  magMode6        1   17[BANK0 ] unsigned char 
 15514 ;;  magMode5        1   16[BANK0 ] unsigned char 
 15515 ;;  magMode4        1   15[BANK0 ] unsigned char 
 15516 ;;  magChannel      1   14[BANK0 ] unsigned char 
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      unsigned char 
 15519 ;; Registers used:
 15520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15527 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15529 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15530 ;;Total ram usage:        7 bytes
 15531 ;; Hardware stack levels used: 1
 15532 ;; Hardware stack levels required when called: 14
 15533 ;; This function calls:
 15534 ;;		_bitRead
 15535 ;;		_readRegister
 15536 ;; This function is called by:
 15537 ;;		_begin
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541     0377                     _getMagneticChannel:	
 15542                           ;psect for function _getMagneticChannel
 15543                           
 15544     0377                     l13867:	
 15545                           ;incstack = 0
 15546                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15547                           
 15548     0377                     l13869:
 15549                           
 15550                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1598:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15551     0377  3002               	movlw	2
 15552     0378  3190  2030  3183   	fcall	_readRegister
 15553     037B  0140               	movlb	0	; select bank0
 15554     037C  00AE               	movwf	getMagneticChannel@magChannel
 15555     037D                     l13871:
 15556                           
 15557                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1600:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15558     037D  082E               	movf	getMagneticChannel@magChannel,w
 15559     037E  00AC               	movwf	??_getMagneticChannel
 15560     037F  01AD               	clrf	??_getMagneticChannel+1
 15561     0380  082C               	movf	??_getMagneticChannel,w
 15562     0381  00F1               	movwf	bitRead@reg
 15563     0382  082D               	movf	??_getMagneticChannel+1,w
 15564     0383  00F2               	movwf	bitRead@reg+1
 15565     0384  3004               	movlw	4
 15566     0385  00F3               	movwf	bitRead@position
 15567     0386  3194  2421  3183   	fcall	_bitRead
 15568     0389  0140               	movlb	0	; select bank0
 15569     038A  00AF               	movwf	getMagneticChannel@magMode4
 15570     038B                     l13873:
 15571                           
 15572                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1601:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15573     038B  082E               	movf	getMagneticChannel@magChannel,w
 15574     038C  00AC               	movwf	??_getMagneticChannel
 15575     038D  01AD               	clrf	??_getMagneticChannel+1
 15576     038E  082C               	movf	??_getMagneticChannel,w
 15577     038F  00F1               	movwf	bitRead@reg
 15578     0390  082D               	movf	??_getMagneticChannel+1,w
 15579     0391  00F2               	movwf	bitRead@reg+1
 15580     0392  3005               	movlw	5
 15581     0393  00F3               	movwf	bitRead@position
 15582     0394  3194  2421  3183   	fcall	_bitRead
 15583     0397  0140               	movlb	0	; select bank0
 15584     0398  00B0               	movwf	getMagneticChannel@magMode5
 15585     0399                     l13875:
 15586                           
 15587                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1602:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15588     0399  082E               	movf	getMagneticChannel@magChannel,w
 15589     039A  00AC               	movwf	??_getMagneticChannel
 15590     039B  01AD               	clrf	??_getMagneticChannel+1
 15591     039C  082C               	movf	??_getMagneticChannel,w
 15592     039D  00F1               	movwf	bitRead@reg
 15593     039E  082D               	movf	??_getMagneticChannel+1,w
 15594     039F  00F2               	movwf	bitRead@reg+1
 15595     03A0  3006               	movlw	6
 15596     03A1  00F3               	movwf	bitRead@position
 15597     03A2  3194  2421  3183   	fcall	_bitRead
 15598     03A5  0140               	movlb	0	; select bank0
 15599     03A6  00B1               	movwf	getMagneticChannel@magMode6
 15600     03A7                     l13877:
 15601                           
 15602                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1603:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15603     03A7  082E               	movf	getMagneticChannel@magChannel,w
 15604     03A8  00AC               	movwf	??_getMagneticChannel
 15605     03A9  01AD               	clrf	??_getMagneticChannel+1
 15606     03AA  082C               	movf	??_getMagneticChannel,w
 15607     03AB  00F1               	movwf	bitRead@reg
 15608     03AC  082D               	movf	??_getMagneticChannel+1,w
 15609     03AD  00F2               	movwf	bitRead@reg+1
 15610     03AE  3007               	movlw	7
 15611     03AF  00F3               	movwf	bitRead@position
 15612     03B0  3194  2421  3183   	fcall	_bitRead
 15613     03B3  0140               	movlb	0	; select bank0
 15614     03B4  00B2               	movwf	getMagneticChannel@magMode7
 15615     03B5                     l13879:
 15616                           
 15617                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1605:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15618     03B5  082F               	movf	getMagneticChannel@magMode4,w
 15619     03B6  1D03               	btfss	3,2
 15620     03B7  2BB9               	goto	u10821
 15621     03B8  2BBA               	goto	u10820
 15622     03B9                     u10821:
 15623     03B9  2BCB               	goto	l13893
 15624     03BA                     u10820:
 15625     03BA                     l13881:
 15626     03BA  0830               	movf	getMagneticChannel@magMode5,w
 15627     03BB  1D03               	btfss	3,2
 15628     03BC  2BBE               	goto	u10831
 15629     03BD  2BBF               	goto	u10830
 15630     03BE                     u10831:
 15631     03BE  2BCB               	goto	l13893
 15632     03BF                     u10830:
 15633     03BF                     l13883:
 15634     03BF  0831               	movf	getMagneticChannel@magMode6,w
 15635     03C0  1D03               	btfss	3,2
 15636     03C1  2BC3               	goto	u10841
 15637     03C2  2BC4               	goto	u10840
 15638     03C3                     u10841:
 15639     03C3  2BCB               	goto	l13893
 15640     03C4                     u10840:
 15641     03C4                     l13885:
 15642     03C4  0832               	movf	getMagneticChannel@magMode7,w
 15643     03C5  1D03               	btfss	3,2
 15644     03C6  2BC8               	goto	u10851
 15645     03C7  2BC9               	goto	u10850
 15646     03C8                     u10851:
 15647     03C8  2BCB               	goto	l13893
 15648     03C9                     u10850:
 15649     03C9                     l13887:
 15650                           
 15651                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1606:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1607:         return 0;
 15652     03C9  3000               	movlw	0
 15653     03CA  2CBC               	goto	l987
 15654     03CB                     l13893:
 15655     03CB  032F               	decf	getMagneticChannel@magMode4,w
 15656     03CC  1D03               	btfss	3,2
 15657     03CD  2BCF               	goto	u10861
 15658     03CE  2BD0               	goto	u10860
 15659     03CF                     u10861:
 15660     03CF  2BE1               	goto	l13907
 15661     03D0                     u10860:
 15662     03D0                     l13895:
 15663     03D0  0830               	movf	getMagneticChannel@magMode5,w
 15664     03D1  1D03               	btfss	3,2
 15665     03D2  2BD4               	goto	u10871
 15666     03D3  2BD5               	goto	u10870
 15667     03D4                     u10871:
 15668     03D4  2BE1               	goto	l13907
 15669     03D5                     u10870:
 15670     03D5                     l13897:
 15671     03D5  0831               	movf	getMagneticChannel@magMode6,w
 15672     03D6  1D03               	btfss	3,2
 15673     03D7  2BD9               	goto	u10881
 15674     03D8  2BDA               	goto	u10880
 15675     03D9                     u10881:
 15676     03D9  2BE1               	goto	l13907
 15677     03DA                     u10880:
 15678     03DA                     l13899:
 15679     03DA  0832               	movf	getMagneticChannel@magMode7,w
 15680     03DB  1D03               	btfss	3,2
 15681     03DC  2BDE               	goto	u10891
 15682     03DD  2BDF               	goto	u10890
 15683     03DE                     u10891:
 15684     03DE  2BE1               	goto	l13907
 15685     03DF                     u10890:
 15686     03DF                     l13901:
 15687                           
 15688                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1609:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1610:         return 1;
 15689     03DF  3001               	movlw	1
 15690     03E0  2CBC               	goto	l987
 15691     03E1                     l13907:
 15692     03E1  082F               	movf	getMagneticChannel@magMode4,w
 15693     03E2  1D03               	btfss	3,2
 15694     03E3  2BE5               	goto	u10901
 15695     03E4  2BE6               	goto	u10900
 15696     03E5                     u10901:
 15697     03E5  2BF7               	goto	l13921
 15698     03E6                     u10900:
 15699     03E6                     l13909:
 15700     03E6  0330               	decf	getMagneticChannel@magMode5,w
 15701     03E7  1D03               	btfss	3,2
 15702     03E8  2BEA               	goto	u10911
 15703     03E9  2BEB               	goto	u10910
 15704     03EA                     u10911:
 15705     03EA  2BF7               	goto	l13921
 15706     03EB                     u10910:
 15707     03EB                     l13911:
 15708     03EB  0831               	movf	getMagneticChannel@magMode6,w
 15709     03EC  1D03               	btfss	3,2
 15710     03ED  2BEF               	goto	u10921
 15711     03EE  2BF0               	goto	u10920
 15712     03EF                     u10921:
 15713     03EF  2BF7               	goto	l13921
 15714     03F0                     u10920:
 15715     03F0                     l13913:
 15716     03F0  0832               	movf	getMagneticChannel@magMode7,w
 15717     03F1  1D03               	btfss	3,2
 15718     03F2  2BF4               	goto	u10931
 15719     03F3  2BF5               	goto	u10930
 15720     03F4                     u10931:
 15721     03F4  2BF7               	goto	l13921
 15722     03F5                     u10930:
 15723     03F5                     l13915:
 15724                           
 15725                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1612:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1613:         return 2;
 15726     03F5  3002               	movlw	2
 15727     03F6  2CBC               	goto	l987
 15728     03F7                     l13921:
 15729     03F7  032F               	decf	getMagneticChannel@magMode4,w
 15730     03F8  1D03               	btfss	3,2
 15731     03F9  2BFB               	goto	u10941
 15732     03FA  2BFC               	goto	u10940
 15733     03FB                     u10941:
 15734     03FB  2C0D               	goto	l13935
 15735     03FC                     u10940:
 15736     03FC                     l13923:
 15737     03FC  0330               	decf	getMagneticChannel@magMode5,w
 15738     03FD  1D03               	btfss	3,2
 15739     03FE  2C00               	goto	u10951
 15740     03FF  2C01               	goto	u10950
 15741     0400                     u10951:
 15742     0400  2C0D               	goto	l13935
 15743     0401                     u10950:
 15744     0401                     l13925:
 15745     0401  0831               	movf	getMagneticChannel@magMode6,w
 15746     0402  1D03               	btfss	3,2
 15747     0403  2C05               	goto	u10961
 15748     0404  2C06               	goto	u10960
 15749     0405                     u10961:
 15750     0405  2C0D               	goto	l13935
 15751     0406                     u10960:
 15752     0406                     l13927:
 15753     0406  0832               	movf	getMagneticChannel@magMode7,w
 15754     0407  1D03               	btfss	3,2
 15755     0408  2C0A               	goto	u10971
 15756     0409  2C0B               	goto	u10970
 15757     040A                     u10971:
 15758     040A  2C0D               	goto	l13935
 15759     040B                     u10970:
 15760     040B                     l13929:
 15761                           
 15762                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1615:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1616:         return 3;
 15763     040B  3003               	movlw	3
 15764     040C  2CBC               	goto	l987
 15765     040D                     l13935:
 15766     040D  082F               	movf	getMagneticChannel@magMode4,w
 15767     040E  1D03               	btfss	3,2
 15768     040F  2C11               	goto	u10981
 15769     0410  2C12               	goto	u10980
 15770     0411                     u10981:
 15771     0411  2C23               	goto	l13949
 15772     0412                     u10980:
 15773     0412                     l13937:
 15774     0412  0830               	movf	getMagneticChannel@magMode5,w
 15775     0413  1D03               	btfss	3,2
 15776     0414  2C16               	goto	u10991
 15777     0415  2C17               	goto	u10990
 15778     0416                     u10991:
 15779     0416  2C23               	goto	l13949
 15780     0417                     u10990:
 15781     0417                     l13939:
 15782     0417  0331               	decf	getMagneticChannel@magMode6,w
 15783     0418  1D03               	btfss	3,2
 15784     0419  2C1B               	goto	u11001
 15785     041A  2C1C               	goto	u11000
 15786     041B                     u11001:
 15787     041B  2C23               	goto	l13949
 15788     041C                     u11000:
 15789     041C                     l13941:
 15790     041C  0832               	movf	getMagneticChannel@magMode7,w
 15791     041D  1D03               	btfss	3,2
 15792     041E  2C20               	goto	u11011
 15793     041F  2C21               	goto	u11010
 15794     0420                     u11011:
 15795     0420  2C23               	goto	l13949
 15796     0421                     u11010:
 15797     0421                     l13943:
 15798                           
 15799                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1618:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1619:         return 4;
 15800     0421  3004               	movlw	4
 15801     0422  2CBC               	goto	l987
 15802     0423                     l13949:
 15803     0423  032F               	decf	getMagneticChannel@magMode4,w
 15804     0424  1D03               	btfss	3,2
 15805     0425  2C27               	goto	u11021
 15806     0426  2C28               	goto	u11020
 15807     0427                     u11021:
 15808     0427  2C39               	goto	l13963
 15809     0428                     u11020:
 15810     0428                     l13951:
 15811     0428  0830               	movf	getMagneticChannel@magMode5,w
 15812     0429  1D03               	btfss	3,2
 15813     042A  2C2C               	goto	u11031
 15814     042B  2C2D               	goto	u11030
 15815     042C                     u11031:
 15816     042C  2C39               	goto	l13963
 15817     042D                     u11030:
 15818     042D                     l13953:
 15819     042D  0331               	decf	getMagneticChannel@magMode6,w
 15820     042E  1D03               	btfss	3,2
 15821     042F  2C31               	goto	u11041
 15822     0430  2C32               	goto	u11040
 15823     0431                     u11041:
 15824     0431  2C39               	goto	l13963
 15825     0432                     u11040:
 15826     0432                     l13955:
 15827     0432  0832               	movf	getMagneticChannel@magMode7,w
 15828     0433  1D03               	btfss	3,2
 15829     0434  2C36               	goto	u11051
 15830     0435  2C37               	goto	u11050
 15831     0436                     u11051:
 15832     0436  2C39               	goto	l13963
 15833     0437                     u11050:
 15834     0437                     l13957:
 15835                           
 15836                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1621:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1622:         return 5;
 15837     0437  3005               	movlw	5
 15838     0438  2CBC               	goto	l987
 15839     0439                     l13963:
 15840     0439  082F               	movf	getMagneticChannel@magMode4,w
 15841     043A  1D03               	btfss	3,2
 15842     043B  2C3D               	goto	u11061
 15843     043C  2C3E               	goto	u11060
 15844     043D                     u11061:
 15845     043D  2C4F               	goto	l13977
 15846     043E                     u11060:
 15847     043E                     l13965:
 15848     043E  0330               	decf	getMagneticChannel@magMode5,w
 15849     043F  1D03               	btfss	3,2
 15850     0440  2C42               	goto	u11071
 15851     0441  2C43               	goto	u11070
 15852     0442                     u11071:
 15853     0442  2C4F               	goto	l13977
 15854     0443                     u11070:
 15855     0443                     l13967:
 15856     0443  0331               	decf	getMagneticChannel@magMode6,w
 15857     0444  1D03               	btfss	3,2
 15858     0445  2C47               	goto	u11081
 15859     0446  2C48               	goto	u11080
 15860     0447                     u11081:
 15861     0447  2C4F               	goto	l13977
 15862     0448                     u11080:
 15863     0448                     l13969:
 15864     0448  0832               	movf	getMagneticChannel@magMode7,w
 15865     0449  1D03               	btfss	3,2
 15866     044A  2C4C               	goto	u11091
 15867     044B  2C4D               	goto	u11090
 15868     044C                     u11091:
 15869     044C  2C4F               	goto	l13977
 15870     044D                     u11090:
 15871     044D                     l13971:
 15872                           
 15873                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1624:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:         return 6;
 15874     044D  3006               	movlw	6
 15875     044E  2CBC               	goto	l987
 15876     044F                     l13977:
 15877     044F  032F               	decf	getMagneticChannel@magMode4,w
 15878     0450  1D03               	btfss	3,2
 15879     0451  2C53               	goto	u11101
 15880     0452  2C54               	goto	u11100
 15881     0453                     u11101:
 15882     0453  2C65               	goto	l13991
 15883     0454                     u11100:
 15884     0454                     l13979:
 15885     0454  0330               	decf	getMagneticChannel@magMode5,w
 15886     0455  1D03               	btfss	3,2
 15887     0456  2C58               	goto	u11111
 15888     0457  2C59               	goto	u11110
 15889     0458                     u11111:
 15890     0458  2C65               	goto	l13991
 15891     0459                     u11110:
 15892     0459                     l13981:
 15893     0459  0331               	decf	getMagneticChannel@magMode6,w
 15894     045A  1D03               	btfss	3,2
 15895     045B  2C5D               	goto	u11121
 15896     045C  2C5E               	goto	u11120
 15897     045D                     u11121:
 15898     045D  2C65               	goto	l13991
 15899     045E                     u11120:
 15900     045E                     l13983:
 15901     045E  0832               	movf	getMagneticChannel@magMode7,w
 15902     045F  1D03               	btfss	3,2
 15903     0460  2C62               	goto	u11131
 15904     0461  2C63               	goto	u11130
 15905     0462                     u11131:
 15906     0462  2C65               	goto	l13991
 15907     0463                     u11130:
 15908     0463                     l13985:
 15909                           
 15910                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1627:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:         return 7;
 15911     0463  3007               	movlw	7
 15912     0464  2CBC               	goto	l987
 15913     0465                     l13991:
 15914     0465  082F               	movf	getMagneticChannel@magMode4,w
 15915     0466  1D03               	btfss	3,2
 15916     0467  2C69               	goto	u11141
 15917     0468  2C6A               	goto	u11140
 15918     0469                     u11141:
 15919     0469  2C7B               	goto	l14005
 15920     046A                     u11140:
 15921     046A                     l13993:
 15922     046A  0830               	movf	getMagneticChannel@magMode5,w
 15923     046B  1D03               	btfss	3,2
 15924     046C  2C6E               	goto	u11151
 15925     046D  2C6F               	goto	u11150
 15926     046E                     u11151:
 15927     046E  2C7B               	goto	l14005
 15928     046F                     u11150:
 15929     046F                     l13995:
 15930     046F  0831               	movf	getMagneticChannel@magMode6,w
 15931     0470  1D03               	btfss	3,2
 15932     0471  2C73               	goto	u11161
 15933     0472  2C74               	goto	u11160
 15934     0473                     u11161:
 15935     0473  2C7B               	goto	l14005
 15936     0474                     u11160:
 15937     0474                     l13997:
 15938     0474  0332               	decf	getMagneticChannel@magMode7,w
 15939     0475  1D03               	btfss	3,2
 15940     0476  2C78               	goto	u11171
 15941     0477  2C79               	goto	u11170
 15942     0478                     u11171:
 15943     0478  2C7B               	goto	l14005
 15944     0479                     u11170:
 15945     0479                     l13999:
 15946                           
 15947                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:         return 8;
 15948     0479  3008               	movlw	8
 15949     047A  2CBC               	goto	l987
 15950     047B                     l14005:
 15951     047B  032F               	decf	getMagneticChannel@magMode4,w
 15952     047C  1D03               	btfss	3,2
 15953     047D  2C7F               	goto	u11181
 15954     047E  2C80               	goto	u11180
 15955     047F                     u11181:
 15956     047F  2C91               	goto	l14019
 15957     0480                     u11180:
 15958     0480                     l14007:
 15959     0480  0830               	movf	getMagneticChannel@magMode5,w
 15960     0481  1D03               	btfss	3,2
 15961     0482  2C84               	goto	u11191
 15962     0483  2C85               	goto	u11190
 15963     0484                     u11191:
 15964     0484  2C91               	goto	l14019
 15965     0485                     u11190:
 15966     0485                     l14009:
 15967     0485  0831               	movf	getMagneticChannel@magMode6,w
 15968     0486  1D03               	btfss	3,2
 15969     0487  2C89               	goto	u11201
 15970     0488  2C8A               	goto	u11200
 15971     0489                     u11201:
 15972     0489  2C91               	goto	l14019
 15973     048A                     u11200:
 15974     048A                     l14011:
 15975     048A  0332               	decf	getMagneticChannel@magMode7,w
 15976     048B  1D03               	btfss	3,2
 15977     048C  2C8E               	goto	u11211
 15978     048D  2C8F               	goto	u11210
 15979     048E                     u11211:
 15980     048E  2C91               	goto	l14019
 15981     048F                     u11210:
 15982     048F                     l14013:
 15983                           
 15984                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1634:         return 9;
 15985     048F  3009               	movlw	9
 15986     0490  2CBC               	goto	l987
 15987     0491                     l14019:
 15988     0491  082F               	movf	getMagneticChannel@magMode4,w
 15989     0492  1D03               	btfss	3,2
 15990     0493  2C95               	goto	u11221
 15991     0494  2C96               	goto	u11220
 15992     0495                     u11221:
 15993     0495  2CA7               	goto	l14033
 15994     0496                     u11220:
 15995     0496                     l14021:
 15996     0496  0330               	decf	getMagneticChannel@magMode5,w
 15997     0497  1D03               	btfss	3,2
 15998     0498  2C9A               	goto	u11231
 15999     0499  2C9B               	goto	u11230
 16000     049A                     u11231:
 16001     049A  2CA7               	goto	l14033
 16002     049B                     u11230:
 16003     049B                     l14023:
 16004     049B  0831               	movf	getMagneticChannel@magMode6,w
 16005     049C  1D03               	btfss	3,2
 16006     049D  2C9F               	goto	u11241
 16007     049E  2CA0               	goto	u11240
 16008     049F                     u11241:
 16009     049F  2CA7               	goto	l14033
 16010     04A0                     u11240:
 16011     04A0                     l14025:
 16012     04A0  0332               	decf	getMagneticChannel@magMode7,w
 16013     04A1  1D03               	btfss	3,2
 16014     04A2  2CA4               	goto	u11251
 16015     04A3  2CA5               	goto	u11250
 16016     04A4                     u11251:
 16017     04A4  2CA7               	goto	l14033
 16018     04A5                     u11250:
 16019     04A5                     l14027:
 16020                           
 16021                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 10;
 16022     04A5  300A               	movlw	10
 16023     04A6  2CBC               	goto	l987
 16024     04A7                     l14033:
 16025     04A7  032F               	decf	getMagneticChannel@magMode4,w
 16026     04A8  1D03               	btfss	3,2
 16027     04A9  2CAB               	goto	u11261
 16028     04AA  2CAC               	goto	u11260
 16029     04AB                     u11261:
 16030     04AB  2BC9               	goto	l13887
 16031     04AC                     u11260:
 16032     04AC                     l14035:
 16033     04AC  0330               	decf	getMagneticChannel@magMode5,w
 16034     04AD  1D03               	btfss	3,2
 16035     04AE  2CB0               	goto	u11271
 16036     04AF  2CB1               	goto	u11270
 16037     04B0                     u11271:
 16038     04B0  2BC9               	goto	l13887
 16039     04B1                     u11270:
 16040     04B1                     l14037:
 16041     04B1  0831               	movf	getMagneticChannel@magMode6,w
 16042     04B2  1D03               	btfss	3,2
 16043     04B3  2CB5               	goto	u11281
 16044     04B4  2CB6               	goto	u11280
 16045     04B5                     u11281:
 16046     04B5  2BC9               	goto	l13887
 16047     04B6                     u11280:
 16048     04B6                     l14039:
 16049     04B6  0332               	decf	getMagneticChannel@magMode7,w
 16050     04B7  1D03               	btfss	3,2
 16051     04B8  2CBA               	goto	u11291
 16052     04B9  2CBB               	goto	u11290
 16053     04BA                     u11291:
 16054     04BA  2BC9               	goto	l13887
 16055     04BB                     u11290:
 16056     04BB                     l14041:
 16057                           
 16058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 11;
 16059     04BB  300B               	movlw	11
 16060     04BC                     l987:
 16061     04BC  0008               	return
 16062     04BD                     __end_of_getMagneticChannel:
 16063                           
 16064                           	psect	text18
 16065     1234                     __ptext18:	
 16066 ;; *************** function _getLowPower *****************
 16067 ;; Defined at:
 16068 ;;		line 1501 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;		None
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;  lowPowerMode    1   15[BANK0 ] unsigned char 
 16073 ;;  lowPowerMode    1   14[BANK0 ] unsigned char 
 16074 ;; Return value:  Size  Location     Type
 16075 ;;                  1    wreg      unsigned char 
 16076 ;; Registers used:
 16077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16078 ;; Tracked objects:
 16079 ;;		On entry : 0/0
 16080 ;;		On exit  : 0/0
 16081 ;;		Unchanged: 0/0
 16082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16087 ;;Total ram usage:        4 bytes
 16088 ;; Hardware stack levels used: 1
 16089 ;; Hardware stack levels required when called: 14
 16090 ;; This function calls:
 16091 ;;		_bitRead
 16092 ;;		_readRegister
 16093 ;; This function is called by:
 16094 ;;		_begin
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098     1234                     _getLowPower:	
 16099                           ;psect for function _getLowPower
 16100                           
 16101     1234                     l13807:	
 16102                           ;incstack = 0
 16103                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16104                           
 16105     1234                     l13809:
 16106                           
 16107                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1503:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16108     1234  3001               	movlw	1
 16109     1235  3190  2030  3192   	fcall	_readRegister
 16110     1238  0140               	movlb	0	; select bank0
 16111     1239  00AF               	movwf	getLowPower@lowPowerMode
 16112     123A                     l13811:
 16113                           
 16114                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1505:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16115     123A  082F               	movf	getLowPower@lowPowerMode,w
 16116     123B  00AC               	movwf	??_getLowPower
 16117     123C  01AD               	clrf	??_getLowPower+1
 16118     123D  082C               	movf	??_getLowPower,w
 16119     123E  00F1               	movwf	bitRead@reg
 16120     123F  082D               	movf	??_getLowPower+1,w
 16121     1240  00F2               	movwf	bitRead@reg+1
 16122     1241  3004               	movlw	4
 16123     1242  00F3               	movwf	bitRead@position
 16124     1243  3194  2421  3192   	fcall	_bitRead
 16125     1246  0140               	movlb	0	; select bank0
 16126     1247  00AE               	movwf	getLowPower@lowPowerModeBit
 16127     1248                     l13813:
 16128                           
 16129                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1507:     return lowPo
      +                          werModeBit;
 16130     1248  082E               	movf	getLowPower@lowPowerModeBit,w
 16131     1249                     l967:
 16132     1249  0008               	return
 16133     124A                     __end_of_getLowPower:
 16134                           
 16135                           	psect	text19
 16136     0D3D                     __ptext19:	
 16137 ;; *************** function _getAngleEn *****************
 16138 ;; Defined at:
 16139 ;;		line 1857 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;		None
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;  angleDir3       1   16[BANK0 ] unsigned char 
 16144 ;;  angleDir2       1   15[BANK0 ] unsigned char 
 16145 ;;  angleReg        1   14[BANK0 ] unsigned char 
 16146 ;; Return value:  Size  Location     Type
 16147 ;;                  1    wreg      unsigned char 
 16148 ;; Registers used:
 16149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/0
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16158 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16159 ;;Total ram usage:        5 bytes
 16160 ;; Hardware stack levels used: 1
 16161 ;; Hardware stack levels required when called: 14
 16162 ;; This function calls:
 16163 ;;		_bitRead
 16164 ;;		_readRegister
 16165 ;; This function is called by:
 16166 ;;		_begin
 16167 ;;		_setMagneticOffset2
 16168 ;;		_getMagneticOffset2
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172     0D3D                     _getAngleEn:	
 16173                           ;psect for function _getAngleEn
 16174                           
 16175     0D3D                     l14061:	
 16176                           ;incstack = 0
 16177                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16178                           
 16179     0D3D                     l14063:
 16180                           
 16181                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1859:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16182     0D3D  3003               	movlw	3
 16183     0D3E  3190  2030  318D   	fcall	_readRegister
 16184     0D41  0140               	movlb	0	; select bank0
 16185     0D42  00AE               	movwf	getAngleEn@angleReg
 16186     0D43                     l14065:
 16187                           
 16188                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1861:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16189     0D43  082E               	movf	getAngleEn@angleReg,w
 16190     0D44  00AC               	movwf	??_getAngleEn
 16191     0D45  01AD               	clrf	??_getAngleEn+1
 16192     0D46  082C               	movf	??_getAngleEn,w
 16193     0D47  00F1               	movwf	bitRead@reg
 16194     0D48  082D               	movf	??_getAngleEn+1,w
 16195     0D49  00F2               	movwf	bitRead@reg+1
 16196     0D4A  3002               	movlw	2
 16197     0D4B  00F3               	movwf	bitRead@position
 16198     0D4C  3194  2421  318D   	fcall	_bitRead
 16199     0D4F  0140               	movlb	0	; select bank0
 16200     0D50  00AF               	movwf	getAngleEn@angleDir2
 16201     0D51                     l14067:
 16202                           
 16203                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1862:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16204     0D51  082E               	movf	getAngleEn@angleReg,w
 16205     0D52  00AC               	movwf	??_getAngleEn
 16206     0D53  01AD               	clrf	??_getAngleEn+1
 16207     0D54  082C               	movf	??_getAngleEn,w
 16208     0D55  00F1               	movwf	bitRead@reg
 16209     0D56  082D               	movf	??_getAngleEn+1,w
 16210     0D57  00F2               	movwf	bitRead@reg+1
 16211     0D58  3003               	movlw	3
 16212     0D59  00F3               	movwf	bitRead@position
 16213     0D5A  3194  2421  318D   	fcall	_bitRead
 16214     0D5D  0140               	movlb	0	; select bank0
 16215     0D5E  00B0               	movwf	getAngleEn@angleDir3
 16216     0D5F                     l14069:
 16217                           
 16218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1864:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16219     0D5F  082F               	movf	getAngleEn@angleDir2,w
 16220     0D60  1D03               	btfss	3,2
 16221     0D61  2D63               	goto	u11301
 16222     0D62  2D64               	goto	u11300
 16223     0D63                     u11301:
 16224     0D63  2D6B               	goto	l14079
 16225     0D64                     u11300:
 16226     0D64                     l14071:
 16227     0D64  0830               	movf	getAngleEn@angleDir3,w
 16228     0D65  1D03               	btfss	3,2
 16229     0D66  2D68               	goto	u11311
 16230     0D67  2D69               	goto	u11310
 16231     0D68                     u11311:
 16232     0D68  2D6B               	goto	l14079
 16233     0D69                     u11310:
 16234     0D69                     l14073:
 16235                           
 16236                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1865:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1867:         return 0;
 16237     0D69  3000               	movlw	0
 16238     0D6A  2D90               	goto	l1072
 16239     0D6B                     l14079:
 16240     0D6B  032F               	decf	getAngleEn@angleDir2,w
 16241     0D6C  1D03               	btfss	3,2
 16242     0D6D  2D6F               	goto	u11321
 16243     0D6E  2D70               	goto	u11320
 16244     0D6F                     u11321:
 16245     0D6F  2D77               	goto	l14089
 16246     0D70                     u11320:
 16247     0D70                     l14081:
 16248     0D70  0830               	movf	getAngleEn@angleDir3,w
 16249     0D71  1D03               	btfss	3,2
 16250     0D72  2D74               	goto	u11331
 16251     0D73  2D75               	goto	u11330
 16252     0D74                     u11331:
 16253     0D74  2D77               	goto	l14089
 16254     0D75                     u11330:
 16255     0D75                     l14083:
 16256                           
 16257                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1869:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1871:         return 1;
 16258     0D75  3001               	movlw	1
 16259     0D76  2D90               	goto	l1072
 16260     0D77                     l14089:
 16261     0D77  082F               	movf	getAngleEn@angleDir2,w
 16262     0D78  1D03               	btfss	3,2
 16263     0D79  2D7B               	goto	u11341
 16264     0D7A  2D7C               	goto	u11340
 16265     0D7B                     u11341:
 16266     0D7B  2D83               	goto	l14099
 16267     0D7C                     u11340:
 16268     0D7C                     l14091:
 16269     0D7C  0330               	decf	getAngleEn@angleDir3,w
 16270     0D7D  1D03               	btfss	3,2
 16271     0D7E  2D80               	goto	u11351
 16272     0D7F  2D81               	goto	u11350
 16273     0D80                     u11351:
 16274     0D80  2D83               	goto	l14099
 16275     0D81                     u11350:
 16276     0D81                     l14093:
 16277                           
 16278                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1873:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1875:         return 2;
 16279     0D81  3002               	movlw	2
 16280     0D82  2D90               	goto	l1072
 16281     0D83                     l14099:
 16282     0D83  032F               	decf	getAngleEn@angleDir2,w
 16283     0D84  1D03               	btfss	3,2
 16284     0D85  2D87               	goto	u11361
 16285     0D86  2D88               	goto	u11360
 16286     0D87                     u11361:
 16287     0D87  2D8F               	goto	l1075
 16288     0D88                     u11360:
 16289     0D88                     l14101:
 16290     0D88  0330               	decf	getAngleEn@angleDir3,w
 16291     0D89  1D03               	btfss	3,2
 16292     0D8A  2D8C               	goto	u11371
 16293     0D8B  2D8D               	goto	u11370
 16294     0D8C                     u11371:
 16295     0D8C  2D8F               	goto	l1075
 16296     0D8D                     u11370:
 16297     0D8D                     l14103:
 16298                           
 16299                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1877:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1879:         return 3;
 16300     0D8D  3003               	movlw	3
 16301     0D8E  2D90               	goto	l1072
 16302     0D8F                     l1075:
 16303     0D8F  2D69               	goto	l14073
 16304     0D90                     l1072:
 16305     0D90  0008               	return
 16306     0D91                     __end_of_getAngleEn:
 16307                           
 16308                           	psect	text20
 16309     1421                     __ptext20:	
 16310 ;; *************** function _bitRead *****************
 16311 ;; Defined at:
 16312 ;;		line 2477 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;  reg             2    1[COMMON] PTR unsigned short 
 16315 ;;		 -> RAM(8192), 
 16316 ;;  position        1    3[COMMON] unsigned char 
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;  mask            2    8[COMMON] unsigned short 
 16319 ;; Return value:  Size  Location     Type
 16320 ;;                  1    wreg      unsigned char 
 16321 ;; Registers used:
 16322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16328 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16331 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16332 ;;Total ram usage:        9 bytes
 16333 ;; Hardware stack levels used: 1
 16334 ;; Hardware stack levels required when called: 4
 16335 ;; This function calls:
 16336 ;;		Nothing
 16337 ;; This function is called by:
 16338 ;;		_getLowPower
 16339 ;;		_getOperatingMode
 16340 ;;		_getMagneticChannel
 16341 ;;		_getAngleEn
 16342 ;;		_getTemperatureEN
 16343 ;;		_getError
 16344 ;;		_getCRCMode
 16345 ;;		_getMagTemp
 16346 ;;		_getConvAvg
 16347 ;;		_getReadMode
 16348 ;;		_getIntThreshold
 16349 ;;		_getGlitchFiler
 16350 ;;		_getTriggerMode
 16351 ;;		_getSleeptime
 16352 ;;		_getMagDir
 16353 ;;		_getMagnitudeChannelSelect
 16354 ;;		_getXYAxisRange
 16355 ;;		_getZAxisRange
 16356 ;;		_getInterruptResult
 16357 ;;		_getThresholdEn
 16358 ;;		_getIntPinState
 16359 ;;		_getInterruptMode
 16360 ;;		_getMaskInt
 16361 ;;		_getPOR
 16362 ;;		_getDiagStatus
 16363 ;;		_getResultStatus
 16364 ;;		_getDeviceID
 16365 ;;		_getInterruptPinStatus
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369     1421                     _bitRead:	
 16370                           ;psect for function _bitRead
 16371                           
 16372     1421                     l13333:	
 16373                           ;incstack = 0
 16374                           ; Regs used in _bitRead: [wreg+fsr1l+fsr1h+status,2+status,0]
 16375                           
 16376                           
 16377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2478:     uint16_t mas
      +                          k = (1 << position) & *reg;
 16378     1421  0871               	movf	bitRead@reg,w
 16379     1422  0086               	movwf	6
 16380     1423  0872               	movf	bitRead@reg+1,w
 16381     1424  0087               	movwf	7
 16382     1425  3F40               	moviw [0]fsr1
 16383     1426  00F4               	movwf	??_bitRead
 16384     1427  3F41               	moviw [1]fsr1
 16385     1428  00F5               	movwf	??_bitRead+1
 16386     1429  3001               	movlw	1
 16387     142A  00F6               	movwf	??_bitRead+2
 16388     142B  3000               	movlw	0
 16389     142C  00F7               	movwf	??_bitRead+3
 16390     142D  0A73               	incf	bitRead@position,w
 16391     142E  2C31               	goto	u10174
 16392     142F                     u10175:
 16393     142F  35F6               	lslf	??_bitRead+2,f
 16394     1430  0DF7               	rlf	??_bitRead+3,f
 16395     1431                     u10174:
 16396     1431  0B89               	decfsz	9,f
 16397     1432  2C2F               	goto	u10175
 16398     1433  0874               	movf	??_bitRead,w
 16399     1434  0576               	andwf	??_bitRead+2,w
 16400     1435  00F8               	movwf	bitRead@mask
 16401     1436  0875               	movf	??_bitRead+1,w
 16402     1437  0577               	andwf	??_bitRead+3,w
 16403     1438  00F9               	movwf	bitRead@mask+1
 16404     1439                     l13335:
 16405                           
 16406                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2480:     if (mask == 
      +                          0) {
 16407     1439  0878               	movf	bitRead@mask,w
 16408     143A  0479               	iorwf	bitRead@mask+1,w
 16409     143B  1D03               	btfss	3,2
 16410     143C  2C3E               	goto	u10181
 16411     143D  2C3F               	goto	u10180
 16412     143E                     u10181:
 16413     143E  2C41               	goto	l13343
 16414     143F                     u10180:
 16415     143F                     l13337:
 16416                           
 16417                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2481:         return 0
      +                          ;
 16418     143F  3000               	movlw	0
 16419     1440  2C42               	goto	l1197
 16420     1441                     l13343:
 16421                           
 16422                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2483:         return 1
      +                          ;
 16423     1441  3001               	movlw	1
 16424     1442                     l1197:
 16425     1442  0008               	return
 16426     1443                     __end_of_bitRead:
 16427                           
 16428                           	psect	text21
 16429     1F07                     __ptext21:	
 16430 ;; *************** function _TMR0_HasOverflowOccured *****************
 16431 ;; Defined at:
 16432 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;		None
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;		None
 16437 ;; Return value:  Size  Location     Type
 16438 ;;                  1    wreg      _Bool 
 16439 ;; Registers used:
 16440 ;;		wreg, status,2, status,0
 16441 ;; Tracked objects:
 16442 ;;		On entry : 0/0
 16443 ;;		On exit  : 0/0
 16444 ;;		Unchanged: 0/0
 16445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16450 ;;Total ram usage:        0 bytes
 16451 ;; Hardware stack levels used: 1
 16452 ;; Hardware stack levels required when called: 4
 16453 ;; This function calls:
 16454 ;;		Nothing
 16455 ;; This function is called by:
 16456 ;;		_main
 16457 ;; This function uses a non-reentrant model
 16458 ;;
 16459                           
 16460     1F07                     _TMR0_HasOverflowOccured:	
 16461                           ;psect for function _TMR0_HasOverflowOccured
 16462                           
 16463     1F07                     l14589:	
 16464                           ;incstack = 0
 16465                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16466                           
 16467                           
 16468                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16469     1F07  014E               	movlb	14	; select bank14
 16470     1F08  0E0C               	swapf	12,w	;volatile
 16471     1F09  0C89               	rrf	9,f
 16472     1F0A  3901               	andlw	1
 16473     1F0B                     l2117:
 16474     1F0B  0008               	return
 16475     1F0C                     __end_of_TMR0_HasOverflowOccured:
 16476                           
 16477                           	psect	text22
 16478     121E                     __ptext22:	
 16479 ;; *************** function _SYSTEM_Initialize *****************
 16480 ;; Defined at:
 16481 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;		None
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;		None
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  1    wreg      void 
 16488 ;; Registers used:
 16489 ;;		wreg, status,2, status,0, pclath, cstack
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16499 ;;Total ram usage:        0 bytes
 16500 ;; Hardware stack levels used: 1
 16501 ;; Hardware stack levels required when called: 6
 16502 ;; This function calls:
 16503 ;;		_EUSART1_Initialize
 16504 ;;		_EUSART2_Initialize
 16505 ;;		_I2C1_Initialize
 16506 ;;		_OSCILLATOR_Initialize
 16507 ;;		_PIN_MANAGER_Initialize
 16508 ;;		_PMD_Initialize
 16509 ;;		_TMR0_Initialize
 16510 ;; This function is called by:
 16511 ;;		_main
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515     121E                     _SYSTEM_Initialize:	
 16516                           ;psect for function _SYSTEM_Initialize
 16517                           
 16518     121E                     l14575:	
 16519                           ;incstack = 0
 16520                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16521                           
 16522                           
 16523                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16524     121E  319F  27EB  3192   	fcall	_PMD_Initialize
 16525     1221                     l14577:
 16526                           
 16527                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16528     1221  319F  27BA  3192   	fcall	_I2C1_Initialize
 16529     1224                     l14579:
 16530                           
 16531                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16532     1224  318B  2315  3192   	fcall	_PIN_MANAGER_Initialize
 16533     1227                     l14581:
 16534                           
 16535                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16536     1227  319F  27E1  3192   	fcall	_OSCILLATOR_Initialize
 16537     122A                     l14583:
 16538                           
 16539                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16540     122A  3191  21A0  3192   	fcall	_TMR0_Initialize
 16541     122D                     l14585:
 16542                           
 16543                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16544     122D  3189  213F  3192   	fcall	_EUSART1_Initialize
 16545     1230                     l14587:
 16546                           
 16547                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16548     1230  3189  217D  3192   	fcall	_EUSART2_Initialize
 16549     1233                     l1977:
 16550     1233  0008               	return
 16551     1234                     __end_of_SYSTEM_Initialize:
 16552                           
 16553                           	psect	text23
 16554     11A0                     __ptext23:	
 16555 ;; *************** function _TMR0_Initialize *****************
 16556 ;; Defined at:
 16557 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16558 ;; Parameters:    Size  Location     Type
 16559 ;;		None
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;		None
 16562 ;; Return value:  Size  Location     Type
 16563 ;;                  1    wreg      void 
 16564 ;; Registers used:
 16565 ;;		wreg
 16566 ;; Tracked objects:
 16567 ;;		On entry : 0/0
 16568 ;;		On exit  : 0/0
 16569 ;;		Unchanged: 0/0
 16570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16575 ;;Total ram usage:        0 bytes
 16576 ;; Hardware stack levels used: 1
 16577 ;; Hardware stack levels required when called: 4
 16578 ;; This function calls:
 16579 ;;		Nothing
 16580 ;; This function is called by:
 16581 ;;		_SYSTEM_Initialize
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585     11A0                     _TMR0_Initialize:	
 16586                           ;psect for function _TMR0_Initialize
 16587                           
 16588     11A0                     l14287:	
 16589                           ;incstack = 0
 16590                           ; Regs used in _TMR0_Initialize: [wreg]
 16591                           
 16592                           
 16593                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16594     11A0  3047               	movlw	71
 16595     11A1  014B               	movlb	11	; select bank11
 16596     11A2  009F               	movwf	31	;volatile
 16597                           
 16598                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16599     11A3  300B               	movlw	11
 16600     11A4  009D               	movwf	29	;volatile
 16601                           
 16602                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16603     11A5  30DC               	movlw	220
 16604     11A6  009C               	movwf	28	;volatile
 16605                           
 16606                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16607     11A7  081D               	movf	29,w	;volatile
 16608     11A8  0140               	movlb	0	; select bank0
 16609     11A9  00CB               	movwf	_timer0ReloadVal16bit+1	;volatile
 16610     11AA  014B               	movlb	11	; select bank11
 16611     11AB  081C               	movf	28,w	;volatile
 16612     11AC  0140               	movlb	0	; select bank0
 16613     11AD  00CA               	movwf	_timer0ReloadVal16bit	;volatile
 16614     11AE                     l14289:
 16615                           
 16616                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16617     11AE  014E               	movlb	14	; select bank14
 16618     11AF  128C               	bcf	12,5	;volatile
 16619                           
 16620                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16621     11B0  3090               	movlw	144
 16622     11B1  014B               	movlb	11	; select bank11
 16623     11B2  009E               	movwf	30	;volatile
 16624     11B3                     l2099:
 16625     11B3  0008               	return
 16626     11B4                     __end_of_TMR0_Initialize:
 16627                           
 16628                           	psect	text24
 16629     1FEB                     __ptext24:	
 16630 ;; *************** function _PMD_Initialize *****************
 16631 ;; Defined at:
 16632 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;		None
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;		None
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  1    wreg      void 
 16639 ;; Registers used:
 16640 ;;		status,2
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16650 ;;Total ram usage:        0 bytes
 16651 ;; Hardware stack levels used: 1
 16652 ;; Hardware stack levels required when called: 4
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		_SYSTEM_Initialize
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660     1FEB                     _PMD_Initialize:	
 16661                           ;psect for function _PMD_Initialize
 16662                           
 16663     1FEB                     l14201:	
 16664                           ;incstack = 0
 16665                           ; Regs used in _PMD_Initialize: [status,2]
 16666                           
 16667                           
 16668                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16669     1FEB  014F               	movlb	15	; select bank15
 16670     1FEC  0196               	clrf	22	;volatile
 16671                           
 16672                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16673     1FED  0197               	clrf	23	;volatile
 16674                           
 16675                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16676     1FEE  0198               	clrf	24	;volatile
 16677                           
 16678                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16679     1FEF  0199               	clrf	25	;volatile
 16680                           
 16681                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16682     1FF0  019A               	clrf	26	;volatile
 16683                           
 16684                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16685     1FF1  019B               	clrf	27	;volatile
 16686                           
 16687                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16688     1FF2  019C               	clrf	28	;volatile
 16689                           
 16690                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16691     1FF3  019D               	clrf	29	;volatile
 16692     1FF4                     l1983:
 16693     1FF4  0008               	return
 16694     1FF5                     __end_of_PMD_Initialize:
 16695                           
 16696                           	psect	text25
 16697     0B15                     __ptext25:	
 16698 ;; *************** function _PIN_MANAGER_Initialize *****************
 16699 ;; Defined at:
 16700 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;		None
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;		None
 16705 ;; Return value:  Size  Location     Type
 16706 ;;                  1    wreg      void 
 16707 ;; Registers used:
 16708 ;;		wreg, status,2, status,0, pclath, cstack
 16709 ;; Tracked objects:
 16710 ;;		On entry : 0/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;Total ram usage:        0 bytes
 16719 ;; Hardware stack levels used: 1
 16720 ;; Hardware stack levels required when called: 5
 16721 ;; This function calls:
 16722 ;;		_IOCAF6_SetInterruptHandler
 16723 ;; This function is called by:
 16724 ;;		_SYSTEM_Initialize
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728     0B15                     _PIN_MANAGER_Initialize:	
 16729                           ;psect for function _PIN_MANAGER_Initialize
 16730                           
 16731     0B15                     l14211:	
 16732                           ;incstack = 0
 16733                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16734                           
 16735                           
 16736                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16737     0B15  0140               	movlb	0	; select bank0
 16738     0B16  019C               	clrf	28	;volatile
 16739     0B17                     l14213:
 16740                           
 16741                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16742     0B17  3031               	movlw	49
 16743     0B18  0098               	movwf	24	;volatile
 16744     0B19                     l14215:
 16745                           
 16746                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16747     0B19  0199               	clrf	25	;volatile
 16748                           
 16749                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16750     0B1A  30C1               	movlw	193
 16751     0B1B  009A               	movwf	26	;volatile
 16752                           
 16753                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16754     0B1C  3008               	movlw	8
 16755     0B1D  0096               	movwf	22	;volatile
 16756                           
 16757                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16758     0B1E  30DE               	movlw	222
 16759     0B1F  0092               	movwf	18	;volatile
 16760                           
 16761                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16762     0B20  30EF               	movlw	239
 16763     0B21  0093               	movwf	19	;volatile
 16764                           
 16765                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16766     0B22  3025               	movlw	37
 16767     0B23  0094               	movwf	20	;volatile
 16768     0B24                     l14217:
 16769                           
 16770                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16771     0B24  017E               	movlb	62	; select bank62
 16772     0B25  01CE               	clrf	78	;volatile
 16773     0B26                     l14219:
 16774                           
 16775                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16776     0B26  30C9               	movlw	201
 16777     0B27  00C3               	movwf	67	;volatile
 16778     0B28                     l14221:
 16779                           
 16780                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16781     0B28  300E               	movlw	14
 16782     0B29  00B8               	movwf	56	;volatile
 16783     0B2A                     l14223:
 16784                           
 16785                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16786     0B2A  01E5               	clrf	101	;volatile
 16787     0B2B                     l14225:
 16788                           
 16789                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16790     0B2B  01C4               	clrf	68	;volatile
 16791     0B2C                     l14227:
 16792                           
 16793                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16794     0B2C  01B9               	clrf	57	;volatile
 16795     0B2D                     l14229:
 16796                           
 16797                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16798     0B2D  01CF               	clrf	79	;volatile
 16799     0B2E                     l14231:
 16800                           
 16801                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16802     0B2E  01E6               	clrf	102	;volatile
 16803     0B2F                     l14233:
 16804                           
 16805                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16806     0B2F  01BA               	clrf	58	;volatile
 16807     0B30                     l14235:
 16808                           
 16809                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16810     0B30  01C5               	clrf	69	;volatile
 16811     0B31                     l14237:
 16812                           
 16813                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16814     0B31  01D0               	clrf	80	;volatile
 16815     0B32                     l14239:
 16816                           
 16817                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16818     0B32  30FF               	movlw	255
 16819     0B33  00BB               	movwf	59	;volatile
 16820     0B34                     l14241:
 16821                           
 16822                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16823     0B34  30FF               	movlw	255
 16824     0B35  00C6               	movwf	70	;volatile
 16825     0B36                     l14243:
 16826                           
 16827                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16828     0B36  30FF               	movlw	255
 16829     0B37  00D1               	movwf	81	;volatile
 16830     0B38                     l14245:
 16831                           
 16832                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16833     0B38  303F               	movlw	63
 16834     0B39  00BC               	movwf	60	;volatile
 16835     0B3A                     l14247:
 16836                           
 16837                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16838     0B3A  303F               	movlw	63
 16839     0B3B  00C7               	movwf	71	;volatile
 16840     0B3C                     l14249:
 16841                           
 16842                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16843     0B3C  303F               	movlw	63
 16844     0B3D  00D2               	movwf	82	;volatile
 16845     0B3E                     l14251:
 16846                           
 16847                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16848     0B3E  133F               	bcf	63,6	;volatile
 16849     0B3F                     l14253:
 16850                           
 16851                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16852     0B3F  133E               	bcf	62,6	;volatile
 16853     0B40                     l14255:
 16854                           
 16855                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16856     0B40  173D               	bsf	61,6	;volatile
 16857     0B41                     l14257:
 16858                           
 16859                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16860     0B41  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16861     0B42  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16862     0B43  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16863     0B44  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16864     0B45  319F  2766  318B   	fcall	_IOCAF6_SetInterruptHandler
 16865     0B48                     l14259:
 16866                           
 16867                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16868     0B48  014E               	movlb	14	; select bank14
 16869     0B49  1616               	bsf	22,4	;volatile
 16870     0B4A                     l14261:
 16871                           
 16872                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16873     0B4A  3009               	movlw	9
 16874     0B4B  017D               	movlb	61	; select bank61
 16875     0B4C  00C5               	movwf	69	;volatile
 16876     0B4D                     l14263:
 16877                           
 16878                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16879     0B4D  3013               	movlw	19
 16880     0B4E  017E               	movlb	62	; select bank62
 16881     0B4F  0099               	movwf	25	;volatile
 16882     0B50                     l14265:
 16883                           
 16884                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16885     0B50  3014               	movlw	20
 16886     0B51  009A               	movwf	26	;volatile
 16887     0B52                     l14267:
 16888                           
 16889                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16890     0B52  3025               	movlw	37
 16891     0B53  00A4               	movwf	36	;volatile
 16892     0B54                     l14269:
 16893                           
 16894                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16895     0B54  300F               	movlw	15
 16896     0B55  009C               	movwf	28	;volatile
 16897     0B56                     l14271:
 16898                           
 16899                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16900     0B56  3015               	movlw	21
 16901     0B57  017D               	movlb	61	; select bank61
 16902     0B58  00CD               	movwf	77	;volatile
 16903     0B59                     l14273:
 16904                           
 16905                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16906     0B59  300A               	movlw	10
 16907     0B5A  00C6               	movwf	70	;volatile
 16908     0B5B                     l14275:
 16909                           
 16910                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16911     0B5B  300D               	movlw	13
 16912     0B5C  00CB               	movwf	75	;volatile
 16913     0B5D                     l2068:
 16914     0B5D  0008               	return
 16915     0B5E                     __end_of_PIN_MANAGER_Initialize:
 16916                           
 16917                           	psect	text26
 16918     1F66                     __ptext26:	
 16919 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 16920 ;; Defined at:
 16921 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 16924 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;		None
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  1    wreg      void 
 16929 ;; Registers used:
 16930 ;;		wreg
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16940 ;;Total ram usage:        2 bytes
 16941 ;; Hardware stack levels used: 1
 16942 ;; Hardware stack levels required when called: 4
 16943 ;; This function calls:
 16944 ;;		Nothing
 16945 ;; This function is called by:
 16946 ;;		_PIN_MANAGER_Initialize
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950     1F66                     _IOCAF6_SetInterruptHandler:	
 16951                           ;psect for function _IOCAF6_SetInterruptHandler
 16952                           
 16953     1F66                     l13537:	
 16954                           ;incstack = 0
 16955                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 16956                           
 16957                           
 16958                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 16959     1F66  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 16960     1F67  0141               	movlb	1	; select bank1
 16961     1F68  00EB               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 16962     1F69  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 16963     1F6A  00EA               	movwf	_IOCAF6_InterruptHandler^(0+128)
 16964     1F6B                     l2079:
 16965     1F6B  0008               	return
 16966     1F6C                     __end_of_IOCAF6_SetInterruptHandler:
 16967                           
 16968                           	psect	text27
 16969     1FE1                     __ptext27:	
 16970 ;; *************** function _OSCILLATOR_Initialize *****************
 16971 ;; Defined at:
 16972 ;;		line 61 in file "mcc_generated_files/mcc.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, status,2
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/0
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used: 1
 16992 ;; Hardware stack levels required when called: 4
 16993 ;; This function calls:
 16994 ;;		Nothing
 16995 ;; This function is called by:
 16996 ;;		_SYSTEM_Initialize
 16997 ;; This function uses a non-reentrant model
 16998 ;;
 16999                           
 17000     1FE1                     _OSCILLATOR_Initialize:	
 17001                           ;psect for function _OSCILLATOR_Initialize
 17002                           
 17003     1FE1                     l14277:	
 17004                           ;incstack = 0
 17005                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17006                           
 17007                           
 17008                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17009     1FE1  3060               	movlw	96
 17010     1FE2  0151               	movlb	17	; select bank17
 17011     1FE3  008D               	movwf	13	;volatile
 17012     1FE4                     l14279:
 17013                           
 17014                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17015     1FE4  018F               	clrf	15	;volatile
 17016     1FE5                     l14281:
 17017                           
 17018                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17019     1FE5  0191               	clrf	17	;volatile
 17020                           
 17021                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17022     1FE6  3006               	movlw	6
 17023     1FE7  0093               	movwf	19	;volatile
 17024     1FE8                     l14283:
 17025                           
 17026                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17027     1FE8  0190               	clrf	16	;volatile
 17028     1FE9                     l14285:
 17029                           
 17030                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17031     1FE9  0192               	clrf	18	;volatile
 17032     1FEA                     l1980:
 17033     1FEA  0008               	return
 17034     1FEB                     __end_of_OSCILLATOR_Initialize:
 17035                           
 17036                           	psect	text28
 17037     1FBA                     __ptext28:	
 17038 ;; *************** function _I2C1_Initialize *****************
 17039 ;; Defined at:
 17040 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;		None
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;		None
 17045 ;; Return value:  Size  Location     Type
 17046 ;;                  1    wreg      void 
 17047 ;; Registers used:
 17048 ;;		wreg, status,2
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/0
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17058 ;;Total ram usage:        0 bytes
 17059 ;; Hardware stack levels used: 1
 17060 ;; Hardware stack levels required when called: 4
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_SYSTEM_Initialize
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068     1FBA                     _I2C1_Initialize:	
 17069                           ;psect for function _I2C1_Initialize
 17070                           
 17071     1FBA                     l14203:	
 17072                           ;incstack = 0
 17073                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17074                           
 17075                           
 17076                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17077     1FBA  0143               	movlb	3	; select bank3
 17078     1FBB  018F               	clrf	15	;volatile
 17079     1FBC                     l14205:
 17080                           
 17081                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17082     1FBC  3008               	movlw	8
 17083     1FBD  0090               	movwf	16	;volatile
 17084     1FBE                     l14207:
 17085                           
 17086                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17087     1FBE  0191               	clrf	17	;volatile
 17088                           
 17089                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17090     1FBF  304F               	movlw	79
 17091     1FC0  008D               	movwf	13	;volatile
 17092     1FC1                     l14209:
 17093                           
 17094                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17095     1FC1  1290               	bcf	16,5	;volatile
 17096     1FC2                     l2367:
 17097     1FC2  0008               	return
 17098     1FC3                     __end_of_I2C1_Initialize:
 17099                           
 17100                           	psect	text29
 17101     097D                     __ptext29:	
 17102 ;; *************** function _EUSART2_Initialize *****************
 17103 ;; Defined at:
 17104 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17105 ;; Parameters:    Size  Location     Type
 17106 ;;		None
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;		None
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, status,2, status,0, pclath, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17122 ;;Total ram usage:        0 bytes
 17123 ;; Hardware stack levels used: 1
 17124 ;; Hardware stack levels required when called: 5
 17125 ;; This function calls:
 17126 ;;		_EUSART2_SetErrorHandler
 17127 ;;		_EUSART2_SetFramingErrorHandler
 17128 ;;		_EUSART2_SetOverrunErrorHandler
 17129 ;;		_EUSART2_SetRxInterruptHandler
 17130 ;;		_EUSART2_SetTxInterruptHandler
 17131 ;; This function is called by:
 17132 ;;		_SYSTEM_Initialize
 17133 ;; This function uses a non-reentrant model
 17134 ;;
 17135                           
 17136     097D                     _EUSART2_Initialize:	
 17137                           ;psect for function _EUSART2_Initialize
 17138                           
 17139     097D                     l14133:	
 17140                           ;incstack = 0
 17141                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17142                           
 17143                           
 17144                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17145     097D  014E               	movlb	14	; select bank14
 17146     097E  1399               	bcf	25,7	;volatile
 17147     097F                     l14135:
 17148                           
 17149                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17150     097F  304F               	movlw	low _EUSART2_Receive_ISR
 17151     0980  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17152     0981  3008               	movlw	high _EUSART2_Receive_ISR
 17153     0982  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17154     0983  319F  275A  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17155     0986                     l14137:
 17156                           
 17157                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17158     0986  014E               	movlb	14	; select bank14
 17159     0987  1319               	bcf	25,6	;volatile
 17160                           
 17161                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17162     0988  30DD               	movlw	low _EUSART2_Transmit_ISR
 17163     0989  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17164     098A  3013               	movlw	high _EUSART2_Transmit_ISR
 17165     098B  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17166     098C  319F  2760  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17167     098F                     l14139:
 17168                           
 17169                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17170     098F  3008               	movlw	8
 17171     0990  0154               	movlb	20	; select bank20
 17172     0991  009F               	movwf	31	;volatile
 17173     0992                     l14141:
 17174                           
 17175                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17176     0992  3090               	movlw	144
 17177     0993  009D               	movwf	29	;volatile
 17178     0994                     l14143:
 17179                           
 17180                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17181     0994  3024               	movlw	36
 17182     0995  009E               	movwf	30	;volatile
 17183     0996                     l14145:
 17184                           
 17185                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17186     0996  3040               	movlw	64
 17187     0997  009B               	movwf	27	;volatile
 17188     0998                     l14147:
 17189                           
 17190                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17191     0998  3003               	movlw	3
 17192     0999  009C               	movwf	28	;volatile
 17193     099A                     l14149:
 17194                           
 17195                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17196     099A  308C               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17197     099B  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17198     099C  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17199     099D  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17200     099E  319F  274E  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17201     09A1                     l14151:
 17202                           
 17203                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17204     09A1  30BB               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17205     09A2  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17206     09A3  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17207     09A4  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17208     09A5  319F  2754  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17209     09A8                     l14153:
 17210                           
 17211                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17212     09A8  30B7               	movlw	low _EUSART2_DefaultErrorHandler
 17213     09A9  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17214     09AA  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17215     09AB  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17216     09AC  319F  2748  3189   	fcall	_EUSART2_SetErrorHandler
 17217     09AF                     l14155:
 17218                           
 17219                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17220     09AF  0140               	movlb	0	; select bank0
 17221     09B0  01DE               	clrf	_eusart2RxLastError	;volatile
 17222     09B1                     l14157:
 17223                           
 17224                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17225     09B1  01E3               	clrf	_eusart2TxHead	;volatile
 17226     09B2                     l14159:
 17227                           
 17228                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17229     09B2  01E2               	clrf	_eusart2TxTail	;volatile
 17230     09B3                     l14161:
 17231                           
 17232                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17233     09B3  3008               	movlw	8
 17234     09B4  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17235                           
 17236                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17237     09B5  01FC               	clrf	_eusart2RxHead	;volatile
 17238                           
 17239                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17240     09B6  01E0               	clrf	_eusart2RxTail	;volatile
 17241                           
 17242                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17243     09B7  01DF               	clrf	_eusart2RxCount	;volatile
 17244     09B8                     l14163:
 17245                           
 17246                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17247     09B8  014E               	movlb	14	; select bank14
 17248     09B9  1799               	bsf	25,7	;volatile
 17249     09BA                     l1676:
 17250     09BA  0008               	return
 17251     09BB                     __end_of_EUSART2_Initialize:
 17252                           
 17253                           	psect	text30
 17254     1F60                     __ptext30:	
 17255 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17256 ;; Defined at:
 17257 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17258 ;; Parameters:    Size  Location     Type
 17259 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17260 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;		None
 17263 ;; Return value:  Size  Location     Type
 17264 ;;                  1    wreg      void 
 17265 ;; Registers used:
 17266 ;;		wreg
 17267 ;; Tracked objects:
 17268 ;;		On entry : 0/0
 17269 ;;		On exit  : 0/0
 17270 ;;		Unchanged: 0/0
 17271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17276 ;;Total ram usage:        2 bytes
 17277 ;; Hardware stack levels used: 1
 17278 ;; Hardware stack levels required when called: 4
 17279 ;; This function calls:
 17280 ;;		Nothing
 17281 ;; This function is called by:
 17282 ;;		_EUSART2_Initialize
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286     1F60                     _EUSART2_SetTxInterruptHandler:	
 17287                           ;psect for function _EUSART2_SetTxInterruptHandler
 17288                           
 17289     1F60                     l13509:	
 17290                           ;incstack = 0
 17291                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17292                           
 17293                           
 17294                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17295     1F60  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17296     1F61  0141               	movlb	1	; select bank1
 17297     1F62  00EF               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17298     1F63  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17299     1F64  00EE               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17300     1F65                     l1742:
 17301     1F65  0008               	return
 17302     1F66                     __end_of_EUSART2_SetTxInterruptHandler:
 17303                           
 17304                           	psect	text31
 17305     1F5A                     __ptext31:	
 17306 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17307 ;; Defined at:
 17308 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17309 ;; Parameters:    Size  Location     Type
 17310 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17311 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;		None
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  1    wreg      void 
 17316 ;; Registers used:
 17317 ;;		wreg
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17327 ;;Total ram usage:        2 bytes
 17328 ;; Hardware stack levels used: 1
 17329 ;; Hardware stack levels required when called: 4
 17330 ;; This function calls:
 17331 ;;		Nothing
 17332 ;; This function is called by:
 17333 ;;		_EUSART2_Initialize
 17334 ;; This function uses a non-reentrant model
 17335 ;;
 17336                           
 17337     1F5A                     _EUSART2_SetRxInterruptHandler:	
 17338                           ;psect for function _EUSART2_SetRxInterruptHandler
 17339                           
 17340     1F5A                     l13507:	
 17341                           ;incstack = 0
 17342                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17343                           
 17344                           
 17345                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17346     1F5A  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17347     1F5B  0141               	movlb	1	; select bank1
 17348     1F5C  00ED               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17349     1F5D  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17350     1F5E  00EC               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17351     1F5F                     l1745:
 17352     1F5F  0008               	return
 17353     1F60                     __end_of_EUSART2_SetRxInterruptHandler:
 17354                           
 17355                           	psect	text32
 17356     1F54                     __ptext32:	
 17357 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17358 ;; Defined at:
 17359 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17362 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;		None
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      void 
 17367 ;; Registers used:
 17368 ;;		wreg
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17378 ;;Total ram usage:        2 bytes
 17379 ;; Hardware stack levels used: 1
 17380 ;; Hardware stack levels required when called: 4
 17381 ;; This function calls:
 17382 ;;		Nothing
 17383 ;; This function is called by:
 17384 ;;		_EUSART2_Initialize
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388     1F54                     _EUSART2_SetOverrunErrorHandler:	
 17389                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17390                           
 17391     1F54                     l13513:	
 17392                           ;incstack = 0
 17393                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17394                           
 17395                           
 17396                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17397     1F54  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17398     1F55  0142               	movlb	2	; select bank2
 17399     1F56  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17400     1F57  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17401     1F58  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17402     1F59                     l1736:
 17403     1F59  0008               	return
 17404     1F5A                     __end_of_EUSART2_SetOverrunErrorHandler:
 17405                           
 17406                           	psect	text33
 17407     1F4E                     __ptext33:	
 17408 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17409 ;; Defined at:
 17410 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17413 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17414 ;; Auto vars:     Size  Location     Type
 17415 ;;		None
 17416 ;; Return value:  Size  Location     Type
 17417 ;;                  1    wreg      void 
 17418 ;; Registers used:
 17419 ;;		wreg
 17420 ;; Tracked objects:
 17421 ;;		On entry : 0/0
 17422 ;;		On exit  : 0/0
 17423 ;;		Unchanged: 0/0
 17424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17429 ;;Total ram usage:        2 bytes
 17430 ;; Hardware stack levels used: 1
 17431 ;; Hardware stack levels required when called: 4
 17432 ;; This function calls:
 17433 ;;		Nothing
 17434 ;; This function is called by:
 17435 ;;		_EUSART2_Initialize
 17436 ;; This function uses a non-reentrant model
 17437 ;;
 17438                           
 17439     1F4E                     _EUSART2_SetFramingErrorHandler:	
 17440                           ;psect for function _EUSART2_SetFramingErrorHandler
 17441                           
 17442     1F4E                     l13511:	
 17443                           ;incstack = 0
 17444                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17445                           
 17446                           
 17447                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17448     1F4E  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17449     1F4F  0142               	movlb	2	; select bank2
 17450     1F50  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17451     1F51  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17452     1F52  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17453     1F53                     l1733:
 17454     1F53  0008               	return
 17455     1F54                     __end_of_EUSART2_SetFramingErrorHandler:
 17456                           
 17457                           	psect	text34
 17458     1F48                     __ptext34:	
 17459 ;; *************** function _EUSART2_SetErrorHandler *****************
 17460 ;; Defined at:
 17461 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17462 ;; Parameters:    Size  Location     Type
 17463 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17464 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17465 ;; Auto vars:     Size  Location     Type
 17466 ;;		None
 17467 ;; Return value:  Size  Location     Type
 17468 ;;                  1    wreg      void 
 17469 ;; Registers used:
 17470 ;;		wreg
 17471 ;; Tracked objects:
 17472 ;;		On entry : 0/0
 17473 ;;		On exit  : 0/0
 17474 ;;		Unchanged: 0/0
 17475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17480 ;;Total ram usage:        2 bytes
 17481 ;; Hardware stack levels used: 1
 17482 ;; Hardware stack levels required when called: 4
 17483 ;; This function calls:
 17484 ;;		Nothing
 17485 ;; This function is called by:
 17486 ;;		_EUSART2_Initialize
 17487 ;; This function uses a non-reentrant model
 17488 ;;
 17489                           
 17490     1F48                     _EUSART2_SetErrorHandler:	
 17491                           ;psect for function _EUSART2_SetErrorHandler
 17492                           
 17493     1F48                     l13515:	
 17494                           ;incstack = 0
 17495                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17496                           
 17497                           
 17498                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17499     1F48  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17500     1F49  0142               	movlb	2	; select bank2
 17501     1F4A  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17502     1F4B  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17503     1F4C  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17504     1F4D                     l1739:
 17505     1F4D  0008               	return
 17506     1F4E                     __end_of_EUSART2_SetErrorHandler:
 17507                           
 17508                           	psect	text35
 17509     093F                     __ptext35:	
 17510 ;; *************** function _EUSART1_Initialize *****************
 17511 ;; Defined at:
 17512 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;		None
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;		None
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  1    wreg      void 
 17519 ;; Registers used:
 17520 ;;		wreg, status,2, status,0, pclath, cstack
 17521 ;; Tracked objects:
 17522 ;;		On entry : 0/0
 17523 ;;		On exit  : 0/0
 17524 ;;		Unchanged: 0/0
 17525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17530 ;;Total ram usage:        0 bytes
 17531 ;; Hardware stack levels used: 1
 17532 ;; Hardware stack levels required when called: 5
 17533 ;; This function calls:
 17534 ;;		_EUSART1_SetErrorHandler
 17535 ;;		_EUSART1_SetFramingErrorHandler
 17536 ;;		_EUSART1_SetOverrunErrorHandler
 17537 ;;		_EUSART1_SetRxInterruptHandler
 17538 ;;		_EUSART1_SetTxInterruptHandler
 17539 ;; This function is called by:
 17540 ;;		_SYSTEM_Initialize
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544     093F                     _EUSART1_Initialize:	
 17545                           ;psect for function _EUSART1_Initialize
 17546                           
 17547     093F                     l14169:	
 17548                           ;incstack = 0
 17549                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17550                           
 17551                           
 17552                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17553     093F  014E               	movlb	14	; select bank14
 17554     0940  1299               	bcf	25,5	;volatile
 17555     0941                     l14171:
 17556                           
 17557                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17558     0941  3088               	movlw	low _EUSART1_Receive_ISR
 17559     0942  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17560     0943  3008               	movlw	high _EUSART1_Receive_ISR
 17561     0944  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17562     0945  319F  273C  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17563     0948                     l14173:
 17564                           
 17565                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17566     0948  014E               	movlb	14	; select bank14
 17567     0949  1219               	bcf	25,4	;volatile
 17568                           
 17569                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17570     094A  30FF               	movlw	low _EUSART1_Transmit_ISR
 17571     094B  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17572     094C  3013               	movlw	high _EUSART1_Transmit_ISR
 17573     094D  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17574     094E  319F  2742  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17575     0951                     l14175:
 17576                           
 17577                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17578     0951  3008               	movlw	8
 17579     0952  0142               	movlb	2	; select bank2
 17580     0953  009F               	movwf	31	;volatile
 17581     0954                     l14177:
 17582                           
 17583                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17584     0954  3090               	movlw	144
 17585     0955  009D               	movwf	29	;volatile
 17586     0956                     l14179:
 17587                           
 17588                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17589     0956  3024               	movlw	36
 17590     0957  009E               	movwf	30	;volatile
 17591     0958                     l14181:
 17592                           
 17593                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17594     0958  3040               	movlw	64
 17595     0959  009B               	movwf	27	;volatile
 17596     095A                     l14183:
 17597                           
 17598                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17599     095A  3003               	movlw	3
 17600     095B  009C               	movwf	28	;volatile
 17601     095C                     l14185:
 17602                           
 17603                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17604     095C  308B               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17605     095D  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17606     095E  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17607     095F  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17608     0960  319F  2730  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17609     0963                     l14187:
 17610                           
 17611                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17612     0963  30B3               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17613     0964  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17614     0965  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17615     0966  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17616     0967  319F  2736  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17617     096A                     l14189:
 17618                           
 17619                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17620     096A  30AF               	movlw	low _EUSART1_DefaultErrorHandler
 17621     096B  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17622     096C  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17623     096D  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17624     096E  319F  272A  3189   	fcall	_EUSART1_SetErrorHandler
 17625     0971                     l14191:
 17626                           
 17627                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17628     0971  0140               	movlb	0	; select bank0
 17629     0972  01D7               	clrf	_eusart1RxLastError	;volatile
 17630     0973                     l14193:
 17631                           
 17632                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17633     0973  01DD               	clrf	_eusart1TxHead	;volatile
 17634     0974                     l14195:
 17635                           
 17636                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17637     0974  01DC               	clrf	_eusart1TxTail	;volatile
 17638     0975                     l14197:
 17639                           
 17640                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17641     0975  3008               	movlw	8
 17642     0976  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17643                           
 17644                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17645     0977  01DA               	clrf	_eusart1RxHead	;volatile
 17646                           
 17647                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17648     0978  01D9               	clrf	_eusart1RxTail	;volatile
 17649                           
 17650                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17651     0979  01D8               	clrf	_eusart1RxCount	;volatile
 17652     097A                     l14199:
 17653                           
 17654                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17655     097A  014E               	movlb	14	; select bank14
 17656     097B  1699               	bsf	25,5	;volatile
 17657     097C                     l1820:
 17658     097C  0008               	return
 17659     097D                     __end_of_EUSART1_Initialize:
 17660                           
 17661                           	psect	text36
 17662     1F42                     __ptext36:	
 17663 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17664 ;; Defined at:
 17665 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17666 ;; Parameters:    Size  Location     Type
 17667 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17668 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17669 ;; Auto vars:     Size  Location     Type
 17670 ;;		None
 17671 ;; Return value:  Size  Location     Type
 17672 ;;                  1    wreg      void 
 17673 ;; Registers used:
 17674 ;;		wreg
 17675 ;; Tracked objects:
 17676 ;;		On entry : 0/0
 17677 ;;		On exit  : 0/0
 17678 ;;		Unchanged: 0/0
 17679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17684 ;;Total ram usage:        2 bytes
 17685 ;; Hardware stack levels used: 1
 17686 ;; Hardware stack levels required when called: 4
 17687 ;; This function calls:
 17688 ;;		Nothing
 17689 ;; This function is called by:
 17690 ;;		_EUSART1_Initialize
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694     1F42                     _EUSART1_SetTxInterruptHandler:	
 17695                           ;psect for function _EUSART1_SetTxInterruptHandler
 17696                           
 17697     1F42                     l13529:	
 17698                           ;incstack = 0
 17699                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17700                           
 17701                           
 17702                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17703     1F42  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17704     1F43  0142               	movlb	2	; select bank2
 17705     1F44  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17706     1F45  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17707     1F46  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17708     1F47                     l1892:
 17709     1F47  0008               	return
 17710     1F48                     __end_of_EUSART1_SetTxInterruptHandler:
 17711                           
 17712                           	psect	text37
 17713     1F3C                     __ptext37:	
 17714 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17715 ;; Defined at:
 17716 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17717 ;; Parameters:    Size  Location     Type
 17718 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17719 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;		None
 17722 ;; Return value:  Size  Location     Type
 17723 ;;                  1    wreg      void 
 17724 ;; Registers used:
 17725 ;;		wreg
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17735 ;;Total ram usage:        2 bytes
 17736 ;; Hardware stack levels used: 1
 17737 ;; Hardware stack levels required when called: 4
 17738 ;; This function calls:
 17739 ;;		Nothing
 17740 ;; This function is called by:
 17741 ;;		_EUSART1_Initialize
 17742 ;; This function uses a non-reentrant model
 17743 ;;
 17744                           
 17745     1F3C                     _EUSART1_SetRxInterruptHandler:	
 17746                           ;psect for function _EUSART1_SetRxInterruptHandler
 17747                           
 17748     1F3C                     l13527:	
 17749                           ;incstack = 0
 17750                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17751                           
 17752                           
 17753                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17754     1F3C  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17755     1F3D  0142               	movlb	2	; select bank2
 17756     1F3E  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17757     1F3F  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17758     1F40  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17759     1F41                     l1895:
 17760     1F41  0008               	return
 17761     1F42                     __end_of_EUSART1_SetRxInterruptHandler:
 17762                           
 17763                           	psect	text38
 17764     1F36                     __ptext38:	
 17765 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17766 ;; Defined at:
 17767 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17770 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;		None
 17773 ;; Return value:  Size  Location     Type
 17774 ;;                  1    wreg      void 
 17775 ;; Registers used:
 17776 ;;		wreg
 17777 ;; Tracked objects:
 17778 ;;		On entry : 0/0
 17779 ;;		On exit  : 0/0
 17780 ;;		Unchanged: 0/0
 17781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17786 ;;Total ram usage:        2 bytes
 17787 ;; Hardware stack levels used: 1
 17788 ;; Hardware stack levels required when called: 4
 17789 ;; This function calls:
 17790 ;;		Nothing
 17791 ;; This function is called by:
 17792 ;;		_EUSART1_Initialize
 17793 ;; This function uses a non-reentrant model
 17794 ;;
 17795                           
 17796     1F36                     _EUSART1_SetOverrunErrorHandler:	
 17797                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17798                           
 17799     1F36                     l13533:	
 17800                           ;incstack = 0
 17801                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17802                           
 17803                           
 17804                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17805     1F36  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17806     1F37  0142               	movlb	2	; select bank2
 17807     1F38  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17808     1F39  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17809     1F3A  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17810     1F3B                     l1886:
 17811     1F3B  0008               	return
 17812     1F3C                     __end_of_EUSART1_SetOverrunErrorHandler:
 17813                           
 17814                           	psect	text39
 17815     1F30                     __ptext39:	
 17816 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17817 ;; Defined at:
 17818 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17819 ;; Parameters:    Size  Location     Type
 17820 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17821 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17822 ;; Auto vars:     Size  Location     Type
 17823 ;;		None
 17824 ;; Return value:  Size  Location     Type
 17825 ;;                  1    wreg      void 
 17826 ;; Registers used:
 17827 ;;		wreg
 17828 ;; Tracked objects:
 17829 ;;		On entry : 0/0
 17830 ;;		On exit  : 0/0
 17831 ;;		Unchanged: 0/0
 17832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17837 ;;Total ram usage:        2 bytes
 17838 ;; Hardware stack levels used: 1
 17839 ;; Hardware stack levels required when called: 4
 17840 ;; This function calls:
 17841 ;;		Nothing
 17842 ;; This function is called by:
 17843 ;;		_EUSART1_Initialize
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847     1F30                     _EUSART1_SetFramingErrorHandler:	
 17848                           ;psect for function _EUSART1_SetFramingErrorHandler
 17849                           
 17850     1F30                     l13531:	
 17851                           ;incstack = 0
 17852                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17853                           
 17854                           
 17855                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17856     1F30  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17857     1F31  0142               	movlb	2	; select bank2
 17858     1F32  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17859     1F33  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17860     1F34  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17861     1F35                     l1883:
 17862     1F35  0008               	return
 17863     1F36                     __end_of_EUSART1_SetFramingErrorHandler:
 17864                           
 17865                           	psect	text40
 17866     1F2A                     __ptext40:	
 17867 ;; *************** function _EUSART1_SetErrorHandler *****************
 17868 ;; Defined at:
 17869 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17872 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;		None
 17875 ;; Return value:  Size  Location     Type
 17876 ;;                  1    wreg      void 
 17877 ;; Registers used:
 17878 ;;		wreg
 17879 ;; Tracked objects:
 17880 ;;		On entry : 0/0
 17881 ;;		On exit  : 0/0
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17888 ;;Total ram usage:        2 bytes
 17889 ;; Hardware stack levels used: 1
 17890 ;; Hardware stack levels required when called: 4
 17891 ;; This function calls:
 17892 ;;		Nothing
 17893 ;; This function is called by:
 17894 ;;		_EUSART1_Initialize
 17895 ;; This function uses a non-reentrant model
 17896 ;;
 17897                           
 17898     1F2A                     _EUSART1_SetErrorHandler:	
 17899                           ;psect for function _EUSART1_SetErrorHandler
 17900                           
 17901     1F2A                     l13535:	
 17902                           ;incstack = 0
 17903                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17904                           
 17905                           
 17906                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17907     1F2A  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17908     1F2B  0142               	movlb	2	; select bank2
 17909     1F2C  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 17910     1F2D  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17911     1F2E  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 17912     1F2F                     l1889:
 17913     1F2F  0008               	return
 17914     1F30                     __end_of_EUSART1_SetErrorHandler:
 17915                           
 17916                           	psect	text41
 17917     127A                     __ptext41:	
 17918 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 17919 ;; Defined at:
 17920 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 17921 ;; Parameters:    Size  Location     Type
 17922 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 17923 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), 
 17924 ;;  len             1    3[COMMON] unsigned char 
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;		None
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  1    wreg      _Bool 
 17929 ;; Registers used:
 17930 ;;		wreg, status,2, status,0
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/0
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17936 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17940 ;;Total ram usage:        3 bytes
 17941 ;; Hardware stack levels used: 1
 17942 ;; Hardware stack levels required when called: 4
 17943 ;; This function calls:
 17944 ;;		Nothing
 17945 ;; This function is called by:
 17946 ;;		_main
 17947 ;;		_RN487X_Example_Initialized
 17948 ;; This function uses a non-reentrant model
 17949 ;;
 17950                           
 17951     127A                     _RN487X_SetAsyncMessageHandler:	
 17952                           ;psect for function _RN487X_SetAsyncMessageHandler
 17953                           
 17954     127A                     l14517:	
 17955                           ;incstack = 0
 17956                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 17957                           
 17958                           
 17959                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 17960     127A  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 17961     127B  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 17962     127C  1903               	btfsc	3,2
 17963     127D  2A7F               	goto	u11651
 17964     127E  2A80               	goto	u11650
 17965     127F                     u11651:
 17966     127F  2A90               	goto	l14531
 17967     1280                     u11650:
 17968     1280                     l14519:
 17969     1280  3002               	movlw	2
 17970     1281  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 17971     1282  1C03               	skipc
 17972     1283  2A85               	goto	u11661
 17973     1284  2A86               	goto	u11660
 17974     1285                     u11661:
 17975     1285  2A90               	goto	l14531
 17976     1286                     u11660:
 17977     1286                     l14521:
 17978                           
 17979                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 17980     1286  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 17981     1287  0140               	movlb	0	; select bank0
 17982     1288  00CF               	movwf	_asyncBuffer+1
 17983     1289  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 17984     128A  00CE               	movwf	_asyncBuffer
 17985     128B                     l14523:
 17986                           
 17987                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 17988     128B  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 17989     128C  3EFF               	addlw	255
 17990     128D  00E7               	movwf	_asyncBufferSize
 17991     128E                     l14525:
 17992                           
 17993                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 17994     128E  3001               	movlw	1
 17995     128F  2A91               	goto	l1577
 17996     1290                     l14531:
 17997                           
 17998                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 17999     1290  3000               	movlw	0
 18000     1291                     l1577:
 18001     1291  0008               	return
 18002     1292                     __end_of_RN487X_SetAsyncMessageHandler:
 18003                           
 18004                           	psect	text42
 18005     1054                     __ptext42:	
 18006 ;; *************** function _RN487X_Read *****************
 18007 ;; Defined at:
 18008 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;		None
 18011 ;; Auto vars:     Size  Location     Type
 18012 ;;		None
 18013 ;; Return value:  Size  Location     Type
 18014 ;;                  1    wreg      unsigned char 
 18015 ;; Registers used:
 18016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18017 ;; Tracked objects:
 18018 ;;		On entry : 0/0
 18019 ;;		On exit  : 0/0
 18020 ;;		Unchanged: 0/0
 18021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18026 ;;Total ram usage:        0 bytes
 18027 ;; Hardware stack levels used: 1
 18028 ;; Hardware stack levels required when called: 9
 18029 ;; This function calls:
 18030 ;;		_RN487X_DataReady
 18031 ;; This function is called by:
 18032 ;;		_main
 18033 ;;		_RN487X_Example_TransparentUart
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037     1054                     _RN487X_Read:	
 18038                           ;psect for function _RN487X_Read
 18039                           
 18040     1054                     l14539:	
 18041                           ;incstack = 0
 18042                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18043                           
 18044     1054                     l14541:	
 18045                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18046                           
 18047     1054  3193  2365  3190   	fcall	_RN487X_DataReady
 18048     1057  3A00               	xorlw	0
 18049     1058  1903               	skipnz
 18050     1059  285B               	goto	u11671
 18051     105A  285C               	goto	u11670
 18052     105B                     u11671:
 18053     105B  2854               	goto	l14541
 18054     105C                     u11670:
 18055     105C                     l14543:
 18056                           
 18057                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18058     105C  0140               	movlb	0	; select bank0
 18059     105D  01E5               	clrf	_dataReady
 18060     105E                     l14545:
 18061                           
 18062                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18063     105E  0866               	movf	_peek,w
 18064     105F                     l1589:
 18065     105F  0008               	return
 18066     1060                     __end_of_RN487X_Read:
 18067                           
 18068                           	psect	text43
 18069     1365                     __ptext43:	
 18070 ;; *************** function _RN487X_DataReady *****************
 18071 ;; Defined at:
 18072 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;		None
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  1    wreg      _Bool 
 18079 ;; Registers used:
 18080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18090 ;;Total ram usage:        0 bytes
 18091 ;; Hardware stack levels used: 1
 18092 ;; Hardware stack levels required when called: 8
 18093 ;; This function calls:
 18094 ;;		_RN487X_FilterData
 18095 ;;		_RN487X_is_rx_ready
 18096 ;; This function is called by:
 18097 ;;		_RN487X_Read
 18098 ;;		_main
 18099 ;;		_RN487X_Example_TransparentUart
 18100 ;; This function uses a non-reentrant model
 18101 ;;
 18102                           
 18103     1365                     _RN487X_DataReady:	
 18104                           ;psect for function _RN487X_DataReady
 18105                           
 18106     1365                     l14111:	
 18107                           ;incstack = 0
 18108                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18109                           
 18110                           
 18111                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18112     1365  0140               	movlb	0	; select bank0
 18113     1366  0865               	movf	_dataReady,w
 18114     1367  1903               	btfsc	3,2
 18115     1368  2B6A               	goto	u11381
 18116     1369  2B6B               	goto	u11380
 18117     136A                     u11381:
 18118     136A  2B6D               	goto	l14117
 18119     136B                     u11380:
 18120     136B                     l14113:
 18121                           
 18122                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18123     136B  3001               	movlw	1
 18124     136C  2B80               	goto	l1582
 18125     136D                     l14117:
 18126                           
 18127                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18128     136D  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18129     136E  0084               	movwf	4
 18130     136F  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18131     1370  0085               	movwf	5
 18132     1371  3F01               	moviw [1]fsr0
 18133     1372  008A               	movwf	10
 18134     1373  3F00               	moviw [0]fsr0
 18135     1374  000A               	callw
 18136     1375  3193               	pagesel	$
 18137     1376  3A00               	xorlw	0
 18138     1377  1903               	skipnz
 18139     1378  2B7A               	goto	u11391
 18140     1379  2B7B               	goto	u11390
 18141     137A                     u11391:
 18142     137A  2B7F               	goto	l14123
 18143     137B                     u11390:
 18144     137B                     l14119:
 18145                           
 18146                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18147     137B  318E  2690  3193   	fcall	_RN487X_FilterData
 18148     137E  2B80               	goto	l1582
 18149     137F                     l14123:
 18150                           
 18151                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18152     137F  3000               	movlw	0
 18153     1380                     l1582:
 18154     1380  0008               	return
 18155     1381                     __end_of_RN487X_DataReady:
 18156                           
 18157                           	psect	text44
 18158     0E90                     __ptext44:	
 18159 ;; *************** function _RN487X_FilterData *****************
 18160 ;; Defined at:
 18161 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18162 ;; Parameters:    Size  Location     Type
 18163 ;;		None
 18164 ;; Auto vars:     Size  Location     Type
 18165 ;;  readChar        1   40[BANK0 ] unsigned char 
 18166 ;; Return value:  Size  Location     Type
 18167 ;;                  1    wreg      _Bool 
 18168 ;; Registers used:
 18169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18170 ;; Tracked objects:
 18171 ;;		On entry : 0/0
 18172 ;;		On exit  : 0/0
 18173 ;;		Unchanged: 0/0
 18174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18178 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18179 ;;Total ram usage:        5 bytes
 18180 ;; Hardware stack levels used: 1
 18181 ;; Hardware stack levels required when called: 7
 18182 ;; This function calls:
 18183 ;;		_RN487X_MessageHandler
 18184 ;;		_RN487X_Read@rn487x_interface$F1843
 18185 ;; This function is called by:
 18186 ;;		_RN487X_DataReady
 18187 ;; This function uses a non-reentrant model
 18188 ;;
 18189                           
 18190     0E90                     _RN487X_FilterData:	
 18191                           ;psect for function _RN487X_FilterData
 18192                           
 18193     0E90                     l13479:	
 18194                           ;incstack = 0
 18195                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18196                           
 18197                           
 18198                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18199     0E90  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18200     0E91  0084               	movwf	4
 18201     0E92  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18202     0E93  0085               	movwf	5
 18203     0E94  3F01               	moviw [1]fsr0
 18204     0E95  008A               	movwf	10
 18205     0E96  3F00               	moviw [0]fsr0
 18206     0E97  000A               	callw
 18207     0E98  318E               	pagesel	$
 18208     0E99  0140               	movlb	0	; select bank0
 18209     0E9A  00C8               	movwf	RN487X_FilterData@readChar
 18210     0E9B                     l13481:
 18211                           
 18212                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18213     0E9B  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18214     0E9C  1D03               	btfss	3,2
 18215     0E9D  2E9F               	goto	u10341
 18216     0E9E  2EA0               	goto	u10340
 18217     0E9F                     u10341:
 18218     0E9F  2ED8               	goto	l13497
 18219     0EA0                     u10340:
 18220     0EA0                     l13483:
 18221                           
 18222                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18223     0EA0  3025               	movlw	37
 18224     0EA1  0648               	xorwf	RN487X_FilterData@readChar,w
 18225     0EA2  1D03               	btfss	3,2
 18226     0EA3  2EA5               	goto	u10351
 18227     0EA4  2EA6               	goto	u10350
 18228     0EA5                     u10351:
 18229     0EA5  2EBA               	goto	l13491
 18230     0EA6                     u10350:
 18231     0EA6                     l13485:
 18232                           
 18233                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18234     0EA6  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18235     0EA7                     l13487:
 18236                           
 18237                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18238     0EA7  084C               	movf	_pHead,w
 18239     0EA8  0086               	movwf	6
 18240     0EA9  084D               	movf	_pHead+1,w
 18241     0EAA  0087               	movwf	7
 18242     0EAB  0181               	clrf	1
 18243     0EAC                     l13489:
 18244                           
 18245                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18246     0EAC  084F               	movf	_asyncBuffer+1,w
 18247     0EAD  00C2               	movwf	RN487X_MessageHandler@message+1
 18248     0EAE  084E               	movf	_asyncBuffer,w
 18249     0EAF  00C1               	movwf	RN487X_MessageHandler@message
 18250     0EB0  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18251     0EB1  0084               	movwf	4
 18252     0EB2  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18253     0EB3  0085               	movwf	5
 18254     0EB4  3F01               	moviw [1]fsr0
 18255     0EB5  008A               	movwf	10
 18256     0EB6  3F00               	moviw [0]fsr0
 18257     0EB7  000A               	callw
 18258     0EB8  318E               	pagesel	$
 18259                           
 18260                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18261     0EB9  2EE9               	goto	l1598
 18262     0EBA                     l13491:
 18263     0EBA  0867               	movf	_asyncBufferSize,w
 18264     0EBB  00C4               	movwf	??_RN487X_FilterData
 18265     0EBC  01C5               	clrf	??_RN487X_FilterData+1
 18266     0EBD  0844               	movf	??_RN487X_FilterData,w
 18267     0EBE  074E               	addwf	_asyncBuffer,w
 18268     0EBF  00C6               	movwf	??_RN487X_FilterData+2
 18269     0EC0  0845               	movf	??_RN487X_FilterData+1,w
 18270     0EC1  3D4F               	addwfc	_asyncBuffer+1,w
 18271     0EC2  00C7               	movwf	??_RN487X_FilterData+3
 18272     0EC3  0847               	movf	??_RN487X_FilterData+3,w
 18273     0EC4  024D               	subwf	_pHead+1,w
 18274     0EC5  1D03               	skipz
 18275     0EC6  2EC9               	goto	u10365
 18276     0EC7  0846               	movf	??_RN487X_FilterData+2,w
 18277     0EC8  024C               	subwf	_pHead,w
 18278     0EC9                     u10365:
 18279     0EC9  1803               	skipnc
 18280     0ECA  2ECC               	goto	u10361
 18281     0ECB  2ECD               	goto	u10360
 18282     0ECC                     u10361:
 18283     0ECC  2EE9               	goto	l1598
 18284     0ECD                     u10360:
 18285     0ECD                     l13493:
 18286                           
 18287                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18288     0ECD  084C               	movf	_pHead,w
 18289     0ECE  0086               	movwf	6
 18290     0ECF  084D               	movf	_pHead+1,w
 18291     0ED0  0087               	movwf	7
 18292     0ED1  0848               	movf	RN487X_FilterData@readChar,w
 18293     0ED2  0081               	movwf	1
 18294     0ED3                     l13495:
 18295     0ED3  3001               	movlw	1
 18296     0ED4  07CC               	addwf	_pHead,f
 18297     0ED5  3000               	movlw	0
 18298     0ED6  3DCD               	addwfc	_pHead+1,f
 18299     0ED7  2EE9               	goto	l1598
 18300     0ED8                     l13497:
 18301                           
 18302                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18303     0ED8  3025               	movlw	37
 18304     0ED9  0648               	xorwf	RN487X_FilterData@readChar,w
 18305     0EDA  1D03               	btfss	3,2
 18306     0EDB  2EDD               	goto	u10371
 18307     0EDC  2EDE               	goto	u10370
 18308     0EDD                     u10371:
 18309     0EDD  2EE5               	goto	l1599
 18310     0EDE                     u10370:
 18311     0EDE                     l13499:
 18312                           
 18313                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18314     0EDE  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18315     0EDF  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18316     0EE0                     l13501:
 18317                           
 18318                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18319     0EE0  084F               	movf	_asyncBuffer+1,w
 18320     0EE1  00CD               	movwf	_pHead+1
 18321     0EE2  084E               	movf	_asyncBuffer,w
 18322     0EE3  00CC               	movwf	_pHead
 18323                           
 18324                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18325     0EE4  2EE9               	goto	l1598
 18326     0EE5                     l1599:	
 18327                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18328                           
 18329                           
 18330                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18331     0EE5  01E5               	clrf	_dataReady
 18332     0EE6  0AE5               	incf	_dataReady,f
 18333     0EE7                     l13503:
 18334                           
 18335                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18336     0EE7  0848               	movf	RN487X_FilterData@readChar,w
 18337     0EE8  00E6               	movwf	_peek
 18338     0EE9                     l1598:	
 18339                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18340                           
 18341                           
 18342                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18343     0EE9  0140               	movlb	0	; select bank0
 18344     0EEA  0865               	movf	_dataReady,w
 18345     0EEB                     l1601:
 18346     0EEB  0008               	return
 18347     0EEC                     __end_of_RN487X_FilterData:
 18348                           
 18349                           	psect	text45
 18350     09FA                     __ptext45:	
 18351 ;; *************** function _RN487X_MessageHandler *****************
 18352 ;; Defined at:
 18353 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18354 ;; Parameters:    Size  Location     Type
 18355 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18356 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;  messageType     1   35[BANK0 ] enum E12962
 18359 ;; Return value:  Size  Location     Type
 18360 ;;                  1    wreg      void 
 18361 ;; Registers used:
 18362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18363 ;; Tracked objects:
 18364 ;;		On entry : 0/0
 18365 ;;		On exit  : 0/0
 18366 ;;		Unchanged: 0/0
 18367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18372 ;;Total ram usage:        3 bytes
 18373 ;; Hardware stack levels used: 1
 18374 ;; Hardware stack levels required when called: 6
 18375 ;; This function calls:
 18376 ;;		_rn487x_PrintIndicatorCharacters
 18377 ;;		_rn487x_PrintMessage
 18378 ;;		_rn487x_PrintMessageEnd
 18379 ;;		_rn487x_PrintMessageStart
 18380 ;;		_strstr
 18381 ;; This function is called by:
 18382 ;;		_RN487X_FilterData
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386     09FA                     _RN487X_MessageHandler:	
 18387                           ;psect for function _RN487X_MessageHandler
 18388                           
 18389     09FA                     l13363:	
 18390                           ;incstack = 0
 18391                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18392                           
 18393                           
 18394                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18395     09FA  3196  2618  3189   	fcall	_rn487x_PrintMessageStart
 18396                           
 18397                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18398     09FD  0140               	movlb	0	; select bank0
 18399     09FE  0842               	movf	RN487X_MessageHandler@message+1,w
 18400     09FF  00F9               	movwf	strstr@h+1
 18401     0A00  0841               	movf	RN487X_MessageHandler@message,w
 18402     0A01  00F8               	movwf	strstr@h
 18403     0A02  3091               	movlw	low (STR_2| (0+32768))
 18404     0A03  00FA               	movwf	strstr@n
 18405     0A04  3098               	movlw	high (STR_2| (0+32768))
 18406     0A05  00FB               	movwf	strstr@n+1
 18407     0A06  318D  25E5  3189   	fcall	_strstr
 18408     0A09  0878               	movf	?_strstr,w
 18409     0A0A  0479               	iorwf	?_strstr+1,w
 18410     0A0B  1903               	btfsc	3,2
 18411     0A0C  2A0E               	goto	u10191
 18412     0A0D  2A0F               	goto	u10190
 18413     0A0E                     u10191:
 18414     0A0E  2A13               	goto	l13367
 18415     0A0F                     u10190:
 18416     0A0F                     l13365:
 18417                           
 18418                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18419     0A0F  0140               	movlb	0	; select bank0
 18420     0A10  01C3               	clrf	RN487X_MessageHandler@messageType
 18421                           
 18422                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18423     0A11  01E8               	clrf	_connected
 18424                           
 18425                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18426     0A12  2A2E               	goto	l13373
 18427     0A13                     l13367:
 18428     0A13  0140               	movlb	0	; select bank0
 18429     0A14  0842               	movf	RN487X_MessageHandler@message+1,w
 18430     0A15  00F9               	movwf	strstr@h+1
 18431     0A16  0841               	movf	RN487X_MessageHandler@message,w
 18432     0A17  00F8               	movwf	strstr@h
 18433     0A18  307A               	movlw	low (STR_4| (0+32768))
 18434     0A19  00FA               	movwf	strstr@n
 18435     0A1A  3098               	movlw	high (STR_4| (0+32768))
 18436     0A1B  00FB               	movwf	strstr@n+1
 18437     0A1C  318D  25E5  3189   	fcall	_strstr
 18438     0A1F  0878               	movf	?_strstr,w
 18439     0A20  0479               	iorwf	?_strstr+1,w
 18440     0A21  1903               	btfsc	3,2
 18441     0A22  2A24               	goto	u10201
 18442     0A23  2A25               	goto	u10200
 18443     0A24                     u10201:
 18444     0A24  2A2B               	goto	l13371
 18445     0A25                     u10200:
 18446     0A25                     l13369:
 18447                           
 18448                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18449     0A25  0140               	movlb	0	; select bank0
 18450     0A26  01C3               	clrf	RN487X_MessageHandler@messageType
 18451     0A27  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18452                           
 18453                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18454     0A28  01E8               	clrf	_connected
 18455     0A29  0AE8               	incf	_connected,f
 18456                           
 18457                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18458     0A2A  2A2E               	goto	l13373
 18459     0A2B                     l13371:
 18460                           
 18461                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18462     0A2B  3002               	movlw	2
 18463     0A2C  0140               	movlb	0	; select bank0
 18464     0A2D  00C3               	movwf	RN487X_MessageHandler@messageType
 18465     0A2E                     l13373:
 18466                           
 18467                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18468     0A2E  0842               	movf	RN487X_MessageHandler@message+1,w
 18469     0A2F  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18470     0A30  0841               	movf	RN487X_MessageHandler@message,w
 18471     0A31  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18472     0A32  3197  2795  3189   	fcall	_rn487x_PrintMessage
 18473     0A35                     l13375:
 18474                           
 18475                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18476     0A35  318B  23AC  3189   	fcall	_rn487x_PrintMessageEnd
 18477     0A38                     l13377:
 18478                           
 18479                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18480     0A38  0140               	movlb	0	; select bank0
 18481     0A39  0843               	movf	RN487X_MessageHandler@messageType,w
 18482     0A3A  3194  2443  3189   	fcall	_rn487x_PrintIndicatorCharacters
 18483     0A3D                     l1480:
 18484     0A3D  0008               	return
 18485     0A3E                     __end_of_RN487X_MessageHandler:
 18486                           
 18487                           	psect	text46
 18488     0DE5                     __ptext46:	
 18489 ;; *************** function _strstr *****************
 18490 ;; Defined at:
 18491 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18492 ;; Parameters:    Size  Location     Type
 18493 ;;  h               2    8[COMMON] PTR const unsigned char 
 18494 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 18495 ;;  n               2   10[COMMON] PTR const unsigned char 
 18496 ;;		 -> STR_5(12), STR_3(11), 
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;  nl              2    2[BANK0 ] unsigned int 
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  2    8[COMMON] PTR unsigned char 
 18501 ;; Registers used:
 18502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18511 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18512 ;;Total ram usage:        8 bytes
 18513 ;; Hardware stack levels used: 1
 18514 ;; Hardware stack levels required when called: 5
 18515 ;; This function calls:
 18516 ;;		_strchr
 18517 ;;		_strlen
 18518 ;;		_strncmp
 18519 ;; This function is called by:
 18520 ;;		_RN487X_MessageHandler
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524     0DE5                     _strstr:	
 18525                           ;psect for function _strstr
 18526                           
 18527     0DE5                     l13263:	
 18528                           ;incstack = 0
 18529                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18530                           
 18531     0DE5  087A               	movf	strstr@n,w
 18532     0DE6  047B               	iorwf	strstr@n+1,w
 18533     0DE7  1903               	btfsc	3,2
 18534     0DE8  2DEA               	goto	u10051
 18535     0DE9  2DEB               	goto	u10050
 18536     0DEA                     u10051:
 18537     0DEA  2E37               	goto	l13277
 18538     0DEB                     u10050:
 18539     0DEB                     l13265:
 18540     0DEB  087B               	movf	strstr@n+1,w
 18541     0DEC  00F2               	movwf	strlen@s+1
 18542     0DED  087A               	movf	strstr@n,w
 18543     0DEE  00F1               	movwf	strlen@s
 18544     0DEF  3192  2292  318D   	fcall	_strlen
 18545     0DF2  0872               	movf	?_strlen+1,w
 18546     0DF3  0140               	movlb	0	; select bank0
 18547     0DF4  00A3               	movwf	strstr@nl+1
 18548     0DF5  0871               	movf	?_strlen,w
 18549     0DF6  00A2               	movwf	strstr@nl
 18550     0DF7  2E28               	goto	l13273
 18551     0DF8                     l13267:
 18552     0DF8  0879               	movf	strstr@h+1,w
 18553     0DF9  00F2               	movwf	strncmp@l+1
 18554     0DFA  0878               	movf	strstr@h,w
 18555     0DFB  00F1               	movwf	strncmp@l
 18556     0DFC  087B               	movf	strstr@n+1,w
 18557     0DFD  00F4               	movwf	strncmp@r+1
 18558     0DFE  087A               	movf	strstr@n,w
 18559     0DFF  00F3               	movwf	strncmp@r
 18560     0E00  0140               	movlb	0	; select bank0
 18561     0E01  0823               	movf	strstr@nl+1,w
 18562     0E02  00F6               	movwf	strncmp@n+1
 18563     0E03  0822               	movf	strstr@nl,w
 18564     0E04  00F5               	movwf	strncmp@n
 18565     0E05  318C  2498  318D   	fcall	_strncmp
 18566     0E08  0871               	movf	?_strncmp,w
 18567     0E09  0472               	iorwf	?_strncmp+1,w
 18568     0E0A  1D03               	btfss	3,2
 18569     0E0B  2E0D               	goto	u10061
 18570     0E0C  2E0E               	goto	u10060
 18571     0E0D                     u10061:
 18572     0E0D  2E0F               	goto	l13271
 18573     0E0E                     u10060:
 18574     0E0E                     l13269:
 18575     0E0E  2E39               	goto	l3323
 18576     0E0F                     l13271:
 18577     0E0F  0878               	movf	strstr@h,w
 18578     0E10  3E01               	addlw	1
 18579     0E11  00F1               	movwf	strchr@s
 18580     0E12  3000               	movlw	0
 18581     0E13  3D79               	addwfc	strstr@h+1,w
 18582     0E14  00F2               	movwf	strchr@s+1
 18583     0E15  087A               	movf	strstr@n,w
 18584     0E16  0084               	movwf	4
 18585     0E17  087B               	movf	strstr@n+1,w
 18586     0E18  0085               	movwf	5
 18587     0E19  0800               	movf	0,w	;code access
 18588     0E1A  0140               	movlb	0	; select bank0
 18589     0E1B  00A0               	movwf	??_strstr
 18590     0E1C  01A1               	clrf	??_strstr+1
 18591     0E1D  0820               	movf	??_strstr,w
 18592     0E1E  00F3               	movwf	strchr@c
 18593     0E1F  0821               	movf	??_strstr+1,w
 18594     0E20  00F4               	movwf	strchr@c+1
 18595     0E21  3193  239E  318D   	fcall	_strchr
 18596     0E24  0872               	movf	?_strchr+1,w
 18597     0E25  00F9               	movwf	strstr@h+1
 18598     0E26  0871               	movf	?_strchr,w
 18599     0E27  00F8               	movwf	strstr@h
 18600     0E28                     l13273:
 18601     0E28  0878               	movf	strstr@h,w
 18602     0E29  0479               	iorwf	strstr@h+1,w
 18603     0E2A  1903               	btfsc	3,2
 18604     0E2B  2E2D               	goto	u10071
 18605     0E2C  2E2E               	goto	u10070
 18606     0E2D                     u10071:
 18607     0E2D  2E37               	goto	l13277
 18608     0E2E                     u10070:
 18609     0E2E                     l13275:
 18610     0E2E  0878               	movf	strstr@h,w
 18611     0E2F  0086               	movwf	6
 18612     0E30  0879               	movf	strstr@h+1,w
 18613     0E31  0087               	movwf	7
 18614     0E32  0801               	movf	1,w
 18615     0E33  1D03               	btfss	3,2
 18616     0E34  2E36               	goto	u10081
 18617     0E35  2E37               	goto	u10080
 18618     0E36                     u10081:
 18619     0E36  2DF8               	goto	l13267
 18620     0E37                     u10080:
 18621     0E37                     l13277:
 18622     0E37  01F8               	clrf	?_strstr
 18623     0E38  01F9               	clrf	?_strstr+1
 18624     0E39                     l3323:
 18625     0E39  0008               	return
 18626     0E3A                     __end_of_strstr:
 18627                           
 18628                           	psect	text47
 18629     0C98                     __ptext47:	
 18630 ;; *************** function _strncmp *****************
 18631 ;; Defined at:
 18632 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18633 ;; Parameters:    Size  Location     Type
 18634 ;;  l               2    1[COMMON] PTR const unsigned char 
 18635 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 18636 ;;  r               2    3[COMMON] PTR const unsigned char 
 18637 ;;		 -> STR_5(12), STR_3(11), 
 18638 ;;  n               2    5[COMMON] unsigned int 
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;		None
 18641 ;; Return value:  Size  Location     Type
 18642 ;;                  2    1[COMMON] int 
 18643 ;; Registers used:
 18644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18645 ;; Tracked objects:
 18646 ;;		On entry : 0/0
 18647 ;;		On exit  : 0/0
 18648 ;;		Unchanged: 0/0
 18649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18650 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18653 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18654 ;;Total ram usage:        7 bytes
 18655 ;; Hardware stack levels used: 1
 18656 ;; Hardware stack levels required when called: 4
 18657 ;; This function calls:
 18658 ;;		Nothing
 18659 ;; This function is called by:
 18660 ;;		_strstr
 18661 ;; This function uses a non-reentrant model
 18662 ;;
 18663                           
 18664     0C98                     _strncmp:	
 18665                           ;psect for function _strncmp
 18666                           
 18667     0C98                     l13141:	
 18668                           ;incstack = 0
 18669                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18670                           
 18671     0C98  3001               	movlw	1
 18672     0C99  02F5               	subwf	strncmp@n,f
 18673     0C9A  3000               	movlw	0
 18674     0C9B  3BF6               	subwfb	strncmp@n+1,f
 18675     0C9C  0A75               	incf	strncmp@n,w
 18676     0C9D  1D03               	skipz
 18677     0C9E  2CA3               	goto	u9931
 18678     0C9F  0A76               	incf	strncmp@n+1,w
 18679     0CA0  1D03               	btfss	3,2
 18680     0CA1  2CA3               	goto	u9931
 18681     0CA2  2CA4               	goto	u9930
 18682     0CA3                     u9931:
 18683     0CA3  2CB3               	goto	l13149
 18684     0CA4                     u9930:
 18685     0CA4                     l13143:
 18686     0CA4  01F1               	clrf	?_strncmp
 18687     0CA5  01F2               	clrf	?_strncmp+1
 18688     0CA6  2CE9               	goto	l3336
 18689     0CA7                     l13147:
 18690     0CA7  3001               	movlw	1
 18691     0CA8  07F1               	addwf	strncmp@l,f
 18692     0CA9  3000               	movlw	0
 18693     0CAA  3DF2               	addwfc	strncmp@l+1,f
 18694     0CAB  3001               	movlw	1
 18695     0CAC  07F3               	addwf	strncmp@r,f
 18696     0CAD  3000               	movlw	0
 18697     0CAE  3DF4               	addwfc	strncmp@r+1,f
 18698     0CAF  3001               	movlw	1
 18699     0CB0  02F5               	subwf	strncmp@n,f
 18700     0CB1  3000               	movlw	0
 18701     0CB2  3BF6               	subwfb	strncmp@n+1,f
 18702     0CB3                     l13149:
 18703     0CB3  0871               	movf	strncmp@l,w
 18704     0CB4  0086               	movwf	6
 18705     0CB5  0872               	movf	strncmp@l+1,w
 18706     0CB6  0087               	movwf	7
 18707     0CB7  0801               	movf	1,w
 18708     0CB8  1903               	btfsc	3,2
 18709     0CB9  2CBB               	goto	u9941
 18710     0CBA  2CBC               	goto	u9940
 18711     0CBB                     u9941:
 18712     0CBB  2CDB               	goto	l13157
 18713     0CBC                     u9940:
 18714     0CBC                     l13151:
 18715     0CBC  0873               	movf	strncmp@r,w
 18716     0CBD  0084               	movwf	4
 18717     0CBE  0874               	movf	strncmp@r+1,w
 18718     0CBF  0085               	movwf	5
 18719     0CC0  0012               	moviw fsr0++
 18720     0CC1  1903               	btfsc	3,2
 18721     0CC2  2CC4               	goto	u9951
 18722     0CC3  2CC5               	goto	u9950
 18723     0CC4                     u9951:
 18724     0CC4  2CDB               	goto	l13157
 18725     0CC5                     u9950:
 18726     0CC5                     l13153:
 18727     0CC5  0875               	movf	strncmp@n,w
 18728     0CC6  0476               	iorwf	strncmp@n+1,w
 18729     0CC7  1903               	btfsc	3,2
 18730     0CC8  2CCA               	goto	u9961
 18731     0CC9  2CCB               	goto	u9960
 18732     0CCA                     u9961:
 18733     0CCA  2CDB               	goto	l13157
 18734     0CCB                     u9960:
 18735     0CCB                     l13155:
 18736     0CCB  0873               	movf	strncmp@r,w
 18737     0CCC  0084               	movwf	4
 18738     0CCD  0874               	movf	strncmp@r+1,w
 18739     0CCE  0085               	movwf	5
 18740     0CCF  0800               	movf	0,w	;code access
 18741     0CD0  00F7               	movwf	??_strncmp
 18742     0CD1  0871               	movf	strncmp@l,w
 18743     0CD2  0086               	movwf	6
 18744     0CD3  0872               	movf	strncmp@l+1,w
 18745     0CD4  0087               	movwf	7
 18746     0CD5  0801               	movf	1,w
 18747     0CD6  0677               	xorwf	??_strncmp,w
 18748     0CD7  1903               	skipnz
 18749     0CD8  2CDA               	goto	u9971
 18750     0CD9  2CDB               	goto	u9970
 18751     0CDA                     u9971:
 18752     0CDA  2CA7               	goto	l13147
 18753     0CDB                     u9970:
 18754     0CDB                     l13157:
 18755     0CDB  0871               	movf	strncmp@l,w
 18756     0CDC  0086               	movwf	6
 18757     0CDD  0872               	movf	strncmp@l+1,w
 18758     0CDE  0087               	movwf	7
 18759     0CDF  0873               	movf	strncmp@r,w
 18760     0CE0  0084               	movwf	4
 18761     0CE1  0874               	movf	strncmp@r+1,w
 18762     0CE2  0085               	movwf	5
 18763     0CE3  0800               	movf	0,w	;code access
 18764     0CE4  0201               	subwf	1,w
 18765     0CE5  00F1               	movwf	?_strncmp
 18766     0CE6  01F2               	clrf	?_strncmp+1
 18767     0CE7  1C03               	skipc
 18768     0CE8  03F2               	decf	?_strncmp+1,f
 18769     0CE9                     l3336:
 18770     0CE9  0008               	return
 18771     0CEA                     __end_of_strncmp:
 18772                           
 18773                           	psect	text48
 18774     139E                     __ptext48:	
 18775 ;; *************** function _strchr *****************
 18776 ;; Defined at:
 18777 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;  s               2    1[COMMON] PTR const unsigned char 
 18780 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 18781 ;;  c               2    3[COMMON] int 
 18782 ;; Auto vars:     Size  Location     Type
 18783 ;;		None
 18784 ;; Return value:  Size  Location     Type
 18785 ;;                  2    1[COMMON] PTR unsigned char 
 18786 ;; Registers used:
 18787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18788 ;; Tracked objects:
 18789 ;;		On entry : 0/0
 18790 ;;		On exit  : 0/0
 18791 ;;		Unchanged: 0/0
 18792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18796 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18797 ;;Total ram usage:        6 bytes
 18798 ;; Hardware stack levels used: 1
 18799 ;; Hardware stack levels required when called: 4
 18800 ;; This function calls:
 18801 ;;		Nothing
 18802 ;; This function is called by:
 18803 ;;		_strstr
 18804 ;; This function uses a non-reentrant model
 18805 ;;
 18806                           
 18807     139E                     _strchr:	
 18808                           ;psect for function _strchr
 18809                           
 18810     139E                     l3329:	
 18811                           ;incstack = 0
 18812                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18813                           
 18814     139E                     l13161:
 18815     139E  0871               	movf	strchr@s,w
 18816     139F  0086               	movwf	6
 18817     13A0  0872               	movf	strchr@s+1,w
 18818     13A1  0087               	movwf	7
 18819     13A2  0801               	movf	1,w
 18820     13A3  0673               	xorwf	strchr@c,w
 18821     13A4  1D03               	skipz
 18822     13A5  2BA7               	goto	u9981
 18823     13A6  2BA8               	goto	u9980
 18824     13A7                     u9981:
 18825     13A7  2BA9               	goto	l13165
 18826     13A8                     u9980:
 18827     13A8                     l13163:
 18828     13A8  2BBB               	goto	l3331
 18829     13A9                     l13165:
 18830     13A9  0872               	movf	strchr@s+1,w
 18831     13AA  00F6               	movwf	??_strchr+1
 18832     13AB  0871               	movf	strchr@s,w
 18833     13AC  00F5               	movwf	??_strchr
 18834     13AD  0AF1               	incf	strchr@s,f
 18835     13AE  1903               	skipnz
 18836     13AF  0AF2               	incf	strchr@s+1,f
 18837     13B0  0875               	movf	??_strchr,w
 18838     13B1  0086               	movwf	6
 18839     13B2  0876               	movf	??_strchr+1,w
 18840     13B3  0087               	movwf	7
 18841     13B4  0801               	movf	1,w
 18842     13B5  1D03               	btfss	3,2
 18843     13B6  2BB8               	goto	u9991
 18844     13B7  2BB9               	goto	u9990
 18845     13B8                     u9991:
 18846     13B8  2B9E               	goto	l3329
 18847     13B9                     u9990:
 18848     13B9                     l13167:
 18849     13B9  01F1               	clrf	?_strchr
 18850     13BA  01F2               	clrf	?_strchr+1
 18851     13BB                     l3331:
 18852     13BB  0008               	return
 18853     13BC                     __end_of_strchr:
 18854                           
 18855                           	psect	text49
 18856     1618                     __ptext49:	
 18857 ;; *************** function _rn487x_PrintMessageStart *****************
 18858 ;; Defined at:
 18859 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18860 ;; Parameters:    Size  Location     Type
 18861 ;;		None
 18862 ;; Auto vars:     Size  Location     Type
 18863 ;;		None
 18864 ;; Return value:  Size  Location     Type
 18865 ;;                  1    wreg      void 
 18866 ;; Registers used:
 18867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18868 ;; Tracked objects:
 18869 ;;		On entry : 0/0
 18870 ;;		On exit  : 0/0
 18871 ;;		Unchanged: 0/0
 18872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18877 ;;Total ram usage:        0 bytes
 18878 ;; Hardware stack levels used: 1
 18879 ;; Hardware stack levels required when called: 5
 18880 ;; This function calls:
 18881 ;;		_EUSART1_Write
 18882 ;;		_EUSART2_Write
 18883 ;; This function is called by:
 18884 ;;		_RN487X_MessageHandler
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888     1618                     _rn487x_PrintMessageStart:	
 18889                           ;psect for function _rn487x_PrintMessageStart
 18890                           
 18891     1618                     l13241:	
 18892                           ;incstack = 0
 18893                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18894                           
 18895                           
 18896                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18897     1618  303C               	movlw	60
 18898     1619  00F1               	movwf	EUSART2_Write@txData
 18899     161A  3002               	movlw	low ((_uart+2)| (0+32768))
 18900     161B  0084               	movwf	4
 18901     161C  3098               	movlw	high ((_uart+2)| (0+32768))
 18902     161D  0085               	movwf	5
 18903     161E  3F01               	moviw [1]fsr0
 18904     161F  008A               	movwf	10
 18905     1620  3F00               	moviw [0]fsr0
 18906     1621  000A               	callw
 18907     1622  3196               	pagesel	$
 18908                           
 18909                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18910     1623  303C               	movlw	60
 18911     1624  00F1               	movwf	EUSART2_Write@txData
 18912     1625  3002               	movlw	low ((_uart+2)| (0+32768))
 18913     1626  0084               	movwf	4
 18914     1627  3098               	movlw	high ((_uart+2)| (0+32768))
 18915     1628  0085               	movwf	5
 18916     1629  3F01               	moviw [1]fsr0
 18917     162A  008A               	movwf	10
 18918     162B  3F00               	moviw [0]fsr0
 18919     162C  000A               	callw
 18920     162D  3196               	pagesel	$
 18921                           
 18922                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18923     162E  303C               	movlw	60
 18924     162F  00F1               	movwf	EUSART2_Write@txData
 18925     1630  3002               	movlw	low ((_uart+2)| (0+32768))
 18926     1631  0084               	movwf	4
 18927     1632  3098               	movlw	high ((_uart+2)| (0+32768))
 18928     1633  0085               	movwf	5
 18929     1634  3F01               	moviw [1]fsr0
 18930     1635  008A               	movwf	10
 18931     1636  3F00               	moviw [0]fsr0
 18932     1637  000A               	callw
 18933     1638  3196               	pagesel	$
 18934                           
 18935                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 18936     1639  3020               	movlw	32
 18937     163A  00F1               	movwf	EUSART2_Write@txData
 18938     163B  3002               	movlw	low ((_uart+2)| (0+32768))
 18939     163C  0084               	movwf	4
 18940     163D  3098               	movlw	high ((_uart+2)| (0+32768))
 18941     163E  0085               	movwf	5
 18942     163F  3F01               	moviw [1]fsr0
 18943     1640  008A               	movwf	10
 18944     1641  3F00               	moviw [0]fsr0
 18945     1642  000A               	callw
 18946     1643  3196               	pagesel	$
 18947     1644                     l1457:
 18948     1644  0008               	return
 18949     1645                     __end_of_rn487x_PrintMessageStart:
 18950                           
 18951                           	psect	text50
 18952     0BAC                     __ptext50:	
 18953 ;; *************** function _rn487x_PrintMessageEnd *****************
 18954 ;; Defined at:
 18955 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;		None
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;		None
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      void 
 18962 ;; Registers used:
 18963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18973 ;;Total ram usage:        0 bytes
 18974 ;; Hardware stack levels used: 1
 18975 ;; Hardware stack levels required when called: 5
 18976 ;; This function calls:
 18977 ;;		_EUSART1_Write
 18978 ;;		_EUSART2_Write
 18979 ;; This function is called by:
 18980 ;;		_RN487X_MessageHandler
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984     0BAC                     _rn487x_PrintMessageEnd:	
 18985                           ;psect for function _rn487x_PrintMessageEnd
 18986                           
 18987     0BAC                     l13243:	
 18988                           ;incstack = 0
 18989                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18990                           
 18991                           
 18992                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 18993     0BAC  3020               	movlw	32
 18994     0BAD  00F1               	movwf	EUSART2_Write@txData
 18995     0BAE  3002               	movlw	low ((_uart+2)| (0+32768))
 18996     0BAF  0084               	movwf	4
 18997     0BB0  3098               	movlw	high ((_uart+2)| (0+32768))
 18998     0BB1  0085               	movwf	5
 18999     0BB2  3F01               	moviw [1]fsr0
 19000     0BB3  008A               	movwf	10
 19001     0BB4  3F00               	moviw [0]fsr0
 19002     0BB5  000A               	callw
 19003     0BB6  318B               	pagesel	$
 19004                           
 19005                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19006     0BB7  303E               	movlw	62
 19007     0BB8  00F1               	movwf	EUSART2_Write@txData
 19008     0BB9  3002               	movlw	low ((_uart+2)| (0+32768))
 19009     0BBA  0084               	movwf	4
 19010     0BBB  3098               	movlw	high ((_uart+2)| (0+32768))
 19011     0BBC  0085               	movwf	5
 19012     0BBD  3F01               	moviw [1]fsr0
 19013     0BBE  008A               	movwf	10
 19014     0BBF  3F00               	moviw [0]fsr0
 19015     0BC0  000A               	callw
 19016     0BC1  318B               	pagesel	$
 19017                           
 19018                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19019     0BC2  303E               	movlw	62
 19020     0BC3  00F1               	movwf	EUSART2_Write@txData
 19021     0BC4  3002               	movlw	low ((_uart+2)| (0+32768))
 19022     0BC5  0084               	movwf	4
 19023     0BC6  3098               	movlw	high ((_uart+2)| (0+32768))
 19024     0BC7  0085               	movwf	5
 19025     0BC8  3F01               	moviw [1]fsr0
 19026     0BC9  008A               	movwf	10
 19027     0BCA  3F00               	moviw [0]fsr0
 19028     0BCB  000A               	callw
 19029     0BCC  318B               	pagesel	$
 19030                           
 19031                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19032     0BCD  303E               	movlw	62
 19033     0BCE  00F1               	movwf	EUSART2_Write@txData
 19034     0BCF  3002               	movlw	low ((_uart+2)| (0+32768))
 19035     0BD0  0084               	movwf	4
 19036     0BD1  3098               	movlw	high ((_uart+2)| (0+32768))
 19037     0BD2  0085               	movwf	5
 19038     0BD3  3F01               	moviw [1]fsr0
 19039     0BD4  008A               	movwf	10
 19040     0BD5  3F00               	moviw [0]fsr0
 19041     0BD6  000A               	callw
 19042     0BD7  318B               	pagesel	$
 19043                           
 19044                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19045     0BD8  3020               	movlw	32
 19046     0BD9  00F1               	movwf	EUSART2_Write@txData
 19047     0BDA  3002               	movlw	low ((_uart+2)| (0+32768))
 19048     0BDB  0084               	movwf	4
 19049     0BDC  3098               	movlw	high ((_uart+2)| (0+32768))
 19050     0BDD  0085               	movwf	5
 19051     0BDE  3F01               	moviw [1]fsr0
 19052     0BDF  008A               	movwf	10
 19053     0BE0  3F00               	moviw [0]fsr0
 19054     0BE1  000A               	callw
 19055     0BE2  318B               	pagesel	$
 19056                           
 19057                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19058     0BE3  300D               	movlw	13
 19059     0BE4  00F1               	movwf	EUSART2_Write@txData
 19060     0BE5  3002               	movlw	low ((_uart+2)| (0+32768))
 19061     0BE6  0084               	movwf	4
 19062     0BE7  3098               	movlw	high ((_uart+2)| (0+32768))
 19063     0BE8  0085               	movwf	5
 19064     0BE9  3F01               	moviw [1]fsr0
 19065     0BEA  008A               	movwf	10
 19066     0BEB  3F00               	moviw [0]fsr0
 19067     0BEC  000A               	callw
 19068     0BED  318B               	pagesel	$
 19069                           
 19070                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19071     0BEE  300A               	movlw	10
 19072     0BEF  00F1               	movwf	EUSART2_Write@txData
 19073     0BF0  3002               	movlw	low ((_uart+2)| (0+32768))
 19074     0BF1  0084               	movwf	4
 19075     0BF2  3098               	movlw	high ((_uart+2)| (0+32768))
 19076     0BF3  0085               	movwf	5
 19077     0BF4  3F01               	moviw [1]fsr0
 19078     0BF5  008A               	movwf	10
 19079     0BF6  3F00               	moviw [0]fsr0
 19080     0BF7  000A               	callw
 19081     0BF8  318B               	pagesel	$
 19082     0BF9                     l1460:
 19083     0BF9  0008               	return
 19084     0BFA                     __end_of_rn487x_PrintMessageEnd:
 19085                           
 19086                           	psect	text51
 19087     1795                     __ptext51:	
 19088 ;; *************** function _rn487x_PrintMessage *****************
 19089 ;; Defined at:
 19090 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19091 ;; Parameters:    Size  Location     Type
 19092 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19093 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 19094 ;; Auto vars:     Size  Location     Type
 19095 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19096 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19097 ;; Return value:  Size  Location     Type
 19098 ;;                  1    wreg      void 
 19099 ;; Registers used:
 19100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19101 ;; Tracked objects:
 19102 ;;		On entry : 0/0
 19103 ;;		On exit  : 0/0
 19104 ;;		Unchanged: 0/0
 19105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19107 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19109 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19110 ;;Total ram usage:       37 bytes
 19111 ;; Hardware stack levels used: 1
 19112 ;; Hardware stack levels required when called: 5
 19113 ;; This function calls:
 19114 ;;		_EUSART1_Write
 19115 ;;		_EUSART2_Write
 19116 ;;		_strcpy
 19117 ;;		_strlen
 19118 ;; This function is called by:
 19119 ;;		_RN487X_MessageHandler
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123     1795                     _rn487x_PrintMessage:	
 19124                           ;psect for function _rn487x_PrintMessage
 19125                           
 19126     1795                     l13253:	
 19127                           ;incstack = 0
 19128                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19129                           
 19130                           
 19131                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19132     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19133     1796  00F2               	movwf	strcpy@src+1
 19134     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19135     1798  00F1               	movwf	strcpy@src
 19136     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19137     179A  3192  22DE  3197   	fcall	_strcpy
 19138     179D                     l13255:
 19139                           
 19140                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19141     179D  0140               	movlb	0	; select bank0
 19142     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19143     179F  2FB4               	goto	l13261
 19144     17A0                     l13257:
 19145                           
 19146                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19147     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19148     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19149     17A2  0086               	movwf	6
 19150     17A3  0187               	clrf	7
 19151     17A4  0801               	movf	1,w
 19152     17A5  00F1               	movwf	EUSART2_Write@txData
 19153     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19154     17A7  0084               	movwf	4
 19155     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19156     17A9  0085               	movwf	5
 19157     17AA  3F01               	moviw [1]fsr0
 19158     17AB  008A               	movwf	10
 19159     17AC  3F00               	moviw [0]fsr0
 19160     17AD  000A               	callw
 19161     17AE  3197               	pagesel	$
 19162     17AF                     l13259:
 19163                           
 19164                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19165     17AF  3001               	movlw	1
 19166     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19167     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19168     17B2  0140               	movlb	0	; select bank0
 19169     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19170     17B4                     l13261:
 19171     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19172     17B5  00F2               	movwf	strlen@s+1
 19173     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19174     17B7  00F1               	movwf	strlen@s
 19175     17B8  3192  2292  3197   	fcall	_strlen
 19176     17BB  0140               	movlb	0	; select bank0
 19177     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19178     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19179     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19180     17BF  0872               	movf	?_strlen+1,w
 19181     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19182     17C1  1D03               	skipz
 19183     17C2  2FC5               	goto	u10045
 19184     17C3  0871               	movf	?_strlen,w
 19185     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19186     17C5                     u10045:
 19187     17C5  1C03               	skipc
 19188     17C6  2FC8               	goto	u10041
 19189     17C7  2FC9               	goto	u10040
 19190     17C8                     u10041:
 19191     17C8  2FA0               	goto	l13257
 19192     17C9                     u10040:
 19193     17C9                     l1473:
 19194     17C9  0008               	return
 19195     17CA                     __end_of_rn487x_PrintMessage:
 19196                           
 19197                           	psect	text52
 19198     12DE                     __ptext52:	
 19199 ;; *************** function _strcpy *****************
 19200 ;; Defined at:
 19201 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  dest            1    wreg     PTR unsigned char 
 19204 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19205 ;;  src             2    1[COMMON] PTR const unsigned char 
 19206 ;;		 -> statusBuffer@main$F4242(80), statusBuffer(80), NULL(0), 
 19207 ;; Auto vars:     Size  Location     Type
 19208 ;;  dest            1    6[COMMON] PTR unsigned char 
 19209 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19210 ;;  d               1    5[COMMON] PTR unsigned char 
 19211 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19212 ;; Return value:  Size  Location     Type
 19213 ;;                  1    wreg      PTR unsigned char 
 19214 ;; Registers used:
 19215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19216 ;; Tracked objects:
 19217 ;;		On entry : 0/0
 19218 ;;		On exit  : 0/0
 19219 ;;		Unchanged: 0/0
 19220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19225 ;;Total ram usage:        6 bytes
 19226 ;; Hardware stack levels used: 1
 19227 ;; Hardware stack levels required when called: 4
 19228 ;; This function calls:
 19229 ;;		Nothing
 19230 ;; This function is called by:
 19231 ;;		_rn487x_PrintMessage
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235     12DE                     _strcpy:	
 19236                           ;psect for function _strcpy
 19237                           
 19238                           
 19239                           ;incstack = 0
 19240                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19241                           ;strcpy@dest stored from wreg
 19242     12DE  00F6               	movwf	strcpy@dest
 19243     12DF                     l13075:
 19244     12DF  0876               	movf	strcpy@dest,w
 19245     12E0  00F5               	movwf	strcpy@d
 19246     12E1                     l13077:
 19247     12E1  0875               	movf	strcpy@d,w
 19248     12E2  0086               	movwf	6
 19249     12E3  0187               	clrf	7
 19250     12E4  0AF5               	incf	strcpy@d,f
 19251     12E5  0872               	movf	strcpy@src+1,w
 19252     12E6  00F4               	movwf	??_strcpy+1
 19253     12E7  0871               	movf	strcpy@src,w
 19254     12E8  00F3               	movwf	??_strcpy
 19255     12E9  0AF1               	incf	strcpy@src,f
 19256     12EA  1903               	skipnz
 19257     12EB  0AF2               	incf	strcpy@src+1,f
 19258     12EC  0873               	movf	??_strcpy,w
 19259     12ED  0084               	movwf	4
 19260     12EE  0874               	movf	??_strcpy+1,w
 19261     12EF  0085               	movwf	5
 19262     12F0  0800               	movf	0,w
 19263     12F1  3FC0               	movwi [0]fsr1
 19264     12F2  0889               	movf	9,f
 19265     12F3  1D03               	btfss	3,2
 19266     12F4  2AF6               	goto	u9841
 19267     12F5  2AF7               	goto	u9840
 19268     12F6                     u9841:
 19269     12F6  2AE1               	goto	l13077
 19270     12F7                     u9840:
 19271     12F7                     l3304:
 19272     12F7  0008               	return
 19273     12F8                     __end_of_strcpy:
 19274                           
 19275                           	psect	text53
 19276     1443                     __ptext53:	
 19277 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19278 ;; Defined at:
 19279 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19280 ;; Parameters:    Size  Location     Type
 19281 ;;  messageType     1    wreg     enum E12962
 19282 ;; Auto vars:     Size  Location     Type
 19283 ;;  messageType     1    3[COMMON] enum E12962
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  1    wreg      void 
 19286 ;; Registers used:
 19287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19297 ;;Total ram usage:        1 bytes
 19298 ;; Hardware stack levels used: 1
 19299 ;; Hardware stack levels required when called: 5
 19300 ;; This function calls:
 19301 ;;		_EUSART1_Write
 19302 ;;		_EUSART2_Write
 19303 ;; This function is called by:
 19304 ;;		_RN487X_MessageHandler
 19305 ;; This function uses a non-reentrant model
 19306 ;;
 19307                           
 19308     1443                     _rn487x_PrintIndicatorCharacters:	
 19309                           ;psect for function _rn487x_PrintIndicatorCharacters
 19310                           
 19311                           
 19312                           ;incstack = 0
 19313                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19314                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19315     1443  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19316     1444                     l13245:
 19317                           
 19318                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19319     1444  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19320     1445  1D03               	btfss	3,2
 19321     1446  2C48               	goto	u10021
 19322     1447  2C49               	goto	u10020
 19323     1448                     u10021:
 19324     1448  2C55               	goto	l13249
 19325     1449                     u10020:
 19326     1449                     l13247:
 19327                           
 19328                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19329     1449  305B               	movlw	91
 19330     144A  00F1               	movwf	EUSART2_Write@txData
 19331     144B  3002               	movlw	low ((_uart+2)| (0+32768))
 19332     144C  0084               	movwf	4
 19333     144D  3098               	movlw	high ((_uart+2)| (0+32768))
 19334     144E  0085               	movwf	5
 19335     144F  3F01               	moviw [1]fsr0
 19336     1450  008A               	movwf	10
 19337     1451  3F00               	moviw [0]fsr0
 19338     1452  000A               	callw
 19339     1453  3194               	pagesel	$
 19340                           
 19341                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19342     1454  2C65               	goto	l1467
 19343     1455                     l13249:
 19344     1455  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19345     1456  1D03               	btfss	3,2
 19346     1457  2C59               	goto	u10031
 19347     1458  2C5A               	goto	u10030
 19348     1459                     u10031:
 19349     1459  2C65               	goto	l1467
 19350     145A                     u10030:
 19351     145A                     l13251:
 19352                           
 19353                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19354     145A  305D               	movlw	93
 19355     145B  00F1               	movwf	EUSART2_Write@txData
 19356     145C  3002               	movlw	low ((_uart+2)| (0+32768))
 19357     145D  0084               	movwf	4
 19358     145E  3098               	movlw	high ((_uart+2)| (0+32768))
 19359     145F  0085               	movwf	5
 19360     1460  3F01               	moviw [1]fsr0
 19361     1461  008A               	movwf	10
 19362     1462  3F00               	moviw [0]fsr0
 19363     1463  000A               	callw
 19364     1464  3194               	pagesel	$
 19365     1465                     l1467:	
 19366                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19367                           
 19368     1465  0008               	return
 19369     1466                     __end_of_rn487x_PrintIndicatorCharacters:
 19370                           
 19371                           	psect	text54
 19372     1EAC                     __ptext54:	
 19373 ;; *************** function _RN487X_IsConnected *****************
 19374 ;; Defined at:
 19375 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;		None
 19378 ;; Auto vars:     Size  Location     Type
 19379 ;;		None
 19380 ;; Return value:  Size  Location     Type
 19381 ;;                  1    wreg      _Bool 
 19382 ;; Registers used:
 19383 ;;		wreg
 19384 ;; Tracked objects:
 19385 ;;		On entry : 0/0
 19386 ;;		On exit  : 0/0
 19387 ;;		Unchanged: 0/0
 19388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19393 ;;Total ram usage:        0 bytes
 19394 ;; Hardware stack levels used: 1
 19395 ;; Hardware stack levels required when called: 4
 19396 ;; This function calls:
 19397 ;;		Nothing
 19398 ;; This function is called by:
 19399 ;;		_main
 19400 ;;		_RN487X_Example_TransparentUart
 19401 ;; This function uses a non-reentrant model
 19402 ;;
 19403                           
 19404     1EAC                     _RN487X_IsConnected:	
 19405                           ;psect for function _RN487X_IsConnected
 19406                           
 19407     1EAC                     l14535:	
 19408                           ;incstack = 0
 19409                           ; Regs used in _RN487X_IsConnected: [wreg]
 19410                           
 19411                           
 19412                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19413     1EAC  0140               	movlb	0	; select bank0
 19414     1EAD  0868               	movf	_connected,w
 19415     1EAE                     l1408:
 19416     1EAE  0008               	return
 19417     1EAF                     __end_of_RN487X_IsConnected:
 19418                           
 19419                           	psect	text55
 19420     07A1                     __ptext55:	
 19421 ;; *************** function _RN487X_Init *****************
 19422 ;; Defined at:
 19423 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19424 ;; Parameters:    Size  Location     Type
 19425 ;;		None
 19426 ;; Auto vars:     Size  Location     Type
 19427 ;;		None
 19428 ;; Return value:  Size  Location     Type
 19429 ;;                  1    wreg      _Bool 
 19430 ;; Registers used:
 19431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19432 ;; Tracked objects:
 19433 ;;		On entry : 0/0
 19434 ;;		On exit  : 0/0
 19435 ;;		Unchanged: 0/0
 19436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19441 ;;Total ram usage:        0 bytes
 19442 ;; Hardware stack levels used: 1
 19443 ;; Hardware stack levels required when called: 6
 19444 ;; This function calls:
 19445 ;;		_RN487X_Delay
 19446 ;;		_RN487X_IndicateRx
 19447 ;;		_RN487X_Read@rn487x_interface$F1843
 19448 ;;		_RN487X_Reset
 19449 ;;		_RN487X_SetSystemMode
 19450 ;;		_RN487X_is_rx_ready
 19451 ;; This function is called by:
 19452 ;;		_main
 19453 ;; This function uses a non-reentrant model
 19454 ;;
 19455                           
 19456     07A1                     _RN487X_Init:	
 19457                           ;psect for function _RN487X_Init
 19458                           
 19459     07A1                     l14549:	
 19460                           ;incstack = 0
 19461                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19462                           
 19463                           
 19464                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19465     07A1  01F1               	clrf	RN487X_SetSystemMode@mode
 19466     07A2  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19467     07A3  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19468     07A4  0084               	movwf	4
 19469     07A5  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19470     07A6  0085               	movwf	5
 19471     07A7  3F01               	moviw [1]fsr0
 19472     07A8  008A               	movwf	10
 19473     07A9  3F00               	moviw [0]fsr0
 19474     07AA  000A               	callw
 19475     07AB  3187               	pagesel	$
 19476                           
 19477                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19478     07AC  01F1               	clrf	RN487X_Reset@value
 19479     07AD  0AF1               	incf	RN487X_Reset@value,f
 19480     07AE  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19481     07AF  0084               	movwf	4
 19482     07B0  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19483     07B1  0085               	movwf	5
 19484     07B2  3F01               	moviw [1]fsr0
 19485     07B3  008A               	movwf	10
 19486     07B4  3F00               	moviw [0]fsr0
 19487     07B5  000A               	callw
 19488     07B6  3187               	pagesel	$
 19489                           
 19490                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19491     07B7  3001               	movlw	1
 19492     07B8  00F4               	movwf	RN487X_Delay@delayCount
 19493     07B9  3000               	movlw	0
 19494     07BA  00F5               	movwf	RN487X_Delay@delayCount+1
 19495     07BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19496     07BC  0084               	movwf	4
 19497     07BD  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19498     07BE  0085               	movwf	5
 19499     07BF  3F01               	moviw [1]fsr0
 19500     07C0  008A               	movwf	10
 19501     07C1  3F00               	moviw [0]fsr0
 19502     07C2  000A               	callw
 19503     07C3  3187               	pagesel	$
 19504                           
 19505                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19506     07C4  01F1               	clrf	RN487X_Reset@value
 19507     07C5  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19508     07C6  0084               	movwf	4
 19509     07C7  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19510     07C8  0085               	movwf	5
 19511     07C9  3F01               	moviw [1]fsr0
 19512     07CA  008A               	movwf	10
 19513     07CB  3F00               	moviw [0]fsr0
 19514     07CC  000A               	callw
 19515     07CD  3187               	pagesel	$
 19516                           
 19517                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19518     07CE  01F1               	clrf	RN487X_IndicateRx@value
 19519     07CF  0AF1               	incf	RN487X_IndicateRx@value,f
 19520     07D0  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19521     07D1  0084               	movwf	4
 19522     07D2  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19523     07D3  0085               	movwf	5
 19524     07D4  3F01               	moviw [1]fsr0
 19525     07D5  008A               	movwf	10
 19526     07D6  3F00               	moviw [0]fsr0
 19527     07D7  000A               	callw
 19528     07D8  3187               	pagesel	$
 19529                           
 19530                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19531     07D9  30C8               	movlw	200
 19532     07DA  00F4               	movwf	RN487X_Delay@delayCount
 19533     07DB  3000               	movlw	0
 19534     07DC  00F5               	movwf	RN487X_Delay@delayCount+1
 19535     07DD  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19536     07DE  0084               	movwf	4
 19537     07DF  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19538     07E0  0085               	movwf	5
 19539     07E1  3F01               	moviw [1]fsr0
 19540     07E2  008A               	movwf	10
 19541     07E3  3F00               	moviw [0]fsr0
 19542     07E4  000A               	callw
 19543     07E5  3187               	pagesel	$
 19544                           
 19545                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19546     07E6  2FF0               	goto	l14553
 19547     07E7                     l14551:
 19548                           
 19549                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19550     07E7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19551     07E8  0084               	movwf	4
 19552     07E9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19553     07EA  0085               	movwf	5
 19554     07EB  3F01               	moviw [1]fsr0
 19555     07EC  008A               	movwf	10
 19556     07ED  3F00               	moviw [0]fsr0
 19557     07EE  000A               	callw
 19558     07EF  3187               	pagesel	$
 19559     07F0                     l14553:
 19560                           
 19561                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19562     07F0  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19563     07F1  0084               	movwf	4
 19564     07F2  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19565     07F3  0085               	movwf	5
 19566     07F4  3F01               	moviw [1]fsr0
 19567     07F5  008A               	movwf	10
 19568     07F6  3F00               	moviw [0]fsr0
 19569     07F7  000A               	callw
 19570     07F8  3187               	pagesel	$
 19571     07F9  3A00               	xorlw	0
 19572     07FA  1D03               	skipz
 19573     07FB  2FFD               	goto	u11681
 19574     07FC  2FFE               	goto	u11680
 19575     07FD                     u11681:
 19576     07FD  2FE7               	goto	l14551
 19577     07FE                     u11680:
 19578     07FE                     l1504:
 19579     07FE  0008               	return
 19580     07FF                     __end_of_RN487X_Init:
 19581                           
 19582                           	psect	text56
 19583     1FD7                     __ptext56:	
 19584 ;; *************** function _RN487X_is_rx_ready *****************
 19585 ;; Defined at:
 19586 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19587 ;; Parameters:    Size  Location     Type
 19588 ;;		None
 19589 ;; Auto vars:     Size  Location     Type
 19590 ;;		None
 19591 ;; Return value:  Size  Location     Type
 19592 ;;                  1    wreg      _Bool 
 19593 ;; Registers used:
 19594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19595 ;; Tracked objects:
 19596 ;;		On entry : 0/0
 19597 ;;		On exit  : 0/0
 19598 ;;		Unchanged: 0/0
 19599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19604 ;;Total ram usage:        0 bytes
 19605 ;; Hardware stack levels used: 1
 19606 ;; Hardware stack levels required when called: 5
 19607 ;; This function calls:
 19608 ;;		_EUSART1_is_rx_ready
 19609 ;;		_EUSART2_is_rx_ready
 19610 ;; This function is called by:
 19611 ;;		_RN487X_DataReady
 19612 ;;		_RN487X_Init
 19613 ;; This function uses a non-reentrant model
 19614 ;;
 19615                           
 19616     1FD7                     _RN487X_is_rx_ready:	
 19617                           ;psect for function _RN487X_is_rx_ready
 19618                           
 19619     1FD7                     l13475:	
 19620                           ;incstack = 0
 19621                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19622                           
 19623                           
 19624                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19625     1FD7  301A               	movlw	low ((_uart+26)| (0+32768))
 19626     1FD8  0084               	movwf	4
 19627     1FD9  3098               	movlw	high ((_uart+26)| (0+32768))
 19628     1FDA  0085               	movwf	5
 19629     1FDB  3F01               	moviw [1]fsr0
 19630     1FDC  008A               	movwf	10
 19631     1FDD  3F00               	moviw [0]fsr0
 19632     1FDE  000A               	callw
 19633     1FDF  319F               	pagesel	$
 19634     1FE0                     l1420:
 19635     1FE0  0008               	return
 19636     1FE1                     __end_of_RN487X_is_rx_ready:
 19637                           
 19638                           	psect	text57
 19639     1FB1                     __ptext57:	
 19640 ;; *************** function _EUSART1_is_rx_ready *****************
 19641 ;; Defined at:
 19642 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;		None
 19645 ;; Auto vars:     Size  Location     Type
 19646 ;;		None
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  1    wreg      _Bool 
 19649 ;; Registers used:
 19650 ;;		wreg, status,2, status,0
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19660 ;;Total ram usage:        0 bytes
 19661 ;; Hardware stack levels used: 1
 19662 ;; Hardware stack levels required when called: 4
 19663 ;; This function calls:
 19664 ;;		Nothing
 19665 ;; This function is called by:
 19666 ;;		_RN487X_is_rx_ready
 19667 ;;		_RN487X_Example_TransparentUart
 19668 ;;		_main
 19669 ;; This function uses a non-reentrant model
 19670 ;;
 19671                           
 19672     1FB1                     _EUSART1_is_rx_ready:	
 19673                           ;psect for function _EUSART1_is_rx_ready
 19674                           
 19675     1FB1                     l13383:	
 19676                           ;incstack = 0
 19677                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19678                           
 19679                           
 19680                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19681     1FB1  0140               	movlb	0	; select bank0
 19682     1FB2  0858               	movf	_eusart1RxCount,w	;volatile
 19683     1FB3  1D03               	btfss	3,2
 19684     1FB4  2FB6               	goto	u10231
 19685     1FB5  2FB8               	goto	u10230
 19686     1FB6                     u10231:
 19687     1FB6  3001               	movlw	1
 19688     1FB7  2FB9               	goto	u10240
 19689     1FB8                     u10230:
 19690     1FB8  3000               	movlw	0
 19691     1FB9                     u10240:
 19692     1FB9                     l1826:
 19693     1FB9  0008               	return
 19694     1FBA                     __end_of_EUSART1_is_rx_ready:
 19695                           
 19696                           	psect	text58
 19697     1FA8                     __ptext58:	
 19698 ;; *************** function _EUSART2_is_rx_ready *****************
 19699 ;; Defined at:
 19700 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19701 ;; Parameters:    Size  Location     Type
 19702 ;;		None
 19703 ;; Auto vars:     Size  Location     Type
 19704 ;;		None
 19705 ;; Return value:  Size  Location     Type
 19706 ;;                  1    wreg      _Bool 
 19707 ;; Registers used:
 19708 ;;		wreg, status,2, status,0
 19709 ;; Tracked objects:
 19710 ;;		On entry : 0/0
 19711 ;;		On exit  : 0/0
 19712 ;;		Unchanged: 0/0
 19713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;Total ram usage:        0 bytes
 19719 ;; Hardware stack levels used: 1
 19720 ;; Hardware stack levels required when called: 4
 19721 ;; This function calls:
 19722 ;;		Nothing
 19723 ;; This function is called by:
 19724 ;;		_RN487X_is_rx_ready
 19725 ;;		_RN487X_Example_TransparentUart
 19726 ;;		_main
 19727 ;; This function uses a non-reentrant model
 19728 ;;
 19729                           
 19730     1FA8                     _EUSART2_is_rx_ready:	
 19731                           ;psect for function _EUSART2_is_rx_ready
 19732                           
 19733     1FA8                     l13379:	
 19734                           ;incstack = 0
 19735                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19736                           
 19737                           
 19738                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19739     1FA8  0140               	movlb	0	; select bank0
 19740     1FA9  085F               	movf	_eusart2RxCount,w	;volatile
 19741     1FAA  1D03               	btfss	3,2
 19742     1FAB  2FAD               	goto	u10211
 19743     1FAC  2FAF               	goto	u10210
 19744     1FAD                     u10211:
 19745     1FAD  3001               	movlw	1
 19746     1FAE  2FB0               	goto	u10220
 19747     1FAF                     u10210:
 19748     1FAF  3000               	movlw	0
 19749     1FB0                     u10220:
 19750     1FB0                     l1682:
 19751     1FB0  0008               	return
 19752     1FB1                     __end_of_EUSART2_is_rx_ready:
 19753                           
 19754                           	psect	text59
 19755     1048                     __ptext59:	
 19756 ;; *************** function _RN487X_SetSystemMode *****************
 19757 ;; Defined at:
 19758 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19759 ;; Parameters:    Size  Location     Type
 19760 ;;  mode            1    1[COMMON] enum E204
 19761 ;; Auto vars:     Size  Location     Type
 19762 ;;		None
 19763 ;; Return value:  Size  Location     Type
 19764 ;;                  1    wreg      void 
 19765 ;; Registers used:
 19766 ;;		wreg, status,2, status,0
 19767 ;; Tracked objects:
 19768 ;;		On entry : 0/0
 19769 ;;		On exit  : 0/0
 19770 ;;		Unchanged: 0/0
 19771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19776 ;;Total ram usage:        1 bytes
 19777 ;; Hardware stack levels used: 1
 19778 ;; Hardware stack levels required when called: 4
 19779 ;; This function calls:
 19780 ;;		Nothing
 19781 ;; This function is called by:
 19782 ;;		_RN487X_Init
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786     1048                     _RN487X_SetSystemMode:	
 19787                           ;psect for function _RN487X_SetSystemMode
 19788                           
 19789     1048                     l1444:	
 19790                           ;incstack = 0
 19791                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19792                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19793                           
 19794     1048  0140               	movlb	0	; select bank0
 19795     1049  1392               	bcf	18,7	;volatile
 19796     104A                     l14131:
 19797                           
 19798                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19799     104A  0371               	decf	RN487X_SetSystemMode@mode,w
 19800     104B  1D03               	btfss	3,2
 19801     104C  284E               	goto	u11421
 19802     104D  284F               	goto	u11420
 19803     104E                     u11421:
 19804     104E  2851               	goto	l1450
 19805     104F                     u11420:
 19806     104F                     l1447:	
 19807                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19808                           
 19809     104F  1798               	bsf	24,7	;volatile
 19810     1050  2852               	goto	l1452
 19811     1051                     l1450:	
 19812                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19813                           
 19814     1051  1398               	bcf	24,7	;volatile
 19815     1052                     l1452:	
 19816                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19817                           
 19818     1052  1792               	bsf	18,7	;volatile
 19819     1053                     l1454:
 19820     1053  0008               	return
 19821     1054                     __end_of_RN487X_SetSystemMode:
 19822                           
 19823                           	psect	text60
 19824     101A                     __ptext60:	
 19825 ;; *************** function _RN487X_Reset *****************
 19826 ;; Defined at:
 19827 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  value           1    1[COMMON] _Bool 
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1    wreg      void 
 19834 ;; Registers used:
 19835 ;;		wreg, status,2, status,0
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19845 ;;Total ram usage:        1 bytes
 19846 ;; Hardware stack levels used: 1
 19847 ;; Hardware stack levels required when called: 4
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_RN487X_Init
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           
 19855     101A                     _RN487X_Reset:	
 19856                           ;psect for function _RN487X_Reset
 19857                           
 19858     101A                     l14127:	
 19859                           ;incstack = 0
 19860                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19861                           
 19862                           
 19863                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19864     101A  0371               	decf	RN487X_Reset@value,w
 19865     101B  1D03               	btfss	3,2
 19866     101C  281E               	goto	u11401
 19867     101D  281F               	goto	u11400
 19868     101E                     u11401:
 19869     101E  2822               	goto	l1430
 19870     101F                     u11400:
 19871     101F                     l1427:	
 19872                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19873                           
 19874     101F  0140               	movlb	0	; select bank0
 19875     1020  1018               	bcf	24,0	;volatile
 19876     1021  2824               	goto	l1432
 19877     1022                     l1430:	
 19878                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19879                           
 19880     1022  0140               	movlb	0	; select bank0
 19881     1023  1418               	bsf	24,0	;volatile
 19882     1024                     l1432:
 19883     1024  0008               	return
 19884     1025                     __end_of_RN487X_Reset:
 19885                           
 19886                           	psect	text61
 19887     100F                     __ptext61:	
 19888 ;; *************** function _RN487X_IndicateRx *****************
 19889 ;; Defined at:
 19890 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  value           1    1[COMMON] _Bool 
 19893 ;; Auto vars:     Size  Location     Type
 19894 ;;		None
 19895 ;; Return value:  Size  Location     Type
 19896 ;;                  1    wreg      void 
 19897 ;; Registers used:
 19898 ;;		wreg, status,2, status,0
 19899 ;; Tracked objects:
 19900 ;;		On entry : 0/0
 19901 ;;		On exit  : 0/0
 19902 ;;		Unchanged: 0/0
 19903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19908 ;;Total ram usage:        1 bytes
 19909 ;; Hardware stack levels used: 1
 19910 ;; Hardware stack levels required when called: 4
 19911 ;; This function calls:
 19912 ;;		Nothing
 19913 ;; This function is called by:
 19914 ;;		_RN487X_Init
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918     100F                     _RN487X_IndicateRx:	
 19919                           ;psect for function _RN487X_IndicateRx
 19920                           
 19921     100F                     l14129:	
 19922                           ;incstack = 0
 19923                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19924                           
 19925                           
 19926                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 19927     100F  0371               	decf	RN487X_IndicateRx@value,w
 19928     1010  1D03               	btfss	3,2
 19929     1011  2813               	goto	u11411
 19930     1012  2814               	goto	u11410
 19931     1013                     u11411:
 19932     1013  2817               	goto	l1439
 19933     1014                     u11410:
 19934     1014                     l1436:	
 19935                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 19936                           
 19937     1014  0140               	movlb	0	; select bank0
 19938     1015  131A               	bcf	26,6	;volatile
 19939     1016  2819               	goto	l1441
 19940     1017                     l1439:	
 19941                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 19942                           
 19943     1017  0140               	movlb	0	; select bank0
 19944     1018  171A               	bsf	26,6	;volatile
 19945     1019                     l1441:
 19946     1019  0008               	return
 19947     101A                     __end_of_RN487X_IndicateRx:
 19948                           
 19949                           	psect	text62
 19950     1208                     __ptext62:	
 19951 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 19952 ;; Defined at:
 19953 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;		None
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;  payload         5   21[BANK0 ] unsigned char [5]
 19958 ;;  temperature     2   26[BANK0 ] short 
 19959 ;;  read            1    0        unsigned char 
 19960 ;; Return value:  Size  Location     Type
 19961 ;;                  1    wreg      void 
 19962 ;; Registers used:
 19963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19964 ;; Tracked objects:
 19965 ;;		On entry : 0/0
 19966 ;;		On exit  : 0/0
 19967 ;;		Unchanged: 0/0
 19968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19970 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19972 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19973 ;;Total ram usage:        7 bytes
 19974 ;; Hardware stack levels used: 1
 19975 ;; Hardware stack levels required when called: 15
 19976 ;; This function calls:
 19977 ;;		_LIGHTBLUE_SendPacket
 19978 ;;		_LIGHTBLUE_SplitWord
 19979 ;;		_TMAG5273_GetTemperatureValue
 19980 ;; This function is called by:
 19981 ;;		_main
 19982 ;; This function uses a non-reentrant model
 19983 ;;
 19984                           
 19985     1208                     _LIGHTBLUE_TemperatureSensor:	
 19986                           ;psect for function _LIGHTBLUE_TemperatureSensor
 19987                           
 19988     1208                     l14293:	
 19989                           ;incstack = 0
 19990                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19991                           
 19992                           
 19993                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     uint8_t read;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 316:     *payload = '\0';
 19994     1208  0140               	movlb	0	; select bank0
 19995     1209  01B5               	clrf	LIGHTBLUE_TemperatureSensor@payload
 19996     120A                     l14295:
 19997                           
 19998                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 320:     TMAG5273_GetTemperatureVa
      +                          lue(&temperature);
 19999     120A  303A               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 20000     120B  3190  207A  3192   	fcall	_TMAG5273_GetTemperatureValue
 20001     120E                     l14297:
 20002                           
 20003                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20004     120E  0140               	movlb	0	; select bank0
 20005     120F  083B               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20006     1210  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20007     1211  083A               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20008     1212  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20009     1213  3035               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20010     1214  3190  2087  3192   	fcall	_LIGHTBLUE_SplitWord
 20011     1217                     l14299:
 20012                           
 20013                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 325:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20014     1217  3035               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20015     1218  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20016     1219  3054               	movlw	84
 20017     121A  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20018     121D                     l124:
 20019     121D  0008               	return
 20020     121E                     __end_of_LIGHTBLUE_TemperatureSensor:
 20021                           
 20022                           	psect	text63
 20023     107A                     __ptext63:	
 20024 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20025 ;; Defined at:
 20026 ;;		line 2516 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20027 ;; Parameters:    Size  Location     Type
 20028 ;;  temperature     1    wreg     PTR short 
 20029 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;  temperature     1   11[COMMON] PTR short 
 20032 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20033 ;; Return value:  Size  Location     Type
 20034 ;;                  1    wreg      void 
 20035 ;; Registers used:
 20036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20037 ;; Tracked objects:
 20038 ;;		On entry : 0/0
 20039 ;;		On exit  : 0/0
 20040 ;;		Unchanged: 0/0
 20041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20046 ;;Total ram usage:        1 bytes
 20047 ;; Hardware stack levels used: 1
 20048 ;; Hardware stack levels required when called: 14
 20049 ;; This function calls:
 20050 ;;		_TMAG5273_CalcTemperature
 20051 ;; This function is called by:
 20052 ;;		_LIGHTBLUE_TemperatureSensor
 20053 ;; This function uses a non-reentrant model
 20054 ;;
 20055                           
 20056     107A                     _TMAG5273_GetTemperatureValue:	
 20057                           ;psect for function _TMAG5273_GetTemperatureValue
 20058                           
 20059                           
 20060                           ;incstack = 0
 20061                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20062                           ;TMAG5273_GetTemperatureValue@temperature stored from wreg
 20063     107A  00FB               	movwf	TMAG5273_GetTemperatureValue@temperature
 20064     107B                     l13561:
 20065                           
 20066                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:     *temperature
      +                           = TMAG5273_CalcTemperature();
 20067     107B  3193  2381  3190   	fcall	_TMAG5273_CalcTemperature
 20068     107E  087B               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20069     107F  0086               	movwf	6
 20070     1080  0187               	clrf	7
 20071     1081  0140               	movlb	0	; select bank0
 20072     1082  082D               	movf	?_TMAG5273_CalcTemperature,w
 20073     1083  3FC0               	movwi [0]fsr1
 20074     1084  082E               	movf	?_TMAG5273_CalcTemperature+1,w
 20075     1085  3FC1               	movwi [1]fsr1
 20076     1086                     l1213:
 20077     1086  0008               	return
 20078     1087                     __end_of_TMAG5273_GetTemperatureValue:
 20079                           
 20080                           	psect	text64
 20081     1381                     __ptext64:	
 20082 ;; *************** function _TMAG5273_CalcTemperature *****************
 20083 ;; Defined at:
 20084 ;;		line 2520 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;		None
 20087 ;; Auto vars:     Size  Location     Type
 20088 ;;  temperatureD    2   19[BANK0 ] short 
 20089 ;;  lowerByte       1   18[BANK0 ] unsigned char 
 20090 ;;  upperByte       1    0        unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  2   13[BANK0 ] short 
 20093 ;; Registers used:
 20094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20101 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20102 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;Total ram usage:        8 bytes
 20105 ;; Hardware stack levels used: 1
 20106 ;; Hardware stack levels required when called: 13
 20107 ;; This function calls:
 20108 ;;		_i2c_read2ByteRegister
 20109 ;; This function is called by:
 20110 ;;		_TMAG5273_GetTemperatureValue
 20111 ;; This function uses a non-reentrant model
 20112 ;;
 20113                           
 20114     1381                     _TMAG5273_CalcTemperature:	
 20115                           ;psect for function _TMAG5273_CalcTemperature
 20116                           
 20117     1381                     l13463:	
 20118                           ;incstack = 0
 20119                           ; Regs used in _TMAG5273_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20120                           
 20121                           
 20122                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2521:     int16_t temp
      +                          eratureData;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:     
      +                          uint8_t upperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2523
      +                          :     uint8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c
      +                          : 2525:     temperatureData = i2c_read2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 20123     1381  3010               	movlw	16
 20124     1382  0140               	movlb	0	; select bank0
 20125     1383  00A4               	movwf	i2c_read2ByteRegister@reg
 20126     1384  3022               	movlw	34
 20127     1385  318A  223E  3193   	fcall	_i2c_read2ByteRegister
 20128     1388  0140               	movlb	0	; select bank0
 20129     1389  0825               	movf	?_i2c_read2ByteRegister+1,w
 20130     138A  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20131     138B  0824               	movf	?_i2c_read2ByteRegister,w
 20132     138C  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20133     138D                     l13465:
 20134     138D                     l13467:
 20135                           
 20136                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2527:     lowerByte = 
      +                          (uint8_t) temperatureData;
 20137     138D  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20138     138E  00B2               	movwf	TMAG5273_CalcTemperature@lowerByte
 20139     138F                     l13469:
 20140                           
 20141                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2529:     temperatureD
      +                          ata = ((int16_t) (lowerByte << 8) | upperByte);
 20142     138F  0832               	movf	TMAG5273_CalcTemperature@lowerByte,w
 20143     1390  00AF               	movwf	??_TMAG5273_CalcTemperature
 20144     1391  01B0               	clrf	??_TMAG5273_CalcTemperature+1
 20145     1392  082F               	movf	??_TMAG5273_CalcTemperature,w
 20146     1393  00B0               	movwf	??_TMAG5273_CalcTemperature+1
 20147     1394  01AF               	clrf	??_TMAG5273_CalcTemperature
 20148     1395  082F               	movf	??_TMAG5273_CalcTemperature,w
 20149     1396  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20150     1397  0830               	movf	??_TMAG5273_CalcTemperature+1,w
 20151     1398  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20152     1399                     l13471:
 20153                           
 20154                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2531:     return tempe
      +                          ratureData;
 20155     1399  0834               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20156     139A  00AE               	movwf	?_TMAG5273_CalcTemperature+1
 20157     139B  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20158     139C  00AD               	movwf	?_TMAG5273_CalcTemperature
 20159     139D                     l1216:
 20160     139D  0008               	return
 20161     139E                     __end_of_TMAG5273_CalcTemperature:
 20162                           
 20163                           	psect	text65
 20164     0A3E                     __ptext65:	
 20165 ;; *************** function _i2c_read2ByteRegister *****************
 20166 ;; Defined at:
 20167 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20168 ;; Parameters:    Size  Location     Type
 20169 ;;  address         1    wreg     unsigned char 
 20170 ;;  reg             1    4[BANK0 ] unsigned char 
 20171 ;; Auto vars:     Size  Location     Type
 20172 ;;  address         1   10[BANK0 ] unsigned char 
 20173 ;;  result          2   11[BANK0 ] unsigned short 
 20174 ;; Return value:  Size  Location     Type
 20175 ;;                  2    4[BANK0 ] unsigned short 
 20176 ;; Registers used:
 20177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20178 ;; Tracked objects:
 20179 ;;		On entry : 0/0
 20180 ;;		On exit  : 0/0
 20181 ;;		Unchanged: 0/0
 20182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20184 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20186 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20187 ;;Total ram usage:        9 bytes
 20188 ;; Hardware stack levels used: 1
 20189 ;; Hardware stack levels required when called: 12
 20190 ;; This function calls:
 20191 ;;		_I2C1_Close
 20192 ;;		_I2C1_MasterWrite
 20193 ;;		_I2C1_Open
 20194 ;;		_I2C1_SetAddressNackCallback
 20195 ;;		_I2C1_SetBuffer
 20196 ;;		_I2C1_SetDataCompleteCallback
 20197 ;; This function is called by:
 20198 ;;		_TMAG5273_GetManufacture
 20199 ;;		_TMAG5273_CalcTemperature
 20200 ;;		_MCP9844_GetManufacture
 20201 ;;		_MCP9844_GetDevice
 20202 ;;		_MCP9844_CalcTemperature
 20203 ;;		_TMAG5273_GetDevice
 20204 ;; This function uses a non-reentrant model
 20205 ;;
 20206                           
 20207     0A3E                     _i2c_read2ByteRegister:	
 20208                           ;psect for function _i2c_read2ByteRegister
 20209                           
 20210                           
 20211                           ;incstack = 0
 20212                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20213                           ;i2c_read2ByteRegister@address stored from wreg
 20214     0A3E  0140               	movlb	0	; select bank0
 20215     0A3F  00AA               	movwf	i2c_read2ByteRegister@address
 20216     0A40                     l13307:
 20217     0A40                     l13309:	
 20218                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 20219                           
 20220     0A40  0140               	movlb	0	; select bank0
 20221     0A41  082A               	movf	i2c_read2ByteRegister@address,w
 20222     0A42  3197  27CA  318A   	fcall	_I2C1_Open
 20223     0A45  3A00               	xorlw	0
 20224     0A46  1903               	skipnz
 20225     0A47  2A49               	goto	u10151
 20226     0A48  2A4A               	goto	u10150
 20227     0A49                     u10151:
 20228     0A49  2A40               	goto	l13309
 20229     0A4A                     u10150:
 20230     0A4A                     l13311:
 20231                           
 20232                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 20233     0A4A  302E               	movlw	low _rd2RegCompleteHandler
 20234     0A4B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20235     0A4C  3011               	movlw	high _rd2RegCompleteHandler
 20236     0A4D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20237     0A4E  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 20238     0A4F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20239     0A50  319F  27F5  318A   	fcall	_I2C1_SetDataCompleteCallback
 20240     0A53                     l13313:
 20241                           
 20242                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 20243     0A53  3024               	movlw	low i2c_read2ByteRegister@reg
 20244     0A54  00F1               	movwf	I2C1_SetBuffer@buffer
 20245     0A55  3000               	movlw	high i2c_read2ByteRegister@reg
 20246     0A56  00F2               	movwf	I2C1_SetBuffer@buffer+1
 20247     0A57  3001               	movlw	1
 20248     0A58  00F3               	movwf	I2C1_SetBuffer@bufferSize
 20249     0A59  3000               	movlw	0
 20250     0A5A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 20251     0A5B  3190  20A4  318A   	fcall	_I2C1_SetBuffer
 20252     0A5E                     l13315:
 20253                           
 20254                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20255     0A5E  3000               	movlw	0
 20256     0A5F  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20257     0A60  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20258     0A61  3000               	movlw	0
 20259     0A62  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20260     0A63  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20261     0A64  3190  2004  318A   	fcall	_I2C1_SetAddressNackCallback
 20262     0A67                     l13317:
 20263                           
 20264                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 20265     0A67  319E  26FD  318A   	fcall	_I2C1_MasterWrite
 20266     0A6A                     l13319:	
 20267                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20268                           
 20269     0A6A  3192  2262  318A   	fcall	_I2C1_Close
 20270     0A6D  3A01               	xorlw	1
 20271     0A6E  1903               	skipnz
 20272     0A6F  2A71               	goto	u10161
 20273     0A70  2A72               	goto	u10160
 20274     0A71                     u10161:
 20275     0A71  2A6A               	goto	l13319
 20276     0A72                     u10160:
 20277     0A72                     l13321:
 20278                           
 20279                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 20280     0A72  0140               	movlb	0	; select bank0
 20281     0A73  082C               	movf	i2c_read2ByteRegister@result+1,w
 20282     0A74  00A7               	movwf	??_i2c_read2ByteRegister+1
 20283     0A75  082B               	movf	i2c_read2ByteRegister@result,w
 20284     0A76  00A6               	movwf	??_i2c_read2ByteRegister
 20285     0A77  0827               	movf	??_i2c_read2ByteRegister+1,w
 20286     0A78  00A6               	movwf	??_i2c_read2ByteRegister
 20287     0A79  01A7               	clrf	??_i2c_read2ByteRegister+1
 20288     0A7A  082B               	movf	i2c_read2ByteRegister@result,w
 20289     0A7B  00A9               	movwf	??_i2c_read2ByteRegister+3
 20290     0A7C  01A8               	clrf	??_i2c_read2ByteRegister+2
 20291     0A7D  0826               	movf	??_i2c_read2ByteRegister,w
 20292     0A7E  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 20293     0A7F  00A4               	movwf	?_i2c_read2ByteRegister
 20294     0A80  0827               	movf	??_i2c_read2ByteRegister+1,w
 20295     0A81  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 20296     0A82  00A5               	movwf	?_i2c_read2ByteRegister+1
 20297     0A83                     l546:
 20298     0A83  0008               	return
 20299     0A84                     __end_of_i2c_read2ByteRegister:
 20300                           
 20301                           	psect	text66
 20302     065C                     __ptext66:	
 20303 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20304 ;; Defined at:
 20305 ;;		line 387 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20306 ;; Parameters:    Size  Location     Type
 20307 ;;  serialData      1    wreg     PTR unsigned char 
 20308 ;;		 -> lightBlueSerial(80), 
 20309 ;; Auto vars:     Size  Location     Type
 20310 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20311 ;;		 -> lightBlueSerial(80), 
 20312 ;;  length          1    8[COMMON] unsigned char 
 20313 ;; Return value:  Size  Location     Type
 20314 ;;                  1    wreg      void 
 20315 ;; Registers used:
 20316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20317 ;; Tracked objects:
 20318 ;;		On entry : 0/0
 20319 ;;		On exit  : 0/0
 20320 ;;		Unchanged: 0/0
 20321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20326 ;;Total ram usage:        3 bytes
 20327 ;; Hardware stack levels used: 1
 20328 ;; Hardware stack levels required when called: 6
 20329 ;; This function calls:
 20330 ;;		_RN487X_Write
 20331 ;;		_strlen
 20332 ;; This function is called by:
 20333 ;;		_main
 20334 ;; This function uses a non-reentrant model
 20335 ;;
 20336                           
 20337     065C                     _LIGHTBLUE_SendSerialData:	
 20338                           ;psect for function _LIGHTBLUE_SendSerialData
 20339                           
 20340                           
 20341                           ;incstack = 0
 20342                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20343                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20344     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20345     065D                     l14347:
 20346                           
 20347                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20348     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20349     065E  00F1               	movwf	strlen@s
 20350     065F  3002               	movlw	2
 20351     0660  00F2               	movwf	strlen@s+1
 20352     0661  3192  2292  3186   	fcall	_strlen
 20353     0664  0871               	movf	?_strlen,w
 20354     0665  0709               	addwf	9,w
 20355     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20356     0667                     l14349:
 20357                           
 20358                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(('['));
 20359     0667  305B               	movlw	91
 20360     0668  00F6               	movwf	RN487X_Write@txData
 20361     0669  3068               	movlw	low (_RN487X| (0+32768))
 20362     066A  0084               	movwf	4
 20363     066B  3098               	movlw	high (_RN487X| (0+32768))
 20364     066C  0085               	movwf	5
 20365     066D  3F01               	moviw [1]fsr0
 20366     066E  008A               	movwf	10
 20367     066F  3F00               	moviw [0]fsr0
 20368     0670  000A               	callw
 20369     0671  3186               	pagesel	$
 20370     0672                     l14351:
 20371                           
 20372                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20373     0672  0140               	movlb	0	; select bank0
 20374     0673  086C               	movf	_sequenceNumber,w
 20375     0674  390F               	andlw	15
 20376     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20377     0676  0086               	movwf	6
 20378     0677  3001               	movlw	1	; select bank2/3
 20379     0678  0087               	movwf	7
 20380     0679  0801               	movf	1,w
 20381     067A  00F6               	movwf	RN487X_Write@txData
 20382     067B  3068               	movlw	low (_RN487X| (0+32768))
 20383     067C  0084               	movwf	4
 20384     067D  3098               	movlw	high (_RN487X| (0+32768))
 20385     067E  0085               	movwf	5
 20386     067F  3F01               	moviw [1]fsr0
 20387     0680  008A               	movwf	10
 20388     0681  3F00               	moviw [0]fsr0
 20389     0682  000A               	callw
 20390     0683  3186               	pagesel	$
 20391     0684                     l14353:
 20392     0684  3001               	movlw	1
 20393     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20394     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20395     0687  0140               	movlb	0	; select bank0
 20396     0688  07EC               	addwf	_sequenceNumber,f
 20397     0689                     l14355:
 20398                           
 20399                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20400     0689  3053               	movlw	83
 20401     068A  00F6               	movwf	RN487X_Write@txData
 20402     068B  3068               	movlw	low (_RN487X| (0+32768))
 20403     068C  0084               	movwf	4
 20404     068D  3098               	movlw	high (_RN487X| (0+32768))
 20405     068E  0085               	movwf	5
 20406     068F  3F01               	moviw [1]fsr0
 20407     0690  008A               	movwf	10
 20408     0691  3F00               	moviw [0]fsr0
 20409     0692  000A               	callw
 20410     0693  3186               	pagesel	$
 20411     0694                     l14357:
 20412                           
 20413                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20414     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20415     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20416     0696  3004               	movlw	4
 20417     0697                     u11445:
 20418     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20419     0698  0B89               	decfsz	9,f
 20420     0699  2E97               	goto	u11445
 20421     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20422     069B  390F               	andlw	15
 20423     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20424     069D  0086               	movwf	6
 20425     069E  3001               	movlw	1	; select bank2/3
 20426     069F  0087               	movwf	7
 20427     06A0  0801               	movf	1,w
 20428     06A1  00F6               	movwf	RN487X_Write@txData
 20429     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20430     06A3  0084               	movwf	4
 20431     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20432     06A5  0085               	movwf	5
 20433     06A6  3F01               	moviw [1]fsr0
 20434     06A7  008A               	movwf	10
 20435     06A8  3F00               	moviw [0]fsr0
 20436     06A9  000A               	callw
 20437     06AA  3186               	pagesel	$
 20438     06AB                     l14359:
 20439                           
 20440                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20441     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20442     06AC  390F               	andlw	15
 20443     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20444     06AE  0086               	movwf	6
 20445     06AF  3001               	movlw	1	; select bank2/3
 20446     06B0  0087               	movwf	7
 20447     06B1  0801               	movf	1,w
 20448     06B2  00F6               	movwf	RN487X_Write@txData
 20449     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20450     06B4  0084               	movwf	4
 20451     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20452     06B6  0085               	movwf	5
 20453     06B7  3F01               	moviw [1]fsr0
 20454     06B8  008A               	movwf	10
 20455     06B9  3F00               	moviw [0]fsr0
 20456     06BA  000A               	callw
 20457     06BB  3186               	pagesel	$
 20458                           
 20459                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:     while (*serialData) {
 20460     06BC  2EF1               	goto	l14365
 20461     06BD                     l14361:
 20462                           
 20463                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20464     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20465     06BE  0086               	movwf	6
 20466     06BF  3002               	movlw	2	; select bank4/5
 20467     06C0  0087               	movwf	7
 20468     06C1  0801               	movf	1,w
 20469     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20470     06C3  3004               	movlw	4
 20471     06C4                     u11455:
 20472     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20473     06C5  0B89               	decfsz	9,f
 20474     06C6  2EC4               	goto	u11455
 20475     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20476     06C8  390F               	andlw	15
 20477     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20478     06CA  0086               	movwf	6
 20479     06CB  3001               	movlw	1	; select bank2/3
 20480     06CC  0087               	movwf	7
 20481     06CD  0801               	movf	1,w
 20482     06CE  00F6               	movwf	RN487X_Write@txData
 20483     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20484     06D0  0084               	movwf	4
 20485     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20486     06D2  0085               	movwf	5
 20487     06D3  3F01               	moviw [1]fsr0
 20488     06D4  008A               	movwf	10
 20489     06D5  3F00               	moviw [0]fsr0
 20490     06D6  000A               	callw
 20491     06D7  3186               	pagesel	$
 20492                           
 20493                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20494     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20495     06D9  0086               	movwf	6
 20496     06DA  3002               	movlw	2	; select bank4/5
 20497     06DB  0087               	movwf	7
 20498     06DC  0801               	movf	1,w
 20499     06DD  390F               	andlw	15
 20500     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20501     06DF  0086               	movwf	6
 20502     06E0  3001               	movlw	1	; select bank2/3
 20503     06E1  0087               	movwf	7
 20504     06E2  0801               	movf	1,w
 20505     06E3  00F6               	movwf	RN487X_Write@txData
 20506     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20507     06E5  0084               	movwf	4
 20508     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20509     06E7  0085               	movwf	5
 20510     06E8  3F01               	moviw [1]fsr0
 20511     06E9  008A               	movwf	10
 20512     06EA  3F00               	moviw [0]fsr0
 20513     06EB  000A               	callw
 20514     06EC  3186               	pagesel	$
 20515     06ED                     l14363:
 20516     06ED  3001               	movlw	1
 20517     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20518     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20519     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20520     06F1                     l14365:
 20521                           
 20522                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:     while (*serialData) {
 20523     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20524     06F2  0086               	movwf	6
 20525     06F3  3002               	movlw	2	; select bank4/5
 20526     06F4  0087               	movwf	7
 20527     06F5  0801               	movf	1,w
 20528     06F6  1D03               	btfss	3,2
 20529     06F7  2EF9               	goto	u11461
 20530     06F8  2EFA               	goto	u11460
 20531     06F9                     u11461:
 20532     06F9  2EBD               	goto	l14361
 20533     06FA                     u11460:
 20534     06FA                     l14367:
 20535                           
 20536                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 399:     RN487X.Write((']'));
 20537     06FA  305D               	movlw	93
 20538     06FB  00F6               	movwf	RN487X_Write@txData
 20539     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20540     06FD  0084               	movwf	4
 20541     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20542     06FF  0085               	movwf	5
 20543     0700  3F01               	moviw [1]fsr0
 20544     0701  008A               	movwf	10
 20545     0702  3F00               	moviw [0]fsr0
 20546     0703  000A               	callw
 20547     0704  3186               	pagesel	$
 20548     0705                     l145:
 20549     0705  0008               	return
 20550     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20551                           
 20552                           	psect	text67
 20553     1761                     __ptext67:	
 20554 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20555 ;; Defined at:
 20556 ;;		line 372 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;		None
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20561 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20562 ;;  value           1   21[BANK0 ] unsigned char 
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      void 
 20565 ;; Registers used:
 20566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20573 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20575 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20576 ;;Total ram usage:       23 bytes
 20577 ;; Hardware stack levels used: 1
 20578 ;; Hardware stack levels required when called: 7
 20579 ;; This function calls:
 20580 ;;		_LIGHTBLUE_SendPacket
 20581 ;;		_LIGHTBLUE_SplitByte
 20582 ;;		_strlen
 20583 ;; This function is called by:
 20584 ;;		_main
 20585 ;; This function uses a non-reentrant model
 20586 ;;
 20587                           
 20588     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20589                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20590                           
 20591     1761                     l14335:	
 20592                           ;incstack = 0
 20593                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20594                           
 20595                           
 20596                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 373:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 374:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 375:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 377:     *payload = '\0';
 20597     1761  0140               	movlb	0	; select bank0
 20598     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20599                           
 20600                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20601     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20602     1764  2F79               	goto	l14343
 20603     1765                     l14337:
 20604                           
 20605                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:         value = protocol_vers
      +                          ion_number[dataIndex];
 20606     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20607     1766  3E00               	addlw	low (STR_1| (0+32768))
 20608     1767  0084               	movwf	4
 20609     1768  30A0               	movlw	high (STR_1| (0+32768))
 20610     1769  1803               	skipnc
 20611     176A  3E01               	addlw	1
 20612     176B  0085               	movwf	5
 20613     176C  0800               	movf	0,w	;code access
 20614     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20615     176E                     l14339:
 20616                           
 20617                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20618     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20619     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20620     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20621     1771  3196  26FD  3197   	fcall	_LIGHTBLUE_SplitByte
 20622     1774                     l14341:
 20623                           
 20624                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     }
 20625     1774  3001               	movlw	1
 20626     1775  0140               	movlb	0	; select bank0
 20627     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20628     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20629     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20630     1779                     l14343:
 20631     1779  3000               	movlw	low (STR_1| (0+32768))
 20632     177A  00F1               	movwf	strlen@s
 20633     177B  30A0               	movlw	high (STR_1| (0+32768))
 20634     177C  00F2               	movwf	strlen@s+1
 20635     177D  3192  2292  3197   	fcall	_strlen
 20636     1780  0140               	movlb	0	; select bank0
 20637     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20638     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20639     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20640     1784  0872               	movf	?_strlen+1,w
 20641     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20642     1786  1D03               	skipz
 20643     1787  2F8A               	goto	u11435
 20644     1788  0871               	movf	?_strlen,w
 20645     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20646     178A                     u11435:
 20647     178A  1C03               	skipc
 20648     178B  2F8D               	goto	u11431
 20649     178C  2F8E               	goto	u11430
 20650     178D                     u11431:
 20651     178D  2F65               	goto	l14337
 20652     178E                     u11430:
 20653     178E                     l14345:
 20654                           
 20655                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 384:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20656     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20657     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20658     1790  3056               	movlw	86
 20659     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20660     1794                     l139:
 20661     1794  0008               	return
 20662     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20663                           
 20664                           	psect	text68
 20665     118D                     __ptext68:	
 20666 ;; *************** function _LIGHTBLUE_PushButton *****************
 20667 ;; Defined at:
 20668 ;;		line 344 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20669 ;; Parameters:    Size  Location     Type
 20670 ;;		None
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20673 ;;  button          1    0[BANK0 ] unsigned char 
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20687 ;;Total ram usage:        4 bytes
 20688 ;; Hardware stack levels used: 1
 20689 ;; Hardware stack levels required when called: 7
 20690 ;; This function calls:
 20691 ;;		_LIGHTBLUE_GetButtonValue
 20692 ;;		_LIGHTBLUE_SendPacket
 20693 ;;		_LIGHTBLUE_SplitByte
 20694 ;; This function is called by:
 20695 ;;		_main
 20696 ;; This function uses a non-reentrant model
 20697 ;;
 20698                           
 20699     118D                     _LIGHTBLUE_PushButton:	
 20700                           ;psect for function _LIGHTBLUE_PushButton
 20701                           
 20702     118D                     l14313:	
 20703                           ;incstack = 0
 20704                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20705                           
 20706                           
 20707                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 345:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 346:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20708     118D  319F  2724  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20709     1190  0140               	movlb	0	; select bank0
 20710     1191  00A0               	movwf	LIGHTBLUE_PushButton@button
 20711     1192                     l14315:
 20712                           
 20713                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 348:     *payload = '\0';
 20714     1192  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20715     1193                     l14317:
 20716                           
 20717                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20718     1193  0820               	movf	LIGHTBLUE_PushButton@button,w
 20719     1194  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20720     1195  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20721     1196  3196  26FD  3191   	fcall	_LIGHTBLUE_SplitByte
 20722     1199                     l14319:
 20723                           
 20724                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 351:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20725     1199  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20726     119A  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20727     119B  3050               	movlw	80
 20728     119C  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20729     119F                     l130:
 20730     119F  0008               	return
 20731     11A0                     __end_of_LIGHTBLUE_PushButton:
 20732                           
 20733                           	psect	text69
 20734     1F24                     __ptext69:	
 20735 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20736 ;; Defined at:
 20737 ;;		line 477 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20738 ;; Parameters:    Size  Location     Type
 20739 ;;		None
 20740 ;; Auto vars:     Size  Location     Type
 20741 ;;		None
 20742 ;; Return value:  Size  Location     Type
 20743 ;;                  1    wreg      unsigned char 
 20744 ;; Registers used:
 20745 ;;		wreg, status,2, status,0
 20746 ;; Tracked objects:
 20747 ;;		On entry : 0/0
 20748 ;;		On exit  : 0/0
 20749 ;;		Unchanged: 0/0
 20750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20755 ;;Total ram usage:        0 bytes
 20756 ;; Hardware stack levels used: 1
 20757 ;; Hardware stack levels required when called: 4
 20758 ;; This function calls:
 20759 ;;		Nothing
 20760 ;; This function is called by:
 20761 ;;		_LIGHTBLUE_PushButton
 20762 ;; This function uses a non-reentrant model
 20763 ;;
 20764                           
 20765     1F24                     _LIGHTBLUE_GetButtonValue:	
 20766                           ;psect for function _LIGHTBLUE_GetButtonValue
 20767                           
 20768     1F24                     l13583:	
 20769                           ;incstack = 0
 20770                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20771                           
 20772                           
 20773                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 478:     return (0x01) - PORTAbits
      +                          .RA7;
 20774     1F24  0140               	movlb	0	; select bank0
 20775     1F25  0D0C               	rlf	12,w	;volatile
 20776     1F26  0D0C               	rlf	12,w	;volatile
 20777     1F27  3901               	andlw	1
 20778     1F28  3C01               	sublw	1
 20779     1F29                     l202:
 20780     1F29  0008               	return
 20781     1F2A                     __end_of_LIGHTBLUE_GetButtonValue:
 20782                           
 20783                           	psect	text70
 20784     0590                     __ptext70:	
 20785 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20786 ;; Defined at:
 20787 ;;		line 402 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  receivedByte    1    wreg     unsigned char 
 20790 ;; Auto vars:     Size  Location     Type
 20791 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  1    wreg      void 
 20794 ;; Registers used:
 20795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : 0/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20802 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20804 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;Total ram usage:        9 bytes
 20806 ;; Hardware stack levels used: 1
 20807 ;; Hardware stack levels required when called: 11
 20808 ;; This function calls:
 20809 ;;		_LIGHTBLUE_PerformAction
 20810 ;; This function is called by:
 20811 ;;		_main
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20816                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20817                           
 20818                           
 20819                           ;incstack = 0
 20820                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20821                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20822     0590  0140               	movlb	0	; select bank0
 20823     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20824     0592                     l14369:
 20825                           
 20826                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 405:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 406:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 408:   
      +                            switch (parserState) {
 20827     0592  2E3C               	goto	l14429
 20828     0593                     l14371:
 20829                           
 20830                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:             parserState = PAC
      +                          KET_ID;
 20831     0593  3002               	movlw	2
 20832     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20833                           
 20834                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             break;
 20835     0595  2E5B               	goto	l187
 20836     0596                     l14373:
 20837                           
 20838                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             packetID = receiv
      +                          edByte;
 20839     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20840     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20841                           
 20842                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 415:             parserState = PAY
      +                          LOAD_SIZE_0;
 20843     0598  3003               	movlw	3
 20844     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20845                           
 20846                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             break;
 20847     059A  2E5B               	goto	l187
 20848     059B                     l14375:
 20849                           
 20850                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20851     059B  303A               	movlw	58
 20852     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20853     059D  1C03               	skipc
 20854     059E  2DA0               	goto	u11471
 20855     059F  2DA1               	goto	u11470
 20856     05A0                     u11471:
 20857     05A0  2DAA               	goto	l14379
 20858     05A1                     u11470:
 20859     05A1                     l14377:
 20860     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20861     05A2  395F               	andlw	95
 20862     05A3  3EC9               	addlw	201
 20863     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20864     05A5  30FF               	movlw	255
 20865     05A6  1803               	skipnc
 20866     05A7  3000               	movlw	0
 20867     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20868     05A9  2DB1               	goto	l164
 20869     05AA                     l14379:
 20870     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20871     05AB  3ED0               	addlw	208
 20872     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20873     05AD  30FF               	movlw	255
 20874     05AE  1803               	skipnc
 20875     05AF  3000               	movlw	0
 20876     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20877     05B1                     l164:
 20878     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 20879     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20880                           
 20881                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 419:             parserState = PAY
      +                          LOAD_SIZE_1;
 20882     05B3  3004               	movlw	4
 20883     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20884                           
 20885                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             break;
 20886     05B5  2E5B               	goto	l187
 20887     05B6                     l14381:
 20888                           
 20889                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20890     05B6  303A               	movlw	58
 20891     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20892     05B8  1C03               	skipc
 20893     05B9  2DBB               	goto	u11481
 20894     05BA  2DBC               	goto	u11480
 20895     05BB                     u11481:
 20896     05BB  2DC5               	goto	l14385
 20897     05BC                     u11480:
 20898     05BC                     l14383:
 20899     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20900     05BD  395F               	andlw	95
 20901     05BE  3EC9               	addlw	201
 20902     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20903     05C0  30FF               	movlw	255
 20904     05C1  1803               	skipnc
 20905     05C2  3000               	movlw	0
 20906     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20907     05C4  2DCC               	goto	l14387
 20908     05C5                     l14385:
 20909     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20910     05C6  3ED0               	addlw	208
 20911     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20912     05C8  30FF               	movlw	255
 20913     05C9  1803               	skipnc
 20914     05CA  3000               	movlw	0
 20915     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20916     05CC                     l14387:
 20917     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20918     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20919     05CE  3003               	movlw	3
 20920     05CF                     u11495:
 20921     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20922     05D0  3EFF               	addlw	-1
 20923     05D1  1D03               	skipz
 20924     05D2  2DCF               	goto	u11495
 20925     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20926     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$464,w
 20927     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20928     05D6                     l14389:
 20929                           
 20930                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 423:             parserState = PAY
      +                          LOAD_0;
 20931     05D6  3005               	movlw	5
 20932     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20933                           
 20934                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             break;
 20935     05D8  2E5B               	goto	l187
 20936     05D9                     l14391:
 20937                           
 20938                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20939     05D9  303A               	movlw	58
 20940     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20941     05DB  1C03               	skipc
 20942     05DC  2DDE               	goto	u11501
 20943     05DD  2DDF               	goto	u11500
 20944     05DE                     u11501:
 20945     05DE  2DE8               	goto	l14395
 20946     05DF                     u11500:
 20947     05DF                     l14393:
 20948     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20949     05E0  395F               	andlw	95
 20950     05E1  3EC9               	addlw	201
 20951     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 20952     05E3  30FF               	movlw	255
 20953     05E4  1803               	skipnc
 20954     05E5  3000               	movlw	0
 20955     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 20956     05E7  2DEF               	goto	l14397
 20957     05E8                     l14395:
 20958     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20959     05E9  3ED0               	addlw	208
 20960     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 20961     05EB  30FF               	movlw	255
 20962     05EC  1803               	skipnc
 20963     05ED  3000               	movlw	0
 20964     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 20965     05EF                     l14397:
 20966                           
 20967                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:             length--;
 20968     05EF  3001               	movlw	1
 20969     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20970     05F1                     l14399:
 20971                           
 20972                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             if (length == 0) 
      +                          {
 20973     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20974     05F2  1D03               	btfss	3,2
 20975     05F3  2DF5               	goto	u11511
 20976     05F4  2DF6               	goto	u11510
 20977     05F5                     u11511:
 20978     05F5  2DF8               	goto	l14403
 20979     05F6                     u11510:
 20980     05F6                     l14401:
 20981                           
 20982                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           IDLE;
 20983     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20984                           
 20985                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 430:             } else {
 20986     05F7  2E5B               	goto	l187
 20987     05F8                     l14403:
 20988                           
 20989                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 431:                 parserState =
      +                           PAYLOAD_1;
 20990     05F8  3006               	movlw	6
 20991     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20992     05FA  2E5B               	goto	l187
 20993     05FB                     l14405:
 20994                           
 20995                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20996     05FB  303A               	movlw	58
 20997     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20998     05FD  1C03               	skipc
 20999     05FE  2E00               	goto	u11521
 21000     05FF  2E01               	goto	u11520
 21001     0600                     u11521:
 21002     0600  2E0A               	goto	l14409
 21003     0601                     u11520:
 21004     0601                     l14407:
 21005     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21006     0602  395F               	andlw	95
 21007     0603  3EC9               	addlw	201
 21008     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21009     0605  30FF               	movlw	255
 21010     0606  1803               	skipnc
 21011     0607  3000               	movlw	0
 21012     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21013     0609  2E11               	goto	l14411
 21014     060A                     l14409:
 21015     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21016     060B  3ED0               	addlw	208
 21017     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21018     060D  30FF               	movlw	255
 21019     060E  1803               	skipnc
 21020     060F  3000               	movlw	0
 21021     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21022     0611                     l14411:
 21023     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 21024     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21025     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21026     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21027     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21028     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21029     0617  30F0               	movlw	240
 21030     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21031     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21032     061A  390F               	andlw	15
 21033     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21034     061C  30F0               	movlw	240
 21035     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21036     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$465,w
 21037     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21038     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21039     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$465+1,w
 21040     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21041     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21042     0624                     l14413:
 21043                           
 21044                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21045     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21046     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21047     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21048     0627  3188  2017  3185   	fcall	_LIGHTBLUE_PerformAction
 21049     062A                     l14415:
 21050                           
 21051                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 437:             length--;
 21052     062A  3001               	movlw	1
 21053     062B  0140               	movlb	0	; select bank0
 21054     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21055     062D                     l14417:
 21056                           
 21057                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 438:             if (length == 0) 
      +                          {
 21058     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21059     062E  1D03               	btfss	3,2
 21060     062F  2E31               	goto	u11531
 21061     0630  2E32               	goto	u11530
 21062     0631                     u11531:
 21063     0631  2DD6               	goto	l14389
 21064     0632                     u11530:
 21065     0632  2DF6               	goto	l14401
 21066     0633                     l14423:
 21067                           
 21068                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 446:             if (receivedByte 
      +                          == ('[')) {
 21069     0633  305B               	movlw	91
 21070     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21071     0635  1D03               	btfss	3,2
 21072     0636  2E38               	goto	u11541
 21073     0637  2E39               	goto	u11540
 21074     0638                     u11541:
 21075     0638  2E5B               	goto	l187
 21076     0639                     u11540:
 21077     0639                     l14425:
 21078                           
 21079                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 447:                 parserState =
      +                           SEQUENCE_NUMBER;
 21080     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21081     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21082     063B  2E5B               	goto	l187
 21083     063C                     l14429:
 21084     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21085     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21086     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21087                           
 21088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21089                           ; Switch size 1, requested type "simple"
 21090                           ; Number of cases is 1, Range of values is 0 to 0
 21091                           ; switch strategies available:
 21092                           ; Name         Instructions Cycles
 21093                           ; simple_byte            4     3 (average)
 21094                           ; direct_byte            8     6 (fixed)
 21095                           ; jumptable            260     6 (fixed)
 21096                           ;	Chosen strategy is simple_byte
 21097     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21098     0640  3A00               	xorlw	0	; case 0
 21099     0641  1903               	skipnz
 21100     0642  2E44               	goto	l16603
 21101     0643  2E33               	goto	l14423
 21102     0644                     l16603:
 21103                           
 21104                           ; Switch size 1, requested type "simple"
 21105                           ; Number of cases is 7, Range of values is 0 to 6
 21106                           ; switch strategies available:
 21107                           ; Name         Instructions Cycles
 21108                           ; direct_byte           20     6 (fixed)
 21109                           ; simple_byte           22    12 (average)
 21110                           ; jumptable            260     6 (fixed)
 21111                           ;	Chosen strategy is simple_byte
 21112     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21113     0645  3A00               	xorlw	0	; case 0
 21114     0646  1903               	skipnz
 21115     0647  2E33               	goto	l14423
 21116     0648  3A01               	xorlw	1	; case 1
 21117     0649  1903               	skipnz
 21118     064A  2D93               	goto	l14371
 21119     064B  3A03               	xorlw	3	; case 2
 21120     064C  1903               	skipnz
 21121     064D  2D96               	goto	l14373
 21122     064E  3A01               	xorlw	1	; case 3
 21123     064F  1903               	skipnz
 21124     0650  2D9B               	goto	l14375
 21125     0651  3A07               	xorlw	7	; case 4
 21126     0652  1903               	skipnz
 21127     0653  2DB6               	goto	l14381
 21128     0654  3A01               	xorlw	1	; case 5
 21129     0655  1903               	skipnz
 21130     0656  2DD9               	goto	l14391
 21131     0657  3A03               	xorlw	3	; case 6
 21132     0658  1903               	skipnz
 21133     0659  2DFB               	goto	l14405
 21134     065A  2E33               	goto	l14423
 21135     065B                     l187:
 21136     065B  0008               	return
 21137     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21138                           
 21139                           	psect	text71
 21140     0817                     __ptext71:	
 21141 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21142 ;; Defined at:
 21143 ;;		line 501 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21144 ;; Parameters:    Size  Location     Type
 21145 ;;  id              1    wreg     unsigned char 
 21146 ;;  data            1    7[BANK0 ] unsigned char 
 21147 ;; Auto vars:     Size  Location     Type
 21148 ;;  id              1    9[BANK0 ] unsigned char 
 21149 ;;  led             1   10[BANK0 ] unsigned char 
 21150 ;; Return value:  Size  Location     Type
 21151 ;;                  1    wreg      void 
 21152 ;; Registers used:
 21153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21154 ;; Tracked objects:
 21155 ;;		On entry : 0/0
 21156 ;;		On exit  : 0/0
 21157 ;;		Unchanged: 0/0
 21158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21159 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21162 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21163 ;;Total ram usage:        4 bytes
 21164 ;; Hardware stack levels used: 1
 21165 ;; Hardware stack levels required when called: 10
 21166 ;; This function calls:
 21167 ;;		_EUSART1_Write
 21168 ;;		_EUSART2_Write
 21169 ;;		_LIGHTBLUE_SetErrorLedValue
 21170 ;; This function is called by:
 21171 ;;		_LIGHTBLUE_ParseIncomingPacket
 21172 ;; This function uses a non-reentrant model
 21173 ;;
 21174                           
 21175     0817                     _LIGHTBLUE_PerformAction:	
 21176                           ;psect for function _LIGHTBLUE_PerformAction
 21177                           
 21178                           
 21179                           ;incstack = 0
 21180                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21181                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21182     0817  0140               	movlb	0	; select bank0
 21183     0818  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21184     0819                     l13595:
 21185                           
 21186                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 502:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 504:     switch (id) {
 21187     0819  2846               	goto	l13607
 21188     081A                     l13597:
 21189                           
 21190                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:             led = (data >> 4)
      +                           & (0x01);
 21191     081A  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21192     081B  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21193     081C  3004               	movlw	4
 21194     081D                     u10445:
 21195     081D  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21196     081E  0B89               	decfsz	9,f
 21197     081F  281D               	goto	u10445
 21198     0820  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21199     0821  3901               	andlw	1
 21200     0822  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21201                           
 21202                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:             if (led == (0x00)
      +                          ) {
 21203     0823  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21204     0824  1D03               	btfss	3,2
 21205     0825  2827               	goto	u10451
 21206     0826  2828               	goto	u10450
 21207     0827                     u10451:
 21208     0827  2830               	goto	l13601
 21209     0828                     u10450:
 21210     0828                     l13599:
 21211                           
 21212                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 508:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21213     0828  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21214     0829  282B               	goto	u10461
 21215     082A  282C               	goto	u10460
 21216     082B                     u10461:
 21217     082B  282E               	goto	l224
 21218     082C                     u10460:
 21219     082C                     l221:	
 21220                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21221                           
 21222     082C  1698               	bsf	24,5	;volatile
 21223     082D  284E               	goto	l230
 21224     082E                     l224:	
 21225                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21226                           
 21227     082E  1298               	bcf	24,5	;volatile
 21228     082F  284E               	goto	l230
 21229     0830                     l13601:
 21230                           
 21231                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 514:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21232     0830  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21233     0831  2833               	goto	u10471
 21234     0832  2835               	goto	u10470
 21235     0833                     u10471:
 21236     0833  3001               	movlw	1
 21237     0834  2836               	goto	u10480
 21238     0835                     u10470:
 21239     0835  3000               	movlw	0
 21240     0836                     u10480:
 21241     0836  3190  20B3  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21242     0839  284E               	goto	l230
 21243     083A                     l13603:
 21244                           
 21245                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 518:             uart[UART_CDC].Wr
      +                          ite(data);
 21246     083A  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21247     083B  00F1               	movwf	EUSART2_Write@txData
 21248     083C  3002               	movlw	low ((_uart+2)| (0+32768))
 21249     083D  0084               	movwf	4
 21250     083E  3098               	movlw	high ((_uart+2)| (0+32768))
 21251     083F  0085               	movwf	5
 21252     0840  3F01               	moviw [1]fsr0
 21253     0841  008A               	movwf	10
 21254     0842  3F00               	moviw [0]fsr0
 21255     0843  000A               	callw
 21256     0844  3188               	pagesel	$
 21257                           
 21258                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 519:             break;
 21259     0845  284E               	goto	l230
 21260     0846                     l13607:
 21261     0846  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21262                           
 21263                           ; Switch size 1, requested type "simple"
 21264                           ; Number of cases is 2, Range of values is 76 to 83
 21265                           ; switch strategies available:
 21266                           ; Name         Instructions Cycles
 21267                           ; simple_byte            7     4 (average)
 21268                           ; direct_byte           25     9 (fixed)
 21269                           ; jumptable            263     9 (fixed)
 21270                           ;	Chosen strategy is simple_byte
 21271     0847  3A4C               	xorlw	76	; case 76
 21272     0848  1903               	skipnz
 21273     0849  281A               	goto	l13597
 21274     084A  3A1F               	xorlw	31	; case 83
 21275     084B  1903               	skipnz
 21276     084C  283A               	goto	l13603
 21277     084D  284E               	goto	l230
 21278     084E                     l230:
 21279     084E  0008               	return
 21280     084F                     __end_of_LIGHTBLUE_PerformAction:
 21281                           
 21282                           	psect	text72
 21283     10B3                     __ptext72:	
 21284 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21285 ;; Defined at:
 21286 ;;		line 489 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21287 ;; Parameters:    Size  Location     Type
 21288 ;;  value           1    wreg     _Bool 
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;  value           1    6[BANK0 ] _Bool 
 21291 ;; Return value:  Size  Location     Type
 21292 ;;                  1    wreg      void 
 21293 ;; Registers used:
 21294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21295 ;; Tracked objects:
 21296 ;;		On entry : 0/0
 21297 ;;		On exit  : 0/0
 21298 ;;		Unchanged: 0/0
 21299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21303 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21304 ;;Total ram usage:        2 bytes
 21305 ;; Hardware stack levels used: 1
 21306 ;; Hardware stack levels required when called: 9
 21307 ;; This function calls:
 21308 ;;		_LIGHTBLUE_UpdateErrorLed
 21309 ;; This function is called by:
 21310 ;;		_LIGHTBLUE_PerformAction
 21311 ;; This function uses a non-reentrant model
 21312 ;;
 21313                           
 21314     10B3                     _LIGHTBLUE_SetErrorLedValue:	
 21315                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21316                           
 21317                           
 21318                           ;incstack = 0
 21319                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21320                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21321     10B3  0140               	movlb	0	; select bank0
 21322     10B4  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21323     10B5                     l13415:
 21324                           
 21325                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 490:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21326     10B5  3001               	movlw	1
 21327     10B6  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21328     10B7  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21329     10B8  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21330     10B9  0855               	movf	_bitMap+1,w	;volatile
 21331     10BA  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21332     10BB  39FE               	andlw	-2
 21333     10BC  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21334     10BD  00D5               	movwf	_bitMap+1	;volatile
 21335     10BE                     l13417:
 21336                           
 21337                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 491:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21338     10BE  3193  2349  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21339     10C1                     l211:
 21340     10C1  0008               	return
 21341     10C2                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21342                           
 21343                           	psect	text73
 21344     1349                     __ptext73:	
 21345 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21346 ;; Defined at:
 21347 ;;		line 494 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21348 ;; Parameters:    Size  Location     Type
 21349 ;;		None
 21350 ;; Auto vars:     Size  Location     Type
 21351 ;;		None
 21352 ;; Return value:  Size  Location     Type
 21353 ;;                  1    wreg      void 
 21354 ;; Registers used:
 21355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21356 ;; Tracked objects:
 21357 ;;		On entry : 0/0
 21358 ;;		On exit  : 0/0
 21359 ;;		Unchanged: 0/0
 21360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21365 ;;Total ram usage:        0 bytes
 21366 ;; Hardware stack levels used: 1
 21367 ;; Hardware stack levels required when called: 8
 21368 ;; This function calls:
 21369 ;;		_RN487X_Delay
 21370 ;;		_RN487X_EnterCmdMode
 21371 ;;		_RN487X_EnterDataMode
 21372 ;;		_RN487X_SetOutputs
 21373 ;; This function is called by:
 21374 ;;		_LIGHTBLUE_SetErrorLedValue
 21375 ;; This function uses a non-reentrant model
 21376 ;;
 21377                           
 21378     1349                     _LIGHTBLUE_UpdateErrorLed:	
 21379                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21380                           
 21381     1349                     l13325:	
 21382                           ;incstack = 0
 21383                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21384                           
 21385                           
 21386                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_EnterCmdMode();
 21387     1349  3188  2000  3193   	fcall	_RN487X_EnterCmdMode
 21388     134C                     l13327:
 21389                           
 21390                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X.DelayMs((20));
 21391     134C  3014               	movlw	20
 21392     134D  00F4               	movwf	RN487X_Delay@delayCount
 21393     134E  3000               	movlw	0
 21394     134F  00F5               	movwf	RN487X_Delay@delayCount+1
 21395     1350  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21396     1351  0084               	movwf	4
 21397     1352  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21398     1353  0085               	movwf	5
 21399     1354  3F01               	moviw [1]fsr0
 21400     1355  008A               	movwf	10
 21401     1356  3F00               	moviw [0]fsr0
 21402     1357  000A               	callw
 21403     1358  3193               	pagesel	$
 21404     1359                     l13329:
 21405                           
 21406                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 497:     RN487X_SetOutputs(bitMap)
      +                          ;
 21407     1359  0140               	movlb	0	; select bank0
 21408     135A  0855               	movf	_bitMap+1,w	;volatile
 21409     135B  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21410     135C  0854               	movf	_bitMap,w	;volatile
 21411     135D  00A0               	movwf	RN487X_SetOutputs@bitMap
 21412     135E  318A  2284  3193   	fcall	_RN487X_SetOutputs
 21413     1361                     l13331:
 21414                           
 21415                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 498:     RN487X_EnterDataMode();
 21416     1361  3193  232E  3193   	fcall	_RN487X_EnterDataMode
 21417     1364                     l214:
 21418     1364  0008               	return
 21419     1365                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21420                           
 21421                           	psect	text74
 21422     0A84                     __ptext74:	
 21423 ;; *************** function _RN487X_SetOutputs *****************
 21424 ;; Defined at:
 21425 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;  bitMap          2    0[BANK0 ] struct .
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21430 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21431 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21432 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21433 ;; Return value:  Size  Location     Type
 21434 ;;                  1    wreg      _Bool 
 21435 ;; Registers used:
 21436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21437 ;; Tracked objects:
 21438 ;;		On entry : 0/0
 21439 ;;		On exit  : 0/0
 21440 ;;		Unchanged: 0/0
 21441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21443 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21445 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21446 ;;Total ram usage:        6 bytes
 21447 ;; Hardware stack levels used: 1
 21448 ;; Hardware stack levels required when called: 7
 21449 ;; This function calls:
 21450 ;;		_RN487X_ReadDefaultResponse
 21451 ;;		_RN487X_SendCmd
 21452 ;; This function is called by:
 21453 ;;		_LIGHTBLUE_UpdateErrorLed
 21454 ;; This function uses a non-reentrant model
 21455 ;;
 21456                           
 21457     0A84                     _RN487X_SetOutputs:	
 21458                           ;psect for function _RN487X_SetOutputs
 21459                           
 21460     0A84                     l13185:	
 21461                           ;incstack = 0
 21462                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21463                           
 21464                           
 21465                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21466     0A84  3030               	movlw	48
 21467     0A85  0140               	movlb	0	; select bank0
 21468     0A86  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21469                           
 21470                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21471     0A87  3030               	movlw	48
 21472     0A88  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21473                           
 21474                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21475     0A89  3030               	movlw	48
 21476     0A8A  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21477     0A8B                     l13187:
 21478                           
 21479                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21480     0A8B  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21481     0A8C  2A8E               	goto	u10001
 21482     0A8D  2A8F               	goto	u10000
 21483     0A8E                     u10001:
 21484     0A8E  2A92               	goto	l13191
 21485     0A8F                     u10000:
 21486     0A8F                     l13189:
 21487                           
 21488                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21489     0A8F  3031               	movlw	49
 21490     0A90  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21491                           
 21492                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21493     0A91  2A94               	goto	l13193
 21494     0A92                     l13191:
 21495                           
 21496                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21497     0A92  3030               	movlw	48
 21498     0A93  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21499     0A94                     l13193:
 21500                           
 21501                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21502     0A94  0820               	movf	RN487X_SetOutputs@bitMap,w
 21503     0A95  390F               	andlw	15
 21504     0A96  3E30               	addlw	48
 21505     0A97  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21506     0A98                     l13195:
 21507                           
 21508                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21509     0A98  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21510     0A99  2A9B               	goto	u10011
 21511     0A9A  2A9C               	goto	u10010
 21512     0A9B                     u10011:
 21513     0A9B  2A9F               	goto	l13199
 21514     0A9C                     u10010:
 21515     0A9C                     l13197:
 21516                           
 21517                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21518     0A9C  3031               	movlw	49
 21519     0A9D  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21520                           
 21521                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21522     0A9E  2AA1               	goto	l13201
 21523     0A9F                     l13199:
 21524                           
 21525                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21526     0A9F  3030               	movlw	48
 21527     0AA0  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21528     0AA1                     l13201:
 21529                           
 21530                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21531     0AA1  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21532     0AA2  390F               	andlw	15
 21533     0AA3  3E30               	addlw	48
 21534     0AA4  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21535     0AA5                     l13203:
 21536                           
 21537                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21538     0AA5  307C               	movlw	124
 21539     0AA6  0143               	movlb	3	; select bank3
 21540     0AA7  00A0               	movwf	_cmdBuf^(0+384)
 21541     0AA8                     l13205:
 21542                           
 21543                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21544     0AA8  304F               	movlw	79
 21545     0AA9  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21546     0AAA                     l13207:
 21547                           
 21548                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21549     0AAA  302C               	movlw	44
 21550     0AAB  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21551     0AAC                     l13209:
 21552                           
 21553                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21554     0AAC  0140               	movlb	0	; select bank0
 21555     0AAD  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21556     0AAE  0143               	movlb	3	; select bank3
 21557     0AAF  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21558     0AB0                     l13211:
 21559                           
 21560                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21561     0AB0  0140               	movlb	0	; select bank0
 21562     0AB1  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21563     0AB2  0143               	movlb	3	; select bank3
 21564     0AB3  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21565     0AB4                     l13213:
 21566                           
 21567                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21568     0AB4  302C               	movlw	44
 21569     0AB5  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21570     0AB6                     l13215:
 21571                           
 21572                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21573     0AB6  0140               	movlb	0	; select bank0
 21574     0AB7  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21575     0AB8  0143               	movlb	3	; select bank3
 21576     0AB9  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21577     0ABA                     l13217:
 21578                           
 21579                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21580     0ABA  0140               	movlb	0	; select bank0
 21581     0ABB  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21582     0ABC  0143               	movlb	3	; select bank3
 21583     0ABD  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21584     0ABE                     l13219:
 21585                           
 21586                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21587     0ABE  300D               	movlw	13
 21588     0ABF  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21589     0AC0                     l13221:
 21590                           
 21591                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21592     0AC0  300A               	movlw	10
 21593     0AC1  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21594     0AC2                     l13223:
 21595                           
 21596                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21597     0AC2  300A               	movlw	10
 21598     0AC3  00F7               	movwf	RN487X_SendCmd@cmdLen
 21599     0AC4  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21600     0AC5  3196  26CF  318A   	fcall	_RN487X_SendCmd
 21601     0AC8                     l13225:
 21602                           
 21603                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21604     0AC8  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21605     0ACB                     l1558:
 21606     0ACB  0008               	return
 21607     0ACC                     __end_of_RN487X_SetOutputs:
 21608                           
 21609                           	psect	text75
 21610     0EEC                     __ptext75:	
 21611 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21612 ;; Defined at:
 21613 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21614 ;; Parameters:    Size  Location     Type
 21615 ;;		None
 21616 ;; Auto vars:     Size  Location     Type
 21617 ;;  resp            3    3[COMMON] unsigned char [3]
 21618 ;;  status          1    6[COMMON] _Bool 
 21619 ;; Return value:  Size  Location     Type
 21620 ;;                  1    wreg      _Bool 
 21621 ;; Registers used:
 21622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21623 ;; Tracked objects:
 21624 ;;		On entry : 0/0
 21625 ;;		On exit  : 0/0
 21626 ;;		Unchanged: 0/0
 21627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21629 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21632 ;;Total ram usage:        4 bytes
 21633 ;; Hardware stack levels used: 1
 21634 ;; Hardware stack levels required when called: 6
 21635 ;; This function calls:
 21636 ;;		_RN487X_Read@rn487x_interface$F1843
 21637 ;; This function is called by:
 21638 ;;		_RN487X_SetOutputs
 21639 ;;		_RN487X_Disconnect
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643     0EEC                     _RN487X_ReadDefaultResponse:	
 21644                           ;psect for function _RN487X_ReadDefaultResponse
 21645                           
 21646     0EEC                     l13107:	
 21647                           ;incstack = 0
 21648                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21649                           
 21650                           
 21651                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21652     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21653     0EED                     l13109:
 21654                           
 21655                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21656     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21657     0EEE  0084               	movwf	4
 21658     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21659     0EF0  0085               	movwf	5
 21660     0EF1  3F01               	moviw [1]fsr0
 21661     0EF2  008A               	movwf	10
 21662     0EF3  3F00               	moviw [0]fsr0
 21663     0EF4  000A               	callw
 21664     0EF5  318E               	pagesel	$
 21665     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21666     0EF7                     l13111:
 21667                           
 21668                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21669     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21670     0EF8  0084               	movwf	4
 21671     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21672     0EFA  0085               	movwf	5
 21673     0EFB  3F01               	moviw [1]fsr0
 21674     0EFC  008A               	movwf	10
 21675     0EFD  3F00               	moviw [0]fsr0
 21676     0EFE  000A               	callw
 21677     0EFF  318E               	pagesel	$
 21678     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21679     0F01                     l13113:
 21680                           
 21681                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21682     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21683     0F02  0084               	movwf	4
 21684     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21685     0F04  0085               	movwf	5
 21686     0F05  3F01               	moviw [1]fsr0
 21687     0F06  008A               	movwf	10
 21688     0F07  3F00               	moviw [0]fsr0
 21689     0F08  000A               	callw
 21690     0F09  318E               	pagesel	$
 21691     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21692                           
 21693                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21694     0F0B  2F2B               	goto	l13133
 21695     0F0C                     l13115:
 21696                           
 21697                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21698     0F0C  304F               	movlw	79
 21699     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21700     0F0E  1D03               	btfss	3,2
 21701     0F0F  2F11               	goto	u9891
 21702     0F10  2F12               	goto	u9890
 21703     0F11                     u9891:
 21704     0F11  2F33               	goto	l13135
 21705     0F12                     u9890:
 21706     0F12                     l13117:
 21707     0F12  304B               	movlw	75
 21708     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21709     0F14  1D03               	btfss	3,2
 21710     0F15  2F17               	goto	u9901
 21711     0F16  2F18               	goto	u9900
 21712     0F17                     u9901:
 21713     0F17  2F33               	goto	l13135
 21714     0F18                     u9900:
 21715     0F18                     l13119:
 21716                           
 21717                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21718     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21719     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21720     0F1A  2F33               	goto	l13135
 21721     0F1B                     l13121:
 21722                           
 21723                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21724     0F1B  3072               	movlw	114
 21725     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21726     0F1D  1D03               	btfss	3,2
 21727     0F1E  2F20               	goto	u9911
 21728     0F1F  2F21               	goto	u9910
 21729     0F20                     u9911:
 21730     0F20  2F33               	goto	l13135
 21731     0F21                     u9910:
 21732     0F21                     l13123:
 21733     0F21  3072               	movlw	114
 21734     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21735     0F23  1D03               	btfss	3,2
 21736     0F24  2F26               	goto	u9921
 21737     0F25  2F27               	goto	u9920
 21738     0F26                     u9921:
 21739     0F26  2F33               	goto	l13135
 21740     0F27                     u9920:
 21741     0F27                     l13125:
 21742                           
 21743                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21744     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21745     0F28  2F33               	goto	l13135
 21746     0F29                     l13127:
 21747                           
 21748                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21749     0F29  3000               	movlw	0
 21750     0F2A  2F73               	goto	l1533
 21751     0F2B                     l13133:
 21752     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21753                           
 21754                           ; Switch size 1, requested type "simple"
 21755                           ; Number of cases is 2, Range of values is 65 to 69
 21756                           ; switch strategies available:
 21757                           ; Name         Instructions Cycles
 21758                           ; simple_byte            7     4 (average)
 21759                           ; direct_byte           19     9 (fixed)
 21760                           ; jumptable            263     9 (fixed)
 21761                           ;	Chosen strategy is simple_byte
 21762     0F2C  3A41               	xorlw	65	; case 65
 21763     0F2D  1903               	skipnz
 21764     0F2E  2F0C               	goto	l13115
 21765     0F2F  3A04               	xorlw	4	; case 69
 21766     0F30  1903               	skipnz
 21767     0F31  2F1B               	goto	l13121
 21768     0F32  2F29               	goto	l13127
 21769     0F33                     l13135:
 21770                           
 21771                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21772     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21773     0F34  0084               	movwf	4
 21774     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21775     0F36  0085               	movwf	5
 21776     0F37  3F01               	moviw [1]fsr0
 21777     0F38  008A               	movwf	10
 21778     0F39  3F00               	moviw [0]fsr0
 21779     0F3A  000A               	callw
 21780     0F3B  318E               	pagesel	$
 21781                           
 21782                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21783     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21784     0F3D  0084               	movwf	4
 21785     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21786     0F3F  0085               	movwf	5
 21787     0F40  3F01               	moviw [1]fsr0
 21788     0F41  008A               	movwf	10
 21789     0F42  3F00               	moviw [0]fsr0
 21790     0F43  000A               	callw
 21791     0F44  318E               	pagesel	$
 21792                           
 21793                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21794     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21795     0F46  0084               	movwf	4
 21796     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21797     0F48  0085               	movwf	5
 21798     0F49  3F01               	moviw [1]fsr0
 21799     0F4A  008A               	movwf	10
 21800     0F4B  3F00               	moviw [0]fsr0
 21801     0F4C  000A               	callw
 21802     0F4D  318E               	pagesel	$
 21803                           
 21804                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21805     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21806     0F4F  0084               	movwf	4
 21807     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21808     0F51  0085               	movwf	5
 21809     0F52  3F01               	moviw [1]fsr0
 21810     0F53  008A               	movwf	10
 21811     0F54  3F00               	moviw [0]fsr0
 21812     0F55  000A               	callw
 21813     0F56  318E               	pagesel	$
 21814                           
 21815                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21816     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21817     0F58  0084               	movwf	4
 21818     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21819     0F5A  0085               	movwf	5
 21820     0F5B  3F01               	moviw [1]fsr0
 21821     0F5C  008A               	movwf	10
 21822     0F5D  3F00               	moviw [0]fsr0
 21823     0F5E  000A               	callw
 21824     0F5F  318E               	pagesel	$
 21825                           
 21826                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21827     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21828     0F61  0084               	movwf	4
 21829     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21830     0F63  0085               	movwf	5
 21831     0F64  3F01               	moviw [1]fsr0
 21832     0F65  008A               	movwf	10
 21833     0F66  3F00               	moviw [0]fsr0
 21834     0F67  000A               	callw
 21835     0F68  318E               	pagesel	$
 21836                           
 21837                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21838     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21839     0F6A  0084               	movwf	4
 21840     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21841     0F6C  0085               	movwf	5
 21842     0F6D  3F01               	moviw [1]fsr0
 21843     0F6E  008A               	movwf	10
 21844     0F6F  3F00               	moviw [0]fsr0
 21845     0F70  000A               	callw
 21846     0F71  318E               	pagesel	$
 21847     0F72                     l13137:
 21848                           
 21849                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21850     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21851     0F73                     l1533:
 21852     0F73  0008               	return
 21853     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21854                           
 21855                           	psect	text76
 21856     132E                     __ptext76:	
 21857 ;; *************** function _RN487X_EnterDataMode *****************
 21858 ;; Defined at:
 21859 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21860 ;; Parameters:    Size  Location     Type
 21861 ;;		None
 21862 ;; Auto vars:     Size  Location     Type
 21863 ;;		None
 21864 ;; Return value:  Size  Location     Type
 21865 ;;                  1    wreg      _Bool 
 21866 ;; Registers used:
 21867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21868 ;; Tracked objects:
 21869 ;;		On entry : 0/0
 21870 ;;		On exit  : 0/0
 21871 ;;		Unchanged: 0/0
 21872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21877 ;;Total ram usage:        0 bytes
 21878 ;; Hardware stack levels used: 1
 21879 ;; Hardware stack levels required when called: 7
 21880 ;; This function calls:
 21881 ;;		_RN487X_ReadMsg
 21882 ;;		_RN487X_SendCmd
 21883 ;; This function is called by:
 21884 ;;		_LIGHTBLUE_UpdateErrorLed
 21885 ;; This function uses a non-reentrant model
 21886 ;;
 21887                           
 21888     132E                     _RN487X_EnterDataMode:	
 21889                           ;psect for function _RN487X_EnterDataMode
 21890                           
 21891     132E                     l13229:	
 21892                           ;incstack = 0
 21893                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21894                           
 21895                           
 21896                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21897     132E  302D               	movlw	45
 21898     132F  0143               	movlb	3	; select bank3
 21899     1330  00A0               	movwf	_cmdBuf^(0+384)
 21900                           
 21901                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21902     1331  302D               	movlw	45
 21903     1332  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21904                           
 21905                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21906     1333  302D               	movlw	45
 21907     1334  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21908                           
 21909                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21910     1335  300D               	movlw	13
 21911     1336  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21912                           
 21913                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21914     1337  300A               	movlw	10
 21915     1338  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21916     1339                     l13231:
 21917                           
 21918                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21919     1339  3005               	movlw	5
 21920     133A  00F7               	movwf	RN487X_SendCmd@cmdLen
 21921     133B  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21922     133C  3196  26CF  3193   	fcall	_RN487X_SendCmd
 21923     133F                     l13233:
 21924                           
 21925                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21926     133F  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21927     1340  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21928     1341  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21929     1342  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21930     1343  3005               	movlw	5
 21931     1344  00F5               	movwf	RN487X_ReadMsg@msgLen
 21932     1345  3195  25C0  3193   	fcall	_RN487X_ReadMsg
 21933     1348                     l1551:
 21934     1348  0008               	return
 21935     1349                     __end_of_RN487X_EnterDataMode:
 21936                           
 21937                           	psect	text77
 21938     0800                     __ptext77:	
 21939 ;; *************** function _RN487X_EnterCmdMode *****************
 21940 ;; Defined at:
 21941 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 21942 ;; Parameters:    Size  Location     Type
 21943 ;;		None
 21944 ;; Auto vars:     Size  Location     Type
 21945 ;;		None
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      _Bool 
 21948 ;; Registers used:
 21949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21959 ;;Total ram usage:        0 bytes
 21960 ;; Hardware stack levels used: 1
 21961 ;; Hardware stack levels required when called: 7
 21962 ;; This function calls:
 21963 ;;		_RN487X_ReadMsg
 21964 ;;		_RN487X_SendCmd
 21965 ;; This function is called by:
 21966 ;;		_LIGHTBLUE_UpdateErrorLed
 21967 ;; This function uses a non-reentrant model
 21968 ;;
 21969                           
 21970     0800                     _RN487X_EnterCmdMode:	
 21971                           ;psect for function _RN487X_EnterCmdMode
 21972                           
 21973     0800                     l13177:	
 21974                           ;incstack = 0
 21975                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21976                           
 21977                           
 21978                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 21979     0800  3024               	movlw	36
 21980     0801  0143               	movlb	3	; select bank3
 21981     0802  00A0               	movwf	_cmdBuf^(0+384)
 21982                           
 21983                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 21984     0803  3024               	movlw	36
 21985     0804  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21986                           
 21987                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 21988     0805  3024               	movlw	36
 21989     0806  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21990     0807                     l13179:
 21991                           
 21992                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 21993     0807  3003               	movlw	3
 21994     0808  00F7               	movwf	RN487X_SendCmd@cmdLen
 21995     0809  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21996     080A  3196  26CF  3188   	fcall	_RN487X_SendCmd
 21997     080D                     l13181:
 21998                           
 21999                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22000     080D  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22001     080E  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22002     080F  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22003     0810  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22004     0811  3005               	movlw	5
 22005     0812  00F5               	movwf	RN487X_ReadMsg@msgLen
 22006     0813  3195  25C0  3188   	fcall	_RN487X_ReadMsg
 22007     0816                     l1546:
 22008     0816  0008               	return
 22009     0817                     __end_of_RN487X_EnterCmdMode:
 22010                           
 22011                           	psect	text78
 22012     16CF                     __ptext78:	
 22013 ;; *************** function _RN487X_SendCmd *****************
 22014 ;; Defined at:
 22015 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22016 ;; Parameters:    Size  Location     Type
 22017 ;;  cmd             1    wreg     PTR const unsigned char 
 22018 ;;		 -> cmdBuf(64), 
 22019 ;;  cmdLen          1    7[COMMON] unsigned char 
 22020 ;; Auto vars:     Size  Location     Type
 22021 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22022 ;;		 -> cmdBuf(64), 
 22023 ;;  index           1    9[COMMON] unsigned char 
 22024 ;; Return value:  Size  Location     Type
 22025 ;;                  1    wreg      void 
 22026 ;; Registers used:
 22027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22028 ;; Tracked objects:
 22029 ;;		On entry : 0/0
 22030 ;;		On exit  : 0/0
 22031 ;;		Unchanged: 0/0
 22032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22033 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22037 ;;Total ram usage:        4 bytes
 22038 ;; Hardware stack levels used: 1
 22039 ;; Hardware stack levels required when called: 6
 22040 ;; This function calls:
 22041 ;;		_RN487X_Write
 22042 ;;		_RN487X_is_tx_done
 22043 ;; This function is called by:
 22044 ;;		_RN487X_EnterCmdMode
 22045 ;;		_RN487X_EnterDataMode
 22046 ;;		_RN487X_SetOutputs
 22047 ;;		_RN487X_GetCmd
 22048 ;;		_RN487X_GetInputsValues
 22049 ;;		_RN487X_RebootCmd
 22050 ;;		_RN487X_Disconnect
 22051 ;; This function uses a non-reentrant model
 22052 ;;
 22053                           
 22054     16CF                     _RN487X_SendCmd:	
 22055                           ;psect for function _RN487X_SendCmd
 22056                           
 22057                           
 22058                           ;incstack = 0
 22059                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22060                           ;RN487X_SendCmd@cmd stored from wreg
 22061     16CF  00FA               	movwf	RN487X_SendCmd@cmd
 22062     16D0                     l13079:
 22063                           
 22064                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22065     16D0  01F9               	clrf	RN487X_SendCmd@index
 22066                           
 22067                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22068     16D1  2EF6               	goto	l13087
 22069     16D2                     l13081:
 22070                           
 22071                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22072     16D2  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22073     16D3  0084               	movwf	4
 22074     16D4  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22075     16D5  0085               	movwf	5
 22076     16D6  3F01               	moviw [1]fsr0
 22077     16D7  008A               	movwf	10
 22078     16D8  3F00               	moviw [0]fsr0
 22079     16D9  000A               	callw
 22080     16DA  3196               	pagesel	$
 22081     16DB  3A00               	xorlw	0
 22082     16DC  1903               	skipnz
 22083     16DD  2EDF               	goto	u9851
 22084     16DE  2EE0               	goto	u9850
 22085     16DF                     u9851:
 22086     16DF  2EF6               	goto	l13087
 22087     16E0                     u9850:
 22088     16E0                     l13083:
 22089                           
 22090                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22091     16E0  0879               	movf	RN487X_SendCmd@index,w
 22092     16E1  077A               	addwf	RN487X_SendCmd@cmd,w
 22093     16E2  00F8               	movwf	??_RN487X_SendCmd
 22094     16E3  0878               	movf	??_RN487X_SendCmd,w
 22095     16E4  0086               	movwf	6
 22096     16E5  3001               	movlw	1	; select bank2/3
 22097     16E6  0087               	movwf	7
 22098     16E7  0801               	movf	1,w
 22099     16E8  00F6               	movwf	RN487X_Write@txData
 22100     16E9  3068               	movlw	low (_RN487X| (0+32768))
 22101     16EA  0084               	movwf	4
 22102     16EB  3098               	movlw	high (_RN487X| (0+32768))
 22103     16EC  0085               	movwf	5
 22104     16ED  3F01               	moviw [1]fsr0
 22105     16EE  008A               	movwf	10
 22106     16EF  3F00               	moviw [0]fsr0
 22107     16F0  000A               	callw
 22108     16F1  3196               	pagesel	$
 22109     16F2                     l13085:
 22110                           
 22111                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22112     16F2  3001               	movlw	1
 22113     16F3  00F8               	movwf	??_RN487X_SendCmd
 22114     16F4  0878               	movf	??_RN487X_SendCmd,w
 22115     16F5  07F9               	addwf	RN487X_SendCmd@index,f
 22116     16F6                     l13087:
 22117                           
 22118                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22119     16F6  0877               	movf	RN487X_SendCmd@cmdLen,w
 22120     16F7  0279               	subwf	RN487X_SendCmd@index,w
 22121     16F8  1C03               	skipc
 22122     16F9  2EFB               	goto	u9861
 22123     16FA  2EFC               	goto	u9860
 22124     16FB                     u9861:
 22125     16FB  2ED2               	goto	l13081
 22126     16FC                     u9860:
 22127     16FC                     l1511:
 22128     16FC  0008               	return
 22129     16FD                     __end_of_RN487X_SendCmd:
 22130                           
 22131                           	psect	text79
 22132     1FCD                     __ptext79:	
 22133 ;; *************** function _RN487X_is_tx_done *****************
 22134 ;; Defined at:
 22135 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22136 ;; Parameters:    Size  Location     Type
 22137 ;;		None
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;		None
 22140 ;; Return value:  Size  Location     Type
 22141 ;;                  1    wreg      _Bool 
 22142 ;; Registers used:
 22143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22144 ;; Tracked objects:
 22145 ;;		On entry : 0/0
 22146 ;;		On exit  : 0/0
 22147 ;;		Unchanged: 0/0
 22148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22153 ;;Total ram usage:        0 bytes
 22154 ;; Hardware stack levels used: 1
 22155 ;; Hardware stack levels required when called: 5
 22156 ;; This function calls:
 22157 ;;		_EUSART1_is_tx_done
 22158 ;;		_EUSART2_is_tx_done
 22159 ;; This function is called by:
 22160 ;;		_RN487X_SendCmd
 22161 ;; This function uses a non-reentrant model
 22162 ;;
 22163                           
 22164     1FCD                     _RN487X_is_tx_done:	
 22165                           ;psect for function _RN487X_is_tx_done
 22166                           
 22167     1FCD                     l13025:	
 22168                           ;incstack = 0
 22169                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22170                           
 22171                           
 22172                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22173     1FCD  3022               	movlw	low ((_uart+34)| (0+32768))
 22174     1FCE  0084               	movwf	4
 22175     1FCF  3098               	movlw	high ((_uart+34)| (0+32768))
 22176     1FD0  0085               	movwf	5
 22177     1FD1  3F01               	moviw [1]fsr0
 22178     1FD2  008A               	movwf	10
 22179     1FD3  3F00               	moviw [0]fsr0
 22180     1FD4  000A               	callw
 22181     1FD5  319F               	pagesel	$
 22182     1FD6                     l1417:
 22183     1FD6  0008               	return
 22184     1FD7                     __end_of_RN487X_is_tx_done:
 22185                           
 22186                           	psect	text80
 22187     1000                     __ptext80:	
 22188 ;; *************** function _EUSART1_is_tx_done *****************
 22189 ;; Defined at:
 22190 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;		None
 22193 ;; Auto vars:     Size  Location     Type
 22194 ;;		None
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  1    wreg      _Bool 
 22197 ;; Registers used:
 22198 ;;		wreg, status,2, status,0
 22199 ;; Tracked objects:
 22200 ;;		On entry : 0/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22208 ;;Total ram usage:        0 bytes
 22209 ;; Hardware stack levels used: 1
 22210 ;; Hardware stack levels required when called: 4
 22211 ;; This function calls:
 22212 ;;		Nothing
 22213 ;; This function is called by:
 22214 ;;		_RN487X_is_tx_done
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218     1000                     _EUSART1_is_tx_done:	
 22219                           ;psect for function _EUSART1_is_tx_done
 22220                           
 22221     1000                     l12883:	
 22222                           ;incstack = 0
 22223                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22224                           
 22225                           
 22226                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22227     1000  0142               	movlb	2	; select bank2
 22228     1001  0C1E               	rrf	30,w	;volatile
 22229     1002  3901               	andlw	1
 22230     1003                     l1829:
 22231     1003  0008               	return
 22232     1004                     __end_of_EUSART1_is_tx_done:
 22233                           
 22234                           	psect	text81
 22235     1EC7                     __ptext81:	
 22236 ;; *************** function _EUSART2_is_tx_done *****************
 22237 ;; Defined at:
 22238 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22239 ;; Parameters:    Size  Location     Type
 22240 ;;		None
 22241 ;; Auto vars:     Size  Location     Type
 22242 ;;		None
 22243 ;; Return value:  Size  Location     Type
 22244 ;;                  1    wreg      _Bool 
 22245 ;; Registers used:
 22246 ;;		wreg, status,2, status,0
 22247 ;; Tracked objects:
 22248 ;;		On entry : 0/0
 22249 ;;		On exit  : 0/0
 22250 ;;		Unchanged: 0/0
 22251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22256 ;;Total ram usage:        0 bytes
 22257 ;; Hardware stack levels used: 1
 22258 ;; Hardware stack levels required when called: 4
 22259 ;; This function calls:
 22260 ;;		Nothing
 22261 ;; This function is called by:
 22262 ;;		_RN487X_is_tx_done
 22263 ;; This function uses a non-reentrant model
 22264 ;;
 22265                           
 22266     1EC7                     _EUSART2_is_tx_done:	
 22267                           ;psect for function _EUSART2_is_tx_done
 22268                           
 22269     1EC7                     l12839:	
 22270                           ;incstack = 0
 22271                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22272                           
 22273                           
 22274                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22275     1EC7  0154               	movlb	20	; select bank20
 22276     1EC8  0C1E               	rrf	30,w	;volatile
 22277     1EC9  3901               	andlw	1
 22278     1ECA                     l1685:
 22279     1ECA  0008               	return
 22280     1ECB                     __end_of_EUSART2_is_tx_done:
 22281                           
 22282                           	psect	text82
 22283     15C0                     __ptext82:	
 22284 ;; *************** function _RN487X_ReadMsg *****************
 22285 ;; Defined at:
 22286 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22287 ;; Parameters:    Size  Location     Type
 22288 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22289 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22290 ;;  msgLen          1    5[COMMON] unsigned char 
 22291 ;; Auto vars:     Size  Location     Type
 22292 ;;  index           1    9[COMMON] unsigned char 
 22293 ;;  resp            1    8[COMMON] unsigned char 
 22294 ;; Return value:  Size  Location     Type
 22295 ;;                  1    wreg      _Bool 
 22296 ;; Registers used:
 22297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22298 ;; Tracked objects:
 22299 ;;		On entry : 0/0
 22300 ;;		On exit  : 0/0
 22301 ;;		Unchanged: 0/0
 22302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22307 ;;Total ram usage:        7 bytes
 22308 ;; Hardware stack levels used: 1
 22309 ;; Hardware stack levels required when called: 6
 22310 ;; This function calls:
 22311 ;;		_RN487X_Read@rn487x_interface$F1843
 22312 ;; This function is called by:
 22313 ;;		_RN487X_EnterCmdMode
 22314 ;;		_RN487X_EnterDataMode
 22315 ;;		_RN487X_GetInputsValues
 22316 ;;		_RN487X_RebootCmd
 22317 ;; This function uses a non-reentrant model
 22318 ;;
 22319                           
 22320     15C0                     _RN487X_ReadMsg:	
 22321                           ;psect for function _RN487X_ReadMsg
 22322                           
 22323     15C0                     l13089:	
 22324                           ;incstack = 0
 22325                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22326                           
 22327                           
 22328                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22329     15C0  01F9               	clrf	RN487X_ReadMsg@index
 22330     15C1  2DE3               	goto	l13101
 22331     15C2                     l13091:
 22332                           
 22333                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22334     15C2  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22335     15C3  0084               	movwf	4
 22336     15C4  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22337     15C5  0085               	movwf	5
 22338     15C6  3F01               	moviw [1]fsr0
 22339     15C7  008A               	movwf	10
 22340     15C8  3F00               	moviw [0]fsr0
 22341     15C9  000A               	callw
 22342     15CA  3195               	pagesel	$
 22343     15CB  00F8               	movwf	RN487X_ReadMsg@resp
 22344     15CC                     l13093:
 22345                           
 22346                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22347     15CC  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22348     15CD  00F7               	movwf	??_RN487X_ReadMsg+1
 22349     15CE  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22350     15CF  00F6               	movwf	??_RN487X_ReadMsg
 22351     15D0  0879               	movf	RN487X_ReadMsg@index,w
 22352     15D1  0776               	addwf	??_RN487X_ReadMsg,w
 22353     15D2  0084               	movwf	4
 22354     15D3  0877               	movf	??_RN487X_ReadMsg+1,w
 22355     15D4  1803               	skipnc
 22356     15D5  0A77               	incf	??_RN487X_ReadMsg+1,w
 22357     15D6  0085               	movwf	5
 22358     15D7  0800               	movf	0,w	;code access
 22359     15D8  0678               	xorwf	RN487X_ReadMsg@resp,w
 22360     15D9  1903               	skipnz
 22361     15DA  2DDC               	goto	u9871
 22362     15DB  2DDD               	goto	u9870
 22363     15DC                     u9871:
 22364     15DC  2DDF               	goto	l13099
 22365     15DD                     u9870:
 22366     15DD                     l13095:
 22367                           
 22368                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22369     15DD  3000               	movlw	0
 22370     15DE  2DEA               	goto	l1522
 22371     15DF                     l13099:
 22372                           
 22373                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22374     15DF  3001               	movlw	1
 22375     15E0  00F6               	movwf	??_RN487X_ReadMsg
 22376     15E1  0876               	movf	??_RN487X_ReadMsg,w
 22377     15E2  07F9               	addwf	RN487X_ReadMsg@index,f
 22378     15E3                     l13101:
 22379     15E3  0875               	movf	RN487X_ReadMsg@msgLen,w
 22380     15E4  0279               	subwf	RN487X_ReadMsg@index,w
 22381     15E5  1C03               	skipc
 22382     15E6  2DE8               	goto	u9881
 22383     15E7  2DE9               	goto	u9880
 22384     15E8                     u9881:
 22385     15E8  2DC2               	goto	l13091
 22386     15E9                     u9880:
 22387     15E9                     l13103:
 22388                           
 22389                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22390     15E9  3001               	movlw	1
 22391     15EA                     l1522:
 22392     15EA  0008               	return
 22393     15EB                     __end_of_RN487X_ReadMsg:
 22394                           
 22395                           	psect	text83
 22396     1FC3                     __ptext83:	
 22397 ;; *************** function _RN487X_Read@rn487x_interface$F1843 *****************
 22398 ;; Defined at:
 22399 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22400 ;; Parameters:    Size  Location     Type
 22401 ;;		None
 22402 ;; Auto vars:     Size  Location     Type
 22403 ;;		None
 22404 ;; Return value:  Size  Location     Type
 22405 ;;                  1    wreg      unsigned char 
 22406 ;; Registers used:
 22407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22408 ;; Tracked objects:
 22409 ;;		On entry : 0/0
 22410 ;;		On exit  : 0/0
 22411 ;;		Unchanged: 0/0
 22412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22417 ;;Total ram usage:        0 bytes
 22418 ;; Hardware stack levels used: 1
 22419 ;; Hardware stack levels required when called: 5
 22420 ;; This function calls:
 22421 ;;		_EUSART1_Read
 22422 ;;		_EUSART2_Read
 22423 ;; This function is called by:
 22424 ;;		_RN487X_ReadMsg
 22425 ;;		_RN487X_ReadDefaultResponse
 22426 ;;		_RN487X_FilterData
 22427 ;;		_RN487X_Init
 22428 ;;		_RN487X_GetCmd
 22429 ;;		_RN487X_WaitForMsg
 22430 ;; This function uses a non-reentrant model
 22431 ;;
 22432                           
 22433     1FC3                     _RN487X_Read@rn487x_interface$F1843:	
 22434                           ;psect for function _RN487X_Read@rn487x_interface$F1843
 22435                           
 22436     1FC3                     l13021:	
 22437                           ;incstack = 0
 22438                           ; Regs used in _RN487X_Read@rn487x_interface$F1843: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22439                           
 22440                           
 22441                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22442     1FC3  3014               	movlw	low ((_uart+20)| (0+32768))
 22443     1FC4  0084               	movwf	4
 22444     1FC5  3098               	movlw	high ((_uart+20)| (0+32768))
 22445     1FC6  0085               	movwf	5
 22446     1FC7  3F01               	moviw [1]fsr0
 22447     1FC8  008A               	movwf	10
 22448     1FC9  3F00               	moviw [0]fsr0
 22449     1FCA  000A               	callw
 22450     1FCB  319F               	pagesel	$
 22451     1FCC                     l1414:
 22452     1FCC  0008               	return
 22453     1FCD                     __end_of_RN487X_Read@rn487x_interface$F1843:
 22454                           
 22455                           	psect	text84
 22456     1548                     __ptext84:	
 22457 ;; *************** function _EUSART1_Read *****************
 22458 ;; Defined at:
 22459 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;		None
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;  readValue       1    2[COMMON] unsigned char 
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1    wreg      unsigned char 
 22466 ;; Registers used:
 22467 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22477 ;;Total ram usage:        2 bytes
 22478 ;; Hardware stack levels used: 1
 22479 ;; Hardware stack levels required when called: 4
 22480 ;; This function calls:
 22481 ;;		Nothing
 22482 ;; This function is called by:
 22483 ;;		_getch
 22484 ;;		_RN487X_Read@rn487x_interface$F1843
 22485 ;;		_RN487X_Example_TransparentUart
 22486 ;;		_main
 22487 ;; This function uses a non-reentrant model
 22488 ;;
 22489                           
 22490     1548                     _EUSART1_Read:	
 22491                           ;psect for function _EUSART1_Read
 22492                           
 22493     1548                     l12887:	
 22494                           ;incstack = 0
 22495                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22496                           
 22497     1548                     l12889:	
 22498                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22499                           
 22500                           
 22501                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22502     1548  0140               	movlb	0	; select bank0
 22503     1549  0858               	movf	_eusart1RxCount,w	;volatile
 22504     154A  1903               	btfsc	3,2
 22505     154B  2D4D               	goto	u9681
 22506     154C  2D4E               	goto	u9680
 22507     154D                     u9681:
 22508     154D  2D48               	goto	l12889
 22509     154E                     u9680:
 22510     154E                     l12891:
 22511                           
 22512                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22513     154E  0859               	movf	_eusart1RxTail,w	;volatile
 22514     154F  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22515     1550  0086               	movwf	6
 22516     1551  0187               	clrf	7
 22517     1552  0801               	movf	1,w
 22518     1553  00D7               	movwf	_eusart1RxLastError	;volatile
 22519                           
 22520                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22521     1554  0859               	movf	_eusart1RxTail,w
 22522     1555  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22523     1556  0086               	movwf	6
 22524     1557  3001               	movlw	1	; select bank2/3
 22525     1558  0087               	movwf	7
 22526     1559  0801               	movf	1,w
 22527     155A  00F2               	movwf	EUSART1_Read@readValue
 22528     155B                     l12893:
 22529     155B  3001               	movlw	1
 22530     155C  00F1               	movwf	??_EUSART1_Read
 22531     155D  0871               	movf	??_EUSART1_Read,w
 22532     155E  07D9               	addwf	_eusart1RxTail,f	;volatile
 22533     155F                     l12895:
 22534                           
 22535                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22536     155F  3008               	movlw	8
 22537     1560  0259               	subwf	_eusart1RxTail,w	;volatile
 22538     1561  1C03               	skipc
 22539     1562  2D64               	goto	u9691
 22540     1563  2D65               	goto	u9690
 22541     1564                     u9691:
 22542     1564  2D66               	goto	l12899
 22543     1565                     u9690:
 22544     1565                     l12897:
 22545                           
 22546                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22547     1565  01D9               	clrf	_eusart1RxTail	;volatile
 22548     1566                     l12899:
 22549                           
 22550                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22551     1566  014E               	movlb	14	; select bank14
 22552     1567  1299               	bcf	25,5	;volatile
 22553     1568                     l12901:
 22554                           
 22555                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22556     1568  3001               	movlw	1
 22557     1569  0140               	movlb	0	; select bank0
 22558     156A  02D8               	subwf	_eusart1RxCount,f	;volatile
 22559     156B                     l12903:
 22560                           
 22561                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22562     156B  014E               	movlb	14	; select bank14
 22563     156C  1699               	bsf	25,5	;volatile
 22564     156D                     l12905:
 22565                           
 22566                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22567     156D  0872               	movf	EUSART1_Read@readValue,w
 22568     156E                     l1839:
 22569     156E  0008               	return
 22570     156F                     __end_of_EUSART1_Read:
 22571                           
 22572                           	psect	text85
 22573     14D4                     __ptext85:	
 22574 ;; *************** function _EUSART2_Read *****************
 22575 ;; Defined at:
 22576 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;		None
 22579 ;; Auto vars:     Size  Location     Type
 22580 ;;  readValue       1    2[COMMON] unsigned char 
 22581 ;; Return value:  Size  Location     Type
 22582 ;;                  1    wreg      unsigned char 
 22583 ;; Registers used:
 22584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22585 ;; Tracked objects:
 22586 ;;		On entry : 0/0
 22587 ;;		On exit  : 0/0
 22588 ;;		Unchanged: 0/0
 22589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22594 ;;Total ram usage:        2 bytes
 22595 ;; Hardware stack levels used: 1
 22596 ;; Hardware stack levels required when called: 4
 22597 ;; This function calls:
 22598 ;;		Nothing
 22599 ;; This function is called by:
 22600 ;;		_RN487X_Read@rn487x_interface$F1843
 22601 ;;		_RN487X_Example_TransparentUart
 22602 ;;		_main
 22603 ;; This function uses a non-reentrant model
 22604 ;;
 22605                           
 22606     14D4                     _EUSART2_Read:	
 22607                           ;psect for function _EUSART2_Read
 22608                           
 22609     14D4                     l12843:	
 22610                           ;incstack = 0
 22611                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22612                           
 22613     14D4                     l12845:	
 22614                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22615                           
 22616                           
 22617                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22618     14D4  0140               	movlb	0	; select bank0
 22619     14D5  085F               	movf	_eusart2RxCount,w	;volatile
 22620     14D6  1903               	btfsc	3,2
 22621     14D7  2CD9               	goto	u9631
 22622     14D8  2CDA               	goto	u9630
 22623     14D9                     u9631:
 22624     14D9  2CD4               	goto	l12845
 22625     14DA                     u9630:
 22626     14DA                     l12847:
 22627                           
 22628                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22629     14DA  0860               	movf	_eusart2RxTail,w	;volatile
 22630     14DB  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22631     14DC  0086               	movwf	6
 22632     14DD  0187               	clrf	7
 22633     14DE  0801               	movf	1,w
 22634     14DF  00DE               	movwf	_eusart2RxLastError	;volatile
 22635                           
 22636                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22637     14E0  0860               	movf	_eusart2RxTail,w
 22638     14E1  3ED6               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22639     14E2  0086               	movwf	6
 22640     14E3  0187               	clrf	7
 22641     14E4  0801               	movf	1,w
 22642     14E5  00F2               	movwf	EUSART2_Read@readValue
 22643     14E6                     l12849:
 22644     14E6  3001               	movlw	1
 22645     14E7  00F1               	movwf	??_EUSART2_Read
 22646     14E8  0871               	movf	??_EUSART2_Read,w
 22647     14E9  07E0               	addwf	_eusart2RxTail,f	;volatile
 22648     14EA                     l12851:
 22649                           
 22650                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22651     14EA  3008               	movlw	8
 22652     14EB  0260               	subwf	_eusart2RxTail,w	;volatile
 22653     14EC  1C03               	skipc
 22654     14ED  2CEF               	goto	u9641
 22655     14EE  2CF0               	goto	u9640
 22656     14EF                     u9641:
 22657     14EF  2CF1               	goto	l12855
 22658     14F0                     u9640:
 22659     14F0                     l12853:
 22660                           
 22661                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22662     14F0  01E0               	clrf	_eusart2RxTail	;volatile
 22663     14F1                     l12855:
 22664                           
 22665                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22666     14F1  014E               	movlb	14	; select bank14
 22667     14F2  1399               	bcf	25,7	;volatile
 22668     14F3                     l12857:
 22669                           
 22670                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22671     14F3  3001               	movlw	1
 22672     14F4  0140               	movlb	0	; select bank0
 22673     14F5  02DF               	subwf	_eusart2RxCount,f	;volatile
 22674     14F6                     l12859:
 22675                           
 22676                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22677     14F6  014E               	movlb	14	; select bank14
 22678     14F7  1799               	bsf	25,7	;volatile
 22679     14F8                     l12861:
 22680                           
 22681                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22682     14F8  0872               	movf	EUSART2_Read@readValue,w
 22683     14F9                     l1695:
 22684     14F9  0008               	return
 22685     14FA                     __end_of_EUSART2_Read:
 22686                           
 22687                           	psect	text86
 22688     1F8E                     __ptext86:	
 22689 ;; *************** function _RN487X_Delay *****************
 22690 ;; Defined at:
 22691 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22692 ;; Parameters:    Size  Location     Type
 22693 ;;  delayCount      2    4[COMMON] unsigned short 
 22694 ;; Auto vars:     Size  Location     Type
 22695 ;;		None
 22696 ;; Return value:  Size  Location     Type
 22697 ;;                  1    wreg      void 
 22698 ;; Registers used:
 22699 ;;		wreg, status,2, status,0, pclath, cstack
 22700 ;; Tracked objects:
 22701 ;;		On entry : 0/0
 22702 ;;		On exit  : 0/0
 22703 ;;		Unchanged: 0/0
 22704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22709 ;;Total ram usage:        2 bytes
 22710 ;; Hardware stack levels used: 1
 22711 ;; Hardware stack levels required when called: 5
 22712 ;; This function calls:
 22713 ;;		_DELAY_milliseconds
 22714 ;; This function is called by:
 22715 ;;		_LIGHTBLUE_UpdateErrorLed
 22716 ;;		_RN487X_Init
 22717 ;; This function uses a non-reentrant model
 22718 ;;
 22719                           
 22720     1F8E                     _RN487X_Delay:	
 22721                           ;psect for function _RN487X_Delay
 22722                           
 22723     1F8E                     l13237:	
 22724                           ;incstack = 0
 22725                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22726                           
 22727                           
 22728                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22729     1F8E  0875               	movf	RN487X_Delay@delayCount+1,w
 22730     1F8F  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22731     1F90  0874               	movf	RN487X_Delay@delayCount,w
 22732     1F91  00F1               	movwf	DELAY_milliseconds@milliseconds
 22733     1F92  3191  21F2  319F   	fcall	_DELAY_milliseconds
 22734     1F95                     l1423:
 22735     1F95  0008               	return
 22736     1F96                     __end_of_RN487X_Delay:
 22737                           
 22738                           	psect	text87
 22739     11F2                     __ptext87:	
 22740 ;; *************** function _DELAY_milliseconds *****************
 22741 ;; Defined at:
 22742 ;;		line 38 in file "mcc_generated_files/delay.c"
 22743 ;; Parameters:    Size  Location     Type
 22744 ;;  milliseconds    2    1[COMMON] unsigned short 
 22745 ;; Auto vars:     Size  Location     Type
 22746 ;;		None
 22747 ;; Return value:  Size  Location     Type
 22748 ;;                  1    wreg      void 
 22749 ;; Registers used:
 22750 ;;		wreg, status,2, status,0
 22751 ;; Tracked objects:
 22752 ;;		On entry : 0/0
 22753 ;;		On exit  : 0/0
 22754 ;;		Unchanged: 0/0
 22755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22760 ;;Total ram usage:        3 bytes
 22761 ;; Hardware stack levels used: 1
 22762 ;; Hardware stack levels required when called: 4
 22763 ;; This function calls:
 22764 ;;		Nothing
 22765 ;; This function is called by:
 22766 ;;		_RN487X_Delay
 22767 ;; This function uses a non-reentrant model
 22768 ;;
 22769                           
 22770     11F2                     _DELAY_milliseconds:	
 22771                           ;psect for function _DELAY_milliseconds
 22772                           
 22773     11F2                     l13069:	
 22774                           ;incstack = 0
 22775                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22776                           
 22777                           
 22778                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22779     11F2  29FB               	goto	l13073
 22780     11F3                     l13071:
 22781                           
 22782                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22783     11F3  300B               	movlw	11
 22784     11F4  00F3               	movwf	??_DELAY_milliseconds
 22785     11F5  3062               	movlw	98
 22786     11F6                     u14047:
 22787     11F6  0B89               	decfsz	9,f
 22788     11F7  29F6               	goto	u14047
 22789     11F8  0BF3               	decfsz	??_DELAY_milliseconds,f
 22790     11F9  29F6               	goto	u14047
 22791     11FA  3200               	nop2
 22792     11FB                     l13073:
 22793                           
 22794                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22795     11FB  3001               	movlw	1
 22796     11FC  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22797     11FD  3000               	movlw	0
 22798     11FE  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22799     11FF  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22800     1200  1D03               	skipz
 22801     1201  2A06               	goto	u9831
 22802     1202  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22803     1203  1D03               	btfss	3,2
 22804     1204  2A06               	goto	u9831
 22805     1205  2A07               	goto	u9830
 22806     1206                     u9831:
 22807     1206  29F3               	goto	l13071
 22808     1207                     u9830:
 22809     1207                     l2605:
 22810     1207  0008               	return
 22811     1208                     __end_of_DELAY_milliseconds:
 22812                           
 22813                           	psect	text88
 22814     14AE                     __ptext88:	
 22815 ;; *************** function _LIGHTBLUE_LedState *****************
 22816 ;; Defined at:
 22817 ;;		line 354 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22818 ;; Parameters:    Size  Location     Type
 22819 ;;		None
 22820 ;; Auto vars:     Size  Location     Type
 22821 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22822 ;;  led             1    3[BANK0 ] unsigned char 
 22823 ;; Return value:  Size  Location     Type
 22824 ;;                  1    wreg      void 
 22825 ;; Registers used:
 22826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22827 ;; Tracked objects:
 22828 ;;		On entry : 0/0
 22829 ;;		On exit  : 0/0
 22830 ;;		Unchanged: 0/0
 22831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22833 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22836 ;;Total ram usage:        4 bytes
 22837 ;; Hardware stack levels used: 1
 22838 ;; Hardware stack levels required when called: 7
 22839 ;; This function calls:
 22840 ;;		_LIGHTBLUE_GetDataLedValue
 22841 ;;		_LIGHTBLUE_GetErrorLedValue
 22842 ;;		_LIGHTBLUE_SendPacket
 22843 ;;		_LIGHTBLUE_SplitByte
 22844 ;; This function is called by:
 22845 ;;		_main
 22846 ;; This function uses a non-reentrant model
 22847 ;;
 22848                           
 22849     14AE                     _LIGHTBLUE_LedState:	
 22850                           ;psect for function _LIGHTBLUE_LedState
 22851                           
 22852     14AE                     l14321:	
 22853                           ;incstack = 0
 22854                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22855                           
 22856                           
 22857                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 355:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 356:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 358:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22858     14AE  319F  271E  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22859     14B1  0140               	movlb	0	; select bank0
 22860     14B2  00A3               	movwf	LIGHTBLUE_LedState@led
 22861     14B3                     l14323:
 22862                           
 22863                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 360:     *payload = '\0';
 22864     14B3  01A0               	clrf	LIGHTBLUE_LedState@payload
 22865     14B4                     l14325:
 22866                           
 22867                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22868     14B4  0823               	movf	LIGHTBLUE_LedState@led,w
 22869     14B5  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22870     14B6  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22871     14B7  3196  26FD  3194   	fcall	_LIGHTBLUE_SplitByte
 22872     14BA                     l14327:
 22873                           
 22874                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22875     14BA  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22876     14BB  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22877     14BC  304C               	movlw	76
 22878     14BD  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22879     14C0                     l14329:
 22880                           
 22881                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22882     14C0  319F  2702  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22883     14C3  3E10               	addlw	16
 22884     14C4  0140               	movlb	0	; select bank0
 22885     14C5  00A3               	movwf	LIGHTBLUE_LedState@led
 22886                           
 22887                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 366:     *payload = '\0';
 22888     14C6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22889     14C7                     l14331:
 22890                           
 22891                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22892     14C7  0823               	movf	LIGHTBLUE_LedState@led,w
 22893     14C8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22894     14C9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22895     14CA  3196  26FD  3194   	fcall	_LIGHTBLUE_SplitByte
 22896     14CD                     l14333:
 22897                           
 22898                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 369:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22899     14CD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22900     14CE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22901     14CF  304C               	movlw	76
 22902     14D0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22903     14D3                     l133:
 22904     14D3  0008               	return
 22905     14D4                     __end_of_LIGHTBLUE_LedState:
 22906                           
 22907                           	psect	text89
 22908     1F02                     __ptext89:	
 22909 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22910 ;; Defined at:
 22911 ;;		line 485 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;		None
 22914 ;; Auto vars:     Size  Location     Type
 22915 ;;		None
 22916 ;; Return value:  Size  Location     Type
 22917 ;;                  1    wreg      unsigned char 
 22918 ;; Registers used:
 22919 ;;		wreg, status,2, status,0
 22920 ;; Tracked objects:
 22921 ;;		On entry : 0/0
 22922 ;;		On exit  : 0/0
 22923 ;;		Unchanged: 0/0
 22924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22929 ;;Total ram usage:        0 bytes
 22930 ;; Hardware stack levels used: 1
 22931 ;; Hardware stack levels required when called: 4
 22932 ;; This function calls:
 22933 ;;		Nothing
 22934 ;; This function is called by:
 22935 ;;		_LIGHTBLUE_LedState
 22936 ;; This function uses a non-reentrant model
 22937 ;;
 22938                           
 22939     1F02                     _LIGHTBLUE_GetErrorLedValue:	
 22940                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 22941                           
 22942     1F02                     l13591:	
 22943                           ;incstack = 0
 22944                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 22945                           
 22946                           
 22947                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 486:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 22948     1F02  0140               	movlb	0	; select bank0
 22949     1F03  0855               	movf	_bitMap+1,w	;volatile
 22950     1F04  3901               	andlw	1
 22951     1F05  3C01               	sublw	1
 22952     1F06                     l208:
 22953     1F06  0008               	return
 22954     1F07                     __end_of_LIGHTBLUE_GetErrorLedValue:
 22955                           
 22956                           	psect	text90
 22957     1F1E                     __ptext90:	
 22958 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 22959 ;; Defined at:
 22960 ;;		line 481 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22961 ;; Parameters:    Size  Location     Type
 22962 ;;		None
 22963 ;; Auto vars:     Size  Location     Type
 22964 ;;		None
 22965 ;; Return value:  Size  Location     Type
 22966 ;;                  1    wreg      unsigned char 
 22967 ;; Registers used:
 22968 ;;		wreg, status,2, status,0
 22969 ;; Tracked objects:
 22970 ;;		On entry : 0/0
 22971 ;;		On exit  : 0/0
 22972 ;;		Unchanged: 0/0
 22973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22978 ;;Total ram usage:        0 bytes
 22979 ;; Hardware stack levels used: 1
 22980 ;; Hardware stack levels required when called: 4
 22981 ;; This function calls:
 22982 ;;		Nothing
 22983 ;; This function is called by:
 22984 ;;		_LIGHTBLUE_LedState
 22985 ;; This function uses a non-reentrant model
 22986 ;;
 22987                           
 22988     1F1E                     _LIGHTBLUE_GetDataLedValue:	
 22989                           ;psect for function _LIGHTBLUE_GetDataLedValue
 22990                           
 22991     1F1E                     l13587:	
 22992                           ;incstack = 0
 22993                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 22994                           
 22995                           
 22996                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 482:     return (0x01) - PORTAbits
      +                          .RA5;
 22997     1F1E  0140               	movlb	0	; select bank0
 22998     1F1F  0E0C               	swapf	12,w	;volatile
 22999     1F20  0C89               	rrf	9,f
 23000     1F21  3901               	andlw	1
 23001     1F22  3C01               	sublw	1
 23002     1F23                     l205:
 23003     1F23  0008               	return
 23004     1F24                     __end_of_LIGHTBLUE_GetDataLedValue:
 23005                           
 23006                           	psect	text91
 23007     1F18                     __ptext91:	
 23008 ;; *************** function _LIGHTBLUE_Initialize *****************
 23009 ;; Defined at:
 23010 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23011 ;; Parameters:    Size  Location     Type
 23012 ;;		None
 23013 ;; Auto vars:     Size  Location     Type
 23014 ;;		None
 23015 ;; Return value:  Size  Location     Type
 23016 ;;                  1    wreg      void 
 23017 ;; Registers used:
 23018 ;;		wreg
 23019 ;; Tracked objects:
 23020 ;;		On entry : 0/0
 23021 ;;		On exit  : 0/0
 23022 ;;		Unchanged: 0/0
 23023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23028 ;;Total ram usage:        0 bytes
 23029 ;; Hardware stack levels used: 1
 23030 ;; Hardware stack levels required when called: 4
 23031 ;; This function calls:
 23032 ;;		Nothing
 23033 ;; This function is called by:
 23034 ;;		_main
 23035 ;; This function uses a non-reentrant model
 23036 ;;
 23037                           
 23038     1F18                     _LIGHTBLUE_Initialize:	
 23039                           ;psect for function _LIGHTBLUE_Initialize
 23040                           
 23041     1F18                     l14291:	
 23042                           ;incstack = 0
 23043                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23044                           
 23045                           
 23046                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23047     1F18  3001               	movlw	1
 23048     1F19  0140               	movlb	0	; select bank0
 23049     1F1A  00D4               	movwf	_bitMap	;volatile
 23050                           
 23051                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23052     1F1B  3001               	movlw	1
 23053     1F1C  00D5               	movwf	_bitMap+1	;volatile
 23054     1F1D                     l121:
 23055     1F1D  0008               	return
 23056     1F1E                     __end_of_LIGHTBLUE_Initialize:
 23057                           
 23058                           	psect	text92
 23059     16A1                     __ptext92:	
 23060 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23061 ;; Defined at:
 23062 ;;		line 328 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23063 ;; Parameters:    Size  Location     Type
 23064 ;;		None
 23065 ;; Auto vars:     Size  Location     Type
 23066 ;;  payload        13   22[BANK0 ] unsigned char [13]
 23067 ;;  accelData       6   35[BANK0 ] struct .
 23068 ;; Return value:  Size  Location     Type
 23069 ;;                  1    wreg      void 
 23070 ;; Registers used:
 23071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23072 ;; Tracked objects:
 23073 ;;		On entry : 0/0
 23074 ;;		On exit  : 0/0
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23078 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23080 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23081 ;;Total ram usage:       19 bytes
 23082 ;; Hardware stack levels used: 1
 23083 ;; Hardware stack levels required when called: 16
 23084 ;; This function calls:
 23085 ;;		_BMA253_GetAccelDataXYZ
 23086 ;;		_LIGHTBLUE_SendPacket
 23087 ;;		_LIGHTBLUE_SplitWord
 23088 ;; This function is called by:
 23089 ;;		_main
 23090 ;; This function uses a non-reentrant model
 23091 ;;
 23092                           
 23093     16A1                     _LIGHTBLUE_AccelSensor:	
 23094                           ;psect for function _LIGHTBLUE_AccelSensor
 23095                           
 23096     16A1                     l14301:	
 23097                           ;incstack = 0
 23098 ;; hardware stack exceeded
 23099                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23100                           
 23101                           
 23102                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 329:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 330:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 333:     *payload = '\0';
 23103     16A1  0140               	movlb	0	; select bank0
 23104     16A2  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 23105     16A3                     l14303:
 23106                           
 23107                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 334:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23108     16A3  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23109     16A4  318C  2448  3196   	fcall	_BMA253_GetAccelDataXYZ
 23110     16A7                     l14305:
 23111                           
 23112                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23113     16A7  30FF               	movlw	255
 23114     16A8  0140               	movlb	0	; select bank0
 23115     16A9  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23116     16AA  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23117     16AB  300F               	movlw	15
 23118     16AC  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23119     16AD  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23120     16AE  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23121     16AF  3190  2087  3196   	fcall	_LIGHTBLUE_SplitWord
 23122     16B2                     l14307:
 23123                           
 23124                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23125     16B2  30FF               	movlw	255
 23126     16B3  0140               	movlb	0	; select bank0
 23127     16B4  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23128     16B5  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23129     16B6  300F               	movlw	15
 23130     16B7  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23131     16B8  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23132     16B9  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23133     16BA  3190  2087  3196   	fcall	_LIGHTBLUE_SplitWord
 23134     16BD                     l14309:
 23135                           
 23136                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23137     16BD  30FF               	movlw	255
 23138     16BE  0140               	movlb	0	; select bank0
 23139     16BF  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23140     16C0  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23141     16C1  300F               	movlw	15
 23142     16C2  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23143     16C3  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23144     16C4  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23145     16C5  3190  2087  3196   	fcall	_LIGHTBLUE_SplitWord
 23146     16C8                     l14311:
 23147                           
 23148                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 341:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23149     16C8  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23150     16C9  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23151     16CA  3058               	movlw	88
 23152     16CB  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 23153     16CE                     l127:
 23154     16CE  0008               	return
 23155     16CF                     __end_of_LIGHTBLUE_AccelSensor:
 23156                           
 23157                           	psect	text93
 23158     1087                     __ptext93:	
 23159 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23160 ;; Defined at:
 23161 ;;		line 465 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23162 ;; Parameters:    Size  Location     Type
 23163 ;;  payload         1    wreg     PTR unsigned char 
 23164 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23165 ;;  value           2    9[COMMON] short 
 23166 ;; Auto vars:     Size  Location     Type
 23167 ;;  payload         1   11[COMMON] PTR unsigned char 
 23168 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23169 ;; Return value:  Size  Location     Type
 23170 ;;                  1    wreg      void 
 23171 ;; Registers used:
 23172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23173 ;; Tracked objects:
 23174 ;;		On entry : 0/0
 23175 ;;		On exit  : 0/0
 23176 ;;		Unchanged: 0/0
 23177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23182 ;;Total ram usage:        3 bytes
 23183 ;; Hardware stack levels used: 1
 23184 ;; Hardware stack levels required when called: 6
 23185 ;; This function calls:
 23186 ;;		_LIGHTBLUE_SplitByte
 23187 ;; This function is called by:
 23188 ;;		_LIGHTBLUE_TemperatureSensor
 23189 ;;		_LIGHTBLUE_AccelSensor
 23190 ;; This function uses a non-reentrant model
 23191 ;;
 23192                           
 23193     1087                     _LIGHTBLUE_SplitWord:	
 23194                           ;psect for function _LIGHTBLUE_SplitWord
 23195                           
 23196                           
 23197                           ;incstack = 0
 23198                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23199                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23200     1087  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23201     1088                     l13563:
 23202                           
 23203                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 466:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23204     1088  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23205     1089  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23206     108A  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23207     108B  3196  26FD  3190   	fcall	_LIGHTBLUE_SplitByte
 23208                           
 23209                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 467:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23210     108E  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23211     108F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23212     1090  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23213     1091  3196  26FD  3190   	fcall	_LIGHTBLUE_SplitByte
 23214     1094                     l196:
 23215     1094  0008               	return
 23216     1095                     __end_of_LIGHTBLUE_SplitWord:
 23217                           
 23218                           	psect	text94
 23219     16FD                     __ptext94:	
 23220 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23221 ;; Defined at:
 23222 ;;		line 470 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23223 ;; Parameters:    Size  Location     Type
 23224 ;;  payload         1    wreg     PTR unsigned char 
 23225 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23226 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23227 ;;  value           1    6[COMMON] char 
 23228 ;; Auto vars:     Size  Location     Type
 23229 ;;  payload         1    8[COMMON] PTR unsigned char 
 23230 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23231 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23232 ;; Return value:  Size  Location     Type
 23233 ;;                  1    wreg      void 
 23234 ;; Registers used:
 23235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23236 ;; Tracked objects:
 23237 ;;		On entry : 0/0
 23238 ;;		On exit  : 0/0
 23239 ;;		Unchanged: 0/0
 23240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23241 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23244 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23245 ;;Total ram usage:        3 bytes
 23246 ;; Hardware stack levels used: 1
 23247 ;; Hardware stack levels required when called: 5
 23248 ;; This function calls:
 23249 ;;		_strlen
 23250 ;; This function is called by:
 23251 ;;		_LIGHTBLUE_PushButton
 23252 ;;		_LIGHTBLUE_LedState
 23253 ;;		_LIGHTBLUE_SendProtocolVersion
 23254 ;;		_LIGHTBLUE_SplitWord
 23255 ;; This function uses a non-reentrant model
 23256 ;;
 23257                           
 23258     16FD                     _LIGHTBLUE_SplitByte:	
 23259                           ;psect for function _LIGHTBLUE_SplitByte
 23260                           
 23261                           
 23262                           ;incstack = 0
 23263                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23264                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23265     16FD  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23266     16FE                     l13403:
 23267                           
 23268                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     payload += strlen(payload
      +                          );
 23269     16FE  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23270     16FF  00F1               	movwf	strlen@s
 23271     1700  01F2               	clrf	strlen@s+1
 23272     1701  3192  2292  3196   	fcall	_strlen
 23273     1704  0871               	movf	?_strlen,w
 23274     1705  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23275     1706  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23276     1707  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23277     1708                     l13405:
 23278                           
 23279                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23280     1708  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23281     1709  0086               	movwf	6
 23282     170A  0187               	clrf	7
 23283     170B  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23284     170C  390F               	andlw	15
 23285     170D  1989               	btfsc	9,3
 23286     170E  38F0               	iorlw	240
 23287     170F  390F               	andlw	15
 23288     1710  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23289     1711  0084               	movwf	4
 23290     1712  3001               	movlw	1	; select bank2/3
 23291     1713  0085               	movwf	5
 23292     1714  0800               	movf	0,w
 23293     1715  0081               	movwf	1
 23294     1716                     l13407:
 23295     1716  3001               	movlw	1
 23296     1717  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23297     1718  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23298     1719  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23299     171A                     l13409:
 23300                           
 23301                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 473:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23302     171A  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23303     171B  0086               	movwf	6
 23304     171C  0187               	clrf	7
 23305     171D  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23306     171E  390F               	andlw	15
 23307     171F  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23308     1720  0084               	movwf	4
 23309     1721  3001               	movlw	1	; select bank2/3
 23310     1722  0085               	movwf	5
 23311     1723  0800               	movf	0,w
 23312     1724  0081               	movwf	1
 23313     1725                     l13411:
 23314     1725  3001               	movlw	1
 23315     1726  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23316     1727  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23317     1728  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23318     1729                     l13413:
 23319                           
 23320                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 474:     *payload = '\0';
 23321     1729  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23322     172A  0086               	movwf	6
 23323     172B  0187               	clrf	7
 23324     172C  0181               	clrf	1
 23325     172D                     l199:
 23326     172D  0008               	return
 23327     172E                     __end_of_LIGHTBLUE_SplitByte:
 23328                           
 23329                           	psect	text95
 23330     0F74                     __ptext95:	
 23331 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23332 ;; Defined at:
 23333 ;;		line 453 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;  packetID        1    wreg     unsigned char 
 23336 ;;  payload         1    7[COMMON] PTR unsigned char 
 23337 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23338 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23339 ;; Auto vars:     Size  Location     Type
 23340 ;;  packetID        1   10[COMMON] unsigned char 
 23341 ;; Return value:  Size  Location     Type
 23342 ;;                  1    wreg      void 
 23343 ;; Registers used:
 23344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23345 ;; Tracked objects:
 23346 ;;		On entry : 0/0
 23347 ;;		On exit  : 0/0
 23348 ;;		Unchanged: 0/0
 23349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23350 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23354 ;;Total ram usage:        4 bytes
 23355 ;; Hardware stack levels used: 1
 23356 ;; Hardware stack levels required when called: 6
 23357 ;; This function calls:
 23358 ;;		_RN487X_Write
 23359 ;;		_strlen
 23360 ;; This function is called by:
 23361 ;;		_LIGHTBLUE_TemperatureSensor
 23362 ;;		_LIGHTBLUE_AccelSensor
 23363 ;;		_LIGHTBLUE_PushButton
 23364 ;;		_LIGHTBLUE_LedState
 23365 ;;		_LIGHTBLUE_SendProtocolVersion
 23366 ;; This function uses a non-reentrant model
 23367 ;;
 23368                           
 23369     0F74                     _LIGHTBLUE_SendPacket:	
 23370                           ;psect for function _LIGHTBLUE_SendPacket
 23371                           
 23372                           
 23373                           ;incstack = 0
 23374                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23375                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23376     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23377     0F75                     l13565:
 23378                           
 23379                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(('['));
 23380     0F75  305B               	movlw	91
 23381     0F76  00F6               	movwf	RN487X_Write@txData
 23382     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23383     0F78  0084               	movwf	4
 23384     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23385     0F7A  0085               	movwf	5
 23386     0F7B  3F01               	moviw [1]fsr0
 23387     0F7C  008A               	movwf	10
 23388     0F7D  3F00               	moviw [0]fsr0
 23389     0F7E  000A               	callw
 23390     0F7F  318F               	pagesel	$
 23391                           
 23392                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23393     0F80  0140               	movlb	0	; select bank0
 23394     0F81  086C               	movf	_sequenceNumber,w
 23395     0F82  390F               	andlw	15
 23396     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23397     0F84  0086               	movwf	6
 23398     0F85  3001               	movlw	1	; select bank2/3
 23399     0F86  0087               	movwf	7
 23400     0F87  0801               	movf	1,w
 23401     0F88  00F6               	movwf	RN487X_Write@txData
 23402     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23403     0F8A  0084               	movwf	4
 23404     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23405     0F8C  0085               	movwf	5
 23406     0F8D  3F01               	moviw [1]fsr0
 23407     0F8E  008A               	movwf	10
 23408     0F8F  3F00               	moviw [0]fsr0
 23409     0F90  000A               	callw
 23410     0F91  318F               	pagesel	$
 23411     0F92                     l13567:
 23412     0F92  3001               	movlw	1
 23413     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23414     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23415     0F95  0140               	movlb	0	; select bank0
 23416     0F96  07EC               	addwf	_sequenceNumber,f
 23417     0F97                     l13569:
 23418                           
 23419                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write(packetID);
 23420     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23421     0F98  00F6               	movwf	RN487X_Write@txData
 23422     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23423     0F9A  0084               	movwf	4
 23424     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23425     0F9C  0085               	movwf	5
 23426     0F9D  3F01               	moviw [1]fsr0
 23427     0F9E  008A               	movwf	10
 23428     0F9F  3F00               	moviw [0]fsr0
 23429     0FA0  000A               	callw
 23430     0FA1  318F               	pagesel	$
 23431     0FA2                     l13571:
 23432                           
 23433                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23434     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23435     0FA3  00F1               	movwf	strlen@s
 23436     0FA4  01F2               	clrf	strlen@s+1
 23437     0FA5  3192  2292  318F   	fcall	_strlen
 23438     0FA8  0871               	movf	?_strlen,w
 23439     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23440     0FAA  0872               	movf	?_strlen+1,w
 23441     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23442     0FAC  3004               	movlw	4
 23443     0FAD                     u10425:
 23444     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23445     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23446     0FAF  0B89               	decfsz	9,f
 23447     0FB0  2FAD               	goto	u10425
 23448     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23449     0FB2  390F               	andlw	15
 23450     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23451     0FB4  0086               	movwf	6
 23452     0FB5  3001               	movlw	1	; select bank2/3
 23453     0FB6  0087               	movwf	7
 23454     0FB7  0801               	movf	1,w
 23455     0FB8  00F6               	movwf	RN487X_Write@txData
 23456     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23457     0FBA  0084               	movwf	4
 23458     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23459     0FBC  0085               	movwf	5
 23460     0FBD  3F01               	moviw [1]fsr0
 23461     0FBE  008A               	movwf	10
 23462     0FBF  3F00               	moviw [0]fsr0
 23463     0FC0  000A               	callw
 23464     0FC1  318F               	pagesel	$
 23465     0FC2                     l13573:
 23466                           
 23467                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23468     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23469     0FC3  00F1               	movwf	strlen@s
 23470     0FC4  01F2               	clrf	strlen@s+1
 23471     0FC5  3192  2292  318F   	fcall	_strlen
 23472     0FC8  0871               	movf	?_strlen,w
 23473     0FC9  390F               	andlw	15
 23474     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23475     0FCB  0086               	movwf	6
 23476     0FCC  3001               	movlw	1	; select bank2/3
 23477     0FCD  0087               	movwf	7
 23478     0FCE  0801               	movf	1,w
 23479     0FCF  00F6               	movwf	RN487X_Write@txData
 23480     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23481     0FD1  0084               	movwf	4
 23482     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23483     0FD3  0085               	movwf	5
 23484     0FD4  3F01               	moviw [1]fsr0
 23485     0FD5  008A               	movwf	10
 23486     0FD6  3F00               	moviw [0]fsr0
 23487     0FD7  000A               	callw
 23488     0FD8  318F               	pagesel	$
 23489                           
 23490                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:     while (*payload) {
 23491     0FD9  2FEC               	goto	l13579
 23492     0FDA                     l13575:
 23493                           
 23494                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23495     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23496     0FDB  0086               	movwf	6
 23497     0FDC  0187               	clrf	7
 23498     0FDD  0801               	movf	1,w
 23499     0FDE  00F6               	movwf	RN487X_Write@txData
 23500     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23501     0FE0  0084               	movwf	4
 23502     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23503     0FE2  0085               	movwf	5
 23504     0FE3  3F01               	moviw [1]fsr0
 23505     0FE4  008A               	movwf	10
 23506     0FE5  3F00               	moviw [0]fsr0
 23507     0FE6  000A               	callw
 23508     0FE7  318F               	pagesel	$
 23509     0FE8                     l13577:
 23510     0FE8  3001               	movlw	1
 23511     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23512     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23513     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23514     0FEC                     l13579:
 23515                           
 23516                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:     while (*payload) {
 23517     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23518     0FED  0086               	movwf	6
 23519     0FEE  0187               	clrf	7
 23520     0FEF  0801               	movf	1,w
 23521     0FF0  1D03               	btfss	3,2
 23522     0FF1  2FF3               	goto	u10431
 23523     0FF2  2FF4               	goto	u10430
 23524     0FF3                     u10431:
 23525     0FF3  2FDA               	goto	l13575
 23526     0FF4                     u10430:
 23527     0FF4                     l13581:
 23528                           
 23529                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 462:     RN487X.Write((']'));
 23530     0FF4  305D               	movlw	93
 23531     0FF5  00F6               	movwf	RN487X_Write@txData
 23532     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23533     0FF7  0084               	movwf	4
 23534     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23535     0FF9  0085               	movwf	5
 23536     0FFA  3F01               	moviw [1]fsr0
 23537     0FFB  008A               	movwf	10
 23538     0FFC  3F00               	moviw [0]fsr0
 23539     0FFD  000A               	callw
 23540     0FFE  318F               	pagesel	$
 23541     0FFF                     l193:
 23542     0FFF  0008               	return
 23543     1000                     __end_of_LIGHTBLUE_SendPacket:
 23544                           
 23545                           	psect	text96
 23546     1292                     __ptext96:	
 23547 ;; *************** function _strlen *****************
 23548 ;; Defined at:
 23549 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23550 ;; Parameters:    Size  Location     Type
 23551 ;;  s               2    1[COMMON] PTR const unsigned char 
 23552 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4242(80), STR_5(12), STR_3(11), 
 23553 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23554 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23555 ;; Auto vars:     Size  Location     Type
 23556 ;;  a               2    4[COMMON] PTR const unsigned char 
 23557 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4242(80), STR_5(12), STR_3(11), 
 23558 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23559 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23560 ;; Return value:  Size  Location     Type
 23561 ;;                  2    1[COMMON] unsigned int 
 23562 ;; Registers used:
 23563 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23564 ;; Tracked objects:
 23565 ;;		On entry : 0/0
 23566 ;;		On exit  : 0/0
 23567 ;;		Unchanged: 0/0
 23568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23572 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23573 ;;Total ram usage:        5 bytes
 23574 ;; Hardware stack levels used: 1
 23575 ;; Hardware stack levels required when called: 4
 23576 ;; This function calls:
 23577 ;;		Nothing
 23578 ;; This function is called by:
 23579 ;;		_LIGHTBLUE_SendProtocolVersion
 23580 ;;		_LIGHTBLUE_SendSerialData
 23581 ;;		_LIGHTBLUE_SendPacket
 23582 ;;		_LIGHTBLUE_SplitByte
 23583 ;;		_rn487x_PrintMessage
 23584 ;;		_strstr
 23585 ;; This function uses a non-reentrant model
 23586 ;;
 23587                           
 23588     1292                     _strlen:	
 23589                           ;psect for function _strlen
 23590                           
 23591     1292                     l13059:	
 23592                           ;incstack = 0
 23593                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23594                           
 23595     1292  0872               	movf	strlen@s+1,w
 23596     1293  00F5               	movwf	strlen@a+1
 23597     1294  0871               	movf	strlen@s,w
 23598     1295  00F4               	movwf	strlen@a
 23599     1296  2A9B               	goto	l13063
 23600     1297                     l13061:
 23601     1297  3001               	movlw	1
 23602     1298  07F1               	addwf	strlen@s,f
 23603     1299  3000               	movlw	0
 23604     129A  3DF2               	addwfc	strlen@s+1,f
 23605     129B                     l13063:
 23606     129B  0871               	movf	strlen@s,w
 23607     129C  0084               	movwf	4
 23608     129D  0872               	movf	strlen@s+1,w
 23609     129E  0085               	movwf	5
 23610     129F  0012               	moviw fsr0++
 23611     12A0  1D03               	btfss	3,2
 23612     12A1  2AA3               	goto	u9821
 23613     12A2  2AA4               	goto	u9820
 23614     12A3                     u9821:
 23615     12A3  2A97               	goto	l13061
 23616     12A4                     u9820:
 23617     12A4                     l13065:
 23618     12A4  0874               	movf	strlen@a,w
 23619     12A5  0271               	subwf	strlen@s,w
 23620     12A6  00F1               	movwf	?_strlen
 23621     12A7  0875               	movf	strlen@a+1,w
 23622     12A8  3B72               	subwfb	strlen@s+1,w
 23623     12A9  00F2               	movwf	?_strlen+1
 23624     12AA                     l3310:
 23625     12AA  0008               	return
 23626     12AB                     __end_of_strlen:
 23627                           
 23628                           	psect	text97
 23629     103C                     __ptext97:	
 23630 ;; *************** function _RN487X_Write *****************
 23631 ;; Defined at:
 23632 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23633 ;; Parameters:    Size  Location     Type
 23634 ;;  txData          1    6[COMMON] unsigned char 
 23635 ;; Auto vars:     Size  Location     Type
 23636 ;;		None
 23637 ;; Return value:  Size  Location     Type
 23638 ;;                  1    wreg      void 
 23639 ;; Registers used:
 23640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23641 ;; Tracked objects:
 23642 ;;		On entry : 0/0
 23643 ;;		On exit  : 0/0
 23644 ;;		Unchanged: 0/0
 23645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23646 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23650 ;;Total ram usage:        1 bytes
 23651 ;; Hardware stack levels used: 1
 23652 ;; Hardware stack levels required when called: 5
 23653 ;; This function calls:
 23654 ;;		_EUSART1_Write
 23655 ;;		_EUSART2_Write
 23656 ;; This function is called by:
 23657 ;;		_RN487X_SendCmd
 23658 ;;		_LIGHTBLUE_SendPacket
 23659 ;;		_LIGHTBLUE_SendSerialData
 23660 ;;		_RN487X_Example_TransparentUart
 23661 ;;		_main
 23662 ;; This function uses a non-reentrant model
 23663 ;;
 23664                           
 23665     103C                     _RN487X_Write:	
 23666                           ;psect for function _RN487X_Write
 23667                           
 23668     103C                     l13019:	
 23669                           ;incstack = 0
 23670                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23671                           
 23672                           
 23673                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23674     103C  0876               	movf	RN487X_Write@txData,w
 23675     103D  00F1               	movwf	EUSART2_Write@txData
 23676     103E  3016               	movlw	low ((_uart+22)| (0+32768))
 23677     103F  0084               	movwf	4
 23678     1040  3098               	movlw	high ((_uart+22)| (0+32768))
 23679     1041  0085               	movwf	5
 23680     1042  3F01               	moviw [1]fsr0
 23681     1043  008A               	movwf	10
 23682     1044  3F00               	moviw [0]fsr0
 23683     1045  000A               	callw
 23684     1046  3190               	pagesel	$
 23685     1047                     l1411:
 23686     1047  0008               	return
 23687     1048                     __end_of_RN487X_Write:
 23688                           
 23689                           	psect	text98
 23690     1521                     __ptext98:	
 23691 ;; *************** function _EUSART1_Write *****************
 23692 ;; Defined at:
 23693 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23694 ;; Parameters:    Size  Location     Type
 23695 ;;  txData          1    1[COMMON] unsigned char 
 23696 ;; Auto vars:     Size  Location     Type
 23697 ;;		None
 23698 ;; Return value:  Size  Location     Type
 23699 ;;                  1    wreg      void 
 23700 ;; Registers used:
 23701 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23702 ;; Tracked objects:
 23703 ;;		On entry : 0/0
 23704 ;;		On exit  : 0/0
 23705 ;;		Unchanged: 0/0
 23706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23711 ;;Total ram usage:        2 bytes
 23712 ;; Hardware stack levels used: 1
 23713 ;; Hardware stack levels required when called: 4
 23714 ;; This function calls:
 23715 ;;		Nothing
 23716 ;; This function is called by:
 23717 ;;		_putch
 23718 ;;		_RN487X_Write
 23719 ;;		_rn487x_PrintMessageStart
 23720 ;;		_rn487x_PrintMessageEnd
 23721 ;;		_rn487x_PrintIndicatorCharacters
 23722 ;;		_rn487x_PrintMessage
 23723 ;;		_LIGHTBLUE_PerformAction
 23724 ;;		_RN487X_Example_TransparentUart
 23725 ;;		_main
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729     1521                     _EUSART1_Write:	
 23730                           ;psect for function _EUSART1_Write
 23731                           
 23732     1521                     l12909:	
 23733                           ;incstack = 0
 23734                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23735                           
 23736     1521                     l12911:	
 23737                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23738                           
 23739                           
 23740                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23741     1521  0140               	movlb	0	; select bank0
 23742     1522  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23743     1523  1903               	btfsc	3,2
 23744     1524  2D26               	goto	u9701
 23745     1525  2D27               	goto	u9700
 23746     1526                     u9701:
 23747     1526  2D21               	goto	l12911
 23748     1527                     u9700:
 23749     1527                     l1844:
 23750                           
 23751                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23752     1527  014E               	movlb	14	; select bank14
 23753     1528  1A19               	btfsc	25,4	;volatile
 23754     1529  2D2B               	goto	u9711
 23755     152A  2D2C               	goto	u9710
 23756     152B                     u9711:
 23757     152B  2D30               	goto	l1845
 23758     152C                     u9710:
 23759     152C                     l12913:
 23760                           
 23761                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23762     152C  0871               	movf	EUSART1_Write@txData,w
 23763     152D  0142               	movlb	2	; select bank2
 23764     152E  009A               	movwf	26	;volatile
 23765                           
 23766                           ;mcc_generated_files/eusart1.c: 182:     }
 23767     152F  2D45               	goto	l12925
 23768     1530                     l1845:	
 23769                           ;mcc_generated_files/eusart1.c: 183:     else
 23770                           
 23771                           
 23772                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23773     1530  1219               	bcf	25,4	;volatile
 23774     1531                     l12915:
 23775                           
 23776                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23777     1531  0140               	movlb	0	; select bank0
 23778     1532  085D               	movf	_eusart1TxHead,w
 23779     1533  3EC6               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23780     1534  0086               	movwf	6
 23781     1535  0187               	clrf	7
 23782     1536  0871               	movf	EUSART1_Write@txData,w
 23783     1537  0081               	movwf	1
 23784     1538                     l12917:
 23785     1538  3001               	movlw	1
 23786     1539  00F2               	movwf	??_EUSART1_Write
 23787     153A  0872               	movf	??_EUSART1_Write,w
 23788     153B  07DD               	addwf	_eusart1TxHead,f	;volatile
 23789     153C                     l12919:
 23790                           
 23791                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23792     153C  3008               	movlw	8
 23793     153D  025D               	subwf	_eusart1TxHead,w	;volatile
 23794     153E  1C03               	skipc
 23795     153F  2D41               	goto	u9721
 23796     1540  2D42               	goto	u9720
 23797     1541                     u9721:
 23798     1541  2D43               	goto	l12923
 23799     1542                     u9720:
 23800     1542                     l12921:
 23801                           
 23802                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23803     1542  01DD               	clrf	_eusart1TxHead	;volatile
 23804     1543                     l12923:
 23805                           
 23806                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23807     1543  3001               	movlw	1
 23808     1544  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23809     1545                     l12925:
 23810                           
 23811                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23812     1545  014E               	movlb	14	; select bank14
 23813     1546  1619               	bsf	25,4	;volatile
 23814     1547                     l1848:
 23815     1547  0008               	return
 23816     1548                     __end_of_EUSART1_Write:
 23817                           
 23818                           	psect	text99
 23819     14FA                     __ptext99:	
 23820 ;; *************** function _EUSART2_Write *****************
 23821 ;; Defined at:
 23822 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;  txData          1    1[COMMON] unsigned char 
 23825 ;; Auto vars:     Size  Location     Type
 23826 ;;		None
 23827 ;; Return value:  Size  Location     Type
 23828 ;;                  1    wreg      void 
 23829 ;; Registers used:
 23830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23831 ;; Tracked objects:
 23832 ;;		On entry : 0/0
 23833 ;;		On exit  : 0/0
 23834 ;;		Unchanged: 0/0
 23835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23840 ;;Total ram usage:        2 bytes
 23841 ;; Hardware stack levels used: 1
 23842 ;; Hardware stack levels required when called: 4
 23843 ;; This function calls:
 23844 ;;		Nothing
 23845 ;; This function is called by:
 23846 ;;		_RN487X_Write
 23847 ;;		_rn487x_PrintMessageStart
 23848 ;;		_rn487x_PrintMessageEnd
 23849 ;;		_rn487x_PrintIndicatorCharacters
 23850 ;;		_rn487x_PrintMessage
 23851 ;;		_LIGHTBLUE_PerformAction
 23852 ;;		_RN487X_Example_TransparentUart
 23853 ;;		_main
 23854 ;; This function uses a non-reentrant model
 23855 ;;
 23856                           
 23857     14FA                     _EUSART2_Write:	
 23858                           ;psect for function _EUSART2_Write
 23859                           
 23860     14FA                     l12865:	
 23861                           ;incstack = 0
 23862                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23863                           
 23864     14FA                     l12867:	
 23865                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23866                           
 23867                           
 23868                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23869     14FA  0140               	movlb	0	; select bank0
 23870     14FB  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23871     14FC  1903               	btfsc	3,2
 23872     14FD  2CFF               	goto	u9651
 23873     14FE  2D00               	goto	u9650
 23874     14FF                     u9651:
 23875     14FF  2CFA               	goto	l12867
 23876     1500                     u9650:
 23877     1500                     l1700:
 23878                           
 23879                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23880     1500  014E               	movlb	14	; select bank14
 23881     1501  1B19               	btfsc	25,6	;volatile
 23882     1502  2D04               	goto	u9661
 23883     1503  2D05               	goto	u9660
 23884     1504                     u9661:
 23885     1504  2D09               	goto	l1701
 23886     1505                     u9660:
 23887     1505                     l12869:
 23888                           
 23889                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23890     1505  0871               	movf	EUSART2_Write@txData,w
 23891     1506  0154               	movlb	20	; select bank20
 23892     1507  009A               	movwf	26	;volatile
 23893                           
 23894                           ;mcc_generated_files/eusart2.c: 182:     }
 23895     1508  2D1E               	goto	l12881
 23896     1509                     l1701:	
 23897                           ;mcc_generated_files/eusart2.c: 183:     else
 23898                           
 23899                           
 23900                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23901     1509  1319               	bcf	25,6	;volatile
 23902     150A                     l12871:
 23903                           
 23904                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23905     150A  0140               	movlb	0	; select bank0
 23906     150B  0863               	movf	_eusart2TxHead,w
 23907     150C  3EDE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23908     150D  0086               	movwf	6
 23909     150E  0187               	clrf	7
 23910     150F  0871               	movf	EUSART2_Write@txData,w
 23911     1510  0081               	movwf	1
 23912     1511                     l12873:
 23913     1511  3001               	movlw	1
 23914     1512  00F2               	movwf	??_EUSART2_Write
 23915     1513  0872               	movf	??_EUSART2_Write,w
 23916     1514  07E3               	addwf	_eusart2TxHead,f	;volatile
 23917     1515                     l12875:
 23918                           
 23919                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23920     1515  3008               	movlw	8
 23921     1516  0263               	subwf	_eusart2TxHead,w	;volatile
 23922     1517  1C03               	skipc
 23923     1518  2D1A               	goto	u9671
 23924     1519  2D1B               	goto	u9670
 23925     151A                     u9671:
 23926     151A  2D1C               	goto	l12879
 23927     151B                     u9670:
 23928     151B                     l12877:
 23929                           
 23930                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23931     151B  01E3               	clrf	_eusart2TxHead	;volatile
 23932     151C                     l12879:
 23933                           
 23934                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 23935     151C  3001               	movlw	1
 23936     151D  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 23937     151E                     l12881:
 23938                           
 23939                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 23940     151E  014E               	movlb	14	; select bank14
 23941     151F  1719               	bsf	25,6	;volatile
 23942     1520                     l1704:
 23943     1520  0008               	return
 23944     1521                     __end_of_EUSART2_Write:
 23945                           
 23946                           	psect	text100
 23947     0C48                     __ptext100:	
 23948 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 23949 ;; Defined at:
 23950 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 23951 ;; Parameters:    Size  Location     Type
 23952 ;;  accelData       1    wreg     PTR struct .
 23953 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23954 ;; Auto vars:     Size  Location     Type
 23955 ;;  accelData       1   19[BANK0 ] PTR struct .
 23956 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23957 ;;  sensorValue     2   20[BANK0 ] short 
 23958 ;;  mSB             1   18[BANK0 ] char 
 23959 ;;  lSB             1   17[BANK0 ] char 
 23960 ;; Return value:  Size  Location     Type
 23961 ;;                  1    wreg      void 
 23962 ;; Registers used:
 23963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23964 ;; Tracked objects:
 23965 ;;		On entry : 0/0
 23966 ;;		On exit  : 0/0
 23967 ;;		Unchanged: 0/0
 23968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23970 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23971 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23972 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23973 ;;Total ram usage:        6 bytes
 23974 ;; Hardware stack levels used: 1
 23975 ;; Hardware stack levels required when called: 15
 23976 ;; This function calls:
 23977 ;;		_BMA253_GetAccelDataY
 23978 ;;		_BMA253_GetAccelDataZ
 23979 ;;		_BMA253_NewAccelDataRdyY
 23980 ;;		_BMA253_NewAccelDataRdyZ
 23981 ;;		_readRegister
 23982 ;; This function is called by:
 23983 ;;		_LIGHTBLUE_AccelSensor
 23984 ;; This function uses a non-reentrant model
 23985 ;;
 23986                           
 23987     0C48                     _BMA253_GetAccelDataXYZ:	
 23988                           ;psect for function _BMA253_GetAccelDataXYZ
 23989                           
 23990                           
 23991                           ;incstack = 0
 23992 ;; hardware stack exceeded
 23993                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23994                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 23995     0C48  0140               	movlb	0	; select bank0
 23996     0C49  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 23997     0C4A                     l13539:
 23998                           
 23999                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 24000     0C4A  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 24001     0C4B                     l13541:
 24002                           
 24003                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 24004     0C4B  3013               	movlw	19
 24005     0C4C  3190  2030  318C   	fcall	_readRegister
 24006     0C4F  0140               	movlb	0	; select bank0
 24007     0C50  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 24008     0C51                     l13543:
 24009                           
 24010                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 24011     0C51  3012               	movlw	18
 24012     0C52  3190  2030  318C   	fcall	_readRegister
 24013     0C55  0140               	movlb	0	; select bank0
 24014     0C56  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 24015     0C57                     l13545:
 24016                           
 24017                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 24018     0C57  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 24019     0C58  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 24020     0C59  3008               	movlw	8
 24021     0C5A                     u10395:
 24022     0C5A  1003               	clrc
 24023     0C5B  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 24024     0C5C  1403               	setc
 24025     0C5D  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 24026     0C5E  0B89               	decfsz	9,f
 24027     0C5F  2C5A               	goto	u10395
 24028     0C60  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 24029     0C61  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 24030     0C62  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 24031     0C63  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 24032     0C64  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 24033     0C65  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 24034     0C66                     l13547:
 24035                           
 24036                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 24037     0C66  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24038     0C67  0086               	movwf	6
 24039     0C68  0187               	clrf	7
 24040     0C69  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24041     0C6A  3FC0               	movwi [0]fsr1
 24042     0C6B  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24043     0C6C  3FC1               	movwi [1]fsr1
 24044     0C6D                     l13549:	
 24045                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24046                           
 24047                           
 24048                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24049     0C6D  3190  20C2  318C   	fcall	_BMA253_NewAccelDataRdyY
 24050     0C70  3A00               	xorlw	0
 24051     0C71  1903               	skipnz
 24052     0C72  2C74               	goto	u10401
 24053     0C73  2C75               	goto	u10400
 24054     0C74                     u10401:
 24055     0C74  2C6D               	goto	l13549
 24056     0C75                     u10400:
 24057     0C75                     l13551:
 24058                           
 24059                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24060     0C75  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24061     0C76  3196  2645  318C   	fcall	_BMA253_GetAccelDataY
 24062     0C79                     l13553:
 24063                           
 24064                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 24065     0C79  0140               	movlb	0	; select bank0
 24066     0C7A  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24067     0C7B  3E02               	addlw	2
 24068     0C7C  0086               	movwf	6
 24069     0C7D  0187               	clrf	7
 24070     0C7E  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24071     0C7F  3FC0               	movwi [0]fsr1
 24072     0C80  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24073     0C81  3FC1               	movwi [1]fsr1
 24074     0C82                     l13555:	
 24075                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24076                           
 24077                           
 24078                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24079     0C82  3190  20D3  318C   	fcall	_BMA253_NewAccelDataRdyZ
 24080     0C85  3A00               	xorlw	0
 24081     0C86  1903               	skipnz
 24082     0C87  2C89               	goto	u10411
 24083     0C88  2C8A               	goto	u10410
 24084     0C89                     u10411:
 24085     0C89  2C82               	goto	l13555
 24086     0C8A                     u10410:
 24087     0C8A                     l13557:
 24088                           
 24089                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24090     0C8A  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24091     0C8B  3196  2673  318C   	fcall	_BMA253_GetAccelDataZ
 24092     0C8E                     l13559:
 24093                           
 24094                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 24095     0C8E  0140               	movlb	0	; select bank0
 24096     0C8F  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24097     0C90  3E04               	addlw	4
 24098     0C91  0086               	movwf	6
 24099     0C92  0187               	clrf	7
 24100     0C93  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24101     0C94  3FC0               	movwi [0]fsr1
 24102     0C95  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24103     0C96  3FC1               	movwi [1]fsr1
 24104     0C97                     l44:
 24105     0C97  0008               	return
 24106     0C98                     __end_of_BMA253_GetAccelDataXYZ:
 24107                           
 24108                           	psect	text101
 24109     1030                     __ptext101:	
 24110 ;; *************** function _readRegister *****************
 24111 ;; Defined at:
 24112 ;;		line 146 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24113 ;; Parameters:    Size  Location     Type
 24114 ;;  regAddress      1    wreg     unsigned char 
 24115 ;; Auto vars:     Size  Location     Type
 24116 ;;  regAddress      1   10[BANK0 ] unsigned char 
 24117 ;;  regVal          1   11[BANK0 ] unsigned char 
 24118 ;; Return value:  Size  Location     Type
 24119 ;;                  1    wreg      unsigned char 
 24120 ;; Registers used:
 24121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24122 ;; Tracked objects:
 24123 ;;		On entry : 0/0
 24124 ;;		On exit  : 0/0
 24125 ;;		Unchanged: 0/0
 24126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24131 ;;Total ram usage:        2 bytes
 24132 ;; Hardware stack levels used: 1
 24133 ;; Hardware stack levels required when called: 13
 24134 ;; This function calls:
 24135 ;;		_i2c_read1ByteRegister
 24136 ;; This function is called by:
 24137 ;;		_BMA253_GetAccelDataXYZ
 24138 ;;		_setOperatingMode
 24139 ;;		_setMagneticChannel
 24140 ;;		_setXYAxisRange
 24141 ;;		_setZAxisRange
 24142 ;;		_setTemperatureEn
 24143 ;;		_getLowPower
 24144 ;;		_getOperatingMode
 24145 ;;		_getMagneticChannel
 24146 ;;		_getAngleEn
 24147 ;;		_getTemperatureEN
 24148 ;;		_getDeviceStatus
 24149 ;;		_setCRCMode
 24150 ;;		_setMagTemp
 24151 ;;		_setConvAvg
 24152 ;;		_setReadMode
 24153 ;;		_setIntThreshold
 24154 ;;		_setLowPower
 24155 ;;		_setGlitchFilter
 24156 ;;		_setTriggerMode
 24157 ;;		_setSleeptime
 24158 ;;		_setMagDir
 24159 ;;		_setMagnitudeGain
 24160 ;;		_setAngleEn
 24161 ;;		_setInterruptResult
 24162 ;;		_setThresholdEn
 24163 ;;		_setIntPinState
 24164 ;;		_setInterruptMode
 24165 ;;		_setMaskInterrupt
 24166 ;;		_setI2CAddressEN
 24167 ;;		_setOscillatorError
 24168 ;;		_getCRCMode
 24169 ;;		_getMagTemp
 24170 ;;		_getConvAvg
 24171 ;;		_getReadMode
 24172 ;;		_getIntThreshold
 24173 ;;		_getGlitchFiler
 24174 ;;		_getTriggerMode
 24175 ;;		_getSleeptime
 24176 ;;		_getMagDir
 24177 ;;		_getMagnitudeChannelSelect
 24178 ;;		_getMagneticGain
 24179 ;;		_getMagneticOffset1
 24180 ;;		_getMagneticOffset2
 24181 ;;		_getXYAxisRange
 24182 ;;		_getZAxisRange
 24183 ;;		_getXThreshold
 24184 ;;		_getYThreshold
 24185 ;;		_getZThreshold
 24186 ;;		_getTemperatureThreshold
 24187 ;;		_getInterruptResult
 24188 ;;		_getThresholdEn
 24189 ;;		_getIntPinState
 24190 ;;		_getInterruptMode
 24191 ;;		_getMaskInt
 24192 ;;		_getSetCount
 24193 ;;		_getPOR
 24194 ;;		_getDiagStatus
 24195 ;;		_getResultStatus
 24196 ;;		_getI2CAddress
 24197 ;;		_getDeviceID
 24198 ;;		_getInterruptPinStatus
 24199 ;;		_getXData
 24200 ;;		_getYData
 24201 ;;		_getZData
 24202 ;;		_getAngleResult
 24203 ;;		_getMagnitudeResult
 24204 ;; This function uses a non-reentrant model
 24205 ;;
 24206                           
 24207     1030                     _readRegister:	
 24208                           ;psect for function _readRegister
 24209                           
 24210                           
 24211                           ;incstack = 0
 24212                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24213                           ;readRegister@regAddress stored from wreg
 24214     1030  0140               	movlb	0	; select bank0
 24215     1031  00AA               	movwf	readRegister@regAddress
 24216     1032                     l13171:
 24217                           
 24218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 147:     uint8_t regVa
      +                          l;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 148:     regVal = i2
      +                          c_read1ByteRegister(0X22, regAddress);
 24219     1032  082A               	movf	readRegister@regAddress,w
 24220     1033  00A4               	movwf	i2c_read1ByteRegister@reg
 24221     1034  3022               	movlw	34
 24222     1035  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24223     1038  0140               	movlb	0	; select bank0
 24224     1039  00AB               	movwf	readRegister@regVal
 24225     103A                     l13173:
 24226                           
 24227                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 149:     return regVal
      +                          ;
 24228     103A  082B               	movf	readRegister@regVal,w
 24229     103B                     l661:
 24230     103B  0008               	return
 24231     103C                     __end_of_readRegister:
 24232                           
 24233                           	psect	text102
 24234     1673                     __ptext102:	
 24235 ;; *************** function _BMA253_GetAccelDataZ *****************
 24236 ;; Defined at:
 24237 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24238 ;; Parameters:    Size  Location     Type
 24239 ;;  zAccelData      1    wreg     PTR short 
 24240 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24241 ;; Auto vars:     Size  Location     Type
 24242 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24243 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24244 ;;  msbData         1   15[BANK0 ] unsigned char 
 24245 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24246 ;; Return value:  Size  Location     Type
 24247 ;;                  1    wreg      void 
 24248 ;; Registers used:
 24249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24250 ;; Tracked objects:
 24251 ;;		On entry : 0/0
 24252 ;;		On exit  : 0/0
 24253 ;;		Unchanged: 0/0
 24254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24257 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24259 ;;Total ram usage:        6 bytes
 24260 ;; Hardware stack levels used: 1
 24261 ;; Hardware stack levels required when called: 14
 24262 ;; This function calls:
 24263 ;;		_BMA253_NewAccelDataRdyZ
 24264 ;;		_i2c_read1ByteRegister
 24265 ;; This function is called by:
 24266 ;;		_BMA253_GetAccelDataXYZ
 24267 ;; This function uses a non-reentrant model
 24268 ;;
 24269                           
 24270     1673                     _BMA253_GetAccelDataZ:	
 24271                           ;psect for function _BMA253_GetAccelDataZ
 24272                           
 24273                           
 24274                           ;incstack = 0
 24275 ;; hardware stack exceeded
 24276                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24277                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24278     1673  0140               	movlb	0	; select bank0
 24279     1674  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24280     1675                     l13395:
 24281     1675                     l13397:	
 24282                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24283                           
 24284                           
 24285                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24286     1675  3190  20D3  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24287     1678  3A00               	xorlw	0
 24288     1679  1903               	skipnz
 24289     167A  2E7C               	goto	u10271
 24290     167B  2E7D               	goto	u10270
 24291     167C                     u10271:
 24292     167C  2E75               	goto	l13397
 24293     167D                     u10270:
 24294     167D                     l13399:
 24295                           
 24296                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24297     167D  3006               	movlw	6
 24298     167E  0140               	movlb	0	; select bank0
 24299     167F  00A4               	movwf	i2c_read1ByteRegister@reg
 24300     1680  3019               	movlw	25
 24301     1681  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24302     1684  0140               	movlb	0	; select bank0
 24303     1685  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24304                           
 24305                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24306     1686  3007               	movlw	7
 24307     1687  00A4               	movwf	i2c_read1ByteRegister@reg
 24308     1688  3019               	movlw	25
 24309     1689  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24310     168C  0140               	movlb	0	; select bank0
 24311     168D  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24312     168E                     l13401:
 24313                           
 24314                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24315     168E  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24316     168F  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24317     1690  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24318     1691  00AA               	movwf	??_BMA253_GetAccelDataZ
 24319     1692  3004               	movlw	4
 24320     1693  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24321     1694                     u10285:
 24322     1694  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24323     1695  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24324     1696  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24325     1697  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24326     1698  2E94               	goto	u10285
 24327     1699  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24328     169A  0086               	movwf	6
 24329     169B  0187               	clrf	7
 24330     169C  082A               	movf	??_BMA253_GetAccelDataZ,w
 24331     169D  3FC0               	movwi [0]fsr1
 24332     169E  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24333     169F  3FC1               	movwi [1]fsr1
 24334     16A0                     l35:
 24335     16A0  0008               	return
 24336     16A1                     __end_of_BMA253_GetAccelDataZ:
 24337                           
 24338                           	psect	text103
 24339     10D3                     __ptext103:	
 24340 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24341 ;; Defined at:
 24342 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;  zNewData        1   11[COMMON] _Bool 
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  1    wreg      _Bool 
 24349 ;; Registers used:
 24350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/0
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24360 ;;Total ram usage:        1 bytes
 24361 ;; Hardware stack levels used: 1
 24362 ;; Hardware stack levels required when called: 13
 24363 ;; This function calls:
 24364 ;;		_i2c_read1ByteRegister
 24365 ;; This function is called by:
 24366 ;;		_BMA253_GetAccelDataZ
 24367 ;;		_BMA253_GetAccelDataXYZ
 24368 ;; This function uses a non-reentrant model
 24369 ;;
 24370                           
 24371     10D3                     _BMA253_NewAccelDataRdyZ:	
 24372                           ;psect for function _BMA253_NewAccelDataRdyZ
 24373                           
 24374     10D3                     l13301:	
 24375                           ;incstack = 0
 24376                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24377                           
 24378                           
 24379                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24380     10D3  3006               	movlw	6
 24381     10D4  0140               	movlb	0	; select bank0
 24382     10D5  00A4               	movwf	i2c_read1ByteRegister@reg
 24383     10D6  3019               	movlw	25
 24384     10D7  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24385     10DA  3901               	andlw	1
 24386     10DB  1D03               	btfss	3,2
 24387     10DC  28DE               	goto	u10131
 24388     10DD  28E0               	goto	u10130
 24389     10DE                     u10131:
 24390     10DE  3001               	movlw	1
 24391     10DF  28E1               	goto	u10140
 24392     10E0                     u10130:
 24393     10E0  3000               	movlw	0
 24394     10E1                     u10140:
 24395     10E1  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24396     10E2                     l13303:
 24397                           
 24398                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24399     10E2  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24400     10E3                     l56:
 24401     10E3  0008               	return
 24402     10E4                     __end_of_BMA253_NewAccelDataRdyZ:
 24403                           
 24404                           	psect	text104
 24405     1645                     __ptext104:	
 24406 ;; *************** function _BMA253_GetAccelDataY *****************
 24407 ;; Defined at:
 24408 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24409 ;; Parameters:    Size  Location     Type
 24410 ;;  yAccelData      1    wreg     PTR short 
 24411 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24412 ;; Auto vars:     Size  Location     Type
 24413 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24414 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24415 ;;  msbData         1   15[BANK0 ] unsigned char 
 24416 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24417 ;; Return value:  Size  Location     Type
 24418 ;;                  1    wreg      void 
 24419 ;; Registers used:
 24420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24421 ;; Tracked objects:
 24422 ;;		On entry : 0/0
 24423 ;;		On exit  : 0/0
 24424 ;;		Unchanged: 0/0
 24425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24427 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24428 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24430 ;;Total ram usage:        6 bytes
 24431 ;; Hardware stack levels used: 1
 24432 ;; Hardware stack levels required when called: 14
 24433 ;; This function calls:
 24434 ;;		_BMA253_NewAccelDataRdyY
 24435 ;;		_i2c_read1ByteRegister
 24436 ;; This function is called by:
 24437 ;;		_BMA253_GetAccelDataXYZ
 24438 ;; This function uses a non-reentrant model
 24439 ;;
 24440                           
 24441     1645                     _BMA253_GetAccelDataY:	
 24442                           ;psect for function _BMA253_GetAccelDataY
 24443                           
 24444                           
 24445                           ;incstack = 0
 24446 ;; hardware stack exceeded
 24447                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24448                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24449     1645  0140               	movlb	0	; select bank0
 24450     1646  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24451     1647                     l13387:
 24452     1647                     l13389:	
 24453                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24454                           
 24455                           
 24456                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24457     1647  3190  20C2  3196   	fcall	_BMA253_NewAccelDataRdyY
 24458     164A  3A00               	xorlw	0
 24459     164B  1903               	skipnz
 24460     164C  2E4E               	goto	u10251
 24461     164D  2E4F               	goto	u10250
 24462     164E                     u10251:
 24463     164E  2E47               	goto	l13389
 24464     164F                     u10250:
 24465     164F                     l13391:
 24466                           
 24467                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24468     164F  3004               	movlw	4
 24469     1650  0140               	movlb	0	; select bank0
 24470     1651  00A4               	movwf	i2c_read1ByteRegister@reg
 24471     1652  3019               	movlw	25
 24472     1653  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24473     1656  0140               	movlb	0	; select bank0
 24474     1657  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24475                           
 24476                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24477     1658  3005               	movlw	5
 24478     1659  00A4               	movwf	i2c_read1ByteRegister@reg
 24479     165A  3019               	movlw	25
 24480     165B  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24481     165E  0140               	movlb	0	; select bank0
 24482     165F  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24483     1660                     l13393:
 24484                           
 24485                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24486     1660  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24487     1661  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24488     1662  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24489     1663  00AA               	movwf	??_BMA253_GetAccelDataY
 24490     1664  3004               	movlw	4
 24491     1665  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24492     1666                     u10265:
 24493     1666  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24494     1667  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24495     1668  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24496     1669  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24497     166A  2E66               	goto	u10265
 24498     166B  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24499     166C  0086               	movwf	6
 24500     166D  0187               	clrf	7
 24501     166E  082A               	movf	??_BMA253_GetAccelDataY,w
 24502     166F  3FC0               	movwi [0]fsr1
 24503     1670  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24504     1671  3FC1               	movwi [1]fsr1
 24505     1672                     l29:
 24506     1672  0008               	return
 24507     1673                     __end_of_BMA253_GetAccelDataY:
 24508                           
 24509                           	psect	text105
 24510     10C2                     __ptext105:	
 24511 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24512 ;; Defined at:
 24513 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;		None
 24516 ;; Auto vars:     Size  Location     Type
 24517 ;;  yNewData        1   11[COMMON] _Bool 
 24518 ;; Return value:  Size  Location     Type
 24519 ;;                  1    wreg      _Bool 
 24520 ;; Registers used:
 24521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24522 ;; Tracked objects:
 24523 ;;		On entry : 0/0
 24524 ;;		On exit  : 0/0
 24525 ;;		Unchanged: 0/0
 24526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24531 ;;Total ram usage:        1 bytes
 24532 ;; Hardware stack levels used: 1
 24533 ;; Hardware stack levels required when called: 13
 24534 ;; This function calls:
 24535 ;;		_i2c_read1ByteRegister
 24536 ;; This function is called by:
 24537 ;;		_BMA253_GetAccelDataY
 24538 ;;		_BMA253_GetAccelDataXYZ
 24539 ;; This function uses a non-reentrant model
 24540 ;;
 24541                           
 24542     10C2                     _BMA253_NewAccelDataRdyY:	
 24543                           ;psect for function _BMA253_NewAccelDataRdyY
 24544                           
 24545     10C2                     l13295:	
 24546                           ;incstack = 0
 24547                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24548                           
 24549                           
 24550                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24551     10C2  3004               	movlw	4
 24552     10C3  0140               	movlb	0	; select bank0
 24553     10C4  00A4               	movwf	i2c_read1ByteRegister@reg
 24554     10C5  3019               	movlw	25
 24555     10C6  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24556     10C9  3901               	andlw	1
 24557     10CA  1D03               	btfss	3,2
 24558     10CB  28CD               	goto	u10111
 24559     10CC  28CF               	goto	u10110
 24560     10CD                     u10111:
 24561     10CD  3001               	movlw	1
 24562     10CE  28D0               	goto	u10120
 24563     10CF                     u10110:
 24564     10CF  3000               	movlw	0
 24565     10D0                     u10120:
 24566     10D0  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24567     10D1                     l13297:
 24568                           
 24569                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24570     10D1  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24571     10D2                     l53:
 24572     10D2  0008               	return
 24573     10D3                     __end_of_BMA253_NewAccelDataRdyY:
 24574                           
 24575                           	psect	text106
 24576     0B5E                     __ptext106:	
 24577 ;; *************** function _i2c_read1ByteRegister *****************
 24578 ;; Defined at:
 24579 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24580 ;; Parameters:    Size  Location     Type
 24581 ;;  address         1    wreg     unsigned char 
 24582 ;;  reg             1    4[BANK0 ] unsigned char 
 24583 ;; Auto vars:     Size  Location     Type
 24584 ;;  address         1    5[BANK0 ] unsigned char 
 24585 ;;  x               2    7[BANK0 ] int 
 24586 ;;  d2              1    9[BANK0 ] unsigned char 
 24587 ;;  e               1    6[BANK0 ] enum E358
 24588 ;; Return value:  Size  Location     Type
 24589 ;;                  1    wreg      unsigned char 
 24590 ;; Registers used:
 24591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24592 ;; Tracked objects:
 24593 ;;		On entry : 0/0
 24594 ;;		On exit  : 0/0
 24595 ;;		Unchanged: 0/0
 24596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24597 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24598 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24600 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24601 ;;Total ram usage:        6 bytes
 24602 ;; Hardware stack levels used: 1
 24603 ;; Hardware stack levels required when called: 12
 24604 ;; This function calls:
 24605 ;;		_I2C1_Close
 24606 ;;		_I2C1_MasterWrite
 24607 ;;		_I2C1_Open
 24608 ;;		_I2C1_SetAddressNackCallback
 24609 ;;		_I2C1_SetBuffer
 24610 ;;		_I2C1_SetDataCompleteCallback
 24611 ;; This function is called by:
 24612 ;;		_BMA253_GetAccelDataY
 24613 ;;		_BMA253_GetAccelDataZ
 24614 ;;		_BMA253_NewAccelDataRdyY
 24615 ;;		_BMA253_NewAccelDataRdyZ
 24616 ;;		_readRegister
 24617 ;;		_BMA253_GetAccelDataX
 24618 ;;		_BMA253_GetAccelChipId
 24619 ;;		_BMA253_NewAccelDataRdyX
 24620 ;; This function uses a non-reentrant model
 24621 ;;
 24622                           
 24623     0B5E                     _i2c_read1ByteRegister:	
 24624                           ;psect for function _i2c_read1ByteRegister
 24625                           
 24626                           
 24627                           ;incstack = 0
 24628                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24629                           ;i2c_read1ByteRegister@address stored from wreg
 24630     0B5E  0140               	movlb	0	; select bank0
 24631     0B5F  00A5               	movwf	i2c_read1ByteRegister@address
 24632     0B60                     l13029:
 24633                           
 24634                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24635     0B60  302A               	movlw	42
 24636     0B61  00A9               	movwf	i2c_read1ByteRegister@d2
 24637                           
 24638                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24639     0B62  3002               	movlw	2
 24640     0B63  00A7               	movwf	i2c_read1ByteRegister@x
 24641     0B64  3000               	movlw	0
 24642     0B65  00A8               	movwf	i2c_read1ByteRegister@x+1
 24643     0B66                     l13035:
 24644     0B66  0140               	movlb	0	; select bank0
 24645     0B67  0825               	movf	i2c_read1ByteRegister@address,w
 24646     0B68  3197  27CA  318B   	fcall	_I2C1_Open
 24647     0B6B  3A00               	xorlw	0
 24648     0B6C  1903               	skipnz
 24649     0B6D  2B6F               	goto	u9781
 24650     0B6E  2B70               	goto	u9780
 24651     0B6F                     u9781:
 24652     0B6F  2B66               	goto	l13035
 24653     0B70                     u9780:
 24654     0B70                     l13037:
 24655                           
 24656                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24657     0B70  301B               	movlw	low _rd1RegCompleteHandler
 24658     0B71  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24659     0B72  3011               	movlw	high _rd1RegCompleteHandler
 24660     0B73  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24661     0B74  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24662     0B75  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24663     0B76  319F  27F5  318B   	fcall	_I2C1_SetDataCompleteCallback
 24664     0B79                     l13039:
 24665                           
 24666                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24667     0B79  3024               	movlw	low i2c_read1ByteRegister@reg
 24668     0B7A  00F1               	movwf	I2C1_SetBuffer@buffer
 24669     0B7B  3000               	movlw	high i2c_read1ByteRegister@reg
 24670     0B7C  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24671     0B7D  3001               	movlw	1
 24672     0B7E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24673     0B7F  3000               	movlw	0
 24674     0B80  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24675     0B81  3190  20A4  318B   	fcall	_I2C1_SetBuffer
 24676     0B84                     l13041:
 24677                           
 24678                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24679     0B84  3000               	movlw	0
 24680     0B85  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24681     0B86  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24682     0B87  3000               	movlw	0
 24683     0B88  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24684     0B89  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24685     0B8A  3190  2004  318B   	fcall	_I2C1_SetAddressNackCallback
 24686     0B8D                     l13043:
 24687                           
 24688                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24689     0B8D  319E  26FD  318B   	fcall	_I2C1_MasterWrite
 24690     0B90                     l13045:	
 24691                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24692                           
 24693     0B90  3192  2262  318B   	fcall	_I2C1_Close
 24694     0B93  0140               	movlb	0	; select bank0
 24695     0B94  00A6               	movwf	i2c_read1ByteRegister@e
 24696     0B95  0326               	decf	i2c_read1ByteRegister@e,w
 24697     0B96  1903               	btfsc	3,2
 24698     0B97  2B99               	goto	u9791
 24699     0B98  2B9A               	goto	u9790
 24700     0B99                     u9791:
 24701     0B99  2B90               	goto	l13045
 24702     0B9A                     u9790:
 24703     0B9A                     l13047:
 24704                           
 24705                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24706     0B9A  0826               	movf	i2c_read1ByteRegister@e,w
 24707     0B9B  1D03               	btfss	3,2
 24708     0B9C  2B9E               	goto	u9801
 24709     0B9D  2B9F               	goto	u9800
 24710     0B9E                     u9801:
 24711     0B9E  2BA0               	goto	l13051
 24712     0B9F                     u9800:
 24713     0B9F  2BAA               	goto	l13055
 24714     0BA0                     l13051:
 24715                           
 24716                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24717     0BA0  30FF               	movlw	255
 24718     0BA1  07A7               	addwf	i2c_read1ByteRegister@x,f
 24719     0BA2  30FF               	movlw	255
 24720     0BA3  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24721     0BA4                     l13053:
 24722     0BA4  0827               	movf	i2c_read1ByteRegister@x,w
 24723     0BA5  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24724     0BA6  1D03               	btfss	3,2
 24725     0BA7  2BA9               	goto	u9811
 24726     0BA8  2BAA               	goto	u9810
 24727     0BA9                     u9811:
 24728     0BA9  2B66               	goto	l13035
 24729     0BAA                     u9810:
 24730     0BAA                     l13055:
 24731                           
 24732                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 24733     0BAA  0829               	movf	i2c_read1ByteRegister@d2,w
 24734     0BAB                     l534:
 24735     0BAB  0008               	return
 24736     0BAC                     __end_of_i2c_read1ByteRegister:
 24737                           
 24738                           	psect	text107
 24739     1004                     __ptext107:	
 24740 ;; *************** function _I2C1_SetAddressNackCallback *****************
 24741 ;; Defined at:
 24742 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 24743 ;; Parameters:    Size  Location     Type
 24744 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 24745 ;;		 -> NULL(1), 
 24746 ;;  ptr             2    7[COMMON] PTR void 
 24747 ;;		 -> NULL(0), 
 24748 ;; Auto vars:     Size  Location     Type
 24749 ;;		None
 24750 ;; Return value:  Size  Location     Type
 24751 ;;                  1    wreg      void 
 24752 ;; Registers used:
 24753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24754 ;; Tracked objects:
 24755 ;;		On entry : 0/0
 24756 ;;		On exit  : 0/0
 24757 ;;		Unchanged: 0/0
 24758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24763 ;;Total ram usage:        4 bytes
 24764 ;; Hardware stack levels used: 1
 24765 ;; Hardware stack levels required when called: 5
 24766 ;; This function calls:
 24767 ;;		_I2C1_SetCallback
 24768 ;; This function is called by:
 24769 ;;		_i2c_write1ByteRegister
 24770 ;;		_i2c_read1ByteRegister
 24771 ;;		_i2c_read2ByteRegister
 24772 ;;		_i2c_writeNBytes
 24773 ;;		_i2c_write2ByteRegister
 24774 ;;		_i2c_readDataBlock
 24775 ;;		_I2C1_Read1ByteRegister
 24776 ;;		_I2C1_Read2ByteRegister
 24777 ;;		_I2C1_Write1ByteRegister
 24778 ;;		_I2C1_Write2ByteRegister
 24779 ;;		_I2C1_WriteNBytes
 24780 ;;		_I2C1_ReadDataBlock
 24781 ;; This function uses a non-reentrant model
 24782 ;;
 24783                           
 24784     1004                     _I2C1_SetAddressNackCallback:	
 24785                           ;psect for function _I2C1_SetAddressNackCallback
 24786                           
 24787     1004                     l12995:	
 24788                           ;incstack = 0
 24789                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24790                           
 24791                           
 24792                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 24793     1004  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 24794     1005  00F2               	movwf	I2C1_SetCallback@cb+1
 24795     1006  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 24796     1007  00F1               	movwf	I2C1_SetCallback@cb
 24797     1008  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 24798     1009  00F3               	movwf	I2C1_SetCallback@ptr
 24799     100A  3002               	movlw	2
 24800     100B  3194  2466  3190   	fcall	_I2C1_SetCallback
 24801     100E                     l2403:
 24802     100E  0008               	return
 24803     100F                     __end_of_I2C1_SetAddressNackCallback:
 24804                           
 24805                           	psect	text108
 24806     17CA                     __ptext108:	
 24807 ;; *************** function _I2C1_Open *****************
 24808 ;; Defined at:
 24809 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 24810 ;; Parameters:    Size  Location     Type
 24811 ;;  address         1    wreg     unsigned char 
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;  address         1    1[COMMON] unsigned char 
 24814 ;;  returnValue     1    2[COMMON] enum E358
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  1    wreg      enum E358
 24817 ;; Registers used:
 24818 ;;		wreg, status,2, status,0, pclath, cstack
 24819 ;; Tracked objects:
 24820 ;;		On entry : 0/0
 24821 ;;		On exit  : 0/0
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24828 ;;Total ram usage:        2 bytes
 24829 ;; Hardware stack levels used: 1
 24830 ;; Hardware stack levels required when called: 5
 24831 ;; This function calls:
 24832 ;;		_I2C1_MasterClearIrq
 24833 ;;		_I2C1_MasterOpen
 24834 ;; This function is called by:
 24835 ;;		_i2c_write1ByteRegister
 24836 ;;		_i2c_read1ByteRegister
 24837 ;;		_i2c_read2ByteRegister
 24838 ;;		_i2c_writeNBytes
 24839 ;;		_i2c_write2ByteRegister
 24840 ;;		_i2c_readDataBlock
 24841 ;;		_i2c_readNBytes
 24842 ;;		_I2C1_Read1ByteRegister
 24843 ;;		_I2C1_Read2ByteRegister
 24844 ;;		_I2C1_Write1ByteRegister
 24845 ;;		_I2C1_Write2ByteRegister
 24846 ;;		_I2C1_WriteNBytes
 24847 ;;		_I2C1_ReadNBytes
 24848 ;;		_I2C1_ReadDataBlock
 24849 ;; This function uses a non-reentrant model
 24850 ;;
 24851                           
 24852     17CA                     _I2C1_Open:	
 24853                           ;psect for function _I2C1_Open
 24854                           
 24855                           
 24856                           ;incstack = 0
 24857                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 24858                           ;I2C1_Open@address stored from wreg
 24859     17CA  00F1               	movwf	I2C1_Open@address
 24860     17CB                     l12963:
 24861                           
 24862                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 24863     17CB  01F2               	clrf	I2C1_Open@returnValue
 24864     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 24865                           
 24866                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 24867     17CD  0141               	movlb	1	; select bank1
 24868     17CE  193D               	btfsc	(_I2C1_Status^(0+128)+29),2
 24869     17CF  2FD1               	goto	u9761
 24870     17D0  2FD2               	goto	u9760
 24871     17D1                     u9761:
 24872     17D1  2FFE               	goto	l2370
 24873     17D2                     u9760:
 24874     17D2                     l12965:
 24875                           
 24876                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 24877     17D2  0871               	movf	I2C1_Open@address,w
 24878     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 24879     17D4                     l12967:
 24880                           
 24881                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 24882     17D4  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 24883     17D5                     l12969:
 24884                           
 24885                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 24886     17D5  153D               	bsf	(_I2C1_Status^(0+128)+29),2
 24887     17D6                     l12971:
 24888                           
 24889                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 24890     17D6  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 24891                           
 24892                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 24893     17D7  300E               	movlw	14
 24894     17D8  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 24895                           
 24896                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 24897     17D9  30F4               	movlw	244
 24898     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 24899     17DB  3001               	movlw	1
 24900     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 24901     17DD                     l12973:
 24902                           
 24903                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 24904     17DD  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 24905                           
 24906                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 24907     17DE  308D               	movlw	low _I2C1_CallbackReturnStop
 24908     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 24909     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 24910     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 24911     17E2                     l12975:
 24912                           
 24913                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 24914     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 24915     17E3                     l12977:
 24916                           
 24917                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 24918     17E3  308D               	movlw	low _I2C1_CallbackReturnStop
 24919     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 24920     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 24921     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 24922                           
 24923                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 24924     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 24925     17E8                     l12979:
 24926                           
 24927                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24928     17E8  308D               	movlw	low _I2C1_CallbackReturnStop
 24929     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 24930     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 24931     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 24932     17EC                     l12981:
 24933                           
 24934                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 24935     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 24936                           
 24937                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24938     17ED  308D               	movlw	low _I2C1_CallbackReturnStop
 24939     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 24940     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 24941     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 24942     17F1                     l12983:
 24943                           
 24944                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 24945     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 24946     17F2                     l12985:
 24947                           
 24948                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 24949     17F2  308F               	movlw	low _I2C1_CallbackReturnReset
 24950     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 24951     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 24952     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 24953                           
 24954                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 24955     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 24956     17F7                     l12987:
 24957                           
 24958                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 24959     17F7  319E  2691  3197   	fcall	_I2C1_MasterClearIrq
 24960     17FA                     l12989:
 24961                           
 24962                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 24963     17FA  3190  206D  3197   	fcall	_I2C1_MasterOpen
 24964     17FD                     l12991:
 24965                           
 24966                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 24967     17FD  01F2               	clrf	I2C1_Open@returnValue
 24968     17FE                     l2370:	
 24969                           ;mcc_generated_files/i2c1_master.c: 205:     }
 24970                           
 24971                           
 24972                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 24973     17FE  0872               	movf	I2C1_Open@returnValue,w
 24974     17FF                     l2371:
 24975     17FF  0008               	return
 24976     1800                     __end_of_I2C1_Open:
 24977                           
 24978                           	psect	text109
 24979     106D                     __ptext109:	
 24980 ;; *************** function _I2C1_MasterOpen *****************
 24981 ;; Defined at:
 24982 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;		None
 24985 ;; Auto vars:     Size  Location     Type
 24986 ;;		None
 24987 ;; Return value:  Size  Location     Type
 24988 ;;                  1    wreg      _Bool 
 24989 ;; Registers used:
 24990 ;;		wreg, status,2
 24991 ;; Tracked objects:
 24992 ;;		On entry : 0/0
 24993 ;;		On exit  : 0/0
 24994 ;;		Unchanged: 0/0
 24995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25000 ;;Total ram usage:        0 bytes
 25001 ;; Hardware stack levels used: 1
 25002 ;; Hardware stack levels required when called: 4
 25003 ;; This function calls:
 25004 ;;		Nothing
 25005 ;; This function is called by:
 25006 ;;		_I2C1_Open
 25007 ;; This function uses a non-reentrant model
 25008 ;;
 25009                           
 25010     106D                     _I2C1_MasterOpen:	
 25011                           ;psect for function _I2C1_MasterOpen
 25012                           
 25013     106D                     l12927:	
 25014                           ;incstack = 0
 25015                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25016                           
 25017                           
 25018                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25019     106D  0143               	movlb	3	; select bank3
 25020     106E  1A90               	btfsc	16,5	;volatile
 25021     106F  2871               	goto	u9731
 25022     1070  2872               	goto	u9730
 25023     1071                     u9731:
 25024     1071  2879               	goto	l2536
 25025     1072                     u9730:
 25026     1072                     l12929:
 25027                           
 25028                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25029     1072  018F               	clrf	15	;volatile
 25030     1073                     l12931:
 25031                           
 25032                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25033     1073  3008               	movlw	8
 25034     1074  0090               	movwf	16	;volatile
 25035     1075                     l12933:
 25036                           
 25037                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25038     1075  0191               	clrf	17	;volatile
 25039                           
 25040                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25041     1076  304F               	movlw	79
 25042     1077  008D               	movwf	13	;volatile
 25043     1078                     l12935:
 25044                           
 25045                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25046     1078  1690               	bsf	16,5	;volatile
 25047     1079                     l2536:
 25048     1079  0008               	return
 25049     107A                     __end_of_I2C1_MasterOpen:
 25050                           
 25051                           	psect	text110
 25052     1EFD                     __ptext110:	
 25053 ;; *************** function _I2C1_MasterWrite *****************
 25054 ;; Defined at:
 25055 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25056 ;; Parameters:    Size  Location     Type
 25057 ;;		None
 25058 ;; Auto vars:     Size  Location     Type
 25059 ;;		None
 25060 ;; Return value:  Size  Location     Type
 25061 ;;                  1    wreg      enum E358
 25062 ;; Registers used:
 25063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25064 ;; Tracked objects:
 25065 ;;		On entry : 0/0
 25066 ;;		On exit  : 0/0
 25067 ;;		Unchanged: 0/0
 25068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25073 ;;Total ram usage:        0 bytes
 25074 ;; Hardware stack levels used: 1
 25075 ;; Hardware stack levels required when called: 11
 25076 ;; This function calls:
 25077 ;;		_I2C1_MasterOperation
 25078 ;; This function is called by:
 25079 ;;		_i2c_write1ByteRegister
 25080 ;;		_i2c_read1ByteRegister
 25081 ;;		_i2c_read2ByteRegister
 25082 ;;		_i2c_writeNBytes
 25083 ;;		_i2c_write2ByteRegister
 25084 ;;		_i2c_readDataBlock
 25085 ;;		_I2C1_Read1ByteRegister
 25086 ;;		_I2C1_Read2ByteRegister
 25087 ;;		_I2C1_Write1ByteRegister
 25088 ;;		_I2C1_Write2ByteRegister
 25089 ;;		_I2C1_WriteNBytes
 25090 ;;		_I2C1_ReadDataBlock
 25091 ;; This function uses a non-reentrant model
 25092 ;;
 25093                           
 25094     1EFD                     _I2C1_MasterWrite:	
 25095                           ;psect for function _I2C1_MasterWrite
 25096                           
 25097     1EFD                     l12997:	
 25098                           ;incstack = 0
 25099                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25100                           
 25101                           
 25102                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25103     1EFD  3000               	movlw	0
 25104     1EFE  3193  23BC  319E   	fcall	_I2C1_MasterOperation
 25105     1F01                     l2387:
 25106     1F01  0008               	return
 25107     1F02                     __end_of_I2C1_MasterWrite:
 25108                           
 25109                           	psect	text111
 25110     13BC                     __ptext111:	
 25111 ;; *************** function _I2C1_MasterOperation *****************
 25112 ;; Defined at:
 25113 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25114 ;; Parameters:    Size  Location     Type
 25115 ;;  read            1    wreg     _Bool 
 25116 ;; Auto vars:     Size  Location     Type
 25117 ;;  read            1    2[BANK0 ] _Bool 
 25118 ;;  returnValue     1    3[BANK0 ] enum E358
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  1    wreg      enum E358
 25121 ;; Registers used:
 25122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25132 ;;Total ram usage:        2 bytes
 25133 ;; Hardware stack levels used: 1
 25134 ;; Hardware stack levels required when called: 10
 25135 ;; This function calls:
 25136 ;;		_I2C1_MasterStart
 25137 ;;		_I2C1_Poller
 25138 ;; This function is called by:
 25139 ;;		_I2C1_MasterWrite
 25140 ;;		_I2C1_MasterRead
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144     13BC                     _I2C1_MasterOperation:	
 25145                           ;psect for function _I2C1_MasterOperation
 25146                           
 25147                           
 25148                           ;incstack = 0
 25149                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25150                           ;I2C1_MasterOperation@read stored from wreg
 25151     13BC  0140               	movlb	0	; select bank0
 25152     13BD  00A2               	movwf	I2C1_MasterOperation@read
 25153     13BE                     l12943:
 25154                           
 25155                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25156     13BE  01A3               	clrf	I2C1_MasterOperation@returnValue
 25157     13BF  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25158                           
 25159                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25160     13C0  0141               	movlb	1	; select bank1
 25161     13C1  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25162     13C2  2BC4               	goto	u9741
 25163     13C3  2BC5               	goto	u9740
 25164     13C4                     u9741:
 25165     13C4  2BDA               	goto	l12959
 25166     13C5                     u9740:
 25167     13C5                     l12945:
 25168                           
 25169                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25170     13C5  14BD               	bsf	(_I2C1_Status^(0+128)+29),1
 25171     13C6                     l12947:
 25172                           
 25173                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25174     13C6  0140               	movlb	0	; select bank0
 25175     13C7  01A3               	clrf	I2C1_MasterOperation@returnValue
 25176     13C8                     l12949:
 25177                           
 25178                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25179     13C8  0822               	movf	I2C1_MasterOperation@read,w
 25180     13C9  1903               	btfsc	3,2
 25181     13CA  2BCC               	goto	u9751
 25182     13CB  2BCD               	goto	u9750
 25183     13CC                     u9751:
 25184     13CC  2BD1               	goto	l12953
 25185     13CD                     u9750:
 25186     13CD                     l12951:
 25187                           
 25188                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25189     13CD  0141               	movlb	1	; select bank1
 25190     13CE  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25191     13CF  0ABB               	incf	(_I2C1_Status^(0+128)+27),f
 25192                           
 25193                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25194     13D0  2BD4               	goto	l12955
 25195     13D1                     l12953:
 25196                           
 25197                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25198     13D1  3002               	movlw	2
 25199     13D2  0141               	movlb	1	; select bank1
 25200     13D3  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25201     13D4                     l12955:
 25202                           
 25203                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25204     13D4  319E  269A  3193   	fcall	_I2C1_MasterStart
 25205     13D7                     l12957:
 25206                           
 25207                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25208     13D7  3190  2060  3193   	fcall	_I2C1_Poller
 25209     13DA                     l12959:
 25210                           
 25211                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25212     13DA  0140               	movlb	0	; select bank0
 25213     13DB  0823               	movf	I2C1_MasterOperation@returnValue,w
 25214     13DC                     l2381:
 25215     13DC  0008               	return
 25216     13DD                     __end_of_I2C1_MasterOperation:
 25217                           
 25218                           	psect	text112
 25219     1060                     __ptext112:	
 25220 ;; *************** function _I2C1_Poller *****************
 25221 ;; Defined at:
 25222 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25223 ;; Parameters:    Size  Location     Type
 25224 ;;		None
 25225 ;; Auto vars:     Size  Location     Type
 25226 ;;		None
 25227 ;; Return value:  Size  Location     Type
 25228 ;;                  1    wreg      void 
 25229 ;; Registers used:
 25230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25231 ;; Tracked objects:
 25232 ;;		On entry : 0/0
 25233 ;;		On exit  : 0/0
 25234 ;;		Unchanged: 0/0
 25235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25240 ;;Total ram usage:        0 bytes
 25241 ;; Hardware stack levels used: 1
 25242 ;; Hardware stack levels required when called: 9
 25243 ;; This function calls:
 25244 ;;		_I2C1_MasterFsm
 25245 ;;		_I2C1_MasterWaitForEvent
 25246 ;; This function is called by:
 25247 ;;		_I2C1_MasterOperation
 25248 ;; This function uses a non-reentrant model
 25249 ;;
 25250                           
 25251     1060                     _I2C1_Poller:	
 25252                           ;psect for function _I2C1_Poller
 25253                           
 25254     1060                     l12831:	
 25255                           ;incstack = 0
 25256                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25257                           
 25258                           
 25259                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25260     1060  2867               	goto	l12837
 25261     1061                     l12833:
 25262                           
 25263                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25264     1061  319F  2712  3190   	fcall	_I2C1_MasterWaitForEvent
 25265     1064                     l12835:
 25266                           
 25267                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25268     1064  3195  2597  3190   	fcall	_I2C1_MasterFsm
 25269     1067                     l12837:
 25270                           
 25271                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25272     1067  0141               	movlb	1	; select bank1
 25273     1068  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25274     1069  286B               	goto	u9621
 25275     106A  286C               	goto	u9620
 25276     106B                     u9621:
 25277     106B  2861               	goto	l12833
 25278     106C                     u9620:
 25279     106C                     l2420:
 25280     106C  0008               	return
 25281     106D                     __end_of_I2C1_Poller:
 25282                           
 25283                           	psect	text113
 25284     1F12                     __ptext113:	
 25285 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25286 ;; Defined at:
 25287 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25288 ;; Parameters:    Size  Location     Type
 25289 ;;		None
 25290 ;; Auto vars:     Size  Location     Type
 25291 ;;		None
 25292 ;; Return value:  Size  Location     Type
 25293 ;;                  1    wreg      void 
 25294 ;; Registers used:
 25295 ;;		None
 25296 ;; Tracked objects:
 25297 ;;		On entry : 0/0
 25298 ;;		On exit  : 0/0
 25299 ;;		Unchanged: 0/0
 25300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25305 ;;Total ram usage:        0 bytes
 25306 ;; Hardware stack levels used: 1
 25307 ;; Hardware stack levels required when called: 4
 25308 ;; This function calls:
 25309 ;;		Nothing
 25310 ;; This function is called by:
 25311 ;;		_I2C1_Poller
 25312 ;; This function uses a non-reentrant model
 25313 ;;
 25314                           
 25315     1F12                     _I2C1_MasterWaitForEvent:	
 25316                           ;psect for function _I2C1_MasterWaitForEvent
 25317                           
 25318     1F12                     l2593:	
 25319                           ;incstack = 0
 25320                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25321                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25322                           
 25323                           
 25324                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25325     1F12  014E               	movlb	14	; select bank14
 25326     1F13  1C0F               	btfss	15,0	;volatile
 25327     1F14  2F16               	goto	u9591
 25328     1F15  2F17               	goto	u9590
 25329     1F16                     u9591:
 25330     1F16  2F12               	goto	l2593
 25331     1F17                     u9590:
 25332     1F17                     l2597:
 25333     1F17  0008               	return
 25334     1F18                     __end_of_I2C1_MasterWaitForEvent:
 25335                           
 25336                           	psect	text114
 25337     1597                     __ptext114:	
 25338 ;; *************** function _I2C1_MasterFsm *****************
 25339 ;; Defined at:
 25340 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;		None
 25343 ;; Auto vars:     Size  Location     Type
 25344 ;;		None
 25345 ;; Return value:  Size  Location     Type
 25346 ;;                  1    wreg      void 
 25347 ;; Registers used:
 25348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25349 ;; Tracked objects:
 25350 ;;		On entry : 0/0
 25351 ;;		On exit  : 0/0
 25352 ;;		Unchanged: 0/0
 25353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25358 ;;Total ram usage:        2 bytes
 25359 ;; Hardware stack levels used: 1
 25360 ;; Hardware stack levels required when called: 8
 25361 ;; This function calls:
 25362 ;;		_I2C1_DO_ADDRESS_NACK
 25363 ;;		_I2C1_DO_IDLE
 25364 ;;		_I2C1_DO_RCEN
 25365 ;;		_I2C1_DO_RESET
 25366 ;;		_I2C1_DO_RX
 25367 ;;		_I2C1_DO_RX_ACK
 25368 ;;		_I2C1_DO_RX_NACK_RESTART
 25369 ;;		_I2C1_DO_RX_NACK_STOP
 25370 ;;		_I2C1_DO_SEND_ADR_READ
 25371 ;;		_I2C1_DO_SEND_ADR_WRITE
 25372 ;;		_I2C1_DO_SEND_RESTART
 25373 ;;		_I2C1_DO_SEND_RESTART_READ
 25374 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25375 ;;		_I2C1_DO_SEND_STOP
 25376 ;;		_I2C1_DO_TX
 25377 ;;		_I2C1_DO_TX_EMPTY
 25378 ;;		_I2C1_MasterClearIrq
 25379 ;;		_I2C1_MasterIsNack
 25380 ;; This function is called by:
 25381 ;;		_I2C1_Poller
 25382 ;; This function uses a non-reentrant model
 25383 ;;
 25384                           
 25385     1597                     _I2C1_MasterFsm:	
 25386                           ;psect for function _I2C1_MasterFsm
 25387                           
 25388     1597                     l12819:	
 25389                           ;incstack = 0
 25390                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25391                           
 25392                           
 25393                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25394     1597  319E  2691  3195   	fcall	_I2C1_MasterClearIrq
 25395     159A                     l12821:
 25396                           
 25397                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25398     159A  0141               	movlb	1	; select bank1
 25399     159B  1C3D               	btfss	(_I2C1_Status^(0+128)+29),0
 25400     159C  2D9E               	goto	u9601
 25401     159D  2D9F               	goto	u9600
 25402     159E                     u9601:
 25403     159E  2DAA               	goto	l12827
 25404     159F                     u9600:
 25405     159F                     l12823:
 25406     159F  319F  270C  3195   	fcall	_I2C1_MasterIsNack
 25407     15A2  3A00               	xorlw	0
 25408     15A3  1903               	skipnz
 25409     15A4  2DA6               	goto	u9611
 25410     15A5  2DA7               	goto	u9610
 25411     15A6                     u9611:
 25412     15A6  2DAA               	goto	l12827
 25413     15A7                     u9610:
 25414     15A7                     l12825:
 25415                           
 25416                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25417     15A7  300F               	movlw	15
 25418     15A8  0141               	movlb	1	; select bank1
 25419     15A9  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25420     15AA                     l12827:
 25421                           
 25422                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25423     15AA  0141               	movlb	1	; select bank1
 25424     15AB  083B               	movf	(_I2C1_Status^(0+128)+27),w
 25425     15AC  0140               	movlb	0	; select bank0
 25426     15AD  00A0               	movwf	??_I2C1_MasterFsm
 25427     15AE  01A1               	clrf	??_I2C1_MasterFsm+1
 25428     15AF  35A0               	lslf	??_I2C1_MasterFsm,f
 25429     15B0  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25430     15B1  3028               	movlw	low _i2c1_fsmStateTable
 25431     15B2  0720               	addwf	??_I2C1_MasterFsm,w
 25432     15B3  0084               	movwf	4
 25433     15B4  3018               	movlw	high _i2c1_fsmStateTable
 25434     15B5  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25435     15B6  3880               	iorlw	128
 25436     15B7  0085               	movwf	5
 25437     15B8  3F01               	moviw [1]fsr0
 25438     15B9  008A               	movwf	10
 25439     15BA  3F00               	moviw [0]fsr0
 25440     15BB  000A               	callw
 25441     15BC  3195               	pagesel	$
 25442     15BD  0141               	movlb	1	; select bank1
 25443     15BE  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25444     15BF                     l2424:
 25445     15BF  0008               	return
 25446     15C0                     __end_of_I2C1_MasterFsm:
 25447                           
 25448                           	psect	text115
 25449     156F                     __ptext115:	
 25450 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25451 ;; Defined at:
 25452 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25453 ;; Parameters:    Size  Location     Type
 25454 ;;		None
 25455 ;; Auto vars:     Size  Location     Type
 25456 ;;		None
 25457 ;; Return value:  Size  Location     Type
 25458 ;;                  1    wreg      enum E12565
 25459 ;; Registers used:
 25460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25461 ;; Tracked objects:
 25462 ;;		On entry : 0/0
 25463 ;;		On exit  : 0/0
 25464 ;;		Unchanged: 0/0
 25465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25470 ;;Total ram usage:        2 bytes
 25471 ;; Hardware stack levels used: 1
 25472 ;; Hardware stack levels required when called: 7
 25473 ;; This function calls:
 25474 ;;		NULL
 25475 ;;		_I2C1_CallbackReturnReset
 25476 ;;		_I2C1_CallbackReturnStop
 25477 ;;		_I2C1_DO_SEND_RESTART
 25478 ;;		_I2C1_DO_SEND_STOP
 25479 ;;		_rd1RegCompleteHandler
 25480 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 25481 ;;		_rd2RegCompleteHandler
 25482 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 25483 ;;		_rdBlkRegCompleteHandler
 25484 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 25485 ;;		_wr1RegCompleteHandler
 25486 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 25487 ;;		_wr2RegCompleteHandler
 25488 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 25489 ;; This function is called by:
 25490 ;;		_I2C1_MasterFsm
 25491 ;; This function uses a non-reentrant model
 25492 ;;
 25493                           
 25494     156F                     _I2C1_DO_ADDRESS_NACK:	
 25495                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25496                           
 25497     156F                     l12795:	
 25498                           ;incstack = 0
 25499                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25500                           
 25501                           
 25502                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25503     156F  0141               	movlb	1	; select bank1
 25504     1570  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25505     1571                     l12797:
 25506                           
 25507                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25508     1571  3002               	movlw	2
 25509     1572  00BC               	movwf	(_I2C1_Status^(0+128)+28)
 25510                           
 25511                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25512     1573  2D7C               	goto	l12809
 25513     1574                     l12799:
 25514                           
 25515                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25516     1574  319E  26DF  3195   	fcall	_I2C1_DO_SEND_RESTART
 25517     1577  2D96               	goto	l2515
 25518     1578                     l12803:
 25519                           
 25520                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25521     1578  319E  26E4  3195   	fcall	_I2C1_DO_SEND_STOP
 25522     157B  2D96               	goto	l2515
 25523     157C                     l12809:
 25524     157C  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25525     157D  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25526     157E  3004               	movlw	4
 25527     157F  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25528     1580  0086               	movwf	6
 25529     1581  0187               	clrf	7
 25530     1582  3F41               	moviw [1]fsr1
 25531     1583  008A               	movwf	10
 25532     1584  3F40               	moviw [0]fsr1
 25533     1585  000A               	callw
 25534     1586  3195               	pagesel	$
 25535     1587  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25536     1588  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25537                           
 25538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25539                           ; Switch size 1, requested type "simple"
 25540                           ; Number of cases is 1, Range of values is 0 to 0
 25541                           ; switch strategies available:
 25542                           ; Name         Instructions Cycles
 25543                           ; simple_byte            4     3 (average)
 25544                           ; direct_byte            8     6 (fixed)
 25545                           ; jumptable            260     6 (fixed)
 25546                           ;	Chosen strategy is simple_byte
 25547     1589  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25548     158A  3A00               	xorlw	0	; case 0
 25549     158B  1903               	skipnz
 25550     158C  2D8E               	goto	l16605
 25551     158D  2D78               	goto	l12803
 25552     158E                     l16605:
 25553                           
 25554                           ; Switch size 1, requested type "simple"
 25555                           ; Number of cases is 2, Range of values is 2 to 3
 25556                           ; switch strategies available:
 25557                           ; Name         Instructions Cycles
 25558                           ; simple_byte            7     4 (average)
 25559                           ; direct_byte           13     9 (fixed)
 25560                           ; jumptable            263     9 (fixed)
 25561                           ;	Chosen strategy is simple_byte
 25562     158E  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25563     158F  3A02               	xorlw	2	; case 2
 25564     1590  1903               	skipnz
 25565     1591  2D74               	goto	l12799
 25566     1592  3A01               	xorlw	1	; case 3
 25567     1593  1903               	skipnz
 25568     1594  2D74               	goto	l12799
 25569     1595  2D78               	goto	l12803
 25570     1596                     l2515:
 25571     1596  0008               	return
 25572     1597                     __end_of_I2C1_DO_ADDRESS_NACK:
 25573                           
 25574                           	psect	text116
 25575     1EF8                     __ptext116:	
 25576 ;; *************** function _I2C1_DO_RESET *****************
 25577 ;; Defined at:
 25578 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25579 ;; Parameters:    Size  Location     Type
 25580 ;;		None
 25581 ;; Auto vars:     Size  Location     Type
 25582 ;;		None
 25583 ;; Return value:  Size  Location     Type
 25584 ;;                  1    wreg      enum E12565
 25585 ;; Registers used:
 25586 ;;		wreg, status,2
 25587 ;; Tracked objects:
 25588 ;;		On entry : 0/0
 25589 ;;		On exit  : 0/0
 25590 ;;		Unchanged: 0/0
 25591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25596 ;;Total ram usage:        0 bytes
 25597 ;; Hardware stack levels used: 1
 25598 ;; Hardware stack levels required when called: 4
 25599 ;; This function calls:
 25600 ;;		Nothing
 25601 ;; This function is called by:
 25602 ;;		_I2C1_MasterFsm
 25603 ;; This function uses a non-reentrant model
 25604 ;;
 25605                           
 25606     1EF8                     _I2C1_DO_RESET:	
 25607                           ;psect for function _I2C1_DO_RESET
 25608                           
 25609     1EF8                     l12787:	
 25610                           ;incstack = 0
 25611                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25612                           
 25613                           
 25614                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25615     1EF8  0141               	movlb	1	; select bank1
 25616     1EF9  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25617     1EFA                     l12789:
 25618                           
 25619                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25620     1EFA  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 25621     1EFB                     l12791:
 25622                           
 25623                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25624     1EFB  300E               	movlw	14
 25625     1EFC                     l2509:
 25626     1EFC  0008               	return
 25627     1EFD                     __end_of_I2C1_DO_RESET:
 25628                           
 25629                           	psect	text117
 25630     1EF3                     __ptext117:	
 25631 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25632 ;; Defined at:
 25633 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25634 ;; Parameters:    Size  Location     Type
 25635 ;;		None
 25636 ;; Auto vars:     Size  Location     Type
 25637 ;;		None
 25638 ;; Return value:  Size  Location     Type
 25639 ;;                  1    wreg      enum E12565
 25640 ;; Registers used:
 25641 ;;		wreg, status,2, status,0, pclath, cstack
 25642 ;; Tracked objects:
 25643 ;;		On entry : 0/0
 25644 ;;		On exit  : 0/0
 25645 ;;		Unchanged: 0/0
 25646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25651 ;;Total ram usage:        0 bytes
 25652 ;; Hardware stack levels used: 1
 25653 ;; Hardware stack levels required when called: 5
 25654 ;; This function calls:
 25655 ;;		_I2C1_MasterSendNack
 25656 ;; This function is called by:
 25657 ;;		_I2C1_DO_RX
 25658 ;;		_I2C1_MasterFsm
 25659 ;; This function uses a non-reentrant model
 25660 ;;
 25661                           
 25662     1EF3                     _I2C1_DO_RX_NACK_RESTART:	
 25663                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25664                           
 25665     1EF3                     l12625:	
 25666                           ;incstack = 0
 25667                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25668                           
 25669                           
 25670                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25671     1EF3  319E  26BF  319E   	fcall	_I2C1_MasterSendNack
 25672     1EF6                     l12627:
 25673                           
 25674                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25675     1EF6  3009               	movlw	9
 25676     1EF7                     l2506:
 25677     1EF7  0008               	return
 25678     1EF8                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25679                           
 25680                           	psect	text118
 25681     1EEE                     __ptext118:	
 25682 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25683 ;; Defined at:
 25684 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25685 ;; Parameters:    Size  Location     Type
 25686 ;;		None
 25687 ;; Auto vars:     Size  Location     Type
 25688 ;;		None
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1    wreg      enum E12565
 25691 ;; Registers used:
 25692 ;;		wreg, status,2, status,0, pclath, cstack
 25693 ;; Tracked objects:
 25694 ;;		On entry : 0/0
 25695 ;;		On exit  : 0/0
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25702 ;;Total ram usage:        0 bytes
 25703 ;; Hardware stack levels used: 1
 25704 ;; Hardware stack levels required when called: 5
 25705 ;; This function calls:
 25706 ;;		_I2C1_MasterSendNack
 25707 ;; This function is called by:
 25708 ;;		_I2C1_DO_RX
 25709 ;;		_I2C1_MasterFsm
 25710 ;; This function uses a non-reentrant model
 25711 ;;
 25712                           
 25713     1EEE                     _I2C1_DO_RX_NACK_STOP:	
 25714                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25715                           
 25716     1EEE                     l12631:	
 25717                           ;incstack = 0
 25718                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25719                           
 25720                           
 25721                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25722     1EEE  319E  26BF  319E   	fcall	_I2C1_MasterSendNack
 25723     1EF1                     l12633:
 25724                           
 25725                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25726     1EF1  300A               	movlw	10
 25727     1EF2                     l2503:
 25728     1EF2  0008               	return
 25729     1EF3                     __end_of_I2C1_DO_RX_NACK_STOP:
 25730                           
 25731                           	psect	text119
 25732     1EE9                     __ptext119:	
 25733 ;; *************** function _I2C1_DO_RX_ACK *****************
 25734 ;; Defined at:
 25735 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 25736 ;; Parameters:    Size  Location     Type
 25737 ;;		None
 25738 ;; Auto vars:     Size  Location     Type
 25739 ;;		None
 25740 ;; Return value:  Size  Location     Type
 25741 ;;                  1    wreg      enum E12565
 25742 ;; Registers used:
 25743 ;;		wreg, status,2, status,0, pclath, cstack
 25744 ;; Tracked objects:
 25745 ;;		On entry : 0/0
 25746 ;;		On exit  : 0/0
 25747 ;;		Unchanged: 0/0
 25748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25753 ;;Total ram usage:        0 bytes
 25754 ;; Hardware stack levels used: 1
 25755 ;; Hardware stack levels required when called: 5
 25756 ;; This function calls:
 25757 ;;		_I2C1_MasterSendAck
 25758 ;; This function is called by:
 25759 ;;		_I2C1_MasterFsm
 25760 ;; This function uses a non-reentrant model
 25761 ;;
 25762                           
 25763     1EE9                     _I2C1_DO_RX_ACK:	
 25764                           ;psect for function _I2C1_DO_RX_ACK
 25765                           
 25766     1EE9                     l12781:	
 25767                           ;incstack = 0
 25768                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 25769                           
 25770                           
 25771                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 25772     1EE9  319E  26C3  319E   	fcall	_I2C1_MasterSendAck
 25773     1EEC                     l12783:
 25774                           
 25775                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 25776     1EEC  3005               	movlw	5
 25777     1EED                     l2500:
 25778     1EED  0008               	return
 25779     1EEE                     __end_of_I2C1_DO_RX_ACK:
 25780                           
 25781                           	psect	text120
 25782     1EE4                     __ptext120:	
 25783 ;; *************** function _I2C1_DO_SEND_STOP *****************
 25784 ;; Defined at:
 25785 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 25786 ;; Parameters:    Size  Location     Type
 25787 ;;		None
 25788 ;; Auto vars:     Size  Location     Type
 25789 ;;		None
 25790 ;; Return value:  Size  Location     Type
 25791 ;;                  1    wreg      enum E12565
 25792 ;; Registers used:
 25793 ;;		wreg, status,2, status,0, pclath, cstack
 25794 ;; Tracked objects:
 25795 ;;		On entry : 0/0
 25796 ;;		On exit  : 0/0
 25797 ;;		Unchanged: 0/0
 25798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25803 ;;Total ram usage:        0 bytes
 25804 ;; Hardware stack levels used: 1
 25805 ;; Hardware stack levels required when called: 5
 25806 ;; This function calls:
 25807 ;;		_I2C1_MasterStop
 25808 ;; This function is called by:
 25809 ;;		_I2C1_DO_TX
 25810 ;;		_I2C1_DO_TX_EMPTY
 25811 ;;		_I2C1_DO_ADDRESS_NACK
 25812 ;;		_I2C1_MasterFsm
 25813 ;; This function uses a non-reentrant model
 25814 ;;
 25815                           
 25816     1EE4                     _I2C1_DO_SEND_STOP:	
 25817                           ;psect for function _I2C1_DO_SEND_STOP
 25818                           
 25819     1EE4                     l12613:	
 25820                           ;incstack = 0
 25821                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25822                           
 25823                           
 25824                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 25825     1EE4  319E  26A0  319E   	fcall	_I2C1_MasterStop
 25826     1EE7                     l12615:
 25827                           
 25828                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 25829     1EE7  3000               	movlw	0
 25830     1EE8                     l2497:
 25831     1EE8  0008               	return
 25832     1EE9                     __end_of_I2C1_DO_SEND_STOP:
 25833                           
 25834                           	psect	text121
 25835     1EDF                     __ptext121:	
 25836 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 25837 ;; Defined at:
 25838 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 25839 ;; Parameters:    Size  Location     Type
 25840 ;;		None
 25841 ;; Auto vars:     Size  Location     Type
 25842 ;;		None
 25843 ;; Return value:  Size  Location     Type
 25844 ;;                  1    wreg      enum E12565
 25845 ;; Registers used:
 25846 ;;		wreg, status,2, status,0, pclath, cstack
 25847 ;; Tracked objects:
 25848 ;;		On entry : 0/0
 25849 ;;		On exit  : 0/0
 25850 ;;		Unchanged: 0/0
 25851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25856 ;;Total ram usage:        0 bytes
 25857 ;; Hardware stack levels used: 1
 25858 ;; Hardware stack levels required when called: 5
 25859 ;; This function calls:
 25860 ;;		_I2C1_MasterEnableRestart
 25861 ;; This function is called by:
 25862 ;;		_I2C1_DO_TX_EMPTY
 25863 ;;		_I2C1_DO_ADDRESS_NACK
 25864 ;;		_I2C1_MasterFsm
 25865 ;; This function uses a non-reentrant model
 25866 ;;
 25867                           
 25868     1EDF                     _I2C1_DO_SEND_RESTART:	
 25869                           ;psect for function _I2C1_DO_SEND_RESTART
 25870                           
 25871     1EDF                     l12639:	
 25872                           ;incstack = 0
 25873                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25874                           
 25875                           
 25876                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 25877     1EDF  319E  269D  319E   	fcall	_I2C1_MasterEnableRestart
 25878     1EE2                     l12641:
 25879                           
 25880                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 25881     1EE2  3001               	movlw	1
 25882     1EE3                     l2494:
 25883     1EE3  0008               	return
 25884     1EE4                     __end_of_I2C1_DO_SEND_RESTART:
 25885                           
 25886                           	psect	text122
 25887     1EDA                     __ptext122:	
 25888 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 25889 ;; Defined at:
 25890 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 25891 ;; Parameters:    Size  Location     Type
 25892 ;;		None
 25893 ;; Auto vars:     Size  Location     Type
 25894 ;;		None
 25895 ;; Return value:  Size  Location     Type
 25896 ;;                  1    wreg      enum E12565
 25897 ;; Registers used:
 25898 ;;		wreg, status,2, status,0, pclath, cstack
 25899 ;; Tracked objects:
 25900 ;;		On entry : 0/0
 25901 ;;		On exit  : 0/0
 25902 ;;		Unchanged: 0/0
 25903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25908 ;;Total ram usage:        0 bytes
 25909 ;; Hardware stack levels used: 1
 25910 ;; Hardware stack levels required when called: 5
 25911 ;; This function calls:
 25912 ;;		_I2C1_MasterEnableRestart
 25913 ;; This function is called by:
 25914 ;;		_I2C1_DO_TX
 25915 ;;		_I2C1_MasterFsm
 25916 ;; This function uses a non-reentrant model
 25917 ;;
 25918                           
 25919     1EDA                     _I2C1_DO_SEND_RESTART_WRITE:	
 25920                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 25921                           
 25922     1EDA                     l12607:	
 25923                           ;incstack = 0
 25924                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 25925                           
 25926                           
 25927                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 25928     1EDA  319E  269D  319E   	fcall	_I2C1_MasterEnableRestart
 25929     1EDD                     l12609:
 25930                           
 25931                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 25932     1EDD  3002               	movlw	2
 25933     1EDE                     l2491:
 25934     1EDE  0008               	return
 25935     1EDF                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 25936                           
 25937                           	psect	text123
 25938     1ED5                     __ptext123:	
 25939 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 25940 ;; Defined at:
 25941 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 25942 ;; Parameters:    Size  Location     Type
 25943 ;;		None
 25944 ;; Auto vars:     Size  Location     Type
 25945 ;;		None
 25946 ;; Return value:  Size  Location     Type
 25947 ;;                  1    wreg      enum E12565
 25948 ;; Registers used:
 25949 ;;		wreg, status,2, status,0, pclath, cstack
 25950 ;; Tracked objects:
 25951 ;;		On entry : 0/0
 25952 ;;		On exit  : 0/0
 25953 ;;		Unchanged: 0/0
 25954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25959 ;;Total ram usage:        0 bytes
 25960 ;; Hardware stack levels used: 1
 25961 ;; Hardware stack levels required when called: 5
 25962 ;; This function calls:
 25963 ;;		_I2C1_MasterEnableRestart
 25964 ;; This function is called by:
 25965 ;;		_I2C1_DO_TX
 25966 ;;		_I2C1_MasterFsm
 25967 ;; This function uses a non-reentrant model
 25968 ;;
 25969                           
 25970     1ED5                     _I2C1_DO_SEND_RESTART_READ:	
 25971                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 25972                           
 25973     1ED5                     l12601:	
 25974                           ;incstack = 0
 25975                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 25976                           
 25977                           
 25978                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 25979     1ED5  319E  269D  319E   	fcall	_I2C1_MasterEnableRestart
 25980     1ED8                     l12603:
 25981                           
 25982                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 25983     1ED8  3001               	movlw	1
 25984     1ED9                     l2488:
 25985     1ED9  0008               	return
 25986     1EDA                     __end_of_I2C1_DO_SEND_RESTART_READ:
 25987                           
 25988                           	psect	text124
 25989     1F78                     __ptext124:	
 25990 ;; *************** function _I2C1_DO_RCEN *****************
 25991 ;; Defined at:
 25992 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 25993 ;; Parameters:    Size  Location     Type
 25994 ;;		None
 25995 ;; Auto vars:     Size  Location     Type
 25996 ;;		None
 25997 ;; Return value:  Size  Location     Type
 25998 ;;                  1    wreg      enum E12565
 25999 ;; Registers used:
 26000 ;;		wreg, status,2, status,0, pclath, cstack
 26001 ;; Tracked objects:
 26002 ;;		On entry : 0/0
 26003 ;;		On exit  : 0/0
 26004 ;;		Unchanged: 0/0
 26005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26010 ;;Total ram usage:        0 bytes
 26011 ;; Hardware stack levels used: 1
 26012 ;; Hardware stack levels required when called: 5
 26013 ;; This function calls:
 26014 ;;		_I2C1_MasterStartRx
 26015 ;; This function is called by:
 26016 ;;		_I2C1_MasterFsm
 26017 ;; This function uses a non-reentrant model
 26018 ;;
 26019                           
 26020     1F78                     _I2C1_DO_RCEN:	
 26021                           ;psect for function _I2C1_DO_RCEN
 26022                           
 26023     1F78                     l12747:	
 26024                           ;incstack = 0
 26025                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26026                           
 26027                           
 26028                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26029     1F78  0141               	movlb	1	; select bank1
 26030     1F79  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26031     1F7A                     l12749:
 26032                           
 26033                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26034     1F7A  319E  26A3  319F   	fcall	_I2C1_MasterStartRx
 26035     1F7D                     l12751:
 26036                           
 26037                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26038     1F7D  3004               	movlw	4
 26039     1F7E                     l2464:
 26040     1F7E  0008               	return
 26041     1F7F                     __end_of_I2C1_DO_RCEN:
 26042                           
 26043                           	psect	text125
 26044     0ACC                     __ptext125:	
 26045 ;; *************** function _I2C1_DO_RX *****************
 26046 ;; Defined at:
 26047 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26048 ;; Parameters:    Size  Location     Type
 26049 ;;		None
 26050 ;; Auto vars:     Size  Location     Type
 26051 ;;		None
 26052 ;; Return value:  Size  Location     Type
 26053 ;;                  1    wreg      enum E12565
 26054 ;; Registers used:
 26055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26056 ;; Tracked objects:
 26057 ;;		On entry : 0/0
 26058 ;;		On exit  : 0/0
 26059 ;;		Unchanged: 0/0
 26060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26065 ;;Total ram usage:        2 bytes
 26066 ;; Hardware stack levels used: 1
 26067 ;; Hardware stack levels required when called: 7
 26068 ;; This function calls:
 26069 ;;		NULL
 26070 ;;		_I2C1_CallbackReturnReset
 26071 ;;		_I2C1_CallbackReturnStop
 26072 ;;		_I2C1_DO_RX_NACK_RESTART
 26073 ;;		_I2C1_DO_RX_NACK_STOP
 26074 ;;		_I2C1_MasterGetRxData
 26075 ;;		_I2C1_MasterSendAck
 26076 ;;		_rd1RegCompleteHandler
 26077 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 26078 ;;		_rd2RegCompleteHandler
 26079 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 26080 ;;		_rdBlkRegCompleteHandler
 26081 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 26082 ;;		_wr1RegCompleteHandler
 26083 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 26084 ;;		_wr2RegCompleteHandler
 26085 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 26086 ;; This function is called by:
 26087 ;;		_I2C1_MasterFsm
 26088 ;; This function uses a non-reentrant model
 26089 ;;
 26090                           
 26091     0ACC                     _I2C1_DO_RX:	
 26092                           ;psect for function _I2C1_DO_RX
 26093                           
 26094     0ACC                     l12715:	
 26095                           ;incstack = 0
 26096                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26097                           
 26098                           
 26099                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26100     0ACC  319E  26A6  318A   	fcall	_I2C1_MasterGetRxData
 26101     0ACF  00F9               	movwf	??_I2C1_DO_RX
 26102     0AD0  3017               	movlw	23
 26103     0AD1  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26104     0AD2  0086               	movwf	6
 26105     0AD3  0187               	clrf	7
 26106     0AD4  3F40               	moviw [0]fsr1
 26107     0AD5  0084               	movwf	4
 26108     0AD6  3F41               	moviw [1]fsr1
 26109     0AD7  0085               	movwf	5
 26110     0AD8  0879               	movf	??_I2C1_DO_RX,w
 26111     0AD9  0080               	movwf	0
 26112     0ADA                     l12717:
 26113     0ADA  3001               	movlw	1
 26114     0ADB  0141               	movlb	1	; select bank1
 26115     0ADC  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26116     0ADD  3000               	movlw	0
 26117     0ADE  3DB8               	addwfc	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26118     0ADF                     l12719:
 26119                           
 26120                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26121     0ADF  3001               	movlw	1
 26122     0AE0  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26123     0AE1  3000               	movlw	0
 26124     0AE2  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26125     0AE3  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26126     0AE4  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26127     0AE5  1903               	btfsc	3,2
 26128     0AE6  2AE8               	goto	u9581
 26129     0AE7  2AE9               	goto	u9580
 26130     0AE8                     u9581:
 26131     0AE8  2AEE               	goto	l2452
 26132     0AE9                     u9580:
 26133     0AE9                     l12721:
 26134                           
 26135                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26136     0AE9  319E  26C3  318A   	fcall	_I2C1_MasterSendAck
 26137     0AEC                     l12723:
 26138                           
 26139                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26140     0AEC  3005               	movlw	5
 26141     0AED  2B14               	goto	l2453
 26142     0AEE                     l2452:	
 26143                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26144                           
 26145                           
 26146                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26147     0AEE  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26148                           
 26149                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26150     0AEF  2AF8               	goto	l12739
 26151     0AF0                     l12729:
 26152                           
 26153                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26154     0AF0  319E  26F3  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 26155     0AF3  2B14               	goto	l2453
 26156     0AF4                     l12733:
 26157                           
 26158                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26159     0AF4  319E  26EE  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 26160     0AF7  2B14               	goto	l2453
 26161     0AF8                     l12739:
 26162     0AF8  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26163     0AF9  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26164     0AFA  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26165     0AFB  008A               	movwf	10
 26166     0AFC  0820               	movf	_I2C1_Status^(0+128),w
 26167     0AFD  000A               	callw
 26168     0AFE  318A               	pagesel	$
 26169     0AFF  00F9               	movwf	??_I2C1_DO_RX
 26170     0B00  01FA               	clrf	??_I2C1_DO_RX+1
 26171                           
 26172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26173                           ; Switch size 1, requested type "simple"
 26174                           ; Number of cases is 1, Range of values is 0 to 0
 26175                           ; switch strategies available:
 26176                           ; Name         Instructions Cycles
 26177                           ; simple_byte            4     3 (average)
 26178                           ; direct_byte            8     6 (fixed)
 26179                           ; jumptable            260     6 (fixed)
 26180                           ;	Chosen strategy is simple_byte
 26181     0B01  087A               	movf	??_I2C1_DO_RX+1,w
 26182     0B02  3A00               	xorlw	0	; case 0
 26183     0B03  1903               	skipnz
 26184     0B04  2B06               	goto	l16607
 26185     0B05  2AF4               	goto	l12733
 26186     0B06                     l16607:
 26187                           
 26188                           ; Switch size 1, requested type "simple"
 26189                           ; Number of cases is 4, Range of values is 1 to 4
 26190                           ; switch strategies available:
 26191                           ; Name         Instructions Cycles
 26192                           ; simple_byte           13     7 (average)
 26193                           ; direct_byte           17     9 (fixed)
 26194                           ; jumptable            263     9 (fixed)
 26195                           ;	Chosen strategy is simple_byte
 26196     0B06  0879               	movf	??_I2C1_DO_RX,w
 26197     0B07  3A01               	xorlw	1	; case 1
 26198     0B08  1903               	skipnz
 26199     0B09  2AF4               	goto	l12733
 26200     0B0A  3A03               	xorlw	3	; case 2
 26201     0B0B  1903               	skipnz
 26202     0B0C  2AF0               	goto	l12729
 26203     0B0D  3A01               	xorlw	1	; case 3
 26204     0B0E  1903               	skipnz
 26205     0B0F  2AF0               	goto	l12729
 26206     0B10  3A07               	xorlw	7	; case 4
 26207     0B11  1903               	skipnz
 26208     0B12  2AF4               	goto	l12733
 26209     0B13  2AF4               	goto	l12733
 26210     0B14                     l2453:
 26211     0B14  0008               	return
 26212     0B15                     __end_of_I2C1_DO_RX:
 26213                           
 26214                           	psect	text126
 26215     0E3A                     __ptext126:	
 26216 ;; *************** function _I2C1_DO_TX *****************
 26217 ;; Defined at:
 26218 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26219 ;; Parameters:    Size  Location     Type
 26220 ;;		None
 26221 ;; Auto vars:     Size  Location     Type
 26222 ;;		None
 26223 ;; Return value:  Size  Location     Type
 26224 ;;                  1    wreg      enum E12565
 26225 ;; Registers used:
 26226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26227 ;; Tracked objects:
 26228 ;;		On entry : 0/0
 26229 ;;		On exit  : 0/0
 26230 ;;		Unchanged: 0/0
 26231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26236 ;;Total ram usage:        2 bytes
 26237 ;; Hardware stack levels used: 1
 26238 ;; Hardware stack levels required when called: 7
 26239 ;; This function calls:
 26240 ;;		NULL
 26241 ;;		_I2C1_CallbackReturnReset
 26242 ;;		_I2C1_CallbackReturnStop
 26243 ;;		_I2C1_DO_SEND_RESTART_READ
 26244 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26245 ;;		_I2C1_DO_SEND_STOP
 26246 ;;		_I2C1_MasterIsNack
 26247 ;;		_I2C1_MasterSendTxData
 26248 ;;		_rd1RegCompleteHandler
 26249 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 26250 ;;		_rd2RegCompleteHandler
 26251 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 26252 ;;		_rdBlkRegCompleteHandler
 26253 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 26254 ;;		_wr1RegCompleteHandler
 26255 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 26256 ;;		_wr2RegCompleteHandler
 26257 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 26258 ;; This function is called by:
 26259 ;;		_I2C1_MasterFsm
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263     0E3A                     _I2C1_DO_TX:	
 26264                           ;psect for function _I2C1_DO_TX
 26265                           
 26266     0E3A                     l12681:	
 26267                           ;incstack = 0
 26268                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26269                           
 26270                           
 26271                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26272     0E3A  319F  270C  318E   	fcall	_I2C1_MasterIsNack
 26273     0E3D  3A00               	xorlw	0
 26274     0E3E  1903               	skipnz
 26275     0E3F  2E41               	goto	u9561
 26276     0E40  2E42               	goto	u9560
 26277     0E41                     u9561:
 26278     0E41  2E70               	goto	l2436
 26279     0E42                     u9560:
 26280     0E42  2E4F               	goto	l12699
 26281     0E43                     l12685:
 26282                           
 26283                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26284     0E43  319E  26D5  318E   	fcall	_I2C1_DO_SEND_RESTART_READ
 26285     0E46  2E8F               	goto	l2439
 26286     0E47                     l12689:
 26287                           
 26288                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26289     0E47  319E  26DA  318E   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26290     0E4A  2E8F               	goto	l2439
 26291     0E4B                     l12693:
 26292                           
 26293                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26294     0E4B  319E  26E4  318E   	fcall	_I2C1_DO_SEND_STOP
 26295     0E4E  2E8F               	goto	l2439
 26296     0E4F                     l12699:
 26297     0E4F  0141               	movlb	1	; select bank1
 26298     0E50  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26299     0E51  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26300     0E52  3006               	movlw	6
 26301     0E53  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26302     0E54  0086               	movwf	6
 26303     0E55  0187               	clrf	7
 26304     0E56  3F41               	moviw [1]fsr1
 26305     0E57  008A               	movwf	10
 26306     0E58  3F40               	moviw [0]fsr1
 26307     0E59  000A               	callw
 26308     0E5A  318E               	pagesel	$
 26309     0E5B  00F9               	movwf	??_I2C1_DO_TX
 26310     0E5C  01FA               	clrf	??_I2C1_DO_TX+1
 26311                           
 26312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26313                           ; Switch size 1, requested type "simple"
 26314                           ; Number of cases is 1, Range of values is 0 to 0
 26315                           ; switch strategies available:
 26316                           ; Name         Instructions Cycles
 26317                           ; simple_byte            4     3 (average)
 26318                           ; direct_byte            8     6 (fixed)
 26319                           ; jumptable            260     6 (fixed)
 26320                           ;	Chosen strategy is simple_byte
 26321     0E5D  087A               	movf	??_I2C1_DO_TX+1,w
 26322     0E5E  3A00               	xorlw	0	; case 0
 26323     0E5F  1903               	skipnz
 26324     0E60  2E62               	goto	l16609
 26325     0E61  2E4B               	goto	l12693
 26326     0E62                     l16609:
 26327                           
 26328                           ; Switch size 1, requested type "simple"
 26329                           ; Number of cases is 4, Range of values is 1 to 4
 26330                           ; switch strategies available:
 26331                           ; Name         Instructions Cycles
 26332                           ; simple_byte           13     7 (average)
 26333                           ; direct_byte           17     9 (fixed)
 26334                           ; jumptable            263     9 (fixed)
 26335                           ;	Chosen strategy is simple_byte
 26336     0E62  0879               	movf	??_I2C1_DO_TX,w
 26337     0E63  3A01               	xorlw	1	; case 1
 26338     0E64  1903               	skipnz
 26339     0E65  2E4B               	goto	l12693
 26340     0E66  3A03               	xorlw	3	; case 2
 26341     0E67  1903               	skipnz
 26342     0E68  2E43               	goto	l12685
 26343     0E69  3A01               	xorlw	1	; case 3
 26344     0E6A  1903               	skipnz
 26345     0E6B  2E47               	goto	l12689
 26346     0E6C  3A07               	xorlw	7	; case 4
 26347     0E6D  1903               	skipnz
 26348     0E6E  2E4B               	goto	l12693
 26349     0E6F  2E4B               	goto	l12693
 26350     0E70                     l2436:	
 26351                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26352                           
 26353                           
 26354                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26355     0E70  0141               	movlb	1	; select bank1
 26356     0E71  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26357     0E72                     l12701:
 26358                           
 26359                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26360     0E72  0838               	movf	((low ((_I2C1_Status| 0+23))+1))^(0+128),w
 26361     0E73  00FA               	movwf	??_I2C1_DO_TX+1
 26362     0E74  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26363     0E75  00F9               	movwf	??_I2C1_DO_TX
 26364     0E76  0AB7               	incf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26365     0E77  1903               	skipnz
 26366     0E78  0AB8               	incf	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26367     0E79  0879               	movf	??_I2C1_DO_TX,w
 26368     0E7A  0086               	movwf	6
 26369     0E7B  087A               	movf	??_I2C1_DO_TX+1,w
 26370     0E7C  0087               	movwf	7
 26371     0E7D  0801               	movf	1,w
 26372     0E7E  319E  26CB  318E   	fcall	_I2C1_MasterSendTxData
 26373     0E81                     l12703:
 26374                           
 26375                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26376     0E81  3001               	movlw	1
 26377     0E82  0141               	movlb	1	; select bank1
 26378     0E83  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26379     0E84  3000               	movlw	0
 26380     0E85  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26381     0E86  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26382     0E87  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26383     0E88  1D03               	btfss	3,2
 26384     0E89  2E8B               	goto	u9571
 26385     0E8A  2E8C               	goto	u9570
 26386     0E8B                     u9571:
 26387     0E8B  2E8E               	goto	l12707
 26388     0E8C                     u9570:
 26389     0E8C                     l12705:
 26390     0E8C  3006               	movlw	6
 26391     0E8D  2E8F               	goto	l2439
 26392     0E8E                     l12707:
 26393     0E8E  3003               	movlw	3
 26394     0E8F                     l2439:
 26395     0E8F  0008               	return
 26396     0E90                     __end_of_I2C1_DO_TX:
 26397                           
 26398                           	psect	text127
 26399     1F86                     __ptext127:	
 26400 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26401 ;; Defined at:
 26402 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26403 ;; Parameters:    Size  Location     Type
 26404 ;;		None
 26405 ;; Auto vars:     Size  Location     Type
 26406 ;;		None
 26407 ;; Return value:  Size  Location     Type
 26408 ;;                  1    wreg      enum E12565
 26409 ;; Registers used:
 26410 ;;		wreg, status,2, status,0, pclath, cstack
 26411 ;; Tracked objects:
 26412 ;;		On entry : 0/0
 26413 ;;		On exit  : 0/0
 26414 ;;		Unchanged: 0/0
 26415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26420 ;;Total ram usage:        0 bytes
 26421 ;; Hardware stack levels used: 1
 26422 ;; Hardware stack levels required when called: 5
 26423 ;; This function calls:
 26424 ;;		_I2C1_MasterSendTxData
 26425 ;; This function is called by:
 26426 ;;		_I2C1_MasterFsm
 26427 ;; This function uses a non-reentrant model
 26428 ;;
 26429                           
 26430     1F86                     _I2C1_DO_SEND_ADR_WRITE:	
 26431                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26432                           
 26433     1F86                     l12673:	
 26434                           ;incstack = 0
 26435                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26436                           
 26437                           
 26438                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26439     1F86  0141               	movlb	1	; select bank1
 26440     1F87  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26441     1F88                     l12675:
 26442                           
 26443                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26444     1F88  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26445     1F89  319E  26CB  319F   	fcall	_I2C1_MasterSendTxData
 26446     1F8C                     l12677:
 26447                           
 26448                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26449     1F8C  3003               	movlw	3
 26450     1F8D                     l2433:
 26451     1F8D  0008               	return
 26452     1F8E                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26453                           
 26454                           	psect	text128
 26455     1F9F                     __ptext128:	
 26456 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26457 ;; Defined at:
 26458 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26459 ;; Parameters:    Size  Location     Type
 26460 ;;		None
 26461 ;; Auto vars:     Size  Location     Type
 26462 ;;		None
 26463 ;; Return value:  Size  Location     Type
 26464 ;;                  1    wreg      enum E12565
 26465 ;; Registers used:
 26466 ;;		wreg, status,2, status,0, pclath, cstack
 26467 ;; Tracked objects:
 26468 ;;		On entry : 0/0
 26469 ;;		On exit  : 0/0
 26470 ;;		Unchanged: 0/0
 26471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26476 ;;Total ram usage:        0 bytes
 26477 ;; Hardware stack levels used: 1
 26478 ;; Hardware stack levels required when called: 5
 26479 ;; This function calls:
 26480 ;;		_I2C1_MasterSendTxData
 26481 ;; This function is called by:
 26482 ;;		_I2C1_MasterFsm
 26483 ;; This function uses a non-reentrant model
 26484 ;;
 26485                           
 26486     1F9F                     _I2C1_DO_SEND_ADR_READ:	
 26487                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26488                           
 26489     1F9F                     l12665:	
 26490                           ;incstack = 0
 26491                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26492                           
 26493                           
 26494                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26495     1F9F  0141               	movlb	1	; select bank1
 26496     1FA0  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26497     1FA1                     l12667:
 26498                           
 26499                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26500     1FA1  1403               	setc
 26501     1FA2  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26502     1FA3  319E  26CB  319F   	fcall	_I2C1_MasterSendTxData
 26503     1FA6                     l12669:
 26504                           
 26505                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26506     1FA6  3005               	movlw	5
 26507     1FA7                     l2430:
 26508     1FA7  0008               	return
 26509     1FA8                     __end_of_I2C1_DO_SEND_ADR_READ:
 26510                           
 26511                           	psect	text129
 26512     1ED0                     __ptext129:	
 26513 ;; *************** function _I2C1_DO_IDLE *****************
 26514 ;; Defined at:
 26515 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26516 ;; Parameters:    Size  Location     Type
 26517 ;;		None
 26518 ;; Auto vars:     Size  Location     Type
 26519 ;;		None
 26520 ;; Return value:  Size  Location     Type
 26521 ;;                  1    wreg      enum E12565
 26522 ;; Registers used:
 26523 ;;		wreg, status,2
 26524 ;; Tracked objects:
 26525 ;;		On entry : 0/0
 26526 ;;		On exit  : 0/0
 26527 ;;		Unchanged: 0/0
 26528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26533 ;;Total ram usage:        0 bytes
 26534 ;; Hardware stack levels used: 1
 26535 ;; Hardware stack levels required when called: 4
 26536 ;; This function calls:
 26537 ;;		Nothing
 26538 ;; This function is called by:
 26539 ;;		_I2C1_MasterFsm
 26540 ;; This function uses a non-reentrant model
 26541 ;;
 26542                           
 26543     1ED0                     _I2C1_DO_IDLE:	
 26544                           ;psect for function _I2C1_DO_IDLE
 26545                           
 26546     1ED0                     l12657:	
 26547                           ;incstack = 0
 26548                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26549                           
 26550                           
 26551                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26552     1ED0  0141               	movlb	1	; select bank1
 26553     1ED1  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 26554     1ED2                     l12659:
 26555                           
 26556                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26557     1ED2  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 26558     1ED3                     l12661:
 26559                           
 26560                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26561     1ED3  300E               	movlw	14
 26562     1ED4                     l2427:
 26563     1ED4  0008               	return
 26564     1ED5                     __end_of_I2C1_DO_IDLE:
 26565                           
 26566                           	psect	text130
 26567     15EB                     __ptext130:	
 26568 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26569 ;; Defined at:
 26570 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26571 ;; Parameters:    Size  Location     Type
 26572 ;;		None
 26573 ;; Auto vars:     Size  Location     Type
 26574 ;;		None
 26575 ;; Return value:  Size  Location     Type
 26576 ;;                  1    wreg      enum E12565
 26577 ;; Registers used:
 26578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26579 ;; Tracked objects:
 26580 ;;		On entry : 0/0
 26581 ;;		On exit  : 0/0
 26582 ;;		Unchanged: 0/0
 26583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26588 ;;Total ram usage:        2 bytes
 26589 ;; Hardware stack levels used: 1
 26590 ;; Hardware stack levels required when called: 7
 26591 ;; This function calls:
 26592 ;;		NULL
 26593 ;;		_I2C1_CallbackReturnReset
 26594 ;;		_I2C1_CallbackReturnStop
 26595 ;;		_I2C1_DO_SEND_RESTART
 26596 ;;		_I2C1_DO_SEND_STOP
 26597 ;;		_I2C1_MasterSetIrq
 26598 ;;		_rd1RegCompleteHandler
 26599 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 26600 ;;		_rd2RegCompleteHandler
 26601 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 26602 ;;		_rdBlkRegCompleteHandler
 26603 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 26604 ;;		_wr1RegCompleteHandler
 26605 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 26606 ;;		_wr2RegCompleteHandler
 26607 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 26608 ;; This function is called by:
 26609 ;;		_I2C1_MasterFsm
 26610 ;; This function uses a non-reentrant model
 26611 ;;
 26612                           
 26613     15EB                     _I2C1_DO_TX_EMPTY:	
 26614                           ;psect for function _I2C1_DO_TX_EMPTY
 26615                           
 26616     15EB                     l12755:	
 26617                           ;incstack = 0
 26618                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26619                           
 26620                           
 26621                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26622     15EB  0141               	movlb	1	; select bank1
 26623     15EC  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26624                           
 26625                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26626     15ED  2DFB               	goto	l12773
 26627     15EE                     l12757:
 26628                           
 26629                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26630     15EE  319E  26DF  3195   	fcall	_I2C1_DO_SEND_RESTART
 26631     15F1  2E17               	goto	l2470
 26632     15F2                     l12761:
 26633                           
 26634                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26635     15F2  319E  26A9  3195   	fcall	_I2C1_MasterSetIrq
 26636     15F5                     l12763:
 26637                           
 26638                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26639     15F5  3003               	movlw	3
 26640     15F6  2E17               	goto	l2470
 26641     15F7                     l12767:
 26642                           
 26643                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26644     15F7  319E  26E4  3195   	fcall	_I2C1_DO_SEND_STOP
 26645     15FA  2E17               	goto	l2470
 26646     15FB                     l12773:
 26647     15FB  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26648     15FC  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26649     15FD  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26650     15FE  008A               	movwf	10
 26651     15FF  0820               	movf	_I2C1_Status^(0+128),w
 26652     1600  000A               	callw
 26653     1601  3195               	pagesel	$
 26654     1602  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26655     1603  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26656                           
 26657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26658                           ; Switch size 1, requested type "simple"
 26659                           ; Number of cases is 1, Range of values is 0 to 0
 26660                           ; switch strategies available:
 26661                           ; Name         Instructions Cycles
 26662                           ; simple_byte            4     3 (average)
 26663                           ; direct_byte            8     6 (fixed)
 26664                           ; jumptable            260     6 (fixed)
 26665                           ;	Chosen strategy is simple_byte
 26666     1604  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26667     1605  3A00               	xorlw	0	; case 0
 26668     1606  1903               	skipnz
 26669     1607  2E09               	goto	l16611
 26670     1608  2DF7               	goto	l12767
 26671     1609                     l16611:
 26672                           
 26673                           ; Switch size 1, requested type "simple"
 26674                           ; Number of cases is 4, Range of values is 1 to 4
 26675                           ; switch strategies available:
 26676                           ; Name         Instructions Cycles
 26677                           ; simple_byte           13     7 (average)
 26678                           ; direct_byte           17     9 (fixed)
 26679                           ; jumptable            263     9 (fixed)
 26680                           ;	Chosen strategy is simple_byte
 26681     1609  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26682     160A  3A01               	xorlw	1	; case 1
 26683     160B  1903               	skipnz
 26684     160C  2DF7               	goto	l12767
 26685     160D  3A03               	xorlw	3	; case 2
 26686     160E  1903               	skipnz
 26687     160F  2DEE               	goto	l12757
 26688     1610  3A01               	xorlw	1	; case 3
 26689     1611  1903               	skipnz
 26690     1612  2DEE               	goto	l12757
 26691     1613  3A07               	xorlw	7	; case 4
 26692     1614  1903               	skipnz
 26693     1615  2DF2               	goto	l12761
 26694     1616  2DF7               	goto	l12767
 26695     1617                     l2470:
 26696     1617  0008               	return
 26697     1618                     __end_of_I2C1_DO_TX_EMPTY:
 26698                           
 26699                           	psect	text131
 26700     1EA9                     __ptext131:	
 26701 ;; *************** function _I2C1_MasterSetIrq *****************
 26702 ;; Defined at:
 26703 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26704 ;; Parameters:    Size  Location     Type
 26705 ;;		None
 26706 ;; Auto vars:     Size  Location     Type
 26707 ;;		None
 26708 ;; Return value:  Size  Location     Type
 26709 ;;                  1    wreg      void 
 26710 ;; Registers used:
 26711 ;;		None
 26712 ;; Tracked objects:
 26713 ;;		On entry : 0/0
 26714 ;;		On exit  : 0/0
 26715 ;;		Unchanged: 0/0
 26716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26721 ;;Total ram usage:        0 bytes
 26722 ;; Hardware stack levels used: 1
 26723 ;; Hardware stack levels required when called: 4
 26724 ;; This function calls:
 26725 ;;		Nothing
 26726 ;; This function is called by:
 26727 ;;		_I2C1_DO_TX_EMPTY
 26728 ;; This function uses a non-reentrant model
 26729 ;;
 26730                           
 26731     1EA9                     _I2C1_MasterSetIrq:	
 26732                           ;psect for function _I2C1_MasterSetIrq
 26733                           
 26734     1EA9                     l12645:	
 26735                           ;incstack = 0
 26736                           ; Regs used in _I2C1_MasterSetIrq: []
 26737                           
 26738                           
 26739                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 26740     1EA9  014E               	movlb	14	; select bank14
 26741     1EAA  140F               	bsf	15,0	;volatile
 26742     1EAB                     l2590:
 26743     1EAB  0008               	return
 26744     1EAC                     __end_of_I2C1_MasterSetIrq:
 26745                           
 26746                           	psect	text132
 26747     1F0C                     __ptext132:	
 26748 ;; *************** function _I2C1_MasterIsNack *****************
 26749 ;; Defined at:
 26750 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 26751 ;; Parameters:    Size  Location     Type
 26752 ;;		None
 26753 ;; Auto vars:     Size  Location     Type
 26754 ;;		None
 26755 ;; Return value:  Size  Location     Type
 26756 ;;                  1    wreg      _Bool 
 26757 ;; Registers used:
 26758 ;;		wreg, status,2, status,0
 26759 ;; Tracked objects:
 26760 ;;		On entry : 0/0
 26761 ;;		On exit  : 0/0
 26762 ;;		Unchanged: 0/0
 26763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26768 ;;Total ram usage:        0 bytes
 26769 ;; Hardware stack levels used: 1
 26770 ;; Hardware stack levels required when called: 4
 26771 ;; This function calls:
 26772 ;;		Nothing
 26773 ;; This function is called by:
 26774 ;;		_I2C1_MasterFsm
 26775 ;;		_I2C1_DO_TX
 26776 ;; This function uses a non-reentrant model
 26777 ;;
 26778                           
 26779     1F0C                     _I2C1_MasterIsNack:	
 26780                           ;psect for function _I2C1_MasterIsNack
 26781                           
 26782     1F0C                     l12595:	
 26783                           ;incstack = 0
 26784                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 26785                           
 26786                           
 26787                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 26788     1F0C  0143               	movlb	3	; select bank3
 26789     1F0D  0E11               	swapf	17,w	;volatile
 26790     1F0E  0C89               	rrf	9,f
 26791     1F0F  0C89               	rrf	9,f
 26792     1F10  3901               	andlw	1
 26793     1F11                     l2563:
 26794     1F11  0008               	return
 26795     1F12                     __end_of_I2C1_MasterIsNack:
 26796                           
 26797                           	psect	text133
 26798     1ECB                     __ptext133:	
 26799 ;; *************** function _I2C1_MasterSendTxData *****************
 26800 ;; Defined at:
 26801 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 26802 ;; Parameters:    Size  Location     Type
 26803 ;;  data            1    wreg     unsigned char 
 26804 ;; Auto vars:     Size  Location     Type
 26805 ;;  data            1    1[COMMON] unsigned char 
 26806 ;; Return value:  Size  Location     Type
 26807 ;;                  1    wreg      void 
 26808 ;; Registers used:
 26809 ;;		wreg
 26810 ;; Tracked objects:
 26811 ;;		On entry : 0/0
 26812 ;;		On exit  : 0/0
 26813 ;;		Unchanged: 0/0
 26814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26819 ;;Total ram usage:        1 bytes
 26820 ;; Hardware stack levels used: 1
 26821 ;; Hardware stack levels required when called: 4
 26822 ;; This function calls:
 26823 ;;		Nothing
 26824 ;; This function is called by:
 26825 ;;		_I2C1_DO_SEND_ADR_READ
 26826 ;;		_I2C1_DO_SEND_ADR_WRITE
 26827 ;;		_I2C1_DO_TX
 26828 ;; This function uses a non-reentrant model
 26829 ;;
 26830                           
 26831     1ECB                     _I2C1_MasterSendTxData:	
 26832                           ;psect for function _I2C1_MasterSendTxData
 26833                           
 26834                           
 26835                           ;incstack = 0
 26836                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 26837                           ;I2C1_MasterSendTxData@data stored from wreg
 26838     1ECB  00F1               	movwf	I2C1_MasterSendTxData@data
 26839     1ECC                     l12599:
 26840                           
 26841                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 26842     1ECC  0871               	movf	I2C1_MasterSendTxData@data,w
 26843     1ECD  0143               	movlb	3	; select bank3
 26844     1ECE  008C               	movwf	12	;volatile
 26845     1ECF                     l2545:
 26846     1ECF  0008               	return
 26847     1ED0                     __end_of_I2C1_MasterSendTxData:
 26848                           
 26849                           	psect	text134
 26850     1EC3                     __ptext134:	
 26851 ;; *************** function _I2C1_MasterSendAck *****************
 26852 ;; Defined at:
 26853 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 26854 ;; Parameters:    Size  Location     Type
 26855 ;;		None
 26856 ;; Auto vars:     Size  Location     Type
 26857 ;;		None
 26858 ;; Return value:  Size  Location     Type
 26859 ;;                  1    wreg      void 
 26860 ;; Registers used:
 26861 ;;		None
 26862 ;; Tracked objects:
 26863 ;;		On entry : 0/0
 26864 ;;		On exit  : 0/0
 26865 ;;		Unchanged: 0/0
 26866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26871 ;;Total ram usage:        0 bytes
 26872 ;; Hardware stack levels used: 1
 26873 ;; Hardware stack levels required when called: 4
 26874 ;; This function calls:
 26875 ;;		Nothing
 26876 ;; This function is called by:
 26877 ;;		_I2C1_DO_RX
 26878 ;;		_I2C1_DO_RX_ACK
 26879 ;; This function uses a non-reentrant model
 26880 ;;
 26881                           
 26882     1EC3                     _I2C1_MasterSendAck:	
 26883                           ;psect for function _I2C1_MasterSendAck
 26884                           
 26885     1EC3                     l12623:	
 26886                           ;incstack = 0
 26887                           ; Regs used in _I2C1_MasterSendAck: []
 26888                           
 26889                           
 26890                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 26891     1EC3  0143               	movlb	3	; select bank3
 26892     1EC4  1291               	bcf	17,5	;volatile
 26893                           
 26894                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 26895     1EC5  1611               	bsf	17,4	;volatile
 26896     1EC6                     l2566:
 26897     1EC6  0008               	return
 26898     1EC7                     __end_of_I2C1_MasterSendAck:
 26899                           
 26900                           	psect	text135
 26901     1EA6                     __ptext135:	
 26902 ;; *************** function _I2C1_MasterGetRxData *****************
 26903 ;; Defined at:
 26904 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 26905 ;; Parameters:    Size  Location     Type
 26906 ;;		None
 26907 ;; Auto vars:     Size  Location     Type
 26908 ;;		None
 26909 ;; Return value:  Size  Location     Type
 26910 ;;                  1    wreg      unsigned char 
 26911 ;; Registers used:
 26912 ;;		wreg
 26913 ;; Tracked objects:
 26914 ;;		On entry : 0/0
 26915 ;;		On exit  : 0/0
 26916 ;;		Unchanged: 0/0
 26917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26922 ;;Total ram usage:        0 bytes
 26923 ;; Hardware stack levels used: 1
 26924 ;; Hardware stack levels required when called: 4
 26925 ;; This function calls:
 26926 ;;		Nothing
 26927 ;; This function is called by:
 26928 ;;		_I2C1_DO_RX
 26929 ;; This function uses a non-reentrant model
 26930 ;;
 26931                           
 26932     1EA6                     _I2C1_MasterGetRxData:	
 26933                           ;psect for function _I2C1_MasterGetRxData
 26934                           
 26935     1EA6                     l12619:	
 26936                           ;incstack = 0
 26937                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 26938                           
 26939                           
 26940                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 26941     1EA6  0143               	movlb	3	; select bank3
 26942     1EA7  080C               	movf	12,w	;volatile
 26943     1EA8                     l2542:
 26944     1EA8  0008               	return
 26945     1EA9                     __end_of_I2C1_MasterGetRxData:
 26946                           
 26947                           	psect	text136
 26948     1EBF                     __ptext136:	
 26949 ;; *************** function _I2C1_MasterSendNack *****************
 26950 ;; Defined at:
 26951 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 26952 ;; Parameters:    Size  Location     Type
 26953 ;;		None
 26954 ;; Auto vars:     Size  Location     Type
 26955 ;;		None
 26956 ;; Return value:  Size  Location     Type
 26957 ;;                  1    wreg      void 
 26958 ;; Registers used:
 26959 ;;		None
 26960 ;; Tracked objects:
 26961 ;;		On entry : 0/0
 26962 ;;		On exit  : 0/0
 26963 ;;		Unchanged: 0/0
 26964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26969 ;;Total ram usage:        0 bytes
 26970 ;; Hardware stack levels used: 1
 26971 ;; Hardware stack levels required when called: 4
 26972 ;; This function calls:
 26973 ;;		Nothing
 26974 ;; This function is called by:
 26975 ;;		_I2C1_DO_RX_NACK_STOP
 26976 ;;		_I2C1_DO_RX_NACK_RESTART
 26977 ;; This function uses a non-reentrant model
 26978 ;;
 26979                           
 26980     1EBF                     _I2C1_MasterSendNack:	
 26981                           ;psect for function _I2C1_MasterSendNack
 26982                           
 26983     1EBF                     l12517:	
 26984                           ;incstack = 0
 26985                           ; Regs used in _I2C1_MasterSendNack: []
 26986                           
 26987                           
 26988                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 26989     1EBF  0143               	movlb	3	; select bank3
 26990     1EC0  1691               	bsf	17,5	;volatile
 26991                           
 26992                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 26993     1EC1  1611               	bsf	17,4	;volatile
 26994     1EC2                     l2569:
 26995     1EC2  0008               	return
 26996     1EC3                     __end_of_I2C1_MasterSendNack:
 26997                           
 26998                           	psect	text137
 26999     1EA3                     __ptext137:	
 27000 ;; *************** function _I2C1_MasterStartRx *****************
 27001 ;; Defined at:
 27002 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27003 ;; Parameters:    Size  Location     Type
 27004 ;;		None
 27005 ;; Auto vars:     Size  Location     Type
 27006 ;;		None
 27007 ;; Return value:  Size  Location     Type
 27008 ;;                  1    wreg      void 
 27009 ;; Registers used:
 27010 ;;		None
 27011 ;; Tracked objects:
 27012 ;;		On entry : 0/0
 27013 ;;		On exit  : 0/0
 27014 ;;		Unchanged: 0/0
 27015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27020 ;;Total ram usage:        0 bytes
 27021 ;; Hardware stack levels used: 1
 27022 ;; Hardware stack levels required when called: 4
 27023 ;; This function calls:
 27024 ;;		Nothing
 27025 ;; This function is called by:
 27026 ;;		_I2C1_DO_RCEN
 27027 ;; This function uses a non-reentrant model
 27028 ;;
 27029                           
 27030     1EA3                     _I2C1_MasterStartRx:	
 27031                           ;psect for function _I2C1_MasterStartRx
 27032                           
 27033     1EA3                     l12637:	
 27034                           ;incstack = 0
 27035                           ; Regs used in _I2C1_MasterStartRx: []
 27036                           
 27037                           
 27038                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27039     1EA3  0143               	movlb	3	; select bank3
 27040     1EA4  1591               	bsf	17,3	;volatile
 27041     1EA5                     l2554:
 27042     1EA5  0008               	return
 27043     1EA6                     __end_of_I2C1_MasterStartRx:
 27044                           
 27045                           	psect	text138
 27046     1E8F                     __ptext138:	
 27047 ;; *************** function _I2C1_CallbackReturnReset *****************
 27048 ;; Defined at:
 27049 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27050 ;; Parameters:    Size  Location     Type
 27051 ;;  funPtr          1    8[COMMON] PTR void 
 27052 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27053 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27054 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27055 ;; Auto vars:     Size  Location     Type
 27056 ;;		None
 27057 ;; Return value:  Size  Location     Type
 27058 ;;                  1    wreg      enum E363
 27059 ;; Registers used:
 27060 ;;		wreg
 27061 ;; Tracked objects:
 27062 ;;		On entry : 0/0
 27063 ;;		On exit  : 0/0
 27064 ;;		Unchanged: 0/0
 27065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27070 ;;Total ram usage:        1 bytes
 27071 ;; Hardware stack levels used: 1
 27072 ;; Hardware stack levels required when called: 4
 27073 ;; This function calls:
 27074 ;;		Nothing
 27075 ;; This function is called by:
 27076 ;;		_I2C1_Open
 27077 ;;		_I2C1_DO_TX
 27078 ;;		_I2C1_DO_RX
 27079 ;;		_I2C1_DO_TX_EMPTY
 27080 ;;		_I2C1_DO_ADDRESS_NACK
 27081 ;;		_I2C1_DO_RX_EMPTY
 27082 ;; This function uses a non-reentrant model
 27083 ;;
 27084                           
 27085     1E8F                     _I2C1_CallbackReturnReset:	
 27086                           ;psect for function _I2C1_CallbackReturnReset
 27087                           
 27088     1E8F                     l12651:	
 27089                           ;incstack = 0
 27090                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27091                           
 27092                           
 27093                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27094     1E8F  3005               	movlw	5
 27095     1E90                     l2526:
 27096     1E90  0008               	return
 27097     1E91                     __end_of_I2C1_CallbackReturnReset:
 27098                           
 27099                           	psect	text139
 27100     1E8D                     __ptext139:	
 27101 ;; *************** function _I2C1_CallbackReturnStop *****************
 27102 ;; Defined at:
 27103 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27104 ;; Parameters:    Size  Location     Type
 27105 ;;  funPtr          1    8[COMMON] PTR void 
 27106 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27107 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27108 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27109 ;; Auto vars:     Size  Location     Type
 27110 ;;		None
 27111 ;; Return value:  Size  Location     Type
 27112 ;;                  1    wreg      enum E363
 27113 ;; Registers used:
 27114 ;;		wreg
 27115 ;; Tracked objects:
 27116 ;;		On entry : 0/0
 27117 ;;		On exit  : 0/0
 27118 ;;		Unchanged: 0/0
 27119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27120 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27124 ;;Total ram usage:        1 bytes
 27125 ;; Hardware stack levels used: 1
 27126 ;; Hardware stack levels required when called: 4
 27127 ;; This function calls:
 27128 ;;		Nothing
 27129 ;; This function is called by:
 27130 ;;		_I2C1_Open
 27131 ;;		_I2C1_SetCallback
 27132 ;;		_I2C1_DO_TX
 27133 ;;		_I2C1_DO_RX
 27134 ;;		_I2C1_DO_TX_EMPTY
 27135 ;;		_I2C1_DO_ADDRESS_NACK
 27136 ;;		_I2C1_DO_RX_EMPTY
 27137 ;; This function uses a non-reentrant model
 27138 ;;
 27139                           
 27140     1E8D                     _I2C1_CallbackReturnStop:	
 27141                           ;psect for function _I2C1_CallbackReturnStop
 27142                           
 27143     1E8D                     l12647:	
 27144                           ;incstack = 0
 27145                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27146                           
 27147                           
 27148                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27149     1E8D  3001               	movlw	1
 27150     1E8E                     l2523:
 27151     1E8E  0008               	return
 27152     1E8F                     __end_of_I2C1_CallbackReturnStop:
 27153                           
 27154                           	psect	text140
 27155     1313                     __ptext140:	
 27156 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1735 *****************
 27157 ;; Defined at:
 27158 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27159 ;; Parameters:    Size  Location     Type
 27160 ;;  ptr             1    8[COMMON] PTR void 
 27161 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27162 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27163 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27164 ;; Auto vars:     Size  Location     Type
 27165 ;;		None
 27166 ;; Return value:  Size  Location     Type
 27167 ;;                  1    wreg      enum E363
 27168 ;; Registers used:
 27169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27170 ;; Tracked objects:
 27171 ;;		On entry : 0/0
 27172 ;;		On exit  : 0/0
 27173 ;;		Unchanged: 0/0
 27174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27175 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27179 ;;Total ram usage:        1 bytes
 27180 ;; Hardware stack levels used: 1
 27181 ;; Hardware stack levels required when called: 6
 27182 ;; This function calls:
 27183 ;;		_I2C1_SetBuffer
 27184 ;;		_I2C1_SetDataCompleteCallback
 27185 ;; This function is called by:
 27186 ;;		_I2C1_ReadDataBlock
 27187 ;;		_I2C1_DO_TX
 27188 ;;		_I2C1_DO_RX
 27189 ;;		_I2C1_DO_TX_EMPTY
 27190 ;;		_I2C1_DO_ADDRESS_NACK
 27191 ;;		_I2C1_DO_RX_EMPTY
 27192 ;; This function uses a non-reentrant model
 27193 ;;
 27194                           
 27195     1313                     _rdBlkRegCompleteHandler@i2c1_master_example$F1735:	
 27196                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1735
 27197                           
 27198     1313                     l12589:	
 27199                           ;incstack = 0
 27200                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1735: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27201                           
 27202                           
 27203                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27204     1313  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr,w
 27205     1314  3E02               	addlw	2
 27206     1315  0086               	movwf	6
 27207     1316  0187               	clrf	7
 27208     1317  3F40               	moviw [0]fsr1
 27209     1318  00F1               	movwf	I2C1_SetBuffer@buffer
 27210     1319  3F41               	moviw [1]fsr1
 27211     131A  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27212     131B  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr,w
 27213     131C  0086               	movwf	6
 27214     131D  0187               	clrf	7
 27215     131E  3F40               	moviw [0]fsr1
 27216     131F  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27217     1320  3F41               	moviw [1]fsr1
 27218     1321  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27219     1322  3190  20A4  3193   	fcall	_I2C1_SetBuffer
 27220                           
 27221                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27222     1325  3000               	movlw	0
 27223     1326  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27224     1327  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27225     1328  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27226     1329  319F  27F5  3193   	fcall	_I2C1_SetDataCompleteCallback
 27227     132C                     l12591:
 27228                           
 27229                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27230     132C  3002               	movlw	2
 27231     132D                     l1367:
 27232     132D  0008               	return
 27233     132E                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1735:
 27234                           
 27235                           	psect	text141
 27236     117A                     __ptext141:	
 27237 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1718 *****************
 27238 ;; Defined at:
 27239 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27240 ;; Parameters:    Size  Location     Type
 27241 ;;  ptr             1    8[COMMON] PTR void 
 27242 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27243 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27244 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27245 ;; Auto vars:     Size  Location     Type
 27246 ;;		None
 27247 ;; Return value:  Size  Location     Type
 27248 ;;                  1    wreg      enum E363
 27249 ;; Registers used:
 27250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27251 ;; Tracked objects:
 27252 ;;		On entry : 0/0
 27253 ;;		On exit  : 0/0
 27254 ;;		Unchanged: 0/0
 27255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27260 ;;Total ram usage:        1 bytes
 27261 ;; Hardware stack levels used: 1
 27262 ;; Hardware stack levels required when called: 6
 27263 ;; This function calls:
 27264 ;;		_I2C1_SetBuffer
 27265 ;;		_I2C1_SetDataCompleteCallback
 27266 ;; This function is called by:
 27267 ;;		_I2C1_Write1ByteRegister
 27268 ;;		_I2C1_DO_TX
 27269 ;;		_I2C1_DO_RX
 27270 ;;		_I2C1_DO_TX_EMPTY
 27271 ;;		_I2C1_DO_ADDRESS_NACK
 27272 ;;		_I2C1_DO_RX_EMPTY
 27273 ;; This function uses a non-reentrant model
 27274 ;;
 27275                           
 27276     117A                     _wr1RegCompleteHandler@i2c1_master_example$F1718:	
 27277                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1718
 27278                           
 27279     117A                     l12573:	
 27280                           ;incstack = 0
 27281                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1718: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27282                           
 27283                           
 27284                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27285     117A  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1718@ptr,w
 27286     117B  00F1               	movwf	I2C1_SetBuffer@buffer
 27287     117C  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27288     117D  3001               	movlw	1
 27289     117E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27290     117F  3000               	movlw	0
 27291     1180  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27292     1181  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27293     1184                     l12575:
 27294                           
 27295                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27296     1184  3000               	movlw	0
 27297     1185  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27298     1186  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27299     1187  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27300     1188  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27301     118B                     l12577:
 27302                           
 27303                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27304     118B  3004               	movlw	4
 27305     118C                     l1361:
 27306     118C  0008               	return
 27307     118D                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1718:
 27308                           
 27309                           	psect	text142
 27310     1167                     __ptext142:	
 27311 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1712 *****************
 27312 ;; Defined at:
 27313 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27314 ;; Parameters:    Size  Location     Type
 27315 ;;  ptr             1    8[COMMON] PTR void 
 27316 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27317 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27318 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27319 ;; Auto vars:     Size  Location     Type
 27320 ;;		None
 27321 ;; Return value:  Size  Location     Type
 27322 ;;                  1    wreg      enum E363
 27323 ;; Registers used:
 27324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27325 ;; Tracked objects:
 27326 ;;		On entry : 0/0
 27327 ;;		On exit  : 0/0
 27328 ;;		Unchanged: 0/0
 27329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27330 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27334 ;;Total ram usage:        1 bytes
 27335 ;; Hardware stack levels used: 1
 27336 ;; Hardware stack levels required when called: 6
 27337 ;; This function calls:
 27338 ;;		_I2C1_SetBuffer
 27339 ;;		_I2C1_SetDataCompleteCallback
 27340 ;; This function is called by:
 27341 ;;		_I2C1_Read2ByteRegister
 27342 ;;		_I2C1_DO_TX
 27343 ;;		_I2C1_DO_RX
 27344 ;;		_I2C1_DO_TX_EMPTY
 27345 ;;		_I2C1_DO_ADDRESS_NACK
 27346 ;;		_I2C1_DO_RX_EMPTY
 27347 ;; This function uses a non-reentrant model
 27348 ;;
 27349                           
 27350     1167                     _rd2RegCompleteHandler@i2c1_master_example$F1712:	
 27351                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1712
 27352                           
 27353     1167                     l12565:	
 27354                           ;incstack = 0
 27355                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1712: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27356                           
 27357                           
 27358                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27359     1167  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1712@ptr,w
 27360     1168  00F1               	movwf	I2C1_SetBuffer@buffer
 27361     1169  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27362     116A  3002               	movlw	2
 27363     116B  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27364     116C  3000               	movlw	0
 27365     116D  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27366     116E  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27367     1171                     l12567:
 27368                           
 27369                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27370     1171  3000               	movlw	0
 27371     1172  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27372     1173  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27373     1174  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27374     1175  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27375     1178                     l12569:
 27376                           
 27377                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27378     1178  3002               	movlw	2
 27379     1179                     l1358:
 27380     1179  0008               	return
 27381     117A                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1712:
 27382                           
 27383                           	psect	text143
 27384     1154                     __ptext143:	
 27385 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1701 *****************
 27386 ;; Defined at:
 27387 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27388 ;; Parameters:    Size  Location     Type
 27389 ;;  ptr             1    8[COMMON] PTR void 
 27390 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27391 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27392 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27393 ;; Auto vars:     Size  Location     Type
 27394 ;;		None
 27395 ;; Return value:  Size  Location     Type
 27396 ;;                  1    wreg      enum E363
 27397 ;; Registers used:
 27398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27399 ;; Tracked objects:
 27400 ;;		On entry : 0/0
 27401 ;;		On exit  : 0/0
 27402 ;;		Unchanged: 0/0
 27403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27404 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27408 ;;Total ram usage:        1 bytes
 27409 ;; Hardware stack levels used: 1
 27410 ;; Hardware stack levels required when called: 6
 27411 ;; This function calls:
 27412 ;;		_I2C1_SetBuffer
 27413 ;;		_I2C1_SetDataCompleteCallback
 27414 ;; This function is called by:
 27415 ;;		_I2C1_Read1ByteRegister
 27416 ;;		_I2C1_DO_TX
 27417 ;;		_I2C1_DO_RX
 27418 ;;		_I2C1_DO_TX_EMPTY
 27419 ;;		_I2C1_DO_ADDRESS_NACK
 27420 ;;		_I2C1_DO_RX_EMPTY
 27421 ;; This function uses a non-reentrant model
 27422 ;;
 27423                           
 27424     1154                     _rd1RegCompleteHandler@i2c1_master_example$F1701:	
 27425                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1701
 27426                           
 27427     1154                     l12557:	
 27428                           ;incstack = 0
 27429                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1701: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27430                           
 27431                           
 27432                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27433     1154  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1701@ptr,w
 27434     1155  00F1               	movwf	I2C1_SetBuffer@buffer
 27435     1156  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27436     1157  3001               	movlw	1
 27437     1158  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27438     1159  3000               	movlw	0
 27439     115A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27440     115B  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27441     115E                     l12559:
 27442                           
 27443                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27444     115E  3000               	movlw	0
 27445     115F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27446     1160  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27447     1161  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27448     1162  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27449     1165                     l12561:
 27450                           
 27451                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27452     1165  3002               	movlw	2
 27453     1166                     l1355:
 27454     1166  0008               	return
 27455     1167                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1701:
 27456                           
 27457                           	psect	text144
 27458     12F8                     __ptext144:	
 27459 ;; *************** function _rdBlkRegCompleteHandler *****************
 27460 ;; Defined at:
 27461 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27462 ;; Parameters:    Size  Location     Type
 27463 ;;  p               1    8[COMMON] PTR void 
 27464 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27465 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27466 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27467 ;; Auto vars:     Size  Location     Type
 27468 ;;		None
 27469 ;; Return value:  Size  Location     Type
 27470 ;;                  1    wreg      enum E363
 27471 ;; Registers used:
 27472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27473 ;; Tracked objects:
 27474 ;;		On entry : 0/0
 27475 ;;		On exit  : 0/0
 27476 ;;		Unchanged: 0/0
 27477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27482 ;;Total ram usage:        1 bytes
 27483 ;; Hardware stack levels used: 1
 27484 ;; Hardware stack levels required when called: 6
 27485 ;; This function calls:
 27486 ;;		_I2C1_SetBuffer
 27487 ;;		_I2C1_SetDataCompleteCallback
 27488 ;; This function is called by:
 27489 ;;		_i2c_readDataBlock
 27490 ;;		_I2C1_DO_TX
 27491 ;;		_I2C1_DO_RX
 27492 ;;		_I2C1_DO_TX_EMPTY
 27493 ;;		_I2C1_DO_ADDRESS_NACK
 27494 ;;		_I2C1_DO_RX_EMPTY
 27495 ;; This function uses a non-reentrant model
 27496 ;;
 27497                           
 27498     12F8                     _rdBlkRegCompleteHandler:	
 27499                           ;psect for function _rdBlkRegCompleteHandler
 27500                           
 27501     12F8                     l12551:	
 27502                           ;incstack = 0
 27503                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27504                           
 27505                           
 27506                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27507     12F8  0878               	movf	rdBlkRegCompleteHandler@p,w
 27508     12F9  3E02               	addlw	2
 27509     12FA  0086               	movwf	6
 27510     12FB  0187               	clrf	7
 27511     12FC  3F40               	moviw [0]fsr1
 27512     12FD  00F1               	movwf	I2C1_SetBuffer@buffer
 27513     12FE  3F41               	moviw [1]fsr1
 27514     12FF  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27515     1300  0878               	movf	rdBlkRegCompleteHandler@p,w
 27516     1301  0086               	movwf	6
 27517     1302  0187               	clrf	7
 27518     1303  3F40               	moviw [0]fsr1
 27519     1304  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27520     1305  3F41               	moviw [1]fsr1
 27521     1306  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27522     1307  3190  20A4  3192   	fcall	_I2C1_SetBuffer
 27523                           
 27524                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27525     130A  3000               	movlw	0
 27526     130B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27527     130C  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27528     130D  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27529     130E  319F  27F5  3192   	fcall	_I2C1_SetDataCompleteCallback
 27530     1311                     l12553:
 27531                           
 27532                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27533     1311  3002               	movlw	2
 27534     1312                     l561:
 27535     1312  0008               	return
 27536     1313                     __end_of_rdBlkRegCompleteHandler:
 27537                           
 27538                           	psect	text145
 27539     1141                     __ptext145:	
 27540 ;; *************** function _wr2RegCompleteHandler *****************
 27541 ;; Defined at:
 27542 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27543 ;; Parameters:    Size  Location     Type
 27544 ;;  p               1    8[COMMON] PTR void 
 27545 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27546 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27547 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27548 ;; Auto vars:     Size  Location     Type
 27549 ;;		None
 27550 ;; Return value:  Size  Location     Type
 27551 ;;                  1    wreg      enum E363
 27552 ;; Registers used:
 27553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27554 ;; Tracked objects:
 27555 ;;		On entry : 0/0
 27556 ;;		On exit  : 0/0
 27557 ;;		Unchanged: 0/0
 27558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27559 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27563 ;;Total ram usage:        1 bytes
 27564 ;; Hardware stack levels used: 1
 27565 ;; Hardware stack levels required when called: 6
 27566 ;; This function calls:
 27567 ;;		_I2C1_SetBuffer
 27568 ;;		_I2C1_SetDataCompleteCallback
 27569 ;; This function is called by:
 27570 ;;		_i2c_write2ByteRegister
 27571 ;;		_I2C1_DO_TX
 27572 ;;		_I2C1_DO_RX
 27573 ;;		_I2C1_DO_TX_EMPTY
 27574 ;;		_I2C1_DO_ADDRESS_NACK
 27575 ;;		_I2C1_DO_RX_EMPTY
 27576 ;; This function uses a non-reentrant model
 27577 ;;
 27578                           
 27579     1141                     _wr2RegCompleteHandler:	
 27580                           ;psect for function _wr2RegCompleteHandler
 27581                           
 27582     1141                     l12543:	
 27583                           ;incstack = 0
 27584                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27585                           
 27586                           
 27587                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27588     1141  0878               	movf	wr2RegCompleteHandler@p,w
 27589     1142  00F1               	movwf	I2C1_SetBuffer@buffer
 27590     1143  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27591     1144  3002               	movlw	2
 27592     1145  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27593     1146  3000               	movlw	0
 27594     1147  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27595     1148  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27596     114B                     l12545:
 27597                           
 27598                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27599     114B  3000               	movlw	0
 27600     114C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27601     114D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27602     114E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27603     114F  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27604     1152                     l12547:
 27605                           
 27606                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27607     1152  3004               	movlw	4
 27608     1153                     l549:
 27609     1153  0008               	return
 27610     1154                     __end_of_wr2RegCompleteHandler:
 27611                           
 27612                           	psect	text146
 27613     112E                     __ptext146:	
 27614 ;; *************** function _rd2RegCompleteHandler *****************
 27615 ;; Defined at:
 27616 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27617 ;; Parameters:    Size  Location     Type
 27618 ;;  p               1    8[COMMON] PTR void 
 27619 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27620 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27621 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27622 ;; Auto vars:     Size  Location     Type
 27623 ;;		None
 27624 ;; Return value:  Size  Location     Type
 27625 ;;                  1    wreg      enum E363
 27626 ;; Registers used:
 27627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27628 ;; Tracked objects:
 27629 ;;		On entry : 0/0
 27630 ;;		On exit  : 0/0
 27631 ;;		Unchanged: 0/0
 27632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27637 ;;Total ram usage:        1 bytes
 27638 ;; Hardware stack levels used: 1
 27639 ;; Hardware stack levels required when called: 6
 27640 ;; This function calls:
 27641 ;;		_I2C1_SetBuffer
 27642 ;;		_I2C1_SetDataCompleteCallback
 27643 ;; This function is called by:
 27644 ;;		_i2c_read2ByteRegister
 27645 ;;		_I2C1_DO_TX
 27646 ;;		_I2C1_DO_RX
 27647 ;;		_I2C1_DO_TX_EMPTY
 27648 ;;		_I2C1_DO_ADDRESS_NACK
 27649 ;;		_I2C1_DO_RX_EMPTY
 27650 ;; This function uses a non-reentrant model
 27651 ;;
 27652                           
 27653     112E                     _rd2RegCompleteHandler:	
 27654                           ;psect for function _rd2RegCompleteHandler
 27655                           
 27656     112E                     l12535:	
 27657                           ;incstack = 0
 27658                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27659                           
 27660                           
 27661                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27662     112E  0878               	movf	rd2RegCompleteHandler@p,w
 27663     112F  00F1               	movwf	I2C1_SetBuffer@buffer
 27664     1130  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27665     1131  3002               	movlw	2
 27666     1132  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27667     1133  3000               	movlw	0
 27668     1134  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27669     1135  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27670     1138                     l12537:
 27671                           
 27672                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27673     1138  3000               	movlw	0
 27674     1139  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27675     113A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27676     113B  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27677     113C  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27678     113F                     l12539:
 27679                           
 27680                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27681     113F  3002               	movlw	2
 27682     1140                     l537:
 27683     1140  0008               	return
 27684     1141                     __end_of_rd2RegCompleteHandler:
 27685                           
 27686                           	psect	text147
 27687     111B                     __ptext147:	
 27688 ;; *************** function _rd1RegCompleteHandler *****************
 27689 ;; Defined at:
 27690 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27691 ;; Parameters:    Size  Location     Type
 27692 ;;  p               1    8[COMMON] PTR void 
 27693 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27694 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27695 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27696 ;; Auto vars:     Size  Location     Type
 27697 ;;		None
 27698 ;; Return value:  Size  Location     Type
 27699 ;;                  1    wreg      enum E363
 27700 ;; Registers used:
 27701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27702 ;; Tracked objects:
 27703 ;;		On entry : 0/0
 27704 ;;		On exit  : 0/0
 27705 ;;		Unchanged: 0/0
 27706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27711 ;;Total ram usage:        1 bytes
 27712 ;; Hardware stack levels used: 1
 27713 ;; Hardware stack levels required when called: 6
 27714 ;; This function calls:
 27715 ;;		_I2C1_SetBuffer
 27716 ;;		_I2C1_SetDataCompleteCallback
 27717 ;; This function is called by:
 27718 ;;		_i2c_read1ByteRegister
 27719 ;;		_I2C1_DO_TX
 27720 ;;		_I2C1_DO_RX
 27721 ;;		_I2C1_DO_TX_EMPTY
 27722 ;;		_I2C1_DO_ADDRESS_NACK
 27723 ;;		_I2C1_DO_RX_EMPTY
 27724 ;; This function uses a non-reentrant model
 27725 ;;
 27726                           
 27727     111B                     _rd1RegCompleteHandler:	
 27728                           ;psect for function _rd1RegCompleteHandler
 27729                           
 27730     111B                     l12527:	
 27731                           ;incstack = 0
 27732                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27733                           
 27734                           
 27735                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27736     111B  0878               	movf	rd1RegCompleteHandler@p,w
 27737     111C  00F1               	movwf	I2C1_SetBuffer@buffer
 27738     111D  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27739     111E  3001               	movlw	1
 27740     111F  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27741     1120  3000               	movlw	0
 27742     1121  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27743     1122  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27744     1125                     l12529:
 27745                           
 27746                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27747     1125  3000               	movlw	0
 27748     1126  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27749     1127  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27750     1128  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27751     1129  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27752     112C                     l12531:
 27753                           
 27754                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 27755     112C  3002               	movlw	2
 27756     112D                     l522:
 27757     112D  0008               	return
 27758     112E                     __end_of_rd1RegCompleteHandler:
 27759                           
 27760                           	psect	text148
 27761     1108                     __ptext148:	
 27762 ;; *************** function _wr1RegCompleteHandler *****************
 27763 ;; Defined at:
 27764 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27765 ;; Parameters:    Size  Location     Type
 27766 ;;  p               1    8[COMMON] PTR void 
 27767 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27768 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27769 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27770 ;; Auto vars:     Size  Location     Type
 27771 ;;		None
 27772 ;; Return value:  Size  Location     Type
 27773 ;;                  1    wreg      enum E363
 27774 ;; Registers used:
 27775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27776 ;; Tracked objects:
 27777 ;;		On entry : 0/0
 27778 ;;		On exit  : 0/0
 27779 ;;		Unchanged: 0/0
 27780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27781 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27785 ;;Total ram usage:        1 bytes
 27786 ;; Hardware stack levels used: 1
 27787 ;; Hardware stack levels required when called: 6
 27788 ;; This function calls:
 27789 ;;		_I2C1_SetBuffer
 27790 ;;		_I2C1_SetDataCompleteCallback
 27791 ;; This function is called by:
 27792 ;;		_i2c_write1ByteRegister
 27793 ;;		_I2C1_DO_TX
 27794 ;;		_I2C1_DO_RX
 27795 ;;		_I2C1_DO_TX_EMPTY
 27796 ;;		_I2C1_DO_ADDRESS_NACK
 27797 ;;		_I2C1_DO_RX_EMPTY
 27798 ;; This function uses a non-reentrant model
 27799 ;;
 27800                           
 27801     1108                     _wr1RegCompleteHandler:	
 27802                           ;psect for function _wr1RegCompleteHandler
 27803                           
 27804     1108                     l12519:	
 27805                           ;incstack = 0
 27806                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27807                           
 27808                           
 27809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 27810     1108  0878               	movf	wr1RegCompleteHandler@p,w
 27811     1109  00F1               	movwf	I2C1_SetBuffer@buffer
 27812     110A  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27813     110B  3001               	movlw	1
 27814     110C  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27815     110D  3000               	movlw	0
 27816     110E  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27817     110F  3190  20A4  3191   	fcall	_I2C1_SetBuffer
 27818     1112                     l12521:
 27819                           
 27820                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27821     1112  3000               	movlw	0
 27822     1113  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27823     1114  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27824     1115  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27825     1116  319F  27F5  3191   	fcall	_I2C1_SetDataCompleteCallback
 27826     1119                     l12523:
 27827                           
 27828                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 27829     1119  3004               	movlw	4
 27830     111A                     l501:
 27831     111A  0008               	return
 27832     111B                     __end_of_wr1RegCompleteHandler:
 27833                           
 27834                           	psect	text149
 27835     10F5                     __ptext149:	
 27836 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1724 *****************
 27837 ;; Defined at:
 27838 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27839 ;; Parameters:    Size  Location     Type
 27840 ;;  ptr             1    8[COMMON] PTR void 
 27841 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27842 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27843 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27844 ;; Auto vars:     Size  Location     Type
 27845 ;;		None
 27846 ;; Return value:  Size  Location     Type
 27847 ;;                  1    wreg      enum E363
 27848 ;; Registers used:
 27849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27850 ;; Tracked objects:
 27851 ;;		On entry : 0/0
 27852 ;;		On exit  : 0/0
 27853 ;;		Unchanged: 0/0
 27854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27859 ;;Total ram usage:        1 bytes
 27860 ;; Hardware stack levels used: 1
 27861 ;; Hardware stack levels required when called: 6
 27862 ;; This function calls:
 27863 ;;		_I2C1_SetBuffer
 27864 ;;		_I2C1_SetDataCompleteCallback
 27865 ;; This function is called by:
 27866 ;;		_I2C1_Write2ByteRegister
 27867 ;;		_I2C1_DO_TX
 27868 ;;		_I2C1_DO_RX
 27869 ;;		_I2C1_DO_TX_EMPTY
 27870 ;;		_I2C1_DO_ADDRESS_NACK
 27871 ;;		_I2C1_DO_RX_EMPTY
 27872 ;; This function uses a non-reentrant model
 27873 ;;
 27874                           
 27875     10F5                     _wr2RegCompleteHandler@i2c1_master_example$F1724:	
 27876                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1724
 27877                           
 27878     10F5                     l12581:	
 27879                           ;incstack = 0
 27880                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1724: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27881                           
 27882                           
 27883                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 27884     10F5  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1724@ptr,w
 27885     10F6  00F1               	movwf	I2C1_SetBuffer@buffer
 27886     10F7  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27887     10F8  3002               	movlw	2
 27888     10F9  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27889     10FA  3000               	movlw	0
 27890     10FB  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27891     10FC  3190  20A4  3190   	fcall	_I2C1_SetBuffer
 27892     10FF                     l12583:
 27893                           
 27894                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27895     10FF  3000               	movlw	0
 27896     1100  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27897     1101  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27898     1102  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27899     1103  319F  27F5  3190   	fcall	_I2C1_SetDataCompleteCallback
 27900     1106                     l12585:
 27901                           
 27902                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 27903     1106  3004               	movlw	4
 27904     1107                     l1364:
 27905     1107  0008               	return
 27906     1108                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1724:
 27907                           
 27908                           	psect	text150
 27909     1FF5                     __ptext150:	
 27910 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 27911 ;; Defined at:
 27912 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 27913 ;; Parameters:    Size  Location     Type
 27914 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 27915 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1735(1), wr2RegCompleteHandler@i2c1_master_example$F1724(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1718(1), rd2RegCompleteHandler@i2c1_master_example$F1712(1), 
 27916 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1701(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27917 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27918 ;;  ptr             1    7[COMMON] PTR void 
 27919 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27920 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27921 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27922 ;; Auto vars:     Size  Location     Type
 27923 ;;		None
 27924 ;; Return value:  Size  Location     Type
 27925 ;;                  1    wreg      void 
 27926 ;; Registers used:
 27927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27928 ;; Tracked objects:
 27929 ;;		On entry : 0/0
 27930 ;;		On exit  : 0/0
 27931 ;;		Unchanged: 0/0
 27932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27933 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27937 ;;Total ram usage:        3 bytes
 27938 ;; Hardware stack levels used: 1
 27939 ;; Hardware stack levels required when called: 5
 27940 ;; This function calls:
 27941 ;;		_I2C1_SetCallback
 27942 ;; This function is called by:
 27943 ;;		_wr1RegCompleteHandler
 27944 ;;		_i2c_write1ByteRegister
 27945 ;;		_rd1RegCompleteHandler
 27946 ;;		_i2c_read1ByteRegister
 27947 ;;		_rd2RegCompleteHandler
 27948 ;;		_i2c_read2ByteRegister
 27949 ;;		_wr2RegCompleteHandler
 27950 ;;		_rdBlkRegCompleteHandler
 27951 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 27952 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 27953 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 27954 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 27955 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 27956 ;;		_i2c_write2ByteRegister
 27957 ;;		_i2c_readDataBlock
 27958 ;;		_I2C1_Read1ByteRegister
 27959 ;;		_I2C1_Read2ByteRegister
 27960 ;;		_I2C1_Write1ByteRegister
 27961 ;;		_I2C1_Write2ByteRegister
 27962 ;;		_I2C1_ReadDataBlock
 27963 ;; This function uses a non-reentrant model
 27964 ;;
 27965                           
 27966     1FF5                     _I2C1_SetDataCompleteCallback:	
 27967                           ;psect for function _I2C1_SetDataCompleteCallback
 27968                           
 27969     1FF5                     l12511:	
 27970                           ;incstack = 0
 27971                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 27972                           
 27973                           
 27974                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 27975     1FF5  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 27976     1FF6  00F2               	movwf	I2C1_SetCallback@cb+1
 27977     1FF7  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 27978     1FF8  00F1               	movwf	I2C1_SetCallback@cb
 27979     1FF9  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 27980     1FFA  00F3               	movwf	I2C1_SetCallback@ptr
 27981     1FFB  3000               	movlw	0
 27982     1FFC  3194  2466  319F   	fcall	_I2C1_SetCallback
 27983     1FFF                     l2397:
 27984     1FFF  0008               	return
 27985     2000                     __end_of_I2C1_SetDataCompleteCallback:
 27986                           
 27987                           	psect	text151
 27988     1466                     __ptext151:	
 27989 ;; *************** function _I2C1_SetCallback *****************
 27990 ;; Defined at:
 27991 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 27992 ;; Parameters:    Size  Location     Type
 27993 ;;  idx             1    wreg     enum E12583
 27994 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 27995 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1735(1), wr2RegCompleteHandler@i2c1_master_example$F1724(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1718(1), rd2RegCompleteHandler@i2c1_master_example$F1712(1), 
 27996 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1701(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27997 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27998 ;;  ptr             1    3[COMMON] PTR void 
 27999 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28000 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28001 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28002 ;; Auto vars:     Size  Location     Type
 28003 ;;  idx             1    4[COMMON] enum E12583
 28004 ;; Return value:  Size  Location     Type
 28005 ;;                  1    wreg      void 
 28006 ;; Registers used:
 28007 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28008 ;; Tracked objects:
 28009 ;;		On entry : 0/0
 28010 ;;		On exit  : 0/0
 28011 ;;		Unchanged: 0/0
 28012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28017 ;;Total ram usage:        4 bytes
 28018 ;; Hardware stack levels used: 1
 28019 ;; Hardware stack levels required when called: 4
 28020 ;; This function calls:
 28021 ;;		Nothing
 28022 ;; This function is called by:
 28023 ;;		_I2C1_SetDataCompleteCallback
 28024 ;;		_I2C1_SetAddressNackCallback
 28025 ;;		_I2C1_SetWriteCollisionCallback
 28026 ;;		_I2C1_SetDataNackCallback
 28027 ;;		_I2C1_SetTimeoutCallback
 28028 ;; This function uses a non-reentrant model
 28029 ;;
 28030                           
 28031     1466                     _I2C1_SetCallback:	
 28032                           ;psect for function _I2C1_SetCallback
 28033                           
 28034                           
 28035                           ;incstack = 0
 28036                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28037                           ;I2C1_SetCallback@idx stored from wreg
 28038     1466  00F4               	movwf	I2C1_SetCallback@idx
 28039     1467                     l12499:
 28040                           
 28041                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28042     1467  0871               	movf	I2C1_SetCallback@cb,w
 28043     1468  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28044     1469  1903               	btfsc	3,2
 28045     146A  2C6C               	goto	u9541
 28046     146B  2C6D               	goto	u9540
 28047     146C                     u9541:
 28048     146C  2C7C               	goto	l12503
 28049     146D                     u9540:
 28050     146D                     l12501:
 28051                           
 28052                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28053     146D  3574               	lslf	I2C1_SetCallback@idx,w
 28054     146E  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28055     146F  0086               	movwf	6
 28056     1470  0187               	clrf	7
 28057     1471  0871               	movf	I2C1_SetCallback@cb,w
 28058     1472  3FC0               	movwi [0]fsr1
 28059     1473  0872               	movf	I2C1_SetCallback@cb+1,w
 28060     1474  3FC1               	movwi [1]fsr1
 28061                           
 28062                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28063     1475  0874               	movf	I2C1_SetCallback@idx,w
 28064     1476  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28065     1477  0086               	movwf	6
 28066     1478  0187               	clrf	7
 28067     1479  0873               	movf	I2C1_SetCallback@ptr,w
 28068     147A  0081               	movwf	1
 28069                           
 28070                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28071     147B  2C89               	goto	l2414
 28072     147C                     l12503:
 28073                           
 28074                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28075     147C  3574               	lslf	I2C1_SetCallback@idx,w
 28076     147D  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28077     147E  0086               	movwf	6
 28078     147F  0187               	clrf	7
 28079     1480  308D               	movlw	low _I2C1_CallbackReturnStop
 28080     1481  3FC0               	movwi [0]fsr1
 28081     1482  301E               	movlw	high _I2C1_CallbackReturnStop
 28082     1483  3FC1               	movwi [1]fsr1
 28083                           
 28084                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28085     1484  0874               	movf	I2C1_SetCallback@idx,w
 28086     1485  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28087     1486  0086               	movwf	6
 28088     1487  0187               	clrf	7
 28089     1488  0181               	clrf	1
 28090     1489                     l2414:
 28091     1489  0008               	return
 28092     148A                     __end_of_I2C1_SetCallback:
 28093                           
 28094                           	psect	text152
 28095     10A4                     __ptext152:	
 28096 ;; *************** function _I2C1_SetBuffer *****************
 28097 ;; Defined at:
 28098 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;  buffer          2    1[COMMON] PTR void 
 28101 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 28102 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 28103 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), RAM(8192), i2c_readDataBlock@reg(1), 
 28104 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 28105 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
 28106 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 28107 ;;  bufferSize      2    3[COMMON] unsigned int 
 28108 ;; Auto vars:     Size  Location     Type
 28109 ;;		None
 28110 ;; Return value:  Size  Location     Type
 28111 ;;                  1    wreg      void 
 28112 ;; Registers used:
 28113 ;;		wreg
 28114 ;; Tracked objects:
 28115 ;;		On entry : 0/0
 28116 ;;		On exit  : 0/0
 28117 ;;		Unchanged: 0/0
 28118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28123 ;;Total ram usage:        4 bytes
 28124 ;; Hardware stack levels used: 1
 28125 ;; Hardware stack levels required when called: 4
 28126 ;; This function calls:
 28127 ;;		Nothing
 28128 ;; This function is called by:
 28129 ;;		_wr1RegCompleteHandler
 28130 ;;		_i2c_write1ByteRegister
 28131 ;;		_rd1RegCompleteHandler
 28132 ;;		_i2c_read1ByteRegister
 28133 ;;		_rd2RegCompleteHandler
 28134 ;;		_i2c_read2ByteRegister
 28135 ;;		_wr2RegCompleteHandler
 28136 ;;		_rdBlkRegCompleteHandler
 28137 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1701
 28138 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1712
 28139 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1718
 28140 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1724
 28141 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1735
 28142 ;;		_i2c_writeNBytes
 28143 ;;		_i2c_write2ByteRegister
 28144 ;;		_i2c_readDataBlock
 28145 ;;		_i2c_readNBytes
 28146 ;;		_I2C1_Read1ByteRegister
 28147 ;;		_I2C1_Read2ByteRegister
 28148 ;;		_I2C1_Write1ByteRegister
 28149 ;;		_I2C1_Write2ByteRegister
 28150 ;;		_I2C1_WriteNBytes
 28151 ;;		_I2C1_ReadNBytes
 28152 ;;		_I2C1_ReadDataBlock
 28153 ;; This function uses a non-reentrant model
 28154 ;;
 28155                           
 28156     10A4                     _I2C1_SetBuffer:	
 28157                           ;psect for function _I2C1_SetBuffer
 28158                           
 28159     10A4                     l12505:	
 28160                           ;incstack = 0
 28161                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28162                           
 28163                           
 28164                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28165     10A4  0141               	movlb	1	; select bank1
 28166     10A5  1DBD               	btfss	(_I2C1_Status^(0+128)+29),3
 28167     10A6  28A8               	goto	u9551
 28168     10A7  28A9               	goto	u9550
 28169     10A8                     u9551:
 28170     10A8  28B2               	goto	l2394
 28171     10A9                     u9550:
 28172     10A9                     l12507:
 28173                           
 28174                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28175     10A9  0872               	movf	I2C1_SetBuffer@buffer+1,w
 28176     10AA  00B8               	movwf	((low ((_I2C1_Status| 0+23))+1))^(0+128)
 28177     10AB  0871               	movf	I2C1_SetBuffer@buffer,w
 28178     10AC  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28179                           
 28180                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28181     10AD  0874               	movf	I2C1_SetBuffer@bufferSize+1,w
 28182     10AE  00BA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 28183     10AF  0873               	movf	I2C1_SetBuffer@bufferSize,w
 28184     10B0  00B9               	movwf	(_I2C1_Status^(0+128)+25)
 28185     10B1                     l12509:
 28186                           
 28187                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28188     10B1  11BD               	bcf	(_I2C1_Status^(0+128)+29),3
 28189     10B2                     l2394:
 28190     10B2  0008               	return
 28191     10B3                     __end_of_I2C1_SetBuffer:
 28192                           
 28193                           	psect	text153
 28194     1EA0                     __ptext153:	
 28195 ;; *************** function _I2C1_MasterStop *****************
 28196 ;; Defined at:
 28197 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;		None
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;		None
 28202 ;; Return value:  Size  Location     Type
 28203 ;;                  1    wreg      void 
 28204 ;; Registers used:
 28205 ;;		None
 28206 ;; Tracked objects:
 28207 ;;		On entry : 0/0
 28208 ;;		On exit  : 0/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28215 ;;Total ram usage:        0 bytes
 28216 ;; Hardware stack levels used: 1
 28217 ;; Hardware stack levels required when called: 4
 28218 ;; This function calls:
 28219 ;;		Nothing
 28220 ;; This function is called by:
 28221 ;;		_I2C1_DO_SEND_STOP
 28222 ;; This function uses a non-reentrant model
 28223 ;;
 28224                           
 28225     1EA0                     _I2C1_MasterStop:	
 28226                           ;psect for function _I2C1_MasterStop
 28227                           
 28228     1EA0                     l12515:	
 28229                           ;incstack = 0
 28230                           ; Regs used in _I2C1_MasterStop: []
 28231                           
 28232                           
 28233                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28234     1EA0  0143               	movlb	3	; select bank3
 28235     1EA1  1511               	bsf	17,2	;volatile
 28236     1EA2                     l2560:
 28237     1EA2  0008               	return
 28238     1EA3                     __end_of_I2C1_MasterStop:
 28239                           
 28240                           	psect	text154
 28241     1E9D                     __ptext154:	
 28242 ;; *************** function _I2C1_MasterEnableRestart *****************
 28243 ;; Defined at:
 28244 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28245 ;; Parameters:    Size  Location     Type
 28246 ;;		None
 28247 ;; Auto vars:     Size  Location     Type
 28248 ;;		None
 28249 ;; Return value:  Size  Location     Type
 28250 ;;                  1    wreg      void 
 28251 ;; Registers used:
 28252 ;;		None
 28253 ;; Tracked objects:
 28254 ;;		On entry : 0/0
 28255 ;;		On exit  : 0/0
 28256 ;;		Unchanged: 0/0
 28257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28262 ;;Total ram usage:        0 bytes
 28263 ;; Hardware stack levels used: 1
 28264 ;; Hardware stack levels required when called: 4
 28265 ;; This function calls:
 28266 ;;		Nothing
 28267 ;; This function is called by:
 28268 ;;		_I2C1_DO_SEND_RESTART_READ
 28269 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28270 ;;		_I2C1_DO_SEND_RESTART
 28271 ;;		_I2C1_DO_RX_EMPTY
 28272 ;; This function uses a non-reentrant model
 28273 ;;
 28274                           
 28275     1E9D                     _I2C1_MasterEnableRestart:	
 28276                           ;psect for function _I2C1_MasterEnableRestart
 28277                           
 28278     1E9D                     l12513:	
 28279                           ;incstack = 0
 28280                           ; Regs used in _I2C1_MasterEnableRestart: []
 28281                           
 28282                           
 28283                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28284     1E9D  0143               	movlb	3	; select bank3
 28285     1E9E  1491               	bsf	17,1	;volatile
 28286     1E9F                     l2548:
 28287     1E9F  0008               	return
 28288     1EA0                     __end_of_I2C1_MasterEnableRestart:
 28289                           
 28290                           	psect	text155
 28291     1E9A                     __ptext155:	
 28292 ;; *************** function _I2C1_MasterStart *****************
 28293 ;; Defined at:
 28294 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28295 ;; Parameters:    Size  Location     Type
 28296 ;;		None
 28297 ;; Auto vars:     Size  Location     Type
 28298 ;;		None
 28299 ;; Return value:  Size  Location     Type
 28300 ;;                  1    wreg      void 
 28301 ;; Registers used:
 28302 ;;		None
 28303 ;; Tracked objects:
 28304 ;;		On entry : 0/0
 28305 ;;		On exit  : 0/0
 28306 ;;		Unchanged: 0/0
 28307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28312 ;;Total ram usage:        0 bytes
 28313 ;; Hardware stack levels used: 1
 28314 ;; Hardware stack levels required when called: 4
 28315 ;; This function calls:
 28316 ;;		Nothing
 28317 ;; This function is called by:
 28318 ;;		_I2C1_MasterOperation
 28319 ;; This function uses a non-reentrant model
 28320 ;;
 28321                           
 28322     1E9A                     _I2C1_MasterStart:	
 28323                           ;psect for function _I2C1_MasterStart
 28324                           
 28325     1E9A                     l12829:	
 28326                           ;incstack = 0
 28327                           ; Regs used in _I2C1_MasterStart: []
 28328                           
 28329                           
 28330                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28331     1E9A  0143               	movlb	3	; select bank3
 28332     1E9B  1411               	bsf	17,0	;volatile
 28333     1E9C                     l2557:
 28334     1E9C  0008               	return
 28335     1E9D                     __end_of_I2C1_MasterStart:
 28336                           
 28337                           	psect	text156
 28338     1262                     __ptext156:	
 28339 ;; *************** function _I2C1_Close *****************
 28340 ;; Defined at:
 28341 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28342 ;; Parameters:    Size  Location     Type
 28343 ;;		None
 28344 ;; Auto vars:     Size  Location     Type
 28345 ;;  returnValue     1    1[COMMON] enum E358
 28346 ;; Return value:  Size  Location     Type
 28347 ;;                  1    wreg      enum E358
 28348 ;; Registers used:
 28349 ;;		wreg, status,2, status,0, pclath, cstack
 28350 ;; Tracked objects:
 28351 ;;		On entry : 0/0
 28352 ;;		On exit  : 0/0
 28353 ;;		Unchanged: 0/0
 28354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28359 ;;Total ram usage:        1 bytes
 28360 ;; Hardware stack levels used: 1
 28361 ;; Hardware stack levels required when called: 5
 28362 ;; This function calls:
 28363 ;;		_I2C1_MasterClearIrq
 28364 ;;		_I2C1_MasterClose
 28365 ;;		_I2C1_MasterDisableIrq
 28366 ;; This function is called by:
 28367 ;;		_i2c_write1ByteRegister
 28368 ;;		_i2c_read1ByteRegister
 28369 ;;		_i2c_read2ByteRegister
 28370 ;;		_i2c_writeNBytes
 28371 ;;		_i2c_write2ByteRegister
 28372 ;;		_i2c_readDataBlock
 28373 ;;		_i2c_readNBytes
 28374 ;;		_I2C1_Read1ByteRegister
 28375 ;;		_I2C1_Read2ByteRegister
 28376 ;;		_I2C1_Write1ByteRegister
 28377 ;;		_I2C1_Write2ByteRegister
 28378 ;;		_I2C1_WriteNBytes
 28379 ;;		_I2C1_ReadNBytes
 28380 ;;		_I2C1_ReadDataBlock
 28381 ;; This function uses a non-reentrant model
 28382 ;;
 28383                           
 28384     1262                     _I2C1_Close:	
 28385                           ;psect for function _I2C1_Close
 28386                           
 28387     1262                     l13001:	
 28388                           ;incstack = 0
 28389                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28390                           
 28391                           
 28392                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28393     1262  01F1               	clrf	I2C1_Close@returnValue
 28394     1263  0AF1               	incf	I2C1_Close@returnValue,f
 28395                           
 28396                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28397     1264  0141               	movlb	1	; select bank1
 28398     1265  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 28399     1266  2A68               	goto	u9771
 28400     1267  2A69               	goto	u9770
 28401     1268                     u9771:
 28402     1268  2A78               	goto	l13015
 28403     1269                     u9770:
 28404     1269                     l13003:
 28405                           
 28406                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28407     1269  113D               	bcf	(_I2C1_Status^(0+128)+29),2
 28408     126A                     l13005:
 28409                           
 28410                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28411     126A  30FF               	movlw	255
 28412     126B  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28413     126C                     l13007:
 28414                           
 28415                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28416     126C  319E  2691  3192   	fcall	_I2C1_MasterClearIrq
 28417     126F                     l13009:
 28418                           
 28419                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28420     126F  319E  2697  3192   	fcall	_I2C1_MasterDisableIrq
 28421     1272                     l13011:
 28422                           
 28423                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28424     1272  319E  2694  3192   	fcall	_I2C1_MasterClose
 28425     1275                     l13013:
 28426                           
 28427                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28428     1275  0141               	movlb	1	; select bank1
 28429     1276  083C               	movf	(_I2C1_Status^(0+128)+28),w
 28430     1277  00F1               	movwf	I2C1_Close@returnValue
 28431     1278                     l13015:
 28432                           
 28433                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28434     1278  0871               	movf	I2C1_Close@returnValue,w
 28435     1279                     l2375:
 28436     1279  0008               	return
 28437     127A                     __end_of_I2C1_Close:
 28438                           
 28439                           	psect	text157
 28440     1E97                     __ptext157:	
 28441 ;; *************** function _I2C1_MasterDisableIrq *****************
 28442 ;; Defined at:
 28443 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28444 ;; Parameters:    Size  Location     Type
 28445 ;;		None
 28446 ;; Auto vars:     Size  Location     Type
 28447 ;;		None
 28448 ;; Return value:  Size  Location     Type
 28449 ;;                  1    wreg      void 
 28450 ;; Registers used:
 28451 ;;		None
 28452 ;; Tracked objects:
 28453 ;;		On entry : 0/0
 28454 ;;		On exit  : 0/0
 28455 ;;		Unchanged: 0/0
 28456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28461 ;;Total ram usage:        0 bytes
 28462 ;; Hardware stack levels used: 1
 28463 ;; Hardware stack levels required when called: 4
 28464 ;; This function calls:
 28465 ;;		Nothing
 28466 ;; This function is called by:
 28467 ;;		_I2C1_Close
 28468 ;;		_I2C1_SetTimeOut
 28469 ;; This function uses a non-reentrant model
 28470 ;;
 28471                           
 28472     1E97                     _I2C1_MasterDisableIrq:	
 28473                           ;psect for function _I2C1_MasterDisableIrq
 28474                           
 28475     1E97                     l12939:	
 28476                           ;incstack = 0
 28477                           ; Regs used in _I2C1_MasterDisableIrq: []
 28478                           
 28479                           
 28480                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28481     1E97  014E               	movlb	14	; select bank14
 28482     1E98  1019               	bcf	25,0	;volatile
 28483     1E99                     l2584:
 28484     1E99  0008               	return
 28485     1E9A                     __end_of_I2C1_MasterDisableIrq:
 28486                           
 28487                           	psect	text158
 28488     1E94                     __ptext158:	
 28489 ;; *************** function _I2C1_MasterClose *****************
 28490 ;; Defined at:
 28491 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28492 ;; Parameters:    Size  Location     Type
 28493 ;;		None
 28494 ;; Auto vars:     Size  Location     Type
 28495 ;;		None
 28496 ;; Return value:  Size  Location     Type
 28497 ;;                  1    wreg      void 
 28498 ;; Registers used:
 28499 ;;		None
 28500 ;; Tracked objects:
 28501 ;;		On entry : 0/0
 28502 ;;		On exit  : 0/0
 28503 ;;		Unchanged: 0/0
 28504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28509 ;;Total ram usage:        0 bytes
 28510 ;; Hardware stack levels used: 1
 28511 ;; Hardware stack levels required when called: 4
 28512 ;; This function calls:
 28513 ;;		Nothing
 28514 ;; This function is called by:
 28515 ;;		_I2C1_Close
 28516 ;; This function uses a non-reentrant model
 28517 ;;
 28518                           
 28519     1E94                     _I2C1_MasterClose:	
 28520                           ;psect for function _I2C1_MasterClose
 28521                           
 28522     1E94                     l12941:	
 28523                           ;incstack = 0
 28524                           ; Regs used in _I2C1_MasterClose: []
 28525                           
 28526                           
 28527                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28528     1E94  0143               	movlb	3	; select bank3
 28529     1E95  1290               	bcf	16,5	;volatile
 28530     1E96                     l2539:
 28531     1E96  0008               	return
 28532     1E97                     __end_of_I2C1_MasterClose:
 28533                           
 28534                           	psect	text159
 28535     1E91                     __ptext159:	
 28536 ;; *************** function _I2C1_MasterClearIrq *****************
 28537 ;; Defined at:
 28538 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28539 ;; Parameters:    Size  Location     Type
 28540 ;;		None
 28541 ;; Auto vars:     Size  Location     Type
 28542 ;;		None
 28543 ;; Return value:  Size  Location     Type
 28544 ;;                  1    wreg      void 
 28545 ;; Registers used:
 28546 ;;		None
 28547 ;; Tracked objects:
 28548 ;;		On entry : 0/0
 28549 ;;		On exit  : 0/0
 28550 ;;		Unchanged: 0/0
 28551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28556 ;;Total ram usage:        0 bytes
 28557 ;; Hardware stack levels used: 1
 28558 ;; Hardware stack levels required when called: 4
 28559 ;; This function calls:
 28560 ;;		Nothing
 28561 ;; This function is called by:
 28562 ;;		_I2C1_Open
 28563 ;;		_I2C1_Close
 28564 ;;		_I2C1_MasterFsm
 28565 ;; This function uses a non-reentrant model
 28566 ;;
 28567                           
 28568     1E91                     _I2C1_MasterClearIrq:	
 28569                           ;psect for function _I2C1_MasterClearIrq
 28570                           
 28571     1E91                     l12655:	
 28572                           ;incstack = 0
 28573                           ; Regs used in _I2C1_MasterClearIrq: []
 28574                           
 28575                           
 28576                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28577     1E91  014E               	movlb	14	; select bank14
 28578     1E92  100F               	bcf	15,0	;volatile
 28579     1E93                     l2587:
 28580     1E93  0008               	return
 28581     1E94                     __end_of_I2C1_MasterClearIrq:
 28582                           
 28583                           	psect	intentry
 28584     0004                     __pintentry:	
 28585 ;; *************** function _INTERRUPT_InterruptManager *****************
 28586 ;; Defined at:
 28587 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28588 ;; Parameters:    Size  Location     Type
 28589 ;;		None
 28590 ;; Auto vars:     Size  Location     Type
 28591 ;;		None
 28592 ;; Return value:  Size  Location     Type
 28593 ;;                  1    wreg      void 
 28594 ;; Registers used:
 28595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28596 ;; Tracked objects:
 28597 ;;		On entry : 0/0
 28598 ;;		On exit  : 0/0
 28599 ;;		Unchanged: 0/0
 28600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28605 ;;Total ram usage:        0 bytes
 28606 ;; Hardware stack levels used: 1
 28607 ;; Hardware stack levels required when called: 3
 28608 ;; This function calls:
 28609 ;;		NULL
 28610 ;;		_EUSART1_Receive_ISR
 28611 ;;		_EUSART1_Transmit_ISR
 28612 ;;		_EUSART2_Receive_ISR
 28613 ;;		_EUSART2_Transmit_ISR
 28614 ;;		_PIN_MANAGER_IOC
 28615 ;; This function is called by:
 28616 ;;		Interrupt level 1
 28617 ;; This function uses a non-reentrant model
 28618 ;;
 28619                           
 28620     0004                     _INTERRUPT_InterruptManager:
 28621                           
 28622                           ;incstack = 0
 28623 ;; hardware stack exceeded
 28624     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28625                           
 28626                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28627     0005  3180               	pagesel	$
 28628     0006                     i1l16357:
 28629                           
 28630                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28631     0006  014E               	movlb	14	; select bank14
 28632     0007  1E16               	btfss	22,4	;volatile
 28633     0008  280A               	goto	u1383_21
 28634     0009  280B               	goto	u1383_20
 28635     000A                     u1383_21:
 28636     000A  2813               	goto	i1l1920
 28637     000B                     u1383_20:
 28638     000B                     i1l16359:
 28639     000B  1E0C               	btfss	12,4	;volatile
 28640     000C  280E               	goto	u1384_21
 28641     000D  280F               	goto	u1384_20
 28642     000E                     u1384_21:
 28643     000E  2813               	goto	i1l1920
 28644     000F                     u1384_20:
 28645     000F                     i1l16361:
 28646                           
 28647                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28648     000F  319F  2796  3180   	fcall	_PIN_MANAGER_IOC
 28649                           
 28650                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28651     0012  2853               	goto	i1l1932
 28652     0013                     i1l1920:	
 28653                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28654                           
 28655     0013  1F0B               	btfss	11,6	;volatile
 28656     0014  2816               	goto	u1385_21
 28657     0015  2817               	goto	u1385_20
 28658     0016                     u1385_21:
 28659     0016  2853               	goto	i1l1932
 28660     0017                     u1385_20:
 28661     0017                     i1l16363:
 28662                           
 28663                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28664     0017  1F19               	btfss	25,6	;volatile
 28665     0018  281A               	goto	u1386_21
 28666     0019  281B               	goto	u1386_20
 28667     001A                     u1386_21:
 28668     001A  2826               	goto	i1l1923
 28669     001B                     u1386_20:
 28670     001B                     i1l16365:
 28671     001B  1F0F               	btfss	15,6	;volatile
 28672     001C  281E               	goto	u1387_21
 28673     001D  281F               	goto	u1387_20
 28674     001E                     u1387_21:
 28675     001E  2826               	goto	i1l1923
 28676     001F                     u1387_20:
 28677     001F                     i1l16367:
 28678                           
 28679                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28680     001F  0141               	movlb	1	; select bank1
 28681     0020  086F               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28682     0021  008A               	movwf	10
 28683     0022  086E               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28684     0023  000A               	callw
 28685     0024  3180               	pagesel	$
 28686                           
 28687                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28688     0025  2853               	goto	i1l1932
 28689     0026                     i1l1923:	
 28690                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28691                           
 28692     0026  1F99               	btfss	25,7	;volatile
 28693     0027  2829               	goto	u1388_21
 28694     0028  282A               	goto	u1388_20
 28695     0029                     u1388_21:
 28696     0029  2835               	goto	i1l1925
 28697     002A                     u1388_20:
 28698     002A                     i1l16369:
 28699     002A  1F8F               	btfss	15,7	;volatile
 28700     002B  282D               	goto	u1389_21
 28701     002C  282E               	goto	u1389_20
 28702     002D                     u1389_21:
 28703     002D  2835               	goto	i1l1925
 28704     002E                     u1389_20:
 28705     002E                     i1l16371:
 28706                           
 28707                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28708     002E  0141               	movlb	1	; select bank1
 28709     002F  086D               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28710     0030  008A               	movwf	10
 28711     0031  086C               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28712     0032  000A               	callw
 28713     0033  3180               	pagesel	$
 28714                           
 28715                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28716     0034  2853               	goto	i1l1932
 28717     0035                     i1l1925:	
 28718                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28719                           
 28720     0035  1E19               	btfss	25,4	;volatile
 28721     0036  2838               	goto	u1390_21
 28722     0037  2839               	goto	u1390_20
 28723     0038                     u1390_21:
 28724     0038  2844               	goto	i1l1927
 28725     0039                     u1390_20:
 28726     0039                     i1l16373:
 28727     0039  1E0F               	btfss	15,4	;volatile
 28728     003A  283C               	goto	u1391_21
 28729     003B  283D               	goto	u1391_20
 28730     003C                     u1391_21:
 28731     003C  2844               	goto	i1l1927
 28732     003D                     u1391_20:
 28733     003D                     i1l16375:
 28734                           
 28735                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28736     003D  0142               	movlb	2	; select bank2
 28737     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28738     003F  008A               	movwf	10
 28739     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28740     0041  000A               	callw
 28741     0042  3180               	pagesel	$
 28742                           
 28743                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28744     0043  2853               	goto	i1l1932
 28745     0044                     i1l1927:	
 28746                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28747                           
 28748     0044  1E99               	btfss	25,5	;volatile
 28749     0045  2847               	goto	u1392_21
 28750     0046  2848               	goto	u1392_20
 28751     0047                     u1392_21:
 28752     0047  2853               	goto	i1l1926
 28753     0048                     u1392_20:
 28754     0048                     i1l16377:
 28755     0048  1E8F               	btfss	15,5	;volatile
 28756     0049  284B               	goto	u1393_21
 28757     004A  284C               	goto	u1393_20
 28758     004B                     u1393_21:
 28759     004B  2853               	goto	i1l1926
 28760     004C                     u1393_20:
 28761     004C                     i1l16379:
 28762                           
 28763                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 28764     004C  0142               	movlb	2	; select bank2
 28765     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 28766     004E  008A               	movwf	10
 28767     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 28768     0050  000A               	callw
 28769     0051  3180               	pagesel	$
 28770                           
 28771                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 28772     0052  2853               	goto	i1l1932
 28773     0053                     i1l1926:
 28774     0053                     i1l1932:
 28775     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 28776     0054  0009               	retfie
 28777     0055                     __end_of_INTERRUPT_InterruptManager:
 28778                           
 28779                           	psect	text161
 28780     1F96                     __ptext161:	
 28781 ;; *************** function _PIN_MANAGER_IOC *****************
 28782 ;; Defined at:
 28783 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 28784 ;; Parameters:    Size  Location     Type
 28785 ;;		None
 28786 ;; Auto vars:     Size  Location     Type
 28787 ;;		None
 28788 ;; Return value:  Size  Location     Type
 28789 ;;                  1    wreg      void 
 28790 ;; Registers used:
 28791 ;;		wreg, status,2, status,0, pclath, cstack
 28792 ;; Tracked objects:
 28793 ;;		On entry : 0/0
 28794 ;;		On exit  : 0/0
 28795 ;;		Unchanged: 0/0
 28796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28801 ;;Total ram usage:        0 bytes
 28802 ;; Hardware stack levels used: 1
 28803 ;; Hardware stack levels required when called: 2
 28804 ;; This function calls:
 28805 ;;		_IOCAF6_ISR
 28806 ;; This function is called by:
 28807 ;;		_INTERRUPT_InterruptManager
 28808 ;; This function uses a non-reentrant model
 28809 ;;
 28810                           
 28811     1F96                     _PIN_MANAGER_IOC:	
 28812                           ;psect for function _PIN_MANAGER_IOC
 28813                           
 28814     1F96                     i1l10323:	
 28815                           ;incstack = 0
 28816 ;; hardware stack exceeded
 28817                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 28818                           
 28819                           
 28820                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 28821     1F96  017E               	movlb	62	; select bank62
 28822     1F97  1F3F               	btfss	63,6	;volatile
 28823     1F98  2F9A               	goto	u712_21
 28824     1F99  2F9B               	goto	u712_20
 28825     1F9A                     u712_21:
 28826     1F9A  2F9E               	goto	i1l2072
 28827     1F9B                     u712_20:
 28828     1F9B                     i1l10325:
 28829                           
 28830                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 28831     1F9B  3190  2095  319F   	fcall	_IOCAF6_ISR
 28832     1F9E                     i1l2072:
 28833     1F9E  0008               	return
 28834     1F9F                     __end_of_PIN_MANAGER_IOC:
 28835                           
 28836                           	psect	text162
 28837     1095                     __ptext162:	
 28838 ;; *************** function _IOCAF6_ISR *****************
 28839 ;; Defined at:
 28840 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 28841 ;; Parameters:    Size  Location     Type
 28842 ;;		None
 28843 ;; Auto vars:     Size  Location     Type
 28844 ;;		None
 28845 ;; Return value:  Size  Location     Type
 28846 ;;                  1    wreg      void 
 28847 ;; Registers used:
 28848 ;;		wreg, status,2, status,0, pclath, cstack
 28849 ;; Tracked objects:
 28850 ;;		On entry : 0/0
 28851 ;;		On exit  : 0/0
 28852 ;;		Unchanged: 0/0
 28853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28858 ;;Total ram usage:        0 bytes
 28859 ;; Hardware stack levels used: 1
 28860 ;; Hardware stack levels required when called: 1
 28861 ;; This function calls:
 28862 ;;		NULL
 28863 ;;		_IOCAF6_DefaultInterruptHandler
 28864 ;; This function is called by:
 28865 ;;		_PIN_MANAGER_IOC
 28866 ;; This function uses a non-reentrant model
 28867 ;;
 28868                           
 28869     1095                     _IOCAF6_ISR:	
 28870                           ;psect for function _IOCAF6_ISR
 28871                           
 28872     1095                     i1l9807:	
 28873                           ;incstack = 0
 28874 ;; hardware stack exceeded
 28875                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 28876                           
 28877                           
 28878                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 28879     1095  0141               	movlb	1	; select bank1
 28880     1096  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28881     1097  046B               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28882     1098  1903               	btfsc	3,2
 28883     1099  289B               	goto	u669_21
 28884     109A  289C               	goto	u669_20
 28885     109B                     u669_21:
 28886     109B  28A1               	goto	i1l9811
 28887     109C                     u669_20:
 28888     109C                     i1l9809:
 28889                           
 28890                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 28891     109C  086B               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28892     109D  008A               	movwf	10
 28893     109E  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28894     109F  000A               	callw
 28895     10A0  3190               	pagesel	$
 28896     10A1                     i1l9811:
 28897                           
 28898                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 28899     10A1  017E               	movlb	62	; select bank62
 28900     10A2  133F               	bcf	63,6	;volatile
 28901     10A3                     i1l2076:
 28902     10A3  0008               	return
 28903     10A4                     __end_of_IOCAF6_ISR:
 28904                           
 28905                           	psect	text163
 28906     07FF                     __ptext163:	
 28907 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 28908 ;; Defined at:
 28909 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 28910 ;; Parameters:    Size  Location     Type
 28911 ;;		None
 28912 ;; Auto vars:     Size  Location     Type
 28913 ;;		None
 28914 ;; Return value:  Size  Location     Type
 28915 ;;                  1    wreg      void 
 28916 ;; Registers used:
 28917 ;;		None
 28918 ;; Tracked objects:
 28919 ;;		On entry : 0/0
 28920 ;;		On exit  : 0/0
 28921 ;;		Unchanged: 0/0
 28922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28927 ;;Total ram usage:        0 bytes
 28928 ;; Hardware stack levels used: 1
 28929 ;; This function calls:
 28930 ;;		Nothing
 28931 ;; This function is called by:
 28932 ;;		_PIN_MANAGER_Initialize
 28933 ;;		_IOCAF6_ISR
 28934 ;; This function uses a non-reentrant model
 28935 ;;
 28936                           
 28937     07FF                     _IOCAF6_DefaultInterruptHandler:	
 28938                           ;psect for function _IOCAF6_DefaultInterruptHandler
 28939                           
 28940     07FF                     i1l2082:	
 28941                           ;incstack = 0
 28942 ;; hardware stack exceeded
 28943                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 28944                           
 28945     07FF  0008               	return
 28946     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 28947                           
 28948                           	psect	text164
 28949     13FF                     __ptext164:	
 28950 ;; *************** function _EUSART1_Transmit_ISR *****************
 28951 ;; Defined at:
 28952 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 28953 ;; Parameters:    Size  Location     Type
 28954 ;;		None
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;		None
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  1    wreg      void 
 28959 ;; Registers used:
 28960 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 0/0
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28970 ;;Total ram usage:        1 bytes
 28971 ;; Hardware stack levels used: 1
 28972 ;; This function calls:
 28973 ;;		Nothing
 28974 ;; This function is called by:
 28975 ;;		_EUSART1_Initialize
 28976 ;;		_INTERRUPT_InterruptManager
 28977 ;; This function uses a non-reentrant model
 28978 ;;
 28979                           
 28980     13FF                     _EUSART1_Transmit_ISR:	
 28981                           ;psect for function _EUSART1_Transmit_ISR
 28982                           
 28983     13FF                     i1l10291:	
 28984                           ;incstack = 0
 28985                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 28986                           
 28987                           
 28988                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 28989     13FF  3008               	movlw	8
 28990     1400  0140               	movlb	0	; select bank0
 28991     1401  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 28992     1402  1803               	skipnc
 28993     1403  2C05               	goto	u707_21
 28994     1404  2C06               	goto	u707_20
 28995     1405                     u707_21:
 28996     1405  2C1E               	goto	i1l1857
 28997     1406                     u707_20:
 28998     1406                     i1l10293:
 28999                           
 29000                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29001     1406  085C               	movf	_eusart1TxTail,w
 29002     1407  3EC6               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 29003     1408  0086               	movwf	6
 29004     1409  0187               	clrf	7
 29005     140A  0801               	movf	1,w
 29006     140B  0142               	movlb	2	; select bank2
 29007     140C  009A               	movwf	26	;volatile
 29008     140D                     i1l10295:
 29009     140D  3001               	movlw	1
 29010     140E  00F0               	movwf	??_EUSART1_Transmit_ISR
 29011     140F  0870               	movf	??_EUSART1_Transmit_ISR,w
 29012     1410  0140               	movlb	0	; select bank0
 29013     1411  07DC               	addwf	_eusart1TxTail,f	;volatile
 29014     1412                     i1l10297:
 29015                           
 29016                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29017     1412  3008               	movlw	8
 29018     1413  025C               	subwf	_eusart1TxTail,w	;volatile
 29019     1414  1C03               	skipc
 29020     1415  2C17               	goto	u708_21
 29021     1416  2C18               	goto	u708_20
 29022     1417                     u708_21:
 29023     1417  2C19               	goto	i1l10301
 29024     1418                     u708_20:
 29025     1418                     i1l10299:
 29026                           
 29027                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29028     1418  01DC               	clrf	_eusart1TxTail	;volatile
 29029     1419                     i1l10301:
 29030                           
 29031                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29032     1419  3001               	movlw	1
 29033     141A  00F0               	movwf	??_EUSART1_Transmit_ISR
 29034     141B  0870               	movf	??_EUSART1_Transmit_ISR,w
 29035     141C  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29036                           
 29037                           ;mcc_generated_files/eusart1.c: 218:     }
 29038     141D  2C20               	goto	i1l1860
 29039     141E                     i1l1857:	
 29040                           ;mcc_generated_files/eusart1.c: 219:     else
 29041                           
 29042                           
 29043                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29044     141E  014E               	movlb	14	; select bank14
 29045     141F  1219               	bcf	25,4	;volatile
 29046     1420                     i1l1860:
 29047     1420  0008               	return
 29048     1421                     __end_of_EUSART1_Transmit_ISR:
 29049                           
 29050                           	psect	text165
 29051     13DD                     __ptext165:	
 29052 ;; *************** function _EUSART2_Transmit_ISR *****************
 29053 ;; Defined at:
 29054 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29055 ;; Parameters:    Size  Location     Type
 29056 ;;		None
 29057 ;; Auto vars:     Size  Location     Type
 29058 ;;		None
 29059 ;; Return value:  Size  Location     Type
 29060 ;;                  1    wreg      void 
 29061 ;; Registers used:
 29062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29063 ;; Tracked objects:
 29064 ;;		On entry : 0/0
 29065 ;;		On exit  : 0/0
 29066 ;;		Unchanged: 0/0
 29067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29072 ;;Total ram usage:        1 bytes
 29073 ;; Hardware stack levels used: 1
 29074 ;; This function calls:
 29075 ;;		Nothing
 29076 ;; This function is called by:
 29077 ;;		_EUSART2_Initialize
 29078 ;;		_INTERRUPT_InterruptManager
 29079 ;; This function uses a non-reentrant model
 29080 ;;
 29081                           
 29082     13DD                     _EUSART2_Transmit_ISR:	
 29083                           ;psect for function _EUSART2_Transmit_ISR
 29084                           
 29085     13DD                     i1l10259:	
 29086                           ;incstack = 0
 29087                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29088                           
 29089                           
 29090                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29091     13DD  3008               	movlw	8
 29092     13DE  0140               	movlb	0	; select bank0
 29093     13DF  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29094     13E0  1803               	skipnc
 29095     13E1  2BE3               	goto	u702_21
 29096     13E2  2BE4               	goto	u702_20
 29097     13E3                     u702_21:
 29098     13E3  2BFC               	goto	i1l1707
 29099     13E4                     u702_20:
 29100     13E4                     i1l10261:
 29101                           
 29102                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29103     13E4  0862               	movf	_eusart2TxTail,w
 29104     13E5  3EDE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29105     13E6  0086               	movwf	6
 29106     13E7  0187               	clrf	7
 29107     13E8  0801               	movf	1,w
 29108     13E9  0154               	movlb	20	; select bank20
 29109     13EA  009A               	movwf	26	;volatile
 29110     13EB                     i1l10263:
 29111     13EB  3001               	movlw	1
 29112     13EC  00F0               	movwf	??_EUSART2_Transmit_ISR
 29113     13ED  0870               	movf	??_EUSART2_Transmit_ISR,w
 29114     13EE  0140               	movlb	0	; select bank0
 29115     13EF  07E2               	addwf	_eusart2TxTail,f	;volatile
 29116     13F0                     i1l10265:
 29117                           
 29118                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29119     13F0  3008               	movlw	8
 29120     13F1  0262               	subwf	_eusart2TxTail,w	;volatile
 29121     13F2  1C03               	skipc
 29122     13F3  2BF5               	goto	u703_21
 29123     13F4  2BF6               	goto	u703_20
 29124     13F5                     u703_21:
 29125     13F5  2BF7               	goto	i1l10269
 29126     13F6                     u703_20:
 29127     13F6                     i1l10267:
 29128                           
 29129                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29130     13F6  01E2               	clrf	_eusart2TxTail	;volatile
 29131     13F7                     i1l10269:
 29132                           
 29133                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29134     13F7  3001               	movlw	1
 29135     13F8  00F0               	movwf	??_EUSART2_Transmit_ISR
 29136     13F9  0870               	movf	??_EUSART2_Transmit_ISR,w
 29137     13FA  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29138                           
 29139                           ;mcc_generated_files/eusart2.c: 209:     }
 29140     13FB  2BFE               	goto	i1l1710
 29141     13FC                     i1l1707:	
 29142                           ;mcc_generated_files/eusart2.c: 210:     else
 29143                           
 29144                           
 29145                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29146     13FC  014E               	movlb	14	; select bank14
 29147     13FD  1319               	bcf	25,6	;volatile
 29148     13FE                     i1l1710:
 29149     13FE  0008               	return
 29150     13FF                     __end_of_EUSART2_Transmit_ISR:
 29151                           
 29152                           	psect	text166
 29153     0888                     __ptext166:	
 29154 ;; *************** function _EUSART1_Receive_ISR *****************
 29155 ;; Defined at:
 29156 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29157 ;; Parameters:    Size  Location     Type
 29158 ;;		None
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;		None
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1    wreg      void 
 29163 ;; Registers used:
 29164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29165 ;; Tracked objects:
 29166 ;;		On entry : 0/0
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29174 ;;Total ram usage:        0 bytes
 29175 ;; Hardware stack levels used: 1
 29176 ;; Hardware stack levels required when called: 2
 29177 ;; This function calls:
 29178 ;;		NULL
 29179 ;;		_EUSART1_DefaultErrorHandler
 29180 ;;		_EUSART1_DefaultFramingErrorHandler
 29181 ;;		_EUSART1_DefaultOverrunErrorHandler
 29182 ;;		_EUSART1_RxDataHandler
 29183 ;; This function is called by:
 29184 ;;		_EUSART1_Initialize
 29185 ;;		_INTERRUPT_InterruptManager
 29186 ;; This function uses a non-reentrant model
 29187 ;;
 29188                           
 29189     0888                     _EUSART1_Receive_ISR:	
 29190                           ;psect for function _EUSART1_Receive_ISR
 29191                           
 29192     0888                     i1l10303:	
 29193                           ;incstack = 0
 29194 ;; hardware stack exceeded
 29195                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29196                           
 29197                           
 29198                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29199     0888  0140               	movlb	0	; select bank0
 29200     0889  085A               	movf	_eusart1RxHead,w	;volatile
 29201     088A  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29202     088B  0086               	movwf	6
 29203     088C  0187               	clrf	7
 29204     088D  0181               	clrf	1
 29205     088E                     i1l10305:
 29206                           
 29207                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29208     088E  0142               	movlb	2	; select bank2
 29209     088F  1D1D               	btfss	29,2	;volatile
 29210     0890  2892               	goto	u709_21
 29211     0891  2893               	goto	u709_20
 29212     0892                     u709_21:
 29213     0892  289F               	goto	i1l10311
 29214     0893                     u709_20:
 29215     0893                     i1l10307:
 29216                           
 29217                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29218     0893  0140               	movlb	0	; select bank0
 29219     0894  085A               	movf	_eusart1RxHead,w	;volatile
 29220     0895  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29221     0896  0086               	movwf	6
 29222     0897  0187               	clrf	7
 29223     0898  1481               	bsf	1,1
 29224     0899                     i1l10309:
 29225                           
 29226                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29227     0899  0142               	movlb	2	; select bank2
 29228     089A  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29229     089B  008A               	movwf	10
 29230     089C  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29231     089D  000A               	callw
 29232     089E  3188               	pagesel	$
 29233     089F                     i1l10311:
 29234                           
 29235                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29236     089F  0142               	movlb	2	; select bank2
 29237     08A0  1C9D               	btfss	29,1	;volatile
 29238     08A1  28A3               	goto	u710_21
 29239     08A2  28A4               	goto	u710_20
 29240     08A3                     u710_21:
 29241     08A3  28B0               	goto	i1l10317
 29242     08A4                     u710_20:
 29243     08A4                     i1l10313:
 29244                           
 29245                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29246     08A4  0140               	movlb	0	; select bank0
 29247     08A5  085A               	movf	_eusart1RxHead,w	;volatile
 29248     08A6  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29249     08A7  0086               	movwf	6
 29250     08A8  0187               	clrf	7
 29251     08A9  1501               	bsf	1,2
 29252     08AA                     i1l10315:
 29253                           
 29254                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29255     08AA  0142               	movlb	2	; select bank2
 29256     08AB  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29257     08AC  008A               	movwf	10
 29258     08AD  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29259     08AE  000A               	callw
 29260     08AF  3188               	pagesel	$
 29261     08B0                     i1l10317:
 29262                           
 29263                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29264     08B0  0140               	movlb	0	; select bank0
 29265     08B1  085A               	movf	_eusart1RxHead,w	;volatile
 29266     08B2  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29267     08B3  0086               	movwf	6
 29268     08B4  0187               	clrf	7
 29269     08B5  0801               	movf	1,w
 29270     08B6  1903               	btfsc	3,2
 29271     08B7  28B9               	goto	u711_21
 29272     08B8  28BA               	goto	u711_20
 29273     08B9                     u711_21:
 29274     08B9  28C1               	goto	i1l10321
 29275     08BA                     u711_20:
 29276     08BA                     i1l10319:
 29277                           
 29278                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29279     08BA  0142               	movlb	2	; select bank2
 29280     08BB  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29281     08BC  008A               	movwf	10
 29282     08BD  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29283     08BE  000A               	callw
 29284     08BF  3188               	pagesel	$
 29285                           
 29286                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29287     08C0  28C4               	goto	i1l1867
 29288     08C1                     i1l10321:
 29289                           
 29290                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29291     08C1  3192  22C4  3188   	fcall	_EUSART1_RxDataHandler
 29292     08C4                     i1l1867:
 29293     08C4  0008               	return
 29294     08C5                     __end_of_EUSART1_Receive_ISR:
 29295                           
 29296                           	psect	text167
 29297     084F                     __ptext167:	
 29298 ;; *************** function _EUSART2_Receive_ISR *****************
 29299 ;; Defined at:
 29300 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29301 ;; Parameters:    Size  Location     Type
 29302 ;;		None
 29303 ;; Auto vars:     Size  Location     Type
 29304 ;;		None
 29305 ;; Return value:  Size  Location     Type
 29306 ;;                  1    wreg      void 
 29307 ;; Registers used:
 29308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29309 ;; Tracked objects:
 29310 ;;		On entry : 0/0
 29311 ;;		On exit  : 0/0
 29312 ;;		Unchanged: 0/0
 29313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29318 ;;Total ram usage:        0 bytes
 29319 ;; Hardware stack levels used: 1
 29320 ;; Hardware stack levels required when called: 2
 29321 ;; This function calls:
 29322 ;;		NULL
 29323 ;;		_EUSART2_DefaultErrorHandler
 29324 ;;		_EUSART2_DefaultFramingErrorHandler
 29325 ;;		_EUSART2_DefaultOverrunErrorHandler
 29326 ;;		_EUSART2_RxDataHandler
 29327 ;; This function is called by:
 29328 ;;		_EUSART2_Initialize
 29329 ;;		_INTERRUPT_InterruptManager
 29330 ;; This function uses a non-reentrant model
 29331 ;;
 29332                           
 29333     084F                     _EUSART2_Receive_ISR:	
 29334                           ;psect for function _EUSART2_Receive_ISR
 29335                           
 29336     084F                     i1l14555:	
 29337                           ;incstack = 0
 29338 ;; hardware stack exceeded
 29339                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29340                           
 29341                           
 29342                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29343     084F  087C               	movf	_eusart2RxHead,w	;volatile
 29344     0850  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29345     0851  0086               	movwf	6
 29346     0852  0187               	clrf	7
 29347     0853  0181               	clrf	1
 29348     0854                     i1l14557:
 29349                           
 29350                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29351     0854  0154               	movlb	20	; select bank20
 29352     0855  1D1D               	btfss	29,2	;volatile
 29353     0856  2858               	goto	u1169_21
 29354     0857  2859               	goto	u1169_20
 29355     0858                     u1169_21:
 29356     0858  2864               	goto	i1l14563
 29357     0859                     u1169_20:
 29358     0859                     i1l14559:
 29359                           
 29360                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29361     0859  087C               	movf	_eusart2RxHead,w	;volatile
 29362     085A  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29363     085B  0086               	movwf	6
 29364     085C  0187               	clrf	7
 29365     085D  1481               	bsf	1,1
 29366     085E                     i1l14561:
 29367                           
 29368                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29369     085E  0142               	movlb	2	; select bank2
 29370     085F  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29371     0860  008A               	movwf	10
 29372     0861  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29373     0862  000A               	callw
 29374     0863  3188               	pagesel	$
 29375     0864                     i1l14563:
 29376                           
 29377                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29378     0864  0154               	movlb	20	; select bank20
 29379     0865  1C9D               	btfss	29,1	;volatile
 29380     0866  2868               	goto	u1170_21
 29381     0867  2869               	goto	u1170_20
 29382     0868                     u1170_21:
 29383     0868  2874               	goto	i1l14569
 29384     0869                     u1170_20:
 29385     0869                     i1l14565:
 29386                           
 29387                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29388     0869  087C               	movf	_eusart2RxHead,w	;volatile
 29389     086A  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29390     086B  0086               	movwf	6
 29391     086C  0187               	clrf	7
 29392     086D  1501               	bsf	1,2
 29393     086E                     i1l14567:
 29394                           
 29395                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29396     086E  0142               	movlb	2	; select bank2
 29397     086F  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29398     0870  008A               	movwf	10
 29399     0871  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29400     0872  000A               	callw
 29401     0873  3188               	pagesel	$
 29402     0874                     i1l14569:
 29403                           
 29404                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29405     0874  087C               	movf	_eusart2RxHead,w	;volatile
 29406     0875  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29407     0876  0086               	movwf	6
 29408     0877  0187               	clrf	7
 29409     0878  0801               	movf	1,w
 29410     0879  1903               	btfsc	3,2
 29411     087A  287C               	goto	u1171_21
 29412     087B  287D               	goto	u1171_20
 29413     087C                     u1171_21:
 29414     087C  2884               	goto	i1l14573
 29415     087D                     u1171_20:
 29416     087D                     i1l14571:
 29417                           
 29418                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29419     087D  0142               	movlb	2	; select bank2
 29420     087E  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29421     087F  008A               	movwf	10
 29422     0880  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29423     0881  000A               	callw
 29424     0882  3188               	pagesel	$
 29425                           
 29426                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29427     0883  2887               	goto	i1l1717
 29428     0884                     i1l14573:
 29429                           
 29430                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29431     0884  3192  224A  3188   	fcall	_EUSART2_RxDataHandler
 29432     0887                     i1l1717:
 29433     0887  0008               	return
 29434     0888                     __end_of_EUSART2_Receive_ISR:
 29435                           
 29436                           	psect	text168
 29437     1EBB                     __ptext168:	
 29438 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29439 ;; Defined at:
 29440 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29441 ;; Parameters:    Size  Location     Type
 29442 ;;		None
 29443 ;; Auto vars:     Size  Location     Type
 29444 ;;		None
 29445 ;; Return value:  Size  Location     Type
 29446 ;;                  1    wreg      void 
 29447 ;; Registers used:
 29448 ;;		None
 29449 ;; Tracked objects:
 29450 ;;		On entry : 0/0
 29451 ;;		On exit  : 0/0
 29452 ;;		Unchanged: 0/0
 29453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29458 ;;Total ram usage:        0 bytes
 29459 ;; Hardware stack levels used: 1
 29460 ;; This function calls:
 29461 ;;		Nothing
 29462 ;; This function is called by:
 29463 ;;		_EUSART2_Initialize
 29464 ;;		_EUSART2_Receive_ISR
 29465 ;; This function uses a non-reentrant model
 29466 ;;
 29467                           
 29468     1EBB                     _EUSART2_DefaultOverrunErrorHandler:	
 29469                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29470                           
 29471     1EBB                     i1l14165:	
 29472                           ;incstack = 0
 29473 ;; hardware stack exceeded
 29474                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29475                           
 29476                           
 29477                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29478     1EBB  0154               	movlb	20	; select bank20
 29479     1EBC  121D               	bcf	29,4	;volatile
 29480                           
 29481                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29482     1EBD  161D               	bsf	29,4	;volatile
 29483     1EBE                     i1l1727:
 29484     1EBE  0008               	return
 29485     1EBF                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29486                           
 29487                           	psect	text169
 29488     1E8C                     __ptext169:	
 29489 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29490 ;; Defined at:
 29491 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29492 ;; Parameters:    Size  Location     Type
 29493 ;;		None
 29494 ;; Auto vars:     Size  Location     Type
 29495 ;;		None
 29496 ;; Return value:  Size  Location     Type
 29497 ;;                  1    wreg      void 
 29498 ;; Registers used:
 29499 ;;		None
 29500 ;; Tracked objects:
 29501 ;;		On entry : 0/0
 29502 ;;		On exit  : 0/0
 29503 ;;		Unchanged: 0/0
 29504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29509 ;;Total ram usage:        0 bytes
 29510 ;; Hardware stack levels used: 1
 29511 ;; This function calls:
 29512 ;;		Nothing
 29513 ;; This function is called by:
 29514 ;;		_EUSART2_Initialize
 29515 ;;		_EUSART2_Receive_ISR
 29516 ;; This function uses a non-reentrant model
 29517 ;;
 29518                           
 29519     1E8C                     _EUSART2_DefaultFramingErrorHandler:	
 29520                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29521                           
 29522     1E8C                     i1l1724:	
 29523                           ;incstack = 0
 29524 ;; hardware stack exceeded
 29525                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29526                           
 29527     1E8C  0008               	return
 29528     1E8D                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29529                           
 29530                           	psect	text170
 29531     1EB7                     __ptext170:	
 29532 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29533 ;; Defined at:
 29534 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29535 ;; Parameters:    Size  Location     Type
 29536 ;;		None
 29537 ;; Auto vars:     Size  Location     Type
 29538 ;;		None
 29539 ;; Return value:  Size  Location     Type
 29540 ;;                  1    wreg      void 
 29541 ;; Registers used:
 29542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29543 ;; Tracked objects:
 29544 ;;		On entry : 0/0
 29545 ;;		On exit  : 0/0
 29546 ;;		Unchanged: 0/0
 29547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29552 ;;Total ram usage:        0 bytes
 29553 ;; Hardware stack levels used: 1
 29554 ;; Hardware stack levels required when called: 1
 29555 ;; This function calls:
 29556 ;;		_EUSART2_RxDataHandler
 29557 ;; This function is called by:
 29558 ;;		_EUSART2_Initialize
 29559 ;;		_EUSART2_Receive_ISR
 29560 ;; This function uses a non-reentrant model
 29561 ;;
 29562                           
 29563     1EB7                     _EUSART2_DefaultErrorHandler:	
 29564                           ;psect for function _EUSART2_DefaultErrorHandler
 29565                           
 29566     1EB7                     i1l14167:	
 29567                           ;incstack = 0
 29568 ;; hardware stack exceeded
 29569                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29570                           
 29571                           
 29572                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29573     1EB7  3192  224A  319E   	fcall	_EUSART2_RxDataHandler
 29574     1EBA                     i1l1730:
 29575     1EBA  0008               	return
 29576     1EBB                     __end_of_EUSART2_DefaultErrorHandler:
 29577                           
 29578                           	psect	text171
 29579     124A                     __ptext171:	
 29580 ;; *************** function _EUSART2_RxDataHandler *****************
 29581 ;; Defined at:
 29582 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29583 ;; Parameters:    Size  Location     Type
 29584 ;;		None
 29585 ;; Auto vars:     Size  Location     Type
 29586 ;;		None
 29587 ;; Return value:  Size  Location     Type
 29588 ;;                  1    wreg      void 
 29589 ;; Registers used:
 29590 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29591 ;; Tracked objects:
 29592 ;;		On entry : 0/0
 29593 ;;		On exit  : 0/0
 29594 ;;		Unchanged: 0/0
 29595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29600 ;;Total ram usage:        1 bytes
 29601 ;; Hardware stack levels used: 1
 29602 ;; This function calls:
 29603 ;;		Nothing
 29604 ;; This function is called by:
 29605 ;;		_EUSART2_Receive_ISR
 29606 ;;		_EUSART2_DefaultErrorHandler
 29607 ;; This function uses a non-reentrant model
 29608 ;;
 29609                           
 29610     124A                     _EUSART2_RxDataHandler:	
 29611                           ;psect for function _EUSART2_RxDataHandler
 29612                           
 29613     124A                     i1l13517:	
 29614                           ;incstack = 0
 29615 ;; hardware stack exceeded
 29616                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29617                           
 29618                           
 29619                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29620     124A  087C               	movf	_eusart2RxHead,w
 29621     124B  3ED6               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29622     124C  0086               	movwf	6
 29623     124D  0187               	clrf	7
 29624     124E  0154               	movlb	20	; select bank20
 29625     124F  0819               	movf	25,w	;volatile
 29626     1250  0081               	movwf	1
 29627     1251                     i1l13519:
 29628     1251  3001               	movlw	1
 29629     1252  00F0               	movwf	??_EUSART2_RxDataHandler
 29630     1253  0870               	movf	??_EUSART2_RxDataHandler,w
 29631     1254  07FC               	addwf	_eusart2RxHead,f	;volatile
 29632     1255                     i1l13521:
 29633                           
 29634                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29635     1255  3008               	movlw	8
 29636     1256  027C               	subwf	_eusart2RxHead,w	;volatile
 29637     1257  1C03               	skipc
 29638     1258  2A5A               	goto	u1038_21
 29639     1259  2A5B               	goto	u1038_20
 29640     125A                     u1038_21:
 29641     125A  2A5C               	goto	i1l13525
 29642     125B                     u1038_20:
 29643     125B                     i1l13523:
 29644                           
 29645                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29646     125B  01FC               	clrf	_eusart2RxHead	;volatile
 29647     125C                     i1l13525:
 29648                           
 29649                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29650     125C  3001               	movlw	1
 29651     125D  00F0               	movwf	??_EUSART2_RxDataHandler
 29652     125E  0870               	movf	??_EUSART2_RxDataHandler,w
 29653     125F  0140               	movlb	0	; select bank0
 29654     1260  07DF               	addwf	_eusart2RxCount,f	;volatile
 29655     1261                     i1l1721:
 29656     1261  0008               	return
 29657     1262                     __end_of_EUSART2_RxDataHandler:
 29658                           
 29659                           	psect	text172
 29660     1EB3                     __ptext172:	
 29661 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29662 ;; Defined at:
 29663 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29664 ;; Parameters:    Size  Location     Type
 29665 ;;		None
 29666 ;; Auto vars:     Size  Location     Type
 29667 ;;		None
 29668 ;; Return value:  Size  Location     Type
 29669 ;;                  1    wreg      void 
 29670 ;; Registers used:
 29671 ;;		None
 29672 ;; Tracked objects:
 29673 ;;		On entry : 0/0
 29674 ;;		On exit  : 0/0
 29675 ;;		Unchanged: 0/0
 29676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29681 ;;Total ram usage:        0 bytes
 29682 ;; Hardware stack levels used: 1
 29683 ;; This function calls:
 29684 ;;		Nothing
 29685 ;; This function is called by:
 29686 ;;		_EUSART1_Initialize
 29687 ;;		_EUSART1_Receive_ISR
 29688 ;; This function uses a non-reentrant model
 29689 ;;
 29690                           
 29691     1EB3                     _EUSART1_DefaultOverrunErrorHandler:	
 29692                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29693                           
 29694     1EB3                     i1l9713:	
 29695                           ;incstack = 0
 29696 ;; hardware stack exceeded
 29697                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29698                           
 29699                           
 29700                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29701     1EB3  0142               	movlb	2	; select bank2
 29702     1EB4  121D               	bcf	29,4	;volatile
 29703                           
 29704                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29705     1EB5  161D               	bsf	29,4	;volatile
 29706     1EB6                     i1l1877:
 29707     1EB6  0008               	return
 29708     1EB7                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29709                           
 29710                           	psect	text173
 29711     1E8B                     __ptext173:	
 29712 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29713 ;; Defined at:
 29714 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;		None
 29717 ;; Auto vars:     Size  Location     Type
 29718 ;;		None
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  1    wreg      void 
 29721 ;; Registers used:
 29722 ;;		None
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29732 ;;Total ram usage:        0 bytes
 29733 ;; Hardware stack levels used: 1
 29734 ;; This function calls:
 29735 ;;		Nothing
 29736 ;; This function is called by:
 29737 ;;		_EUSART1_Initialize
 29738 ;;		_EUSART1_Receive_ISR
 29739 ;; This function uses a non-reentrant model
 29740 ;;
 29741                           
 29742     1E8B                     _EUSART1_DefaultFramingErrorHandler:	
 29743                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29744                           
 29745     1E8B                     i1l1874:	
 29746                           ;incstack = 0
 29747 ;; hardware stack exceeded
 29748                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 29749                           
 29750     1E8B  0008               	return
 29751     1E8C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 29752                           
 29753                           	psect	text174
 29754     1EAF                     __ptext174:	
 29755 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 29756 ;; Defined at:
 29757 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 29758 ;; Parameters:    Size  Location     Type
 29759 ;;		None
 29760 ;; Auto vars:     Size  Location     Type
 29761 ;;		None
 29762 ;; Return value:  Size  Location     Type
 29763 ;;                  1    wreg      void 
 29764 ;; Registers used:
 29765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29766 ;; Tracked objects:
 29767 ;;		On entry : 0/0
 29768 ;;		On exit  : 0/0
 29769 ;;		Unchanged: 0/0
 29770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29775 ;;Total ram usage:        0 bytes
 29776 ;; Hardware stack levels used: 1
 29777 ;; Hardware stack levels required when called: 1
 29778 ;; This function calls:
 29779 ;;		_EUSART1_RxDataHandler
 29780 ;; This function is called by:
 29781 ;;		_EUSART1_Initialize
 29782 ;;		_EUSART1_Receive_ISR
 29783 ;; This function uses a non-reentrant model
 29784 ;;
 29785                           
 29786     1EAF                     _EUSART1_DefaultErrorHandler:	
 29787                           ;psect for function _EUSART1_DefaultErrorHandler
 29788                           
 29789     1EAF                     i1l9715:	
 29790                           ;incstack = 0
 29791 ;; hardware stack exceeded
 29792                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29793                           
 29794                           
 29795                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 29796     1EAF  3192  22C4  319E   	fcall	_EUSART1_RxDataHandler
 29797     1EB2                     i1l1880:
 29798     1EB2  0008               	return
 29799     1EB3                     __end_of_EUSART1_DefaultErrorHandler:
 29800                           
 29801                           	psect	text175
 29802     12C4                     __ptext175:	
 29803 ;; *************** function _EUSART1_RxDataHandler *****************
 29804 ;; Defined at:
 29805 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 29806 ;; Parameters:    Size  Location     Type
 29807 ;;		None
 29808 ;; Auto vars:     Size  Location     Type
 29809 ;;		None
 29810 ;; Return value:  Size  Location     Type
 29811 ;;                  1    wreg      void 
 29812 ;; Registers used:
 29813 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29814 ;; Tracked objects:
 29815 ;;		On entry : 0/0
 29816 ;;		On exit  : 0/0
 29817 ;;		Unchanged: 0/0
 29818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29823 ;;Total ram usage:        1 bytes
 29824 ;; Hardware stack levels used: 1
 29825 ;; This function calls:
 29826 ;;		Nothing
 29827 ;; This function is called by:
 29828 ;;		_EUSART1_Receive_ISR
 29829 ;;		_EUSART1_DefaultErrorHandler
 29830 ;; This function uses a non-reentrant model
 29831 ;;
 29832                           
 29833     12C4                     _EUSART1_RxDataHandler:	
 29834                           ;psect for function _EUSART1_RxDataHandler
 29835                           
 29836     12C4                     i1l9003:	
 29837                           ;incstack = 0
 29838 ;; hardware stack exceeded
 29839                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29840                           
 29841                           
 29842                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 29843     12C4  0140               	movlb	0	; select bank0
 29844     12C5  085A               	movf	_eusart1RxHead,w
 29845     12C6  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 29846     12C7  0086               	movwf	6
 29847     12C8  3001               	movlw	1	; select bank2/3
 29848     12C9  0087               	movwf	7
 29849     12CA  0142               	movlb	2	; select bank2
 29850     12CB  0819               	movf	25,w	;volatile
 29851     12CC  0081               	movwf	1
 29852     12CD                     i1l9005:
 29853     12CD  3001               	movlw	1
 29854     12CE  00F0               	movwf	??_EUSART1_RxDataHandler
 29855     12CF  0870               	movf	??_EUSART1_RxDataHandler,w
 29856     12D0  0140               	movlb	0	; select bank0
 29857     12D1  07DA               	addwf	_eusart1RxHead,f	;volatile
 29858     12D2                     i1l9007:
 29859                           
 29860                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 29861     12D2  3008               	movlw	8
 29862     12D3  025A               	subwf	_eusart1RxHead,w	;volatile
 29863     12D4  1C03               	skipc
 29864     12D5  2AD7               	goto	u564_21
 29865     12D6  2AD8               	goto	u564_20
 29866     12D7                     u564_21:
 29867     12D7  2AD9               	goto	i1l9011
 29868     12D8                     u564_20:
 29869     12D8                     i1l9009:
 29870                           
 29871                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 29872     12D8  01DA               	clrf	_eusart1RxHead	;volatile
 29873     12D9                     i1l9011:
 29874                           
 29875                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 29876     12D9  3001               	movlw	1
 29877     12DA  00F0               	movwf	??_EUSART1_RxDataHandler
 29878     12DB  0870               	movf	??_EUSART1_RxDataHandler,w
 29879     12DC  07D8               	addwf	_eusart1RxCount,f	;volatile
 29880     12DD                     i1l1871:
 29881     12DD  0008               	return
 29882     12DE                     __end_of_EUSART1_RxDataHandler:
 29883     007E                     btemp	set	126	;btemp
 29884     007E                     int$flags	set	126
 29885     007E                     wtemp0	set	126
 29886                           
 29887                           	psect	idloc
 29888                           
 29889                           ;Config register IDLOC0 @ 0x8000
 29890                           ;	unspecified, using default values
 29891     8000                     	org	32768
 29892     8000  3FFF               	dw	16383
 29893                           
 29894                           ;Config register IDLOC1 @ 0x8001
 29895                           ;	unspecified, using default values
 29896     8001                     	org	32769
 29897     8001  3FFF               	dw	16383
 29898                           
 29899                           ;Config register IDLOC2 @ 0x8002
 29900                           ;	unspecified, using default values
 29901     8002                     	org	32770
 29902     8002  3FFF               	dw	16383
 29903                           
 29904                           ;Config register IDLOC3 @ 0x8003
 29905                           ;	unspecified, using default values
 29906     8003                     	org	32771
 29907     8003  3FFF               	dw	16383
 29908                           
 29909                           	psect	config
 29910                           
 29911                           ;Config register CONFIG1 @ 0x8007
 29912                           ;	External Oscillator mode selection bits
 29913                           ;	FEXTOSC = OFF, Oscillator not enabled
 29914                           ;	Power-up default value for COSC bits
 29915                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 29916                           ;	Clock Out Enable bit
 29917                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 29918                           ;	Clock Switch Enable bit
 29919                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 29920                           ;	Fail-Safe Clock Monitor Enable bit
 29921                           ;	FCMEN = ON, FSCM timer enabled
 29922     8007                     	org	32775
 29923     8007  3FEC               	dw	16364
 29924                           
 29925                           ;Config register CONFIG2 @ 0x8008
 29926                           ;	Master Clear Enable bit
 29927                           ;	MCLRE = ON, MCLR pin is Master Clear function
 29928                           ;	Power-up Timer Enable bit
 29929                           ;	PWRTS = OFF, PWRT disabled
 29930                           ;	Low-Power BOR enable bit
 29931                           ;	LPBOREN = OFF, ULPBOR disabled
 29932                           ;	Brown-out reset enable bits
 29933                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 29934                           ;	Brown-out Reset Voltage Selection
 29935                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 29936                           ;	Zero-cross detect disable
 29937                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 29938                           ;	Peripheral Pin Select one-way control
 29939                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 29940                           ;	Stack Overflow/Underflow Reset Enable bit
 29941                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 29942     8008                     	org	32776
 29943     8008  3FFF               	dw	16383
 29944                           
 29945                           ;Config register CONFIG3 @ 0x8009
 29946                           ;	WDT Period Select bits
 29947                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 29948                           ;	WDT operating mode
 29949                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 29950                           ;	WDT Window Select bits
 29951                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 29952                           ;	WDT input clock selector
 29953                           ;	WDTCCS = SC, Software Control
 29954     8009                     	org	32777
 29955     8009  3F9F               	dw	16287
 29956                           
 29957                           ;Config register CONFIG4 @ 0x800A
 29958                           ;	Boot Block Size Selection bits
 29959                           ;	BBSIZE = BB512, 512 words boot block size
 29960                           ;	Boot Block Enable bit
 29961                           ;	BBEN = OFF, Boot Block disabled
 29962                           ;	SAF Enable bit
 29963                           ;	SAFEN = OFF, SAF disabled
 29964                           ;	Application Block Write Protection bit
 29965                           ;	WRTAPP = OFF, Application Block not write protected
 29966                           ;	Boot Block Write Protection bit
 29967                           ;	WRTB = OFF, Boot Block not write protected
 29968                           ;	Configuration Register Write Protection bit
 29969                           ;	WRTC = OFF, Configuration Register not write protected
 29970                           ;	Data EEPROM write protection bit
 29971                           ;	WRTD = OFF, Data EEPROM NOT write protected
 29972                           ;	Storage Area Flash Write Protection bit
 29973                           ;	WRTSAF = OFF, SAF not write protected
 29974                           ;	Low Voltage Programming Enable bit
 29975                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 29976     800A                     	org	32778
 29977     800A  3FFF               	dw	16383
 29978                           
 29979                           ;Config register CONFIG5 @ 0x800B
 29980                           ;	UserNVM Program memory code protection bit
 29981                           ;	CP = OFF, UserNVM code protection disabled
 29982     800B                     	org	32779
 29983     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         459
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      0      80
    BANK2            80      1      78
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    bitRead@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5427	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1701(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1712(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1735(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1718(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1724(), 
		 -> NULL(), 

    I2C1_DO_TX$5427$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5432	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5426	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1701(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1712(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1735(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1718(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1724(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1701(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1712(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1735(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1718(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1724(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1701(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1712(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1735(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1718(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1724(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1701@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1712@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1843(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), 

    S1020$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    S231$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    S231$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S231$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S231$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S231$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S231$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1843(), 

    S231$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S231$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S231$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S231$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S360$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S360$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S360$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S360$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S360$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S360$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S360$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S360$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S3610$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3610$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3610$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1701(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1712(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1735(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1718(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1724(), 
		 -> NULL(), 

    S3610$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    S674$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S674$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4242(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1718@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1724@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1843->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1843->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1701
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1735
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1718
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1724
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1701
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1735
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1718
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1724
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1701
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1735
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1718
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1724
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1701
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1735
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1718
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1724
    _wr2RegCompleteHandler@i2c1_master_example$F1724->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1718->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1735->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1712->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1701->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcTemperature
    _TMAG5273_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_i2c_read1ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 13748193
                                             41 BANK0      1     1      0
                                              0 BANK2      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 10135242
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1397718
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1399454
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  448722
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  439917
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  450807
                                             12 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  440464
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                            10     6      4   57257
                                              1 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  440073
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  440073
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  450581
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  450832
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  452140
                                             12 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  450581
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  450832
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10080
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1843 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1843 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          8     8      0  447569
                                             21 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         1     1      0  439977
                                             11 COMMON     1     1      0
           _TMAG5273_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcTemperature                             9     7      2  439907
                                             13 BANK0      8     6      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  439771
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1843 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1843 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1843                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3091142
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 3083408
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  440430
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  440365
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  424509
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  424509
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  424441
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  424441
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0  106118
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1724     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1718     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1735   1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1712     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1701     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    5054
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1701 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1712 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1735 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1718 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1724 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1701 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1712 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1735 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1718 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1724 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1701 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1712 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1735 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1718 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1724 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1701 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1712 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1735 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1718 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1724 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _i2c_read1ByteRegister
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1843 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1843 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1843 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1843 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22B      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Dec 23 18:27:09 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1F0C  
                                                       l35 16A0  
                                                       l44 0C97  
                                                       l53 10D2  
                                                       l29 1672  
                                                       l56 10E3  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002F  
                                                      l121 1F1D  
                                                      l202 1F29  
                                                      l130 119F  
                                                      l211 10C1  
                                                      l124 121D  
                                                      l205 1F23  
                                                      l133 14D3  
                                                      l221 082C  
                                                      l214 1364  
                                                      l230 084E  
                                                      l127 16CE  
                                                      l208 1F06  
                                                      l224 082E  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 111A  
                                                      l510 1760  
                                                      l193 0FFF  
                                                      l522 112D  
                                                      l187 065B  
                                                      l196 1094  
                                                      l534 0BAB  
                                                      l199 172D  
                                                      l537 1140  
                                                      l561 1312  
                                                      l546 0A83  
                                                      l549 1153  
                                                      l661 103B  
                                                      l741 079D  
                                                      l645 0C47  
                                                      l655 11F1  
                                                      l664 102F  
                                                      l745 07A0  
                                                      l771 0376  
                                                      l851 09F9  
                                                      l765 0373  
                                                      l857 093E  
                                                      l875 0901  
                                                      l980 0D3B  
                                                      l967 1249  
                                                      l977 0D3C  
                                                      l987 04BC  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 1208  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F54  
                           _EUSART2_SetFramingErrorHandler 1F4E  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1EEE  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0071  
                                                     l1105 11DC  
                                                     l1201 14AD  
                                                     l1204 12C3  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1213 1086  
                                                     l1207 11C7  
                                                     l1216 139D  
                                                     l1072 0D90  
                                                     l1161 1F85  
                                                     l1411 1047  
                                                     l1075 0D8F  
                                                     l1420 1FE0  
                                                     l2117 1F0B  
                                                     l1165 0DE4  
                                                     l1414 1FCC  
                                                     l1430 1022  
                                                     l1423 1F95  
                                                     l1511 16FC  
                                            ?_RN487X_Delay 0074  
                                                     l1432 1024  
                                                     l1504 07FE  
                                                     l1408 1EAE  
                                                     l1361 118C  
                                                     l1417 1FD6  
                                                     l1441 1019  
                                                     l1601 0EEB  
                                                     l1522 15EA  
                                                     l1450 1051  
                                                     l1355 1166  
                                                     l2403 100E  
                                                     l1427 101F  
                                                     l1364 1107  
                                                     l2500 1EED  
                                                     l2420 106C  
                                                     l1700 1500  
                                                     l1436 1014  
                                                     l1452 1052  
                                                     l1444 1048  
                                                     l1460 0BF9  
                                                     l2068 0B5D  
                                                     l1701 1509  
                                                     l1533 0F73  
                                                     l1197 1442  
                                                     l2414 1489  
                                                     l1358 1179  
                                                     l2430 1FA7  
                                                     l3310 12AA  
                                                     l1454 1053  
                                                     l1367 132D  
                                                     l2503 1EF2  
                                                     l1551 1348  
                                                     l1439 1017  
                                                     l1447 104F  
                                                     l2079 1F6B  
                                                     l2424 15BF  
                                                     l1704 1520  
                                                     l3304 12F7  
                                                     l1480 0A3D  
                                                     l2433 1F8D  
                                                     l1473 17C9  
                                                     l1457 1644  
                                                     l2506 1EF7  
                                                     l2370 17FE  
                                                     l1546 0816  
                                                     l2523 1E8E  
                                                     l2427 1ED4  
                                                     l2515 1596  
                                                     l2371 17FF  
                                                     l1467 1465  
                                                     l3331 13BB  
                                                     l3323 0E39  
                                                     l2099 11B3  
                                                     l2436 0E70  
                                                     l2452 0AEE  
                                                     l1820 097C  
                                                     l2453 0B14  
                                                     l2509 1EFC  
                                                     l2381 13DC  
                                                     l2605 1207  
                                                     l1733 1F53  
                                                     l2526 1E90  
                                                     l2542 1EA8  
                                                     l2470 1617  
                                                     l1558 0ACB  
                                                     l1582 1380  
                                                     l1742 1F65  
                                                     l2375 1279  
                                                     l2439 0E8F  
                                                     l2367 1FC2  
                                                     l2560 1EA2  
                                                     l2464 1F7E  
                                                     l2536 1079  
                                                     l3336 0CE9  
                                                     l1736 1F59  
                                                     l2545 1ECF  
                                                     l3329 139E  
                                                     l1577 1291  
                                                     l1745 1F5F  
                                                     l2394 10B2  
                                                     l2554 1EA5  
                                                     l1682 1FB0  
                                                     l1826 1FB9  
                                                     l2539 1E96  
                                                     l2563 1F11  
                                                     l2491 1EDE  
                                                     l2387 1F01  
                                                     l1739 1F4D  
                                                     l2548 1E9F  
                                                     l1844 1527  
                                                     l1676 09BA  
                                                     l2557 1E9C  
                                                     l2397 1FFF  
                                                     l1845 1530  
                                                     l1685 1ECA  
                                                     l1829 1003  
                                                     l1589 105F  
                                                     l2566 1EC6  
                                                     l2590 1EAB  
                                                     l2494 1EE3  
                                                     l1598 0EE9  
                                                     l1695 14F9  
                                                     l1839 156E  
                                                     l1599 0EE5  
                                                     l2671 04FC  
                                                     l2584 1E99  
                                                     l2488 1ED9  
                                                     l1848 1547  
                                                     l2569 1EC2  
                                                     l2497 1EE8  
                                                     l2593 1F12  
                                                     l2682 0563  
                                                     l2587 1E93  
                                                     l1883 1F35  
                                                     l1892 1F47  
                                                     l1980 1FEA  
                                                     l2597 1F17  
                                                     l1886 1F3B  
                                                     l1895 1F41  
                                                     l1983 1FF4  
                                                     l1889 1F2F  
                                                     l1977 1233  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 159F  
                                                     u9601 159E  
                                                     u9610 15A7  
                                                     u9611 15A6  
                                                     u9540 146D  
                                                     u9620 106C  
                                                     u9700 1527  
                                                     u9541 146C  
                                                     u9621 106B  
                                                     u9701 1526  
                                                     u9550 10A9  
                                                     u9710 152C  
                                                     u9630 14DA  
                                                     u9551 10A8  
                                                     u9711 152B  
                                                     u9631 14D9  
                                                     u9560 0E42  
                                                     u9800 0B9F  
                                                     u9720 1542  
                                                     u9640 14F0  
                                                     u9561 0E41  
                                                     u9801 0B9E  
                                                     u9721 1541  
                                                     u9641 14EF  
                                                     u9570 0E8C  
                                                     u9730 1072  
                                                     u9810 0BAA  
                                                     u9650 1500  
                                                     u9571 0E8B  
                                                     u9731 1071  
                                                     u9811 0BA9  
                                                     u9651 14FF  
                                                     u9580 0AE9  
                                                     u9740 13C5  
                                                     u9660 1505  
                                                     u9820 12A4  
                                                     u9900 0F18  
                                                     u9581 0AE8  
                                                     u9741 13C4  
                                                     u9661 1504  
                                                     u9821 12A3  
                                                     u9901 0F17  
                                                     u9590 1F17  
                                                     u9750 13CD  
                                                     u9670 151B  
                                                     u9830 1207  
                                                     u9910 0F21  
                                                     u9591 1F16  
                                                     u9751 13CC  
                                                     u9671 151A  
                                                     u9831 1206  
                                                     u9911 0F20  
                                                     u9760 17D2  
                                                     u9680 154E  
                                                     u9920 0F27  
                                                     u9840 12F7  
                                                     u9761 17D1  
                                                     u9681 154D  
                                                     u9921 0F26  
                                                     u9841 12F6  
                                                     u9770 1269  
                                                     u9690 1565  
                                                     u9850 16E0  
                                                     u9930 0CA4  
                                                     u9771 1268  
                                                     u9691 1564  
                                                     u9851 16DF  
                                                     u9931 0CA3  
                                                     u9780 0B70  
                                                     u9860 16FC  
                                                     u9940 0CBC  
                                                     u9781 0B6F  
                                                     u9861 16FB  
                                                     u9941 0CBB  
                                                     u9790 0B9A  
                                                     u9870 15DD  
                                                     u9950 0CC5  
                                                     u9791 0B99  
                                                     u9871 15DC  
                                                     u9951 0CC4  
                                                     u9880 15E9  
                                                     u9960 0CCB  
                                                     u9881 15E8  
                                                     u9961 0CCA  
                                                     u9890 0F12  
                                                     u9970 0CDB  
                                                     u9891 0F11  
                                                     u9971 0CDA  
                                                     u9980 13A8  
                                                     u9981 13A7  
                                                     u9990 13B9  
                                                     u9991 13B8  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1521  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FA  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C0  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 11B4  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16CF  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09BB  
                                         ??_I2C1_SetBuffer 0075  
                             __end_of_EUSART2_Transmit_ISR 13FF  
                              __end_of_RN487X_EnterCmdMode 0817  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08C5  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 093F  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 11B4  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002C  
                                   _i2c_write1ByteRegister 172E  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1FEB  
                                                    l13001 1262  
                                                    l13011 1272  
                                                    l13003 1269  
                                                    l13013 1275  
                                                    l13005 126A  
                                                    l13021 1FC3  
                                                    l13101 15E3  
                                                    l13007 126C  
                                                    l13015 1278  
                                                    l13103 15E9  
                                                    l13111 0EF7  
                                                    l13009 126F  
                                                    l13041 0B84  
                                                    l13025 1FCD  
                                                    l13121 0F1B  
                                                    l13113 0F01  
                                                    l13201 0AA1  
                                                    l13051 0BA0  
                                                    l13043 0B8D  
                                                    l13035 0B66  
                                                    l13019 103C  
                                                    l13123 0F21  
                                                    l13115 0F0C  
                                                    l13107 0EEC  
                                                    l13211 0AB0  
                                                    l13203 0AA5  
                                                    l14011 048A  
                                                    l12501 146D  
                                                    l13053 0BA4  
                                                    l13045 0B90  
                                                    l13037 0B70  
                                                    l13029 0B60  
                                                    l13301 10D3  
                                                    l13061 1297  
                                                    l13125 0F27  
                                                    l13117 0F12  
                                                    l13133 0F2B  
                                                    l13109 0EED  
                                                    l13221 0AC0  
                                                    l13213 0AB4  
                                                    l13205 0AA8  
                                                    l13141 0C98  
                                                    l14101 0D88  
                                                    l14021 0496  
                                                    l14013 048F  
                                                    l14005 047B  
                                                    l12503 147C  
                                                    l12511 1FF5  
                                                    l13055 0BAA  
                                                    l13047 0B9A  
                                                    l13039 0B79  
                                                    l13303 10E2  
                                                    l13063 129B  
                                                    l13071 11F3  
                                                    l13231 1339  
                                                    l13127 0F29  
                                                    l13119 0F18  
                                                    l13135 0F33  
                                                    l13223 0AC2  
                                                    l13215 0AB6  
                                                    l13207 0AAA  
                                                    l13311 0A4A  
                                                    l13151 0CBC  
                                                    l13143 0CA4  
                                                    l14111 1365  
                                                    l14103 0D8D  
                                                    l14023 049B  
                                                    l14007 0480  
                                                    l12513 1E9D  
                                                    l12505 10A4  
                                                    l12521 1112  
                                                    l12601 1ED5  
                                                    l13401 168E  
                                                    l13065 12A4  
                                                    l13073 11FB  
                                                    l13081 16D2  
                                                    l13233 133F  
                                                    l13137 0F72  
                                                    l13225 0AC8  
                                                    l13217 0ABA  
                                                    l13209 0AAC  
                                                    l13321 0A72  
                                                    l13313 0A53  
                                                    l13241 1618  
                                                    l13161 139E  
                                                    l13153 0CC5  
                                                    l14113 136B  
                                                    l14201 1FEB  
                                                    l14041 04BB  
                                                    l14025 04A0  
                                                    l14033 04A7  
                                                    l14009 0485  
                                                    l12515 1EA0  
                                                    l12507 10A9  
                                                    l12523 1119  
                                                    l12531 112C  
                                                    l12603 1ED8  
                                                    l13171 1032  
                                                    l13059 1292  
                                                    l13411 1725  
                                                    l13403 16FE  
                                                    l13091 15C2  
                                                    l13083 16E0  
                                                    l13219 0ABE  
                                                    l13331 1361  
                                                    l13315 0A5E  
                                                    l13307 0A40  
                                                    l14131 104A  
                                                    l13251 145A  
                                                    l13075 12DF  
                                                    l13243 0BAC  
                                                    l13163 13A8  
                                                    l13155 0CCB  
                                                    l13147 0CA7  
                                                    l14123 137F  
                                                    l14203 1FBA  
                                                    l14211 0B15  
                                                    l14035 04AC  
                                                    l14027 04A5  
                                                    l14019 0491  
                                                    l14051 11C8  
                                                    l12509 10B1  
                                                    l12517 1EBF  
                                                    l12701 0E72  
                                                    l12613 1EE4  
                                                    l13173 103A  
                                                    l13413 1729  
                                                    l13405 1708  
                                                    l14301 16A1  
                                                    l13069 11F2  
                                                    l13237 1F8E  
                                                    l13093 15CC  
                                                    l13085 16F2  
                                                    l13181 080D  
                                                    l13229 132E  
                                                    l13325 1349  
                                                    l13317 0A67  
                                                    l13309 0A40  
                                                    l13245 1444  
                                                    l13077 12E1  
                                                    l13261 17B4  
                                                    l13253 1795  
                                                    l13165 13A9  
                                                    l13157 0CDB  
                                                    l13149 0CB3  
                                                    l13501 0EE0  
                                                    l14117 136D  
                                                    l14141 0992  
                                                    l14133 097D  
                                                    l14205 1FBC  
                                                    l14221 0B28  
                                                    l14213 0B17  
                                                    l13333 1421  
                                                    l14061 0D3D  
                                                    l14037 04B1  
                                                    l14053 11C8  
                                                    l13421 0D96  
                                                    l12519 1108  
                                                    l12527 111B  
                                                    l12535 112E  
                                                    l12543 1141  
                                                    l12551 12F8  
                                                    l12623 1EC3  
                                                    l12703 0E81  
                                                    l12607 1EDA  
                                                    l12615 1EE7  
                                                    l12631 1EEE  
                                                    l13407 1716  
                                                    l14311 16C8  
                                                    l14303 16A3  
                                                    l13095 15DD  
                                                    l13087 16F6  
                                                    l13079 16D0  
                                                    l13191 0A92  
                                                    l13327 134C  
                                                    l13415 10B5  
                                                    l13319 0A6A  
                                                    l14127 101A  
                                                    l13247 1449  
                                                    l13255 179D  
                                                    l13167 13B9  
                                                    l13271 0E0F  
                                                    l13263 0DE5  
                                                    l13503 0EE7  
                                                    l14119 137B  
                                                    l13511 1F4E  
                                                    l14151 09A1  
                                                    l14143 0994  
                                                    l14135 097F  
                                                    l14207 1FBE  
                                                    l14231 0B2E  
                                                    l14223 0B2A  
                                                    l14215 0B19  
                                                    l13343 1441  
                                                    l13335 1439  
                                                    l14071 0D64  
                                                    l14063 0D3D  
                                                    l14039 04B6  
                                                    l14055 11CE  
                                                    l13431 0DD2  
                                                    l13423 0DA3  
                                                    l12529 1125  
                                                    l12537 1138  
                                                    l12545 114B  
                                                    l12553 1311  
                                                    l12561 1165  
                                                    l12705 0E8C  
                                                    l12721 0AE9  
                                                    l12609 1EDD  
                                                    l12641 1EE2  
                                                    l12633 1EF1  
                                                    l12625 1EF3  
                                                    l13409 171A  
                                                    l14305 16A7  
                                                    l14321 14AE  
                                                    l13089 15C0  
                                                    l13177 0800  
                                                    l13193 0A94  
                                                    l13185 0A84  
                                                    l13329 1359  
                                                    l13417 10BE  
                                                    l13601 0830  
                                                    l14401 05F6  
                                                    l14313 118D  
                                                    l14129 100F  
                                                    l13249 1455  
                                                    l13257 17A0  
                                                    l13273 0E28  
                                                    l13265 0DEB  
                                                    l13513 1F54  
                                                    l14161 09B3  
                                                    l14153 09A8  
                                                    l14145 0996  
                                                    l14137 0986  
                                                    l14209 1FC1  
                                                    l14241 0B34  
                                                    l14233 0B2F  
                                                    l14225 0B2B  
                                                    l14217 0B24  
                                                    l13337 143F  
                                                    l14081 0D70  
                                                    l14073 0D69  
                                                    l14065 0D43  
                                                    l14057 11DB  
                                                    l13353 11B4  
                                                    l13433 0DD7  
                                                    l13425 0DB1  
                                                    l13281 172F  
                                                    l12539 113F  
                                                    l12547 1152  
                                                    l12651 1E8F  
                                                    l12619 1EA6  
                                                    l12707 0E8E  
                                                    l12723 0AEC  
                                                    l12715 0ACC  
                                                    l12627 1EF6  
                                                    l12803 1578  
                                                    l14307 16B2  
                                                    l14331 14C7  
                                                    l14323 14B3  
                                                    l13099 15DF  
                                                    l13179 0807  
                                                    l13195 0A98  
                                                    l13187 0A8B  
                                                    l13603 083A  
                                                    l14411 0611  
                                                    l14403 05F8  
                                                    l14315 1192  
                                                    l13259 17AF  
                                                    l13275 0E2E  
                                                    l13267 0DF8  
                                                    l13371 0A2B  
                                                    l13363 09FA  
                                                    l13531 1F30  
                                                    l14171 0941  
                                                    l13515 1F48  
                                                    l13507 1F5A  
                                                    l14163 09B8  
                                                    l14155 09AF  
                                                    l14147 0998  
                                                    l14139 098F  
                                                    l14251 0B3E  
                                                    l14243 0B36  
                                                    l14235 0B30  
                                                    l14227 0B2C  
                                                    l14219 0B26  
                                                    l14091 0D7C  
                                                    l14083 0D75  
                                                    l14067 0D51  
                                                    l13355 11B6  
                                                    l13347 1F7F  
                                                    l13435 0DDC  
                                                    l13443 0DE3  
                                                    l13427 0DBF  
                                                    l13419 0D91  
                                                    l13291 1755  
                                                    l13283 172F  
                                                    l12581 10F5  
                                                    l12557 1154  
                                                    l12565 1167  
                                                    l12573 117A  
                                                    l12637 1EA3  
                                                    l12645 1EA9  
                                                    l12661 1ED3  
                                                    l12733 0AF4  
                                                    l12717 0ADA  
                                                    l12821 159A  
                                                    l13541 0C4B  
                                                    l14309 16BD  
                                                    l14333 14CD  
                                                    l14325 14B4  
                                                    l12901 1568  
                                                    l13197 0A9C  
                                                    l13189 0A8F  
                                                    l14413 0624  
                                                    l14405 05FB  
                                                    l14317 1193  
                                                    l14341 1774  
                                                    l13269 0E0E  
                                                    l13277 0E37  
                                                    l13373 0A2E  
                                                    l13365 0A0F  
                                                    l13533 1F36  
                                                    l14181 0958  
                                                    l14173 0948  
                                                    l13509 1F60  
                                                    l14157 09B1  
                                                    l14149 099A  
                                                    l14261 0B4A  
                                                    l14253 0B3F  
                                                    l14245 0B38  
                                                    l14237 0B31  
                                                    l14229 0B2D  
                                                    l14093 0D81  
                                                    l14069 0D5F  
                                                    l13357 11B8  
                                                    l13461 1497  
                                                    l13349 1F84  
                                                    l13437 0DE1  
                                                    l13429 0DCD  
                                                    l13293 1758  
                                                    l13285 1738  
                                                    l13453 1027  
                                                    l13701 0302  
                                                    l12655 1E91  
                                                    l12583 10FF  
                                                    l12559 115E  
                                                    l12567 1171  
                                                    l12575 1184  
                                                    l12591 132C  
                                                    l12647 1E8D  
                                                    l12719 0ADF  
                                                    l12751 1F7D  
                                                    l12639 1EDF  
                                                    l12823 159F  
                                                    l12831 1060  
                                                    l13295 10C2  
                                                    l13391 164F  
                                                    l13551 0C75  
                                                    l13543 0C51  
                                                    l12911 1521  
                                                    l14327 14BA  
                                                    l12903 156B  
                                                    l13199 0A9F  
                                                    l13607 0846  
                                                    l14423 0633  
                                                    l14415 062A  
                                                    l14407 0601  
                                                    l14319 1199  
                                                    l14343 1779  
                                                    l14335 1761  
                                                    l14351 0672  
                                                    l13471 1399  
                                                    l13463 1381  
                                                    l13383 1FB1  
                                                    l13375 0A35  
                                                    l13367 0A13  
                                                    l13535 1F2A  
                                                    l13527 1F3C  
                                                    l14191 0971  
                                                    l14183 095A  
                                                    l14175 0951  
                                                    l14159 09B2  
                                                    l14271 0B56  
                                                    l14263 0B4D  
                                                    l14255 0B40  
                                                    l14247 0B3A  
                                                    l14239 0B32  
                                                    l14079 0D6B  
                                                    l13359 11C7  
                                                    l13447 12AB  
                                                    l13631 11F0  
                                                    l13623 11DD  
                                                    l13287 1741  
                                                    l13703 032F  
                                                    l13711 0373  
                                                    l12585 1106  
                                                    l12569 1178  
                                                    l12577 118B  
                                                    l12761 15F2  
                                                    l12657 1ED0  
                                                    l12665 1F9F  
                                                    l12673 1F86  
                                                    l12681 0E3A  
                                                    l12729 0AF0  
                                                    l12809 157C  
                                                    l12825 15A7  
                                                    l12833 1061  
                                                    l13297 10D1  
                                                    l13393 1660  
                                                    l13553 0C79  
                                                    l13545 0C57  
                                                    l12921 1542  
                                                    l12913 152C  
                                                    l14329 14C0  
                                                    l12905 156D  
                                                    l14425 0639  
                                                    l14417 062D  
                                                    l14409 060A  
                                                    l14345 178E  
                                                    l14337 1765  
                                                    l14361 06BD  
                                                    l14353 0684  
                                                    l13465 138D  
                                                    l13561 107B  
                                                    l13377 0A38  
                                                    l13369 0A25  
                                                    l13481 0E9B  
                                                    l14521 1286  
                                                    l13529 1F42  
                                                    l14193 0973  
                                                    l14185 095C  
                                                    l14177 0954  
                                                    l14169 093F  
                                                    l14281 1FE5  
                                                    l13537 1F66  
                                                    l14273 0B59  
                                                    l14265 0B50  
                                                    l14257 0B41  
                                                    l14249 0B3C  
                                                    l14089 0D77  
                                                    l13449 12B7  
                                                    l13625 11E5  
                                                    l13457 148A  
                                                    l13289 174C  
                                                    l13705 0337  
                                                    l13641 00BA  
                                                    l13721 08D7  
                                                    l13801 0934  
                                                    l14441 0C03  
                                                    l12499 1467  
                                                    l12595 1F0C  
                                                    l12763 15F5  
                                                    l12755 15EB  
                                                    l12659 1ED2  
                                                    l12667 1FA1  
                                                    l12675 1F88  
                                                    l12739 0AF8  
                                                    l12747 1F78  
                                                    l12827 15AA  
                                                    l12819 1597  
                                                    l12835 1064  
                                                    l12931 1073  
                                                    l13387 1647  
                                                    l13395 1675  
                                                    l13555 0C82  
                                                    l13547 0C66  
                                                    l13539 0C4A  
                                                    l12923 1543  
                                                    l12915 1531  
                                                    l13571 0FA2  
                                                    l13563 1088  
                                                    l14291 1F18  
                                                    l12851 14EA  
                                                    l12843 14D4  
                                                    l14371 0593  
                                                    l14339 176E  
                                                    l14363 06ED  
                                                    l14355 0689  
                                                    l14347 065D  
                                                    l13467 138D  
                                                    l13379 1FA8  
                                                    l13475 1FD7  
                                                    l13491 0EBA  
                                                    l13483 0EA0  
                                                    l14523 128B  
                                                    l14531 1290  
                                                    l14195 0974  
                                                    l14187 0963  
                                                    l14179 0956  
                                                    l14283 1FE8  
                                                    l14275 0B5B  
                                                    l14267 0B52  
                                                    l14259 0B48  
                                                    l14099 0D83  
                                                    l13811 123A  
                                                    l13627 11EE  
                                                    l13459 148A  
                                                    l13707 033D  
                                                    l13651 0126  
                                                    l13643 00E5  
                                                    l13635 00AA  
                                                    l13731 08FE  
                                                    l13723 08E0  
                                                    l13715 08C7  
                                                    l13803 093B  
                                                    l12941 1E94  
                                                    l12829 1E9A  
                                                    l12589 1313  
                                                    l12757 15EE  
                                                    l12773 15FB  
                                                    l12669 1FA6  
                                                    l12677 1F8C  
                                                    l12693 0E4B  
                                                    l12685 0E43  
                                                    l12749 1F7A  
                                                    l12781 1EE9  
                                                    l12837 1067  
                                                    l12933 1075  
                                                    l13389 1647  
                                                    l13397 1675  
                                                    l13557 0C8A  
                                                    l13549 0C6D  
                                                    l12917 1538  
                                                    l12925 1545  
                                                    l12909 1521  
                                                    l13581 0FF4  
                                                    l13573 0FC2  
                                                    l13565 0F75  
                                                    l12861 14F8  
                                                    l12853 14F0  
                                                    l12845 14D4  
                                                    l14381 05B6  
                                                    l14373 0596  
                                                    l14429 063C  
                                                    l14365 06F1  
                                                    l14357 0694  
                                                    l14349 0667  
                                                    l13469 138F  
                     __end_of_TMAG5273_GetTemperatureValue 1087  
                                                    l14293 1208  
                                                    l13493 0ECD  
                                                    l13485 0EA6  
                                                    l14541 1054  
                                                    l14525 128E  
                                                    l14517 127A  
                                                    l14197 0975  
                                                    l14189 096A  
                                                    l14285 1FE9  
                                                    l14277 1FE1  
                                                    l14269 0B54  
                                                    l13813 1248  
                                                    l13901 03DF  
                                                    l13821 0CF0  
                                                    l13709 036B  
                                                    l13661 0193  
                                                    l13653 012C  
                                                    l13645 00ED  
                                                    l13637 00AA  
                                                    l13741 0718  
                                                    l13725 08E8  
                                                    l13717 08C7  
                                                    l14461 0C44  
                                                    l14453 0C32  
                                                    l14445 0C20  
                                                    l14437 0BFA  
                             _TMAG5273_GetTemperatureValue 107A  
                                                    l12599 1ECC  
                                                    l12767 15F7  
                                                    l12783 1EEC  
                                                    l12791 1EFB  
                                                    l12951 13CD  
                                                    l12943 13BE  
                                                    l12935 1078  
                                                    l12927 106D  
                                                    l13399 167D  
                                                    l13559 0C8E  
                                                    l12871 150A  
                                                    l12919 153C  
                                                    l13575 0FDA  
                                                    l13567 0F92  
                                                    l13591 1F02  
                                                    l12855 14F1  
                                                    l12847 14DA  
                                                    l12839 1EC7  
                                                    l14391 05D9  
                                                    l14383 05BC  
                                                    l14375 059B  
                                                    l13583 1F24  
                                                    l14367 06FA  
                                                    l14359 06AB  
                                                    l14295 120A  
                                                    l14551 07E7  
                                                    l14535 1EAC  
                                                    l13495 0ED3  
                                                    l13487 0EA7  
                                                    l13479 0E90  
                                                    l14543 105C  
                                                    l14519 1280  
                                                    l14199 097A  
                                                    l14279 1FE4  
                                                    l14287 11A0  
                                                    l13807 1234  
                                                    l13911 03EB  
                                                    l13823 0CFD  
                                                    l13671 01DB  
                                                    l13663 019B  
                                                    l13655 0158  
                                                    l13647 00F2  
                                                    l13639 00B5  
                                                    l13751 0756  
                                                    l13743 072C  
                                                    l13735 0708  
                                                    l13727 08ED  
                                                    l13719 08D2  
                                                    l12689 0E47  
                                                    l12953 13D1  
                                                    l12945 13C5  
                                                    l12929 1072  
                                                    l12873 1511  
                                                    l12881 151E  
                                                    l12865 14FA  
                                                    l13577 0FE8  
                                                    l13569 0F97  
                                                    l12857 14F3  
                                                    l12849 14E6  
                                                    l14393 05DF  
                                                    l14385 05C5  
                                                    l14377 05A1  
                                                    l14369 0592  
                                                    l14297 120E  
                                                    l14553 07F0  
                                                    l13489 0EAC  
                                                    l13497 0ED8  
                                                    l14545 105E  
                                                    l14289 11AE  
                                                    l13809 1234  
                                                    l13913 03F0  
                                                    l13921 03F7  
                                                    l13825 0D0B  
                                                    l13817 0CEA  
                                                    l13681 024B  
                                                    l13673 0208  
                                                    l13665 01A1  
                                                    l13657 0160  
                                                    l13649 011E  
                                                    l13761 0795  
                                                    l13753 075C  
                                                    l13745 0734  
                                                    l13737 0708  
                                                    l13729 08F7  
                                                    l14457 0C3B  
                                                    l14449 0C29  
                                                    l12939 1E97  
                                                    l12699 0E4F  
                                                    l12787 1EF8  
                                                    l12795 156F  
                                                    l12955 13D4  
                                                    l12947 13C6  
                                                    l12971 17D6  
                                                    l12963 17CB  
                                                    l12875 1515  
                                                    l12867 14FA  
                                                    l13579 0FEC  
                                                    l13587 1F1E  
                                                    l12859 14F6  
                                                    l12891 154E  
                                                    l12883 1000  
                                                    l13595 0819  
                                                    l14395 05E8  
                                                    l14387 05CC  
                                                    l14379 05AA  
                                                    l14299 1217  
                                                    l13499 0EDE  
                                                    l14539 1054  
                                                    l13923 03FC  
                                                    l13915 03F5  
                                                    l13907 03E1  
                                                    l13827 0D10  
                                                    l13835 0D17  
                                                    l13819 0CEA  
                                                    l13691 02B9  
                                                    l13683 0251  
                                                    l13675 0210  
                                                    l13667 01CD  
                                                    l13659 0166  
                                                    l13755 0771  
                                                    l13747 0739  
                                                    l13763 079D  
                                                    l13739 0713  
                                                    l13771 09C8  
                                                    l12789 1EFA  
                                                    l12797 1571  
                                                    l12957 13D7  
                                                    l12949 13C8  
                                                    l12981 17EC  
                                                    l12973 17DD  
                                                    l12965 17D2  
                                                    l12877 151B  
                                                    l12869 1505  
                                                    l12893 155B  
                                                    l13597 081A  
                                                    l14397 05EF  
                                                    l14389 05D6  
                                                    l14549 07A1  
                                                    l14581 1227  
                                                    l13941 041C  
                                                    l13925 0401  
                                                    l13909 03E6  
                                                    l13837 0D1C  
                                                    l13845 0D23  
                                                    l13829 0D15  
                                                    l13693 02C1  
                                                    l13685 027F  
                                                    l13677 0216  
                                                    l13669 01D5  
                                                    l13757 0779  
                                                    l13749 074E  
                                                    l13781 09EF  
                                                    l13773 09CD  
                                                    l16421 04C9  
                                                    l12799 1574  
                                                    l12959 13DA  
                                                    l12991 17FD  
                                                    l12983 17F1  
                                                    l12975 17E2  
                                                    l12967 17D4  
                                                    l12879 151C  
                                                    l12895 155F  
                                                    l12887 1548  
                                                    l13599 0828  
                                                    l14399 05F1  
                                                    l14583 122A  
                                                    l14575 121E  
                                                    l13951 0428  
                                                    l13943 0421  
                                                    l13927 0406  
                                                    l13935 040D  
                                                    l13871 037D  
                                                    l13847 0D28  
                                                    l13855 0D2F  
                                                    l13839 0D21  
                                                    l13695 02C7  
                                                    l13687 0287  
                                                    l13679 0243  
                                                    l13759 077F  
                                                    l13783 09F6  
                                                    l13775 09D7  
                                                    l13767 09BD  
                                                    l13791 090F  
                                                    l16431 04DC  
                                                    l16423 04CA  
                                                    l12985 17F2  
                                                    l12977 17E3  
                                                    l12969 17D5  
                                                    l12897 1565  
                                                    l12889 1548  
                                                    l14585 122D  
                                                    l14577 1221  
                                                    l13953 042D  
                                                    l13937 0412  
                                                    l13929 040B  
                                                    l13881 03BA  
                                                    l13873 038B  
                                                    l13857 0D34  
                                                    l13849 0D2D  
                                                    l13697 02F4  
                                                    l13689 028D  
                                                    l13777 09DF  
                                                    l13769 09BD  
                                                    l13793 0914  
                                                    l16441 0517  
                                                    l16433 04E4  
                                                    l16425 04CB  
                                                    l16611 1609  
                                                    l12987 17F7  
                                                    l12979 17E8  
                                                    l12995 1004  
                                                    l12899 1566  
                                                    l16603 0644  
                                                    l14587 1230  
                                                    l14579 1224  
                                                    l13971 044D  
                                                    l13955 0432  
                                                    l13963 0439  
                                                    l13939 0417  
                                                    l13883 03BF  
                                                    l13875 0399  
                                                    l13867 0377  
                                                    l13859 0D39  
                                                    l13699 02FC  
                                                    l13779 09E4  
                                                    l13795 091D  
                                                    l13787 0904  
                                                    l16451 053D  
                                                    l16443 0522  
                                                    l16435 04E6  
                                                    l16427 04CE  
                                                    l16419 04BD  
                                                    l16605 158E  
                                                    l12997 1EFD  
                                                    l12989 17FA  
                                                    l14589 1F07  
                                                    l13981 0459  
                                                    l13965 043E  
                                                    l13957 0437  
                                                    l13949 0423  
                                                    l13885 03C4  
                                                    l13893 03CB  
                                                    l13877 03A7  
                                                    l13869 0377  
                                                    l13797 0925  
                                                    l13789 0904  
                                                    l16461 057F  
                                                    l16453 0540  
                                                    l16445 052D  
                                                    l16437 04F6  
                                                    l16429 04D4  
                                                    l16607 0B06  
                                                    l13983 045E  
                                                    l13991 0465  
                                                    l13967 0443  
                                                    l13895 03D0  
                                                    l13887 03C9  
                                                    l13879 03B5  
                                                    l13799 092A  
                                                    l16447 0533  
                                                    l16439 0505  
                                                    l16455 0544  
                                                    l16609 0E62  
                                                    l13993 046A  
                                                    l13985 0463  
                                                    l13969 0448  
                                                    l13977 044F  
                                                    l13897 03D5  
                                                    l16457 0553  
                                                    l16449 0539  
                                                    l13995 046F  
                                                    l13979 0454  
                                                    l13899 03DA  
                                                    l16459 056C  
                                                    l13997 0474  
                                                    l13999 0479  
                                    _eusart1RxStatusBuffer 00BE  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0A8F  
                                                    u10001 0A8E  
                                                    u10010 0A9C  
                                                    u10011 0A9B  
                                                    u10020 1449  
                                                    u10100 1760  
                                                    u10021 1448  
                                                    u10101 175F  
                                                    u10110 10CF  
                                                    u10030 145A  
                                                    u10111 10CD  
                                                    u10031 1459  
                                                    u10120 10D0  
                                                    u10040 17C9  
                                                    u10200 0A25  
                                                    u11000 041C  
                                                    u10041 17C8  
                                                    u10201 0A24  
                                                    u11001 041B  
                                                    u10130 10E0  
                                                    u10210 1FAF  
                                                    u10050 0DEB  
                                                    u11010 0421  
                                                    u10131 10DE  
                                                    u10211 1FAD  
                                                    u10051 0DEA  
                                                    u11011 0420  
                                                    u10140 10E1  
                                                    u10220 1FB0  
                                                    u10060 0E0E  
                                                    u11100 0454  
                                                    u11020 0428  
                                                    u10300 0DD7  
                                                    u10045 17C5  
                                                    u10061 0E0D  
                                                    u11101 0453  
                                                    u11021 0427  
                                                    u10301 0DD6  
                                                    u10150 0A4A  
                                                    u10230 1FB8  
                                                    u10070 0E2E  
                                                    u11110 0459  
                                                    u11030 042D  
                                                    u10310 0DDC  
                                                    u10151 0A49  
                                                    u10231 1FB6  
                                                    u10071 0E2D  
                                                    u11111 0458  
                                                    u11031 042C  
                                                    u10311 0DDB  
                                                    u10400 0C75  
                                                    u10160 0A72  
                                                    u10240 1FB9  
                                                    u10080 0E37  
                                                    u11200 048A  
                                                    u11120 045E  
                                                    u11040 0432  
                                                    u10320 0DE1  
                                                    u10401 0C74  
                                                    u10161 0A71  
                                                    u10081 0E36  
                                                    u11201 0489  
                                                    u11121 045D  
                                                    u11041 0431  
                                                    u10321 0DE0  
                                                    u10250 164F  
                                                    u10410 0C8A  
                                                    u11210 048F  
                                                    u11130 0463  
                                                    u11050 0437  
                                                    u10090 1738  
                                                    u10251 164E  
                                                    u10411 0C89  
                                                    u11211 048E  
                                                    u11131 0462  
                                                    u11051 0436  
                                                    u10091 1737  
                                                    u10340 0EA0  
                                                    u10180 143F  
                                                    u11300 0D64  
                                                    u11220 0496  
                                                    u11140 046A  
                                                    u11060 043E  
                                                    u10341 0E9F  
                                                    u10181 143E  
                                                    u11301 0D63  
                                                    u11221 0495  
                                                    u11141 0469  
                                                    u11061 043D  
                                                    u10270 167D  
                                                    u10430 0FF4  
                                                    u10190 0A0F  
                                                    u10350 0EA6  
                                                    u10174 1431  
                                                    u11310 0D69  
                                                    u11230 049B  
                                                    u11150 046F  
                                                    u11070 0443  
                                                    u10510 11EE  
                                                    u10334 1491  
                                                    u10271 167C  
                                                    u10431 0FF3  
                                                    u10191 0A0E  
                                                    u10351 0EA5  
                                                    u10175 142F  
                                                    u11311 0D68  
                                                    u11231 049A  
                                                    u11151 046E  
                                                    u11071 0442  
                                                    u10511 11ED  
                                                    u10335 148F  
                                                    u11400 101F  
                                                    u10360 0ECD  
                                                    u11320 0D70  
                                                    u11240 04A0  
                                                    u11160 0474  
                                                    u11080 0448  
                                                    u10600 028D  
                                                    u10520 00BA  
                                                    u10265 1666  
                                                    u10425 0FAD  
                                                    u11401 101E  
                                                    u10361 0ECC  
                                                    u11321 0D6F  
                                                    u11241 049F  
                                                    u11161 0473  
                                                    u11081 0447  
                                                    u10601 028C  
                                                    u10521 00B9  
                                                    u10450 0828  
                                                    u11410 1014  
                                                    u10370 0EDE  
                                                    u11330 0D75  
                                                    u11250 04A5  
                                                    u11170 0479  
                                                    u11090 044D  
                                                    u10290 0DD2  
                                                    u10610 02C7  
                                                    u10530 00F2  
                                                    u10451 0827  
                                                    u11411 1013  
                                                    u10371 0EDD  
                                                    u11331 0D74  
                                                    u11251 04A4  
                                                    u11171 0478  
                                                    u11091 044C  
                                                    u10291 0DD1  
                                                    u10611 02C6  
                                                    u10531 00F1  
                                                    u10460 082C  
                                                    u11500 05DF  
                                                    u11420 104F  
                                                    u11340 0D7C  
                                                    u11260 04AC  
                                                    u11180 0480  
                                                    u10620 0302  
                                                    u10540 012C  
                                                    u10700 09CD  
                                                    u10285 1694  
                                                    u10461 082B  
                                                    u10445 081D  
                                                    u11501 05DE  
                                                    u11421 104E  
                                                    u10365 0EC9  
                                                    u11341 0D7B  
                                                    u11261 04AB  
                                                    u11181 047F  
                                                    u10621 0301  
                                                    u10541 012B  
                                                    u10701 09CC  
                                                    u10470 0835  
                                                    u11510 05F6  
                                                    u11430 178E  
                                                    u11350 0D81  
                                                    u11270 04B1  
                                                    u11190 0485  
                                                    u10630 033D  
                                                    u10550 0166  
                                                    u10710 09E4  
                                                    u10471 0833  
                                                    u11511 05F5  
                                                    u11431 178D  
                                                    u11351 0D80  
                                                    u11271 04B0  
                                                    u11191 0484  
                                                    u10631 033C  
                                                    u10551 0165  
                                                    u10711 09E3  
                                                    u10480 0836  
                                                    u11520 0601  
                                                    u11360 0D88  
                                                    u11280 04B6  
                                                    u10800 0D34  
                                                    u10560 01A1  
                                                    u10640 08D7  
                                                    u10720 0914  
                                                    u11600 0C43  
                                                    u14000 0533  
                                                    u11521 0600  
                                                    u11361 0D87  
                                                    u11281 04B5  
                                                    u10801 0D33  
                                                    u10561 01A0  
                                                    u10641 08D6  
                                                    u10721 0913  
                                                    u11601 0C42  
                                                    u14001 0532  
                                                    u11530 0632  
                                                    u11370 0D8D  
                                                    u11290 04BB  
                                                    u10810 0D39  
                                                    u10570 01DB  
                                                    u10650 08ED  
                                                    u10730 092A  
                                                    u14010 0552  
                                                    u10395 0C5A  
                                                    u11531 0631  
                                                    u11435 178A  
                                                    u11371 0D8C  
                                                    u11291 04BA  
                                                    u10811 0D38  
                                                    u10571 01DA  
                                                    u10651 08EC  
                                                    u10731 0929  
                                                    u14011 0551  
                                                    u11540 0639  
                                                    u11460 06FA  
                                                    u11380 136B  
                                                    u10900 03E6  
                                                    u10820 03BA  
                                                    u10740 0D10  
                                                    u10580 0216  
                                                    u10660 0718  
                                                    u14020 056B  
                                                    u11541 0638  
                                                    u11461 06F9  
                                                    u11445 0697  
                                                    u11381 136A  
                                                    u10901 03E5  
                                                    u10821 03B9  
                                                    u10741 0D0F  
                                                    u10581 0215  
                                                    u10661 0717  
                                                    u14021 056A  
                                                    u11470 05A1  
                                                    u11390 137B  
                                                    u10910 03EB  
                                                    u10830 03BF  
                                                    u10750 0D15  
                                                    u10590 0251  
                                                    u10670 0739  
                                                    u11550 0C02  
                                                    u14030 058D  
                                                    u11471 05A0  
                                                    u11455 06C4  
                                                    u11391 137A  
                                                    u10911 03EA  
                                                    u10831 03BE  
                                                    u10751 0D14  
                                                    u10591 0250  
                                                    u10671 0738  
                                                    u11551 0C01  
                                                    u14031 058C  
                                                    u11480 05BC  
                                                    u10920 03F0  
                                                    u10840 03C4  
                                                    u10760 0D1C  
                                                    u10680 075C  
                                                    u11560 0C1F  
                                                    u11481 05BB  
                                                    u10921 03EF  
                                                    u10841 03C3  
                                                    u10761 0D1B  
                                                    u10681 075B  
                                                    u11561 0C1E  
                                                    u11650 1280  
                                                    u10930 03F5  
                                                    u10850 03C9  
                                                    u10770 0D21  
                                                    u10690 077F  
                                                    u11570 0C28  
                                                    u11651 127F  
                                                    u10931 03F4  
                                                    u10851 03C8  
                                                    u10771 0D20  
                                                    u10691 077E  
                                                    u11571 0C27  
                                                    u11660 1286  
                                                    u10940 03FC  
                                                    u10860 03D0  
                                                    u10780 0D28  
                                                    u11580 0C31  
                                                    u11661 1285  
                                                    u10941 03FB  
                                                    u10861 03CF  
                                                    u10781 0D27  
                                                    u11581 0C30  
                                                    u11670 105C  
                                                    u10950 0401  
                                                    u10870 03D5  
                                                    u10790 0D2D  
                                                    u11590 0C3A  
                                                    u14047 11F6  
                                                    u11495 05CF  
                                                    u11671 105B  
                                                    u10951 0400  
                                                    u10871 03D4  
                                                    u10791 0D2C  
                                                    u11591 0C39  
                                                    u11680 07FE  
                                                    u10960 0406  
                                                    u10880 03DA  
                                                    u11681 07FD  
                                                    u10961 0405  
                                                    u10881 03D9  
                                                    u10970 040B  
                                                    u10890 03DF  
                                                    u10971 040A  
                                                    u10891 03DE  
                                                    u10980 0412  
                                                    u10981 0411  
                                                    u10990 0417  
                                                    u10991 0416  
                            __end_of_rn487x_driver_version 2012  
                                                    u13950 04DC  
                                                    u13951 04DB  
                                                    u13960 04E4  
                                                    u13961 04E3  
                                                    u13970 0504  
                                                    u13971 0503  
                                                    u13980 0522  
                                                    u13981 0521  
                                                    u13990 052D  
                                                    u13991 052C  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 1443  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 13FF  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004C  
                                                    _begin 0BFA  
                                  __end_of_PIN_MANAGER_IOC 1F9F  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B5E  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EB  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 16FD  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 09FA  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CEA  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E8C  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E8B  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 1349  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F66  
                            _EUSART2_SetTxInterruptHandler 1F60  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0BAC  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 097D  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11C8  
                                 _LIGHTBLUE_UpdateErrorLed 1349  
                               __end_of_RN487X_is_rx_ready 1FE1  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1EBB  
                              _EUSART2_DefaultErrorHandler 1EB7  
                                  _LIGHTBLUE_PerformAction 0817  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0B15  
                                       __end_of_I2C1_DO_TX 0E90  
                                         _RN487X_DataReady 1365  
                                       __end_of_I2C1_Close 127A  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09BB  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A3E  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   _RC4PPS 1F24  
                                                   i1l2072 1F9E  
                                                   _ODCONA 1F3A  
                                                   i1l2082 07FF  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   i1l2076 10A3  
                                                   _ODCONE 1F66  
                                                   i1l1710 13FE  
                                                   i1l1721 1261  
                                                   i1l1730 1EBA  
                                                   i1l1707 13FC  
                                                   i1l1724 1E8C  
                                                   i1l1717 0887  
                                                   i1l1727 1EBE  
                                                   i1l1920 0013  
                                                   i1l1923 0026  
                                                   i1l1860 1420  
                                                   i1l1932 0053  
                                                   i1l1925 0035  
                                                   i1l1926 0053  
                                                   _RN487X 1868  
                                                   i1l1871 12DD  
                                                   i1l1927 0044  
                                                   i1l1880 1EB2  
                                                   i1l1857 141E  
                                                   i1l1874 1E8B  
                                                   i1l1867 08C4  
                                                   i1l1877 1EB6  
                                                   i1l9011 12D9  
                                                   i1l9003 12C4  
                                                   i1l9005 12CD  
                                                   i1l9007 12D2  
                                                   i1l9009 12D8  
                                          ?_RN487X_ReadMsg 0073  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9713 1EB3  
                                                   i1l9715 1EAF  
                                                   i1l9811 10A1  
                                                   i1l9807 1095  
                                                   i1l9809 109C  
                                                   u710_20 08A4  
                                                   u702_20 13E4  
                                                   u710_21 08A3  
                                                   u702_21 13E3  
                                                   u711_20 08BA  
                                                   u703_20 13F6  
                                                   u711_21 08B9  
                                                   u703_21 13F5  
                                                   u712_20 1F9B  
                                                   u712_21 1F9A  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   u707_20 1406  
                                                   u707_21 1405  
                                                   u564_20 12D8  
                                                   u708_20 1418  
                                                   u564_21 12D7  
                                                   u708_21 1417  
                                                   _OSCFRQ 0893  
                                                   u709_20 0893  
                                                   u709_21 0892  
                                          ?_RN487X_SendCmd 0077  
                                                   u669_20 109C  
                                                   u669_21 109B  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EB  
                                         __end_of_bitWrite 14AE  
                                setXYAxisRange@xyAxisRange 0035  
                                         __end_of_getError 0DE5  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003A  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1673  
                             __end_of_BMA253_GetAccelDataZ 16A1  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F24  
                                                   _strchr 139E  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 12DE  
                                                   _strlen 1292  
                                                   _strstr 0DE5  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F9F  
                                           _PMD_Initialize 1FEB  
                                  _BMA253_NewAccelDataRdyY 10C2  
                                  _BMA253_NewAccelDataRdyZ 10D3  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 13DD  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 0050  
                                  _I2C1_DO_RX_NACK_RESTART 1EF3  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 09FA  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D6  
                                          _eusart1TxBuffer 00C6  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 121E  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DE  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002E  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 12DE  
                                  _rdBlkRegCompleteHandler 12F8  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 10E4  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1EA0  
                                            __end_of_begin 0C48  
                                     __end_of_RN487X_Delay 1F96  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 1025  
                                   setOperatingMode@opMode 0035  
                                     __end_of_RN487X_Write 1048  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FF5  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 10A4  
                                     __end_of_EUSART1_Read 156F  
                                     __end_of_EUSART2_Read 14FA  
                                      _LIGHTBLUE_SplitByte 16FD  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1087  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 132E  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08C5  
                                    __end_of_I2C1_DO_RESET 1EFD  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 0902  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1234  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1F18  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D4  
                            __end_of_rd2RegCompleteHandler 1141  
                                       _DELAY_milliseconds 11F2  
                             __end_of_LIGHTBLUE_Initialize 1F1E  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1154  
                        TMAG5273_CalcTemperature@lowerByte 0032  
                                    _rd1RegCompleteHandler 111B  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EE4  
                                    _wr1RegCompleteHandler 1108  
                          __end_of_EUSART1_SetErrorHandler 1F30  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D3D  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002E  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                          _I2C1_MasterOpen 106D  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1EA0  
                                          _I2C1_Initialize 1FBA  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 106D  
                            __end_of_LIGHTBLUE_AccelSensor 16CF  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F36  
                           _EUSART1_SetFramingErrorHandler 1F30  
                                                  ?_strstr 0078  
                                                  u1038_20 125B  
                                                  u1038_21 125A  
                                    _eusart2RxStatusBuffer 00CE  
                                                  u1170_20 0869  
                                                  u1170_21 0868  
                                                  u1171_20 087D  
                                                  u1171_21 087C  
                                                  u1169_20 0859  
                                                  u1169_21 0858  
                                                  i1l10301 1419  
                                                  i1l10311 089F  
                                                  i1l10303 0888  
                                                  i1l10321 08C1  
                                                  i1l10313 08A4  
                                                  i1l10305 088E  
                                                  i1l10315 08AA  
                                                  i1l10307 0893  
                                                  i1l10323 1F96  
                                                  i1l10317 08B0  
                                                  i1l10309 0899  
                                                  i1l10261 13E4  
                                                  i1l10325 1F9B  
                                                  i1l10319 08BA  
                                                  i1l10263 13EB  
                                                  i1l10265 13F0  
                                                  i1l10267 13F6  
                                                  i1l10259 13DD  
                                                  i1l10291 13FF  
                                                  i1l10269 13F7  
                                                  i1l10293 1406  
                                                  i1l10295 140D  
                                                  u1390_20 0039  
                                                  i1l10297 1412  
                                                  u1390_21 0038  
                                                  i1l10299 1418  
                                                  u1391_20 003D  
                                                  u1383_20 000B  
                                                  u1391_21 003C  
                                                  u1383_21 000A  
                                                  u1392_20 0048  
                                                  u1384_20 000F  
                                                  i1l13521 1255  
                                                  u1392_21 0047  
                                                  u1384_21 000E  
                                                  i1l13523 125B  
                                                  i1l13525 125C  
                                                  i1l13517 124A  
                                                  i1l14165 1EBB  
                                                  i1l13519 1251  
                                                  i1l14167 1EB7  
                                                  u1393_20 004C  
                                                  u1385_20 0017  
                                                  u1393_21 004B  
                                                  u1385_21 0016  
                                                  u1386_20 001B  
                                                  i1l14561 085E  
                                                  u1386_21 001A  
                                                  i1l14571 087D  
                                                  i1l14563 0864  
                                                  i1l14555 084F  
                                                  i1l14573 0884  
                                                  i1l14565 0869  
                                                  i1l14557 0854  
                                                  i1l14567 086E  
                                                  i1l14559 0859  
                                                  u1387_20 001F  
                                                  i1l14569 0874  
                                                  u1387_21 001E  
                                                  i1l16361 000F  
                                                  i1l16371 002E  
                                                  i1l16363 0017  
                                                  i1l16373 0039  
                                                  i1l16365 001B  
                                                  i1l16357 0006  
                                                  i1l16375 003D  
                                                  i1l16367 001F  
                                                  i1l16359 000B  
                                                  u1388_20 002A  
                                                  i1l16377 0048  
                                                  i1l16369 002A  
                                                  u1388_21 0029  
                                                  i1l16379 004C  
                                                  u1389_20 002E  
                                                  u1389_21 002D  
                             getMagneticChannel@magChannel 002E  
                                    ?_RN487X_EnterDataMode 0070  
                                ?_TMAG5273_CalcTemperature 002D  
                                            _writeRegister 1025  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1F0C  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1701 1167  
          _rd1RegCompleteHandler@i2c1_master_example$F1701 1154  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1712 117A  
          _rd2RegCompleteHandler@i2c1_master_example$F1712 1167  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1724 1108  
          _wr2RegCompleteHandler@i2c1_master_example$F1724 10F5  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1718 118D  
          _wr1RegCompleteHandler@i2c1_master_example$F1718 117A  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1735 132E  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1735 1313  
                              __end_of_EUSART2_Receive_ISR 0888  
                       __end_of_IOCAF6_SetInterruptHandler 1F6C  
                               _IOCAF6_SetInterruptHandler 1F66  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 12C4  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1EA9  
                                     ??_getMagneticChannel 002C  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0033  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10C2  
                               _LIGHTBLUE_SetErrorLedValue 10B3  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1645  
                                     _BMA253_GetAccelDataZ 1673  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1F07  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E6  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1EE9  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1761  
                                        _RN487X_FilterData 0E90  
                                 __end_of_RN487X_DataReady 1381  
                             __end_of_LIGHTBLUE_PushButton 11A0  
                                     __end_of_readRegister 103C  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1FB1  
                                                  _bitRead 1421  
                               __end_of_EUSART1_is_tx_done 1004  
                          __end_of_EUSART2_SetErrorHandler 1F4E  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 100F  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0BFA  
                                                  __ptext2 0902  
                                                  __ptext3 09BB  
                                                  __ptext4 08C5  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 1025  
                                                  __ptext8 172E  
                                                  __ptext9 0D91  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1E9D  
                                __end_of_I2C1_MasterIsNack 1F12  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1EBF  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1EBB  
                                    _OSCILLATOR_Initialize 1FE1  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1EAC  
                                 __end_of_I2C1_DO_TX_EMPTY 1618  
                                       _EUSART1_Initialize 093F  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FD7  
                                         ??_setXYAxisRange 0033  
                  TMAG5273_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F6D  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C98  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EDA  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1EC7  
               __end_of_RN487X_Read@rn487x_interface$F1843 1FCD  
                       _RN487X_Read@rn487x_interface$F1843 1FC3  
                      ?_RN487X_Read@rn487x_interface$F1844 0070  
                     ??_RN487X_Read@rn487x_interface$F1846 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 121E  
                              _LIGHTBLUE_TemperatureSensor 1208  
                                      _I2C1_MasterClearIrq 1E91  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1ECB  
                           __end_of_rn487x_PrintMessageEnd 0BFA  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F72  
                               __end_of_I2C1_MasterStartRx 1EA6  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F73  
                                   _I2C1_DO_SEND_ADR_WRITE 1F86  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0032  
                                __end_of_RN487X_FilterData 0EEC  
                             __end_of_I2C1_DO_SEND_RESTART 1EE4  
                                  __end_of_I2C1_MasterOpen 107A  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1EA3  
                                  __end_of_I2C1_Initialize 1FC3  
                    __end_of_EUSART1_SetRxInterruptHandler 1F42  
                            _EUSART1_SetRxInterruptHandler 1F3C  
                                              _I2C1_Poller 1060  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 097D  
                            __end_of_I2C1_MasterDisableIrq 1E9A  
                                              _I2C1_Status 00A0  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CEA  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1EAF  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1EBF  
                      __end_of_I2C1_SetAddressNackCallback 100F  
                              _I2C1_SetAddressNackCallback 1004  
                                __end_of_RN487X_IndicateRx 101A  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EDF  
                               _I2C1_DO_SEND_RESTART_WRITE 1EDA  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0033  
                                      _EUSART2_is_rx_ready 1FA8  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0A84  
                          __end_of_rdBlkRegCompleteHandler 1313  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1F18  
                                  _statusBuffer@main$F4242 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002C  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00EA  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F8E  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 002F  
                                  getOperatingMode@opMode1 0030  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0C48  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 101A  
                                _LIGHTBLUE_GetDataLedValue 1F1E  
                                             _RN487X_Write 103C  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 1548  
                                             _EUSART2_Read 14D4  
                         __end_of_LIGHTBLUE_GetButtonValue 1F2A  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004A  
                            __end_of_EUSART2_RxDataHandler 1262  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 1618  
                                __end_of_RN487X_SetOutputs 0ACC  
                                            _setZAxisRange 0902  
                                           _I2C1_DO_RX_ACK 1EE9  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1E8F  
                            __end_of_I2C1_MasterSendTxData 1ED0  
                                           __end_of_strchr 13BC  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 12F8  
                                           __end_of_strlen 12AB  
                                           __end_of_strstr 0E3A  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0035  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 11C8  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0036  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 118D  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0036  
                                    __end_of_EUSART1_Write 1548  
                                    __end_of_EUSART2_Write 1521  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 124A  
                                       ??_setTemperatureEn 0033  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002F  
                               getMagneticChannel@magMode5 0030  
                               getMagneticChannel@magMode6 0031  
                               getMagneticChannel@magMode7 0032  
                                 I2C1_SetBuffer@bufferSize 0073  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F5A  
                           _EUSART2_SetOverrunErrorHandler 1F54  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0030  
                                      __end_of_isConnected 11F2  
                  TMAG5273_CalcTemperature@temperatureData 0033  
                                getTemperatureEN@tempENreg 002F  
                         __end_of_TMAG5273_CalcTemperature 139E  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0036  
                                   __end_of_I2C1_DO_RX_ACK 1EEE  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 12C4  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14AE  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EDF  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK2 016D  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1030  
                                      __end_of_RN487X_Init 07FF  
                                      __end_of_RN487X_Read 1060  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 0800  
                                     __end_of_I2C1_DO_IDLE 1ED5  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F7F  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00EA  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 112E  
                                    __end_of_fsmStateTable 1868  
                                                _main$5433 016D  
                                   _PIN_MANAGER_Initialize 0B15  
                                    _wr2RegCompleteHandler 1141  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1597  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 0C48  
                                                __ptext101 1030  
                                                __ptext110 1EFD  
                                                __ptext102 1673  
                                                __ptext111 13BC  
                                                __ptext103 10D3  
                                                __ptext120 1EE4  
                                                __ptext112 1060  
                                                __ptext104 1645  
                                                __ptext121 1EDF  
                                                __ptext113 1F12  
                                                __ptext105 10C2  
                                                __ptext130 15EB  
                                                __ptext122 1EDA  
                                                __ptext114 1597  
                                                __ptext106 0B5E  
                                                __ptext131 1EA9  
                                                __ptext123 1ED5  
                                                __ptext115 156F  
                                                __ptext107 1004  
                                                __ptext140 1313  
                                                __ptext132 1F0C  
                                                __ptext124 1F78  
                                                __ptext116 1EF8  
                                                __ptext108 17CA  
                                                __ptext141 117A  
                                                __ptext133 1ECB  
                                                __ptext125 0ACC  
                                                __ptext117 1EF3  
                                                __ptext109 106D  
                                                __ptext150 1FF5  
                                                __ptext142 1167  
                                                __ptext134 1EC3  
                                                __ptext126 0E3A  
                                                __ptext118 1EEE  
                                                __ptext151 1466  
                                                __ptext143 1154  
                                                __ptext135 1EA6  
                                                __ptext127 1F86  
                                                __ptext119 1EE9  
                                                __ptext152 10A4  
                                                __ptext144 12F8  
                                                __ptext136 1EBF  
                                                __ptext128 1F9F  
                                                __ptext161 1F96  
                                                __ptext153 1EA0  
                                                __ptext145 1141  
                                                __ptext137 1EA3  
                                                __ptext129 1ED0  
                                                __ptext170 1EB7  
                                                __ptext162 1095  
                                                __ptext154 1E9D  
                                                __ptext146 112E  
                                                __ptext138 1E8F  
                                                __ptext171 124A  
                                                __ptext163 07FF  
                                                __ptext155 1E9A  
                                                __ptext147 111B  
                                                __ptext139 1E8D  
                                                __ptext172 1EB3  
                                                __ptext164 13FF  
                                                __ptext156 1262  
                                                __ptext148 1108  
                                                __ptext173 1E8B  
                                                __ptext165 13DD  
                                                __ptext157 1E97  
                                                __ptext149 10F5  
                                                __ptext174 1EAF  
                                                __ptext166 0888  
                                                __ptext158 1E94  
                                                __ptext175 12C4  
                                                __ptext167 084F  
                                                __ptext159 1E91  
                                                __ptext168 1EBB  
                                                __ptext169 1E8C  
                                      getAngleEn@angleDir2 002F  
                                      getAngleEn@angleDir3 0030  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E8  
                                 _LIGHTBLUE_GetButtonValue 1F24  
                        _EUSART2_TxDefaultInterruptHandler 00EE  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1F12  
                                         _I2C1_MasterClose 1E94  
                                  getError@oscillatorError 0031  
                                           _I2C1_SetBuffer 10A4  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E9A  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1EFD  
                                    _LIGHTBLUE_AccelSensor 16A1  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_wr1RegCompleteHandler@strncmp$F4850 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4852 0079  
                    ??_rd2RegCompleteHandler@strncmp$F4861 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4870 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4862 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4864 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4856 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4858 0079  
                     ?_rd2RegCompleteHandler@strncmp$F4859 0078  
                   ?_rdBlkRegCompleteHandler@strncmp$F4868 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1EB7  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1EB3  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1234  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F2A  
                              __end_of_LIGHTBLUE_SplitByte 172E  
                                 __end_of_getOperatingMode 0D3D  
                         __end_of_I2C1_CallbackReturnReset 1E91  
                              __end_of_LIGHTBLUE_SplitWord 1095  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 002F  
                                       _EUSART1_is_tx_done 1000  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11DD  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1466  
                                        _RN487X_is_tx_done 1FCD  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0ACC  
                                               _I2C1_DO_TX 0E3A  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F6C  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 1262  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C0  
                             __end_of_I2C1_MasterGetRxData 1EA9  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002C  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0033  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12AB  
                                       _I2C1_MasterSendAck 1EC3  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1466  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1443  
                                _I2C1_DO_SEND_RESTART_READ 1ED5  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0036  
                                       _EUSART2_is_tx_done 1EC7  
                                   __end_of_I2C1_SetBuffer 10B3  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 2000  
                             _I2C1_SetDataCompleteCallback 1FF5  
                                       _I2C1_MasterStartRx 1EA3  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 _TMAG5273_CalcTemperature 1381  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 07A1  
                                              _RN487X_Read 1054  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002E  
                             __end_of_RN487X_SetSystemMode 1054  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F7F  
                             __end_of_I2C1_DO_ADDRESS_NACK 1597  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1EAC  
                            __end_of_i2c_read1ByteRegister 0BAC  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F8E  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1EF8  
                                              _asyncBuffer 004E  
                                       __end_of_getAngleEn 0D91  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0036  
                                __end_of_RN487X_is_tx_done 1FD7  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F48  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0035  
                             __end_of_I2C1_MasterOperation 13DD  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 084F  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F48  
                            _EUSART1_SetTxInterruptHandler 1F42  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F60  
                            _EUSART2_SetRxInterruptHandler 1F5A  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11DD  
                                  setZAxisRange@zAxisRange 0035  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
       rd1RegCompleteHandler@i2c1_master_example$F1701@ptr 0078  
                              __end_of_rn487x_PrintMessage 17CA  
       rd2RegCompleteHandler@i2c1_master_example$F1712@ptr 0078  
                                    _I2C1_MasterDisableIrq 1E97  
       wr2RegCompleteHandler@i2c1_master_example$F1724@ptr 0078  
       wr1RegCompleteHandler@i2c1_master_example$F1718@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1735@ptr 0078  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0079  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1EB3  
                              _EUSART1_DefaultErrorHandler 1EAF  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1FBA  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C98  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 148A  
                       LIGHTBLUE_TemperatureSensor@payload 0035  
                            __end_of_i2c_read2ByteRegister 0A84  
                                                 _getError 0D91  
                                                 __ptext10 1F7F  
                                                 __ptext11 148A  
                                                 __ptext20 1421  
                                                 __ptext12 11DD  
                                                 __ptext21 1F07  
                                                 __ptext13 12AB  
                                                 __ptext30 1F60  
                                                 __ptext22 121E  
                                                 __ptext14 11B4  
                                                 __ptext31 1F5A  
                                                 __ptext23 11A0  
                                                 __ptext15 11C8  
                                                 __ptext40 1F2A  
                                                 __ptext32 1F54  
                                                 __ptext24 1FEB  
                                                 __ptext16 0CEA  
                                                 __ptext41 127A  
                                                 __ptext33 1F4E  
                                                 __ptext25 0B15  
                                                 __ptext17 0377  
                                                 __ptext50 0BAC  
                                                 __ptext42 1054  
                                                 __ptext34 1F48  
                                                 __ptext26 1F66  
                                                 __ptext18 1234  
                                                 __ptext51 1795  
                                                 __ptext43 1365  
                                                 __ptext35 093F  
                                                 __ptext27 1FE1  
                                                 __ptext19 0D3D  
                                                 __ptext60 101A  
                                                 __ptext52 12DE  
                                                 __ptext44 0E90  
                                                 __ptext36 1F42  
                                                 __ptext28 1FBA  
                                                 __ptext61 100F  
                                                 __ptext53 1443  
                                                 __ptext45 09FA  
                                                 __ptext37 1F3C  
                                                 __ptext29 097D  
                                                 __ptext70 0590  
                                                 __ptext62 1208  
                                                 __ptext54 1EAC  
                                                 __ptext46 0DE5  
                                                 __ptext38 1F36  
                                                 __ptext71 0817  
                                                 __ptext63 107A  
                                                 __ptext55 07A1  
                                                 __ptext47 0C98  
                                                 __ptext39 1F30  
                                                 __ptext80 1000  
                                                 __ptext72 10B3  
                                                 __ptext64 1381  
                                                 __ptext56 1FD7  
                                                 __ptext48 139E  
                                                 __ptext81 1EC7  
                                                 __ptext73 1349  
                                                 __ptext65 0A3E  
                                                 __ptext57 1FB1  
                                                 __ptext49 1618  
                                                 __ptext90 1F1E  
                                                 __ptext82 15C0  
                                                 __ptext74 0A84  
                                                 __ptext66 065C  
                                                 __ptext58 1FA8  
                                                 __ptext91 1F18  
                                                 __ptext83 1FC3  
                                                 __ptext75 0EEC  
                                                 __ptext67 1761  
                                                 __ptext59 1048  
                                                 __ptext92 16A1  
                                                 __ptext84 1548  
                                                 __ptext76 132E  
                                                 __ptext68 118D  
                                                 __ptext93 1087  
                                                 __ptext85 14D4  
                                                 __ptext77 0800  
                                                 __ptext69 1F24  
                                                 __ptext94 16FD  
                                                 __ptext86 1F8E  
                                                 __ptext78 16CF  
                                                 __ptext95 0F74  
                                                 __ptext87 11F2  
                                                 __ptext79 1FCD  
                                                 __ptext96 1292  
                                                 __ptext88 14AE  
                                                 __ptext97 103C  
                                                 __ptext89 1F02  
                                                 __ptext98 1521  
                                                 __ptext99 14FA  
                                              bitRead@mask 0078  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1095  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1E8F  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E8D  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E8C  
                          __end_of_BMA253_NewAccelDataRdyY 10D3  
                          __end_of_BMA253_NewAccelDataRdyZ 10E4  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E94  
                             __end_of_I2C1_DO_RX_NACK_STOP 1EF3  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1F07  
                               _LIGHTBLUE_GetErrorLedValue 1F02  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1EF8  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 002E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 124A  
                                  __end_of_getDeviceStatus 1F86  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1FA8  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1ED0  
                                      _EUSART1_Receive_ISR 0888  
                                             _I2C1_DO_RCEN 1F78  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EC3  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1030  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1FB1  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002E  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1EA6  
                                    _I2C1_MasterSendTxData 1ECB  
                            __end_of_RN487X_MessageHandler 0A3E  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@reg 0071  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E97  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E9D  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1F02  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F3C  
                           _EUSART1_SetOverrunErrorHandler 1F36  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E8D  
                             __end_of_EUSART1_Transmit_ISR 1421  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 1048  
                                     _I2C1_DO_ADDRESS_NACK 156F  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 1292  
                            _RN487X_SetAsyncMessageHandler 127A  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 084F  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 148A  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13BC  
                                          _TMR0_Initialize 11A0  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$463 002D  
                        _LIGHTBLUE_ParseIncomingPacket$464 002F  
                        _LIGHTBLUE_ParseIncomingPacket$465 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B5E  
                                       ??_getOperatingMode 002C  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 112E  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1645  
                                          _PIN_MANAGER_IOC 1F96  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 111B  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1365  
                               ??_TMAG5273_CalcTemperature 002F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EC  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
