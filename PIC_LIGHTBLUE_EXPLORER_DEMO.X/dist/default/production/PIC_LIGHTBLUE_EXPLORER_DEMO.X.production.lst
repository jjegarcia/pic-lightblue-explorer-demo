

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Dec 26 11:19:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    29                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    30                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    31                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text97,local,class=CODE,merge=1,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	intentry,global,class=CODE,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,delta=2
   200                           	psect	text163,local,class=CODE,merge=1,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   215                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   216                           	dabs	1,0x7E,2
   217     0000                     
   218                           ; Version 2.35
   219                           ; Generated 01/06/2021 GMT
   220                           ; 
   221                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   222                           ; All rights reserved.
   223                           ; 
   224                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   225                           ; 
   226                           ; Redistribution and use in source and binary forms, with or without modification, are
   227                           ; permitted provided that the following conditions are met:
   228                           ; 
   229                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   230                           ;        conditions and the following disclaimer.
   231                           ; 
   232                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   233                           ;        of conditions and the following disclaimer in the documentation and/or other
   234                           ;        materials provided with the distribution. Publication is not required when
   235                           ;        this file is used in an embedded application.
   236                           ; 
   237                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   238                           ;        software without specific prior written permission.
   239                           ; 
   240                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   241                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   242                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   243                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   244                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   245                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   246                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   247                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   248                           ; 
   249                           ; 
   250                           ; Code-generator required, PIC16LF18456 Definitions
   251                           ; 
   252                           ; SFR Addresses
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     0010                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0016                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001C                     	;# 
   277     008C                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008E                     	;# 
   282     008F                     	;# 
   283     0090                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0094                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     010C                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     010E                     	;# 
   309     010F                     	;# 
   310     010F                     	;# 
   311     0110                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     0119                     	;# 
   322     0119                     	;# 
   323     011A                     	;# 
   324     011A                     	;# 
   325     011A                     	;# 
   326     011B                     	;# 
   327     011B                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011C                     	;# 
   332     011C                     	;# 
   333     011C                     	;# 
   334     011D                     	;# 
   335     011D                     	;# 
   336     011D                     	;# 
   337     011E                     	;# 
   338     011E                     	;# 
   339     011E                     	;# 
   340     011F                     	;# 
   341     011F                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     018C                     	;# 
   346     018D                     	;# 
   347     018E                     	;# 
   348     018F                     	;# 
   349     0190                     	;# 
   350     0191                     	;# 
   351     0192                     	;# 
   352     0196                     	;# 
   353     0197                     	;# 
   354     0198                     	;# 
   355     0199                     	;# 
   356     019A                     	;# 
   357     019B                     	;# 
   358     019C                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     020E                     	;# 
   362     020E                     	;# 
   363     020F                     	;# 
   364     020F                     	;# 
   365     0210                     	;# 
   366     0210                     	;# 
   367     0211                     	;# 
   368     0211                     	;# 
   369     0212                     	;# 
   370     0213                     	;# 
   371     0214                     	;# 
   372     0214                     	;# 
   373     0215                     	;# 
   374     0215                     	;# 
   375     0216                     	;# 
   376     0216                     	;# 
   377     0217                     	;# 
   378     0217                     	;# 
   379     0218                     	;# 
   380     0219                     	;# 
   381     021A                     	;# 
   382     021A                     	;# 
   383     021B                     	;# 
   384     021B                     	;# 
   385     021C                     	;# 
   386     021C                     	;# 
   387     021D                     	;# 
   388     021D                     	;# 
   389     021E                     	;# 
   390     021F                     	;# 
   391     028C                     	;# 
   392     028C                     	;# 
   393     028D                     	;# 
   394     028D                     	;# 
   395     028E                     	;# 
   396     028F                     	;# 
   397     0290                     	;# 
   398     0291                     	;# 
   399     0292                     	;# 
   400     0292                     	;# 
   401     0293                     	;# 
   402     0293                     	;# 
   403     0294                     	;# 
   404     0295                     	;# 
   405     0296                     	;# 
   406     0297                     	;# 
   407     0298                     	;# 
   408     0298                     	;# 
   409     0299                     	;# 
   410     0299                     	;# 
   411     029A                     	;# 
   412     029B                     	;# 
   413     029C                     	;# 
   414     029D                     	;# 
   415     029F                     	;# 
   416     030C                     	;# 
   417     030C                     	;# 
   418     030D                     	;# 
   419     030E                     	;# 
   420     030F                     	;# 
   421     0310                     	;# 
   422     0310                     	;# 
   423     0311                     	;# 
   424     0312                     	;# 
   425     0313                     	;# 
   426     0314                     	;# 
   427     0314                     	;# 
   428     0315                     	;# 
   429     0316                     	;# 
   430     0317                     	;# 
   431     0318                     	;# 
   432     0318                     	;# 
   433     0319                     	;# 
   434     031A                     	;# 
   435     031B                     	;# 
   436     031C                     	;# 
   437     031C                     	;# 
   438     031D                     	;# 
   439     031E                     	;# 
   440     031F                     	;# 
   441     038C                     	;# 
   442     038C                     	;# 
   443     038D                     	;# 
   444     038E                     	;# 
   445     0390                     	;# 
   446     0390                     	;# 
   447     0391                     	;# 
   448     0392                     	;# 
   449     048C                     	;# 
   450     048C                     	;# 
   451     048D                     	;# 
   452     048E                     	;# 
   453     048F                     	;# 
   454     048F                     	;# 
   455     0490                     	;# 
   456     0491                     	;# 
   457     0492                     	;# 
   458     0492                     	;# 
   459     0493                     	;# 
   460     0494                     	;# 
   461     0495                     	;# 
   462     0495                     	;# 
   463     0496                     	;# 
   464     0497                     	;# 
   465     0498                     	;# 
   466     0499                     	;# 
   467     049A                     	;# 
   468     049B                     	;# 
   469     049C                     	;# 
   470     049D                     	;# 
   471     050C                     	;# 
   472     050C                     	;# 
   473     050D                     	;# 
   474     050E                     	;# 
   475     050F                     	;# 
   476     050F                     	;# 
   477     0510                     	;# 
   478     0511                     	;# 
   479     0512                     	;# 
   480     0512                     	;# 
   481     0513                     	;# 
   482     0514                     	;# 
   483     0515                     	;# 
   484     0515                     	;# 
   485     0516                     	;# 
   486     0517                     	;# 
   487     0518                     	;# 
   488     0519                     	;# 
   489     051A                     	;# 
   490     051B                     	;# 
   491     051C                     	;# 
   492     051D                     	;# 
   493     058C                     	;# 
   494     058C                     	;# 
   495     058D                     	;# 
   496     058E                     	;# 
   497     058F                     	;# 
   498     058F                     	;# 
   499     0590                     	;# 
   500     0591                     	;# 
   501     0592                     	;# 
   502     0593                     	;# 
   503     059C                     	;# 
   504     059C                     	;# 
   505     059D                     	;# 
   506     059D                     	;# 
   507     059E                     	;# 
   508     059F                     	;# 
   509     060C                     	;# 
   510     060C                     	;# 
   511     060D                     	;# 
   512     060D                     	;# 
   513     060E                     	;# 
   514     060F                     	;# 
   515     0610                     	;# 
   516     0611                     	;# 
   517     0612                     	;# 
   518     0613                     	;# 
   519     0614                     	;# 
   520     0616                     	;# 
   521     0616                     	;# 
   522     0617                     	;# 
   523     0617                     	;# 
   524     0618                     	;# 
   525     0619                     	;# 
   526     061A                     	;# 
   527     061B                     	;# 
   528     061C                     	;# 
   529     061D                     	;# 
   530     061E                     	;# 
   531     068C                     	;# 
   532     068D                     	;# 
   533     068E                     	;# 
   534     068F                     	;# 
   535     0690                     	;# 
   536     0691                     	;# 
   537     0692                     	;# 
   538     0693                     	;# 
   539     0694                     	;# 
   540     070C                     	;# 
   541     070D                     	;# 
   542     070E                     	;# 
   543     070F                     	;# 
   544     0710                     	;# 
   545     0711                     	;# 
   546     0712                     	;# 
   547     0713                     	;# 
   548     0714                     	;# 
   549     0716                     	;# 
   550     0717                     	;# 
   551     0718                     	;# 
   552     0719                     	;# 
   553     071A                     	;# 
   554     071B                     	;# 
   555     071C                     	;# 
   556     071D                     	;# 
   557     071E                     	;# 
   558     0796                     	;# 
   559     0797                     	;# 
   560     0798                     	;# 
   561     0799                     	;# 
   562     079A                     	;# 
   563     079B                     	;# 
   564     079C                     	;# 
   565     079D                     	;# 
   566     080C                     	;# 
   567     080D                     	;# 
   568     080E                     	;# 
   569     080F                     	;# 
   570     0810                     	;# 
   571     0811                     	;# 
   572     0813                     	;# 
   573     0814                     	;# 
   574     081A                     	;# 
   575     081A                     	;# 
   576     081B                     	;# 
   577     081C                     	;# 
   578     081C                     	;# 
   579     081D                     	;# 
   580     081E                     	;# 
   581     081F                     	;# 
   582     088C                     	;# 
   583     088D                     	;# 
   584     088E                     	;# 
   585     088F                     	;# 
   586     0890                     	;# 
   587     0891                     	;# 
   588     0892                     	;# 
   589     0893                     	;# 
   590     0895                     	;# 
   591     0896                     	;# 
   592     0897                     	;# 
   593     0898                     	;# 
   594     0899                     	;# 
   595     089A                     	;# 
   596     089B                     	;# 
   597     090C                     	;# 
   598     090E                     	;# 
   599     090F                     	;# 
   600     091F                     	;# 
   601     098F                     	;# 
   602     098F                     	;# 
   603     0990                     	;# 
   604     0991                     	;# 
   605     0992                     	;# 
   606     0993                     	;# 
   607     0994                     	;# 
   608     0995                     	;# 
   609     0996                     	;# 
   610     0997                     	;# 
   611     0A19                     	;# 
   612     0A19                     	;# 
   613     0A1A                     	;# 
   614     0A1A                     	;# 
   615     0A1B                     	;# 
   616     0A1B                     	;# 
   617     0A1B                     	;# 
   618     0A1C                     	;# 
   619     0A1C                     	;# 
   620     0A1D                     	;# 
   621     0A1D                     	;# 
   622     0A1E                     	;# 
   623     0A1E                     	;# 
   624     0A1F                     	;# 
   625     0A1F                     	;# 
   626     0A1F                     	;# 
   627     1E0F                     	;# 
   628     1E10                     	;# 
   629     1E11                     	;# 
   630     1E12                     	;# 
   631     1E13                     	;# 
   632     1E14                     	;# 
   633     1E15                     	;# 
   634     1E16                     	;# 
   635     1E17                     	;# 
   636     1E18                     	;# 
   637     1E19                     	;# 
   638     1E1A                     	;# 
   639     1E1B                     	;# 
   640     1E1C                     	;# 
   641     1E1D                     	;# 
   642     1E1E                     	;# 
   643     1E1F                     	;# 
   644     1E20                     	;# 
   645     1E21                     	;# 
   646     1E22                     	;# 
   647     1E23                     	;# 
   648     1E24                     	;# 
   649     1E25                     	;# 
   650     1E26                     	;# 
   651     1E27                     	;# 
   652     1E28                     	;# 
   653     1E29                     	;# 
   654     1E2A                     	;# 
   655     1E2B                     	;# 
   656     1E2C                     	;# 
   657     1E2D                     	;# 
   658     1E2E                     	;# 
   659     1E2F                     	;# 
   660     1E30                     	;# 
   661     1E31                     	;# 
   662     1E32                     	;# 
   663     1E33                     	;# 
   664     1E34                     	;# 
   665     1E35                     	;# 
   666     1E36                     	;# 
   667     1E37                     	;# 
   668     1E8F                     	;# 
   669     1E90                     	;# 
   670     1E91                     	;# 
   671     1E92                     	;# 
   672     1E93                     	;# 
   673     1E94                     	;# 
   674     1E95                     	;# 
   675     1E96                     	;# 
   676     1E97                     	;# 
   677     1E9C                     	;# 
   678     1E9D                     	;# 
   679     1E9E                     	;# 
   680     1EA1                     	;# 
   681     1EA2                     	;# 
   682     1EA3                     	;# 
   683     1EA4                     	;# 
   684     1EA5                     	;# 
   685     1EA9                     	;# 
   686     1EAA                     	;# 
   687     1EAB                     	;# 
   688     1EAC                     	;# 
   689     1EB1                     	;# 
   690     1EB2                     	;# 
   691     1EB3                     	;# 
   692     1EB8                     	;# 
   693     1EB9                     	;# 
   694     1EBA                     	;# 
   695     1EBB                     	;# 
   696     1EBC                     	;# 
   697     1EBD                     	;# 
   698     1EBE                     	;# 
   699     1EC3                     	;# 
   700     1EC5                     	;# 
   701     1EC6                     	;# 
   702     1EC7                     	;# 
   703     1EC8                     	;# 
   704     1EC9                     	;# 
   705     1ECA                     	;# 
   706     1ECB                     	;# 
   707     1ECC                     	;# 
   708     1ECD                     	;# 
   709     1ECE                     	;# 
   710     1F10                     	;# 
   711     1F11                     	;# 
   712     1F12                     	;# 
   713     1F13                     	;# 
   714     1F14                     	;# 
   715     1F15                     	;# 
   716     1F16                     	;# 
   717     1F17                     	;# 
   718     1F18                     	;# 
   719     1F19                     	;# 
   720     1F1A                     	;# 
   721     1F1B                     	;# 
   722     1F1C                     	;# 
   723     1F1D                     	;# 
   724     1F1E                     	;# 
   725     1F1F                     	;# 
   726     1F20                     	;# 
   727     1F21                     	;# 
   728     1F22                     	;# 
   729     1F23                     	;# 
   730     1F24                     	;# 
   731     1F25                     	;# 
   732     1F26                     	;# 
   733     1F27                     	;# 
   734     1F38                     	;# 
   735     1F39                     	;# 
   736     1F3A                     	;# 
   737     1F3B                     	;# 
   738     1F3C                     	;# 
   739     1F3D                     	;# 
   740     1F3E                     	;# 
   741     1F3F                     	;# 
   742     1F43                     	;# 
   743     1F44                     	;# 
   744     1F45                     	;# 
   745     1F46                     	;# 
   746     1F47                     	;# 
   747     1F48                     	;# 
   748     1F49                     	;# 
   749     1F4A                     	;# 
   750     1F4E                     	;# 
   751     1F4F                     	;# 
   752     1F50                     	;# 
   753     1F51                     	;# 
   754     1F52                     	;# 
   755     1F53                     	;# 
   756     1F54                     	;# 
   757     1F55                     	;# 
   758     1F65                     	;# 
   759     1F66                     	;# 
   760     1F67                     	;# 
   761     1F68                     	;# 
   762     1F69                     	;# 
   763     1F6A                     	;# 
   764     1F6B                     	;# 
   765     1FE4                     	;# 
   766     1FE5                     	;# 
   767     1FE6                     	;# 
   768     1FE7                     	;# 
   769     1FE8                     	;# 
   770     1FE8                     	;# 
   771     1FE9                     	;# 
   772     1FEA                     	;# 
   773     1FEB                     	;# 
   774     1FED                     	;# 
   775     1FEE                     	;# 
   776     1FEF                     	;# 
   777     0000                     	;# 
   778     0001                     	;# 
   779     0002                     	;# 
   780     0003                     	;# 
   781     0004                     	;# 
   782     0005                     	;# 
   783     0006                     	;# 
   784     0007                     	;# 
   785     0008                     	;# 
   786     0009                     	;# 
   787     000A                     	;# 
   788     000B                     	;# 
   789     000C                     	;# 
   790     000D                     	;# 
   791     000E                     	;# 
   792     0010                     	;# 
   793     0012                     	;# 
   794     0013                     	;# 
   795     0014                     	;# 
   796     0016                     	;# 
   797     0018                     	;# 
   798     0019                     	;# 
   799     001A                     	;# 
   800     001C                     	;# 
   801     008C                     	;# 
   802     008C                     	;# 
   803     008D                     	;# 
   804     008E                     	;# 
   805     008E                     	;# 
   806     008F                     	;# 
   807     0090                     	;# 
   808     0090                     	;# 
   809     0091                     	;# 
   810     0092                     	;# 
   811     0092                     	;# 
   812     0093                     	;# 
   813     0094                     	;# 
   814     0094                     	;# 
   815     0095                     	;# 
   816     0096                     	;# 
   817     0096                     	;# 
   818     0097                     	;# 
   819     0098                     	;# 
   820     0099                     	;# 
   821     009A                     	;# 
   822     009B                     	;# 
   823     009B                     	;# 
   824     009C                     	;# 
   825     009D                     	;# 
   826     009D                     	;# 
   827     009E                     	;# 
   828     009F                     	;# 
   829     010C                     	;# 
   830     010C                     	;# 
   831     010D                     	;# 
   832     010E                     	;# 
   833     010F                     	;# 
   834     010F                     	;# 
   835     0110                     	;# 
   836     0111                     	;# 
   837     0112                     	;# 
   838     0113                     	;# 
   839     0114                     	;# 
   840     0115                     	;# 
   841     0116                     	;# 
   842     0117                     	;# 
   843     0118                     	;# 
   844     0119                     	;# 
   845     0119                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011A                     	;# 
   849     011A                     	;# 
   850     011B                     	;# 
   851     011B                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011C                     	;# 
   856     011C                     	;# 
   857     011C                     	;# 
   858     011D                     	;# 
   859     011D                     	;# 
   860     011D                     	;# 
   861     011E                     	;# 
   862     011E                     	;# 
   863     011E                     	;# 
   864     011F                     	;# 
   865     011F                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     018F                     	;# 
   873     0190                     	;# 
   874     0191                     	;# 
   875     0192                     	;# 
   876     0196                     	;# 
   877     0197                     	;# 
   878     0198                     	;# 
   879     0199                     	;# 
   880     019A                     	;# 
   881     019B                     	;# 
   882     019C                     	;# 
   883     020C                     	;# 
   884     020D                     	;# 
   885     020E                     	;# 
   886     020E                     	;# 
   887     020F                     	;# 
   888     020F                     	;# 
   889     0210                     	;# 
   890     0210                     	;# 
   891     0211                     	;# 
   892     0211                     	;# 
   893     0212                     	;# 
   894     0213                     	;# 
   895     0214                     	;# 
   896     0214                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     0218                     	;# 
   904     0219                     	;# 
   905     021A                     	;# 
   906     021A                     	;# 
   907     021B                     	;# 
   908     021B                     	;# 
   909     021C                     	;# 
   910     021C                     	;# 
   911     021D                     	;# 
   912     021D                     	;# 
   913     021E                     	;# 
   914     021F                     	;# 
   915     028C                     	;# 
   916     028C                     	;# 
   917     028D                     	;# 
   918     028D                     	;# 
   919     028E                     	;# 
   920     028F                     	;# 
   921     0290                     	;# 
   922     0291                     	;# 
   923     0292                     	;# 
   924     0292                     	;# 
   925     0293                     	;# 
   926     0293                     	;# 
   927     0294                     	;# 
   928     0295                     	;# 
   929     0296                     	;# 
   930     0297                     	;# 
   931     0298                     	;# 
   932     0298                     	;# 
   933     0299                     	;# 
   934     0299                     	;# 
   935     029A                     	;# 
   936     029B                     	;# 
   937     029C                     	;# 
   938     029D                     	;# 
   939     029F                     	;# 
   940     030C                     	;# 
   941     030C                     	;# 
   942     030D                     	;# 
   943     030E                     	;# 
   944     030F                     	;# 
   945     0310                     	;# 
   946     0310                     	;# 
   947     0311                     	;# 
   948     0312                     	;# 
   949     0313                     	;# 
   950     0314                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0316                     	;# 
   954     0317                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031B                     	;# 
   960     031C                     	;# 
   961     031C                     	;# 
   962     031D                     	;# 
   963     031E                     	;# 
   964     031F                     	;# 
   965     038C                     	;# 
   966     038C                     	;# 
   967     038D                     	;# 
   968     038E                     	;# 
   969     0390                     	;# 
   970     0390                     	;# 
   971     0391                     	;# 
   972     0392                     	;# 
   973     048C                     	;# 
   974     048C                     	;# 
   975     048D                     	;# 
   976     048E                     	;# 
   977     048F                     	;# 
   978     048F                     	;# 
   979     0490                     	;# 
   980     0491                     	;# 
   981     0492                     	;# 
   982     0492                     	;# 
   983     0493                     	;# 
   984     0494                     	;# 
   985     0495                     	;# 
   986     0495                     	;# 
   987     0496                     	;# 
   988     0497                     	;# 
   989     0498                     	;# 
   990     0499                     	;# 
   991     049A                     	;# 
   992     049B                     	;# 
   993     049C                     	;# 
   994     049D                     	;# 
   995     050C                     	;# 
   996     050C                     	;# 
   997     050D                     	;# 
   998     050E                     	;# 
   999     050F                     	;# 
  1000     050F                     	;# 
  1001     0510                     	;# 
  1002     0511                     	;# 
  1003     0512                     	;# 
  1004     0512                     	;# 
  1005     0513                     	;# 
  1006     0514                     	;# 
  1007     0515                     	;# 
  1008     0515                     	;# 
  1009     0516                     	;# 
  1010     0517                     	;# 
  1011     0518                     	;# 
  1012     0519                     	;# 
  1013     051A                     	;# 
  1014     051B                     	;# 
  1015     051C                     	;# 
  1016     051D                     	;# 
  1017     058C                     	;# 
  1018     058C                     	;# 
  1019     058D                     	;# 
  1020     058E                     	;# 
  1021     058F                     	;# 
  1022     058F                     	;# 
  1023     0590                     	;# 
  1024     0591                     	;# 
  1025     0592                     	;# 
  1026     0593                     	;# 
  1027     059C                     	;# 
  1028     059C                     	;# 
  1029     059D                     	;# 
  1030     059D                     	;# 
  1031     059E                     	;# 
  1032     059F                     	;# 
  1033     060C                     	;# 
  1034     060C                     	;# 
  1035     060D                     	;# 
  1036     060D                     	;# 
  1037     060E                     	;# 
  1038     060F                     	;# 
  1039     0610                     	;# 
  1040     0611                     	;# 
  1041     0612                     	;# 
  1042     0613                     	;# 
  1043     0614                     	;# 
  1044     0616                     	;# 
  1045     0616                     	;# 
  1046     0617                     	;# 
  1047     0617                     	;# 
  1048     0618                     	;# 
  1049     0619                     	;# 
  1050     061A                     	;# 
  1051     061B                     	;# 
  1052     061C                     	;# 
  1053     061D                     	;# 
  1054     061E                     	;# 
  1055     068C                     	;# 
  1056     068D                     	;# 
  1057     068E                     	;# 
  1058     068F                     	;# 
  1059     0690                     	;# 
  1060     0691                     	;# 
  1061     0692                     	;# 
  1062     0693                     	;# 
  1063     0694                     	;# 
  1064     070C                     	;# 
  1065     070D                     	;# 
  1066     070E                     	;# 
  1067     070F                     	;# 
  1068     0710                     	;# 
  1069     0711                     	;# 
  1070     0712                     	;# 
  1071     0713                     	;# 
  1072     0714                     	;# 
  1073     0716                     	;# 
  1074     0717                     	;# 
  1075     0718                     	;# 
  1076     0719                     	;# 
  1077     071A                     	;# 
  1078     071B                     	;# 
  1079     071C                     	;# 
  1080     071D                     	;# 
  1081     071E                     	;# 
  1082     0796                     	;# 
  1083     0797                     	;# 
  1084     0798                     	;# 
  1085     0799                     	;# 
  1086     079A                     	;# 
  1087     079B                     	;# 
  1088     079C                     	;# 
  1089     079D                     	;# 
  1090     080C                     	;# 
  1091     080D                     	;# 
  1092     080E                     	;# 
  1093     080F                     	;# 
  1094     0810                     	;# 
  1095     0811                     	;# 
  1096     0813                     	;# 
  1097     0814                     	;# 
  1098     081A                     	;# 
  1099     081A                     	;# 
  1100     081B                     	;# 
  1101     081C                     	;# 
  1102     081C                     	;# 
  1103     081D                     	;# 
  1104     081E                     	;# 
  1105     081F                     	;# 
  1106     088C                     	;# 
  1107     088D                     	;# 
  1108     088E                     	;# 
  1109     088F                     	;# 
  1110     0890                     	;# 
  1111     0891                     	;# 
  1112     0892                     	;# 
  1113     0893                     	;# 
  1114     0895                     	;# 
  1115     0896                     	;# 
  1116     0897                     	;# 
  1117     0898                     	;# 
  1118     0899                     	;# 
  1119     089A                     	;# 
  1120     089B                     	;# 
  1121     090C                     	;# 
  1122     090E                     	;# 
  1123     090F                     	;# 
  1124     091F                     	;# 
  1125     098F                     	;# 
  1126     098F                     	;# 
  1127     0990                     	;# 
  1128     0991                     	;# 
  1129     0992                     	;# 
  1130     0993                     	;# 
  1131     0994                     	;# 
  1132     0995                     	;# 
  1133     0996                     	;# 
  1134     0997                     	;# 
  1135     0A19                     	;# 
  1136     0A19                     	;# 
  1137     0A1A                     	;# 
  1138     0A1A                     	;# 
  1139     0A1B                     	;# 
  1140     0A1B                     	;# 
  1141     0A1B                     	;# 
  1142     0A1C                     	;# 
  1143     0A1C                     	;# 
  1144     0A1D                     	;# 
  1145     0A1D                     	;# 
  1146     0A1E                     	;# 
  1147     0A1E                     	;# 
  1148     0A1F                     	;# 
  1149     0A1F                     	;# 
  1150     0A1F                     	;# 
  1151     1E0F                     	;# 
  1152     1E10                     	;# 
  1153     1E11                     	;# 
  1154     1E12                     	;# 
  1155     1E13                     	;# 
  1156     1E14                     	;# 
  1157     1E15                     	;# 
  1158     1E16                     	;# 
  1159     1E17                     	;# 
  1160     1E18                     	;# 
  1161     1E19                     	;# 
  1162     1E1A                     	;# 
  1163     1E1B                     	;# 
  1164     1E1C                     	;# 
  1165     1E1D                     	;# 
  1166     1E1E                     	;# 
  1167     1E1F                     	;# 
  1168     1E20                     	;# 
  1169     1E21                     	;# 
  1170     1E22                     	;# 
  1171     1E23                     	;# 
  1172     1E24                     	;# 
  1173     1E25                     	;# 
  1174     1E26                     	;# 
  1175     1E27                     	;# 
  1176     1E28                     	;# 
  1177     1E29                     	;# 
  1178     1E2A                     	;# 
  1179     1E2B                     	;# 
  1180     1E2C                     	;# 
  1181     1E2D                     	;# 
  1182     1E2E                     	;# 
  1183     1E2F                     	;# 
  1184     1E30                     	;# 
  1185     1E31                     	;# 
  1186     1E32                     	;# 
  1187     1E33                     	;# 
  1188     1E34                     	;# 
  1189     1E35                     	;# 
  1190     1E36                     	;# 
  1191     1E37                     	;# 
  1192     1E8F                     	;# 
  1193     1E90                     	;# 
  1194     1E91                     	;# 
  1195     1E92                     	;# 
  1196     1E93                     	;# 
  1197     1E94                     	;# 
  1198     1E95                     	;# 
  1199     1E96                     	;# 
  1200     1E97                     	;# 
  1201     1E9C                     	;# 
  1202     1E9D                     	;# 
  1203     1E9E                     	;# 
  1204     1EA1                     	;# 
  1205     1EA2                     	;# 
  1206     1EA3                     	;# 
  1207     1EA4                     	;# 
  1208     1EA5                     	;# 
  1209     1EA9                     	;# 
  1210     1EAA                     	;# 
  1211     1EAB                     	;# 
  1212     1EAC                     	;# 
  1213     1EB1                     	;# 
  1214     1EB2                     	;# 
  1215     1EB3                     	;# 
  1216     1EB8                     	;# 
  1217     1EB9                     	;# 
  1218     1EBA                     	;# 
  1219     1EBB                     	;# 
  1220     1EBC                     	;# 
  1221     1EBD                     	;# 
  1222     1EBE                     	;# 
  1223     1EC3                     	;# 
  1224     1EC5                     	;# 
  1225     1EC6                     	;# 
  1226     1EC7                     	;# 
  1227     1EC8                     	;# 
  1228     1EC9                     	;# 
  1229     1ECA                     	;# 
  1230     1ECB                     	;# 
  1231     1ECC                     	;# 
  1232     1ECD                     	;# 
  1233     1ECE                     	;# 
  1234     1F10                     	;# 
  1235     1F11                     	;# 
  1236     1F12                     	;# 
  1237     1F13                     	;# 
  1238     1F14                     	;# 
  1239     1F15                     	;# 
  1240     1F16                     	;# 
  1241     1F17                     	;# 
  1242     1F18                     	;# 
  1243     1F19                     	;# 
  1244     1F1A                     	;# 
  1245     1F1B                     	;# 
  1246     1F1C                     	;# 
  1247     1F1D                     	;# 
  1248     1F1E                     	;# 
  1249     1F1F                     	;# 
  1250     1F20                     	;# 
  1251     1F21                     	;# 
  1252     1F22                     	;# 
  1253     1F23                     	;# 
  1254     1F24                     	;# 
  1255     1F25                     	;# 
  1256     1F26                     	;# 
  1257     1F27                     	;# 
  1258     1F38                     	;# 
  1259     1F39                     	;# 
  1260     1F3A                     	;# 
  1261     1F3B                     	;# 
  1262     1F3C                     	;# 
  1263     1F3D                     	;# 
  1264     1F3E                     	;# 
  1265     1F3F                     	;# 
  1266     1F43                     	;# 
  1267     1F44                     	;# 
  1268     1F45                     	;# 
  1269     1F46                     	;# 
  1270     1F47                     	;# 
  1271     1F48                     	;# 
  1272     1F49                     	;# 
  1273     1F4A                     	;# 
  1274     1F4E                     	;# 
  1275     1F4F                     	;# 
  1276     1F50                     	;# 
  1277     1F51                     	;# 
  1278     1F52                     	;# 
  1279     1F53                     	;# 
  1280     1F54                     	;# 
  1281     1F55                     	;# 
  1282     1F65                     	;# 
  1283     1F66                     	;# 
  1284     1F67                     	;# 
  1285     1F68                     	;# 
  1286     1F69                     	;# 
  1287     1F6A                     	;# 
  1288     1F6B                     	;# 
  1289     1FE4                     	;# 
  1290     1FE5                     	;# 
  1291     1FE6                     	;# 
  1292     1FE7                     	;# 
  1293     1FE8                     	;# 
  1294     1FE8                     	;# 
  1295     1FE9                     	;# 
  1296     1FEA                     	;# 
  1297     1FEB                     	;# 
  1298     1FED                     	;# 
  1299     1FEE                     	;# 
  1300     1FEF                     	;# 
  1301     0000                     	;# 
  1302     0001                     	;# 
  1303     0002                     	;# 
  1304     0003                     	;# 
  1305     0004                     	;# 
  1306     0005                     	;# 
  1307     0006                     	;# 
  1308     0007                     	;# 
  1309     0008                     	;# 
  1310     0009                     	;# 
  1311     000A                     	;# 
  1312     000B                     	;# 
  1313     000C                     	;# 
  1314     000D                     	;# 
  1315     000E                     	;# 
  1316     0010                     	;# 
  1317     0012                     	;# 
  1318     0013                     	;# 
  1319     0014                     	;# 
  1320     0016                     	;# 
  1321     0018                     	;# 
  1322     0019                     	;# 
  1323     001A                     	;# 
  1324     001C                     	;# 
  1325     008C                     	;# 
  1326     008C                     	;# 
  1327     008D                     	;# 
  1328     008E                     	;# 
  1329     008E                     	;# 
  1330     008F                     	;# 
  1331     0090                     	;# 
  1332     0090                     	;# 
  1333     0091                     	;# 
  1334     0092                     	;# 
  1335     0092                     	;# 
  1336     0093                     	;# 
  1337     0094                     	;# 
  1338     0094                     	;# 
  1339     0095                     	;# 
  1340     0096                     	;# 
  1341     0096                     	;# 
  1342     0097                     	;# 
  1343     0098                     	;# 
  1344     0099                     	;# 
  1345     009A                     	;# 
  1346     009B                     	;# 
  1347     009B                     	;# 
  1348     009C                     	;# 
  1349     009D                     	;# 
  1350     009D                     	;# 
  1351     009E                     	;# 
  1352     009F                     	;# 
  1353     010C                     	;# 
  1354     010C                     	;# 
  1355     010D                     	;# 
  1356     010E                     	;# 
  1357     010F                     	;# 
  1358     010F                     	;# 
  1359     0110                     	;# 
  1360     0111                     	;# 
  1361     0112                     	;# 
  1362     0113                     	;# 
  1363     0114                     	;# 
  1364     0115                     	;# 
  1365     0116                     	;# 
  1366     0117                     	;# 
  1367     0118                     	;# 
  1368     0119                     	;# 
  1369     0119                     	;# 
  1370     0119                     	;# 
  1371     011A                     	;# 
  1372     011A                     	;# 
  1373     011A                     	;# 
  1374     011B                     	;# 
  1375     011B                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011C                     	;# 
  1380     011C                     	;# 
  1381     011C                     	;# 
  1382     011D                     	;# 
  1383     011D                     	;# 
  1384     011D                     	;# 
  1385     011E                     	;# 
  1386     011E                     	;# 
  1387     011E                     	;# 
  1388     011F                     	;# 
  1389     011F                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     018C                     	;# 
  1394     018D                     	;# 
  1395     018E                     	;# 
  1396     018F                     	;# 
  1397     0190                     	;# 
  1398     0191                     	;# 
  1399     0192                     	;# 
  1400     0196                     	;# 
  1401     0197                     	;# 
  1402     0198                     	;# 
  1403     0199                     	;# 
  1404     019A                     	;# 
  1405     019B                     	;# 
  1406     019C                     	;# 
  1407     020C                     	;# 
  1408     020D                     	;# 
  1409     020E                     	;# 
  1410     020E                     	;# 
  1411     020F                     	;# 
  1412     020F                     	;# 
  1413     0210                     	;# 
  1414     0210                     	;# 
  1415     0211                     	;# 
  1416     0211                     	;# 
  1417     0212                     	;# 
  1418     0213                     	;# 
  1419     0214                     	;# 
  1420     0214                     	;# 
  1421     0215                     	;# 
  1422     0215                     	;# 
  1423     0216                     	;# 
  1424     0216                     	;# 
  1425     0217                     	;# 
  1426     0217                     	;# 
  1427     0218                     	;# 
  1428     0219                     	;# 
  1429     021A                     	;# 
  1430     021A                     	;# 
  1431     021B                     	;# 
  1432     021B                     	;# 
  1433     021C                     	;# 
  1434     021C                     	;# 
  1435     021D                     	;# 
  1436     021D                     	;# 
  1437     021E                     	;# 
  1438     021F                     	;# 
  1439     028C                     	;# 
  1440     028C                     	;# 
  1441     028D                     	;# 
  1442     028D                     	;# 
  1443     028E                     	;# 
  1444     028F                     	;# 
  1445     0290                     	;# 
  1446     0291                     	;# 
  1447     0292                     	;# 
  1448     0292                     	;# 
  1449     0293                     	;# 
  1450     0293                     	;# 
  1451     0294                     	;# 
  1452     0295                     	;# 
  1453     0296                     	;# 
  1454     0297                     	;# 
  1455     0298                     	;# 
  1456     0298                     	;# 
  1457     0299                     	;# 
  1458     0299                     	;# 
  1459     029A                     	;# 
  1460     029B                     	;# 
  1461     029C                     	;# 
  1462     029D                     	;# 
  1463     029F                     	;# 
  1464     030C                     	;# 
  1465     030C                     	;# 
  1466     030D                     	;# 
  1467     030E                     	;# 
  1468     030F                     	;# 
  1469     0310                     	;# 
  1470     0310                     	;# 
  1471     0311                     	;# 
  1472     0312                     	;# 
  1473     0313                     	;# 
  1474     0314                     	;# 
  1475     0314                     	;# 
  1476     0315                     	;# 
  1477     0316                     	;# 
  1478     0317                     	;# 
  1479     0318                     	;# 
  1480     0318                     	;# 
  1481     0319                     	;# 
  1482     031A                     	;# 
  1483     031B                     	;# 
  1484     031C                     	;# 
  1485     031C                     	;# 
  1486     031D                     	;# 
  1487     031E                     	;# 
  1488     031F                     	;# 
  1489     038C                     	;# 
  1490     038C                     	;# 
  1491     038D                     	;# 
  1492     038E                     	;# 
  1493     0390                     	;# 
  1494     0390                     	;# 
  1495     0391                     	;# 
  1496     0392                     	;# 
  1497     048C                     	;# 
  1498     048C                     	;# 
  1499     048D                     	;# 
  1500     048E                     	;# 
  1501     048F                     	;# 
  1502     048F                     	;# 
  1503     0490                     	;# 
  1504     0491                     	;# 
  1505     0492                     	;# 
  1506     0492                     	;# 
  1507     0493                     	;# 
  1508     0494                     	;# 
  1509     0495                     	;# 
  1510     0495                     	;# 
  1511     0496                     	;# 
  1512     0497                     	;# 
  1513     0498                     	;# 
  1514     0499                     	;# 
  1515     049A                     	;# 
  1516     049B                     	;# 
  1517     049C                     	;# 
  1518     049D                     	;# 
  1519     050C                     	;# 
  1520     050C                     	;# 
  1521     050D                     	;# 
  1522     050E                     	;# 
  1523     050F                     	;# 
  1524     050F                     	;# 
  1525     0510                     	;# 
  1526     0511                     	;# 
  1527     0512                     	;# 
  1528     0512                     	;# 
  1529     0513                     	;# 
  1530     0514                     	;# 
  1531     0515                     	;# 
  1532     0515                     	;# 
  1533     0516                     	;# 
  1534     0517                     	;# 
  1535     0518                     	;# 
  1536     0519                     	;# 
  1537     051A                     	;# 
  1538     051B                     	;# 
  1539     051C                     	;# 
  1540     051D                     	;# 
  1541     058C                     	;# 
  1542     058C                     	;# 
  1543     058D                     	;# 
  1544     058E                     	;# 
  1545     058F                     	;# 
  1546     058F                     	;# 
  1547     0590                     	;# 
  1548     0591                     	;# 
  1549     0592                     	;# 
  1550     0593                     	;# 
  1551     059C                     	;# 
  1552     059C                     	;# 
  1553     059D                     	;# 
  1554     059D                     	;# 
  1555     059E                     	;# 
  1556     059F                     	;# 
  1557     060C                     	;# 
  1558     060C                     	;# 
  1559     060D                     	;# 
  1560     060D                     	;# 
  1561     060E                     	;# 
  1562     060F                     	;# 
  1563     0610                     	;# 
  1564     0611                     	;# 
  1565     0612                     	;# 
  1566     0613                     	;# 
  1567     0614                     	;# 
  1568     0616                     	;# 
  1569     0616                     	;# 
  1570     0617                     	;# 
  1571     0617                     	;# 
  1572     0618                     	;# 
  1573     0619                     	;# 
  1574     061A                     	;# 
  1575     061B                     	;# 
  1576     061C                     	;# 
  1577     061D                     	;# 
  1578     061E                     	;# 
  1579     068C                     	;# 
  1580     068D                     	;# 
  1581     068E                     	;# 
  1582     068F                     	;# 
  1583     0690                     	;# 
  1584     0691                     	;# 
  1585     0692                     	;# 
  1586     0693                     	;# 
  1587     0694                     	;# 
  1588     070C                     	;# 
  1589     070D                     	;# 
  1590     070E                     	;# 
  1591     070F                     	;# 
  1592     0710                     	;# 
  1593     0711                     	;# 
  1594     0712                     	;# 
  1595     0713                     	;# 
  1596     0714                     	;# 
  1597     0716                     	;# 
  1598     0717                     	;# 
  1599     0718                     	;# 
  1600     0719                     	;# 
  1601     071A                     	;# 
  1602     071B                     	;# 
  1603     071C                     	;# 
  1604     071D                     	;# 
  1605     071E                     	;# 
  1606     0796                     	;# 
  1607     0797                     	;# 
  1608     0798                     	;# 
  1609     0799                     	;# 
  1610     079A                     	;# 
  1611     079B                     	;# 
  1612     079C                     	;# 
  1613     079D                     	;# 
  1614     080C                     	;# 
  1615     080D                     	;# 
  1616     080E                     	;# 
  1617     080F                     	;# 
  1618     0810                     	;# 
  1619     0811                     	;# 
  1620     0813                     	;# 
  1621     0814                     	;# 
  1622     081A                     	;# 
  1623     081A                     	;# 
  1624     081B                     	;# 
  1625     081C                     	;# 
  1626     081C                     	;# 
  1627     081D                     	;# 
  1628     081E                     	;# 
  1629     081F                     	;# 
  1630     088C                     	;# 
  1631     088D                     	;# 
  1632     088E                     	;# 
  1633     088F                     	;# 
  1634     0890                     	;# 
  1635     0891                     	;# 
  1636     0892                     	;# 
  1637     0893                     	;# 
  1638     0895                     	;# 
  1639     0896                     	;# 
  1640     0897                     	;# 
  1641     0898                     	;# 
  1642     0899                     	;# 
  1643     089A                     	;# 
  1644     089B                     	;# 
  1645     090C                     	;# 
  1646     090E                     	;# 
  1647     090F                     	;# 
  1648     091F                     	;# 
  1649     098F                     	;# 
  1650     098F                     	;# 
  1651     0990                     	;# 
  1652     0991                     	;# 
  1653     0992                     	;# 
  1654     0993                     	;# 
  1655     0994                     	;# 
  1656     0995                     	;# 
  1657     0996                     	;# 
  1658     0997                     	;# 
  1659     0A19                     	;# 
  1660     0A19                     	;# 
  1661     0A1A                     	;# 
  1662     0A1A                     	;# 
  1663     0A1B                     	;# 
  1664     0A1B                     	;# 
  1665     0A1B                     	;# 
  1666     0A1C                     	;# 
  1667     0A1C                     	;# 
  1668     0A1D                     	;# 
  1669     0A1D                     	;# 
  1670     0A1E                     	;# 
  1671     0A1E                     	;# 
  1672     0A1F                     	;# 
  1673     0A1F                     	;# 
  1674     0A1F                     	;# 
  1675     1E0F                     	;# 
  1676     1E10                     	;# 
  1677     1E11                     	;# 
  1678     1E12                     	;# 
  1679     1E13                     	;# 
  1680     1E14                     	;# 
  1681     1E15                     	;# 
  1682     1E16                     	;# 
  1683     1E17                     	;# 
  1684     1E18                     	;# 
  1685     1E19                     	;# 
  1686     1E1A                     	;# 
  1687     1E1B                     	;# 
  1688     1E1C                     	;# 
  1689     1E1D                     	;# 
  1690     1E1E                     	;# 
  1691     1E1F                     	;# 
  1692     1E20                     	;# 
  1693     1E21                     	;# 
  1694     1E22                     	;# 
  1695     1E23                     	;# 
  1696     1E24                     	;# 
  1697     1E25                     	;# 
  1698     1E26                     	;# 
  1699     1E27                     	;# 
  1700     1E28                     	;# 
  1701     1E29                     	;# 
  1702     1E2A                     	;# 
  1703     1E2B                     	;# 
  1704     1E2C                     	;# 
  1705     1E2D                     	;# 
  1706     1E2E                     	;# 
  1707     1E2F                     	;# 
  1708     1E30                     	;# 
  1709     1E31                     	;# 
  1710     1E32                     	;# 
  1711     1E33                     	;# 
  1712     1E34                     	;# 
  1713     1E35                     	;# 
  1714     1E36                     	;# 
  1715     1E37                     	;# 
  1716     1E8F                     	;# 
  1717     1E90                     	;# 
  1718     1E91                     	;# 
  1719     1E92                     	;# 
  1720     1E93                     	;# 
  1721     1E94                     	;# 
  1722     1E95                     	;# 
  1723     1E96                     	;# 
  1724     1E97                     	;# 
  1725     1E9C                     	;# 
  1726     1E9D                     	;# 
  1727     1E9E                     	;# 
  1728     1EA1                     	;# 
  1729     1EA2                     	;# 
  1730     1EA3                     	;# 
  1731     1EA4                     	;# 
  1732     1EA5                     	;# 
  1733     1EA9                     	;# 
  1734     1EAA                     	;# 
  1735     1EAB                     	;# 
  1736     1EAC                     	;# 
  1737     1EB1                     	;# 
  1738     1EB2                     	;# 
  1739     1EB3                     	;# 
  1740     1EB8                     	;# 
  1741     1EB9                     	;# 
  1742     1EBA                     	;# 
  1743     1EBB                     	;# 
  1744     1EBC                     	;# 
  1745     1EBD                     	;# 
  1746     1EBE                     	;# 
  1747     1EC3                     	;# 
  1748     1EC5                     	;# 
  1749     1EC6                     	;# 
  1750     1EC7                     	;# 
  1751     1EC8                     	;# 
  1752     1EC9                     	;# 
  1753     1ECA                     	;# 
  1754     1ECB                     	;# 
  1755     1ECC                     	;# 
  1756     1ECD                     	;# 
  1757     1ECE                     	;# 
  1758     1F10                     	;# 
  1759     1F11                     	;# 
  1760     1F12                     	;# 
  1761     1F13                     	;# 
  1762     1F14                     	;# 
  1763     1F15                     	;# 
  1764     1F16                     	;# 
  1765     1F17                     	;# 
  1766     1F18                     	;# 
  1767     1F19                     	;# 
  1768     1F1A                     	;# 
  1769     1F1B                     	;# 
  1770     1F1C                     	;# 
  1771     1F1D                     	;# 
  1772     1F1E                     	;# 
  1773     1F1F                     	;# 
  1774     1F20                     	;# 
  1775     1F21                     	;# 
  1776     1F22                     	;# 
  1777     1F23                     	;# 
  1778     1F24                     	;# 
  1779     1F25                     	;# 
  1780     1F26                     	;# 
  1781     1F27                     	;# 
  1782     1F38                     	;# 
  1783     1F39                     	;# 
  1784     1F3A                     	;# 
  1785     1F3B                     	;# 
  1786     1F3C                     	;# 
  1787     1F3D                     	;# 
  1788     1F3E                     	;# 
  1789     1F3F                     	;# 
  1790     1F43                     	;# 
  1791     1F44                     	;# 
  1792     1F45                     	;# 
  1793     1F46                     	;# 
  1794     1F47                     	;# 
  1795     1F48                     	;# 
  1796     1F49                     	;# 
  1797     1F4A                     	;# 
  1798     1F4E                     	;# 
  1799     1F4F                     	;# 
  1800     1F50                     	;# 
  1801     1F51                     	;# 
  1802     1F52                     	;# 
  1803     1F53                     	;# 
  1804     1F54                     	;# 
  1805     1F55                     	;# 
  1806     1F65                     	;# 
  1807     1F66                     	;# 
  1808     1F67                     	;# 
  1809     1F68                     	;# 
  1810     1F69                     	;# 
  1811     1F6A                     	;# 
  1812     1F6B                     	;# 
  1813     1FE4                     	;# 
  1814     1FE5                     	;# 
  1815     1FE6                     	;# 
  1816     1FE7                     	;# 
  1817     1FE8                     	;# 
  1818     1FE8                     	;# 
  1819     1FE9                     	;# 
  1820     1FEA                     	;# 
  1821     1FEB                     	;# 
  1822     1FED                     	;# 
  1823     1FEE                     	;# 
  1824     1FEF                     	;# 
  1825     0000                     	;# 
  1826     0001                     	;# 
  1827     0002                     	;# 
  1828     0003                     	;# 
  1829     0004                     	;# 
  1830     0005                     	;# 
  1831     0006                     	;# 
  1832     0007                     	;# 
  1833     0008                     	;# 
  1834     0009                     	;# 
  1835     000A                     	;# 
  1836     000B                     	;# 
  1837     000C                     	;# 
  1838     000D                     	;# 
  1839     000E                     	;# 
  1840     0010                     	;# 
  1841     0012                     	;# 
  1842     0013                     	;# 
  1843     0014                     	;# 
  1844     0016                     	;# 
  1845     0018                     	;# 
  1846     0019                     	;# 
  1847     001A                     	;# 
  1848     001C                     	;# 
  1849     008C                     	;# 
  1850     008C                     	;# 
  1851     008D                     	;# 
  1852     008E                     	;# 
  1853     008E                     	;# 
  1854     008F                     	;# 
  1855     0090                     	;# 
  1856     0090                     	;# 
  1857     0091                     	;# 
  1858     0092                     	;# 
  1859     0092                     	;# 
  1860     0093                     	;# 
  1861     0094                     	;# 
  1862     0094                     	;# 
  1863     0095                     	;# 
  1864     0096                     	;# 
  1865     0096                     	;# 
  1866     0097                     	;# 
  1867     0098                     	;# 
  1868     0099                     	;# 
  1869     009A                     	;# 
  1870     009B                     	;# 
  1871     009B                     	;# 
  1872     009C                     	;# 
  1873     009D                     	;# 
  1874     009D                     	;# 
  1875     009E                     	;# 
  1876     009F                     	;# 
  1877     010C                     	;# 
  1878     010C                     	;# 
  1879     010D                     	;# 
  1880     010E                     	;# 
  1881     010F                     	;# 
  1882     010F                     	;# 
  1883     0110                     	;# 
  1884     0111                     	;# 
  1885     0112                     	;# 
  1886     0113                     	;# 
  1887     0114                     	;# 
  1888     0115                     	;# 
  1889     0116                     	;# 
  1890     0117                     	;# 
  1891     0118                     	;# 
  1892     0119                     	;# 
  1893     0119                     	;# 
  1894     0119                     	;# 
  1895     011A                     	;# 
  1896     011A                     	;# 
  1897     011A                     	;# 
  1898     011B                     	;# 
  1899     011B                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011C                     	;# 
  1904     011C                     	;# 
  1905     011C                     	;# 
  1906     011D                     	;# 
  1907     011D                     	;# 
  1908     011D                     	;# 
  1909     011E                     	;# 
  1910     011E                     	;# 
  1911     011E                     	;# 
  1912     011F                     	;# 
  1913     011F                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     018C                     	;# 
  1918     018D                     	;# 
  1919     018E                     	;# 
  1920     018F                     	;# 
  1921     0190                     	;# 
  1922     0191                     	;# 
  1923     0192                     	;# 
  1924     0196                     	;# 
  1925     0197                     	;# 
  1926     0198                     	;# 
  1927     0199                     	;# 
  1928     019A                     	;# 
  1929     019B                     	;# 
  1930     019C                     	;# 
  1931     020C                     	;# 
  1932     020D                     	;# 
  1933     020E                     	;# 
  1934     020E                     	;# 
  1935     020F                     	;# 
  1936     020F                     	;# 
  1937     0210                     	;# 
  1938     0210                     	;# 
  1939     0211                     	;# 
  1940     0211                     	;# 
  1941     0212                     	;# 
  1942     0213                     	;# 
  1943     0214                     	;# 
  1944     0214                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0218                     	;# 
  1952     0219                     	;# 
  1953     021A                     	;# 
  1954     021A                     	;# 
  1955     021B                     	;# 
  1956     021B                     	;# 
  1957     021C                     	;# 
  1958     021C                     	;# 
  1959     021D                     	;# 
  1960     021D                     	;# 
  1961     021E                     	;# 
  1962     021F                     	;# 
  1963     028C                     	;# 
  1964     028C                     	;# 
  1965     028D                     	;# 
  1966     028D                     	;# 
  1967     028E                     	;# 
  1968     028F                     	;# 
  1969     0290                     	;# 
  1970     0291                     	;# 
  1971     0292                     	;# 
  1972     0292                     	;# 
  1973     0293                     	;# 
  1974     0293                     	;# 
  1975     0294                     	;# 
  1976     0295                     	;# 
  1977     0296                     	;# 
  1978     0297                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     0299                     	;# 
  1983     029A                     	;# 
  1984     029B                     	;# 
  1985     029C                     	;# 
  1986     029D                     	;# 
  1987     029F                     	;# 
  1988     030C                     	;# 
  1989     030C                     	;# 
  1990     030D                     	;# 
  1991     030E                     	;# 
  1992     030F                     	;# 
  1993     0310                     	;# 
  1994     0310                     	;# 
  1995     0311                     	;# 
  1996     0312                     	;# 
  1997     0313                     	;# 
  1998     0314                     	;# 
  1999     0314                     	;# 
  2000     0315                     	;# 
  2001     0316                     	;# 
  2002     0317                     	;# 
  2003     0318                     	;# 
  2004     0318                     	;# 
  2005     0319                     	;# 
  2006     031A                     	;# 
  2007     031B                     	;# 
  2008     031C                     	;# 
  2009     031C                     	;# 
  2010     031D                     	;# 
  2011     031E                     	;# 
  2012     031F                     	;# 
  2013     038C                     	;# 
  2014     038C                     	;# 
  2015     038D                     	;# 
  2016     038E                     	;# 
  2017     0390                     	;# 
  2018     0390                     	;# 
  2019     0391                     	;# 
  2020     0392                     	;# 
  2021     048C                     	;# 
  2022     048C                     	;# 
  2023     048D                     	;# 
  2024     048E                     	;# 
  2025     048F                     	;# 
  2026     048F                     	;# 
  2027     0490                     	;# 
  2028     0491                     	;# 
  2029     0492                     	;# 
  2030     0492                     	;# 
  2031     0493                     	;# 
  2032     0494                     	;# 
  2033     0495                     	;# 
  2034     0495                     	;# 
  2035     0496                     	;# 
  2036     0497                     	;# 
  2037     0498                     	;# 
  2038     0499                     	;# 
  2039     049A                     	;# 
  2040     049B                     	;# 
  2041     049C                     	;# 
  2042     049D                     	;# 
  2043     050C                     	;# 
  2044     050C                     	;# 
  2045     050D                     	;# 
  2046     050E                     	;# 
  2047     050F                     	;# 
  2048     050F                     	;# 
  2049     0510                     	;# 
  2050     0511                     	;# 
  2051     0512                     	;# 
  2052     0512                     	;# 
  2053     0513                     	;# 
  2054     0514                     	;# 
  2055     0515                     	;# 
  2056     0515                     	;# 
  2057     0516                     	;# 
  2058     0517                     	;# 
  2059     0518                     	;# 
  2060     0519                     	;# 
  2061     051A                     	;# 
  2062     051B                     	;# 
  2063     051C                     	;# 
  2064     051D                     	;# 
  2065     058C                     	;# 
  2066     058C                     	;# 
  2067     058D                     	;# 
  2068     058E                     	;# 
  2069     058F                     	;# 
  2070     058F                     	;# 
  2071     0590                     	;# 
  2072     0591                     	;# 
  2073     0592                     	;# 
  2074     0593                     	;# 
  2075     059C                     	;# 
  2076     059C                     	;# 
  2077     059D                     	;# 
  2078     059D                     	;# 
  2079     059E                     	;# 
  2080     059F                     	;# 
  2081     060C                     	;# 
  2082     060C                     	;# 
  2083     060D                     	;# 
  2084     060D                     	;# 
  2085     060E                     	;# 
  2086     060F                     	;# 
  2087     0610                     	;# 
  2088     0611                     	;# 
  2089     0612                     	;# 
  2090     0613                     	;# 
  2091     0614                     	;# 
  2092     0616                     	;# 
  2093     0616                     	;# 
  2094     0617                     	;# 
  2095     0617                     	;# 
  2096     0618                     	;# 
  2097     0619                     	;# 
  2098     061A                     	;# 
  2099     061B                     	;# 
  2100     061C                     	;# 
  2101     061D                     	;# 
  2102     061E                     	;# 
  2103     068C                     	;# 
  2104     068D                     	;# 
  2105     068E                     	;# 
  2106     068F                     	;# 
  2107     0690                     	;# 
  2108     0691                     	;# 
  2109     0692                     	;# 
  2110     0693                     	;# 
  2111     0694                     	;# 
  2112     070C                     	;# 
  2113     070D                     	;# 
  2114     070E                     	;# 
  2115     070F                     	;# 
  2116     0710                     	;# 
  2117     0711                     	;# 
  2118     0712                     	;# 
  2119     0713                     	;# 
  2120     0714                     	;# 
  2121     0716                     	;# 
  2122     0717                     	;# 
  2123     0718                     	;# 
  2124     0719                     	;# 
  2125     071A                     	;# 
  2126     071B                     	;# 
  2127     071C                     	;# 
  2128     071D                     	;# 
  2129     071E                     	;# 
  2130     0796                     	;# 
  2131     0797                     	;# 
  2132     0798                     	;# 
  2133     0799                     	;# 
  2134     079A                     	;# 
  2135     079B                     	;# 
  2136     079C                     	;# 
  2137     079D                     	;# 
  2138     080C                     	;# 
  2139     080D                     	;# 
  2140     080E                     	;# 
  2141     080F                     	;# 
  2142     0810                     	;# 
  2143     0811                     	;# 
  2144     0813                     	;# 
  2145     0814                     	;# 
  2146     081A                     	;# 
  2147     081A                     	;# 
  2148     081B                     	;# 
  2149     081C                     	;# 
  2150     081C                     	;# 
  2151     081D                     	;# 
  2152     081E                     	;# 
  2153     081F                     	;# 
  2154     088C                     	;# 
  2155     088D                     	;# 
  2156     088E                     	;# 
  2157     088F                     	;# 
  2158     0890                     	;# 
  2159     0891                     	;# 
  2160     0892                     	;# 
  2161     0893                     	;# 
  2162     0895                     	;# 
  2163     0896                     	;# 
  2164     0897                     	;# 
  2165     0898                     	;# 
  2166     0899                     	;# 
  2167     089A                     	;# 
  2168     089B                     	;# 
  2169     090C                     	;# 
  2170     090E                     	;# 
  2171     090F                     	;# 
  2172     091F                     	;# 
  2173     098F                     	;# 
  2174     098F                     	;# 
  2175     0990                     	;# 
  2176     0991                     	;# 
  2177     0992                     	;# 
  2178     0993                     	;# 
  2179     0994                     	;# 
  2180     0995                     	;# 
  2181     0996                     	;# 
  2182     0997                     	;# 
  2183     0A19                     	;# 
  2184     0A19                     	;# 
  2185     0A1A                     	;# 
  2186     0A1A                     	;# 
  2187     0A1B                     	;# 
  2188     0A1B                     	;# 
  2189     0A1B                     	;# 
  2190     0A1C                     	;# 
  2191     0A1C                     	;# 
  2192     0A1D                     	;# 
  2193     0A1D                     	;# 
  2194     0A1E                     	;# 
  2195     0A1E                     	;# 
  2196     0A1F                     	;# 
  2197     0A1F                     	;# 
  2198     0A1F                     	;# 
  2199     1E0F                     	;# 
  2200     1E10                     	;# 
  2201     1E11                     	;# 
  2202     1E12                     	;# 
  2203     1E13                     	;# 
  2204     1E14                     	;# 
  2205     1E15                     	;# 
  2206     1E16                     	;# 
  2207     1E17                     	;# 
  2208     1E18                     	;# 
  2209     1E19                     	;# 
  2210     1E1A                     	;# 
  2211     1E1B                     	;# 
  2212     1E1C                     	;# 
  2213     1E1D                     	;# 
  2214     1E1E                     	;# 
  2215     1E1F                     	;# 
  2216     1E20                     	;# 
  2217     1E21                     	;# 
  2218     1E22                     	;# 
  2219     1E23                     	;# 
  2220     1E24                     	;# 
  2221     1E25                     	;# 
  2222     1E26                     	;# 
  2223     1E27                     	;# 
  2224     1E28                     	;# 
  2225     1E29                     	;# 
  2226     1E2A                     	;# 
  2227     1E2B                     	;# 
  2228     1E2C                     	;# 
  2229     1E2D                     	;# 
  2230     1E2E                     	;# 
  2231     1E2F                     	;# 
  2232     1E30                     	;# 
  2233     1E31                     	;# 
  2234     1E32                     	;# 
  2235     1E33                     	;# 
  2236     1E34                     	;# 
  2237     1E35                     	;# 
  2238     1E36                     	;# 
  2239     1E37                     	;# 
  2240     1E8F                     	;# 
  2241     1E90                     	;# 
  2242     1E91                     	;# 
  2243     1E92                     	;# 
  2244     1E93                     	;# 
  2245     1E94                     	;# 
  2246     1E95                     	;# 
  2247     1E96                     	;# 
  2248     1E97                     	;# 
  2249     1E9C                     	;# 
  2250     1E9D                     	;# 
  2251     1E9E                     	;# 
  2252     1EA1                     	;# 
  2253     1EA2                     	;# 
  2254     1EA3                     	;# 
  2255     1EA4                     	;# 
  2256     1EA5                     	;# 
  2257     1EA9                     	;# 
  2258     1EAA                     	;# 
  2259     1EAB                     	;# 
  2260     1EAC                     	;# 
  2261     1EB1                     	;# 
  2262     1EB2                     	;# 
  2263     1EB3                     	;# 
  2264     1EB8                     	;# 
  2265     1EB9                     	;# 
  2266     1EBA                     	;# 
  2267     1EBB                     	;# 
  2268     1EBC                     	;# 
  2269     1EBD                     	;# 
  2270     1EBE                     	;# 
  2271     1EC3                     	;# 
  2272     1EC5                     	;# 
  2273     1EC6                     	;# 
  2274     1EC7                     	;# 
  2275     1EC8                     	;# 
  2276     1EC9                     	;# 
  2277     1ECA                     	;# 
  2278     1ECB                     	;# 
  2279     1ECC                     	;# 
  2280     1ECD                     	;# 
  2281     1ECE                     	;# 
  2282     1F10                     	;# 
  2283     1F11                     	;# 
  2284     1F12                     	;# 
  2285     1F13                     	;# 
  2286     1F14                     	;# 
  2287     1F15                     	;# 
  2288     1F16                     	;# 
  2289     1F17                     	;# 
  2290     1F18                     	;# 
  2291     1F19                     	;# 
  2292     1F1A                     	;# 
  2293     1F1B                     	;# 
  2294     1F1C                     	;# 
  2295     1F1D                     	;# 
  2296     1F1E                     	;# 
  2297     1F1F                     	;# 
  2298     1F20                     	;# 
  2299     1F21                     	;# 
  2300     1F22                     	;# 
  2301     1F23                     	;# 
  2302     1F24                     	;# 
  2303     1F25                     	;# 
  2304     1F26                     	;# 
  2305     1F27                     	;# 
  2306     1F38                     	;# 
  2307     1F39                     	;# 
  2308     1F3A                     	;# 
  2309     1F3B                     	;# 
  2310     1F3C                     	;# 
  2311     1F3D                     	;# 
  2312     1F3E                     	;# 
  2313     1F3F                     	;# 
  2314     1F43                     	;# 
  2315     1F44                     	;# 
  2316     1F45                     	;# 
  2317     1F46                     	;# 
  2318     1F47                     	;# 
  2319     1F48                     	;# 
  2320     1F49                     	;# 
  2321     1F4A                     	;# 
  2322     1F4E                     	;# 
  2323     1F4F                     	;# 
  2324     1F50                     	;# 
  2325     1F51                     	;# 
  2326     1F52                     	;# 
  2327     1F53                     	;# 
  2328     1F54                     	;# 
  2329     1F55                     	;# 
  2330     1F65                     	;# 
  2331     1F66                     	;# 
  2332     1F67                     	;# 
  2333     1F68                     	;# 
  2334     1F69                     	;# 
  2335     1F6A                     	;# 
  2336     1F6B                     	;# 
  2337     1FE4                     	;# 
  2338     1FE5                     	;# 
  2339     1FE6                     	;# 
  2340     1FE7                     	;# 
  2341     1FE8                     	;# 
  2342     1FE8                     	;# 
  2343     1FE9                     	;# 
  2344     1FEA                     	;# 
  2345     1FEB                     	;# 
  2346     1FED                     	;# 
  2347     1FEE                     	;# 
  2348     1FEF                     	;# 
  2349     0000                     	;# 
  2350     0001                     	;# 
  2351     0002                     	;# 
  2352     0003                     	;# 
  2353     0004                     	;# 
  2354     0005                     	;# 
  2355     0006                     	;# 
  2356     0007                     	;# 
  2357     0008                     	;# 
  2358     0009                     	;# 
  2359     000A                     	;# 
  2360     000B                     	;# 
  2361     000C                     	;# 
  2362     000D                     	;# 
  2363     000E                     	;# 
  2364     0010                     	;# 
  2365     0012                     	;# 
  2366     0013                     	;# 
  2367     0014                     	;# 
  2368     0016                     	;# 
  2369     0018                     	;# 
  2370     0019                     	;# 
  2371     001A                     	;# 
  2372     001C                     	;# 
  2373     008C                     	;# 
  2374     008C                     	;# 
  2375     008D                     	;# 
  2376     008E                     	;# 
  2377     008E                     	;# 
  2378     008F                     	;# 
  2379     0090                     	;# 
  2380     0090                     	;# 
  2381     0091                     	;# 
  2382     0092                     	;# 
  2383     0092                     	;# 
  2384     0093                     	;# 
  2385     0094                     	;# 
  2386     0094                     	;# 
  2387     0095                     	;# 
  2388     0096                     	;# 
  2389     0096                     	;# 
  2390     0097                     	;# 
  2391     0098                     	;# 
  2392     0099                     	;# 
  2393     009A                     	;# 
  2394     009B                     	;# 
  2395     009B                     	;# 
  2396     009C                     	;# 
  2397     009D                     	;# 
  2398     009D                     	;# 
  2399     009E                     	;# 
  2400     009F                     	;# 
  2401     010C                     	;# 
  2402     010C                     	;# 
  2403     010D                     	;# 
  2404     010E                     	;# 
  2405     010F                     	;# 
  2406     010F                     	;# 
  2407     0110                     	;# 
  2408     0111                     	;# 
  2409     0112                     	;# 
  2410     0113                     	;# 
  2411     0114                     	;# 
  2412     0115                     	;# 
  2413     0116                     	;# 
  2414     0117                     	;# 
  2415     0118                     	;# 
  2416     0119                     	;# 
  2417     0119                     	;# 
  2418     0119                     	;# 
  2419     011A                     	;# 
  2420     011A                     	;# 
  2421     011A                     	;# 
  2422     011B                     	;# 
  2423     011B                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011C                     	;# 
  2428     011C                     	;# 
  2429     011C                     	;# 
  2430     011D                     	;# 
  2431     011D                     	;# 
  2432     011D                     	;# 
  2433     011E                     	;# 
  2434     011E                     	;# 
  2435     011E                     	;# 
  2436     011F                     	;# 
  2437     011F                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     018C                     	;# 
  2442     018D                     	;# 
  2443     018E                     	;# 
  2444     018F                     	;# 
  2445     0190                     	;# 
  2446     0191                     	;# 
  2447     0192                     	;# 
  2448     0196                     	;# 
  2449     0197                     	;# 
  2450     0198                     	;# 
  2451     0199                     	;# 
  2452     019A                     	;# 
  2453     019B                     	;# 
  2454     019C                     	;# 
  2455     020C                     	;# 
  2456     020D                     	;# 
  2457     020E                     	;# 
  2458     020E                     	;# 
  2459     020F                     	;# 
  2460     020F                     	;# 
  2461     0210                     	;# 
  2462     0210                     	;# 
  2463     0211                     	;# 
  2464     0211                     	;# 
  2465     0212                     	;# 
  2466     0213                     	;# 
  2467     0214                     	;# 
  2468     0214                     	;# 
  2469     0215                     	;# 
  2470     0215                     	;# 
  2471     0216                     	;# 
  2472     0216                     	;# 
  2473     0217                     	;# 
  2474     0217                     	;# 
  2475     0218                     	;# 
  2476     0219                     	;# 
  2477     021A                     	;# 
  2478     021A                     	;# 
  2479     021B                     	;# 
  2480     021B                     	;# 
  2481     021C                     	;# 
  2482     021C                     	;# 
  2483     021D                     	;# 
  2484     021D                     	;# 
  2485     021E                     	;# 
  2486     021F                     	;# 
  2487     028C                     	;# 
  2488     028C                     	;# 
  2489     028D                     	;# 
  2490     028D                     	;# 
  2491     028E                     	;# 
  2492     028F                     	;# 
  2493     0290                     	;# 
  2494     0291                     	;# 
  2495     0292                     	;# 
  2496     0292                     	;# 
  2497     0293                     	;# 
  2498     0293                     	;# 
  2499     0294                     	;# 
  2500     0295                     	;# 
  2501     0296                     	;# 
  2502     0297                     	;# 
  2503     0298                     	;# 
  2504     0298                     	;# 
  2505     0299                     	;# 
  2506     0299                     	;# 
  2507     029A                     	;# 
  2508     029B                     	;# 
  2509     029C                     	;# 
  2510     029D                     	;# 
  2511     029F                     	;# 
  2512     030C                     	;# 
  2513     030C                     	;# 
  2514     030D                     	;# 
  2515     030E                     	;# 
  2516     030F                     	;# 
  2517     0310                     	;# 
  2518     0310                     	;# 
  2519     0311                     	;# 
  2520     0312                     	;# 
  2521     0313                     	;# 
  2522     0314                     	;# 
  2523     0314                     	;# 
  2524     0315                     	;# 
  2525     0316                     	;# 
  2526     0317                     	;# 
  2527     0318                     	;# 
  2528     0318                     	;# 
  2529     0319                     	;# 
  2530     031A                     	;# 
  2531     031B                     	;# 
  2532     031C                     	;# 
  2533     031C                     	;# 
  2534     031D                     	;# 
  2535     031E                     	;# 
  2536     031F                     	;# 
  2537     038C                     	;# 
  2538     038C                     	;# 
  2539     038D                     	;# 
  2540     038E                     	;# 
  2541     0390                     	;# 
  2542     0390                     	;# 
  2543     0391                     	;# 
  2544     0392                     	;# 
  2545     048C                     	;# 
  2546     048C                     	;# 
  2547     048D                     	;# 
  2548     048E                     	;# 
  2549     048F                     	;# 
  2550     048F                     	;# 
  2551     0490                     	;# 
  2552     0491                     	;# 
  2553     0492                     	;# 
  2554     0492                     	;# 
  2555     0493                     	;# 
  2556     0494                     	;# 
  2557     0495                     	;# 
  2558     0495                     	;# 
  2559     0496                     	;# 
  2560     0497                     	;# 
  2561     0498                     	;# 
  2562     0499                     	;# 
  2563     049A                     	;# 
  2564     049B                     	;# 
  2565     049C                     	;# 
  2566     049D                     	;# 
  2567     050C                     	;# 
  2568     050C                     	;# 
  2569     050D                     	;# 
  2570     050E                     	;# 
  2571     050F                     	;# 
  2572     050F                     	;# 
  2573     0510                     	;# 
  2574     0511                     	;# 
  2575     0512                     	;# 
  2576     0512                     	;# 
  2577     0513                     	;# 
  2578     0514                     	;# 
  2579     0515                     	;# 
  2580     0515                     	;# 
  2581     0516                     	;# 
  2582     0517                     	;# 
  2583     0518                     	;# 
  2584     0519                     	;# 
  2585     051A                     	;# 
  2586     051B                     	;# 
  2587     051C                     	;# 
  2588     051D                     	;# 
  2589     058C                     	;# 
  2590     058C                     	;# 
  2591     058D                     	;# 
  2592     058E                     	;# 
  2593     058F                     	;# 
  2594     058F                     	;# 
  2595     0590                     	;# 
  2596     0591                     	;# 
  2597     0592                     	;# 
  2598     0593                     	;# 
  2599     059C                     	;# 
  2600     059C                     	;# 
  2601     059D                     	;# 
  2602     059D                     	;# 
  2603     059E                     	;# 
  2604     059F                     	;# 
  2605     060C                     	;# 
  2606     060C                     	;# 
  2607     060D                     	;# 
  2608     060D                     	;# 
  2609     060E                     	;# 
  2610     060F                     	;# 
  2611     0610                     	;# 
  2612     0611                     	;# 
  2613     0612                     	;# 
  2614     0613                     	;# 
  2615     0614                     	;# 
  2616     0616                     	;# 
  2617     0616                     	;# 
  2618     0617                     	;# 
  2619     0617                     	;# 
  2620     0618                     	;# 
  2621     0619                     	;# 
  2622     061A                     	;# 
  2623     061B                     	;# 
  2624     061C                     	;# 
  2625     061D                     	;# 
  2626     061E                     	;# 
  2627     068C                     	;# 
  2628     068D                     	;# 
  2629     068E                     	;# 
  2630     068F                     	;# 
  2631     0690                     	;# 
  2632     0691                     	;# 
  2633     0692                     	;# 
  2634     0693                     	;# 
  2635     0694                     	;# 
  2636     070C                     	;# 
  2637     070D                     	;# 
  2638     070E                     	;# 
  2639     070F                     	;# 
  2640     0710                     	;# 
  2641     0711                     	;# 
  2642     0712                     	;# 
  2643     0713                     	;# 
  2644     0714                     	;# 
  2645     0716                     	;# 
  2646     0717                     	;# 
  2647     0718                     	;# 
  2648     0719                     	;# 
  2649     071A                     	;# 
  2650     071B                     	;# 
  2651     071C                     	;# 
  2652     071D                     	;# 
  2653     071E                     	;# 
  2654     0796                     	;# 
  2655     0797                     	;# 
  2656     0798                     	;# 
  2657     0799                     	;# 
  2658     079A                     	;# 
  2659     079B                     	;# 
  2660     079C                     	;# 
  2661     079D                     	;# 
  2662     080C                     	;# 
  2663     080D                     	;# 
  2664     080E                     	;# 
  2665     080F                     	;# 
  2666     0810                     	;# 
  2667     0811                     	;# 
  2668     0813                     	;# 
  2669     0814                     	;# 
  2670     081A                     	;# 
  2671     081A                     	;# 
  2672     081B                     	;# 
  2673     081C                     	;# 
  2674     081C                     	;# 
  2675     081D                     	;# 
  2676     081E                     	;# 
  2677     081F                     	;# 
  2678     088C                     	;# 
  2679     088D                     	;# 
  2680     088E                     	;# 
  2681     088F                     	;# 
  2682     0890                     	;# 
  2683     0891                     	;# 
  2684     0892                     	;# 
  2685     0893                     	;# 
  2686     0895                     	;# 
  2687     0896                     	;# 
  2688     0897                     	;# 
  2689     0898                     	;# 
  2690     0899                     	;# 
  2691     089A                     	;# 
  2692     089B                     	;# 
  2693     090C                     	;# 
  2694     090E                     	;# 
  2695     090F                     	;# 
  2696     091F                     	;# 
  2697     098F                     	;# 
  2698     098F                     	;# 
  2699     0990                     	;# 
  2700     0991                     	;# 
  2701     0992                     	;# 
  2702     0993                     	;# 
  2703     0994                     	;# 
  2704     0995                     	;# 
  2705     0996                     	;# 
  2706     0997                     	;# 
  2707     0A19                     	;# 
  2708     0A19                     	;# 
  2709     0A1A                     	;# 
  2710     0A1A                     	;# 
  2711     0A1B                     	;# 
  2712     0A1B                     	;# 
  2713     0A1B                     	;# 
  2714     0A1C                     	;# 
  2715     0A1C                     	;# 
  2716     0A1D                     	;# 
  2717     0A1D                     	;# 
  2718     0A1E                     	;# 
  2719     0A1E                     	;# 
  2720     0A1F                     	;# 
  2721     0A1F                     	;# 
  2722     0A1F                     	;# 
  2723     1E0F                     	;# 
  2724     1E10                     	;# 
  2725     1E11                     	;# 
  2726     1E12                     	;# 
  2727     1E13                     	;# 
  2728     1E14                     	;# 
  2729     1E15                     	;# 
  2730     1E16                     	;# 
  2731     1E17                     	;# 
  2732     1E18                     	;# 
  2733     1E19                     	;# 
  2734     1E1A                     	;# 
  2735     1E1B                     	;# 
  2736     1E1C                     	;# 
  2737     1E1D                     	;# 
  2738     1E1E                     	;# 
  2739     1E1F                     	;# 
  2740     1E20                     	;# 
  2741     1E21                     	;# 
  2742     1E22                     	;# 
  2743     1E23                     	;# 
  2744     1E24                     	;# 
  2745     1E25                     	;# 
  2746     1E26                     	;# 
  2747     1E27                     	;# 
  2748     1E28                     	;# 
  2749     1E29                     	;# 
  2750     1E2A                     	;# 
  2751     1E2B                     	;# 
  2752     1E2C                     	;# 
  2753     1E2D                     	;# 
  2754     1E2E                     	;# 
  2755     1E2F                     	;# 
  2756     1E30                     	;# 
  2757     1E31                     	;# 
  2758     1E32                     	;# 
  2759     1E33                     	;# 
  2760     1E34                     	;# 
  2761     1E35                     	;# 
  2762     1E36                     	;# 
  2763     1E37                     	;# 
  2764     1E8F                     	;# 
  2765     1E90                     	;# 
  2766     1E91                     	;# 
  2767     1E92                     	;# 
  2768     1E93                     	;# 
  2769     1E94                     	;# 
  2770     1E95                     	;# 
  2771     1E96                     	;# 
  2772     1E97                     	;# 
  2773     1E9C                     	;# 
  2774     1E9D                     	;# 
  2775     1E9E                     	;# 
  2776     1EA1                     	;# 
  2777     1EA2                     	;# 
  2778     1EA3                     	;# 
  2779     1EA4                     	;# 
  2780     1EA5                     	;# 
  2781     1EA9                     	;# 
  2782     1EAA                     	;# 
  2783     1EAB                     	;# 
  2784     1EAC                     	;# 
  2785     1EB1                     	;# 
  2786     1EB2                     	;# 
  2787     1EB3                     	;# 
  2788     1EB8                     	;# 
  2789     1EB9                     	;# 
  2790     1EBA                     	;# 
  2791     1EBB                     	;# 
  2792     1EBC                     	;# 
  2793     1EBD                     	;# 
  2794     1EBE                     	;# 
  2795     1EC3                     	;# 
  2796     1EC5                     	;# 
  2797     1EC6                     	;# 
  2798     1EC7                     	;# 
  2799     1EC8                     	;# 
  2800     1EC9                     	;# 
  2801     1ECA                     	;# 
  2802     1ECB                     	;# 
  2803     1ECC                     	;# 
  2804     1ECD                     	;# 
  2805     1ECE                     	;# 
  2806     1F10                     	;# 
  2807     1F11                     	;# 
  2808     1F12                     	;# 
  2809     1F13                     	;# 
  2810     1F14                     	;# 
  2811     1F15                     	;# 
  2812     1F16                     	;# 
  2813     1F17                     	;# 
  2814     1F18                     	;# 
  2815     1F19                     	;# 
  2816     1F1A                     	;# 
  2817     1F1B                     	;# 
  2818     1F1C                     	;# 
  2819     1F1D                     	;# 
  2820     1F1E                     	;# 
  2821     1F1F                     	;# 
  2822     1F20                     	;# 
  2823     1F21                     	;# 
  2824     1F22                     	;# 
  2825     1F23                     	;# 
  2826     1F24                     	;# 
  2827     1F25                     	;# 
  2828     1F26                     	;# 
  2829     1F27                     	;# 
  2830     1F38                     	;# 
  2831     1F39                     	;# 
  2832     1F3A                     	;# 
  2833     1F3B                     	;# 
  2834     1F3C                     	;# 
  2835     1F3D                     	;# 
  2836     1F3E                     	;# 
  2837     1F3F                     	;# 
  2838     1F43                     	;# 
  2839     1F44                     	;# 
  2840     1F45                     	;# 
  2841     1F46                     	;# 
  2842     1F47                     	;# 
  2843     1F48                     	;# 
  2844     1F49                     	;# 
  2845     1F4A                     	;# 
  2846     1F4E                     	;# 
  2847     1F4F                     	;# 
  2848     1F50                     	;# 
  2849     1F51                     	;# 
  2850     1F52                     	;# 
  2851     1F53                     	;# 
  2852     1F54                     	;# 
  2853     1F55                     	;# 
  2854     1F65                     	;# 
  2855     1F66                     	;# 
  2856     1F67                     	;# 
  2857     1F68                     	;# 
  2858     1F69                     	;# 
  2859     1F6A                     	;# 
  2860     1F6B                     	;# 
  2861     1FE4                     	;# 
  2862     1FE5                     	;# 
  2863     1FE6                     	;# 
  2864     1FE7                     	;# 
  2865     1FE8                     	;# 
  2866     1FE8                     	;# 
  2867     1FE9                     	;# 
  2868     1FEA                     	;# 
  2869     1FEB                     	;# 
  2870     1FED                     	;# 
  2871     1FEE                     	;# 
  2872     1FEF                     	;# 
  2873     0000                     	;# 
  2874     0001                     	;# 
  2875     0002                     	;# 
  2876     0003                     	;# 
  2877     0004                     	;# 
  2878     0005                     	;# 
  2879     0006                     	;# 
  2880     0007                     	;# 
  2881     0008                     	;# 
  2882     0009                     	;# 
  2883     000A                     	;# 
  2884     000B                     	;# 
  2885     000C                     	;# 
  2886     000D                     	;# 
  2887     000E                     	;# 
  2888     0010                     	;# 
  2889     0012                     	;# 
  2890     0013                     	;# 
  2891     0014                     	;# 
  2892     0016                     	;# 
  2893     0018                     	;# 
  2894     0019                     	;# 
  2895     001A                     	;# 
  2896     001C                     	;# 
  2897     008C                     	;# 
  2898     008C                     	;# 
  2899     008D                     	;# 
  2900     008E                     	;# 
  2901     008E                     	;# 
  2902     008F                     	;# 
  2903     0090                     	;# 
  2904     0090                     	;# 
  2905     0091                     	;# 
  2906     0092                     	;# 
  2907     0092                     	;# 
  2908     0093                     	;# 
  2909     0094                     	;# 
  2910     0094                     	;# 
  2911     0095                     	;# 
  2912     0096                     	;# 
  2913     0096                     	;# 
  2914     0097                     	;# 
  2915     0098                     	;# 
  2916     0099                     	;# 
  2917     009A                     	;# 
  2918     009B                     	;# 
  2919     009B                     	;# 
  2920     009C                     	;# 
  2921     009D                     	;# 
  2922     009D                     	;# 
  2923     009E                     	;# 
  2924     009F                     	;# 
  2925     010C                     	;# 
  2926     010C                     	;# 
  2927     010D                     	;# 
  2928     010E                     	;# 
  2929     010F                     	;# 
  2930     010F                     	;# 
  2931     0110                     	;# 
  2932     0111                     	;# 
  2933     0112                     	;# 
  2934     0113                     	;# 
  2935     0114                     	;# 
  2936     0115                     	;# 
  2937     0116                     	;# 
  2938     0117                     	;# 
  2939     0118                     	;# 
  2940     0119                     	;# 
  2941     0119                     	;# 
  2942     0119                     	;# 
  2943     011A                     	;# 
  2944     011A                     	;# 
  2945     011A                     	;# 
  2946     011B                     	;# 
  2947     011B                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011C                     	;# 
  2952     011C                     	;# 
  2953     011C                     	;# 
  2954     011D                     	;# 
  2955     011D                     	;# 
  2956     011D                     	;# 
  2957     011E                     	;# 
  2958     011E                     	;# 
  2959     011E                     	;# 
  2960     011F                     	;# 
  2961     011F                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     018C                     	;# 
  2966     018D                     	;# 
  2967     018E                     	;# 
  2968     018F                     	;# 
  2969     0190                     	;# 
  2970     0191                     	;# 
  2971     0192                     	;# 
  2972     0196                     	;# 
  2973     0197                     	;# 
  2974     0198                     	;# 
  2975     0199                     	;# 
  2976     019A                     	;# 
  2977     019B                     	;# 
  2978     019C                     	;# 
  2979     020C                     	;# 
  2980     020D                     	;# 
  2981     020E                     	;# 
  2982     020E                     	;# 
  2983     020F                     	;# 
  2984     020F                     	;# 
  2985     0210                     	;# 
  2986     0210                     	;# 
  2987     0211                     	;# 
  2988     0211                     	;# 
  2989     0212                     	;# 
  2990     0213                     	;# 
  2991     0214                     	;# 
  2992     0214                     	;# 
  2993     0215                     	;# 
  2994     0215                     	;# 
  2995     0216                     	;# 
  2996     0216                     	;# 
  2997     0217                     	;# 
  2998     0217                     	;# 
  2999     0218                     	;# 
  3000     0219                     	;# 
  3001     021A                     	;# 
  3002     021A                     	;# 
  3003     021B                     	;# 
  3004     021B                     	;# 
  3005     021C                     	;# 
  3006     021C                     	;# 
  3007     021D                     	;# 
  3008     021D                     	;# 
  3009     021E                     	;# 
  3010     021F                     	;# 
  3011     028C                     	;# 
  3012     028C                     	;# 
  3013     028D                     	;# 
  3014     028D                     	;# 
  3015     028E                     	;# 
  3016     028F                     	;# 
  3017     0290                     	;# 
  3018     0291                     	;# 
  3019     0292                     	;# 
  3020     0292                     	;# 
  3021     0293                     	;# 
  3022     0293                     	;# 
  3023     0294                     	;# 
  3024     0295                     	;# 
  3025     0296                     	;# 
  3026     0297                     	;# 
  3027     0298                     	;# 
  3028     0298                     	;# 
  3029     0299                     	;# 
  3030     0299                     	;# 
  3031     029A                     	;# 
  3032     029B                     	;# 
  3033     029C                     	;# 
  3034     029D                     	;# 
  3035     029F                     	;# 
  3036     030C                     	;# 
  3037     030C                     	;# 
  3038     030D                     	;# 
  3039     030E                     	;# 
  3040     030F                     	;# 
  3041     0310                     	;# 
  3042     0310                     	;# 
  3043     0311                     	;# 
  3044     0312                     	;# 
  3045     0313                     	;# 
  3046     0314                     	;# 
  3047     0314                     	;# 
  3048     0315                     	;# 
  3049     0316                     	;# 
  3050     0317                     	;# 
  3051     0318                     	;# 
  3052     0318                     	;# 
  3053     0319                     	;# 
  3054     031A                     	;# 
  3055     031B                     	;# 
  3056     031C                     	;# 
  3057     031C                     	;# 
  3058     031D                     	;# 
  3059     031E                     	;# 
  3060     031F                     	;# 
  3061     038C                     	;# 
  3062     038C                     	;# 
  3063     038D                     	;# 
  3064     038E                     	;# 
  3065     0390                     	;# 
  3066     0390                     	;# 
  3067     0391                     	;# 
  3068     0392                     	;# 
  3069     048C                     	;# 
  3070     048C                     	;# 
  3071     048D                     	;# 
  3072     048E                     	;# 
  3073     048F                     	;# 
  3074     048F                     	;# 
  3075     0490                     	;# 
  3076     0491                     	;# 
  3077     0492                     	;# 
  3078     0492                     	;# 
  3079     0493                     	;# 
  3080     0494                     	;# 
  3081     0495                     	;# 
  3082     0495                     	;# 
  3083     0496                     	;# 
  3084     0497                     	;# 
  3085     0498                     	;# 
  3086     0499                     	;# 
  3087     049A                     	;# 
  3088     049B                     	;# 
  3089     049C                     	;# 
  3090     049D                     	;# 
  3091     050C                     	;# 
  3092     050C                     	;# 
  3093     050D                     	;# 
  3094     050E                     	;# 
  3095     050F                     	;# 
  3096     050F                     	;# 
  3097     0510                     	;# 
  3098     0511                     	;# 
  3099     0512                     	;# 
  3100     0512                     	;# 
  3101     0513                     	;# 
  3102     0514                     	;# 
  3103     0515                     	;# 
  3104     0515                     	;# 
  3105     0516                     	;# 
  3106     0517                     	;# 
  3107     0518                     	;# 
  3108     0519                     	;# 
  3109     051A                     	;# 
  3110     051B                     	;# 
  3111     051C                     	;# 
  3112     051D                     	;# 
  3113     058C                     	;# 
  3114     058C                     	;# 
  3115     058D                     	;# 
  3116     058E                     	;# 
  3117     058F                     	;# 
  3118     058F                     	;# 
  3119     0590                     	;# 
  3120     0591                     	;# 
  3121     0592                     	;# 
  3122     0593                     	;# 
  3123     059C                     	;# 
  3124     059C                     	;# 
  3125     059D                     	;# 
  3126     059D                     	;# 
  3127     059E                     	;# 
  3128     059F                     	;# 
  3129     060C                     	;# 
  3130     060C                     	;# 
  3131     060D                     	;# 
  3132     060D                     	;# 
  3133     060E                     	;# 
  3134     060F                     	;# 
  3135     0610                     	;# 
  3136     0611                     	;# 
  3137     0612                     	;# 
  3138     0613                     	;# 
  3139     0614                     	;# 
  3140     0616                     	;# 
  3141     0616                     	;# 
  3142     0617                     	;# 
  3143     0617                     	;# 
  3144     0618                     	;# 
  3145     0619                     	;# 
  3146     061A                     	;# 
  3147     061B                     	;# 
  3148     061C                     	;# 
  3149     061D                     	;# 
  3150     061E                     	;# 
  3151     068C                     	;# 
  3152     068D                     	;# 
  3153     068E                     	;# 
  3154     068F                     	;# 
  3155     0690                     	;# 
  3156     0691                     	;# 
  3157     0692                     	;# 
  3158     0693                     	;# 
  3159     0694                     	;# 
  3160     070C                     	;# 
  3161     070D                     	;# 
  3162     070E                     	;# 
  3163     070F                     	;# 
  3164     0710                     	;# 
  3165     0711                     	;# 
  3166     0712                     	;# 
  3167     0713                     	;# 
  3168     0714                     	;# 
  3169     0716                     	;# 
  3170     0717                     	;# 
  3171     0718                     	;# 
  3172     0719                     	;# 
  3173     071A                     	;# 
  3174     071B                     	;# 
  3175     071C                     	;# 
  3176     071D                     	;# 
  3177     071E                     	;# 
  3178     0796                     	;# 
  3179     0797                     	;# 
  3180     0798                     	;# 
  3181     0799                     	;# 
  3182     079A                     	;# 
  3183     079B                     	;# 
  3184     079C                     	;# 
  3185     079D                     	;# 
  3186     080C                     	;# 
  3187     080D                     	;# 
  3188     080E                     	;# 
  3189     080F                     	;# 
  3190     0810                     	;# 
  3191     0811                     	;# 
  3192     0813                     	;# 
  3193     0814                     	;# 
  3194     081A                     	;# 
  3195     081A                     	;# 
  3196     081B                     	;# 
  3197     081C                     	;# 
  3198     081C                     	;# 
  3199     081D                     	;# 
  3200     081E                     	;# 
  3201     081F                     	;# 
  3202     088C                     	;# 
  3203     088D                     	;# 
  3204     088E                     	;# 
  3205     088F                     	;# 
  3206     0890                     	;# 
  3207     0891                     	;# 
  3208     0892                     	;# 
  3209     0893                     	;# 
  3210     0895                     	;# 
  3211     0896                     	;# 
  3212     0897                     	;# 
  3213     0898                     	;# 
  3214     0899                     	;# 
  3215     089A                     	;# 
  3216     089B                     	;# 
  3217     090C                     	;# 
  3218     090E                     	;# 
  3219     090F                     	;# 
  3220     091F                     	;# 
  3221     098F                     	;# 
  3222     098F                     	;# 
  3223     0990                     	;# 
  3224     0991                     	;# 
  3225     0992                     	;# 
  3226     0993                     	;# 
  3227     0994                     	;# 
  3228     0995                     	;# 
  3229     0996                     	;# 
  3230     0997                     	;# 
  3231     0A19                     	;# 
  3232     0A19                     	;# 
  3233     0A1A                     	;# 
  3234     0A1A                     	;# 
  3235     0A1B                     	;# 
  3236     0A1B                     	;# 
  3237     0A1B                     	;# 
  3238     0A1C                     	;# 
  3239     0A1C                     	;# 
  3240     0A1D                     	;# 
  3241     0A1D                     	;# 
  3242     0A1E                     	;# 
  3243     0A1E                     	;# 
  3244     0A1F                     	;# 
  3245     0A1F                     	;# 
  3246     0A1F                     	;# 
  3247     1E0F                     	;# 
  3248     1E10                     	;# 
  3249     1E11                     	;# 
  3250     1E12                     	;# 
  3251     1E13                     	;# 
  3252     1E14                     	;# 
  3253     1E15                     	;# 
  3254     1E16                     	;# 
  3255     1E17                     	;# 
  3256     1E18                     	;# 
  3257     1E19                     	;# 
  3258     1E1A                     	;# 
  3259     1E1B                     	;# 
  3260     1E1C                     	;# 
  3261     1E1D                     	;# 
  3262     1E1E                     	;# 
  3263     1E1F                     	;# 
  3264     1E20                     	;# 
  3265     1E21                     	;# 
  3266     1E22                     	;# 
  3267     1E23                     	;# 
  3268     1E24                     	;# 
  3269     1E25                     	;# 
  3270     1E26                     	;# 
  3271     1E27                     	;# 
  3272     1E28                     	;# 
  3273     1E29                     	;# 
  3274     1E2A                     	;# 
  3275     1E2B                     	;# 
  3276     1E2C                     	;# 
  3277     1E2D                     	;# 
  3278     1E2E                     	;# 
  3279     1E2F                     	;# 
  3280     1E30                     	;# 
  3281     1E31                     	;# 
  3282     1E32                     	;# 
  3283     1E33                     	;# 
  3284     1E34                     	;# 
  3285     1E35                     	;# 
  3286     1E36                     	;# 
  3287     1E37                     	;# 
  3288     1E8F                     	;# 
  3289     1E90                     	;# 
  3290     1E91                     	;# 
  3291     1E92                     	;# 
  3292     1E93                     	;# 
  3293     1E94                     	;# 
  3294     1E95                     	;# 
  3295     1E96                     	;# 
  3296     1E97                     	;# 
  3297     1E9C                     	;# 
  3298     1E9D                     	;# 
  3299     1E9E                     	;# 
  3300     1EA1                     	;# 
  3301     1EA2                     	;# 
  3302     1EA3                     	;# 
  3303     1EA4                     	;# 
  3304     1EA5                     	;# 
  3305     1EA9                     	;# 
  3306     1EAA                     	;# 
  3307     1EAB                     	;# 
  3308     1EAC                     	;# 
  3309     1EB1                     	;# 
  3310     1EB2                     	;# 
  3311     1EB3                     	;# 
  3312     1EB8                     	;# 
  3313     1EB9                     	;# 
  3314     1EBA                     	;# 
  3315     1EBB                     	;# 
  3316     1EBC                     	;# 
  3317     1EBD                     	;# 
  3318     1EBE                     	;# 
  3319     1EC3                     	;# 
  3320     1EC5                     	;# 
  3321     1EC6                     	;# 
  3322     1EC7                     	;# 
  3323     1EC8                     	;# 
  3324     1EC9                     	;# 
  3325     1ECA                     	;# 
  3326     1ECB                     	;# 
  3327     1ECC                     	;# 
  3328     1ECD                     	;# 
  3329     1ECE                     	;# 
  3330     1F10                     	;# 
  3331     1F11                     	;# 
  3332     1F12                     	;# 
  3333     1F13                     	;# 
  3334     1F14                     	;# 
  3335     1F15                     	;# 
  3336     1F16                     	;# 
  3337     1F17                     	;# 
  3338     1F18                     	;# 
  3339     1F19                     	;# 
  3340     1F1A                     	;# 
  3341     1F1B                     	;# 
  3342     1F1C                     	;# 
  3343     1F1D                     	;# 
  3344     1F1E                     	;# 
  3345     1F1F                     	;# 
  3346     1F20                     	;# 
  3347     1F21                     	;# 
  3348     1F22                     	;# 
  3349     1F23                     	;# 
  3350     1F24                     	;# 
  3351     1F25                     	;# 
  3352     1F26                     	;# 
  3353     1F27                     	;# 
  3354     1F38                     	;# 
  3355     1F39                     	;# 
  3356     1F3A                     	;# 
  3357     1F3B                     	;# 
  3358     1F3C                     	;# 
  3359     1F3D                     	;# 
  3360     1F3E                     	;# 
  3361     1F3F                     	;# 
  3362     1F43                     	;# 
  3363     1F44                     	;# 
  3364     1F45                     	;# 
  3365     1F46                     	;# 
  3366     1F47                     	;# 
  3367     1F48                     	;# 
  3368     1F49                     	;# 
  3369     1F4A                     	;# 
  3370     1F4E                     	;# 
  3371     1F4F                     	;# 
  3372     1F50                     	;# 
  3373     1F51                     	;# 
  3374     1F52                     	;# 
  3375     1F53                     	;# 
  3376     1F54                     	;# 
  3377     1F55                     	;# 
  3378     1F65                     	;# 
  3379     1F66                     	;# 
  3380     1F67                     	;# 
  3381     1F68                     	;# 
  3382     1F69                     	;# 
  3383     1F6A                     	;# 
  3384     1F6B                     	;# 
  3385     1FE4                     	;# 
  3386     1FE5                     	;# 
  3387     1FE6                     	;# 
  3388     1FE7                     	;# 
  3389     1FE8                     	;# 
  3390     1FE8                     	;# 
  3391     1FE9                     	;# 
  3392     1FEA                     	;# 
  3393     1FEB                     	;# 
  3394     1FED                     	;# 
  3395     1FEE                     	;# 
  3396     1FEF                     	;# 
  3397     0000                     	;# 
  3398     0001                     	;# 
  3399     0002                     	;# 
  3400     0003                     	;# 
  3401     0004                     	;# 
  3402     0005                     	;# 
  3403     0006                     	;# 
  3404     0007                     	;# 
  3405     0008                     	;# 
  3406     0009                     	;# 
  3407     000A                     	;# 
  3408     000B                     	;# 
  3409     000C                     	;# 
  3410     000D                     	;# 
  3411     000E                     	;# 
  3412     0010                     	;# 
  3413     0012                     	;# 
  3414     0013                     	;# 
  3415     0014                     	;# 
  3416     0016                     	;# 
  3417     0018                     	;# 
  3418     0019                     	;# 
  3419     001A                     	;# 
  3420     001C                     	;# 
  3421     008C                     	;# 
  3422     008C                     	;# 
  3423     008D                     	;# 
  3424     008E                     	;# 
  3425     008E                     	;# 
  3426     008F                     	;# 
  3427     0090                     	;# 
  3428     0090                     	;# 
  3429     0091                     	;# 
  3430     0092                     	;# 
  3431     0092                     	;# 
  3432     0093                     	;# 
  3433     0094                     	;# 
  3434     0094                     	;# 
  3435     0095                     	;# 
  3436     0096                     	;# 
  3437     0096                     	;# 
  3438     0097                     	;# 
  3439     0098                     	;# 
  3440     0099                     	;# 
  3441     009A                     	;# 
  3442     009B                     	;# 
  3443     009B                     	;# 
  3444     009C                     	;# 
  3445     009D                     	;# 
  3446     009D                     	;# 
  3447     009E                     	;# 
  3448     009F                     	;# 
  3449     010C                     	;# 
  3450     010C                     	;# 
  3451     010D                     	;# 
  3452     010E                     	;# 
  3453     010F                     	;# 
  3454     010F                     	;# 
  3455     0110                     	;# 
  3456     0111                     	;# 
  3457     0112                     	;# 
  3458     0113                     	;# 
  3459     0114                     	;# 
  3460     0115                     	;# 
  3461     0116                     	;# 
  3462     0117                     	;# 
  3463     0118                     	;# 
  3464     0119                     	;# 
  3465     0119                     	;# 
  3466     0119                     	;# 
  3467     011A                     	;# 
  3468     011A                     	;# 
  3469     011A                     	;# 
  3470     011B                     	;# 
  3471     011B                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011C                     	;# 
  3476     011C                     	;# 
  3477     011C                     	;# 
  3478     011D                     	;# 
  3479     011D                     	;# 
  3480     011D                     	;# 
  3481     011E                     	;# 
  3482     011E                     	;# 
  3483     011E                     	;# 
  3484     011F                     	;# 
  3485     011F                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     018C                     	;# 
  3490     018D                     	;# 
  3491     018E                     	;# 
  3492     018F                     	;# 
  3493     0190                     	;# 
  3494     0191                     	;# 
  3495     0192                     	;# 
  3496     0196                     	;# 
  3497     0197                     	;# 
  3498     0198                     	;# 
  3499     0199                     	;# 
  3500     019A                     	;# 
  3501     019B                     	;# 
  3502     019C                     	;# 
  3503     020C                     	;# 
  3504     020D                     	;# 
  3505     020E                     	;# 
  3506     020E                     	;# 
  3507     020F                     	;# 
  3508     020F                     	;# 
  3509     0210                     	;# 
  3510     0210                     	;# 
  3511     0211                     	;# 
  3512     0211                     	;# 
  3513     0212                     	;# 
  3514     0213                     	;# 
  3515     0214                     	;# 
  3516     0214                     	;# 
  3517     0215                     	;# 
  3518     0215                     	;# 
  3519     0216                     	;# 
  3520     0216                     	;# 
  3521     0217                     	;# 
  3522     0217                     	;# 
  3523     0218                     	;# 
  3524     0219                     	;# 
  3525     021A                     	;# 
  3526     021A                     	;# 
  3527     021B                     	;# 
  3528     021B                     	;# 
  3529     021C                     	;# 
  3530     021C                     	;# 
  3531     021D                     	;# 
  3532     021D                     	;# 
  3533     021E                     	;# 
  3534     021F                     	;# 
  3535     028C                     	;# 
  3536     028C                     	;# 
  3537     028D                     	;# 
  3538     028D                     	;# 
  3539     028E                     	;# 
  3540     028F                     	;# 
  3541     0290                     	;# 
  3542     0291                     	;# 
  3543     0292                     	;# 
  3544     0292                     	;# 
  3545     0293                     	;# 
  3546     0293                     	;# 
  3547     0294                     	;# 
  3548     0295                     	;# 
  3549     0296                     	;# 
  3550     0297                     	;# 
  3551     0298                     	;# 
  3552     0298                     	;# 
  3553     0299                     	;# 
  3554     0299                     	;# 
  3555     029A                     	;# 
  3556     029B                     	;# 
  3557     029C                     	;# 
  3558     029D                     	;# 
  3559     029F                     	;# 
  3560     030C                     	;# 
  3561     030C                     	;# 
  3562     030D                     	;# 
  3563     030E                     	;# 
  3564     030F                     	;# 
  3565     0310                     	;# 
  3566     0310                     	;# 
  3567     0311                     	;# 
  3568     0312                     	;# 
  3569     0313                     	;# 
  3570     0314                     	;# 
  3571     0314                     	;# 
  3572     0315                     	;# 
  3573     0316                     	;# 
  3574     0317                     	;# 
  3575     0318                     	;# 
  3576     0318                     	;# 
  3577     0319                     	;# 
  3578     031A                     	;# 
  3579     031B                     	;# 
  3580     031C                     	;# 
  3581     031C                     	;# 
  3582     031D                     	;# 
  3583     031E                     	;# 
  3584     031F                     	;# 
  3585     038C                     	;# 
  3586     038C                     	;# 
  3587     038D                     	;# 
  3588     038E                     	;# 
  3589     0390                     	;# 
  3590     0390                     	;# 
  3591     0391                     	;# 
  3592     0392                     	;# 
  3593     048C                     	;# 
  3594     048C                     	;# 
  3595     048D                     	;# 
  3596     048E                     	;# 
  3597     048F                     	;# 
  3598     048F                     	;# 
  3599     0490                     	;# 
  3600     0491                     	;# 
  3601     0492                     	;# 
  3602     0492                     	;# 
  3603     0493                     	;# 
  3604     0494                     	;# 
  3605     0495                     	;# 
  3606     0495                     	;# 
  3607     0496                     	;# 
  3608     0497                     	;# 
  3609     0498                     	;# 
  3610     0499                     	;# 
  3611     049A                     	;# 
  3612     049B                     	;# 
  3613     049C                     	;# 
  3614     049D                     	;# 
  3615     050C                     	;# 
  3616     050C                     	;# 
  3617     050D                     	;# 
  3618     050E                     	;# 
  3619     050F                     	;# 
  3620     050F                     	;# 
  3621     0510                     	;# 
  3622     0511                     	;# 
  3623     0512                     	;# 
  3624     0512                     	;# 
  3625     0513                     	;# 
  3626     0514                     	;# 
  3627     0515                     	;# 
  3628     0515                     	;# 
  3629     0516                     	;# 
  3630     0517                     	;# 
  3631     0518                     	;# 
  3632     0519                     	;# 
  3633     051A                     	;# 
  3634     051B                     	;# 
  3635     051C                     	;# 
  3636     051D                     	;# 
  3637     058C                     	;# 
  3638     058C                     	;# 
  3639     058D                     	;# 
  3640     058E                     	;# 
  3641     058F                     	;# 
  3642     058F                     	;# 
  3643     0590                     	;# 
  3644     0591                     	;# 
  3645     0592                     	;# 
  3646     0593                     	;# 
  3647     059C                     	;# 
  3648     059C                     	;# 
  3649     059D                     	;# 
  3650     059D                     	;# 
  3651     059E                     	;# 
  3652     059F                     	;# 
  3653     060C                     	;# 
  3654     060C                     	;# 
  3655     060D                     	;# 
  3656     060D                     	;# 
  3657     060E                     	;# 
  3658     060F                     	;# 
  3659     0610                     	;# 
  3660     0611                     	;# 
  3661     0612                     	;# 
  3662     0613                     	;# 
  3663     0614                     	;# 
  3664     0616                     	;# 
  3665     0616                     	;# 
  3666     0617                     	;# 
  3667     0617                     	;# 
  3668     0618                     	;# 
  3669     0619                     	;# 
  3670     061A                     	;# 
  3671     061B                     	;# 
  3672     061C                     	;# 
  3673     061D                     	;# 
  3674     061E                     	;# 
  3675     068C                     	;# 
  3676     068D                     	;# 
  3677     068E                     	;# 
  3678     068F                     	;# 
  3679     0690                     	;# 
  3680     0691                     	;# 
  3681     0692                     	;# 
  3682     0693                     	;# 
  3683     0694                     	;# 
  3684     070C                     	;# 
  3685     070D                     	;# 
  3686     070E                     	;# 
  3687     070F                     	;# 
  3688     0710                     	;# 
  3689     0711                     	;# 
  3690     0712                     	;# 
  3691     0713                     	;# 
  3692     0714                     	;# 
  3693     0716                     	;# 
  3694     0717                     	;# 
  3695     0718                     	;# 
  3696     0719                     	;# 
  3697     071A                     	;# 
  3698     071B                     	;# 
  3699     071C                     	;# 
  3700     071D                     	;# 
  3701     071E                     	;# 
  3702     0796                     	;# 
  3703     0797                     	;# 
  3704     0798                     	;# 
  3705     0799                     	;# 
  3706     079A                     	;# 
  3707     079B                     	;# 
  3708     079C                     	;# 
  3709     079D                     	;# 
  3710     080C                     	;# 
  3711     080D                     	;# 
  3712     080E                     	;# 
  3713     080F                     	;# 
  3714     0810                     	;# 
  3715     0811                     	;# 
  3716     0813                     	;# 
  3717     0814                     	;# 
  3718     081A                     	;# 
  3719     081A                     	;# 
  3720     081B                     	;# 
  3721     081C                     	;# 
  3722     081C                     	;# 
  3723     081D                     	;# 
  3724     081E                     	;# 
  3725     081F                     	;# 
  3726     088C                     	;# 
  3727     088D                     	;# 
  3728     088E                     	;# 
  3729     088F                     	;# 
  3730     0890                     	;# 
  3731     0891                     	;# 
  3732     0892                     	;# 
  3733     0893                     	;# 
  3734     0895                     	;# 
  3735     0896                     	;# 
  3736     0897                     	;# 
  3737     0898                     	;# 
  3738     0899                     	;# 
  3739     089A                     	;# 
  3740     089B                     	;# 
  3741     090C                     	;# 
  3742     090E                     	;# 
  3743     090F                     	;# 
  3744     091F                     	;# 
  3745     098F                     	;# 
  3746     098F                     	;# 
  3747     0990                     	;# 
  3748     0991                     	;# 
  3749     0992                     	;# 
  3750     0993                     	;# 
  3751     0994                     	;# 
  3752     0995                     	;# 
  3753     0996                     	;# 
  3754     0997                     	;# 
  3755     0A19                     	;# 
  3756     0A19                     	;# 
  3757     0A1A                     	;# 
  3758     0A1A                     	;# 
  3759     0A1B                     	;# 
  3760     0A1B                     	;# 
  3761     0A1B                     	;# 
  3762     0A1C                     	;# 
  3763     0A1C                     	;# 
  3764     0A1D                     	;# 
  3765     0A1D                     	;# 
  3766     0A1E                     	;# 
  3767     0A1E                     	;# 
  3768     0A1F                     	;# 
  3769     0A1F                     	;# 
  3770     0A1F                     	;# 
  3771     1E0F                     	;# 
  3772     1E10                     	;# 
  3773     1E11                     	;# 
  3774     1E12                     	;# 
  3775     1E13                     	;# 
  3776     1E14                     	;# 
  3777     1E15                     	;# 
  3778     1E16                     	;# 
  3779     1E17                     	;# 
  3780     1E18                     	;# 
  3781     1E19                     	;# 
  3782     1E1A                     	;# 
  3783     1E1B                     	;# 
  3784     1E1C                     	;# 
  3785     1E1D                     	;# 
  3786     1E1E                     	;# 
  3787     1E1F                     	;# 
  3788     1E20                     	;# 
  3789     1E21                     	;# 
  3790     1E22                     	;# 
  3791     1E23                     	;# 
  3792     1E24                     	;# 
  3793     1E25                     	;# 
  3794     1E26                     	;# 
  3795     1E27                     	;# 
  3796     1E28                     	;# 
  3797     1E29                     	;# 
  3798     1E2A                     	;# 
  3799     1E2B                     	;# 
  3800     1E2C                     	;# 
  3801     1E2D                     	;# 
  3802     1E2E                     	;# 
  3803     1E2F                     	;# 
  3804     1E30                     	;# 
  3805     1E31                     	;# 
  3806     1E32                     	;# 
  3807     1E33                     	;# 
  3808     1E34                     	;# 
  3809     1E35                     	;# 
  3810     1E36                     	;# 
  3811     1E37                     	;# 
  3812     1E8F                     	;# 
  3813     1E90                     	;# 
  3814     1E91                     	;# 
  3815     1E92                     	;# 
  3816     1E93                     	;# 
  3817     1E94                     	;# 
  3818     1E95                     	;# 
  3819     1E96                     	;# 
  3820     1E97                     	;# 
  3821     1E9C                     	;# 
  3822     1E9D                     	;# 
  3823     1E9E                     	;# 
  3824     1EA1                     	;# 
  3825     1EA2                     	;# 
  3826     1EA3                     	;# 
  3827     1EA4                     	;# 
  3828     1EA5                     	;# 
  3829     1EA9                     	;# 
  3830     1EAA                     	;# 
  3831     1EAB                     	;# 
  3832     1EAC                     	;# 
  3833     1EB1                     	;# 
  3834     1EB2                     	;# 
  3835     1EB3                     	;# 
  3836     1EB8                     	;# 
  3837     1EB9                     	;# 
  3838     1EBA                     	;# 
  3839     1EBB                     	;# 
  3840     1EBC                     	;# 
  3841     1EBD                     	;# 
  3842     1EBE                     	;# 
  3843     1EC3                     	;# 
  3844     1EC5                     	;# 
  3845     1EC6                     	;# 
  3846     1EC7                     	;# 
  3847     1EC8                     	;# 
  3848     1EC9                     	;# 
  3849     1ECA                     	;# 
  3850     1ECB                     	;# 
  3851     1ECC                     	;# 
  3852     1ECD                     	;# 
  3853     1ECE                     	;# 
  3854     1F10                     	;# 
  3855     1F11                     	;# 
  3856     1F12                     	;# 
  3857     1F13                     	;# 
  3858     1F14                     	;# 
  3859     1F15                     	;# 
  3860     1F16                     	;# 
  3861     1F17                     	;# 
  3862     1F18                     	;# 
  3863     1F19                     	;# 
  3864     1F1A                     	;# 
  3865     1F1B                     	;# 
  3866     1F1C                     	;# 
  3867     1F1D                     	;# 
  3868     1F1E                     	;# 
  3869     1F1F                     	;# 
  3870     1F20                     	;# 
  3871     1F21                     	;# 
  3872     1F22                     	;# 
  3873     1F23                     	;# 
  3874     1F24                     	;# 
  3875     1F25                     	;# 
  3876     1F26                     	;# 
  3877     1F27                     	;# 
  3878     1F38                     	;# 
  3879     1F39                     	;# 
  3880     1F3A                     	;# 
  3881     1F3B                     	;# 
  3882     1F3C                     	;# 
  3883     1F3D                     	;# 
  3884     1F3E                     	;# 
  3885     1F3F                     	;# 
  3886     1F43                     	;# 
  3887     1F44                     	;# 
  3888     1F45                     	;# 
  3889     1F46                     	;# 
  3890     1F47                     	;# 
  3891     1F48                     	;# 
  3892     1F49                     	;# 
  3893     1F4A                     	;# 
  3894     1F4E                     	;# 
  3895     1F4F                     	;# 
  3896     1F50                     	;# 
  3897     1F51                     	;# 
  3898     1F52                     	;# 
  3899     1F53                     	;# 
  3900     1F54                     	;# 
  3901     1F55                     	;# 
  3902     1F65                     	;# 
  3903     1F66                     	;# 
  3904     1F67                     	;# 
  3905     1F68                     	;# 
  3906     1F69                     	;# 
  3907     1F6A                     	;# 
  3908     1F6B                     	;# 
  3909     1FE4                     	;# 
  3910     1FE5                     	;# 
  3911     1FE6                     	;# 
  3912     1FE7                     	;# 
  3913     1FE8                     	;# 
  3914     1FE8                     	;# 
  3915     1FE9                     	;# 
  3916     1FEA                     	;# 
  3917     1FEB                     	;# 
  3918     1FED                     	;# 
  3919     1FEE                     	;# 
  3920     1FEF                     	;# 
  3921     0000                     	;# 
  3922     0001                     	;# 
  3923     0002                     	;# 
  3924     0003                     	;# 
  3925     0004                     	;# 
  3926     0005                     	;# 
  3927     0006                     	;# 
  3928     0007                     	;# 
  3929     0008                     	;# 
  3930     0009                     	;# 
  3931     000A                     	;# 
  3932     000B                     	;# 
  3933     000C                     	;# 
  3934     000D                     	;# 
  3935     000E                     	;# 
  3936     0010                     	;# 
  3937     0012                     	;# 
  3938     0013                     	;# 
  3939     0014                     	;# 
  3940     0016                     	;# 
  3941     0018                     	;# 
  3942     0019                     	;# 
  3943     001A                     	;# 
  3944     001C                     	;# 
  3945     008C                     	;# 
  3946     008C                     	;# 
  3947     008D                     	;# 
  3948     008E                     	;# 
  3949     008E                     	;# 
  3950     008F                     	;# 
  3951     0090                     	;# 
  3952     0090                     	;# 
  3953     0091                     	;# 
  3954     0092                     	;# 
  3955     0092                     	;# 
  3956     0093                     	;# 
  3957     0094                     	;# 
  3958     0094                     	;# 
  3959     0095                     	;# 
  3960     0096                     	;# 
  3961     0096                     	;# 
  3962     0097                     	;# 
  3963     0098                     	;# 
  3964     0099                     	;# 
  3965     009A                     	;# 
  3966     009B                     	;# 
  3967     009B                     	;# 
  3968     009C                     	;# 
  3969     009D                     	;# 
  3970     009D                     	;# 
  3971     009E                     	;# 
  3972     009F                     	;# 
  3973     010C                     	;# 
  3974     010C                     	;# 
  3975     010D                     	;# 
  3976     010E                     	;# 
  3977     010F                     	;# 
  3978     010F                     	;# 
  3979     0110                     	;# 
  3980     0111                     	;# 
  3981     0112                     	;# 
  3982     0113                     	;# 
  3983     0114                     	;# 
  3984     0115                     	;# 
  3985     0116                     	;# 
  3986     0117                     	;# 
  3987     0118                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     0119                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011A                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011C                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011D                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011E                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     018C                     	;# 
  4014     018D                     	;# 
  4015     018E                     	;# 
  4016     018F                     	;# 
  4017     0190                     	;# 
  4018     0191                     	;# 
  4019     0192                     	;# 
  4020     0196                     	;# 
  4021     0197                     	;# 
  4022     0198                     	;# 
  4023     0199                     	;# 
  4024     019A                     	;# 
  4025     019B                     	;# 
  4026     019C                     	;# 
  4027     020C                     	;# 
  4028     020D                     	;# 
  4029     020E                     	;# 
  4030     020E                     	;# 
  4031     020F                     	;# 
  4032     020F                     	;# 
  4033     0210                     	;# 
  4034     0210                     	;# 
  4035     0211                     	;# 
  4036     0211                     	;# 
  4037     0212                     	;# 
  4038     0213                     	;# 
  4039     0214                     	;# 
  4040     0214                     	;# 
  4041     0215                     	;# 
  4042     0215                     	;# 
  4043     0216                     	;# 
  4044     0216                     	;# 
  4045     0217                     	;# 
  4046     0217                     	;# 
  4047     0218                     	;# 
  4048     0219                     	;# 
  4049     021A                     	;# 
  4050     021A                     	;# 
  4051     021B                     	;# 
  4052     021B                     	;# 
  4053     021C                     	;# 
  4054     021C                     	;# 
  4055     021D                     	;# 
  4056     021D                     	;# 
  4057     021E                     	;# 
  4058     021F                     	;# 
  4059     028C                     	;# 
  4060     028C                     	;# 
  4061     028D                     	;# 
  4062     028D                     	;# 
  4063     028E                     	;# 
  4064     028F                     	;# 
  4065     0290                     	;# 
  4066     0291                     	;# 
  4067     0292                     	;# 
  4068     0292                     	;# 
  4069     0293                     	;# 
  4070     0293                     	;# 
  4071     0294                     	;# 
  4072     0295                     	;# 
  4073     0296                     	;# 
  4074     0297                     	;# 
  4075     0298                     	;# 
  4076     0298                     	;# 
  4077     0299                     	;# 
  4078     0299                     	;# 
  4079     029A                     	;# 
  4080     029B                     	;# 
  4081     029C                     	;# 
  4082     029D                     	;# 
  4083     029F                     	;# 
  4084     030C                     	;# 
  4085     030C                     	;# 
  4086     030D                     	;# 
  4087     030E                     	;# 
  4088     030F                     	;# 
  4089     0310                     	;# 
  4090     0310                     	;# 
  4091     0311                     	;# 
  4092     0312                     	;# 
  4093     0313                     	;# 
  4094     0314                     	;# 
  4095     0314                     	;# 
  4096     0315                     	;# 
  4097     0316                     	;# 
  4098     0317                     	;# 
  4099     0318                     	;# 
  4100     0318                     	;# 
  4101     0319                     	;# 
  4102     031A                     	;# 
  4103     031B                     	;# 
  4104     031C                     	;# 
  4105     031C                     	;# 
  4106     031D                     	;# 
  4107     031E                     	;# 
  4108     031F                     	;# 
  4109     038C                     	;# 
  4110     038C                     	;# 
  4111     038D                     	;# 
  4112     038E                     	;# 
  4113     0390                     	;# 
  4114     0390                     	;# 
  4115     0391                     	;# 
  4116     0392                     	;# 
  4117     048C                     	;# 
  4118     048C                     	;# 
  4119     048D                     	;# 
  4120     048E                     	;# 
  4121     048F                     	;# 
  4122     048F                     	;# 
  4123     0490                     	;# 
  4124     0491                     	;# 
  4125     0492                     	;# 
  4126     0492                     	;# 
  4127     0493                     	;# 
  4128     0494                     	;# 
  4129     0495                     	;# 
  4130     0495                     	;# 
  4131     0496                     	;# 
  4132     0497                     	;# 
  4133     0498                     	;# 
  4134     0499                     	;# 
  4135     049A                     	;# 
  4136     049B                     	;# 
  4137     049C                     	;# 
  4138     049D                     	;# 
  4139     050C                     	;# 
  4140     050C                     	;# 
  4141     050D                     	;# 
  4142     050E                     	;# 
  4143     050F                     	;# 
  4144     050F                     	;# 
  4145     0510                     	;# 
  4146     0511                     	;# 
  4147     0512                     	;# 
  4148     0512                     	;# 
  4149     0513                     	;# 
  4150     0514                     	;# 
  4151     0515                     	;# 
  4152     0515                     	;# 
  4153     0516                     	;# 
  4154     0517                     	;# 
  4155     0518                     	;# 
  4156     0519                     	;# 
  4157     051A                     	;# 
  4158     051B                     	;# 
  4159     051C                     	;# 
  4160     051D                     	;# 
  4161     058C                     	;# 
  4162     058C                     	;# 
  4163     058D                     	;# 
  4164     058E                     	;# 
  4165     058F                     	;# 
  4166     058F                     	;# 
  4167     0590                     	;# 
  4168     0591                     	;# 
  4169     0592                     	;# 
  4170     0593                     	;# 
  4171     059C                     	;# 
  4172     059C                     	;# 
  4173     059D                     	;# 
  4174     059D                     	;# 
  4175     059E                     	;# 
  4176     059F                     	;# 
  4177     060C                     	;# 
  4178     060C                     	;# 
  4179     060D                     	;# 
  4180     060D                     	;# 
  4181     060E                     	;# 
  4182     060F                     	;# 
  4183     0610                     	;# 
  4184     0611                     	;# 
  4185     0612                     	;# 
  4186     0613                     	;# 
  4187     0614                     	;# 
  4188     0616                     	;# 
  4189     0616                     	;# 
  4190     0617                     	;# 
  4191     0617                     	;# 
  4192     0618                     	;# 
  4193     0619                     	;# 
  4194     061A                     	;# 
  4195     061B                     	;# 
  4196     061C                     	;# 
  4197     061D                     	;# 
  4198     061E                     	;# 
  4199     068C                     	;# 
  4200     068D                     	;# 
  4201     068E                     	;# 
  4202     068F                     	;# 
  4203     0690                     	;# 
  4204     0691                     	;# 
  4205     0692                     	;# 
  4206     0693                     	;# 
  4207     0694                     	;# 
  4208     070C                     	;# 
  4209     070D                     	;# 
  4210     070E                     	;# 
  4211     070F                     	;# 
  4212     0710                     	;# 
  4213     0711                     	;# 
  4214     0712                     	;# 
  4215     0713                     	;# 
  4216     0714                     	;# 
  4217     0716                     	;# 
  4218     0717                     	;# 
  4219     0718                     	;# 
  4220     0719                     	;# 
  4221     071A                     	;# 
  4222     071B                     	;# 
  4223     071C                     	;# 
  4224     071D                     	;# 
  4225     071E                     	;# 
  4226     0796                     	;# 
  4227     0797                     	;# 
  4228     0798                     	;# 
  4229     0799                     	;# 
  4230     079A                     	;# 
  4231     079B                     	;# 
  4232     079C                     	;# 
  4233     079D                     	;# 
  4234     080C                     	;# 
  4235     080D                     	;# 
  4236     080E                     	;# 
  4237     080F                     	;# 
  4238     0810                     	;# 
  4239     0811                     	;# 
  4240     0813                     	;# 
  4241     0814                     	;# 
  4242     081A                     	;# 
  4243     081A                     	;# 
  4244     081B                     	;# 
  4245     081C                     	;# 
  4246     081C                     	;# 
  4247     081D                     	;# 
  4248     081E                     	;# 
  4249     081F                     	;# 
  4250     088C                     	;# 
  4251     088D                     	;# 
  4252     088E                     	;# 
  4253     088F                     	;# 
  4254     0890                     	;# 
  4255     0891                     	;# 
  4256     0892                     	;# 
  4257     0893                     	;# 
  4258     0895                     	;# 
  4259     0896                     	;# 
  4260     0897                     	;# 
  4261     0898                     	;# 
  4262     0899                     	;# 
  4263     089A                     	;# 
  4264     089B                     	;# 
  4265     090C                     	;# 
  4266     090E                     	;# 
  4267     090F                     	;# 
  4268     091F                     	;# 
  4269     098F                     	;# 
  4270     098F                     	;# 
  4271     0990                     	;# 
  4272     0991                     	;# 
  4273     0992                     	;# 
  4274     0993                     	;# 
  4275     0994                     	;# 
  4276     0995                     	;# 
  4277     0996                     	;# 
  4278     0997                     	;# 
  4279     0A19                     	;# 
  4280     0A19                     	;# 
  4281     0A1A                     	;# 
  4282     0A1A                     	;# 
  4283     0A1B                     	;# 
  4284     0A1B                     	;# 
  4285     0A1B                     	;# 
  4286     0A1C                     	;# 
  4287     0A1C                     	;# 
  4288     0A1D                     	;# 
  4289     0A1D                     	;# 
  4290     0A1E                     	;# 
  4291     0A1E                     	;# 
  4292     0A1F                     	;# 
  4293     0A1F                     	;# 
  4294     0A1F                     	;# 
  4295     1E0F                     	;# 
  4296     1E10                     	;# 
  4297     1E11                     	;# 
  4298     1E12                     	;# 
  4299     1E13                     	;# 
  4300     1E14                     	;# 
  4301     1E15                     	;# 
  4302     1E16                     	;# 
  4303     1E17                     	;# 
  4304     1E18                     	;# 
  4305     1E19                     	;# 
  4306     1E1A                     	;# 
  4307     1E1B                     	;# 
  4308     1E1C                     	;# 
  4309     1E1D                     	;# 
  4310     1E1E                     	;# 
  4311     1E1F                     	;# 
  4312     1E20                     	;# 
  4313     1E21                     	;# 
  4314     1E22                     	;# 
  4315     1E23                     	;# 
  4316     1E24                     	;# 
  4317     1E25                     	;# 
  4318     1E26                     	;# 
  4319     1E27                     	;# 
  4320     1E28                     	;# 
  4321     1E29                     	;# 
  4322     1E2A                     	;# 
  4323     1E2B                     	;# 
  4324     1E2C                     	;# 
  4325     1E2D                     	;# 
  4326     1E2E                     	;# 
  4327     1E2F                     	;# 
  4328     1E30                     	;# 
  4329     1E31                     	;# 
  4330     1E32                     	;# 
  4331     1E33                     	;# 
  4332     1E34                     	;# 
  4333     1E35                     	;# 
  4334     1E36                     	;# 
  4335     1E37                     	;# 
  4336     1E8F                     	;# 
  4337     1E90                     	;# 
  4338     1E91                     	;# 
  4339     1E92                     	;# 
  4340     1E93                     	;# 
  4341     1E94                     	;# 
  4342     1E95                     	;# 
  4343     1E96                     	;# 
  4344     1E97                     	;# 
  4345     1E9C                     	;# 
  4346     1E9D                     	;# 
  4347     1E9E                     	;# 
  4348     1EA1                     	;# 
  4349     1EA2                     	;# 
  4350     1EA3                     	;# 
  4351     1EA4                     	;# 
  4352     1EA5                     	;# 
  4353     1EA9                     	;# 
  4354     1EAA                     	;# 
  4355     1EAB                     	;# 
  4356     1EAC                     	;# 
  4357     1EB1                     	;# 
  4358     1EB2                     	;# 
  4359     1EB3                     	;# 
  4360     1EB8                     	;# 
  4361     1EB9                     	;# 
  4362     1EBA                     	;# 
  4363     1EBB                     	;# 
  4364     1EBC                     	;# 
  4365     1EBD                     	;# 
  4366     1EBE                     	;# 
  4367     1EC3                     	;# 
  4368     1EC5                     	;# 
  4369     1EC6                     	;# 
  4370     1EC7                     	;# 
  4371     1EC8                     	;# 
  4372     1EC9                     	;# 
  4373     1ECA                     	;# 
  4374     1ECB                     	;# 
  4375     1ECC                     	;# 
  4376     1ECD                     	;# 
  4377     1ECE                     	;# 
  4378     1F10                     	;# 
  4379     1F11                     	;# 
  4380     1F12                     	;# 
  4381     1F13                     	;# 
  4382     1F14                     	;# 
  4383     1F15                     	;# 
  4384     1F16                     	;# 
  4385     1F17                     	;# 
  4386     1F18                     	;# 
  4387     1F19                     	;# 
  4388     1F1A                     	;# 
  4389     1F1B                     	;# 
  4390     1F1C                     	;# 
  4391     1F1D                     	;# 
  4392     1F1E                     	;# 
  4393     1F1F                     	;# 
  4394     1F20                     	;# 
  4395     1F21                     	;# 
  4396     1F22                     	;# 
  4397     1F23                     	;# 
  4398     1F24                     	;# 
  4399     1F25                     	;# 
  4400     1F26                     	;# 
  4401     1F27                     	;# 
  4402     1F38                     	;# 
  4403     1F39                     	;# 
  4404     1F3A                     	;# 
  4405     1F3B                     	;# 
  4406     1F3C                     	;# 
  4407     1F3D                     	;# 
  4408     1F3E                     	;# 
  4409     1F3F                     	;# 
  4410     1F43                     	;# 
  4411     1F44                     	;# 
  4412     1F45                     	;# 
  4413     1F46                     	;# 
  4414     1F47                     	;# 
  4415     1F48                     	;# 
  4416     1F49                     	;# 
  4417     1F4A                     	;# 
  4418     1F4E                     	;# 
  4419     1F4F                     	;# 
  4420     1F50                     	;# 
  4421     1F51                     	;# 
  4422     1F52                     	;# 
  4423     1F53                     	;# 
  4424     1F54                     	;# 
  4425     1F55                     	;# 
  4426     1F65                     	;# 
  4427     1F66                     	;# 
  4428     1F67                     	;# 
  4429     1F68                     	;# 
  4430     1F69                     	;# 
  4431     1F6A                     	;# 
  4432     1F6B                     	;# 
  4433     1FE4                     	;# 
  4434     1FE5                     	;# 
  4435     1FE6                     	;# 
  4436     1FE7                     	;# 
  4437     1FE8                     	;# 
  4438     1FE8                     	;# 
  4439     1FE9                     	;# 
  4440     1FEA                     	;# 
  4441     1FEB                     	;# 
  4442     1FED                     	;# 
  4443     1FEE                     	;# 
  4444     1FEF                     	;# 
  4445     0000                     	;# 
  4446     0001                     	;# 
  4447     0002                     	;# 
  4448     0003                     	;# 
  4449     0004                     	;# 
  4450     0005                     	;# 
  4451     0006                     	;# 
  4452     0007                     	;# 
  4453     0008                     	;# 
  4454     0009                     	;# 
  4455     000A                     	;# 
  4456     000B                     	;# 
  4457     000C                     	;# 
  4458     000D                     	;# 
  4459     000E                     	;# 
  4460     0010                     	;# 
  4461     0012                     	;# 
  4462     0013                     	;# 
  4463     0014                     	;# 
  4464     0016                     	;# 
  4465     0018                     	;# 
  4466     0019                     	;# 
  4467     001A                     	;# 
  4468     001C                     	;# 
  4469     008C                     	;# 
  4470     008C                     	;# 
  4471     008D                     	;# 
  4472     008E                     	;# 
  4473     008E                     	;# 
  4474     008F                     	;# 
  4475     0090                     	;# 
  4476     0090                     	;# 
  4477     0091                     	;# 
  4478     0092                     	;# 
  4479     0092                     	;# 
  4480     0093                     	;# 
  4481     0094                     	;# 
  4482     0094                     	;# 
  4483     0095                     	;# 
  4484     0096                     	;# 
  4485     0096                     	;# 
  4486     0097                     	;# 
  4487     0098                     	;# 
  4488     0099                     	;# 
  4489     009A                     	;# 
  4490     009B                     	;# 
  4491     009B                     	;# 
  4492     009C                     	;# 
  4493     009D                     	;# 
  4494     009D                     	;# 
  4495     009E                     	;# 
  4496     009F                     	;# 
  4497     010C                     	;# 
  4498     010C                     	;# 
  4499     010D                     	;# 
  4500     010E                     	;# 
  4501     010F                     	;# 
  4502     010F                     	;# 
  4503     0110                     	;# 
  4504     0111                     	;# 
  4505     0112                     	;# 
  4506     0113                     	;# 
  4507     0114                     	;# 
  4508     0115                     	;# 
  4509     0116                     	;# 
  4510     0117                     	;# 
  4511     0118                     	;# 
  4512     0119                     	;# 
  4513     0119                     	;# 
  4514     0119                     	;# 
  4515     011A                     	;# 
  4516     011A                     	;# 
  4517     011A                     	;# 
  4518     011B                     	;# 
  4519     011B                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011C                     	;# 
  4524     011C                     	;# 
  4525     011C                     	;# 
  4526     011D                     	;# 
  4527     011D                     	;# 
  4528     011D                     	;# 
  4529     011E                     	;# 
  4530     011E                     	;# 
  4531     011E                     	;# 
  4532     011F                     	;# 
  4533     011F                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     018C                     	;# 
  4538     018D                     	;# 
  4539     018E                     	;# 
  4540     018F                     	;# 
  4541     0190                     	;# 
  4542     0191                     	;# 
  4543     0192                     	;# 
  4544     0196                     	;# 
  4545     0197                     	;# 
  4546     0198                     	;# 
  4547     0199                     	;# 
  4548     019A                     	;# 
  4549     019B                     	;# 
  4550     019C                     	;# 
  4551     020C                     	;# 
  4552     020D                     	;# 
  4553     020E                     	;# 
  4554     020E                     	;# 
  4555     020F                     	;# 
  4556     020F                     	;# 
  4557     0210                     	;# 
  4558     0210                     	;# 
  4559     0211                     	;# 
  4560     0211                     	;# 
  4561     0212                     	;# 
  4562     0213                     	;# 
  4563     0214                     	;# 
  4564     0214                     	;# 
  4565     0215                     	;# 
  4566     0215                     	;# 
  4567     0216                     	;# 
  4568     0216                     	;# 
  4569     0217                     	;# 
  4570     0217                     	;# 
  4571     0218                     	;# 
  4572     0219                     	;# 
  4573     021A                     	;# 
  4574     021A                     	;# 
  4575     021B                     	;# 
  4576     021B                     	;# 
  4577     021C                     	;# 
  4578     021C                     	;# 
  4579     021D                     	;# 
  4580     021D                     	;# 
  4581     021E                     	;# 
  4582     021F                     	;# 
  4583     028C                     	;# 
  4584     028C                     	;# 
  4585     028D                     	;# 
  4586     028D                     	;# 
  4587     028E                     	;# 
  4588     028F                     	;# 
  4589     0290                     	;# 
  4590     0291                     	;# 
  4591     0292                     	;# 
  4592     0292                     	;# 
  4593     0293                     	;# 
  4594     0293                     	;# 
  4595     0294                     	;# 
  4596     0295                     	;# 
  4597     0296                     	;# 
  4598     0297                     	;# 
  4599     0298                     	;# 
  4600     0298                     	;# 
  4601     0299                     	;# 
  4602     0299                     	;# 
  4603     029A                     	;# 
  4604     029B                     	;# 
  4605     029C                     	;# 
  4606     029D                     	;# 
  4607     029F                     	;# 
  4608     030C                     	;# 
  4609     030C                     	;# 
  4610     030D                     	;# 
  4611     030E                     	;# 
  4612     030F                     	;# 
  4613     0310                     	;# 
  4614     0310                     	;# 
  4615     0311                     	;# 
  4616     0312                     	;# 
  4617     0313                     	;# 
  4618     0314                     	;# 
  4619     0314                     	;# 
  4620     0315                     	;# 
  4621     0316                     	;# 
  4622     0317                     	;# 
  4623     0318                     	;# 
  4624     0318                     	;# 
  4625     0319                     	;# 
  4626     031A                     	;# 
  4627     031B                     	;# 
  4628     031C                     	;# 
  4629     031C                     	;# 
  4630     031D                     	;# 
  4631     031E                     	;# 
  4632     031F                     	;# 
  4633     038C                     	;# 
  4634     038C                     	;# 
  4635     038D                     	;# 
  4636     038E                     	;# 
  4637     0390                     	;# 
  4638     0390                     	;# 
  4639     0391                     	;# 
  4640     0392                     	;# 
  4641     048C                     	;# 
  4642     048C                     	;# 
  4643     048D                     	;# 
  4644     048E                     	;# 
  4645     048F                     	;# 
  4646     048F                     	;# 
  4647     0490                     	;# 
  4648     0491                     	;# 
  4649     0492                     	;# 
  4650     0492                     	;# 
  4651     0493                     	;# 
  4652     0494                     	;# 
  4653     0495                     	;# 
  4654     0495                     	;# 
  4655     0496                     	;# 
  4656     0497                     	;# 
  4657     0498                     	;# 
  4658     0499                     	;# 
  4659     049A                     	;# 
  4660     049B                     	;# 
  4661     049C                     	;# 
  4662     049D                     	;# 
  4663     050C                     	;# 
  4664     050C                     	;# 
  4665     050D                     	;# 
  4666     050E                     	;# 
  4667     050F                     	;# 
  4668     050F                     	;# 
  4669     0510                     	;# 
  4670     0511                     	;# 
  4671     0512                     	;# 
  4672     0512                     	;# 
  4673     0513                     	;# 
  4674     0514                     	;# 
  4675     0515                     	;# 
  4676     0515                     	;# 
  4677     0516                     	;# 
  4678     0517                     	;# 
  4679     0518                     	;# 
  4680     0519                     	;# 
  4681     051A                     	;# 
  4682     051B                     	;# 
  4683     051C                     	;# 
  4684     051D                     	;# 
  4685     058C                     	;# 
  4686     058C                     	;# 
  4687     058D                     	;# 
  4688     058E                     	;# 
  4689     058F                     	;# 
  4690     058F                     	;# 
  4691     0590                     	;# 
  4692     0591                     	;# 
  4693     0592                     	;# 
  4694     0593                     	;# 
  4695     059C                     	;# 
  4696     059C                     	;# 
  4697     059D                     	;# 
  4698     059D                     	;# 
  4699     059E                     	;# 
  4700     059F                     	;# 
  4701     060C                     	;# 
  4702     060C                     	;# 
  4703     060D                     	;# 
  4704     060D                     	;# 
  4705     060E                     	;# 
  4706     060F                     	;# 
  4707     0610                     	;# 
  4708     0611                     	;# 
  4709     0612                     	;# 
  4710     0613                     	;# 
  4711     0614                     	;# 
  4712     0616                     	;# 
  4713     0616                     	;# 
  4714     0617                     	;# 
  4715     0617                     	;# 
  4716     0618                     	;# 
  4717     0619                     	;# 
  4718     061A                     	;# 
  4719     061B                     	;# 
  4720     061C                     	;# 
  4721     061D                     	;# 
  4722     061E                     	;# 
  4723     068C                     	;# 
  4724     068D                     	;# 
  4725     068E                     	;# 
  4726     068F                     	;# 
  4727     0690                     	;# 
  4728     0691                     	;# 
  4729     0692                     	;# 
  4730     0693                     	;# 
  4731     0694                     	;# 
  4732     070C                     	;# 
  4733     070D                     	;# 
  4734     070E                     	;# 
  4735     070F                     	;# 
  4736     0710                     	;# 
  4737     0711                     	;# 
  4738     0712                     	;# 
  4739     0713                     	;# 
  4740     0714                     	;# 
  4741     0716                     	;# 
  4742     0717                     	;# 
  4743     0718                     	;# 
  4744     0719                     	;# 
  4745     071A                     	;# 
  4746     071B                     	;# 
  4747     071C                     	;# 
  4748     071D                     	;# 
  4749     071E                     	;# 
  4750     0796                     	;# 
  4751     0797                     	;# 
  4752     0798                     	;# 
  4753     0799                     	;# 
  4754     079A                     	;# 
  4755     079B                     	;# 
  4756     079C                     	;# 
  4757     079D                     	;# 
  4758     080C                     	;# 
  4759     080D                     	;# 
  4760     080E                     	;# 
  4761     080F                     	;# 
  4762     0810                     	;# 
  4763     0811                     	;# 
  4764     0813                     	;# 
  4765     0814                     	;# 
  4766     081A                     	;# 
  4767     081A                     	;# 
  4768     081B                     	;# 
  4769     081C                     	;# 
  4770     081C                     	;# 
  4771     081D                     	;# 
  4772     081E                     	;# 
  4773     081F                     	;# 
  4774     088C                     	;# 
  4775     088D                     	;# 
  4776     088E                     	;# 
  4777     088F                     	;# 
  4778     0890                     	;# 
  4779     0891                     	;# 
  4780     0892                     	;# 
  4781     0893                     	;# 
  4782     0895                     	;# 
  4783     0896                     	;# 
  4784     0897                     	;# 
  4785     0898                     	;# 
  4786     0899                     	;# 
  4787     089A                     	;# 
  4788     089B                     	;# 
  4789     090C                     	;# 
  4790     090E                     	;# 
  4791     090F                     	;# 
  4792     091F                     	;# 
  4793     098F                     	;# 
  4794     098F                     	;# 
  4795     0990                     	;# 
  4796     0991                     	;# 
  4797     0992                     	;# 
  4798     0993                     	;# 
  4799     0994                     	;# 
  4800     0995                     	;# 
  4801     0996                     	;# 
  4802     0997                     	;# 
  4803     0A19                     	;# 
  4804     0A19                     	;# 
  4805     0A1A                     	;# 
  4806     0A1A                     	;# 
  4807     0A1B                     	;# 
  4808     0A1B                     	;# 
  4809     0A1B                     	;# 
  4810     0A1C                     	;# 
  4811     0A1C                     	;# 
  4812     0A1D                     	;# 
  4813     0A1D                     	;# 
  4814     0A1E                     	;# 
  4815     0A1E                     	;# 
  4816     0A1F                     	;# 
  4817     0A1F                     	;# 
  4818     0A1F                     	;# 
  4819     1E0F                     	;# 
  4820     1E10                     	;# 
  4821     1E11                     	;# 
  4822     1E12                     	;# 
  4823     1E13                     	;# 
  4824     1E14                     	;# 
  4825     1E15                     	;# 
  4826     1E16                     	;# 
  4827     1E17                     	;# 
  4828     1E18                     	;# 
  4829     1E19                     	;# 
  4830     1E1A                     	;# 
  4831     1E1B                     	;# 
  4832     1E1C                     	;# 
  4833     1E1D                     	;# 
  4834     1E1E                     	;# 
  4835     1E1F                     	;# 
  4836     1E20                     	;# 
  4837     1E21                     	;# 
  4838     1E22                     	;# 
  4839     1E23                     	;# 
  4840     1E24                     	;# 
  4841     1E25                     	;# 
  4842     1E26                     	;# 
  4843     1E27                     	;# 
  4844     1E28                     	;# 
  4845     1E29                     	;# 
  4846     1E2A                     	;# 
  4847     1E2B                     	;# 
  4848     1E2C                     	;# 
  4849     1E2D                     	;# 
  4850     1E2E                     	;# 
  4851     1E2F                     	;# 
  4852     1E30                     	;# 
  4853     1E31                     	;# 
  4854     1E32                     	;# 
  4855     1E33                     	;# 
  4856     1E34                     	;# 
  4857     1E35                     	;# 
  4858     1E36                     	;# 
  4859     1E37                     	;# 
  4860     1E8F                     	;# 
  4861     1E90                     	;# 
  4862     1E91                     	;# 
  4863     1E92                     	;# 
  4864     1E93                     	;# 
  4865     1E94                     	;# 
  4866     1E95                     	;# 
  4867     1E96                     	;# 
  4868     1E97                     	;# 
  4869     1E9C                     	;# 
  4870     1E9D                     	;# 
  4871     1E9E                     	;# 
  4872     1EA1                     	;# 
  4873     1EA2                     	;# 
  4874     1EA3                     	;# 
  4875     1EA4                     	;# 
  4876     1EA5                     	;# 
  4877     1EA9                     	;# 
  4878     1EAA                     	;# 
  4879     1EAB                     	;# 
  4880     1EAC                     	;# 
  4881     1EB1                     	;# 
  4882     1EB2                     	;# 
  4883     1EB3                     	;# 
  4884     1EB8                     	;# 
  4885     1EB9                     	;# 
  4886     1EBA                     	;# 
  4887     1EBB                     	;# 
  4888     1EBC                     	;# 
  4889     1EBD                     	;# 
  4890     1EBE                     	;# 
  4891     1EC3                     	;# 
  4892     1EC5                     	;# 
  4893     1EC6                     	;# 
  4894     1EC7                     	;# 
  4895     1EC8                     	;# 
  4896     1EC9                     	;# 
  4897     1ECA                     	;# 
  4898     1ECB                     	;# 
  4899     1ECC                     	;# 
  4900     1ECD                     	;# 
  4901     1ECE                     	;# 
  4902     1F10                     	;# 
  4903     1F11                     	;# 
  4904     1F12                     	;# 
  4905     1F13                     	;# 
  4906     1F14                     	;# 
  4907     1F15                     	;# 
  4908     1F16                     	;# 
  4909     1F17                     	;# 
  4910     1F18                     	;# 
  4911     1F19                     	;# 
  4912     1F1A                     	;# 
  4913     1F1B                     	;# 
  4914     1F1C                     	;# 
  4915     1F1D                     	;# 
  4916     1F1E                     	;# 
  4917     1F1F                     	;# 
  4918     1F20                     	;# 
  4919     1F21                     	;# 
  4920     1F22                     	;# 
  4921     1F23                     	;# 
  4922     1F24                     	;# 
  4923     1F25                     	;# 
  4924     1F26                     	;# 
  4925     1F27                     	;# 
  4926     1F38                     	;# 
  4927     1F39                     	;# 
  4928     1F3A                     	;# 
  4929     1F3B                     	;# 
  4930     1F3C                     	;# 
  4931     1F3D                     	;# 
  4932     1F3E                     	;# 
  4933     1F3F                     	;# 
  4934     1F43                     	;# 
  4935     1F44                     	;# 
  4936     1F45                     	;# 
  4937     1F46                     	;# 
  4938     1F47                     	;# 
  4939     1F48                     	;# 
  4940     1F49                     	;# 
  4941     1F4A                     	;# 
  4942     1F4E                     	;# 
  4943     1F4F                     	;# 
  4944     1F50                     	;# 
  4945     1F51                     	;# 
  4946     1F52                     	;# 
  4947     1F53                     	;# 
  4948     1F54                     	;# 
  4949     1F55                     	;# 
  4950     1F65                     	;# 
  4951     1F66                     	;# 
  4952     1F67                     	;# 
  4953     1F68                     	;# 
  4954     1F69                     	;# 
  4955     1F6A                     	;# 
  4956     1F6B                     	;# 
  4957     1FE4                     	;# 
  4958     1FE5                     	;# 
  4959     1FE6                     	;# 
  4960     1FE7                     	;# 
  4961     1FE8                     	;# 
  4962     1FE8                     	;# 
  4963     1FE9                     	;# 
  4964     1FEA                     	;# 
  4965     1FEB                     	;# 
  4966     1FED                     	;# 
  4967     1FEE                     	;# 
  4968     1FEF                     	;# 
  4969     0000                     	;# 
  4970     0001                     	;# 
  4971     0002                     	;# 
  4972     0003                     	;# 
  4973     0004                     	;# 
  4974     0005                     	;# 
  4975     0006                     	;# 
  4976     0007                     	;# 
  4977     0008                     	;# 
  4978     0009                     	;# 
  4979     000A                     	;# 
  4980     000B                     	;# 
  4981     000C                     	;# 
  4982     000D                     	;# 
  4983     000E                     	;# 
  4984     0010                     	;# 
  4985     0012                     	;# 
  4986     0013                     	;# 
  4987     0014                     	;# 
  4988     0016                     	;# 
  4989     0018                     	;# 
  4990     0019                     	;# 
  4991     001A                     	;# 
  4992     001C                     	;# 
  4993     008C                     	;# 
  4994     008C                     	;# 
  4995     008D                     	;# 
  4996     008E                     	;# 
  4997     008E                     	;# 
  4998     008F                     	;# 
  4999     0090                     	;# 
  5000     0090                     	;# 
  5001     0091                     	;# 
  5002     0092                     	;# 
  5003     0092                     	;# 
  5004     0093                     	;# 
  5005     0094                     	;# 
  5006     0094                     	;# 
  5007     0095                     	;# 
  5008     0096                     	;# 
  5009     0096                     	;# 
  5010     0097                     	;# 
  5011     0098                     	;# 
  5012     0099                     	;# 
  5013     009A                     	;# 
  5014     009B                     	;# 
  5015     009B                     	;# 
  5016     009C                     	;# 
  5017     009D                     	;# 
  5018     009D                     	;# 
  5019     009E                     	;# 
  5020     009F                     	;# 
  5021     010C                     	;# 
  5022     010C                     	;# 
  5023     010D                     	;# 
  5024     010E                     	;# 
  5025     010F                     	;# 
  5026     010F                     	;# 
  5027     0110                     	;# 
  5028     0111                     	;# 
  5029     0112                     	;# 
  5030     0113                     	;# 
  5031     0114                     	;# 
  5032     0115                     	;# 
  5033     0116                     	;# 
  5034     0117                     	;# 
  5035     0118                     	;# 
  5036     0119                     	;# 
  5037     0119                     	;# 
  5038     0119                     	;# 
  5039     011A                     	;# 
  5040     011A                     	;# 
  5041     011A                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011C                     	;# 
  5048     011C                     	;# 
  5049     011C                     	;# 
  5050     011D                     	;# 
  5051     011D                     	;# 
  5052     011D                     	;# 
  5053     011E                     	;# 
  5054     011E                     	;# 
  5055     011E                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     018C                     	;# 
  5062     018D                     	;# 
  5063     018E                     	;# 
  5064     018F                     	;# 
  5065     0190                     	;# 
  5066     0191                     	;# 
  5067     0192                     	;# 
  5068     0196                     	;# 
  5069     0197                     	;# 
  5070     0198                     	;# 
  5071     0199                     	;# 
  5072     019A                     	;# 
  5073     019B                     	;# 
  5074     019C                     	;# 
  5075     020C                     	;# 
  5076     020D                     	;# 
  5077     020E                     	;# 
  5078     020E                     	;# 
  5079     020F                     	;# 
  5080     020F                     	;# 
  5081     0210                     	;# 
  5082     0210                     	;# 
  5083     0211                     	;# 
  5084     0211                     	;# 
  5085     0212                     	;# 
  5086     0213                     	;# 
  5087     0214                     	;# 
  5088     0214                     	;# 
  5089     0215                     	;# 
  5090     0215                     	;# 
  5091     0216                     	;# 
  5092     0216                     	;# 
  5093     0217                     	;# 
  5094     0217                     	;# 
  5095     0218                     	;# 
  5096     0219                     	;# 
  5097     021A                     	;# 
  5098     021A                     	;# 
  5099     021B                     	;# 
  5100     021B                     	;# 
  5101     021C                     	;# 
  5102     021C                     	;# 
  5103     021D                     	;# 
  5104     021D                     	;# 
  5105     021E                     	;# 
  5106     021F                     	;# 
  5107     028C                     	;# 
  5108     028C                     	;# 
  5109     028D                     	;# 
  5110     028D                     	;# 
  5111     028E                     	;# 
  5112     028F                     	;# 
  5113     0290                     	;# 
  5114     0291                     	;# 
  5115     0292                     	;# 
  5116     0292                     	;# 
  5117     0293                     	;# 
  5118     0293                     	;# 
  5119     0294                     	;# 
  5120     0295                     	;# 
  5121     0296                     	;# 
  5122     0297                     	;# 
  5123     0298                     	;# 
  5124     0298                     	;# 
  5125     0299                     	;# 
  5126     0299                     	;# 
  5127     029A                     	;# 
  5128     029B                     	;# 
  5129     029C                     	;# 
  5130     029D                     	;# 
  5131     029F                     	;# 
  5132     030C                     	;# 
  5133     030C                     	;# 
  5134     030D                     	;# 
  5135     030E                     	;# 
  5136     030F                     	;# 
  5137     0310                     	;# 
  5138     0310                     	;# 
  5139     0311                     	;# 
  5140     0312                     	;# 
  5141     0313                     	;# 
  5142     0314                     	;# 
  5143     0314                     	;# 
  5144     0315                     	;# 
  5145     0316                     	;# 
  5146     0317                     	;# 
  5147     0318                     	;# 
  5148     0318                     	;# 
  5149     0319                     	;# 
  5150     031A                     	;# 
  5151     031B                     	;# 
  5152     031C                     	;# 
  5153     031C                     	;# 
  5154     031D                     	;# 
  5155     031E                     	;# 
  5156     031F                     	;# 
  5157     038C                     	;# 
  5158     038C                     	;# 
  5159     038D                     	;# 
  5160     038E                     	;# 
  5161     0390                     	;# 
  5162     0390                     	;# 
  5163     0391                     	;# 
  5164     0392                     	;# 
  5165     048C                     	;# 
  5166     048C                     	;# 
  5167     048D                     	;# 
  5168     048E                     	;# 
  5169     048F                     	;# 
  5170     048F                     	;# 
  5171     0490                     	;# 
  5172     0491                     	;# 
  5173     0492                     	;# 
  5174     0492                     	;# 
  5175     0493                     	;# 
  5176     0494                     	;# 
  5177     0495                     	;# 
  5178     0495                     	;# 
  5179     0496                     	;# 
  5180     0497                     	;# 
  5181     0498                     	;# 
  5182     0499                     	;# 
  5183     049A                     	;# 
  5184     049B                     	;# 
  5185     049C                     	;# 
  5186     049D                     	;# 
  5187     050C                     	;# 
  5188     050C                     	;# 
  5189     050D                     	;# 
  5190     050E                     	;# 
  5191     050F                     	;# 
  5192     050F                     	;# 
  5193     0510                     	;# 
  5194     0511                     	;# 
  5195     0512                     	;# 
  5196     0512                     	;# 
  5197     0513                     	;# 
  5198     0514                     	;# 
  5199     0515                     	;# 
  5200     0515                     	;# 
  5201     0516                     	;# 
  5202     0517                     	;# 
  5203     0518                     	;# 
  5204     0519                     	;# 
  5205     051A                     	;# 
  5206     051B                     	;# 
  5207     051C                     	;# 
  5208     051D                     	;# 
  5209     058C                     	;# 
  5210     058C                     	;# 
  5211     058D                     	;# 
  5212     058E                     	;# 
  5213     058F                     	;# 
  5214     058F                     	;# 
  5215     0590                     	;# 
  5216     0591                     	;# 
  5217     0592                     	;# 
  5218     0593                     	;# 
  5219     059C                     	;# 
  5220     059C                     	;# 
  5221     059D                     	;# 
  5222     059D                     	;# 
  5223     059E                     	;# 
  5224     059F                     	;# 
  5225     060C                     	;# 
  5226     060C                     	;# 
  5227     060D                     	;# 
  5228     060D                     	;# 
  5229     060E                     	;# 
  5230     060F                     	;# 
  5231     0610                     	;# 
  5232     0611                     	;# 
  5233     0612                     	;# 
  5234     0613                     	;# 
  5235     0614                     	;# 
  5236     0616                     	;# 
  5237     0616                     	;# 
  5238     0617                     	;# 
  5239     0617                     	;# 
  5240     0618                     	;# 
  5241     0619                     	;# 
  5242     061A                     	;# 
  5243     061B                     	;# 
  5244     061C                     	;# 
  5245     061D                     	;# 
  5246     061E                     	;# 
  5247     068C                     	;# 
  5248     068D                     	;# 
  5249     068E                     	;# 
  5250     068F                     	;# 
  5251     0690                     	;# 
  5252     0691                     	;# 
  5253     0692                     	;# 
  5254     0693                     	;# 
  5255     0694                     	;# 
  5256     070C                     	;# 
  5257     070D                     	;# 
  5258     070E                     	;# 
  5259     070F                     	;# 
  5260     0710                     	;# 
  5261     0711                     	;# 
  5262     0712                     	;# 
  5263     0713                     	;# 
  5264     0714                     	;# 
  5265     0716                     	;# 
  5266     0717                     	;# 
  5267     0718                     	;# 
  5268     0719                     	;# 
  5269     071A                     	;# 
  5270     071B                     	;# 
  5271     071C                     	;# 
  5272     071D                     	;# 
  5273     071E                     	;# 
  5274     0796                     	;# 
  5275     0797                     	;# 
  5276     0798                     	;# 
  5277     0799                     	;# 
  5278     079A                     	;# 
  5279     079B                     	;# 
  5280     079C                     	;# 
  5281     079D                     	;# 
  5282     080C                     	;# 
  5283     080D                     	;# 
  5284     080E                     	;# 
  5285     080F                     	;# 
  5286     0810                     	;# 
  5287     0811                     	;# 
  5288     0813                     	;# 
  5289     0814                     	;# 
  5290     081A                     	;# 
  5291     081A                     	;# 
  5292     081B                     	;# 
  5293     081C                     	;# 
  5294     081C                     	;# 
  5295     081D                     	;# 
  5296     081E                     	;# 
  5297     081F                     	;# 
  5298     088C                     	;# 
  5299     088D                     	;# 
  5300     088E                     	;# 
  5301     088F                     	;# 
  5302     0890                     	;# 
  5303     0891                     	;# 
  5304     0892                     	;# 
  5305     0893                     	;# 
  5306     0895                     	;# 
  5307     0896                     	;# 
  5308     0897                     	;# 
  5309     0898                     	;# 
  5310     0899                     	;# 
  5311     089A                     	;# 
  5312     089B                     	;# 
  5313     090C                     	;# 
  5314     090E                     	;# 
  5315     090F                     	;# 
  5316     091F                     	;# 
  5317     098F                     	;# 
  5318     098F                     	;# 
  5319     0990                     	;# 
  5320     0991                     	;# 
  5321     0992                     	;# 
  5322     0993                     	;# 
  5323     0994                     	;# 
  5324     0995                     	;# 
  5325     0996                     	;# 
  5326     0997                     	;# 
  5327     0A19                     	;# 
  5328     0A19                     	;# 
  5329     0A1A                     	;# 
  5330     0A1A                     	;# 
  5331     0A1B                     	;# 
  5332     0A1B                     	;# 
  5333     0A1B                     	;# 
  5334     0A1C                     	;# 
  5335     0A1C                     	;# 
  5336     0A1D                     	;# 
  5337     0A1D                     	;# 
  5338     0A1E                     	;# 
  5339     0A1E                     	;# 
  5340     0A1F                     	;# 
  5341     0A1F                     	;# 
  5342     0A1F                     	;# 
  5343     1E0F                     	;# 
  5344     1E10                     	;# 
  5345     1E11                     	;# 
  5346     1E12                     	;# 
  5347     1E13                     	;# 
  5348     1E14                     	;# 
  5349     1E15                     	;# 
  5350     1E16                     	;# 
  5351     1E17                     	;# 
  5352     1E18                     	;# 
  5353     1E19                     	;# 
  5354     1E1A                     	;# 
  5355     1E1B                     	;# 
  5356     1E1C                     	;# 
  5357     1E1D                     	;# 
  5358     1E1E                     	;# 
  5359     1E1F                     	;# 
  5360     1E20                     	;# 
  5361     1E21                     	;# 
  5362     1E22                     	;# 
  5363     1E23                     	;# 
  5364     1E24                     	;# 
  5365     1E25                     	;# 
  5366     1E26                     	;# 
  5367     1E27                     	;# 
  5368     1E28                     	;# 
  5369     1E29                     	;# 
  5370     1E2A                     	;# 
  5371     1E2B                     	;# 
  5372     1E2C                     	;# 
  5373     1E2D                     	;# 
  5374     1E2E                     	;# 
  5375     1E2F                     	;# 
  5376     1E30                     	;# 
  5377     1E31                     	;# 
  5378     1E32                     	;# 
  5379     1E33                     	;# 
  5380     1E34                     	;# 
  5381     1E35                     	;# 
  5382     1E36                     	;# 
  5383     1E37                     	;# 
  5384     1E8F                     	;# 
  5385     1E90                     	;# 
  5386     1E91                     	;# 
  5387     1E92                     	;# 
  5388     1E93                     	;# 
  5389     1E94                     	;# 
  5390     1E95                     	;# 
  5391     1E96                     	;# 
  5392     1E97                     	;# 
  5393     1E9C                     	;# 
  5394     1E9D                     	;# 
  5395     1E9E                     	;# 
  5396     1EA1                     	;# 
  5397     1EA2                     	;# 
  5398     1EA3                     	;# 
  5399     1EA4                     	;# 
  5400     1EA5                     	;# 
  5401     1EA9                     	;# 
  5402     1EAA                     	;# 
  5403     1EAB                     	;# 
  5404     1EAC                     	;# 
  5405     1EB1                     	;# 
  5406     1EB2                     	;# 
  5407     1EB3                     	;# 
  5408     1EB8                     	;# 
  5409     1EB9                     	;# 
  5410     1EBA                     	;# 
  5411     1EBB                     	;# 
  5412     1EBC                     	;# 
  5413     1EBD                     	;# 
  5414     1EBE                     	;# 
  5415     1EC3                     	;# 
  5416     1EC5                     	;# 
  5417     1EC6                     	;# 
  5418     1EC7                     	;# 
  5419     1EC8                     	;# 
  5420     1EC9                     	;# 
  5421     1ECA                     	;# 
  5422     1ECB                     	;# 
  5423     1ECC                     	;# 
  5424     1ECD                     	;# 
  5425     1ECE                     	;# 
  5426     1F10                     	;# 
  5427     1F11                     	;# 
  5428     1F12                     	;# 
  5429     1F13                     	;# 
  5430     1F14                     	;# 
  5431     1F15                     	;# 
  5432     1F16                     	;# 
  5433     1F17                     	;# 
  5434     1F18                     	;# 
  5435     1F19                     	;# 
  5436     1F1A                     	;# 
  5437     1F1B                     	;# 
  5438     1F1C                     	;# 
  5439     1F1D                     	;# 
  5440     1F1E                     	;# 
  5441     1F1F                     	;# 
  5442     1F20                     	;# 
  5443     1F21                     	;# 
  5444     1F22                     	;# 
  5445     1F23                     	;# 
  5446     1F24                     	;# 
  5447     1F25                     	;# 
  5448     1F26                     	;# 
  5449     1F27                     	;# 
  5450     1F38                     	;# 
  5451     1F39                     	;# 
  5452     1F3A                     	;# 
  5453     1F3B                     	;# 
  5454     1F3C                     	;# 
  5455     1F3D                     	;# 
  5456     1F3E                     	;# 
  5457     1F3F                     	;# 
  5458     1F43                     	;# 
  5459     1F44                     	;# 
  5460     1F45                     	;# 
  5461     1F46                     	;# 
  5462     1F47                     	;# 
  5463     1F48                     	;# 
  5464     1F49                     	;# 
  5465     1F4A                     	;# 
  5466     1F4E                     	;# 
  5467     1F4F                     	;# 
  5468     1F50                     	;# 
  5469     1F51                     	;# 
  5470     1F52                     	;# 
  5471     1F53                     	;# 
  5472     1F54                     	;# 
  5473     1F55                     	;# 
  5474     1F65                     	;# 
  5475     1F66                     	;# 
  5476     1F67                     	;# 
  5477     1F68                     	;# 
  5478     1F69                     	;# 
  5479     1F6A                     	;# 
  5480     1F6B                     	;# 
  5481     1FE4                     	;# 
  5482     1FE5                     	;# 
  5483     1FE6                     	;# 
  5484     1FE7                     	;# 
  5485     1FE8                     	;# 
  5486     1FE8                     	;# 
  5487     1FE9                     	;# 
  5488     1FEA                     	;# 
  5489     1FEB                     	;# 
  5490     1FED                     	;# 
  5491     1FEE                     	;# 
  5492     1FEF                     	;# 
  5493     0000                     	;# 
  5494     0001                     	;# 
  5495     0002                     	;# 
  5496     0003                     	;# 
  5497     0004                     	;# 
  5498     0005                     	;# 
  5499     0006                     	;# 
  5500     0007                     	;# 
  5501     0008                     	;# 
  5502     0009                     	;# 
  5503     000A                     	;# 
  5504     000B                     	;# 
  5505     000C                     	;# 
  5506     000D                     	;# 
  5507     000E                     	;# 
  5508     0010                     	;# 
  5509     0012                     	;# 
  5510     0013                     	;# 
  5511     0014                     	;# 
  5512     0016                     	;# 
  5513     0018                     	;# 
  5514     0019                     	;# 
  5515     001A                     	;# 
  5516     001C                     	;# 
  5517     008C                     	;# 
  5518     008C                     	;# 
  5519     008D                     	;# 
  5520     008E                     	;# 
  5521     008E                     	;# 
  5522     008F                     	;# 
  5523     0090                     	;# 
  5524     0090                     	;# 
  5525     0091                     	;# 
  5526     0092                     	;# 
  5527     0092                     	;# 
  5528     0093                     	;# 
  5529     0094                     	;# 
  5530     0094                     	;# 
  5531     0095                     	;# 
  5532     0096                     	;# 
  5533     0096                     	;# 
  5534     0097                     	;# 
  5535     0098                     	;# 
  5536     0099                     	;# 
  5537     009A                     	;# 
  5538     009B                     	;# 
  5539     009B                     	;# 
  5540     009C                     	;# 
  5541     009D                     	;# 
  5542     009D                     	;# 
  5543     009E                     	;# 
  5544     009F                     	;# 
  5545     010C                     	;# 
  5546     010C                     	;# 
  5547     010D                     	;# 
  5548     010E                     	;# 
  5549     010F                     	;# 
  5550     010F                     	;# 
  5551     0110                     	;# 
  5552     0111                     	;# 
  5553     0112                     	;# 
  5554     0113                     	;# 
  5555     0114                     	;# 
  5556     0115                     	;# 
  5557     0116                     	;# 
  5558     0117                     	;# 
  5559     0118                     	;# 
  5560     0119                     	;# 
  5561     0119                     	;# 
  5562     0119                     	;# 
  5563     011A                     	;# 
  5564     011A                     	;# 
  5565     011A                     	;# 
  5566     011B                     	;# 
  5567     011B                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011C                     	;# 
  5572     011C                     	;# 
  5573     011C                     	;# 
  5574     011D                     	;# 
  5575     011D                     	;# 
  5576     011D                     	;# 
  5577     011E                     	;# 
  5578     011E                     	;# 
  5579     011E                     	;# 
  5580     011F                     	;# 
  5581     011F                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     018C                     	;# 
  5586     018D                     	;# 
  5587     018E                     	;# 
  5588     018F                     	;# 
  5589     0190                     	;# 
  5590     0191                     	;# 
  5591     0192                     	;# 
  5592     0196                     	;# 
  5593     0197                     	;# 
  5594     0198                     	;# 
  5595     0199                     	;# 
  5596     019A                     	;# 
  5597     019B                     	;# 
  5598     019C                     	;# 
  5599     020C                     	;# 
  5600     020D                     	;# 
  5601     020E                     	;# 
  5602     020E                     	;# 
  5603     020F                     	;# 
  5604     020F                     	;# 
  5605     0210                     	;# 
  5606     0210                     	;# 
  5607     0211                     	;# 
  5608     0211                     	;# 
  5609     0212                     	;# 
  5610     0213                     	;# 
  5611     0214                     	;# 
  5612     0214                     	;# 
  5613     0215                     	;# 
  5614     0215                     	;# 
  5615     0216                     	;# 
  5616     0216                     	;# 
  5617     0217                     	;# 
  5618     0217                     	;# 
  5619     0218                     	;# 
  5620     0219                     	;# 
  5621     021A                     	;# 
  5622     021A                     	;# 
  5623     021B                     	;# 
  5624     021B                     	;# 
  5625     021C                     	;# 
  5626     021C                     	;# 
  5627     021D                     	;# 
  5628     021D                     	;# 
  5629     021E                     	;# 
  5630     021F                     	;# 
  5631     028C                     	;# 
  5632     028C                     	;# 
  5633     028D                     	;# 
  5634     028D                     	;# 
  5635     028E                     	;# 
  5636     028F                     	;# 
  5637     0290                     	;# 
  5638     0291                     	;# 
  5639     0292                     	;# 
  5640     0292                     	;# 
  5641     0293                     	;# 
  5642     0293                     	;# 
  5643     0294                     	;# 
  5644     0295                     	;# 
  5645     0296                     	;# 
  5646     0297                     	;# 
  5647     0298                     	;# 
  5648     0298                     	;# 
  5649     0299                     	;# 
  5650     0299                     	;# 
  5651     029A                     	;# 
  5652     029B                     	;# 
  5653     029C                     	;# 
  5654     029D                     	;# 
  5655     029F                     	;# 
  5656     030C                     	;# 
  5657     030C                     	;# 
  5658     030D                     	;# 
  5659     030E                     	;# 
  5660     030F                     	;# 
  5661     0310                     	;# 
  5662     0310                     	;# 
  5663     0311                     	;# 
  5664     0312                     	;# 
  5665     0313                     	;# 
  5666     0314                     	;# 
  5667     0314                     	;# 
  5668     0315                     	;# 
  5669     0316                     	;# 
  5670     0317                     	;# 
  5671     0318                     	;# 
  5672     0318                     	;# 
  5673     0319                     	;# 
  5674     031A                     	;# 
  5675     031B                     	;# 
  5676     031C                     	;# 
  5677     031C                     	;# 
  5678     031D                     	;# 
  5679     031E                     	;# 
  5680     031F                     	;# 
  5681     038C                     	;# 
  5682     038C                     	;# 
  5683     038D                     	;# 
  5684     038E                     	;# 
  5685     0390                     	;# 
  5686     0390                     	;# 
  5687     0391                     	;# 
  5688     0392                     	;# 
  5689     048C                     	;# 
  5690     048C                     	;# 
  5691     048D                     	;# 
  5692     048E                     	;# 
  5693     048F                     	;# 
  5694     048F                     	;# 
  5695     0490                     	;# 
  5696     0491                     	;# 
  5697     0492                     	;# 
  5698     0492                     	;# 
  5699     0493                     	;# 
  5700     0494                     	;# 
  5701     0495                     	;# 
  5702     0495                     	;# 
  5703     0496                     	;# 
  5704     0497                     	;# 
  5705     0498                     	;# 
  5706     0499                     	;# 
  5707     049A                     	;# 
  5708     049B                     	;# 
  5709     049C                     	;# 
  5710     049D                     	;# 
  5711     050C                     	;# 
  5712     050C                     	;# 
  5713     050D                     	;# 
  5714     050E                     	;# 
  5715     050F                     	;# 
  5716     050F                     	;# 
  5717     0510                     	;# 
  5718     0511                     	;# 
  5719     0512                     	;# 
  5720     0512                     	;# 
  5721     0513                     	;# 
  5722     0514                     	;# 
  5723     0515                     	;# 
  5724     0515                     	;# 
  5725     0516                     	;# 
  5726     0517                     	;# 
  5727     0518                     	;# 
  5728     0519                     	;# 
  5729     051A                     	;# 
  5730     051B                     	;# 
  5731     051C                     	;# 
  5732     051D                     	;# 
  5733     058C                     	;# 
  5734     058C                     	;# 
  5735     058D                     	;# 
  5736     058E                     	;# 
  5737     058F                     	;# 
  5738     058F                     	;# 
  5739     0590                     	;# 
  5740     0591                     	;# 
  5741     0592                     	;# 
  5742     0593                     	;# 
  5743     059C                     	;# 
  5744     059C                     	;# 
  5745     059D                     	;# 
  5746     059D                     	;# 
  5747     059E                     	;# 
  5748     059F                     	;# 
  5749     060C                     	;# 
  5750     060C                     	;# 
  5751     060D                     	;# 
  5752     060D                     	;# 
  5753     060E                     	;# 
  5754     060F                     	;# 
  5755     0610                     	;# 
  5756     0611                     	;# 
  5757     0612                     	;# 
  5758     0613                     	;# 
  5759     0614                     	;# 
  5760     0616                     	;# 
  5761     0616                     	;# 
  5762     0617                     	;# 
  5763     0617                     	;# 
  5764     0618                     	;# 
  5765     0619                     	;# 
  5766     061A                     	;# 
  5767     061B                     	;# 
  5768     061C                     	;# 
  5769     061D                     	;# 
  5770     061E                     	;# 
  5771     068C                     	;# 
  5772     068D                     	;# 
  5773     068E                     	;# 
  5774     068F                     	;# 
  5775     0690                     	;# 
  5776     0691                     	;# 
  5777     0692                     	;# 
  5778     0693                     	;# 
  5779     0694                     	;# 
  5780     070C                     	;# 
  5781     070D                     	;# 
  5782     070E                     	;# 
  5783     070F                     	;# 
  5784     0710                     	;# 
  5785     0711                     	;# 
  5786     0712                     	;# 
  5787     0713                     	;# 
  5788     0714                     	;# 
  5789     0716                     	;# 
  5790     0717                     	;# 
  5791     0718                     	;# 
  5792     0719                     	;# 
  5793     071A                     	;# 
  5794     071B                     	;# 
  5795     071C                     	;# 
  5796     071D                     	;# 
  5797     071E                     	;# 
  5798     0796                     	;# 
  5799     0797                     	;# 
  5800     0798                     	;# 
  5801     0799                     	;# 
  5802     079A                     	;# 
  5803     079B                     	;# 
  5804     079C                     	;# 
  5805     079D                     	;# 
  5806     080C                     	;# 
  5807     080D                     	;# 
  5808     080E                     	;# 
  5809     080F                     	;# 
  5810     0810                     	;# 
  5811     0811                     	;# 
  5812     0813                     	;# 
  5813     0814                     	;# 
  5814     081A                     	;# 
  5815     081A                     	;# 
  5816     081B                     	;# 
  5817     081C                     	;# 
  5818     081C                     	;# 
  5819     081D                     	;# 
  5820     081E                     	;# 
  5821     081F                     	;# 
  5822     088C                     	;# 
  5823     088D                     	;# 
  5824     088E                     	;# 
  5825     088F                     	;# 
  5826     0890                     	;# 
  5827     0891                     	;# 
  5828     0892                     	;# 
  5829     0893                     	;# 
  5830     0895                     	;# 
  5831     0896                     	;# 
  5832     0897                     	;# 
  5833     0898                     	;# 
  5834     0899                     	;# 
  5835     089A                     	;# 
  5836     089B                     	;# 
  5837     090C                     	;# 
  5838     090E                     	;# 
  5839     090F                     	;# 
  5840     091F                     	;# 
  5841     098F                     	;# 
  5842     098F                     	;# 
  5843     0990                     	;# 
  5844     0991                     	;# 
  5845     0992                     	;# 
  5846     0993                     	;# 
  5847     0994                     	;# 
  5848     0995                     	;# 
  5849     0996                     	;# 
  5850     0997                     	;# 
  5851     0A19                     	;# 
  5852     0A19                     	;# 
  5853     0A1A                     	;# 
  5854     0A1A                     	;# 
  5855     0A1B                     	;# 
  5856     0A1B                     	;# 
  5857     0A1B                     	;# 
  5858     0A1C                     	;# 
  5859     0A1C                     	;# 
  5860     0A1D                     	;# 
  5861     0A1D                     	;# 
  5862     0A1E                     	;# 
  5863     0A1E                     	;# 
  5864     0A1F                     	;# 
  5865     0A1F                     	;# 
  5866     0A1F                     	;# 
  5867     1E0F                     	;# 
  5868     1E10                     	;# 
  5869     1E11                     	;# 
  5870     1E12                     	;# 
  5871     1E13                     	;# 
  5872     1E14                     	;# 
  5873     1E15                     	;# 
  5874     1E16                     	;# 
  5875     1E17                     	;# 
  5876     1E18                     	;# 
  5877     1E19                     	;# 
  5878     1E1A                     	;# 
  5879     1E1B                     	;# 
  5880     1E1C                     	;# 
  5881     1E1D                     	;# 
  5882     1E1E                     	;# 
  5883     1E1F                     	;# 
  5884     1E20                     	;# 
  5885     1E21                     	;# 
  5886     1E22                     	;# 
  5887     1E23                     	;# 
  5888     1E24                     	;# 
  5889     1E25                     	;# 
  5890     1E26                     	;# 
  5891     1E27                     	;# 
  5892     1E28                     	;# 
  5893     1E29                     	;# 
  5894     1E2A                     	;# 
  5895     1E2B                     	;# 
  5896     1E2C                     	;# 
  5897     1E2D                     	;# 
  5898     1E2E                     	;# 
  5899     1E2F                     	;# 
  5900     1E30                     	;# 
  5901     1E31                     	;# 
  5902     1E32                     	;# 
  5903     1E33                     	;# 
  5904     1E34                     	;# 
  5905     1E35                     	;# 
  5906     1E36                     	;# 
  5907     1E37                     	;# 
  5908     1E8F                     	;# 
  5909     1E90                     	;# 
  5910     1E91                     	;# 
  5911     1E92                     	;# 
  5912     1E93                     	;# 
  5913     1E94                     	;# 
  5914     1E95                     	;# 
  5915     1E96                     	;# 
  5916     1E97                     	;# 
  5917     1E9C                     	;# 
  5918     1E9D                     	;# 
  5919     1E9E                     	;# 
  5920     1EA1                     	;# 
  5921     1EA2                     	;# 
  5922     1EA3                     	;# 
  5923     1EA4                     	;# 
  5924     1EA5                     	;# 
  5925     1EA9                     	;# 
  5926     1EAA                     	;# 
  5927     1EAB                     	;# 
  5928     1EAC                     	;# 
  5929     1EB1                     	;# 
  5930     1EB2                     	;# 
  5931     1EB3                     	;# 
  5932     1EB8                     	;# 
  5933     1EB9                     	;# 
  5934     1EBA                     	;# 
  5935     1EBB                     	;# 
  5936     1EBC                     	;# 
  5937     1EBD                     	;# 
  5938     1EBE                     	;# 
  5939     1EC3                     	;# 
  5940     1EC5                     	;# 
  5941     1EC6                     	;# 
  5942     1EC7                     	;# 
  5943     1EC8                     	;# 
  5944     1EC9                     	;# 
  5945     1ECA                     	;# 
  5946     1ECB                     	;# 
  5947     1ECC                     	;# 
  5948     1ECD                     	;# 
  5949     1ECE                     	;# 
  5950     1F10                     	;# 
  5951     1F11                     	;# 
  5952     1F12                     	;# 
  5953     1F13                     	;# 
  5954     1F14                     	;# 
  5955     1F15                     	;# 
  5956     1F16                     	;# 
  5957     1F17                     	;# 
  5958     1F18                     	;# 
  5959     1F19                     	;# 
  5960     1F1A                     	;# 
  5961     1F1B                     	;# 
  5962     1F1C                     	;# 
  5963     1F1D                     	;# 
  5964     1F1E                     	;# 
  5965     1F1F                     	;# 
  5966     1F20                     	;# 
  5967     1F21                     	;# 
  5968     1F22                     	;# 
  5969     1F23                     	;# 
  5970     1F24                     	;# 
  5971     1F25                     	;# 
  5972     1F26                     	;# 
  5973     1F27                     	;# 
  5974     1F38                     	;# 
  5975     1F39                     	;# 
  5976     1F3A                     	;# 
  5977     1F3B                     	;# 
  5978     1F3C                     	;# 
  5979     1F3D                     	;# 
  5980     1F3E                     	;# 
  5981     1F3F                     	;# 
  5982     1F43                     	;# 
  5983     1F44                     	;# 
  5984     1F45                     	;# 
  5985     1F46                     	;# 
  5986     1F47                     	;# 
  5987     1F48                     	;# 
  5988     1F49                     	;# 
  5989     1F4A                     	;# 
  5990     1F4E                     	;# 
  5991     1F4F                     	;# 
  5992     1F50                     	;# 
  5993     1F51                     	;# 
  5994     1F52                     	;# 
  5995     1F53                     	;# 
  5996     1F54                     	;# 
  5997     1F55                     	;# 
  5998     1F65                     	;# 
  5999     1F66                     	;# 
  6000     1F67                     	;# 
  6001     1F68                     	;# 
  6002     1F69                     	;# 
  6003     1F6A                     	;# 
  6004     1F6B                     	;# 
  6005     1FE4                     	;# 
  6006     1FE5                     	;# 
  6007     1FE6                     	;# 
  6008     1FE7                     	;# 
  6009     1FE8                     	;# 
  6010     1FE8                     	;# 
  6011     1FE9                     	;# 
  6012     1FEA                     	;# 
  6013     1FEB                     	;# 
  6014     1FED                     	;# 
  6015     1FEE                     	;# 
  6016     1FEF                     	;# 
  6017     0000                     	;# 
  6018     0001                     	;# 
  6019     0002                     	;# 
  6020     0003                     	;# 
  6021     0004                     	;# 
  6022     0005                     	;# 
  6023     0006                     	;# 
  6024     0007                     	;# 
  6025     0008                     	;# 
  6026     0009                     	;# 
  6027     000A                     	;# 
  6028     000B                     	;# 
  6029     000C                     	;# 
  6030     000D                     	;# 
  6031     000E                     	;# 
  6032     0010                     	;# 
  6033     0012                     	;# 
  6034     0013                     	;# 
  6035     0014                     	;# 
  6036     0016                     	;# 
  6037     0018                     	;# 
  6038     0019                     	;# 
  6039     001A                     	;# 
  6040     001C                     	;# 
  6041     008C                     	;# 
  6042     008C                     	;# 
  6043     008D                     	;# 
  6044     008E                     	;# 
  6045     008E                     	;# 
  6046     008F                     	;# 
  6047     0090                     	;# 
  6048     0090                     	;# 
  6049     0091                     	;# 
  6050     0092                     	;# 
  6051     0092                     	;# 
  6052     0093                     	;# 
  6053     0094                     	;# 
  6054     0094                     	;# 
  6055     0095                     	;# 
  6056     0096                     	;# 
  6057     0096                     	;# 
  6058     0097                     	;# 
  6059     0098                     	;# 
  6060     0099                     	;# 
  6061     009A                     	;# 
  6062     009B                     	;# 
  6063     009B                     	;# 
  6064     009C                     	;# 
  6065     009D                     	;# 
  6066     009D                     	;# 
  6067     009E                     	;# 
  6068     009F                     	;# 
  6069     010C                     	;# 
  6070     010C                     	;# 
  6071     010D                     	;# 
  6072     010E                     	;# 
  6073     010F                     	;# 
  6074     010F                     	;# 
  6075     0110                     	;# 
  6076     0111                     	;# 
  6077     0112                     	;# 
  6078     0113                     	;# 
  6079     0114                     	;# 
  6080     0115                     	;# 
  6081     0116                     	;# 
  6082     0117                     	;# 
  6083     0118                     	;# 
  6084     0119                     	;# 
  6085     0119                     	;# 
  6086     0119                     	;# 
  6087     011A                     	;# 
  6088     011A                     	;# 
  6089     011A                     	;# 
  6090     011B                     	;# 
  6091     011B                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011C                     	;# 
  6096     011C                     	;# 
  6097     011C                     	;# 
  6098     011D                     	;# 
  6099     011D                     	;# 
  6100     011D                     	;# 
  6101     011E                     	;# 
  6102     011E                     	;# 
  6103     011E                     	;# 
  6104     011F                     	;# 
  6105     011F                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     018C                     	;# 
  6110     018D                     	;# 
  6111     018E                     	;# 
  6112     018F                     	;# 
  6113     0190                     	;# 
  6114     0191                     	;# 
  6115     0192                     	;# 
  6116     0196                     	;# 
  6117     0197                     	;# 
  6118     0198                     	;# 
  6119     0199                     	;# 
  6120     019A                     	;# 
  6121     019B                     	;# 
  6122     019C                     	;# 
  6123     020C                     	;# 
  6124     020D                     	;# 
  6125     020E                     	;# 
  6126     020E                     	;# 
  6127     020F                     	;# 
  6128     020F                     	;# 
  6129     0210                     	;# 
  6130     0210                     	;# 
  6131     0211                     	;# 
  6132     0211                     	;# 
  6133     0212                     	;# 
  6134     0213                     	;# 
  6135     0214                     	;# 
  6136     0214                     	;# 
  6137     0215                     	;# 
  6138     0215                     	;# 
  6139     0216                     	;# 
  6140     0216                     	;# 
  6141     0217                     	;# 
  6142     0217                     	;# 
  6143     0218                     	;# 
  6144     0219                     	;# 
  6145     021A                     	;# 
  6146     021A                     	;# 
  6147     021B                     	;# 
  6148     021B                     	;# 
  6149     021C                     	;# 
  6150     021C                     	;# 
  6151     021D                     	;# 
  6152     021D                     	;# 
  6153     021E                     	;# 
  6154     021F                     	;# 
  6155     028C                     	;# 
  6156     028C                     	;# 
  6157     028D                     	;# 
  6158     028D                     	;# 
  6159     028E                     	;# 
  6160     028F                     	;# 
  6161     0290                     	;# 
  6162     0291                     	;# 
  6163     0292                     	;# 
  6164     0292                     	;# 
  6165     0293                     	;# 
  6166     0293                     	;# 
  6167     0294                     	;# 
  6168     0295                     	;# 
  6169     0296                     	;# 
  6170     0297                     	;# 
  6171     0298                     	;# 
  6172     0298                     	;# 
  6173     0299                     	;# 
  6174     0299                     	;# 
  6175     029A                     	;# 
  6176     029B                     	;# 
  6177     029C                     	;# 
  6178     029D                     	;# 
  6179     029F                     	;# 
  6180     030C                     	;# 
  6181     030C                     	;# 
  6182     030D                     	;# 
  6183     030E                     	;# 
  6184     030F                     	;# 
  6185     0310                     	;# 
  6186     0310                     	;# 
  6187     0311                     	;# 
  6188     0312                     	;# 
  6189     0313                     	;# 
  6190     0314                     	;# 
  6191     0314                     	;# 
  6192     0315                     	;# 
  6193     0316                     	;# 
  6194     0317                     	;# 
  6195     0318                     	;# 
  6196     0318                     	;# 
  6197     0319                     	;# 
  6198     031A                     	;# 
  6199     031B                     	;# 
  6200     031C                     	;# 
  6201     031C                     	;# 
  6202     031D                     	;# 
  6203     031E                     	;# 
  6204     031F                     	;# 
  6205     038C                     	;# 
  6206     038C                     	;# 
  6207     038D                     	;# 
  6208     038E                     	;# 
  6209     0390                     	;# 
  6210     0390                     	;# 
  6211     0391                     	;# 
  6212     0392                     	;# 
  6213     048C                     	;# 
  6214     048C                     	;# 
  6215     048D                     	;# 
  6216     048E                     	;# 
  6217     048F                     	;# 
  6218     048F                     	;# 
  6219     0490                     	;# 
  6220     0491                     	;# 
  6221     0492                     	;# 
  6222     0492                     	;# 
  6223     0493                     	;# 
  6224     0494                     	;# 
  6225     0495                     	;# 
  6226     0495                     	;# 
  6227     0496                     	;# 
  6228     0497                     	;# 
  6229     0498                     	;# 
  6230     0499                     	;# 
  6231     049A                     	;# 
  6232     049B                     	;# 
  6233     049C                     	;# 
  6234     049D                     	;# 
  6235     050C                     	;# 
  6236     050C                     	;# 
  6237     050D                     	;# 
  6238     050E                     	;# 
  6239     050F                     	;# 
  6240     050F                     	;# 
  6241     0510                     	;# 
  6242     0511                     	;# 
  6243     0512                     	;# 
  6244     0512                     	;# 
  6245     0513                     	;# 
  6246     0514                     	;# 
  6247     0515                     	;# 
  6248     0515                     	;# 
  6249     0516                     	;# 
  6250     0517                     	;# 
  6251     0518                     	;# 
  6252     0519                     	;# 
  6253     051A                     	;# 
  6254     051B                     	;# 
  6255     051C                     	;# 
  6256     051D                     	;# 
  6257     058C                     	;# 
  6258     058C                     	;# 
  6259     058D                     	;# 
  6260     058E                     	;# 
  6261     058F                     	;# 
  6262     058F                     	;# 
  6263     0590                     	;# 
  6264     0591                     	;# 
  6265     0592                     	;# 
  6266     0593                     	;# 
  6267     059C                     	;# 
  6268     059C                     	;# 
  6269     059D                     	;# 
  6270     059D                     	;# 
  6271     059E                     	;# 
  6272     059F                     	;# 
  6273     060C                     	;# 
  6274     060C                     	;# 
  6275     060D                     	;# 
  6276     060D                     	;# 
  6277     060E                     	;# 
  6278     060F                     	;# 
  6279     0610                     	;# 
  6280     0611                     	;# 
  6281     0612                     	;# 
  6282     0613                     	;# 
  6283     0614                     	;# 
  6284     0616                     	;# 
  6285     0616                     	;# 
  6286     0617                     	;# 
  6287     0617                     	;# 
  6288     0618                     	;# 
  6289     0619                     	;# 
  6290     061A                     	;# 
  6291     061B                     	;# 
  6292     061C                     	;# 
  6293     061D                     	;# 
  6294     061E                     	;# 
  6295     068C                     	;# 
  6296     068D                     	;# 
  6297     068E                     	;# 
  6298     068F                     	;# 
  6299     0690                     	;# 
  6300     0691                     	;# 
  6301     0692                     	;# 
  6302     0693                     	;# 
  6303     0694                     	;# 
  6304     070C                     	;# 
  6305     070D                     	;# 
  6306     070E                     	;# 
  6307     070F                     	;# 
  6308     0710                     	;# 
  6309     0711                     	;# 
  6310     0712                     	;# 
  6311     0713                     	;# 
  6312     0714                     	;# 
  6313     0716                     	;# 
  6314     0717                     	;# 
  6315     0718                     	;# 
  6316     0719                     	;# 
  6317     071A                     	;# 
  6318     071B                     	;# 
  6319     071C                     	;# 
  6320     071D                     	;# 
  6321     071E                     	;# 
  6322     0796                     	;# 
  6323     0797                     	;# 
  6324     0798                     	;# 
  6325     0799                     	;# 
  6326     079A                     	;# 
  6327     079B                     	;# 
  6328     079C                     	;# 
  6329     079D                     	;# 
  6330     080C                     	;# 
  6331     080D                     	;# 
  6332     080E                     	;# 
  6333     080F                     	;# 
  6334     0810                     	;# 
  6335     0811                     	;# 
  6336     0813                     	;# 
  6337     0814                     	;# 
  6338     081A                     	;# 
  6339     081A                     	;# 
  6340     081B                     	;# 
  6341     081C                     	;# 
  6342     081C                     	;# 
  6343     081D                     	;# 
  6344     081E                     	;# 
  6345     081F                     	;# 
  6346     088C                     	;# 
  6347     088D                     	;# 
  6348     088E                     	;# 
  6349     088F                     	;# 
  6350     0890                     	;# 
  6351     0891                     	;# 
  6352     0892                     	;# 
  6353     0893                     	;# 
  6354     0895                     	;# 
  6355     0896                     	;# 
  6356     0897                     	;# 
  6357     0898                     	;# 
  6358     0899                     	;# 
  6359     089A                     	;# 
  6360     089B                     	;# 
  6361     090C                     	;# 
  6362     090E                     	;# 
  6363     090F                     	;# 
  6364     091F                     	;# 
  6365     098F                     	;# 
  6366     098F                     	;# 
  6367     0990                     	;# 
  6368     0991                     	;# 
  6369     0992                     	;# 
  6370     0993                     	;# 
  6371     0994                     	;# 
  6372     0995                     	;# 
  6373     0996                     	;# 
  6374     0997                     	;# 
  6375     0A19                     	;# 
  6376     0A19                     	;# 
  6377     0A1A                     	;# 
  6378     0A1A                     	;# 
  6379     0A1B                     	;# 
  6380     0A1B                     	;# 
  6381     0A1B                     	;# 
  6382     0A1C                     	;# 
  6383     0A1C                     	;# 
  6384     0A1D                     	;# 
  6385     0A1D                     	;# 
  6386     0A1E                     	;# 
  6387     0A1E                     	;# 
  6388     0A1F                     	;# 
  6389     0A1F                     	;# 
  6390     0A1F                     	;# 
  6391     1E0F                     	;# 
  6392     1E10                     	;# 
  6393     1E11                     	;# 
  6394     1E12                     	;# 
  6395     1E13                     	;# 
  6396     1E14                     	;# 
  6397     1E15                     	;# 
  6398     1E16                     	;# 
  6399     1E17                     	;# 
  6400     1E18                     	;# 
  6401     1E19                     	;# 
  6402     1E1A                     	;# 
  6403     1E1B                     	;# 
  6404     1E1C                     	;# 
  6405     1E1D                     	;# 
  6406     1E1E                     	;# 
  6407     1E1F                     	;# 
  6408     1E20                     	;# 
  6409     1E21                     	;# 
  6410     1E22                     	;# 
  6411     1E23                     	;# 
  6412     1E24                     	;# 
  6413     1E25                     	;# 
  6414     1E26                     	;# 
  6415     1E27                     	;# 
  6416     1E28                     	;# 
  6417     1E29                     	;# 
  6418     1E2A                     	;# 
  6419     1E2B                     	;# 
  6420     1E2C                     	;# 
  6421     1E2D                     	;# 
  6422     1E2E                     	;# 
  6423     1E2F                     	;# 
  6424     1E30                     	;# 
  6425     1E31                     	;# 
  6426     1E32                     	;# 
  6427     1E33                     	;# 
  6428     1E34                     	;# 
  6429     1E35                     	;# 
  6430     1E36                     	;# 
  6431     1E37                     	;# 
  6432     1E8F                     	;# 
  6433     1E90                     	;# 
  6434     1E91                     	;# 
  6435     1E92                     	;# 
  6436     1E93                     	;# 
  6437     1E94                     	;# 
  6438     1E95                     	;# 
  6439     1E96                     	;# 
  6440     1E97                     	;# 
  6441     1E9C                     	;# 
  6442     1E9D                     	;# 
  6443     1E9E                     	;# 
  6444     1EA1                     	;# 
  6445     1EA2                     	;# 
  6446     1EA3                     	;# 
  6447     1EA4                     	;# 
  6448     1EA5                     	;# 
  6449     1EA9                     	;# 
  6450     1EAA                     	;# 
  6451     1EAB                     	;# 
  6452     1EAC                     	;# 
  6453     1EB1                     	;# 
  6454     1EB2                     	;# 
  6455     1EB3                     	;# 
  6456     1EB8                     	;# 
  6457     1EB9                     	;# 
  6458     1EBA                     	;# 
  6459     1EBB                     	;# 
  6460     1EBC                     	;# 
  6461     1EBD                     	;# 
  6462     1EBE                     	;# 
  6463     1EC3                     	;# 
  6464     1EC5                     	;# 
  6465     1EC6                     	;# 
  6466     1EC7                     	;# 
  6467     1EC8                     	;# 
  6468     1EC9                     	;# 
  6469     1ECA                     	;# 
  6470     1ECB                     	;# 
  6471     1ECC                     	;# 
  6472     1ECD                     	;# 
  6473     1ECE                     	;# 
  6474     1F10                     	;# 
  6475     1F11                     	;# 
  6476     1F12                     	;# 
  6477     1F13                     	;# 
  6478     1F14                     	;# 
  6479     1F15                     	;# 
  6480     1F16                     	;# 
  6481     1F17                     	;# 
  6482     1F18                     	;# 
  6483     1F19                     	;# 
  6484     1F1A                     	;# 
  6485     1F1B                     	;# 
  6486     1F1C                     	;# 
  6487     1F1D                     	;# 
  6488     1F1E                     	;# 
  6489     1F1F                     	;# 
  6490     1F20                     	;# 
  6491     1F21                     	;# 
  6492     1F22                     	;# 
  6493     1F23                     	;# 
  6494     1F24                     	;# 
  6495     1F25                     	;# 
  6496     1F26                     	;# 
  6497     1F27                     	;# 
  6498     1F38                     	;# 
  6499     1F39                     	;# 
  6500     1F3A                     	;# 
  6501     1F3B                     	;# 
  6502     1F3C                     	;# 
  6503     1F3D                     	;# 
  6504     1F3E                     	;# 
  6505     1F3F                     	;# 
  6506     1F43                     	;# 
  6507     1F44                     	;# 
  6508     1F45                     	;# 
  6509     1F46                     	;# 
  6510     1F47                     	;# 
  6511     1F48                     	;# 
  6512     1F49                     	;# 
  6513     1F4A                     	;# 
  6514     1F4E                     	;# 
  6515     1F4F                     	;# 
  6516     1F50                     	;# 
  6517     1F51                     	;# 
  6518     1F52                     	;# 
  6519     1F53                     	;# 
  6520     1F54                     	;# 
  6521     1F55                     	;# 
  6522     1F65                     	;# 
  6523     1F66                     	;# 
  6524     1F67                     	;# 
  6525     1F68                     	;# 
  6526     1F69                     	;# 
  6527     1F6A                     	;# 
  6528     1F6B                     	;# 
  6529     1FE4                     	;# 
  6530     1FE5                     	;# 
  6531     1FE6                     	;# 
  6532     1FE7                     	;# 
  6533     1FE8                     	;# 
  6534     1FE8                     	;# 
  6535     1FE9                     	;# 
  6536     1FEA                     	;# 
  6537     1FEB                     	;# 
  6538     1FED                     	;# 
  6539     1FEE                     	;# 
  6540     1FEF                     	;# 
  6541     0000                     	;# 
  6542     0001                     	;# 
  6543     0002                     	;# 
  6544     0003                     	;# 
  6545     0004                     	;# 
  6546     0005                     	;# 
  6547     0006                     	;# 
  6548     0007                     	;# 
  6549     0008                     	;# 
  6550     0009                     	;# 
  6551     000A                     	;# 
  6552     000B                     	;# 
  6553     000C                     	;# 
  6554     000D                     	;# 
  6555     000E                     	;# 
  6556     0010                     	;# 
  6557     0012                     	;# 
  6558     0013                     	;# 
  6559     0014                     	;# 
  6560     0016                     	;# 
  6561     0018                     	;# 
  6562     0019                     	;# 
  6563     001A                     	;# 
  6564     001C                     	;# 
  6565     008C                     	;# 
  6566     008C                     	;# 
  6567     008D                     	;# 
  6568     008E                     	;# 
  6569     008E                     	;# 
  6570     008F                     	;# 
  6571     0090                     	;# 
  6572     0090                     	;# 
  6573     0091                     	;# 
  6574     0092                     	;# 
  6575     0092                     	;# 
  6576     0093                     	;# 
  6577     0094                     	;# 
  6578     0094                     	;# 
  6579     0095                     	;# 
  6580     0096                     	;# 
  6581     0096                     	;# 
  6582     0097                     	;# 
  6583     0098                     	;# 
  6584     0099                     	;# 
  6585     009A                     	;# 
  6586     009B                     	;# 
  6587     009B                     	;# 
  6588     009C                     	;# 
  6589     009D                     	;# 
  6590     009D                     	;# 
  6591     009E                     	;# 
  6592     009F                     	;# 
  6593     010C                     	;# 
  6594     010C                     	;# 
  6595     010D                     	;# 
  6596     010E                     	;# 
  6597     010F                     	;# 
  6598     010F                     	;# 
  6599     0110                     	;# 
  6600     0111                     	;# 
  6601     0112                     	;# 
  6602     0113                     	;# 
  6603     0114                     	;# 
  6604     0115                     	;# 
  6605     0116                     	;# 
  6606     0117                     	;# 
  6607     0118                     	;# 
  6608     0119                     	;# 
  6609     0119                     	;# 
  6610     0119                     	;# 
  6611     011A                     	;# 
  6612     011A                     	;# 
  6613     011A                     	;# 
  6614     011B                     	;# 
  6615     011B                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011C                     	;# 
  6620     011C                     	;# 
  6621     011C                     	;# 
  6622     011D                     	;# 
  6623     011D                     	;# 
  6624     011D                     	;# 
  6625     011E                     	;# 
  6626     011E                     	;# 
  6627     011E                     	;# 
  6628     011F                     	;# 
  6629     011F                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     018C                     	;# 
  6634     018D                     	;# 
  6635     018E                     	;# 
  6636     018F                     	;# 
  6637     0190                     	;# 
  6638     0191                     	;# 
  6639     0192                     	;# 
  6640     0196                     	;# 
  6641     0197                     	;# 
  6642     0198                     	;# 
  6643     0199                     	;# 
  6644     019A                     	;# 
  6645     019B                     	;# 
  6646     019C                     	;# 
  6647     020C                     	;# 
  6648     020D                     	;# 
  6649     020E                     	;# 
  6650     020E                     	;# 
  6651     020F                     	;# 
  6652     020F                     	;# 
  6653     0210                     	;# 
  6654     0210                     	;# 
  6655     0211                     	;# 
  6656     0211                     	;# 
  6657     0212                     	;# 
  6658     0213                     	;# 
  6659     0214                     	;# 
  6660     0214                     	;# 
  6661     0215                     	;# 
  6662     0215                     	;# 
  6663     0216                     	;# 
  6664     0216                     	;# 
  6665     0217                     	;# 
  6666     0217                     	;# 
  6667     0218                     	;# 
  6668     0219                     	;# 
  6669     021A                     	;# 
  6670     021A                     	;# 
  6671     021B                     	;# 
  6672     021B                     	;# 
  6673     021C                     	;# 
  6674     021C                     	;# 
  6675     021D                     	;# 
  6676     021D                     	;# 
  6677     021E                     	;# 
  6678     021F                     	;# 
  6679     028C                     	;# 
  6680     028C                     	;# 
  6681     028D                     	;# 
  6682     028D                     	;# 
  6683     028E                     	;# 
  6684     028F                     	;# 
  6685     0290                     	;# 
  6686     0291                     	;# 
  6687     0292                     	;# 
  6688     0292                     	;# 
  6689     0293                     	;# 
  6690     0293                     	;# 
  6691     0294                     	;# 
  6692     0295                     	;# 
  6693     0296                     	;# 
  6694     0297                     	;# 
  6695     0298                     	;# 
  6696     0298                     	;# 
  6697     0299                     	;# 
  6698     0299                     	;# 
  6699     029A                     	;# 
  6700     029B                     	;# 
  6701     029C                     	;# 
  6702     029D                     	;# 
  6703     029F                     	;# 
  6704     030C                     	;# 
  6705     030C                     	;# 
  6706     030D                     	;# 
  6707     030E                     	;# 
  6708     030F                     	;# 
  6709     0310                     	;# 
  6710     0310                     	;# 
  6711     0311                     	;# 
  6712     0312                     	;# 
  6713     0313                     	;# 
  6714     0314                     	;# 
  6715     0314                     	;# 
  6716     0315                     	;# 
  6717     0316                     	;# 
  6718     0317                     	;# 
  6719     0318                     	;# 
  6720     0318                     	;# 
  6721     0319                     	;# 
  6722     031A                     	;# 
  6723     031B                     	;# 
  6724     031C                     	;# 
  6725     031C                     	;# 
  6726     031D                     	;# 
  6727     031E                     	;# 
  6728     031F                     	;# 
  6729     038C                     	;# 
  6730     038C                     	;# 
  6731     038D                     	;# 
  6732     038E                     	;# 
  6733     0390                     	;# 
  6734     0390                     	;# 
  6735     0391                     	;# 
  6736     0392                     	;# 
  6737     048C                     	;# 
  6738     048C                     	;# 
  6739     048D                     	;# 
  6740     048E                     	;# 
  6741     048F                     	;# 
  6742     048F                     	;# 
  6743     0490                     	;# 
  6744     0491                     	;# 
  6745     0492                     	;# 
  6746     0492                     	;# 
  6747     0493                     	;# 
  6748     0494                     	;# 
  6749     0495                     	;# 
  6750     0495                     	;# 
  6751     0496                     	;# 
  6752     0497                     	;# 
  6753     0498                     	;# 
  6754     0499                     	;# 
  6755     049A                     	;# 
  6756     049B                     	;# 
  6757     049C                     	;# 
  6758     049D                     	;# 
  6759     050C                     	;# 
  6760     050C                     	;# 
  6761     050D                     	;# 
  6762     050E                     	;# 
  6763     050F                     	;# 
  6764     050F                     	;# 
  6765     0510                     	;# 
  6766     0511                     	;# 
  6767     0512                     	;# 
  6768     0512                     	;# 
  6769     0513                     	;# 
  6770     0514                     	;# 
  6771     0515                     	;# 
  6772     0515                     	;# 
  6773     0516                     	;# 
  6774     0517                     	;# 
  6775     0518                     	;# 
  6776     0519                     	;# 
  6777     051A                     	;# 
  6778     051B                     	;# 
  6779     051C                     	;# 
  6780     051D                     	;# 
  6781     058C                     	;# 
  6782     058C                     	;# 
  6783     058D                     	;# 
  6784     058E                     	;# 
  6785     058F                     	;# 
  6786     058F                     	;# 
  6787     0590                     	;# 
  6788     0591                     	;# 
  6789     0592                     	;# 
  6790     0593                     	;# 
  6791     059C                     	;# 
  6792     059C                     	;# 
  6793     059D                     	;# 
  6794     059D                     	;# 
  6795     059E                     	;# 
  6796     059F                     	;# 
  6797     060C                     	;# 
  6798     060C                     	;# 
  6799     060D                     	;# 
  6800     060D                     	;# 
  6801     060E                     	;# 
  6802     060F                     	;# 
  6803     0610                     	;# 
  6804     0611                     	;# 
  6805     0612                     	;# 
  6806     0613                     	;# 
  6807     0614                     	;# 
  6808     0616                     	;# 
  6809     0616                     	;# 
  6810     0617                     	;# 
  6811     0617                     	;# 
  6812     0618                     	;# 
  6813     0619                     	;# 
  6814     061A                     	;# 
  6815     061B                     	;# 
  6816     061C                     	;# 
  6817     061D                     	;# 
  6818     061E                     	;# 
  6819     068C                     	;# 
  6820     068D                     	;# 
  6821     068E                     	;# 
  6822     068F                     	;# 
  6823     0690                     	;# 
  6824     0691                     	;# 
  6825     0692                     	;# 
  6826     0693                     	;# 
  6827     0694                     	;# 
  6828     070C                     	;# 
  6829     070D                     	;# 
  6830     070E                     	;# 
  6831     070F                     	;# 
  6832     0710                     	;# 
  6833     0711                     	;# 
  6834     0712                     	;# 
  6835     0713                     	;# 
  6836     0714                     	;# 
  6837     0716                     	;# 
  6838     0717                     	;# 
  6839     0718                     	;# 
  6840     0719                     	;# 
  6841     071A                     	;# 
  6842     071B                     	;# 
  6843     071C                     	;# 
  6844     071D                     	;# 
  6845     071E                     	;# 
  6846     0796                     	;# 
  6847     0797                     	;# 
  6848     0798                     	;# 
  6849     0799                     	;# 
  6850     079A                     	;# 
  6851     079B                     	;# 
  6852     079C                     	;# 
  6853     079D                     	;# 
  6854     080C                     	;# 
  6855     080D                     	;# 
  6856     080E                     	;# 
  6857     080F                     	;# 
  6858     0810                     	;# 
  6859     0811                     	;# 
  6860     0813                     	;# 
  6861     0814                     	;# 
  6862     081A                     	;# 
  6863     081A                     	;# 
  6864     081B                     	;# 
  6865     081C                     	;# 
  6866     081C                     	;# 
  6867     081D                     	;# 
  6868     081E                     	;# 
  6869     081F                     	;# 
  6870     088C                     	;# 
  6871     088D                     	;# 
  6872     088E                     	;# 
  6873     088F                     	;# 
  6874     0890                     	;# 
  6875     0891                     	;# 
  6876     0892                     	;# 
  6877     0893                     	;# 
  6878     0895                     	;# 
  6879     0896                     	;# 
  6880     0897                     	;# 
  6881     0898                     	;# 
  6882     0899                     	;# 
  6883     089A                     	;# 
  6884     089B                     	;# 
  6885     090C                     	;# 
  6886     090E                     	;# 
  6887     090F                     	;# 
  6888     091F                     	;# 
  6889     098F                     	;# 
  6890     098F                     	;# 
  6891     0990                     	;# 
  6892     0991                     	;# 
  6893     0992                     	;# 
  6894     0993                     	;# 
  6895     0994                     	;# 
  6896     0995                     	;# 
  6897     0996                     	;# 
  6898     0997                     	;# 
  6899     0A19                     	;# 
  6900     0A19                     	;# 
  6901     0A1A                     	;# 
  6902     0A1A                     	;# 
  6903     0A1B                     	;# 
  6904     0A1B                     	;# 
  6905     0A1B                     	;# 
  6906     0A1C                     	;# 
  6907     0A1C                     	;# 
  6908     0A1D                     	;# 
  6909     0A1D                     	;# 
  6910     0A1E                     	;# 
  6911     0A1E                     	;# 
  6912     0A1F                     	;# 
  6913     0A1F                     	;# 
  6914     0A1F                     	;# 
  6915     1E0F                     	;# 
  6916     1E10                     	;# 
  6917     1E11                     	;# 
  6918     1E12                     	;# 
  6919     1E13                     	;# 
  6920     1E14                     	;# 
  6921     1E15                     	;# 
  6922     1E16                     	;# 
  6923     1E17                     	;# 
  6924     1E18                     	;# 
  6925     1E19                     	;# 
  6926     1E1A                     	;# 
  6927     1E1B                     	;# 
  6928     1E1C                     	;# 
  6929     1E1D                     	;# 
  6930     1E1E                     	;# 
  6931     1E1F                     	;# 
  6932     1E20                     	;# 
  6933     1E21                     	;# 
  6934     1E22                     	;# 
  6935     1E23                     	;# 
  6936     1E24                     	;# 
  6937     1E25                     	;# 
  6938     1E26                     	;# 
  6939     1E27                     	;# 
  6940     1E28                     	;# 
  6941     1E29                     	;# 
  6942     1E2A                     	;# 
  6943     1E2B                     	;# 
  6944     1E2C                     	;# 
  6945     1E2D                     	;# 
  6946     1E2E                     	;# 
  6947     1E2F                     	;# 
  6948     1E30                     	;# 
  6949     1E31                     	;# 
  6950     1E32                     	;# 
  6951     1E33                     	;# 
  6952     1E34                     	;# 
  6953     1E35                     	;# 
  6954     1E36                     	;# 
  6955     1E37                     	;# 
  6956     1E8F                     	;# 
  6957     1E90                     	;# 
  6958     1E91                     	;# 
  6959     1E92                     	;# 
  6960     1E93                     	;# 
  6961     1E94                     	;# 
  6962     1E95                     	;# 
  6963     1E96                     	;# 
  6964     1E97                     	;# 
  6965     1E9C                     	;# 
  6966     1E9D                     	;# 
  6967     1E9E                     	;# 
  6968     1EA1                     	;# 
  6969     1EA2                     	;# 
  6970     1EA3                     	;# 
  6971     1EA4                     	;# 
  6972     1EA5                     	;# 
  6973     1EA9                     	;# 
  6974     1EAA                     	;# 
  6975     1EAB                     	;# 
  6976     1EAC                     	;# 
  6977     1EB1                     	;# 
  6978     1EB2                     	;# 
  6979     1EB3                     	;# 
  6980     1EB8                     	;# 
  6981     1EB9                     	;# 
  6982     1EBA                     	;# 
  6983     1EBB                     	;# 
  6984     1EBC                     	;# 
  6985     1EBD                     	;# 
  6986     1EBE                     	;# 
  6987     1EC3                     	;# 
  6988     1EC5                     	;# 
  6989     1EC6                     	;# 
  6990     1EC7                     	;# 
  6991     1EC8                     	;# 
  6992     1EC9                     	;# 
  6993     1ECA                     	;# 
  6994     1ECB                     	;# 
  6995     1ECC                     	;# 
  6996     1ECD                     	;# 
  6997     1ECE                     	;# 
  6998     1F10                     	;# 
  6999     1F11                     	;# 
  7000     1F12                     	;# 
  7001     1F13                     	;# 
  7002     1F14                     	;# 
  7003     1F15                     	;# 
  7004     1F16                     	;# 
  7005     1F17                     	;# 
  7006     1F18                     	;# 
  7007     1F19                     	;# 
  7008     1F1A                     	;# 
  7009     1F1B                     	;# 
  7010     1F1C                     	;# 
  7011     1F1D                     	;# 
  7012     1F1E                     	;# 
  7013     1F1F                     	;# 
  7014     1F20                     	;# 
  7015     1F21                     	;# 
  7016     1F22                     	;# 
  7017     1F23                     	;# 
  7018     1F24                     	;# 
  7019     1F25                     	;# 
  7020     1F26                     	;# 
  7021     1F27                     	;# 
  7022     1F38                     	;# 
  7023     1F39                     	;# 
  7024     1F3A                     	;# 
  7025     1F3B                     	;# 
  7026     1F3C                     	;# 
  7027     1F3D                     	;# 
  7028     1F3E                     	;# 
  7029     1F3F                     	;# 
  7030     1F43                     	;# 
  7031     1F44                     	;# 
  7032     1F45                     	;# 
  7033     1F46                     	;# 
  7034     1F47                     	;# 
  7035     1F48                     	;# 
  7036     1F49                     	;# 
  7037     1F4A                     	;# 
  7038     1F4E                     	;# 
  7039     1F4F                     	;# 
  7040     1F50                     	;# 
  7041     1F51                     	;# 
  7042     1F52                     	;# 
  7043     1F53                     	;# 
  7044     1F54                     	;# 
  7045     1F55                     	;# 
  7046     1F65                     	;# 
  7047     1F66                     	;# 
  7048     1F67                     	;# 
  7049     1F68                     	;# 
  7050     1F69                     	;# 
  7051     1F6A                     	;# 
  7052     1F6B                     	;# 
  7053     1FE4                     	;# 
  7054     1FE5                     	;# 
  7055     1FE6                     	;# 
  7056     1FE7                     	;# 
  7057     1FE8                     	;# 
  7058     1FE8                     	;# 
  7059     1FE9                     	;# 
  7060     1FEA                     	;# 
  7061     1FEB                     	;# 
  7062     1FED                     	;# 
  7063     1FEE                     	;# 
  7064     1FEF                     	;# 
  7065     0000                     	;# 
  7066     0001                     	;# 
  7067     0002                     	;# 
  7068     0003                     	;# 
  7069     0004                     	;# 
  7070     0005                     	;# 
  7071     0006                     	;# 
  7072     0007                     	;# 
  7073     0008                     	;# 
  7074     0009                     	;# 
  7075     000A                     	;# 
  7076     000B                     	;# 
  7077     000C                     	;# 
  7078     000D                     	;# 
  7079     000E                     	;# 
  7080     0010                     	;# 
  7081     0012                     	;# 
  7082     0013                     	;# 
  7083     0014                     	;# 
  7084     0016                     	;# 
  7085     0018                     	;# 
  7086     0019                     	;# 
  7087     001A                     	;# 
  7088     001C                     	;# 
  7089     008C                     	;# 
  7090     008C                     	;# 
  7091     008D                     	;# 
  7092     008E                     	;# 
  7093     008E                     	;# 
  7094     008F                     	;# 
  7095     0090                     	;# 
  7096     0090                     	;# 
  7097     0091                     	;# 
  7098     0092                     	;# 
  7099     0092                     	;# 
  7100     0093                     	;# 
  7101     0094                     	;# 
  7102     0094                     	;# 
  7103     0095                     	;# 
  7104     0096                     	;# 
  7105     0096                     	;# 
  7106     0097                     	;# 
  7107     0098                     	;# 
  7108     0099                     	;# 
  7109     009A                     	;# 
  7110     009B                     	;# 
  7111     009B                     	;# 
  7112     009C                     	;# 
  7113     009D                     	;# 
  7114     009D                     	;# 
  7115     009E                     	;# 
  7116     009F                     	;# 
  7117     010C                     	;# 
  7118     010C                     	;# 
  7119     010D                     	;# 
  7120     010E                     	;# 
  7121     010F                     	;# 
  7122     010F                     	;# 
  7123     0110                     	;# 
  7124     0111                     	;# 
  7125     0112                     	;# 
  7126     0113                     	;# 
  7127     0114                     	;# 
  7128     0115                     	;# 
  7129     0116                     	;# 
  7130     0117                     	;# 
  7131     0118                     	;# 
  7132     0119                     	;# 
  7133     0119                     	;# 
  7134     0119                     	;# 
  7135     011A                     	;# 
  7136     011A                     	;# 
  7137     011A                     	;# 
  7138     011B                     	;# 
  7139     011B                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011C                     	;# 
  7144     011C                     	;# 
  7145     011C                     	;# 
  7146     011D                     	;# 
  7147     011D                     	;# 
  7148     011D                     	;# 
  7149     011E                     	;# 
  7150     011E                     	;# 
  7151     011E                     	;# 
  7152     011F                     	;# 
  7153     011F                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     018C                     	;# 
  7158     018D                     	;# 
  7159     018E                     	;# 
  7160     018F                     	;# 
  7161     0190                     	;# 
  7162     0191                     	;# 
  7163     0192                     	;# 
  7164     0196                     	;# 
  7165     0197                     	;# 
  7166     0198                     	;# 
  7167     0199                     	;# 
  7168     019A                     	;# 
  7169     019B                     	;# 
  7170     019C                     	;# 
  7171     020C                     	;# 
  7172     020D                     	;# 
  7173     020E                     	;# 
  7174     020E                     	;# 
  7175     020F                     	;# 
  7176     020F                     	;# 
  7177     0210                     	;# 
  7178     0210                     	;# 
  7179     0211                     	;# 
  7180     0211                     	;# 
  7181     0212                     	;# 
  7182     0213                     	;# 
  7183     0214                     	;# 
  7184     0214                     	;# 
  7185     0215                     	;# 
  7186     0215                     	;# 
  7187     0216                     	;# 
  7188     0216                     	;# 
  7189     0217                     	;# 
  7190     0217                     	;# 
  7191     0218                     	;# 
  7192     0219                     	;# 
  7193     021A                     	;# 
  7194     021A                     	;# 
  7195     021B                     	;# 
  7196     021B                     	;# 
  7197     021C                     	;# 
  7198     021C                     	;# 
  7199     021D                     	;# 
  7200     021D                     	;# 
  7201     021E                     	;# 
  7202     021F                     	;# 
  7203     028C                     	;# 
  7204     028C                     	;# 
  7205     028D                     	;# 
  7206     028D                     	;# 
  7207     028E                     	;# 
  7208     028F                     	;# 
  7209     0290                     	;# 
  7210     0291                     	;# 
  7211     0292                     	;# 
  7212     0292                     	;# 
  7213     0293                     	;# 
  7214     0293                     	;# 
  7215     0294                     	;# 
  7216     0295                     	;# 
  7217     0296                     	;# 
  7218     0297                     	;# 
  7219     0298                     	;# 
  7220     0298                     	;# 
  7221     0299                     	;# 
  7222     0299                     	;# 
  7223     029A                     	;# 
  7224     029B                     	;# 
  7225     029C                     	;# 
  7226     029D                     	;# 
  7227     029F                     	;# 
  7228     030C                     	;# 
  7229     030C                     	;# 
  7230     030D                     	;# 
  7231     030E                     	;# 
  7232     030F                     	;# 
  7233     0310                     	;# 
  7234     0310                     	;# 
  7235     0311                     	;# 
  7236     0312                     	;# 
  7237     0313                     	;# 
  7238     0314                     	;# 
  7239     0314                     	;# 
  7240     0315                     	;# 
  7241     0316                     	;# 
  7242     0317                     	;# 
  7243     0318                     	;# 
  7244     0318                     	;# 
  7245     0319                     	;# 
  7246     031A                     	;# 
  7247     031B                     	;# 
  7248     031C                     	;# 
  7249     031C                     	;# 
  7250     031D                     	;# 
  7251     031E                     	;# 
  7252     031F                     	;# 
  7253     038C                     	;# 
  7254     038C                     	;# 
  7255     038D                     	;# 
  7256     038E                     	;# 
  7257     0390                     	;# 
  7258     0390                     	;# 
  7259     0391                     	;# 
  7260     0392                     	;# 
  7261     048C                     	;# 
  7262     048C                     	;# 
  7263     048D                     	;# 
  7264     048E                     	;# 
  7265     048F                     	;# 
  7266     048F                     	;# 
  7267     0490                     	;# 
  7268     0491                     	;# 
  7269     0492                     	;# 
  7270     0492                     	;# 
  7271     0493                     	;# 
  7272     0494                     	;# 
  7273     0495                     	;# 
  7274     0495                     	;# 
  7275     0496                     	;# 
  7276     0497                     	;# 
  7277     0498                     	;# 
  7278     0499                     	;# 
  7279     049A                     	;# 
  7280     049B                     	;# 
  7281     049C                     	;# 
  7282     049D                     	;# 
  7283     050C                     	;# 
  7284     050C                     	;# 
  7285     050D                     	;# 
  7286     050E                     	;# 
  7287     050F                     	;# 
  7288     050F                     	;# 
  7289     0510                     	;# 
  7290     0511                     	;# 
  7291     0512                     	;# 
  7292     0512                     	;# 
  7293     0513                     	;# 
  7294     0514                     	;# 
  7295     0515                     	;# 
  7296     0515                     	;# 
  7297     0516                     	;# 
  7298     0517                     	;# 
  7299     0518                     	;# 
  7300     0519                     	;# 
  7301     051A                     	;# 
  7302     051B                     	;# 
  7303     051C                     	;# 
  7304     051D                     	;# 
  7305     058C                     	;# 
  7306     058C                     	;# 
  7307     058D                     	;# 
  7308     058E                     	;# 
  7309     058F                     	;# 
  7310     058F                     	;# 
  7311     0590                     	;# 
  7312     0591                     	;# 
  7313     0592                     	;# 
  7314     0593                     	;# 
  7315     059C                     	;# 
  7316     059C                     	;# 
  7317     059D                     	;# 
  7318     059D                     	;# 
  7319     059E                     	;# 
  7320     059F                     	;# 
  7321     060C                     	;# 
  7322     060C                     	;# 
  7323     060D                     	;# 
  7324     060D                     	;# 
  7325     060E                     	;# 
  7326     060F                     	;# 
  7327     0610                     	;# 
  7328     0611                     	;# 
  7329     0612                     	;# 
  7330     0613                     	;# 
  7331     0614                     	;# 
  7332     0616                     	;# 
  7333     0616                     	;# 
  7334     0617                     	;# 
  7335     0617                     	;# 
  7336     0618                     	;# 
  7337     0619                     	;# 
  7338     061A                     	;# 
  7339     061B                     	;# 
  7340     061C                     	;# 
  7341     061D                     	;# 
  7342     061E                     	;# 
  7343     068C                     	;# 
  7344     068D                     	;# 
  7345     068E                     	;# 
  7346     068F                     	;# 
  7347     0690                     	;# 
  7348     0691                     	;# 
  7349     0692                     	;# 
  7350     0693                     	;# 
  7351     0694                     	;# 
  7352     070C                     	;# 
  7353     070D                     	;# 
  7354     070E                     	;# 
  7355     070F                     	;# 
  7356     0710                     	;# 
  7357     0711                     	;# 
  7358     0712                     	;# 
  7359     0713                     	;# 
  7360     0714                     	;# 
  7361     0716                     	;# 
  7362     0717                     	;# 
  7363     0718                     	;# 
  7364     0719                     	;# 
  7365     071A                     	;# 
  7366     071B                     	;# 
  7367     071C                     	;# 
  7368     071D                     	;# 
  7369     071E                     	;# 
  7370     0796                     	;# 
  7371     0797                     	;# 
  7372     0798                     	;# 
  7373     0799                     	;# 
  7374     079A                     	;# 
  7375     079B                     	;# 
  7376     079C                     	;# 
  7377     079D                     	;# 
  7378     080C                     	;# 
  7379     080D                     	;# 
  7380     080E                     	;# 
  7381     080F                     	;# 
  7382     0810                     	;# 
  7383     0811                     	;# 
  7384     0813                     	;# 
  7385     0814                     	;# 
  7386     081A                     	;# 
  7387     081A                     	;# 
  7388     081B                     	;# 
  7389     081C                     	;# 
  7390     081C                     	;# 
  7391     081D                     	;# 
  7392     081E                     	;# 
  7393     081F                     	;# 
  7394     088C                     	;# 
  7395     088D                     	;# 
  7396     088E                     	;# 
  7397     088F                     	;# 
  7398     0890                     	;# 
  7399     0891                     	;# 
  7400     0892                     	;# 
  7401     0893                     	;# 
  7402     0895                     	;# 
  7403     0896                     	;# 
  7404     0897                     	;# 
  7405     0898                     	;# 
  7406     0899                     	;# 
  7407     089A                     	;# 
  7408     089B                     	;# 
  7409     090C                     	;# 
  7410     090E                     	;# 
  7411     090F                     	;# 
  7412     091F                     	;# 
  7413     098F                     	;# 
  7414     098F                     	;# 
  7415     0990                     	;# 
  7416     0991                     	;# 
  7417     0992                     	;# 
  7418     0993                     	;# 
  7419     0994                     	;# 
  7420     0995                     	;# 
  7421     0996                     	;# 
  7422     0997                     	;# 
  7423     0A19                     	;# 
  7424     0A19                     	;# 
  7425     0A1A                     	;# 
  7426     0A1A                     	;# 
  7427     0A1B                     	;# 
  7428     0A1B                     	;# 
  7429     0A1B                     	;# 
  7430     0A1C                     	;# 
  7431     0A1C                     	;# 
  7432     0A1D                     	;# 
  7433     0A1D                     	;# 
  7434     0A1E                     	;# 
  7435     0A1E                     	;# 
  7436     0A1F                     	;# 
  7437     0A1F                     	;# 
  7438     0A1F                     	;# 
  7439     1E0F                     	;# 
  7440     1E10                     	;# 
  7441     1E11                     	;# 
  7442     1E12                     	;# 
  7443     1E13                     	;# 
  7444     1E14                     	;# 
  7445     1E15                     	;# 
  7446     1E16                     	;# 
  7447     1E17                     	;# 
  7448     1E18                     	;# 
  7449     1E19                     	;# 
  7450     1E1A                     	;# 
  7451     1E1B                     	;# 
  7452     1E1C                     	;# 
  7453     1E1D                     	;# 
  7454     1E1E                     	;# 
  7455     1E1F                     	;# 
  7456     1E20                     	;# 
  7457     1E21                     	;# 
  7458     1E22                     	;# 
  7459     1E23                     	;# 
  7460     1E24                     	;# 
  7461     1E25                     	;# 
  7462     1E26                     	;# 
  7463     1E27                     	;# 
  7464     1E28                     	;# 
  7465     1E29                     	;# 
  7466     1E2A                     	;# 
  7467     1E2B                     	;# 
  7468     1E2C                     	;# 
  7469     1E2D                     	;# 
  7470     1E2E                     	;# 
  7471     1E2F                     	;# 
  7472     1E30                     	;# 
  7473     1E31                     	;# 
  7474     1E32                     	;# 
  7475     1E33                     	;# 
  7476     1E34                     	;# 
  7477     1E35                     	;# 
  7478     1E36                     	;# 
  7479     1E37                     	;# 
  7480     1E8F                     	;# 
  7481     1E90                     	;# 
  7482     1E91                     	;# 
  7483     1E92                     	;# 
  7484     1E93                     	;# 
  7485     1E94                     	;# 
  7486     1E95                     	;# 
  7487     1E96                     	;# 
  7488     1E97                     	;# 
  7489     1E9C                     	;# 
  7490     1E9D                     	;# 
  7491     1E9E                     	;# 
  7492     1EA1                     	;# 
  7493     1EA2                     	;# 
  7494     1EA3                     	;# 
  7495     1EA4                     	;# 
  7496     1EA5                     	;# 
  7497     1EA9                     	;# 
  7498     1EAA                     	;# 
  7499     1EAB                     	;# 
  7500     1EAC                     	;# 
  7501     1EB1                     	;# 
  7502     1EB2                     	;# 
  7503     1EB3                     	;# 
  7504     1EB8                     	;# 
  7505     1EB9                     	;# 
  7506     1EBA                     	;# 
  7507     1EBB                     	;# 
  7508     1EBC                     	;# 
  7509     1EBD                     	;# 
  7510     1EBE                     	;# 
  7511     1EC3                     	;# 
  7512     1EC5                     	;# 
  7513     1EC6                     	;# 
  7514     1EC7                     	;# 
  7515     1EC8                     	;# 
  7516     1EC9                     	;# 
  7517     1ECA                     	;# 
  7518     1ECB                     	;# 
  7519     1ECC                     	;# 
  7520     1ECD                     	;# 
  7521     1ECE                     	;# 
  7522     1F10                     	;# 
  7523     1F11                     	;# 
  7524     1F12                     	;# 
  7525     1F13                     	;# 
  7526     1F14                     	;# 
  7527     1F15                     	;# 
  7528     1F16                     	;# 
  7529     1F17                     	;# 
  7530     1F18                     	;# 
  7531     1F19                     	;# 
  7532     1F1A                     	;# 
  7533     1F1B                     	;# 
  7534     1F1C                     	;# 
  7535     1F1D                     	;# 
  7536     1F1E                     	;# 
  7537     1F1F                     	;# 
  7538     1F20                     	;# 
  7539     1F21                     	;# 
  7540     1F22                     	;# 
  7541     1F23                     	;# 
  7542     1F24                     	;# 
  7543     1F25                     	;# 
  7544     1F26                     	;# 
  7545     1F27                     	;# 
  7546     1F38                     	;# 
  7547     1F39                     	;# 
  7548     1F3A                     	;# 
  7549     1F3B                     	;# 
  7550     1F3C                     	;# 
  7551     1F3D                     	;# 
  7552     1F3E                     	;# 
  7553     1F3F                     	;# 
  7554     1F43                     	;# 
  7555     1F44                     	;# 
  7556     1F45                     	;# 
  7557     1F46                     	;# 
  7558     1F47                     	;# 
  7559     1F48                     	;# 
  7560     1F49                     	;# 
  7561     1F4A                     	;# 
  7562     1F4E                     	;# 
  7563     1F4F                     	;# 
  7564     1F50                     	;# 
  7565     1F51                     	;# 
  7566     1F52                     	;# 
  7567     1F53                     	;# 
  7568     1F54                     	;# 
  7569     1F55                     	;# 
  7570     1F65                     	;# 
  7571     1F66                     	;# 
  7572     1F67                     	;# 
  7573     1F68                     	;# 
  7574     1F69                     	;# 
  7575     1F6A                     	;# 
  7576     1F6B                     	;# 
  7577     1FE4                     	;# 
  7578     1FE5                     	;# 
  7579     1FE6                     	;# 
  7580     1FE7                     	;# 
  7581     1FE8                     	;# 
  7582     1FE8                     	;# 
  7583     1FE9                     	;# 
  7584     1FEA                     	;# 
  7585     1FEB                     	;# 
  7586     1FED                     	;# 
  7587     1FEE                     	;# 
  7588     1FEF                     	;# 
  7589     0000                     	;# 
  7590     0001                     	;# 
  7591     0002                     	;# 
  7592     0003                     	;# 
  7593     0004                     	;# 
  7594     0005                     	;# 
  7595     0006                     	;# 
  7596     0007                     	;# 
  7597     0008                     	;# 
  7598     0009                     	;# 
  7599     000A                     	;# 
  7600     000B                     	;# 
  7601     000C                     	;# 
  7602     000D                     	;# 
  7603     000E                     	;# 
  7604     0010                     	;# 
  7605     0012                     	;# 
  7606     0013                     	;# 
  7607     0014                     	;# 
  7608     0016                     	;# 
  7609     0018                     	;# 
  7610     0019                     	;# 
  7611     001A                     	;# 
  7612     001C                     	;# 
  7613     008C                     	;# 
  7614     008C                     	;# 
  7615     008D                     	;# 
  7616     008E                     	;# 
  7617     008E                     	;# 
  7618     008F                     	;# 
  7619     0090                     	;# 
  7620     0090                     	;# 
  7621     0091                     	;# 
  7622     0092                     	;# 
  7623     0092                     	;# 
  7624     0093                     	;# 
  7625     0094                     	;# 
  7626     0094                     	;# 
  7627     0095                     	;# 
  7628     0096                     	;# 
  7629     0096                     	;# 
  7630     0097                     	;# 
  7631     0098                     	;# 
  7632     0099                     	;# 
  7633     009A                     	;# 
  7634     009B                     	;# 
  7635     009B                     	;# 
  7636     009C                     	;# 
  7637     009D                     	;# 
  7638     009D                     	;# 
  7639     009E                     	;# 
  7640     009F                     	;# 
  7641     010C                     	;# 
  7642     010C                     	;# 
  7643     010D                     	;# 
  7644     010E                     	;# 
  7645     010F                     	;# 
  7646     010F                     	;# 
  7647     0110                     	;# 
  7648     0111                     	;# 
  7649     0112                     	;# 
  7650     0113                     	;# 
  7651     0114                     	;# 
  7652     0115                     	;# 
  7653     0116                     	;# 
  7654     0117                     	;# 
  7655     0118                     	;# 
  7656     0119                     	;# 
  7657     0119                     	;# 
  7658     0119                     	;# 
  7659     011A                     	;# 
  7660     011A                     	;# 
  7661     011A                     	;# 
  7662     011B                     	;# 
  7663     011B                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011C                     	;# 
  7668     011C                     	;# 
  7669     011C                     	;# 
  7670     011D                     	;# 
  7671     011D                     	;# 
  7672     011D                     	;# 
  7673     011E                     	;# 
  7674     011E                     	;# 
  7675     011E                     	;# 
  7676     011F                     	;# 
  7677     011F                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     018C                     	;# 
  7682     018D                     	;# 
  7683     018E                     	;# 
  7684     018F                     	;# 
  7685     0190                     	;# 
  7686     0191                     	;# 
  7687     0192                     	;# 
  7688     0196                     	;# 
  7689     0197                     	;# 
  7690     0198                     	;# 
  7691     0199                     	;# 
  7692     019A                     	;# 
  7693     019B                     	;# 
  7694     019C                     	;# 
  7695     020C                     	;# 
  7696     020D                     	;# 
  7697     020E                     	;# 
  7698     020E                     	;# 
  7699     020F                     	;# 
  7700     020F                     	;# 
  7701     0210                     	;# 
  7702     0210                     	;# 
  7703     0211                     	;# 
  7704     0211                     	;# 
  7705     0212                     	;# 
  7706     0213                     	;# 
  7707     0214                     	;# 
  7708     0214                     	;# 
  7709     0215                     	;# 
  7710     0215                     	;# 
  7711     0216                     	;# 
  7712     0216                     	;# 
  7713     0217                     	;# 
  7714     0217                     	;# 
  7715     0218                     	;# 
  7716     0219                     	;# 
  7717     021A                     	;# 
  7718     021A                     	;# 
  7719     021B                     	;# 
  7720     021B                     	;# 
  7721     021C                     	;# 
  7722     021C                     	;# 
  7723     021D                     	;# 
  7724     021D                     	;# 
  7725     021E                     	;# 
  7726     021F                     	;# 
  7727     028C                     	;# 
  7728     028C                     	;# 
  7729     028D                     	;# 
  7730     028D                     	;# 
  7731     028E                     	;# 
  7732     028F                     	;# 
  7733     0290                     	;# 
  7734     0291                     	;# 
  7735     0292                     	;# 
  7736     0292                     	;# 
  7737     0293                     	;# 
  7738     0293                     	;# 
  7739     0294                     	;# 
  7740     0295                     	;# 
  7741     0296                     	;# 
  7742     0297                     	;# 
  7743     0298                     	;# 
  7744     0298                     	;# 
  7745     0299                     	;# 
  7746     0299                     	;# 
  7747     029A                     	;# 
  7748     029B                     	;# 
  7749     029C                     	;# 
  7750     029D                     	;# 
  7751     029F                     	;# 
  7752     030C                     	;# 
  7753     030C                     	;# 
  7754     030D                     	;# 
  7755     030E                     	;# 
  7756     030F                     	;# 
  7757     0310                     	;# 
  7758     0310                     	;# 
  7759     0311                     	;# 
  7760     0312                     	;# 
  7761     0313                     	;# 
  7762     0314                     	;# 
  7763     0314                     	;# 
  7764     0315                     	;# 
  7765     0316                     	;# 
  7766     0317                     	;# 
  7767     0318                     	;# 
  7768     0318                     	;# 
  7769     0319                     	;# 
  7770     031A                     	;# 
  7771     031B                     	;# 
  7772     031C                     	;# 
  7773     031C                     	;# 
  7774     031D                     	;# 
  7775     031E                     	;# 
  7776     031F                     	;# 
  7777     038C                     	;# 
  7778     038C                     	;# 
  7779     038D                     	;# 
  7780     038E                     	;# 
  7781     0390                     	;# 
  7782     0390                     	;# 
  7783     0391                     	;# 
  7784     0392                     	;# 
  7785     048C                     	;# 
  7786     048C                     	;# 
  7787     048D                     	;# 
  7788     048E                     	;# 
  7789     048F                     	;# 
  7790     048F                     	;# 
  7791     0490                     	;# 
  7792     0491                     	;# 
  7793     0492                     	;# 
  7794     0492                     	;# 
  7795     0493                     	;# 
  7796     0494                     	;# 
  7797     0495                     	;# 
  7798     0495                     	;# 
  7799     0496                     	;# 
  7800     0497                     	;# 
  7801     0498                     	;# 
  7802     0499                     	;# 
  7803     049A                     	;# 
  7804     049B                     	;# 
  7805     049C                     	;# 
  7806     049D                     	;# 
  7807     050C                     	;# 
  7808     050C                     	;# 
  7809     050D                     	;# 
  7810     050E                     	;# 
  7811     050F                     	;# 
  7812     050F                     	;# 
  7813     0510                     	;# 
  7814     0511                     	;# 
  7815     0512                     	;# 
  7816     0512                     	;# 
  7817     0513                     	;# 
  7818     0514                     	;# 
  7819     0515                     	;# 
  7820     0515                     	;# 
  7821     0516                     	;# 
  7822     0517                     	;# 
  7823     0518                     	;# 
  7824     0519                     	;# 
  7825     051A                     	;# 
  7826     051B                     	;# 
  7827     051C                     	;# 
  7828     051D                     	;# 
  7829     058C                     	;# 
  7830     058C                     	;# 
  7831     058D                     	;# 
  7832     058E                     	;# 
  7833     058F                     	;# 
  7834     058F                     	;# 
  7835     0590                     	;# 
  7836     0591                     	;# 
  7837     0592                     	;# 
  7838     0593                     	;# 
  7839     059C                     	;# 
  7840     059C                     	;# 
  7841     059D                     	;# 
  7842     059D                     	;# 
  7843     059E                     	;# 
  7844     059F                     	;# 
  7845     060C                     	;# 
  7846     060C                     	;# 
  7847     060D                     	;# 
  7848     060D                     	;# 
  7849     060E                     	;# 
  7850     060F                     	;# 
  7851     0610                     	;# 
  7852     0611                     	;# 
  7853     0612                     	;# 
  7854     0613                     	;# 
  7855     0614                     	;# 
  7856     0616                     	;# 
  7857     0616                     	;# 
  7858     0617                     	;# 
  7859     0617                     	;# 
  7860     0618                     	;# 
  7861     0619                     	;# 
  7862     061A                     	;# 
  7863     061B                     	;# 
  7864     061C                     	;# 
  7865     061D                     	;# 
  7866     061E                     	;# 
  7867     068C                     	;# 
  7868     068D                     	;# 
  7869     068E                     	;# 
  7870     068F                     	;# 
  7871     0690                     	;# 
  7872     0691                     	;# 
  7873     0692                     	;# 
  7874     0693                     	;# 
  7875     0694                     	;# 
  7876     070C                     	;# 
  7877     070D                     	;# 
  7878     070E                     	;# 
  7879     070F                     	;# 
  7880     0710                     	;# 
  7881     0711                     	;# 
  7882     0712                     	;# 
  7883     0713                     	;# 
  7884     0714                     	;# 
  7885     0716                     	;# 
  7886     0717                     	;# 
  7887     0718                     	;# 
  7888     0719                     	;# 
  7889     071A                     	;# 
  7890     071B                     	;# 
  7891     071C                     	;# 
  7892     071D                     	;# 
  7893     071E                     	;# 
  7894     0796                     	;# 
  7895     0797                     	;# 
  7896     0798                     	;# 
  7897     0799                     	;# 
  7898     079A                     	;# 
  7899     079B                     	;# 
  7900     079C                     	;# 
  7901     079D                     	;# 
  7902     080C                     	;# 
  7903     080D                     	;# 
  7904     080E                     	;# 
  7905     080F                     	;# 
  7906     0810                     	;# 
  7907     0811                     	;# 
  7908     0813                     	;# 
  7909     0814                     	;# 
  7910     081A                     	;# 
  7911     081A                     	;# 
  7912     081B                     	;# 
  7913     081C                     	;# 
  7914     081C                     	;# 
  7915     081D                     	;# 
  7916     081E                     	;# 
  7917     081F                     	;# 
  7918     088C                     	;# 
  7919     088D                     	;# 
  7920     088E                     	;# 
  7921     088F                     	;# 
  7922     0890                     	;# 
  7923     0891                     	;# 
  7924     0892                     	;# 
  7925     0893                     	;# 
  7926     0895                     	;# 
  7927     0896                     	;# 
  7928     0897                     	;# 
  7929     0898                     	;# 
  7930     0899                     	;# 
  7931     089A                     	;# 
  7932     089B                     	;# 
  7933     090C                     	;# 
  7934     090E                     	;# 
  7935     090F                     	;# 
  7936     091F                     	;# 
  7937     098F                     	;# 
  7938     098F                     	;# 
  7939     0990                     	;# 
  7940     0991                     	;# 
  7941     0992                     	;# 
  7942     0993                     	;# 
  7943     0994                     	;# 
  7944     0995                     	;# 
  7945     0996                     	;# 
  7946     0997                     	;# 
  7947     0A19                     	;# 
  7948     0A19                     	;# 
  7949     0A1A                     	;# 
  7950     0A1A                     	;# 
  7951     0A1B                     	;# 
  7952     0A1B                     	;# 
  7953     0A1B                     	;# 
  7954     0A1C                     	;# 
  7955     0A1C                     	;# 
  7956     0A1D                     	;# 
  7957     0A1D                     	;# 
  7958     0A1E                     	;# 
  7959     0A1E                     	;# 
  7960     0A1F                     	;# 
  7961     0A1F                     	;# 
  7962     0A1F                     	;# 
  7963     1E0F                     	;# 
  7964     1E10                     	;# 
  7965     1E11                     	;# 
  7966     1E12                     	;# 
  7967     1E13                     	;# 
  7968     1E14                     	;# 
  7969     1E15                     	;# 
  7970     1E16                     	;# 
  7971     1E17                     	;# 
  7972     1E18                     	;# 
  7973     1E19                     	;# 
  7974     1E1A                     	;# 
  7975     1E1B                     	;# 
  7976     1E1C                     	;# 
  7977     1E1D                     	;# 
  7978     1E1E                     	;# 
  7979     1E1F                     	;# 
  7980     1E20                     	;# 
  7981     1E21                     	;# 
  7982     1E22                     	;# 
  7983     1E23                     	;# 
  7984     1E24                     	;# 
  7985     1E25                     	;# 
  7986     1E26                     	;# 
  7987     1E27                     	;# 
  7988     1E28                     	;# 
  7989     1E29                     	;# 
  7990     1E2A                     	;# 
  7991     1E2B                     	;# 
  7992     1E2C                     	;# 
  7993     1E2D                     	;# 
  7994     1E2E                     	;# 
  7995     1E2F                     	;# 
  7996     1E30                     	;# 
  7997     1E31                     	;# 
  7998     1E32                     	;# 
  7999     1E33                     	;# 
  8000     1E34                     	;# 
  8001     1E35                     	;# 
  8002     1E36                     	;# 
  8003     1E37                     	;# 
  8004     1E8F                     	;# 
  8005     1E90                     	;# 
  8006     1E91                     	;# 
  8007     1E92                     	;# 
  8008     1E93                     	;# 
  8009     1E94                     	;# 
  8010     1E95                     	;# 
  8011     1E96                     	;# 
  8012     1E97                     	;# 
  8013     1E9C                     	;# 
  8014     1E9D                     	;# 
  8015     1E9E                     	;# 
  8016     1EA1                     	;# 
  8017     1EA2                     	;# 
  8018     1EA3                     	;# 
  8019     1EA4                     	;# 
  8020     1EA5                     	;# 
  8021     1EA9                     	;# 
  8022     1EAA                     	;# 
  8023     1EAB                     	;# 
  8024     1EAC                     	;# 
  8025     1EB1                     	;# 
  8026     1EB2                     	;# 
  8027     1EB3                     	;# 
  8028     1EB8                     	;# 
  8029     1EB9                     	;# 
  8030     1EBA                     	;# 
  8031     1EBB                     	;# 
  8032     1EBC                     	;# 
  8033     1EBD                     	;# 
  8034     1EBE                     	;# 
  8035     1EC3                     	;# 
  8036     1EC5                     	;# 
  8037     1EC6                     	;# 
  8038     1EC7                     	;# 
  8039     1EC8                     	;# 
  8040     1EC9                     	;# 
  8041     1ECA                     	;# 
  8042     1ECB                     	;# 
  8043     1ECC                     	;# 
  8044     1ECD                     	;# 
  8045     1ECE                     	;# 
  8046     1F10                     	;# 
  8047     1F11                     	;# 
  8048     1F12                     	;# 
  8049     1F13                     	;# 
  8050     1F14                     	;# 
  8051     1F15                     	;# 
  8052     1F16                     	;# 
  8053     1F17                     	;# 
  8054     1F18                     	;# 
  8055     1F19                     	;# 
  8056     1F1A                     	;# 
  8057     1F1B                     	;# 
  8058     1F1C                     	;# 
  8059     1F1D                     	;# 
  8060     1F1E                     	;# 
  8061     1F1F                     	;# 
  8062     1F20                     	;# 
  8063     1F21                     	;# 
  8064     1F22                     	;# 
  8065     1F23                     	;# 
  8066     1F24                     	;# 
  8067     1F25                     	;# 
  8068     1F26                     	;# 
  8069     1F27                     	;# 
  8070     1F38                     	;# 
  8071     1F39                     	;# 
  8072     1F3A                     	;# 
  8073     1F3B                     	;# 
  8074     1F3C                     	;# 
  8075     1F3D                     	;# 
  8076     1F3E                     	;# 
  8077     1F3F                     	;# 
  8078     1F43                     	;# 
  8079     1F44                     	;# 
  8080     1F45                     	;# 
  8081     1F46                     	;# 
  8082     1F47                     	;# 
  8083     1F48                     	;# 
  8084     1F49                     	;# 
  8085     1F4A                     	;# 
  8086     1F4E                     	;# 
  8087     1F4F                     	;# 
  8088     1F50                     	;# 
  8089     1F51                     	;# 
  8090     1F52                     	;# 
  8091     1F53                     	;# 
  8092     1F54                     	;# 
  8093     1F55                     	;# 
  8094     1F65                     	;# 
  8095     1F66                     	;# 
  8096     1F67                     	;# 
  8097     1F68                     	;# 
  8098     1F69                     	;# 
  8099     1F6A                     	;# 
  8100     1F6B                     	;# 
  8101     1FE4                     	;# 
  8102     1FE5                     	;# 
  8103     1FE6                     	;# 
  8104     1FE7                     	;# 
  8105     1FE8                     	;# 
  8106     1FE8                     	;# 
  8107     1FE9                     	;# 
  8108     1FEA                     	;# 
  8109     1FEB                     	;# 
  8110     1FED                     	;# 
  8111     1FEE                     	;# 
  8112     1FEF                     	;# 
  8113     0000                     	;# 
  8114     0001                     	;# 
  8115     0002                     	;# 
  8116     0003                     	;# 
  8117     0004                     	;# 
  8118     0005                     	;# 
  8119     0006                     	;# 
  8120     0007                     	;# 
  8121     0008                     	;# 
  8122     0009                     	;# 
  8123     000A                     	;# 
  8124     000B                     	;# 
  8125     000C                     	;# 
  8126     000D                     	;# 
  8127     000E                     	;# 
  8128     0010                     	;# 
  8129     0012                     	;# 
  8130     0013                     	;# 
  8131     0014                     	;# 
  8132     0016                     	;# 
  8133     0018                     	;# 
  8134     0019                     	;# 
  8135     001A                     	;# 
  8136     001C                     	;# 
  8137     008C                     	;# 
  8138     008C                     	;# 
  8139     008D                     	;# 
  8140     008E                     	;# 
  8141     008E                     	;# 
  8142     008F                     	;# 
  8143     0090                     	;# 
  8144     0090                     	;# 
  8145     0091                     	;# 
  8146     0092                     	;# 
  8147     0092                     	;# 
  8148     0093                     	;# 
  8149     0094                     	;# 
  8150     0094                     	;# 
  8151     0095                     	;# 
  8152     0096                     	;# 
  8153     0096                     	;# 
  8154     0097                     	;# 
  8155     0098                     	;# 
  8156     0099                     	;# 
  8157     009A                     	;# 
  8158     009B                     	;# 
  8159     009B                     	;# 
  8160     009C                     	;# 
  8161     009D                     	;# 
  8162     009D                     	;# 
  8163     009E                     	;# 
  8164     009F                     	;# 
  8165     010C                     	;# 
  8166     010C                     	;# 
  8167     010D                     	;# 
  8168     010E                     	;# 
  8169     010F                     	;# 
  8170     010F                     	;# 
  8171     0110                     	;# 
  8172     0111                     	;# 
  8173     0112                     	;# 
  8174     0113                     	;# 
  8175     0114                     	;# 
  8176     0115                     	;# 
  8177     0116                     	;# 
  8178     0117                     	;# 
  8179     0118                     	;# 
  8180     0119                     	;# 
  8181     0119                     	;# 
  8182     0119                     	;# 
  8183     011A                     	;# 
  8184     011A                     	;# 
  8185     011A                     	;# 
  8186     011B                     	;# 
  8187     011B                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011C                     	;# 
  8192     011C                     	;# 
  8193     011C                     	;# 
  8194     011D                     	;# 
  8195     011D                     	;# 
  8196     011D                     	;# 
  8197     011E                     	;# 
  8198     011E                     	;# 
  8199     011E                     	;# 
  8200     011F                     	;# 
  8201     011F                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     018C                     	;# 
  8206     018D                     	;# 
  8207     018E                     	;# 
  8208     018F                     	;# 
  8209     0190                     	;# 
  8210     0191                     	;# 
  8211     0192                     	;# 
  8212     0196                     	;# 
  8213     0197                     	;# 
  8214     0198                     	;# 
  8215     0199                     	;# 
  8216     019A                     	;# 
  8217     019B                     	;# 
  8218     019C                     	;# 
  8219     020C                     	;# 
  8220     020D                     	;# 
  8221     020E                     	;# 
  8222     020E                     	;# 
  8223     020F                     	;# 
  8224     020F                     	;# 
  8225     0210                     	;# 
  8226     0210                     	;# 
  8227     0211                     	;# 
  8228     0211                     	;# 
  8229     0212                     	;# 
  8230     0213                     	;# 
  8231     0214                     	;# 
  8232     0214                     	;# 
  8233     0215                     	;# 
  8234     0215                     	;# 
  8235     0216                     	;# 
  8236     0216                     	;# 
  8237     0217                     	;# 
  8238     0217                     	;# 
  8239     0218                     	;# 
  8240     0219                     	;# 
  8241     021A                     	;# 
  8242     021A                     	;# 
  8243     021B                     	;# 
  8244     021B                     	;# 
  8245     021C                     	;# 
  8246     021C                     	;# 
  8247     021D                     	;# 
  8248     021D                     	;# 
  8249     021E                     	;# 
  8250     021F                     	;# 
  8251     028C                     	;# 
  8252     028C                     	;# 
  8253     028D                     	;# 
  8254     028D                     	;# 
  8255     028E                     	;# 
  8256     028F                     	;# 
  8257     0290                     	;# 
  8258     0291                     	;# 
  8259     0292                     	;# 
  8260     0292                     	;# 
  8261     0293                     	;# 
  8262     0293                     	;# 
  8263     0294                     	;# 
  8264     0295                     	;# 
  8265     0296                     	;# 
  8266     0297                     	;# 
  8267     0298                     	;# 
  8268     0298                     	;# 
  8269     0299                     	;# 
  8270     0299                     	;# 
  8271     029A                     	;# 
  8272     029B                     	;# 
  8273     029C                     	;# 
  8274     029D                     	;# 
  8275     029F                     	;# 
  8276     030C                     	;# 
  8277     030C                     	;# 
  8278     030D                     	;# 
  8279     030E                     	;# 
  8280     030F                     	;# 
  8281     0310                     	;# 
  8282     0310                     	;# 
  8283     0311                     	;# 
  8284     0312                     	;# 
  8285     0313                     	;# 
  8286     0314                     	;# 
  8287     0314                     	;# 
  8288     0315                     	;# 
  8289     0316                     	;# 
  8290     0317                     	;# 
  8291     0318                     	;# 
  8292     0318                     	;# 
  8293     0319                     	;# 
  8294     031A                     	;# 
  8295     031B                     	;# 
  8296     031C                     	;# 
  8297     031C                     	;# 
  8298     031D                     	;# 
  8299     031E                     	;# 
  8300     031F                     	;# 
  8301     038C                     	;# 
  8302     038C                     	;# 
  8303     038D                     	;# 
  8304     038E                     	;# 
  8305     0390                     	;# 
  8306     0390                     	;# 
  8307     0391                     	;# 
  8308     0392                     	;# 
  8309     048C                     	;# 
  8310     048C                     	;# 
  8311     048D                     	;# 
  8312     048E                     	;# 
  8313     048F                     	;# 
  8314     048F                     	;# 
  8315     0490                     	;# 
  8316     0491                     	;# 
  8317     0492                     	;# 
  8318     0492                     	;# 
  8319     0493                     	;# 
  8320     0494                     	;# 
  8321     0495                     	;# 
  8322     0495                     	;# 
  8323     0496                     	;# 
  8324     0497                     	;# 
  8325     0498                     	;# 
  8326     0499                     	;# 
  8327     049A                     	;# 
  8328     049B                     	;# 
  8329     049C                     	;# 
  8330     049D                     	;# 
  8331     050C                     	;# 
  8332     050C                     	;# 
  8333     050D                     	;# 
  8334     050E                     	;# 
  8335     050F                     	;# 
  8336     050F                     	;# 
  8337     0510                     	;# 
  8338     0511                     	;# 
  8339     0512                     	;# 
  8340     0512                     	;# 
  8341     0513                     	;# 
  8342     0514                     	;# 
  8343     0515                     	;# 
  8344     0515                     	;# 
  8345     0516                     	;# 
  8346     0517                     	;# 
  8347     0518                     	;# 
  8348     0519                     	;# 
  8349     051A                     	;# 
  8350     051B                     	;# 
  8351     051C                     	;# 
  8352     051D                     	;# 
  8353     058C                     	;# 
  8354     058C                     	;# 
  8355     058D                     	;# 
  8356     058E                     	;# 
  8357     058F                     	;# 
  8358     058F                     	;# 
  8359     0590                     	;# 
  8360     0591                     	;# 
  8361     0592                     	;# 
  8362     0593                     	;# 
  8363     059C                     	;# 
  8364     059C                     	;# 
  8365     059D                     	;# 
  8366     059D                     	;# 
  8367     059E                     	;# 
  8368     059F                     	;# 
  8369     060C                     	;# 
  8370     060C                     	;# 
  8371     060D                     	;# 
  8372     060D                     	;# 
  8373     060E                     	;# 
  8374     060F                     	;# 
  8375     0610                     	;# 
  8376     0611                     	;# 
  8377     0612                     	;# 
  8378     0613                     	;# 
  8379     0614                     	;# 
  8380     0616                     	;# 
  8381     0616                     	;# 
  8382     0617                     	;# 
  8383     0617                     	;# 
  8384     0618                     	;# 
  8385     0619                     	;# 
  8386     061A                     	;# 
  8387     061B                     	;# 
  8388     061C                     	;# 
  8389     061D                     	;# 
  8390     061E                     	;# 
  8391     068C                     	;# 
  8392     068D                     	;# 
  8393     068E                     	;# 
  8394     068F                     	;# 
  8395     0690                     	;# 
  8396     0691                     	;# 
  8397     0692                     	;# 
  8398     0693                     	;# 
  8399     0694                     	;# 
  8400     070C                     	;# 
  8401     070D                     	;# 
  8402     070E                     	;# 
  8403     070F                     	;# 
  8404     0710                     	;# 
  8405     0711                     	;# 
  8406     0712                     	;# 
  8407     0713                     	;# 
  8408     0714                     	;# 
  8409     0716                     	;# 
  8410     0717                     	;# 
  8411     0718                     	;# 
  8412     0719                     	;# 
  8413     071A                     	;# 
  8414     071B                     	;# 
  8415     071C                     	;# 
  8416     071D                     	;# 
  8417     071E                     	;# 
  8418     0796                     	;# 
  8419     0797                     	;# 
  8420     0798                     	;# 
  8421     0799                     	;# 
  8422     079A                     	;# 
  8423     079B                     	;# 
  8424     079C                     	;# 
  8425     079D                     	;# 
  8426     080C                     	;# 
  8427     080D                     	;# 
  8428     080E                     	;# 
  8429     080F                     	;# 
  8430     0810                     	;# 
  8431     0811                     	;# 
  8432     0813                     	;# 
  8433     0814                     	;# 
  8434     081A                     	;# 
  8435     081A                     	;# 
  8436     081B                     	;# 
  8437     081C                     	;# 
  8438     081C                     	;# 
  8439     081D                     	;# 
  8440     081E                     	;# 
  8441     081F                     	;# 
  8442     088C                     	;# 
  8443     088D                     	;# 
  8444     088E                     	;# 
  8445     088F                     	;# 
  8446     0890                     	;# 
  8447     0891                     	;# 
  8448     0892                     	;# 
  8449     0893                     	;# 
  8450     0895                     	;# 
  8451     0896                     	;# 
  8452     0897                     	;# 
  8453     0898                     	;# 
  8454     0899                     	;# 
  8455     089A                     	;# 
  8456     089B                     	;# 
  8457     090C                     	;# 
  8458     090E                     	;# 
  8459     090F                     	;# 
  8460     091F                     	;# 
  8461     098F                     	;# 
  8462     098F                     	;# 
  8463     0990                     	;# 
  8464     0991                     	;# 
  8465     0992                     	;# 
  8466     0993                     	;# 
  8467     0994                     	;# 
  8468     0995                     	;# 
  8469     0996                     	;# 
  8470     0997                     	;# 
  8471     0A19                     	;# 
  8472     0A19                     	;# 
  8473     0A1A                     	;# 
  8474     0A1A                     	;# 
  8475     0A1B                     	;# 
  8476     0A1B                     	;# 
  8477     0A1B                     	;# 
  8478     0A1C                     	;# 
  8479     0A1C                     	;# 
  8480     0A1D                     	;# 
  8481     0A1D                     	;# 
  8482     0A1E                     	;# 
  8483     0A1E                     	;# 
  8484     0A1F                     	;# 
  8485     0A1F                     	;# 
  8486     0A1F                     	;# 
  8487     1E0F                     	;# 
  8488     1E10                     	;# 
  8489     1E11                     	;# 
  8490     1E12                     	;# 
  8491     1E13                     	;# 
  8492     1E14                     	;# 
  8493     1E15                     	;# 
  8494     1E16                     	;# 
  8495     1E17                     	;# 
  8496     1E18                     	;# 
  8497     1E19                     	;# 
  8498     1E1A                     	;# 
  8499     1E1B                     	;# 
  8500     1E1C                     	;# 
  8501     1E1D                     	;# 
  8502     1E1E                     	;# 
  8503     1E1F                     	;# 
  8504     1E20                     	;# 
  8505     1E21                     	;# 
  8506     1E22                     	;# 
  8507     1E23                     	;# 
  8508     1E24                     	;# 
  8509     1E25                     	;# 
  8510     1E26                     	;# 
  8511     1E27                     	;# 
  8512     1E28                     	;# 
  8513     1E29                     	;# 
  8514     1E2A                     	;# 
  8515     1E2B                     	;# 
  8516     1E2C                     	;# 
  8517     1E2D                     	;# 
  8518     1E2E                     	;# 
  8519     1E2F                     	;# 
  8520     1E30                     	;# 
  8521     1E31                     	;# 
  8522     1E32                     	;# 
  8523     1E33                     	;# 
  8524     1E34                     	;# 
  8525     1E35                     	;# 
  8526     1E36                     	;# 
  8527     1E37                     	;# 
  8528     1E8F                     	;# 
  8529     1E90                     	;# 
  8530     1E91                     	;# 
  8531     1E92                     	;# 
  8532     1E93                     	;# 
  8533     1E94                     	;# 
  8534     1E95                     	;# 
  8535     1E96                     	;# 
  8536     1E97                     	;# 
  8537     1E9C                     	;# 
  8538     1E9D                     	;# 
  8539     1E9E                     	;# 
  8540     1EA1                     	;# 
  8541     1EA2                     	;# 
  8542     1EA3                     	;# 
  8543     1EA4                     	;# 
  8544     1EA5                     	;# 
  8545     1EA9                     	;# 
  8546     1EAA                     	;# 
  8547     1EAB                     	;# 
  8548     1EAC                     	;# 
  8549     1EB1                     	;# 
  8550     1EB2                     	;# 
  8551     1EB3                     	;# 
  8552     1EB8                     	;# 
  8553     1EB9                     	;# 
  8554     1EBA                     	;# 
  8555     1EBB                     	;# 
  8556     1EBC                     	;# 
  8557     1EBD                     	;# 
  8558     1EBE                     	;# 
  8559     1EC3                     	;# 
  8560     1EC5                     	;# 
  8561     1EC6                     	;# 
  8562     1EC7                     	;# 
  8563     1EC8                     	;# 
  8564     1EC9                     	;# 
  8565     1ECA                     	;# 
  8566     1ECB                     	;# 
  8567     1ECC                     	;# 
  8568     1ECD                     	;# 
  8569     1ECE                     	;# 
  8570     1F10                     	;# 
  8571     1F11                     	;# 
  8572     1F12                     	;# 
  8573     1F13                     	;# 
  8574     1F14                     	;# 
  8575     1F15                     	;# 
  8576     1F16                     	;# 
  8577     1F17                     	;# 
  8578     1F18                     	;# 
  8579     1F19                     	;# 
  8580     1F1A                     	;# 
  8581     1F1B                     	;# 
  8582     1F1C                     	;# 
  8583     1F1D                     	;# 
  8584     1F1E                     	;# 
  8585     1F1F                     	;# 
  8586     1F20                     	;# 
  8587     1F21                     	;# 
  8588     1F22                     	;# 
  8589     1F23                     	;# 
  8590     1F24                     	;# 
  8591     1F25                     	;# 
  8592     1F26                     	;# 
  8593     1F27                     	;# 
  8594     1F38                     	;# 
  8595     1F39                     	;# 
  8596     1F3A                     	;# 
  8597     1F3B                     	;# 
  8598     1F3C                     	;# 
  8599     1F3D                     	;# 
  8600     1F3E                     	;# 
  8601     1F3F                     	;# 
  8602     1F43                     	;# 
  8603     1F44                     	;# 
  8604     1F45                     	;# 
  8605     1F46                     	;# 
  8606     1F47                     	;# 
  8607     1F48                     	;# 
  8608     1F49                     	;# 
  8609     1F4A                     	;# 
  8610     1F4E                     	;# 
  8611     1F4F                     	;# 
  8612     1F50                     	;# 
  8613     1F51                     	;# 
  8614     1F52                     	;# 
  8615     1F53                     	;# 
  8616     1F54                     	;# 
  8617     1F55                     	;# 
  8618     1F65                     	;# 
  8619     1F66                     	;# 
  8620     1F67                     	;# 
  8621     1F68                     	;# 
  8622     1F69                     	;# 
  8623     1F6A                     	;# 
  8624     1F6B                     	;# 
  8625     1FE4                     	;# 
  8626     1FE5                     	;# 
  8627     1FE6                     	;# 
  8628     1FE7                     	;# 
  8629     1FE8                     	;# 
  8630     1FE8                     	;# 
  8631     1FE9                     	;# 
  8632     1FEA                     	;# 
  8633     1FEB                     	;# 
  8634     1FED                     	;# 
  8635     1FEE                     	;# 
  8636     1FEF                     	;# 
  8637     0000                     	;# 
  8638     0001                     	;# 
  8639     0002                     	;# 
  8640     0003                     	;# 
  8641     0004                     	;# 
  8642     0005                     	;# 
  8643     0006                     	;# 
  8644     0007                     	;# 
  8645     0008                     	;# 
  8646     0009                     	;# 
  8647     000A                     	;# 
  8648     000B                     	;# 
  8649     000C                     	;# 
  8650     000D                     	;# 
  8651     000E                     	;# 
  8652     0010                     	;# 
  8653     0012                     	;# 
  8654     0013                     	;# 
  8655     0014                     	;# 
  8656     0016                     	;# 
  8657     0018                     	;# 
  8658     0019                     	;# 
  8659     001A                     	;# 
  8660     001C                     	;# 
  8661     008C                     	;# 
  8662     008C                     	;# 
  8663     008D                     	;# 
  8664     008E                     	;# 
  8665     008E                     	;# 
  8666     008F                     	;# 
  8667     0090                     	;# 
  8668     0090                     	;# 
  8669     0091                     	;# 
  8670     0092                     	;# 
  8671     0092                     	;# 
  8672     0093                     	;# 
  8673     0094                     	;# 
  8674     0094                     	;# 
  8675     0095                     	;# 
  8676     0096                     	;# 
  8677     0096                     	;# 
  8678     0097                     	;# 
  8679     0098                     	;# 
  8680     0099                     	;# 
  8681     009A                     	;# 
  8682     009B                     	;# 
  8683     009B                     	;# 
  8684     009C                     	;# 
  8685     009D                     	;# 
  8686     009D                     	;# 
  8687     009E                     	;# 
  8688     009F                     	;# 
  8689     010C                     	;# 
  8690     010C                     	;# 
  8691     010D                     	;# 
  8692     010E                     	;# 
  8693     010F                     	;# 
  8694     010F                     	;# 
  8695     0110                     	;# 
  8696     0111                     	;# 
  8697     0112                     	;# 
  8698     0113                     	;# 
  8699     0114                     	;# 
  8700     0115                     	;# 
  8701     0116                     	;# 
  8702     0117                     	;# 
  8703     0118                     	;# 
  8704     0119                     	;# 
  8705     0119                     	;# 
  8706     0119                     	;# 
  8707     011A                     	;# 
  8708     011A                     	;# 
  8709     011A                     	;# 
  8710     011B                     	;# 
  8711     011B                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011C                     	;# 
  8716     011C                     	;# 
  8717     011C                     	;# 
  8718     011D                     	;# 
  8719     011D                     	;# 
  8720     011D                     	;# 
  8721     011E                     	;# 
  8722     011E                     	;# 
  8723     011E                     	;# 
  8724     011F                     	;# 
  8725     011F                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     018C                     	;# 
  8730     018D                     	;# 
  8731     018E                     	;# 
  8732     018F                     	;# 
  8733     0190                     	;# 
  8734     0191                     	;# 
  8735     0192                     	;# 
  8736     0196                     	;# 
  8737     0197                     	;# 
  8738     0198                     	;# 
  8739     0199                     	;# 
  8740     019A                     	;# 
  8741     019B                     	;# 
  8742     019C                     	;# 
  8743     020C                     	;# 
  8744     020D                     	;# 
  8745     020E                     	;# 
  8746     020E                     	;# 
  8747     020F                     	;# 
  8748     020F                     	;# 
  8749     0210                     	;# 
  8750     0210                     	;# 
  8751     0211                     	;# 
  8752     0211                     	;# 
  8753     0212                     	;# 
  8754     0213                     	;# 
  8755     0214                     	;# 
  8756     0214                     	;# 
  8757     0215                     	;# 
  8758     0215                     	;# 
  8759     0216                     	;# 
  8760     0216                     	;# 
  8761     0217                     	;# 
  8762     0217                     	;# 
  8763     0218                     	;# 
  8764     0219                     	;# 
  8765     021A                     	;# 
  8766     021A                     	;# 
  8767     021B                     	;# 
  8768     021B                     	;# 
  8769     021C                     	;# 
  8770     021C                     	;# 
  8771     021D                     	;# 
  8772     021D                     	;# 
  8773     021E                     	;# 
  8774     021F                     	;# 
  8775     028C                     	;# 
  8776     028C                     	;# 
  8777     028D                     	;# 
  8778     028D                     	;# 
  8779     028E                     	;# 
  8780     028F                     	;# 
  8781     0290                     	;# 
  8782     0291                     	;# 
  8783     0292                     	;# 
  8784     0292                     	;# 
  8785     0293                     	;# 
  8786     0293                     	;# 
  8787     0294                     	;# 
  8788     0295                     	;# 
  8789     0296                     	;# 
  8790     0297                     	;# 
  8791     0298                     	;# 
  8792     0298                     	;# 
  8793     0299                     	;# 
  8794     0299                     	;# 
  8795     029A                     	;# 
  8796     029B                     	;# 
  8797     029C                     	;# 
  8798     029D                     	;# 
  8799     029F                     	;# 
  8800     030C                     	;# 
  8801     030C                     	;# 
  8802     030D                     	;# 
  8803     030E                     	;# 
  8804     030F                     	;# 
  8805     0310                     	;# 
  8806     0310                     	;# 
  8807     0311                     	;# 
  8808     0312                     	;# 
  8809     0313                     	;# 
  8810     0314                     	;# 
  8811     0314                     	;# 
  8812     0315                     	;# 
  8813     0316                     	;# 
  8814     0317                     	;# 
  8815     0318                     	;# 
  8816     0318                     	;# 
  8817     0319                     	;# 
  8818     031A                     	;# 
  8819     031B                     	;# 
  8820     031C                     	;# 
  8821     031C                     	;# 
  8822     031D                     	;# 
  8823     031E                     	;# 
  8824     031F                     	;# 
  8825     038C                     	;# 
  8826     038C                     	;# 
  8827     038D                     	;# 
  8828     038E                     	;# 
  8829     0390                     	;# 
  8830     0390                     	;# 
  8831     0391                     	;# 
  8832     0392                     	;# 
  8833     048C                     	;# 
  8834     048C                     	;# 
  8835     048D                     	;# 
  8836     048E                     	;# 
  8837     048F                     	;# 
  8838     048F                     	;# 
  8839     0490                     	;# 
  8840     0491                     	;# 
  8841     0492                     	;# 
  8842     0492                     	;# 
  8843     0493                     	;# 
  8844     0494                     	;# 
  8845     0495                     	;# 
  8846     0495                     	;# 
  8847     0496                     	;# 
  8848     0497                     	;# 
  8849     0498                     	;# 
  8850     0499                     	;# 
  8851     049A                     	;# 
  8852     049B                     	;# 
  8853     049C                     	;# 
  8854     049D                     	;# 
  8855     050C                     	;# 
  8856     050C                     	;# 
  8857     050D                     	;# 
  8858     050E                     	;# 
  8859     050F                     	;# 
  8860     050F                     	;# 
  8861     0510                     	;# 
  8862     0511                     	;# 
  8863     0512                     	;# 
  8864     0512                     	;# 
  8865     0513                     	;# 
  8866     0514                     	;# 
  8867     0515                     	;# 
  8868     0515                     	;# 
  8869     0516                     	;# 
  8870     0517                     	;# 
  8871     0518                     	;# 
  8872     0519                     	;# 
  8873     051A                     	;# 
  8874     051B                     	;# 
  8875     051C                     	;# 
  8876     051D                     	;# 
  8877     058C                     	;# 
  8878     058C                     	;# 
  8879     058D                     	;# 
  8880     058E                     	;# 
  8881     058F                     	;# 
  8882     058F                     	;# 
  8883     0590                     	;# 
  8884     0591                     	;# 
  8885     0592                     	;# 
  8886     0593                     	;# 
  8887     059C                     	;# 
  8888     059C                     	;# 
  8889     059D                     	;# 
  8890     059D                     	;# 
  8891     059E                     	;# 
  8892     059F                     	;# 
  8893     060C                     	;# 
  8894     060C                     	;# 
  8895     060D                     	;# 
  8896     060D                     	;# 
  8897     060E                     	;# 
  8898     060F                     	;# 
  8899     0610                     	;# 
  8900     0611                     	;# 
  8901     0612                     	;# 
  8902     0613                     	;# 
  8903     0614                     	;# 
  8904     0616                     	;# 
  8905     0616                     	;# 
  8906     0617                     	;# 
  8907     0617                     	;# 
  8908     0618                     	;# 
  8909     0619                     	;# 
  8910     061A                     	;# 
  8911     061B                     	;# 
  8912     061C                     	;# 
  8913     061D                     	;# 
  8914     061E                     	;# 
  8915     068C                     	;# 
  8916     068D                     	;# 
  8917     068E                     	;# 
  8918     068F                     	;# 
  8919     0690                     	;# 
  8920     0691                     	;# 
  8921     0692                     	;# 
  8922     0693                     	;# 
  8923     0694                     	;# 
  8924     070C                     	;# 
  8925     070D                     	;# 
  8926     070E                     	;# 
  8927     070F                     	;# 
  8928     0710                     	;# 
  8929     0711                     	;# 
  8930     0712                     	;# 
  8931     0713                     	;# 
  8932     0714                     	;# 
  8933     0716                     	;# 
  8934     0717                     	;# 
  8935     0718                     	;# 
  8936     0719                     	;# 
  8937     071A                     	;# 
  8938     071B                     	;# 
  8939     071C                     	;# 
  8940     071D                     	;# 
  8941     071E                     	;# 
  8942     0796                     	;# 
  8943     0797                     	;# 
  8944     0798                     	;# 
  8945     0799                     	;# 
  8946     079A                     	;# 
  8947     079B                     	;# 
  8948     079C                     	;# 
  8949     079D                     	;# 
  8950     080C                     	;# 
  8951     080D                     	;# 
  8952     080E                     	;# 
  8953     080F                     	;# 
  8954     0810                     	;# 
  8955     0811                     	;# 
  8956     0813                     	;# 
  8957     0814                     	;# 
  8958     081A                     	;# 
  8959     081A                     	;# 
  8960     081B                     	;# 
  8961     081C                     	;# 
  8962     081C                     	;# 
  8963     081D                     	;# 
  8964     081E                     	;# 
  8965     081F                     	;# 
  8966     088C                     	;# 
  8967     088D                     	;# 
  8968     088E                     	;# 
  8969     088F                     	;# 
  8970     0890                     	;# 
  8971     0891                     	;# 
  8972     0892                     	;# 
  8973     0893                     	;# 
  8974     0895                     	;# 
  8975     0896                     	;# 
  8976     0897                     	;# 
  8977     0898                     	;# 
  8978     0899                     	;# 
  8979     089A                     	;# 
  8980     089B                     	;# 
  8981     090C                     	;# 
  8982     090E                     	;# 
  8983     090F                     	;# 
  8984     091F                     	;# 
  8985     098F                     	;# 
  8986     098F                     	;# 
  8987     0990                     	;# 
  8988     0991                     	;# 
  8989     0992                     	;# 
  8990     0993                     	;# 
  8991     0994                     	;# 
  8992     0995                     	;# 
  8993     0996                     	;# 
  8994     0997                     	;# 
  8995     0A19                     	;# 
  8996     0A19                     	;# 
  8997     0A1A                     	;# 
  8998     0A1A                     	;# 
  8999     0A1B                     	;# 
  9000     0A1B                     	;# 
  9001     0A1B                     	;# 
  9002     0A1C                     	;# 
  9003     0A1C                     	;# 
  9004     0A1D                     	;# 
  9005     0A1D                     	;# 
  9006     0A1E                     	;# 
  9007     0A1E                     	;# 
  9008     0A1F                     	;# 
  9009     0A1F                     	;# 
  9010     0A1F                     	;# 
  9011     1E0F                     	;# 
  9012     1E10                     	;# 
  9013     1E11                     	;# 
  9014     1E12                     	;# 
  9015     1E13                     	;# 
  9016     1E14                     	;# 
  9017     1E15                     	;# 
  9018     1E16                     	;# 
  9019     1E17                     	;# 
  9020     1E18                     	;# 
  9021     1E19                     	;# 
  9022     1E1A                     	;# 
  9023     1E1B                     	;# 
  9024     1E1C                     	;# 
  9025     1E1D                     	;# 
  9026     1E1E                     	;# 
  9027     1E1F                     	;# 
  9028     1E20                     	;# 
  9029     1E21                     	;# 
  9030     1E22                     	;# 
  9031     1E23                     	;# 
  9032     1E24                     	;# 
  9033     1E25                     	;# 
  9034     1E26                     	;# 
  9035     1E27                     	;# 
  9036     1E28                     	;# 
  9037     1E29                     	;# 
  9038     1E2A                     	;# 
  9039     1E2B                     	;# 
  9040     1E2C                     	;# 
  9041     1E2D                     	;# 
  9042     1E2E                     	;# 
  9043     1E2F                     	;# 
  9044     1E30                     	;# 
  9045     1E31                     	;# 
  9046     1E32                     	;# 
  9047     1E33                     	;# 
  9048     1E34                     	;# 
  9049     1E35                     	;# 
  9050     1E36                     	;# 
  9051     1E37                     	;# 
  9052     1E8F                     	;# 
  9053     1E90                     	;# 
  9054     1E91                     	;# 
  9055     1E92                     	;# 
  9056     1E93                     	;# 
  9057     1E94                     	;# 
  9058     1E95                     	;# 
  9059     1E96                     	;# 
  9060     1E97                     	;# 
  9061     1E9C                     	;# 
  9062     1E9D                     	;# 
  9063     1E9E                     	;# 
  9064     1EA1                     	;# 
  9065     1EA2                     	;# 
  9066     1EA3                     	;# 
  9067     1EA4                     	;# 
  9068     1EA5                     	;# 
  9069     1EA9                     	;# 
  9070     1EAA                     	;# 
  9071     1EAB                     	;# 
  9072     1EAC                     	;# 
  9073     1EB1                     	;# 
  9074     1EB2                     	;# 
  9075     1EB3                     	;# 
  9076     1EB8                     	;# 
  9077     1EB9                     	;# 
  9078     1EBA                     	;# 
  9079     1EBB                     	;# 
  9080     1EBC                     	;# 
  9081     1EBD                     	;# 
  9082     1EBE                     	;# 
  9083     1EC3                     	;# 
  9084     1EC5                     	;# 
  9085     1EC6                     	;# 
  9086     1EC7                     	;# 
  9087     1EC8                     	;# 
  9088     1EC9                     	;# 
  9089     1ECA                     	;# 
  9090     1ECB                     	;# 
  9091     1ECC                     	;# 
  9092     1ECD                     	;# 
  9093     1ECE                     	;# 
  9094     1F10                     	;# 
  9095     1F11                     	;# 
  9096     1F12                     	;# 
  9097     1F13                     	;# 
  9098     1F14                     	;# 
  9099     1F15                     	;# 
  9100     1F16                     	;# 
  9101     1F17                     	;# 
  9102     1F18                     	;# 
  9103     1F19                     	;# 
  9104     1F1A                     	;# 
  9105     1F1B                     	;# 
  9106     1F1C                     	;# 
  9107     1F1D                     	;# 
  9108     1F1E                     	;# 
  9109     1F1F                     	;# 
  9110     1F20                     	;# 
  9111     1F21                     	;# 
  9112     1F22                     	;# 
  9113     1F23                     	;# 
  9114     1F24                     	;# 
  9115     1F25                     	;# 
  9116     1F26                     	;# 
  9117     1F27                     	;# 
  9118     1F38                     	;# 
  9119     1F39                     	;# 
  9120     1F3A                     	;# 
  9121     1F3B                     	;# 
  9122     1F3C                     	;# 
  9123     1F3D                     	;# 
  9124     1F3E                     	;# 
  9125     1F3F                     	;# 
  9126     1F43                     	;# 
  9127     1F44                     	;# 
  9128     1F45                     	;# 
  9129     1F46                     	;# 
  9130     1F47                     	;# 
  9131     1F48                     	;# 
  9132     1F49                     	;# 
  9133     1F4A                     	;# 
  9134     1F4E                     	;# 
  9135     1F4F                     	;# 
  9136     1F50                     	;# 
  9137     1F51                     	;# 
  9138     1F52                     	;# 
  9139     1F53                     	;# 
  9140     1F54                     	;# 
  9141     1F55                     	;# 
  9142     1F65                     	;# 
  9143     1F66                     	;# 
  9144     1F67                     	;# 
  9145     1F68                     	;# 
  9146     1F69                     	;# 
  9147     1F6A                     	;# 
  9148     1F6B                     	;# 
  9149     1FE4                     	;# 
  9150     1FE5                     	;# 
  9151     1FE6                     	;# 
  9152     1FE7                     	;# 
  9153     1FE8                     	;# 
  9154     1FE8                     	;# 
  9155     1FE9                     	;# 
  9156     1FEA                     	;# 
  9157     1FEB                     	;# 
  9158     1FED                     	;# 
  9159     1FEE                     	;# 
  9160     1FEF                     	;# 
  9161     0000                     	;# 
  9162     0001                     	;# 
  9163     0002                     	;# 
  9164     0003                     	;# 
  9165     0004                     	;# 
  9166     0005                     	;# 
  9167     0006                     	;# 
  9168     0007                     	;# 
  9169     0008                     	;# 
  9170     0009                     	;# 
  9171     000A                     	;# 
  9172     000B                     	;# 
  9173     000C                     	;# 
  9174     000D                     	;# 
  9175     000E                     	;# 
  9176     0010                     	;# 
  9177     0012                     	;# 
  9178     0013                     	;# 
  9179     0014                     	;# 
  9180     0016                     	;# 
  9181     0018                     	;# 
  9182     0019                     	;# 
  9183     001A                     	;# 
  9184     001C                     	;# 
  9185     008C                     	;# 
  9186     008C                     	;# 
  9187     008D                     	;# 
  9188     008E                     	;# 
  9189     008E                     	;# 
  9190     008F                     	;# 
  9191     0090                     	;# 
  9192     0090                     	;# 
  9193     0091                     	;# 
  9194     0092                     	;# 
  9195     0092                     	;# 
  9196     0093                     	;# 
  9197     0094                     	;# 
  9198     0094                     	;# 
  9199     0095                     	;# 
  9200     0096                     	;# 
  9201     0096                     	;# 
  9202     0097                     	;# 
  9203     0098                     	;# 
  9204     0099                     	;# 
  9205     009A                     	;# 
  9206     009B                     	;# 
  9207     009B                     	;# 
  9208     009C                     	;# 
  9209     009D                     	;# 
  9210     009D                     	;# 
  9211     009E                     	;# 
  9212     009F                     	;# 
  9213     010C                     	;# 
  9214     010C                     	;# 
  9215     010D                     	;# 
  9216     010E                     	;# 
  9217     010F                     	;# 
  9218     010F                     	;# 
  9219     0110                     	;# 
  9220     0111                     	;# 
  9221     0112                     	;# 
  9222     0113                     	;# 
  9223     0114                     	;# 
  9224     0115                     	;# 
  9225     0116                     	;# 
  9226     0117                     	;# 
  9227     0118                     	;# 
  9228     0119                     	;# 
  9229     0119                     	;# 
  9230     0119                     	;# 
  9231     011A                     	;# 
  9232     011A                     	;# 
  9233     011A                     	;# 
  9234     011B                     	;# 
  9235     011B                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011C                     	;# 
  9240     011C                     	;# 
  9241     011C                     	;# 
  9242     011D                     	;# 
  9243     011D                     	;# 
  9244     011D                     	;# 
  9245     011E                     	;# 
  9246     011E                     	;# 
  9247     011E                     	;# 
  9248     011F                     	;# 
  9249     011F                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     018C                     	;# 
  9254     018D                     	;# 
  9255     018E                     	;# 
  9256     018F                     	;# 
  9257     0190                     	;# 
  9258     0191                     	;# 
  9259     0192                     	;# 
  9260     0196                     	;# 
  9261     0197                     	;# 
  9262     0198                     	;# 
  9263     0199                     	;# 
  9264     019A                     	;# 
  9265     019B                     	;# 
  9266     019C                     	;# 
  9267     020C                     	;# 
  9268     020D                     	;# 
  9269     020E                     	;# 
  9270     020E                     	;# 
  9271     020F                     	;# 
  9272     020F                     	;# 
  9273     0210                     	;# 
  9274     0210                     	;# 
  9275     0211                     	;# 
  9276     0211                     	;# 
  9277     0212                     	;# 
  9278     0213                     	;# 
  9279     0214                     	;# 
  9280     0214                     	;# 
  9281     0215                     	;# 
  9282     0215                     	;# 
  9283     0216                     	;# 
  9284     0216                     	;# 
  9285     0217                     	;# 
  9286     0217                     	;# 
  9287     0218                     	;# 
  9288     0219                     	;# 
  9289     021A                     	;# 
  9290     021A                     	;# 
  9291     021B                     	;# 
  9292     021B                     	;# 
  9293     021C                     	;# 
  9294     021C                     	;# 
  9295     021D                     	;# 
  9296     021D                     	;# 
  9297     021E                     	;# 
  9298     021F                     	;# 
  9299     028C                     	;# 
  9300     028C                     	;# 
  9301     028D                     	;# 
  9302     028D                     	;# 
  9303     028E                     	;# 
  9304     028F                     	;# 
  9305     0290                     	;# 
  9306     0291                     	;# 
  9307     0292                     	;# 
  9308     0292                     	;# 
  9309     0293                     	;# 
  9310     0293                     	;# 
  9311     0294                     	;# 
  9312     0295                     	;# 
  9313     0296                     	;# 
  9314     0297                     	;# 
  9315     0298                     	;# 
  9316     0298                     	;# 
  9317     0299                     	;# 
  9318     0299                     	;# 
  9319     029A                     	;# 
  9320     029B                     	;# 
  9321     029C                     	;# 
  9322     029D                     	;# 
  9323     029F                     	;# 
  9324     030C                     	;# 
  9325     030C                     	;# 
  9326     030D                     	;# 
  9327     030E                     	;# 
  9328     030F                     	;# 
  9329     0310                     	;# 
  9330     0310                     	;# 
  9331     0311                     	;# 
  9332     0312                     	;# 
  9333     0313                     	;# 
  9334     0314                     	;# 
  9335     0314                     	;# 
  9336     0315                     	;# 
  9337     0316                     	;# 
  9338     0317                     	;# 
  9339     0318                     	;# 
  9340     0318                     	;# 
  9341     0319                     	;# 
  9342     031A                     	;# 
  9343     031B                     	;# 
  9344     031C                     	;# 
  9345     031C                     	;# 
  9346     031D                     	;# 
  9347     031E                     	;# 
  9348     031F                     	;# 
  9349     038C                     	;# 
  9350     038C                     	;# 
  9351     038D                     	;# 
  9352     038E                     	;# 
  9353     0390                     	;# 
  9354     0390                     	;# 
  9355     0391                     	;# 
  9356     0392                     	;# 
  9357     048C                     	;# 
  9358     048C                     	;# 
  9359     048D                     	;# 
  9360     048E                     	;# 
  9361     048F                     	;# 
  9362     048F                     	;# 
  9363     0490                     	;# 
  9364     0491                     	;# 
  9365     0492                     	;# 
  9366     0492                     	;# 
  9367     0493                     	;# 
  9368     0494                     	;# 
  9369     0495                     	;# 
  9370     0495                     	;# 
  9371     0496                     	;# 
  9372     0497                     	;# 
  9373     0498                     	;# 
  9374     0499                     	;# 
  9375     049A                     	;# 
  9376     049B                     	;# 
  9377     049C                     	;# 
  9378     049D                     	;# 
  9379     050C                     	;# 
  9380     050C                     	;# 
  9381     050D                     	;# 
  9382     050E                     	;# 
  9383     050F                     	;# 
  9384     050F                     	;# 
  9385     0510                     	;# 
  9386     0511                     	;# 
  9387     0512                     	;# 
  9388     0512                     	;# 
  9389     0513                     	;# 
  9390     0514                     	;# 
  9391     0515                     	;# 
  9392     0515                     	;# 
  9393     0516                     	;# 
  9394     0517                     	;# 
  9395     0518                     	;# 
  9396     0519                     	;# 
  9397     051A                     	;# 
  9398     051B                     	;# 
  9399     051C                     	;# 
  9400     051D                     	;# 
  9401     058C                     	;# 
  9402     058C                     	;# 
  9403     058D                     	;# 
  9404     058E                     	;# 
  9405     058F                     	;# 
  9406     058F                     	;# 
  9407     0590                     	;# 
  9408     0591                     	;# 
  9409     0592                     	;# 
  9410     0593                     	;# 
  9411     059C                     	;# 
  9412     059C                     	;# 
  9413     059D                     	;# 
  9414     059D                     	;# 
  9415     059E                     	;# 
  9416     059F                     	;# 
  9417     060C                     	;# 
  9418     060C                     	;# 
  9419     060D                     	;# 
  9420     060D                     	;# 
  9421     060E                     	;# 
  9422     060F                     	;# 
  9423     0610                     	;# 
  9424     0611                     	;# 
  9425     0612                     	;# 
  9426     0613                     	;# 
  9427     0614                     	;# 
  9428     0616                     	;# 
  9429     0616                     	;# 
  9430     0617                     	;# 
  9431     0617                     	;# 
  9432     0618                     	;# 
  9433     0619                     	;# 
  9434     061A                     	;# 
  9435     061B                     	;# 
  9436     061C                     	;# 
  9437     061D                     	;# 
  9438     061E                     	;# 
  9439     068C                     	;# 
  9440     068D                     	;# 
  9441     068E                     	;# 
  9442     068F                     	;# 
  9443     0690                     	;# 
  9444     0691                     	;# 
  9445     0692                     	;# 
  9446     0693                     	;# 
  9447     0694                     	;# 
  9448     070C                     	;# 
  9449     070D                     	;# 
  9450     070E                     	;# 
  9451     070F                     	;# 
  9452     0710                     	;# 
  9453     0711                     	;# 
  9454     0712                     	;# 
  9455     0713                     	;# 
  9456     0714                     	;# 
  9457     0716                     	;# 
  9458     0717                     	;# 
  9459     0718                     	;# 
  9460     0719                     	;# 
  9461     071A                     	;# 
  9462     071B                     	;# 
  9463     071C                     	;# 
  9464     071D                     	;# 
  9465     071E                     	;# 
  9466     0796                     	;# 
  9467     0797                     	;# 
  9468     0798                     	;# 
  9469     0799                     	;# 
  9470     079A                     	;# 
  9471     079B                     	;# 
  9472     079C                     	;# 
  9473     079D                     	;# 
  9474     080C                     	;# 
  9475     080D                     	;# 
  9476     080E                     	;# 
  9477     080F                     	;# 
  9478     0810                     	;# 
  9479     0811                     	;# 
  9480     0813                     	;# 
  9481     0814                     	;# 
  9482     081A                     	;# 
  9483     081A                     	;# 
  9484     081B                     	;# 
  9485     081C                     	;# 
  9486     081C                     	;# 
  9487     081D                     	;# 
  9488     081E                     	;# 
  9489     081F                     	;# 
  9490     088C                     	;# 
  9491     088D                     	;# 
  9492     088E                     	;# 
  9493     088F                     	;# 
  9494     0890                     	;# 
  9495     0891                     	;# 
  9496     0892                     	;# 
  9497     0893                     	;# 
  9498     0895                     	;# 
  9499     0896                     	;# 
  9500     0897                     	;# 
  9501     0898                     	;# 
  9502     0899                     	;# 
  9503     089A                     	;# 
  9504     089B                     	;# 
  9505     090C                     	;# 
  9506     090E                     	;# 
  9507     090F                     	;# 
  9508     091F                     	;# 
  9509     098F                     	;# 
  9510     098F                     	;# 
  9511     0990                     	;# 
  9512     0991                     	;# 
  9513     0992                     	;# 
  9514     0993                     	;# 
  9515     0994                     	;# 
  9516     0995                     	;# 
  9517     0996                     	;# 
  9518     0997                     	;# 
  9519     0A19                     	;# 
  9520     0A19                     	;# 
  9521     0A1A                     	;# 
  9522     0A1A                     	;# 
  9523     0A1B                     	;# 
  9524     0A1B                     	;# 
  9525     0A1B                     	;# 
  9526     0A1C                     	;# 
  9527     0A1C                     	;# 
  9528     0A1D                     	;# 
  9529     0A1D                     	;# 
  9530     0A1E                     	;# 
  9531     0A1E                     	;# 
  9532     0A1F                     	;# 
  9533     0A1F                     	;# 
  9534     0A1F                     	;# 
  9535     1E0F                     	;# 
  9536     1E10                     	;# 
  9537     1E11                     	;# 
  9538     1E12                     	;# 
  9539     1E13                     	;# 
  9540     1E14                     	;# 
  9541     1E15                     	;# 
  9542     1E16                     	;# 
  9543     1E17                     	;# 
  9544     1E18                     	;# 
  9545     1E19                     	;# 
  9546     1E1A                     	;# 
  9547     1E1B                     	;# 
  9548     1E1C                     	;# 
  9549     1E1D                     	;# 
  9550     1E1E                     	;# 
  9551     1E1F                     	;# 
  9552     1E20                     	;# 
  9553     1E21                     	;# 
  9554     1E22                     	;# 
  9555     1E23                     	;# 
  9556     1E24                     	;# 
  9557     1E25                     	;# 
  9558     1E26                     	;# 
  9559     1E27                     	;# 
  9560     1E28                     	;# 
  9561     1E29                     	;# 
  9562     1E2A                     	;# 
  9563     1E2B                     	;# 
  9564     1E2C                     	;# 
  9565     1E2D                     	;# 
  9566     1E2E                     	;# 
  9567     1E2F                     	;# 
  9568     1E30                     	;# 
  9569     1E31                     	;# 
  9570     1E32                     	;# 
  9571     1E33                     	;# 
  9572     1E34                     	;# 
  9573     1E35                     	;# 
  9574     1E36                     	;# 
  9575     1E37                     	;# 
  9576     1E8F                     	;# 
  9577     1E90                     	;# 
  9578     1E91                     	;# 
  9579     1E92                     	;# 
  9580     1E93                     	;# 
  9581     1E94                     	;# 
  9582     1E95                     	;# 
  9583     1E96                     	;# 
  9584     1E97                     	;# 
  9585     1E9C                     	;# 
  9586     1E9D                     	;# 
  9587     1E9E                     	;# 
  9588     1EA1                     	;# 
  9589     1EA2                     	;# 
  9590     1EA3                     	;# 
  9591     1EA4                     	;# 
  9592     1EA5                     	;# 
  9593     1EA9                     	;# 
  9594     1EAA                     	;# 
  9595     1EAB                     	;# 
  9596     1EAC                     	;# 
  9597     1EB1                     	;# 
  9598     1EB2                     	;# 
  9599     1EB3                     	;# 
  9600     1EB8                     	;# 
  9601     1EB9                     	;# 
  9602     1EBA                     	;# 
  9603     1EBB                     	;# 
  9604     1EBC                     	;# 
  9605     1EBD                     	;# 
  9606     1EBE                     	;# 
  9607     1EC3                     	;# 
  9608     1EC5                     	;# 
  9609     1EC6                     	;# 
  9610     1EC7                     	;# 
  9611     1EC8                     	;# 
  9612     1EC9                     	;# 
  9613     1ECA                     	;# 
  9614     1ECB                     	;# 
  9615     1ECC                     	;# 
  9616     1ECD                     	;# 
  9617     1ECE                     	;# 
  9618     1F10                     	;# 
  9619     1F11                     	;# 
  9620     1F12                     	;# 
  9621     1F13                     	;# 
  9622     1F14                     	;# 
  9623     1F15                     	;# 
  9624     1F16                     	;# 
  9625     1F17                     	;# 
  9626     1F18                     	;# 
  9627     1F19                     	;# 
  9628     1F1A                     	;# 
  9629     1F1B                     	;# 
  9630     1F1C                     	;# 
  9631     1F1D                     	;# 
  9632     1F1E                     	;# 
  9633     1F1F                     	;# 
  9634     1F20                     	;# 
  9635     1F21                     	;# 
  9636     1F22                     	;# 
  9637     1F23                     	;# 
  9638     1F24                     	;# 
  9639     1F25                     	;# 
  9640     1F26                     	;# 
  9641     1F27                     	;# 
  9642     1F38                     	;# 
  9643     1F39                     	;# 
  9644     1F3A                     	;# 
  9645     1F3B                     	;# 
  9646     1F3C                     	;# 
  9647     1F3D                     	;# 
  9648     1F3E                     	;# 
  9649     1F3F                     	;# 
  9650     1F43                     	;# 
  9651     1F44                     	;# 
  9652     1F45                     	;# 
  9653     1F46                     	;# 
  9654     1F47                     	;# 
  9655     1F48                     	;# 
  9656     1F49                     	;# 
  9657     1F4A                     	;# 
  9658     1F4E                     	;# 
  9659     1F4F                     	;# 
  9660     1F50                     	;# 
  9661     1F51                     	;# 
  9662     1F52                     	;# 
  9663     1F53                     	;# 
  9664     1F54                     	;# 
  9665     1F55                     	;# 
  9666     1F65                     	;# 
  9667     1F66                     	;# 
  9668     1F67                     	;# 
  9669     1F68                     	;# 
  9670     1F69                     	;# 
  9671     1F6A                     	;# 
  9672     1F6B                     	;# 
  9673     1FE4                     	;# 
  9674     1FE5                     	;# 
  9675     1FE6                     	;# 
  9676     1FE7                     	;# 
  9677     1FE8                     	;# 
  9678     1FE8                     	;# 
  9679     1FE9                     	;# 
  9680     1FEA                     	;# 
  9681     1FEB                     	;# 
  9682     1FED                     	;# 
  9683     1FEE                     	;# 
  9684     1FEF                     	;# 
  9685     0000                     	;# 
  9686     0001                     	;# 
  9687     0002                     	;# 
  9688     0003                     	;# 
  9689     0004                     	;# 
  9690     0005                     	;# 
  9691     0006                     	;# 
  9692     0007                     	;# 
  9693     0008                     	;# 
  9694     0009                     	;# 
  9695     000A                     	;# 
  9696     000B                     	;# 
  9697     000C                     	;# 
  9698     000D                     	;# 
  9699     000E                     	;# 
  9700     0010                     	;# 
  9701     0012                     	;# 
  9702     0013                     	;# 
  9703     0014                     	;# 
  9704     0016                     	;# 
  9705     0018                     	;# 
  9706     0019                     	;# 
  9707     001A                     	;# 
  9708     001C                     	;# 
  9709     008C                     	;# 
  9710     008C                     	;# 
  9711     008D                     	;# 
  9712     008E                     	;# 
  9713     008E                     	;# 
  9714     008F                     	;# 
  9715     0090                     	;# 
  9716     0090                     	;# 
  9717     0091                     	;# 
  9718     0092                     	;# 
  9719     0092                     	;# 
  9720     0093                     	;# 
  9721     0094                     	;# 
  9722     0094                     	;# 
  9723     0095                     	;# 
  9724     0096                     	;# 
  9725     0096                     	;# 
  9726     0097                     	;# 
  9727     0098                     	;# 
  9728     0099                     	;# 
  9729     009A                     	;# 
  9730     009B                     	;# 
  9731     009B                     	;# 
  9732     009C                     	;# 
  9733     009D                     	;# 
  9734     009D                     	;# 
  9735     009E                     	;# 
  9736     009F                     	;# 
  9737     010C                     	;# 
  9738     010C                     	;# 
  9739     010D                     	;# 
  9740     010E                     	;# 
  9741     010F                     	;# 
  9742     010F                     	;# 
  9743     0110                     	;# 
  9744     0111                     	;# 
  9745     0112                     	;# 
  9746     0113                     	;# 
  9747     0114                     	;# 
  9748     0115                     	;# 
  9749     0116                     	;# 
  9750     0117                     	;# 
  9751     0118                     	;# 
  9752     0119                     	;# 
  9753     0119                     	;# 
  9754     0119                     	;# 
  9755     011A                     	;# 
  9756     011A                     	;# 
  9757     011A                     	;# 
  9758     011B                     	;# 
  9759     011B                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011C                     	;# 
  9764     011C                     	;# 
  9765     011C                     	;# 
  9766     011D                     	;# 
  9767     011D                     	;# 
  9768     011D                     	;# 
  9769     011E                     	;# 
  9770     011E                     	;# 
  9771     011E                     	;# 
  9772     011F                     	;# 
  9773     011F                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     018C                     	;# 
  9778     018D                     	;# 
  9779     018E                     	;# 
  9780     018F                     	;# 
  9781     0190                     	;# 
  9782     0191                     	;# 
  9783     0192                     	;# 
  9784     0196                     	;# 
  9785     0197                     	;# 
  9786     0198                     	;# 
  9787     0199                     	;# 
  9788     019A                     	;# 
  9789     019B                     	;# 
  9790     019C                     	;# 
  9791     020C                     	;# 
  9792     020D                     	;# 
  9793     020E                     	;# 
  9794     020E                     	;# 
  9795     020F                     	;# 
  9796     020F                     	;# 
  9797     0210                     	;# 
  9798     0210                     	;# 
  9799     0211                     	;# 
  9800     0211                     	;# 
  9801     0212                     	;# 
  9802     0213                     	;# 
  9803     0214                     	;# 
  9804     0214                     	;# 
  9805     0215                     	;# 
  9806     0215                     	;# 
  9807     0216                     	;# 
  9808     0216                     	;# 
  9809     0217                     	;# 
  9810     0217                     	;# 
  9811     0218                     	;# 
  9812     0219                     	;# 
  9813     021A                     	;# 
  9814     021A                     	;# 
  9815     021B                     	;# 
  9816     021B                     	;# 
  9817     021C                     	;# 
  9818     021C                     	;# 
  9819     021D                     	;# 
  9820     021D                     	;# 
  9821     021E                     	;# 
  9822     021F                     	;# 
  9823     028C                     	;# 
  9824     028C                     	;# 
  9825     028D                     	;# 
  9826     028D                     	;# 
  9827     028E                     	;# 
  9828     028F                     	;# 
  9829     0290                     	;# 
  9830     0291                     	;# 
  9831     0292                     	;# 
  9832     0292                     	;# 
  9833     0293                     	;# 
  9834     0293                     	;# 
  9835     0294                     	;# 
  9836     0295                     	;# 
  9837     0296                     	;# 
  9838     0297                     	;# 
  9839     0298                     	;# 
  9840     0298                     	;# 
  9841     0299                     	;# 
  9842     0299                     	;# 
  9843     029A                     	;# 
  9844     029B                     	;# 
  9845     029C                     	;# 
  9846     029D                     	;# 
  9847     029F                     	;# 
  9848     030C                     	;# 
  9849     030C                     	;# 
  9850     030D                     	;# 
  9851     030E                     	;# 
  9852     030F                     	;# 
  9853     0310                     	;# 
  9854     0310                     	;# 
  9855     0311                     	;# 
  9856     0312                     	;# 
  9857     0313                     	;# 
  9858     0314                     	;# 
  9859     0314                     	;# 
  9860     0315                     	;# 
  9861     0316                     	;# 
  9862     0317                     	;# 
  9863     0318                     	;# 
  9864     0318                     	;# 
  9865     0319                     	;# 
  9866     031A                     	;# 
  9867     031B                     	;# 
  9868     031C                     	;# 
  9869     031C                     	;# 
  9870     031D                     	;# 
  9871     031E                     	;# 
  9872     031F                     	;# 
  9873     038C                     	;# 
  9874     038C                     	;# 
  9875     038D                     	;# 
  9876     038E                     	;# 
  9877     0390                     	;# 
  9878     0390                     	;# 
  9879     0391                     	;# 
  9880     0392                     	;# 
  9881     048C                     	;# 
  9882     048C                     	;# 
  9883     048D                     	;# 
  9884     048E                     	;# 
  9885     048F                     	;# 
  9886     048F                     	;# 
  9887     0490                     	;# 
  9888     0491                     	;# 
  9889     0492                     	;# 
  9890     0492                     	;# 
  9891     0493                     	;# 
  9892     0494                     	;# 
  9893     0495                     	;# 
  9894     0495                     	;# 
  9895     0496                     	;# 
  9896     0497                     	;# 
  9897     0498                     	;# 
  9898     0499                     	;# 
  9899     049A                     	;# 
  9900     049B                     	;# 
  9901     049C                     	;# 
  9902     049D                     	;# 
  9903     050C                     	;# 
  9904     050C                     	;# 
  9905     050D                     	;# 
  9906     050E                     	;# 
  9907     050F                     	;# 
  9908     050F                     	;# 
  9909     0510                     	;# 
  9910     0511                     	;# 
  9911     0512                     	;# 
  9912     0512                     	;# 
  9913     0513                     	;# 
  9914     0514                     	;# 
  9915     0515                     	;# 
  9916     0515                     	;# 
  9917     0516                     	;# 
  9918     0517                     	;# 
  9919     0518                     	;# 
  9920     0519                     	;# 
  9921     051A                     	;# 
  9922     051B                     	;# 
  9923     051C                     	;# 
  9924     051D                     	;# 
  9925     058C                     	;# 
  9926     058C                     	;# 
  9927     058D                     	;# 
  9928     058E                     	;# 
  9929     058F                     	;# 
  9930     058F                     	;# 
  9931     0590                     	;# 
  9932     0591                     	;# 
  9933     0592                     	;# 
  9934     0593                     	;# 
  9935     059C                     	;# 
  9936     059C                     	;# 
  9937     059D                     	;# 
  9938     059D                     	;# 
  9939     059E                     	;# 
  9940     059F                     	;# 
  9941     060C                     	;# 
  9942     060C                     	;# 
  9943     060D                     	;# 
  9944     060D                     	;# 
  9945     060E                     	;# 
  9946     060F                     	;# 
  9947     0610                     	;# 
  9948     0611                     	;# 
  9949     0612                     	;# 
  9950     0613                     	;# 
  9951     0614                     	;# 
  9952     0616                     	;# 
  9953     0616                     	;# 
  9954     0617                     	;# 
  9955     0617                     	;# 
  9956     0618                     	;# 
  9957     0619                     	;# 
  9958     061A                     	;# 
  9959     061B                     	;# 
  9960     061C                     	;# 
  9961     061D                     	;# 
  9962     061E                     	;# 
  9963     068C                     	;# 
  9964     068D                     	;# 
  9965     068E                     	;# 
  9966     068F                     	;# 
  9967     0690                     	;# 
  9968     0691                     	;# 
  9969     0692                     	;# 
  9970     0693                     	;# 
  9971     0694                     	;# 
  9972     070C                     	;# 
  9973     070D                     	;# 
  9974     070E                     	;# 
  9975     070F                     	;# 
  9976     0710                     	;# 
  9977     0711                     	;# 
  9978     0712                     	;# 
  9979     0713                     	;# 
  9980     0714                     	;# 
  9981     0716                     	;# 
  9982     0717                     	;# 
  9983     0718                     	;# 
  9984     0719                     	;# 
  9985     071A                     	;# 
  9986     071B                     	;# 
  9987     071C                     	;# 
  9988     071D                     	;# 
  9989     071E                     	;# 
  9990     0796                     	;# 
  9991     0797                     	;# 
  9992     0798                     	;# 
  9993     0799                     	;# 
  9994     079A                     	;# 
  9995     079B                     	;# 
  9996     079C                     	;# 
  9997     079D                     	;# 
  9998     080C                     	;# 
  9999     080D                     	;# 
 10000     080E                     	;# 
 10001     080F                     	;# 
 10002     0810                     	;# 
 10003     0811                     	;# 
 10004     0813                     	;# 
 10005     0814                     	;# 
 10006     081A                     	;# 
 10007     081A                     	;# 
 10008     081B                     	;# 
 10009     081C                     	;# 
 10010     081C                     	;# 
 10011     081D                     	;# 
 10012     081E                     	;# 
 10013     081F                     	;# 
 10014     088C                     	;# 
 10015     088D                     	;# 
 10016     088E                     	;# 
 10017     088F                     	;# 
 10018     0890                     	;# 
 10019     0891                     	;# 
 10020     0892                     	;# 
 10021     0893                     	;# 
 10022     0895                     	;# 
 10023     0896                     	;# 
 10024     0897                     	;# 
 10025     0898                     	;# 
 10026     0899                     	;# 
 10027     089A                     	;# 
 10028     089B                     	;# 
 10029     090C                     	;# 
 10030     090E                     	;# 
 10031     090F                     	;# 
 10032     091F                     	;# 
 10033     098F                     	;# 
 10034     098F                     	;# 
 10035     0990                     	;# 
 10036     0991                     	;# 
 10037     0992                     	;# 
 10038     0993                     	;# 
 10039     0994                     	;# 
 10040     0995                     	;# 
 10041     0996                     	;# 
 10042     0997                     	;# 
 10043     0A19                     	;# 
 10044     0A19                     	;# 
 10045     0A1A                     	;# 
 10046     0A1A                     	;# 
 10047     0A1B                     	;# 
 10048     0A1B                     	;# 
 10049     0A1B                     	;# 
 10050     0A1C                     	;# 
 10051     0A1C                     	;# 
 10052     0A1D                     	;# 
 10053     0A1D                     	;# 
 10054     0A1E                     	;# 
 10055     0A1E                     	;# 
 10056     0A1F                     	;# 
 10057     0A1F                     	;# 
 10058     0A1F                     	;# 
 10059     1E0F                     	;# 
 10060     1E10                     	;# 
 10061     1E11                     	;# 
 10062     1E12                     	;# 
 10063     1E13                     	;# 
 10064     1E14                     	;# 
 10065     1E15                     	;# 
 10066     1E16                     	;# 
 10067     1E17                     	;# 
 10068     1E18                     	;# 
 10069     1E19                     	;# 
 10070     1E1A                     	;# 
 10071     1E1B                     	;# 
 10072     1E1C                     	;# 
 10073     1E1D                     	;# 
 10074     1E1E                     	;# 
 10075     1E1F                     	;# 
 10076     1E20                     	;# 
 10077     1E21                     	;# 
 10078     1E22                     	;# 
 10079     1E23                     	;# 
 10080     1E24                     	;# 
 10081     1E25                     	;# 
 10082     1E26                     	;# 
 10083     1E27                     	;# 
 10084     1E28                     	;# 
 10085     1E29                     	;# 
 10086     1E2A                     	;# 
 10087     1E2B                     	;# 
 10088     1E2C                     	;# 
 10089     1E2D                     	;# 
 10090     1E2E                     	;# 
 10091     1E2F                     	;# 
 10092     1E30                     	;# 
 10093     1E31                     	;# 
 10094     1E32                     	;# 
 10095     1E33                     	;# 
 10096     1E34                     	;# 
 10097     1E35                     	;# 
 10098     1E36                     	;# 
 10099     1E37                     	;# 
 10100     1E8F                     	;# 
 10101     1E90                     	;# 
 10102     1E91                     	;# 
 10103     1E92                     	;# 
 10104     1E93                     	;# 
 10105     1E94                     	;# 
 10106     1E95                     	;# 
 10107     1E96                     	;# 
 10108     1E97                     	;# 
 10109     1E9C                     	;# 
 10110     1E9D                     	;# 
 10111     1E9E                     	;# 
 10112     1EA1                     	;# 
 10113     1EA2                     	;# 
 10114     1EA3                     	;# 
 10115     1EA4                     	;# 
 10116     1EA5                     	;# 
 10117     1EA9                     	;# 
 10118     1EAA                     	;# 
 10119     1EAB                     	;# 
 10120     1EAC                     	;# 
 10121     1EB1                     	;# 
 10122     1EB2                     	;# 
 10123     1EB3                     	;# 
 10124     1EB8                     	;# 
 10125     1EB9                     	;# 
 10126     1EBA                     	;# 
 10127     1EBB                     	;# 
 10128     1EBC                     	;# 
 10129     1EBD                     	;# 
 10130     1EBE                     	;# 
 10131     1EC3                     	;# 
 10132     1EC5                     	;# 
 10133     1EC6                     	;# 
 10134     1EC7                     	;# 
 10135     1EC8                     	;# 
 10136     1EC9                     	;# 
 10137     1ECA                     	;# 
 10138     1ECB                     	;# 
 10139     1ECC                     	;# 
 10140     1ECD                     	;# 
 10141     1ECE                     	;# 
 10142     1F10                     	;# 
 10143     1F11                     	;# 
 10144     1F12                     	;# 
 10145     1F13                     	;# 
 10146     1F14                     	;# 
 10147     1F15                     	;# 
 10148     1F16                     	;# 
 10149     1F17                     	;# 
 10150     1F18                     	;# 
 10151     1F19                     	;# 
 10152     1F1A                     	;# 
 10153     1F1B                     	;# 
 10154     1F1C                     	;# 
 10155     1F1D                     	;# 
 10156     1F1E                     	;# 
 10157     1F1F                     	;# 
 10158     1F20                     	;# 
 10159     1F21                     	;# 
 10160     1F22                     	;# 
 10161     1F23                     	;# 
 10162     1F24                     	;# 
 10163     1F25                     	;# 
 10164     1F26                     	;# 
 10165     1F27                     	;# 
 10166     1F38                     	;# 
 10167     1F39                     	;# 
 10168     1F3A                     	;# 
 10169     1F3B                     	;# 
 10170     1F3C                     	;# 
 10171     1F3D                     	;# 
 10172     1F3E                     	;# 
 10173     1F3F                     	;# 
 10174     1F43                     	;# 
 10175     1F44                     	;# 
 10176     1F45                     	;# 
 10177     1F46                     	;# 
 10178     1F47                     	;# 
 10179     1F48                     	;# 
 10180     1F49                     	;# 
 10181     1F4A                     	;# 
 10182     1F4E                     	;# 
 10183     1F4F                     	;# 
 10184     1F50                     	;# 
 10185     1F51                     	;# 
 10186     1F52                     	;# 
 10187     1F53                     	;# 
 10188     1F54                     	;# 
 10189     1F55                     	;# 
 10190     1F65                     	;# 
 10191     1F66                     	;# 
 10192     1F67                     	;# 
 10193     1F68                     	;# 
 10194     1F69                     	;# 
 10195     1F6A                     	;# 
 10196     1F6B                     	;# 
 10197     1FE4                     	;# 
 10198     1FE5                     	;# 
 10199     1FE6                     	;# 
 10200     1FE7                     	;# 
 10201     1FE8                     	;# 
 10202     1FE8                     	;# 
 10203     1FE9                     	;# 
 10204     1FEA                     	;# 
 10205     1FEB                     	;# 
 10206     1FED                     	;# 
 10207     1FEE                     	;# 
 10208     1FEF                     	;# 
 10209                           
 10210 ;; Function _do_I2C_RESET is unused but had its address taken
 10211     0000                     
 10212 ;; Function _do_I2C_IDLE is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_RCEN is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_TX is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_RX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10241     0000                     
 10242 ;; Function _i2c_ISR is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _returnStop is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnReset is unused but had its address taken
 10249     0000                     
 10250 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254                           	psect	idataBANK1
 10255     0002                     __pidataBANK1:
 10256                           
 10257                           ;initializer for RN487X_GetInputsValues@F12901
 10258     0002  3430               	retlw	48
 10259     0003  3430               	retlw	48
 10260                           
 10261                           	psect	idataBANK3
 10262     1250                     __pidataBANK3:
 10263                           
 10264                           ;initializer for __hex
 10265     1250  3430               	retlw	48
 10266     1251  3431               	retlw	49
 10267     1252  3432               	retlw	50
 10268     1253  3433               	retlw	51
 10269     1254  3434               	retlw	52
 10270     1255  3435               	retlw	53
 10271     1256  3436               	retlw	54
 10272     1257  3437               	retlw	55
 10273     1258  3438               	retlw	56
 10274     1259  3439               	retlw	57
 10275     125A  3441               	retlw	65
 10276     125B  3442               	retlw	66
 10277     125C  3443               	retlw	67
 10278     125D  3444               	retlw	68
 10279     125E  3445               	retlw	69
 10280     125F  3446               	retlw	70
 10281     1260  3400               	retlw	0
 10282                           
 10283                           	psect	stringtext1
 10284     1800                     __pstringtext1:
 10285     1800                     _uart:
 10286     1800  34C6               	retlw	low _EUSART1_Read
 10287     1801  3416               	retlw	high _EUSART1_Read
 10288     1802  344C               	retlw	low _EUSART1_Write
 10289     1803  3416               	retlw	high _EUSART1_Write
 10290     1804  3400               	retlw	0
 10291     1805  3400               	retlw	0
 10292     1806  3400               	retlw	low _EUSART1_is_rx_ready
 10293     1807  3411               	retlw	high _EUSART1_is_rx_ready
 10294     1808  3491               	retlw	low _EUSART1_SetTxInterruptHandler
 10295     1809  3410               	retlw	high _EUSART1_SetTxInterruptHandler
 10296     180A  340C               	retlw	low _EUSART1_Receive_ISR
 10297     180B  340B               	retlw	high _EUSART1_Receive_ISR
 10298     180C  348B               	retlw	low _EUSART1_SetRxInterruptHandler
 10299     180D  3410               	retlw	high _EUSART1_SetRxInterruptHandler
 10300     180E  3416               	retlw	low _EUSART1_is_tx_done
 10301     180F  3410               	retlw	high _EUSART1_is_tx_done
 10302     1810  3448               	retlw	low _EUSART1_Transmit_ISR
 10303     1811  3415               	retlw	high _EUSART1_Transmit_ISR
 10304     1812  3449               	retlw	low _EUSART1_Initialize
 10305     1813  340B               	retlw	high _EUSART1_Initialize
 10306     1814  349D               	retlw	low _EUSART2_Read
 10307     1815  3416               	retlw	high _EUSART2_Read
 10308     1816  34FD               	retlw	low _EUSART2_Write
 10309     1817  3415               	retlw	high _EUSART2_Write
 10310     1818  3400               	retlw	0
 10311     1819  3400               	retlw	0
 10312     181A  34F7               	retlw	low _EUSART2_is_rx_ready
 10313     181B  3410               	retlw	high _EUSART2_is_rx_ready
 10314     181C  34AF               	retlw	low _EUSART2_SetTxInterruptHandler
 10315     181D  3410               	retlw	high _EUSART2_SetTxInterruptHandler
 10316     181E  3425               	retlw	low _EUSART2_Receive_ISR
 10317     181F  340A               	retlw	high _EUSART2_Receive_ISR
 10318     1820  34A9               	retlw	low _EUSART2_SetRxInterruptHandler
 10319     1821  3410               	retlw	high _EUSART2_SetRxInterruptHandler
 10320     1822  3412               	retlw	low _EUSART2_is_tx_done
 10321     1823  3410               	retlw	high _EUSART2_is_tx_done
 10322     1824  3426               	retlw	low _EUSART2_Transmit_ISR
 10323     1825  3415               	retlw	high _EUSART2_Transmit_ISR
 10324     1826  3488               	retlw	low _EUSART2_Initialize
 10325     1827  340B               	retlw	high _EUSART2_Initialize
 10326     1828                     __end_of_uart:
 10327                           
 10328                           	psect	stringtext2
 10329     1828                     __pstringtext2:
 10330     1828                     _i2c1_fsmStateTable:
 10331     1828  341F               	retlw	low _I2C1_DO_IDLE
 10332     1829  3410               	retlw	high _I2C1_DO_IDLE
 10333     182A  34EE               	retlw	low _I2C1_DO_SEND_ADR_READ
 10334     182B  3410               	retlw	high _I2C1_DO_SEND_ADR_READ
 10335     182C  34D5               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10336     182D  3410               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10337     182E  344C               	retlw	low _I2C1_DO_TX
 10338     182F  340F               	retlw	high _I2C1_DO_TX
 10339     1830  34E4               	retlw	low _I2C1_DO_RX
 10340     1831  340C               	retlw	high _I2C1_DO_RX
 10341     1832  34C7               	retlw	low _I2C1_DO_RCEN
 10342     1833  3410               	retlw	high _I2C1_DO_RCEN
 10343     1834  34EF               	retlw	low _I2C1_DO_TX_EMPTY
 10344     1835  3416               	retlw	high _I2C1_DO_TX_EMPTY
 10345     1836  3424               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10346     1837  3410               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10347     1838  3429               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10348     1839  3410               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10349     183A  342E               	retlw	low _I2C1_DO_SEND_RESTART
 10350     183B  3410               	retlw	high _I2C1_DO_SEND_RESTART
 10351     183C  3433               	retlw	low _I2C1_DO_SEND_STOP
 10352     183D  3410               	retlw	high _I2C1_DO_SEND_STOP
 10353     183E  3438               	retlw	low _I2C1_DO_RX_ACK
 10354     183F  3410               	retlw	high _I2C1_DO_RX_ACK
 10355     1840  343D               	retlw	low _I2C1_DO_RX_NACK_STOP
 10356     1841  3410               	retlw	high _I2C1_DO_RX_NACK_STOP
 10357     1842  3442               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10358     1843  3410               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10359     1844  3447               	retlw	low _I2C1_DO_RESET
 10360     1845  3410               	retlw	high _I2C1_DO_RESET
 10361     1846  3424               	retlw	low _I2C1_DO_ADDRESS_NACK
 10362     1847  3416               	retlw	high _I2C1_DO_ADDRESS_NACK
 10363     1848                     __end_of_i2c1_fsmStateTable:
 10364                           
 10365                           	psect	stringtext3
 10366     1848                     __pstringtext3:
 10367     1848                     _fsmStateTable:
 10368     1848  3400               	retlw	0
 10369     1849  3400               	retlw	0
 10370     184A  3400               	retlw	0
 10371     184B  3400               	retlw	0
 10372     184C  3400               	retlw	0
 10373     184D  3400               	retlw	0
 10374     184E  3400               	retlw	0
 10375     184F  3400               	retlw	0
 10376     1850  3400               	retlw	0
 10377     1851  3400               	retlw	0
 10378     1852  3400               	retlw	0
 10379     1853  3400               	retlw	0
 10380     1854  3400               	retlw	0
 10381     1855  3400               	retlw	0
 10382     1856  3400               	retlw	0
 10383     1857  3400               	retlw	0
 10384     1858  3400               	retlw	0
 10385     1859  3400               	retlw	0
 10386     185A  3400               	retlw	0
 10387     185B  3400               	retlw	0
 10388     185C  3400               	retlw	0
 10389     185D  3400               	retlw	0
 10390     185E  3400               	retlw	0
 10391     185F  3400               	retlw	0
 10392     1860  3400               	retlw	0
 10393     1861  3400               	retlw	0
 10394     1862  3400               	retlw	0
 10395     1863  3400               	retlw	0
 10396     1864  3400               	retlw	0
 10397     1865  3400               	retlw	0
 10398     1866  3400               	retlw	0
 10399     1867  3400               	retlw	0
 10400     1868                     __end_of_fsmStateTable:
 10401                           
 10402                           	psect	stringtext4
 10403     1868                     __pstringtext4:
 10404     1868                     _RN487X:
 10405     1868  347B               	retlw	low _RN487X_Write
 10406     1869  3411               	retlw	high _RN487X_Write
 10407     186A  3412               	retlw	low _RN487X_Read@rn487x_interface$F1831
 10408     186B  3411               	retlw	high _RN487X_Read@rn487x_interface$F1831
 10409     186C  341C               	retlw	low _RN487X_is_tx_done
 10410     186D  3411               	retlw	high _RN487X_is_tx_done
 10411     186E  3426               	retlw	low _RN487X_is_rx_ready
 10412     186F  3411               	retlw	high _RN487X_is_rx_ready
 10413     1870  345A               	retlw	low _RN487X_IndicateRx
 10414     1871  3411               	retlw	high _RN487X_IndicateRx
 10415     1872  3465               	retlw	low _RN487X_Reset
 10416     1873  3411               	retlw	high _RN487X_Reset
 10417     1874  3487               	retlw	low _RN487X_SetSystemMode
 10418     1875  3411               	retlw	high _RN487X_SetSystemMode
 10419     1876  34DD               	retlw	low _RN487X_Delay
 10420     1877  3410               	retlw	high _RN487X_Delay
 10421     1878  3448               	retlw	low _RN487X_MessageHandler
 10422     1879  3409               	retlw	high _RN487X_MessageHandler
 10423     187A                     __end_of_RN487X:
 10424                           
 10425                           	psect	stringtext5
 10426     2000                     __pstringtext5:
 10427     2000                     _rn487x_driver_version:
 10428     2000  349C               	retlw	low (STR_1| (0+32768))
 10429     2001  3498               	retlw	high (STR_1| (0+32768))
 10430     2002                     __end_of_rn487x_driver_version:
 10431                           
 10432                           	psect	stringtext6
 10433     2002                     __pstringtext6:
 10434     2002                     _protocol_version_number:
 10435     2002  349C               	retlw	low (STR_1| (0+32768))
 10436     2003  3498               	retlw	high (STR_1| (0+32768))
 10437     2004                     __end_of_protocol_version_number:
 10438                           
 10439                           	psect	stringtext7
 10440     1886                     __pstringtext7:
 10441     1886                     RN487X_RebootCmd@reboot:
 10442     1886  3452               	retlw	82
 10443     1887  3465               	retlw	101
 10444     1888  3462               	retlw	98
 10445     1889  346F               	retlw	111
 10446     188A  346F               	retlw	111
 10447     188B  3474               	retlw	116
 10448     188C  3469               	retlw	105
 10449     188D  346E               	retlw	110
 10450     188E  3467               	retlw	103
 10451     188F  340D               	retlw	13
 10452     1890  340A               	retlw	10
 10453     1891                     __end_ofRN487X_RebootCmd@reboot:
 10454                           
 10455                           	psect	stringtext8
 10456     18A2                     __pstringtext8:
 10457     18A2                     RN487X_EnterDataMode@cmdPrompt:
 10458     18A2  3445               	retlw	69
 10459     18A3  344E               	retlw	78
 10460     18A4  3444               	retlw	68
 10461     18A5  340D               	retlw	13
 10462     18A6  340A               	retlw	10
 10463     18A7                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10464                           
 10465                           	psect	stringtext9
 10466     18A7                     __pstringtext9:
 10467     18A7                     RN487X_EnterCmdMode@cmdPrompt:
 10468     18A7  3443               	retlw	67
 10469     18A8  344D               	retlw	77
 10470     18A9  3444               	retlw	68
 10471     18AA  343E               	retlw	62
 10472     18AB  3420               	retlw	32
 10473     18AC                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10474                           
 10475                           	psect	nvBANK1
 10476     00E6                     __pnvBANK1:
 10477     00E6                     _IOCAF6_InterruptHandler:
 10478     00E6                     	ds	2
 10479     00E8                     _EUSART2_FramingErrorHandler:
 10480     00E8                     	ds	2
 10481     00EA                     _EUSART2_RxDefaultInterruptHandler:
 10482     00EA                     	ds	2
 10483     00EC                     _EUSART2_TxDefaultInterruptHandler:
 10484     00EC                     	ds	2
 10485                           
 10486                           	psect	nvBANK2
 10487     015C                     __pnvBANK2:
 10488     015C                     _EUSART1_ErrorHandler:
 10489     015C                     	ds	2
 10490     015E                     _EUSART1_OverrunErrorHandler:
 10491     015E                     	ds	2
 10492     0160                     _EUSART1_FramingErrorHandler:
 10493     0160                     	ds	2
 10494     0162                     _EUSART1_RxDefaultInterruptHandler:
 10495     0162                     	ds	2
 10496     0164                     _EUSART1_TxDefaultInterruptHandler:
 10497     0164                     	ds	2
 10498     0166                     _EUSART2_ErrorHandler:
 10499     0166                     	ds	2
 10500     0168                     _EUSART2_OverrunErrorHandler:
 10501     0168                     	ds	2
 10502     0014                     _TRISC	set	20
 10503     0013                     _TRISB	set	19
 10504     0012                     _TRISA	set	18
 10505     0016                     _TRISE	set	22
 10506     001A                     _LATC	set	26
 10507     0019                     _LATB	set	25
 10508     0018                     _LATA	set	24
 10509     001C                     _LATE	set	28
 10510     0012                     _TRISAbits	set	18
 10511     001A                     _LATCbits	set	26
 10512     000B                     _INTCONbits	set	11
 10513     0018                     _LATAbits	set	24
 10514     000C                     _PORTAbits	set	12
 10515     0119                     _RC1REG	set	281
 10516     011D                     _RC1STAbits	set	285
 10517     011A                     _TX1REG	set	282
 10518     011E                     _TX1STAbits	set	286
 10519     011C                     _SP1BRGH	set	284
 10520     011B                     _SP1BRGL	set	283
 10521     011E                     _TX1STA	set	286
 10522     011D                     _RC1STA	set	285
 10523     011F                     _BAUD1CON	set	287
 10524     018F                     _SSP1STATbits	set	399
 10525     018E                     _SSP1MSK	set	398
 10526     018C                     _SSP1BUF	set	396
 10527     0191                     _SSP1CON2bits	set	401
 10528     018D                     _SSP1ADD	set	397
 10529     0191                     _SSP1CON2	set	401
 10530     0190                     _SSP1CON1	set	400
 10531     018F                     _SSP1STAT	set	399
 10532     0190                     _SSP1CON1bits	set	400
 10533     059E                     _T0CON0bits	set	1438
 10534     059E                     _T0CON0	set	1438
 10535     059C                     _TMR0L	set	1436
 10536     059D                     _TMR0H	set	1437
 10537     059F                     _T0CON1	set	1439
 10538     070F                     _PIR3bits	set	1807
 10539     070C                     _PIR0bits	set	1804
 10540     0716                     _PIE0bits	set	1814
 10541     0719                     _PIE3bits	set	1817
 10542     079D                     _PMD7	set	1949
 10543     079C                     _PMD6	set	1948
 10544     079B                     _PMD5	set	1947
 10545     079A                     _PMD4	set	1946
 10546     0799                     _PMD3	set	1945
 10547     0798                     _PMD2	set	1944
 10548     0797                     _PMD1	set	1943
 10549     0796                     _PMD0	set	1942
 10550     0892                     _OSCTUNE	set	2194
 10551     0890                     _OSCSTAT	set	2192
 10552     0893                     _OSCFRQ	set	2195
 10553     0891                     _OSCEN	set	2193
 10554     088F                     _OSCCON3	set	2191
 10555     088D                     _OSCCON1	set	2189
 10556     0A19                     _RC2REG	set	2585
 10557     0A1D                     _RC2STAbits	set	2589
 10558     0A1A                     _TX2REG	set	2586
 10559     0A1E                     _TX2STAbits	set	2590
 10560     0A1C                     _SP2BRGH	set	2588
 10561     0A1B                     _SP2BRGL	set	2587
 10562     0A1E                     _TX2STA	set	2590
 10563     0A1D                     _RC2STA	set	2589
 10564     0A1F                     _BAUD2CON	set	2591
 10565     1ECB                     _RX1DTPPS	set	7883
 10566     1EC6                     _SSP1DATPPS	set	7878
 10567     1ECD                     _RX2DTPPS	set	7885
 10568     1EC5                     _SSP1CLKPPS	set	7877
 10569     1F1C                     _RB4PPS	set	7964
 10570     1F24                     _RC4PPS	set	7972
 10571     1F1A                     _RB2PPS	set	7962
 10572     1F19                     _RB1PPS	set	7961
 10573     1F3D                     _IOCAPbits	set	7997
 10574     1F3E                     _IOCANbits	set	7998
 10575     1F3F                     _IOCAFbits	set	7999
 10576     1F52                     _INLVLC	set	8018
 10577     1F47                     _INLVLB	set	8007
 10578     1F3C                     _INLVLA	set	7996
 10579     1F51                     _SLRCONC	set	8017
 10580     1F46                     _SLRCONB	set	8006
 10581     1F3B                     _SLRCONA	set	7995
 10582     1F50                     _ODCONC	set	8016
 10583     1F45                     _ODCONB	set	8005
 10584     1F3A                     _ODCONA	set	7994
 10585     1F66                     _ODCONE	set	8038
 10586     1F4F                     _WPUC	set	8015
 10587     1F39                     _WPUA	set	7993
 10588     1F44                     _WPUB	set	8004
 10589     1F65                     _WPUE	set	8037
 10590     1F38                     _ANSELA	set	7992
 10591     1F43                     _ANSELB	set	8003
 10592     1F4E                     _ANSELC	set	8014
 10593                           
 10594                           	psect	stringtext10
 10595     187A                     __pstringtext10:
 10596     187A                     STR_4:
 10597     187A  3453               	retlw	83	;'S'
 10598     187B  3454               	retlw	84	;'T'
 10599     187C  3452               	retlw	82	;'R'
 10600     187D  3445               	retlw	69	;'E'
 10601     187E  3441               	retlw	65	;'A'
 10602     187F  344D               	retlw	77	;'M'
 10603     1880  345F               	retlw	95	;'_'
 10604     1881  344F               	retlw	79	;'O'
 10605     1882  3450               	retlw	80	;'P'
 10606     1883  3445               	retlw	69	;'E'
 10607     1884  344E               	retlw	78	;'N'
 10608     1885  3400               	retlw	0
 10609                           
 10610                           	psect	stringtext11
 10611     1891                     __pstringtext11:
 10612     1891                     STR_2:
 10613     1891  3444               	retlw	68	;'D'
 10614     1892  3449               	retlw	73	;'I'
 10615     1893  3453               	retlw	83	;'S'
 10616     1894  3443               	retlw	67	;'C'
 10617     1895  344F               	retlw	79	;'O'
 10618     1896  344E               	retlw	78	;'N'
 10619     1897  344E               	retlw	78	;'N'
 10620     1898  3445               	retlw	69	;'E'
 10621     1899  3443               	retlw	67	;'C'
 10622     189A  3454               	retlw	84	;'T'
 10623     189B  3400               	retlw	0
 10624                           
 10625                           	psect	stringtext12
 10626     189C                     __pstringtext12:
 10627     189C                     STR_1:
 10628     189C  3431               	retlw	49	;'1'
 10629     189D  342E               	retlw	46	;'.'
 10630     189E  3431               	retlw	49	;'1'
 10631     189F  342E               	retlw	46	;'.'
 10632     18A0  3430               	retlw	48	;'0'
 10633     18A1  3400               	retlw	0
 10634                           
 10635                           	psect	stringtext13
 10636     0000                     __pstringtext13:
 10637     189C                     
 10638                           	psect	cinit
 10639     0057                     start_initialization:	
 10640                           ; #config settings
 10641                           
 10642     0057                     __initialization:
 10643                           
 10644                           ; Initialize objects allocated to BANK1
 10645     0057  0141               	movlb	1	; select bank1
 10646     0058  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
 10647     005B  00EE               	movwf	__pdataBANK1& (0+127)
 10648     005C  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10649     005F  00EF               	movwf	(__pdataBANK1+1)& (0+127)
 10650                           
 10651                           ; Initialize objects allocated to BANK3
 10652     0060  3050               	movlw	low __pidataBANK3
 10653     0061  0084               	movwf	4
 10654     0062  3092               	movlw	(high __pidataBANK3)| (0+128)
 10655     0063  0085               	movwf	5
 10656     0064  30A0               	movlw	low __pdataBANK3
 10657     0065  0086               	movwf	6
 10658     0066  3001               	movlw	high __pdataBANK3
 10659     0067  0087               	movwf	7
 10660     0068  3011               	movlw	17
 10661     0069  3190  20C1  3180   	fcall	init_ram
 10662                           
 10663                           ; Clear objects allocated to COMMON
 10664     006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10665                           
 10666                           ; Clear objects allocated to BANK0
 10667     006D  304C               	movlw	low __pbssBANK0
 10668     006E  0084               	movwf	4
 10669     006F  3000               	movlw	high __pbssBANK0
 10670     0070  0085               	movwf	5
 10671     0071  3024               	movlw	36
 10672     0072  3190  20BB  3180   	fcall	clear_ram0
 10673                           
 10674                           ; Clear objects allocated to BANK1
 10675     0075  30A0               	movlw	low __pbssBANK1
 10676     0076  0084               	movwf	4
 10677     0077  3000               	movlw	high __pbssBANK1
 10678     0078  0085               	movwf	5
 10679     0079  3046               	movlw	70
 10680     007A  3190  20BB  3180   	fcall	clear_ram0
 10681                           
 10682                           ; Clear objects allocated to BANK2
 10683     007D  3020               	movlw	low __pbssBANK2
 10684     007E  0084               	movwf	4
 10685     007F  3001               	movlw	high __pbssBANK2
 10686     0080  0085               	movwf	5
 10687     0081  303C               	movlw	60
 10688     0082  3190  20BB  3180   	fcall	clear_ram0
 10689                           
 10690                           ; Clear objects allocated to BANK4
 10691     0085  3020               	movlw	low __pbssBANK4
 10692     0086  0084               	movwf	4
 10693     0087  3002               	movlw	high __pbssBANK4
 10694     0088  0085               	movwf	5
 10695     0089  3040               	movlw	64
 10696     008A  3190  20BB  3180   	fcall	clear_ram0
 10697                           
 10698                           ; Clear objects allocated to BANK5
 10699     008D  30A0               	movlw	low __pbssBANK5
 10700     008E  0084               	movwf	4
 10701     008F  3002               	movlw	high __pbssBANK5
 10702     0090  0085               	movwf	5
 10703     0091  3050               	movlw	80
 10704     0092  3190  20BB  3180   	fcall	clear_ram0
 10705                           
 10706                           ; Clear objects allocated to BANK6
 10707     0095  3020               	movlw	low __pbssBANK6
 10708     0096  0084               	movwf	4
 10709     0097  3003               	movlw	high __pbssBANK6
 10710     0098  0085               	movwf	5
 10711     0099  3050               	movlw	80
 10712     009A  3190  20BB  3180   	fcall	clear_ram0
 10713                           
 10714                           ; Clear objects allocated to BANK7
 10715     009D  30A0               	movlw	low __pbssBANK7
 10716     009E  0084               	movwf	4
 10717     009F  3003               	movlw	high __pbssBANK7
 10718     00A0  0085               	movwf	5
 10719     00A1  3050               	movlw	80
 10720     00A2  3190  20BB  3180   	fcall	clear_ram0
 10721     00A5                     end_of_initialization:	
 10722                           ;End of C runtime variable initialization code
 10723                           
 10724     00A5                     __end_of__initialization:
 10725     00A5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10726     00A6  0140               	movlb	0
 10727     00A7  3184  2CC9         	ljmp	_main	;jump to C main() function
 10728                           
 10729                           	psect	bssCOMMON
 10730     007C                     __pbssCOMMON:
 10731     007C                     _eusart2RxHead:
 10732     007C                     	ds	1
 10733                           
 10734                           	psect	bssBANK0
 10735     004C                     __pbssBANK0:
 10736     004C                     _timer0ReloadVal16bit:
 10737     004C                     	ds	2
 10738     004E                     _data:
 10739     004E                     	ds	2
 10740     0050                     _bitMap:
 10741     0050                     	ds	2
 10742     0052                     _serialIndex:
 10743     0052                     	ds	1
 10744     0053                     _eusart1RxCount:
 10745     0053                     	ds	1
 10746     0054                     _eusart1RxTail:
 10747     0054                     	ds	1
 10748     0055                     _eusart1RxHead:
 10749     0055                     	ds	1
 10750     0056                     _eusart1TxBufferRemaining:
 10751     0056                     	ds	1
 10752     0057                     _eusart1TxTail:
 10753     0057                     	ds	1
 10754     0058                     _eusart1TxHead:
 10755     0058                     	ds	1
 10756     0059                     _eusart2RxCount:
 10757     0059                     	ds	1
 10758     005A                     _eusart2RxTail:
 10759     005A                     	ds	1
 10760     005B                     _eusart2TxBufferRemaining:
 10761     005B                     	ds	1
 10762     005C                     _eusart2TxTail:
 10763     005C                     	ds	1
 10764     005D                     _eusart2TxHead:
 10765     005D                     	ds	1
 10766     005E                     RN487X_FilterData@asyncBuffering:
 10767     005E                     	ds	1
 10768     005F                     _dataReady:
 10769     005F                     	ds	1
 10770     0060                     _peek:
 10771     0060                     	ds	1
 10772     0061                     _pHead:
 10773     0061                     	ds	1
 10774     0062                     _asyncBufferSize:
 10775     0062                     	ds	1
 10776     0063                     _asyncBuffer:
 10777     0063                     	ds	1
 10778     0064                     _connected:
 10779     0064                     	ds	1
 10780     0065                     _mask:
 10781     0065                     	ds	1
 10782     0066                     _lowerByte:
 10783     0066                     	ds	1
 10784     0067                     _upperByte:
 10785     0067                     	ds	1
 10786     0068                     _uno:
 10787     0068                     	ds	1
 10788     0069                     _zero:
 10789     0069                     	ds	1
 10790     006A                     _number:
 10791     006A                     	ds	1
 10792     006B                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10793     006B                     	ds	1
 10794     006C                     LIGHTBLUE_ParseIncomingPacket@length:
 10795     006C                     	ds	1
 10796     006D                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10797     006D                     	ds	1
 10798     006E                     _sequenceNumber:
 10799     006E                     	ds	1
 10800     006F                     __deviceAddress:
 10801     006F                     	ds	1
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	30
 10807     00BE                     _eusart1RxStatusBuffer:
 10808     00BE                     	ds	8
 10809     00C6                     _eusart2RxStatusBuffer:
 10810     00C6                     	ds	8
 10811     00CE                     _eusart2TxBuffer:
 10812     00CE                     	ds	8
 10813     00D6                     _manufactureId:
 10814     00D6                     	ds	2
 10815     00D8                     _i2c1_driver_i2cISR:
 10816     00D8                     	ds	2
 10817     00DA                     _i2c1_driver_busCollisionISR:
 10818     00DA                     	ds	2
 10819     00DC                     LIGHTBLUE_ParseIncomingPacket@data:
 10820     00DC                     	ds	2
 10821     00DE                     _eusart1RxLastError:
 10822     00DE                     	ds	1
 10823     00DF                     _eusart2RxLastError:
 10824     00DF                     	ds	1
 10825     00E0                     _siete:
 10826     00E0                     	ds	1
 10827     00E1                     _seis:
 10828     00E1                     	ds	1
 10829     00E2                     _cinco:
 10830     00E2                     	ds	1
 10831     00E3                     _cuatro:
 10832     00E3                     	ds	1
 10833     00E4                     _tres:
 10834     00E4                     	ds	1
 10835     00E5                     _dos:
 10836     00E5                     	ds	1
 10837                           
 10838                           	psect	dataBANK1
 10839     00EE                     __pdataBANK1:
 10840     00EE                     RN487X_GetInputsValues@F12901:
 10841     00EE                     	ds	2
 10842                           
 10843                           	psect	bssBANK2
 10844     0120                     __pbssBANK2:
 10845     0120                     _i2c_status:
 10846     0120                     	ds	36
 10847     0144                     _eusart1RxBuffer:
 10848     0144                     	ds	8
 10849     014C                     _eusart1TxBuffer:
 10850     014C                     	ds	8
 10851     0154                     _eusart2RxBuffer:
 10852     0154                     	ds	8
 10853                           
 10854                           	psect	dataBANK3
 10855     01A0                     __pdataBANK3:
 10856     01A0                     __hex:
 10857     01A0                     	ds	17
 10858                           
 10859                           	psect	bssBANK4
 10860     0220                     __pbssBANK4:
 10861     0220                     _cmdBuf:
 10862     0220                     	ds	64
 10863                           
 10864                           	psect	bssBANK5
 10865     02A0                     __pbssBANK5:
 10866     02A0                     _lightBlueSerial:
 10867     02A0                     	ds	80
 10868                           
 10869                           	psect	bssBANK6
 10870     0320                     __pbssBANK6:
 10871     0320                     _statusBuffer:
 10872     0320                     	ds	80
 10873                           
 10874                           	psect	bssBANK7
 10875     03A0                     __pbssBANK7:
 10876     03A0                     _statusBuffer@main$F4230:
 10877     03A0                     	ds	80
 10878                           
 10879                           	psect	inittext
 10880     10C1                     init_ram:
 10881     10C1  00FE               	movwf	btemp
 10882     10C2                     initloop:
 10883     10C2  0012               	moviw fsr0++
 10884     10C3  001E               	movwi fsr1++
 10885     10C4  0BFE               	decfsz	btemp,f
 10886     10C5  28C2               	goto	initloop
 10887     10C6  3400               	retlw	0
 10888                           
 10889                           	psect	clrtext
 10890     10BB                     clear_ram0:	
 10891                           ;	Called with FSR0 containing the base address, and
 10892                           ;	WREG with the size to clear
 10893                           
 10894     10BB  0064               	clrwdt	;clear the watchdog before getting into this loop
 10895     10BC                     clrloop0:
 10896     10BC  0180               	clrf	0	;clear RAM location pointed to by FSR
 10897     10BD  3101               	addfsr 0,1
 10898     10BE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10899     10BF  28BC               	goto	clrloop0	;have we reached the end yet?
 10900     10C0  3400               	retlw	0	;all done for this memory range, return
 10901                           
 10902                           	psect	cstackBANK2
 10903     016A                     __pcstackBANK2:
 10904     016A                     _main$5429:
 10905                           
 10906                           ; 1 bytes @ 0x0
 10907     016A                     	ds	1
 10908                           
 10909                           	psect	cstackCOMMON
 10910     0070                     __pcstackCOMMON:
 10911     0070                     ?_BMA253_NewAccelDataRdyY:
 10912     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10913                           ; 1 bytes @ 0x0
 10914                           
 10915     0070                     ?_TMAG5273_GetXValue:	
 10916                           ; 1 bytes @ 0x0
 10917                           
 10918     0070                     ?_TMAG5273_GetTemperatureValue:	
 10919                           ; 1 bytes @ 0x0
 10920                           
 10921     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10922                           ; 1 bytes @ 0x0
 10923                           
 10924     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10925                           ; 1 bytes @ 0x0
 10926                           
 10927     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10928                           ; 1 bytes @ 0x0
 10929                           
 10930     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10931                           ; 1 bytes @ 0x0
 10932                           
 10933     0070                     ?_RN487X_EnterCmdMode:	
 10934                           ; 1 bytes @ 0x0
 10935                           
 10936     0070                     ?_RN487X_EnterDataMode:	
 10937                           ; 1 bytes @ 0x0
 10938                           
 10939     0070                     ?_EUSART1_Read:	
 10940                           ; 1 bytes @ 0x0
 10941                           
 10942     0070                     ?_EUSART1_is_rx_ready:	
 10943                           ; 1 bytes @ 0x0
 10944                           
 10945     0070                     ?_EUSART1_Receive_ISR:	
 10946                           ; 1 bytes @ 0x0
 10947                           
 10948     0070                     ?_EUSART1_is_tx_done:	
 10949                           ; 1 bytes @ 0x0
 10950                           
 10951     0070                     ?_EUSART1_Transmit_ISR:	
 10952                           ; 1 bytes @ 0x0
 10953                           
 10954     0070                     ??_EUSART1_Transmit_ISR:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957     0070                     ?_EUSART1_Initialize:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960     0070                     ?_EUSART2_Read:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963     0070                     ?_EUSART2_is_rx_ready:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966     0070                     ?_EUSART2_Receive_ISR:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969     0070                     ?_EUSART2_is_tx_done:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972     0070                     ?_EUSART2_Transmit_ISR:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975     0070                     ??_EUSART2_Transmit_ISR:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978     0070                     ?_EUSART2_Initialize:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981     0070                     ?_I2C1_Open:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984     0070                     ?_I2C1_MasterWrite:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987     0070                     ?_I2C1_Close:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990     0070                     ?_isConnected:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993     0070                     ?_setMagneticChannel:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996     0070                     ?_setTemperatureEn:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999     0070                     ?_setOperatingMode:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002     0070                     ?_setXYAxisRange:	
 11003                           ; 1 bytes @ 0x0
 11004                           
 11005     0070                     ?_setZAxisRange:	
 11006                           ; 1 bytes @ 0x0
 11007                           
 11008     0070                     ?_getError:	
 11009                           ; 1 bytes @ 0x0
 11010                           
 11011     0070                     ?_getLowPower:	
 11012                           ; 1 bytes @ 0x0
 11013                           
 11014     0070                     ?_getOperatingMode:	
 11015                           ; 1 bytes @ 0x0
 11016                           
 11017     0070                     ?_getMagneticChannel:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020     0070                     ?_getTemperatureEN:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023     0070                     ?_getAngleEn:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026     0070                     ?_RN487X_IsConnected:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029     0070                     ?_RN487X_Read:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032     0070                     ?_RN487X_DataReady:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035     0070                     ?_RN487X_Read@rn487x_interface$F1832:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038     0070                     ?_RN487X_is_tx_done:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041     0070                     ?_RN487X_is_rx_ready:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044     0070                     ?_RN487X_FilterData:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11051                           ; 1 bytes @ 0x0
 11052                           
 11053     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11054                           ; 1 bytes @ 0x0
 11055                           
 11056     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11057                           ; 1 bytes @ 0x0
 11058                           
 11059     0070                     ?_EUSART2_DefaultErrorHandler:	
 11060                           ; 1 bytes @ 0x0
 11061                           
 11062     0070                     ?_EUSART2_RxDataHandler:	
 11063                           ; 1 bytes @ 0x0
 11064                           
 11065     0070                     ??_EUSART2_RxDataHandler:	
 11066                           ; 1 bytes @ 0x0
 11067                           
 11068     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11069                           ; 1 bytes @ 0x0
 11070                           
 11071     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11072                           ; 1 bytes @ 0x0
 11073                           
 11074     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11075                           ; 1 bytes @ 0x0
 11076                           
 11077     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11078                           ; 1 bytes @ 0x0
 11079                           
 11080     0070                     ?_EUSART1_DefaultErrorHandler:	
 11081                           ; 1 bytes @ 0x0
 11082                           
 11083     0070                     ?_EUSART1_RxDataHandler:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086     0070                     ??_EUSART1_RxDataHandler:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089     0070                     ?_PIN_MANAGER_IOC:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092     0070                     ??_PIN_MANAGER_IOC:	
 11093                           ; 1 bytes @ 0x0
 11094                           
 11095     0070                     ?_PMD_Initialize:	
 11096                           ; 1 bytes @ 0x0
 11097                           
 11098     0070                     ?_I2C1_Initialize:	
 11099                           ; 1 bytes @ 0x0
 11100                           
 11101     0070                     ?_PIN_MANAGER_Initialize:	
 11102                           ; 1 bytes @ 0x0
 11103                           
 11104     0070                     ?_OSCILLATOR_Initialize:	
 11105                           ; 1 bytes @ 0x0
 11106                           
 11107     0070                     ?_TMR0_Initialize:	
 11108                           ; 1 bytes @ 0x0
 11109                           
 11110     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11111                           ; 1 bytes @ 0x0
 11112                           
 11113     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11114                           ; 1 bytes @ 0x0
 11115                           
 11116     0070                     ?_IOCAF6_ISR:	
 11117                           ; 1 bytes @ 0x0
 11118                           
 11119     0070                     ??_IOCAF6_ISR:	
 11120                           ; 1 bytes @ 0x0
 11121                           
 11122     0070                     ?_I2C1_DO_IDLE:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11129                           ; 1 bytes @ 0x0
 11130                           
 11131     0070                     ?_I2C1_DO_TX:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134     0070                     ?_I2C1_DO_RX:	
 11135                           ; 1 bytes @ 0x0
 11136                           
 11137     0070                     ?_I2C1_DO_RCEN:	
 11138                           ; 1 bytes @ 0x0
 11139                           
 11140     0070                     ?_I2C1_DO_TX_EMPTY:	
 11141                           ; 1 bytes @ 0x0
 11142                           
 11143     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11144                           ; 1 bytes @ 0x0
 11145                           
 11146     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11147                           ; 1 bytes @ 0x0
 11148                           
 11149     0070                     ?_I2C1_DO_SEND_RESTART:	
 11150                           ; 1 bytes @ 0x0
 11151                           
 11152     0070                     ?_I2C1_DO_SEND_STOP:	
 11153                           ; 1 bytes @ 0x0
 11154                           
 11155     0070                     ?_I2C1_DO_RX_ACK:	
 11156                           ; 1 bytes @ 0x0
 11157                           
 11158     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11159                           ; 1 bytes @ 0x0
 11160                           
 11161     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11162                           ; 1 bytes @ 0x0
 11163                           
 11164     0070                     ?_I2C1_DO_RESET:	
 11165                           ; 1 bytes @ 0x0
 11166                           
 11167     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11168                           ; 1 bytes @ 0x0
 11169                           
 11170     0070                     ?_I2C1_MasterClearIrq:	
 11171                           ; 1 bytes @ 0x0
 11172                           
 11173     0070                     ?_I2C1_MasterOpen:	
 11174                           ; 1 bytes @ 0x0
 11175                           
 11176     0070                     ?_I2C1_MasterDisableIrq:	
 11177                           ; 1 bytes @ 0x0
 11178                           
 11179     0070                     ?_I2C1_MasterClose:	
 11180                           ; 1 bytes @ 0x0
 11181                           
 11182     0070                     ?_I2C1_MasterStart:	
 11183                           ; 1 bytes @ 0x0
 11184                           
 11185     0070                     ?_I2C1_Poller:	
 11186                           ; 1 bytes @ 0x0
 11187                           
 11188     0070                     ?_I2C1_MasterWaitForEvent:	
 11189                           ; 1 bytes @ 0x0
 11190                           
 11191     0070                     ?_I2C1_MasterFsm:	
 11192                           ; 1 bytes @ 0x0
 11193                           
 11194     0070                     ?_I2C1_MasterIsNack:	
 11195                           ; 1 bytes @ 0x0
 11196                           
 11197     0070                     ?_I2C1_MasterSendTxData:	
 11198                           ; 1 bytes @ 0x0
 11199                           
 11200     0070                     ?_I2C1_MasterGetRxData:	
 11201                           ; 1 bytes @ 0x0
 11202                           
 11203     0070                     ?_I2C1_MasterSendAck:	
 11204                           ; 1 bytes @ 0x0
 11205                           
 11206     0070                     ?_I2C1_MasterStartRx:	
 11207                           ; 1 bytes @ 0x0
 11208                           
 11209     0070                     ?_I2C1_MasterSetIrq:	
 11210                           ; 1 bytes @ 0x0
 11211                           
 11212     0070                     ?_I2C1_MasterEnableRestart:	
 11213                           ; 1 bytes @ 0x0
 11214                           
 11215     0070                     ?_I2C1_MasterStop:	
 11216                           ; 1 bytes @ 0x0
 11217                           
 11218     0070                     ?_I2C1_MasterSendNack:	
 11219                           ; 1 bytes @ 0x0
 11220                           
 11221     0070                     ?_BMA253_GetAccelDataY:	
 11222                           ; 1 bytes @ 0x0
 11223                           
 11224     0070                     ?_BMA253_GetAccelDataZ:	
 11225                           ; 1 bytes @ 0x0
 11226                           
 11227     0070                     ?_BMA253_GetAccelDataXYZ:	
 11228                           ; 1 bytes @ 0x0
 11229                           
 11230     0070                     ?_LIGHTBLUE_Initialize:	
 11231                           ; 1 bytes @ 0x0
 11232                           
 11233     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11234                           ; 1 bytes @ 0x0
 11235                           
 11236     0070                     ?_LIGHTBLUE_AccelSensor:	
 11237                           ; 1 bytes @ 0x0
 11238                           
 11239     0070                     ?_LIGHTBLUE_PushButton:	
 11240                           ; 1 bytes @ 0x0
 11241                           
 11242     0070                     ?_LIGHTBLUE_LedState:	
 11243                           ; 1 bytes @ 0x0
 11244                           
 11245     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11246                           ; 1 bytes @ 0x0
 11247                           
 11248     0070                     ?_LIGHTBLUE_SendSerialData:	
 11249                           ; 1 bytes @ 0x0
 11250                           
 11251     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11252                           ; 1 bytes @ 0x0
 11253                           
 11254     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11255                           ; 1 bytes @ 0x0
 11256                           
 11257     0070                     ?_begin:	
 11258                           ; 1 bytes @ 0x0
 11259                           
 11260     0070                     ?_readRegister:	
 11261                           ; 1 bytes @ 0x0
 11262                           
 11263     0070                     ?_getDeviceStatus:	
 11264                           ; 1 bytes @ 0x0
 11265                           
 11266     0070                     ?_rn487x_PrintMessageStart:	
 11267                           ; 1 bytes @ 0x0
 11268                           
 11269     0070                     ?_rn487x_PrintMessageEnd:	
 11270                           ; 1 bytes @ 0x0
 11271                           
 11272     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11273                           ; 1 bytes @ 0x0
 11274                           
 11275     0070                     ?_rn487x_PrintMessage:	
 11276                           ; 1 bytes @ 0x0
 11277                           
 11278     0070                     ?_RN487X_Init:	
 11279                           ; 1 bytes @ 0x0
 11280                           
 11281     0070                     ?_RN487X_ReadDefaultResponse:	
 11282                           ; 1 bytes @ 0x0
 11283                           
 11284     0070                     ?_INTERRUPT_InterruptManager:	
 11285                           ; 1 bytes @ 0x0
 11286                           
 11287     0070                     ?_SYSTEM_Initialize:	
 11288                           ; 1 bytes @ 0x0
 11289                           
 11290     0070                     ?_TMR0_HasOverflowOccured:	
 11291                           ; 1 bytes @ 0x0
 11292                           
 11293     0070                     ?_I2C1_MasterOperation:	
 11294                           ; 1 bytes @ 0x0
 11295                           
 11296     0070                     ?_main:	
 11297                           ; 1 bytes @ 0x0
 11298                           
 11299                           
 11300                           ; 2 bytes @ 0x0
 11301     0070                     	ds	1
 11302     0071                     ??_LIGHTBLUE_GetButtonValue:
 11303     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11304                           ; 1 bytes @ 0x1
 11305                           
 11306     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11307                           ; 1 bytes @ 0x1
 11308                           
 11309     0071                     ??_EUSART1_Read:	
 11310                           ; 1 bytes @ 0x1
 11311                           
 11312     0071                     ?_EUSART1_Write:	
 11313                           ; 1 bytes @ 0x1
 11314                           
 11315     0071                     ??_EUSART1_is_rx_ready:	
 11316                           ; 1 bytes @ 0x1
 11317                           
 11318     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11319                           ; 1 bytes @ 0x1
 11320                           
 11321     0071                     ??_EUSART1_Receive_ISR:	
 11322                           ; 1 bytes @ 0x1
 11323                           
 11324     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11325                           ; 1 bytes @ 0x1
 11326                           
 11327     0071                     ??_EUSART1_is_tx_done:	
 11328                           ; 1 bytes @ 0x1
 11329                           
 11330     0071                     ??_EUSART2_Read:	
 11331                           ; 1 bytes @ 0x1
 11332                           
 11333     0071                     ?_EUSART2_Write:	
 11334                           ; 1 bytes @ 0x1
 11335                           
 11336     0071                     ??_EUSART2_is_rx_ready:	
 11337                           ; 1 bytes @ 0x1
 11338                           
 11339     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11340                           ; 1 bytes @ 0x1
 11341                           
 11342     0071                     ??_EUSART2_Receive_ISR:	
 11343                           ; 1 bytes @ 0x1
 11344                           
 11345     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11346                           ; 1 bytes @ 0x1
 11347                           
 11348     0071                     ??_EUSART2_is_tx_done:	
 11349                           ; 1 bytes @ 0x1
 11350                           
 11351     0071                     ?_I2C1_SetBuffer:	
 11352                           ; 1 bytes @ 0x1
 11353                           
 11354     0071                     ??_I2C1_Open:	
 11355                           ; 1 bytes @ 0x1
 11356                           
 11357     0071                     ??_I2C1_Close:	
 11358                           ; 1 bytes @ 0x1
 11359                           
 11360     0071                     ?_bitWrite8:	
 11361                           ; 1 bytes @ 0x1
 11362                           
 11363     0071                     ?_bitRead8:	
 11364                           ; 1 bytes @ 0x1
 11365                           
 11366     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11367                           ; 1 bytes @ 0x1
 11368                           
 11369     0071                     ??_RN487X_IsConnected:	
 11370                           ; 1 bytes @ 0x1
 11371                           
 11372     0071                     ??_RN487X_is_tx_done:	
 11373                           ; 1 bytes @ 0x1
 11374                           
 11375     0071                     ??_RN487X_is_rx_ready:	
 11376                           ; 1 bytes @ 0x1
 11377                           
 11378     0071                     ?_RN487X_IndicateRx:	
 11379                           ; 1 bytes @ 0x1
 11380                           
 11381     0071                     ?_RN487X_Reset:	
 11382                           ; 1 bytes @ 0x1
 11383                           
 11384     0071                     ?_RN487X_SetSystemMode:	
 11385                           ; 1 bytes @ 0x1
 11386                           
 11387     0071                     ?_DELAY_milliseconds:	
 11388                           ; 1 bytes @ 0x1
 11389                           
 11390     0071                     ?_strcpy:	
 11391                           ; 1 bytes @ 0x1
 11392                           
 11393     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11394                           ; 1 bytes @ 0x1
 11395                           
 11396     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11397                           ; 1 bytes @ 0x1
 11398                           
 11399     0071                     ?_EUSART2_SetErrorHandler:	
 11400                           ; 1 bytes @ 0x1
 11401                           
 11402     0071                     ??_EUSART2_DefaultErrorHandler:	
 11403                           ; 1 bytes @ 0x1
 11404                           
 11405     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11406                           ; 1 bytes @ 0x1
 11407                           
 11408     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11409                           ; 1 bytes @ 0x1
 11410                           
 11411     0071                     ?_EUSART1_SetErrorHandler:	
 11412                           ; 1 bytes @ 0x1
 11413                           
 11414     0071                     ??_EUSART1_DefaultErrorHandler:	
 11415                           ; 1 bytes @ 0x1
 11416                           
 11417     0071                     ??_PMD_Initialize:	
 11418                           ; 1 bytes @ 0x1
 11419                           
 11420     0071                     ??_I2C1_Initialize:	
 11421                           ; 1 bytes @ 0x1
 11422                           
 11423     0071                     ??_OSCILLATOR_Initialize:	
 11424                           ; 1 bytes @ 0x1
 11425                           
 11426     0071                     ??_TMR0_Initialize:	
 11427                           ; 1 bytes @ 0x1
 11428                           
 11429     0071                     ?_IOCAF6_SetInterruptHandler:	
 11430                           ; 1 bytes @ 0x1
 11431                           
 11432     0071                     ??_I2C1_DO_IDLE:	
 11433                           ; 1 bytes @ 0x1
 11434                           
 11435     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11436                           ; 1 bytes @ 0x1
 11437                           
 11438     0071                     ??_I2C1_DO_RCEN:	
 11439                           ; 1 bytes @ 0x1
 11440                           
 11441     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11442                           ; 1 bytes @ 0x1
 11443                           
 11444     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11445                           ; 1 bytes @ 0x1
 11446                           
 11447     0071                     ??_I2C1_DO_SEND_RESTART:	
 11448                           ; 1 bytes @ 0x1
 11449                           
 11450     0071                     ??_I2C1_DO_SEND_STOP:	
 11451                           ; 1 bytes @ 0x1
 11452                           
 11453     0071                     ??_I2C1_DO_RX_ACK:	
 11454                           ; 1 bytes @ 0x1
 11455                           
 11456     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11457                           ; 1 bytes @ 0x1
 11458                           
 11459     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11460                           ; 1 bytes @ 0x1
 11461                           
 11462     0071                     ??_I2C1_DO_RESET:	
 11463                           ; 1 bytes @ 0x1
 11464                           
 11465     0071                     ??_I2C1_MasterClearIrq:	
 11466                           ; 1 bytes @ 0x1
 11467                           
 11468     0071                     ??_I2C1_MasterOpen:	
 11469                           ; 1 bytes @ 0x1
 11470                           
 11471     0071                     ??_I2C1_MasterDisableIrq:	
 11472                           ; 1 bytes @ 0x1
 11473                           
 11474     0071                     ??_I2C1_MasterClose:	
 11475                           ; 1 bytes @ 0x1
 11476                           
 11477     0071                     ??_I2C1_MasterStart:	
 11478                           ; 1 bytes @ 0x1
 11479                           
 11480     0071                     ?_I2C1_SetCallback:	
 11481                           ; 1 bytes @ 0x1
 11482                           
 11483     0071                     ??_I2C1_MasterWaitForEvent:	
 11484                           ; 1 bytes @ 0x1
 11485                           
 11486     0071                     ??_I2C1_MasterIsNack:	
 11487                           ; 1 bytes @ 0x1
 11488                           
 11489     0071                     ??_I2C1_MasterSendTxData:	
 11490                           ; 1 bytes @ 0x1
 11491                           
 11492     0071                     ??_I2C1_MasterGetRxData:	
 11493                           ; 1 bytes @ 0x1
 11494                           
 11495     0071                     ??_I2C1_MasterSendAck:	
 11496                           ; 1 bytes @ 0x1
 11497                           
 11498     0071                     ??_I2C1_MasterStartRx:	
 11499                           ; 1 bytes @ 0x1
 11500                           
 11501     0071                     ??_I2C1_MasterSetIrq:	
 11502                           ; 1 bytes @ 0x1
 11503                           
 11504     0071                     ??_I2C1_MasterEnableRestart:	
 11505                           ; 1 bytes @ 0x1
 11506                           
 11507     0071                     ??_I2C1_MasterStop:	
 11508                           ; 1 bytes @ 0x1
 11509                           
 11510     0071                     ??_I2C1_MasterSendNack:	
 11511                           ; 1 bytes @ 0x1
 11512                           
 11513     0071                     ?_strchr:	
 11514                           ; 1 bytes @ 0x1
 11515                           
 11516     0071                     ??_LIGHTBLUE_Initialize:	
 11517                           ; 1 bytes @ 0x1
 11518                           
 11519     0071                     ??_INTERRUPT_InterruptManager:	
 11520                           ; 1 bytes @ 0x1
 11521                           
 11522     0071                     ??_TMR0_HasOverflowOccured:	
 11523                           ; 1 bytes @ 0x1
 11524                           
 11525     0071                     ?_strlen:	
 11526                           ; 1 bytes @ 0x1
 11527                           
 11528     0071                     ?_swap:	
 11529                           ; 2 bytes @ 0x1
 11530                           
 11531     0071                     ?_strncmp:	
 11532                           ; 2 bytes @ 0x1
 11533                           
 11534     0071                     bitRead8@position:	
 11535                           ; 2 bytes @ 0x1
 11536                           
 11537     0071                     bitWrite8@position:	
 11538                           ; 1 bytes @ 0x1
 11539                           
 11540     0071                     RN487X_Reset@value:	
 11541                           ; 1 bytes @ 0x1
 11542                           
 11543     0071                     RN487X_IndicateRx@value:	
 11544                           ; 1 bytes @ 0x1
 11545                           
 11546     0071                     RN487X_SetSystemMode@mode:	
 11547                           ; 1 bytes @ 0x1
 11548                           
 11549     0071                     RN487X_SetAsyncMessageHandler@len:	
 11550                           ; 1 bytes @ 0x1
 11551                           
 11552     0071                     EUSART2_Write@txData:	
 11553                           ; 1 bytes @ 0x1
 11554                           
 11555     0071                     EUSART1_Write@txData:	
 11556                           ; 1 bytes @ 0x1
 11557                           
 11558     0071                     I2C1_Open@address:	
 11559                           ; 1 bytes @ 0x1
 11560                           
 11561     0071                     I2C1_Close@returnValue:	
 11562                           ; 1 bytes @ 0x1
 11563                           
 11564     0071                     I2C1_MasterSendTxData@data:	
 11565                           ; 1 bytes @ 0x1
 11566                           
 11567     0071                     strcpy@src:	
 11568                           ; 1 bytes @ 0x1
 11569                           
 11570     0071                     swap@reg:	
 11571                           ; 1 bytes @ 0x1
 11572                           
 11573     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11574                           ; 2 bytes @ 0x1
 11575                           
 11576     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11577                           ; 2 bytes @ 0x1
 11578                           
 11579     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11580                           ; 2 bytes @ 0x1
 11581                           
 11582     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11583                           ; 2 bytes @ 0x1
 11584                           
 11585     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11586                           ; 2 bytes @ 0x1
 11587                           
 11588     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11589                           ; 2 bytes @ 0x1
 11590                           
 11591     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11592                           ; 2 bytes @ 0x1
 11593                           
 11594     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11595                           ; 2 bytes @ 0x1
 11596                           
 11597     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11598                           ; 2 bytes @ 0x1
 11599                           
 11600     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11601                           ; 2 bytes @ 0x1
 11602                           
 11603     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11604                           ; 2 bytes @ 0x1
 11605                           
 11606     0071                     I2C1_SetBuffer@buffer:	
 11607                           ; 2 bytes @ 0x1
 11608                           
 11609     0071                     I2C1_SetCallback@cb:	
 11610                           ; 2 bytes @ 0x1
 11611                           
 11612     0071                     DELAY_milliseconds@milliseconds:	
 11613                           ; 2 bytes @ 0x1
 11614                           
 11615     0071                     strlen@s:	
 11616                           ; 2 bytes @ 0x1
 11617                           
 11618     0071                     strchr@c:	
 11619                           ; 2 bytes @ 0x1
 11620                           
 11621     0071                     strncmp@r:	
 11622                           ; 2 bytes @ 0x1
 11623                           
 11624                           
 11625                           ; 2 bytes @ 0x1
 11626     0071                     	ds	1
 11627     0072                     ??_EUSART1_Write:
 11628     0072                     ??_EUSART2_Write:	
 11629                           ; 1 bytes @ 0x2
 11630                           
 11631     0072                     ??_bitRead8:	
 11632                           ; 1 bytes @ 0x2
 11633                           
 11634     0072                     ??_RN487X_SetAsyncMessageHandler:	
 11635                           ; 1 bytes @ 0x2
 11636                           
 11637     0072                     ??_RN487X_IndicateRx:	
 11638                           ; 1 bytes @ 0x2
 11639                           
 11640     0072                     ??_RN487X_Reset:	
 11641                           ; 1 bytes @ 0x2
 11642                           
 11643     0072                     ??_RN487X_SetSystemMode:	
 11644                           ; 1 bytes @ 0x2
 11645                           
 11646     0072                     ??_strcpy:	
 11647                           ; 1 bytes @ 0x2
 11648                           
 11649     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11650                           ; 1 bytes @ 0x2
 11651                           
 11652     0072                     bitWrite8@value:	
 11653                           ; 1 bytes @ 0x2
 11654                           
 11655     0072                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11656                           ; 1 bytes @ 0x2
 11657                           
 11658     0072                     EUSART2_Read@readValue:	
 11659                           ; 1 bytes @ 0x2
 11660                           
 11661     0072                     EUSART1_Read@readValue:	
 11662                           ; 1 bytes @ 0x2
 11663                           
 11664     0072                     I2C1_Open@returnValue:	
 11665                           ; 1 bytes @ 0x2
 11666                           
 11667     0072                     strcpy@d:	
 11668                           ; 1 bytes @ 0x2
 11669                           
 11670                           
 11671                           ; 1 bytes @ 0x2
 11672     0072                     	ds	1
 11673     0073                     ??_strlen:
 11674     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11675                           ; 1 bytes @ 0x3
 11676                           
 11677     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11678                           ; 1 bytes @ 0x3
 11679                           
 11680     0073                     ??_EUSART1_Initialize:	
 11681                           ; 1 bytes @ 0x3
 11682                           
 11683     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11684                           ; 1 bytes @ 0x3
 11685                           
 11686     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11687                           ; 1 bytes @ 0x3
 11688                           
 11689     0073                     ??_EUSART2_Initialize:	
 11690                           ; 1 bytes @ 0x3
 11691                           
 11692     0073                     ??_bitWrite8:	
 11693                           ; 1 bytes @ 0x3
 11694                           
 11695     0073                     ??_swap:	
 11696                           ; 1 bytes @ 0x3
 11697                           
 11698     0073                     ??_RN487X_Read@rn487x_interface$F1834:	
 11699                           ; 1 bytes @ 0x3
 11700                           
 11701     0073                     ??_DELAY_milliseconds:	
 11702                           ; 1 bytes @ 0x3
 11703                           
 11704     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11705                           ; 1 bytes @ 0x3
 11706                           
 11707     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11708                           ; 1 bytes @ 0x3
 11709                           
 11710     0073                     ??_EUSART2_SetErrorHandler:	
 11711                           ; 1 bytes @ 0x3
 11712                           
 11713     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11714                           ; 1 bytes @ 0x3
 11715                           
 11716     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11717                           ; 1 bytes @ 0x3
 11718                           
 11719     0073                     ??_EUSART1_SetErrorHandler:	
 11720                           ; 1 bytes @ 0x3
 11721                           
 11722     0073                     ??_PIN_MANAGER_Initialize:	
 11723                           ; 1 bytes @ 0x3
 11724                           
 11725     0073                     ??_IOCAF6_SetInterruptHandler:	
 11726                           ; 1 bytes @ 0x3
 11727                           
 11728     0073                     ??_strchr:	
 11729                           ; 1 bytes @ 0x3
 11730                           
 11731     0073                     ??_rn487x_PrintMessageStart:	
 11732                           ; 1 bytes @ 0x3
 11733                           
 11734     0073                     ??_rn487x_PrintMessageEnd:	
 11735                           ; 1 bytes @ 0x3
 11736                           
 11737     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11738                           ; 1 bytes @ 0x3
 11739                           
 11740     0073                     ?_RN487X_ReadMsg:	
 11741                           ; 1 bytes @ 0x3
 11742                           
 11743     0073                     ??_RN487X_ReadDefaultResponse:	
 11744                           ; 1 bytes @ 0x3
 11745                           
 11746     0073                     ??_SYSTEM_Initialize:	
 11747                           ; 1 bytes @ 0x3
 11748                           
 11749     0073                     bitRead8@mask:	
 11750                           ; 1 bytes @ 0x3
 11751                           
 11752     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11753                           ; 1 bytes @ 0x3
 11754                           
 11755     0073                     I2C1_SetCallback@ptr:	
 11756                           ; 1 bytes @ 0x3
 11757                           
 11758     0073                     strcpy@dest:	
 11759                           ; 1 bytes @ 0x3
 11760                           
 11761     0073                     strchr@s:	
 11762                           ; 1 bytes @ 0x3
 11763                           
 11764     0073                     RN487X_ReadMsg@expectedMsg:	
 11765                           ; 1 bytes @ 0x3
 11766                           
 11767     0073                     I2C1_SetBuffer@bufferSize:	
 11768                           ; 2 bytes @ 0x3
 11769                           
 11770     0073                     strncmp@n:	
 11771                           ; 2 bytes @ 0x3
 11772                           
 11773     0073                     RN487X_ReadDefaultResponse@resp:	
 11774                           ; 2 bytes @ 0x3
 11775                           
 11776                           
 11777                           ; 3 bytes @ 0x3
 11778     0073                     	ds	1
 11779     0074                     ?_RN487X_Delay:
 11780     0074                     ??_I2C1_SetCallback:	
 11781                           ; 1 bytes @ 0x4
 11782                           
 11783     0074                     bitRead8@reg:	
 11784                           ; 1 bytes @ 0x4
 11785                           
 11786     0074                     bitWrite8@mask:	
 11787                           ; 1 bytes @ 0x4
 11788                           
 11789     0074                     I2C1_SetCallback@idx:	
 11790                           ; 1 bytes @ 0x4
 11791                           
 11792     0074                     RN487X_Delay@delayCount:	
 11793                           ; 1 bytes @ 0x4
 11794                           
 11795     0074                     strlen@a:	
 11796                           ; 2 bytes @ 0x4
 11797                           
 11798                           
 11799                           ; 2 bytes @ 0x4
 11800     0074                     	ds	1
 11801     0075                     ??_I2C1_SetBuffer:
 11802     0075                     ?_I2C1_SetDataCompleteCallback:	
 11803                           ; 1 bytes @ 0x5
 11804                           
 11805     0075                     ?_I2C1_SetAddressNackCallback:	
 11806                           ; 1 bytes @ 0x5
 11807                           
 11808     0075                     ??_strncmp:	
 11809                           ; 1 bytes @ 0x5
 11810                           
 11811     0075                     bitWrite8@reg:	
 11812                           ; 1 bytes @ 0x5
 11813                           
 11814     0075                     RN487X_ReadMsg@msgLen:	
 11815                           ; 1 bytes @ 0x5
 11816                           
 11817     0075                     I2C1_SetDataCompleteCallback@cb:	
 11818                           ; 1 bytes @ 0x5
 11819                           
 11820     0075                     I2C1_SetAddressNackCallback@cb:	
 11821                           ; 2 bytes @ 0x5
 11822                           
 11823                           
 11824                           ; 2 bytes @ 0x5
 11825     0075                     	ds	1
 11826     0076                     ?_LIGHTBLUE_SplitByte:
 11827     0076                     ?_RN487X_Write:	
 11828                           ; 1 bytes @ 0x6
 11829                           
 11830     0076                     ??_RN487X_Delay:	
 11831                           ; 1 bytes @ 0x6
 11832                           
 11833     0076                     ??_rn487x_PrintMessage:	
 11834                           ; 1 bytes @ 0x6
 11835                           
 11836     0076                     ??_RN487X_Init:	
 11837                           ; 1 bytes @ 0x6
 11838                           
 11839     0076                     ??_RN487X_ReadMsg:	
 11840                           ; 1 bytes @ 0x6
 11841                           
 11842     0076                     LIGHTBLUE_SplitByte@value:	
 11843                           ; 1 bytes @ 0x6
 11844                           
 11845     0076                     RN487X_Write@txData:	
 11846                           ; 1 bytes @ 0x6
 11847                           
 11848     0076                     RN487X_ReadDefaultResponse@status:	
 11849                           ; 1 bytes @ 0x6
 11850                           
 11851     0076                     strncmp@l:	
 11852                           ; 1 bytes @ 0x6
 11853                           
 11854                           
 11855                           ; 1 bytes @ 0x6
 11856     0076                     	ds	1
 11857     0077                     ?_LIGHTBLUE_SendPacket:
 11858     0077                     ??_LIGHTBLUE_SplitByte:	
 11859                           ; 1 bytes @ 0x7
 11860                           
 11861     0077                     ??_RN487X_Write:	
 11862                           ; 1 bytes @ 0x7
 11863                           
 11864     0077                     ?_strstr:	
 11865                           ; 1 bytes @ 0x7
 11866                           
 11867     0077                     ??_LIGHTBLUE_SendSerialData:	
 11868                           ; 1 bytes @ 0x7
 11869                           
 11870     0077                     ?_RN487X_SendCmd:	
 11871                           ; 1 bytes @ 0x7
 11872                           
 11873     0077                     LIGHTBLUE_SendPacket@payload:	
 11874                           ; 1 bytes @ 0x7
 11875                           
 11876     0077                     RN487X_SendCmd@cmdLen:	
 11877                           ; 1 bytes @ 0x7
 11878                           
 11879     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11880                           ; 1 bytes @ 0x7
 11881                           
 11882     0077                     I2C1_SetAddressNackCallback@ptr:	
 11883                           ; 1 bytes @ 0x7
 11884                           
 11885     0077                     strstr@n:	
 11886                           ; 2 bytes @ 0x7
 11887                           
 11888                           
 11889                           ; 2 bytes @ 0x7
 11890     0077                     	ds	1
 11891     0078                     ??_LIGHTBLUE_SendPacket:
 11892     0078                     ??_I2C1_SetDataCompleteCallback:	
 11893                           ; 1 bytes @ 0x8
 11894                           
 11895     0078                     ?_rd1RegCompleteHandler:	
 11896                           ; 1 bytes @ 0x8
 11897                           
 11898     0078                     ?_rd2RegCompleteHandler:	
 11899                           ; 1 bytes @ 0x8
 11900                           
 11901     0078                     ?_wr1RegCompleteHandler:	
 11902                           ; 1 bytes @ 0x8
 11903                           
 11904     0078                     ?_wr2RegCompleteHandler:	
 11905                           ; 1 bytes @ 0x8
 11906                           
 11907     0078                     ?_rdBlkRegCompleteHandler:	
 11908                           ; 1 bytes @ 0x8
 11909                           
 11910     0078                     ?_I2C1_CallbackReturnStop:	
 11911                           ; 1 bytes @ 0x8
 11912                           
 11913     0078                     ?_I2C1_CallbackReturnReset:	
 11914                           ; 1 bytes @ 0x8
 11915                           
 11916     0078                     ?_wr1RegCompleteHandler@strncmp$F4838:	
 11917                           ; 1 bytes @ 0x8
 11918                           
 11919     0078                     ?_rd1RegCompleteHandler@strncmp$F4844:	
 11920                           ; 1 bytes @ 0x8
 11921                           
 11922     0078                     ?_rd2RegCompleteHandler@strncmp$F4847:	
 11923                           ; 1 bytes @ 0x8
 11924                           
 11925     0078                     ?_wr2RegCompleteHandler@strncmp$F4850:	
 11926                           ; 1 bytes @ 0x8
 11927                           
 11928     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4856:	
 11929                           ; 1 bytes @ 0x8
 11930                           
 11931     0078                     ??_RN487X_SendCmd:	
 11932                           ; 1 bytes @ 0x8
 11933                           
 11934     0078                     LIGHTBLUE_SendSerialData@length:	
 11935                           ; 1 bytes @ 0x8
 11936                           
 11937     0078                     LIGHTBLUE_SplitByte@payload:	
 11938                           ; 1 bytes @ 0x8
 11939                           
 11940     0078                     wr1RegCompleteHandler@p:	
 11941                           ; 1 bytes @ 0x8
 11942                           
 11943     0078                     rd1RegCompleteHandler@p:	
 11944                           ; 1 bytes @ 0x8
 11945                           
 11946     0078                     rd2RegCompleteHandler@p:	
 11947                           ; 1 bytes @ 0x8
 11948                           
 11949     0078                     wr2RegCompleteHandler@p:	
 11950                           ; 1 bytes @ 0x8
 11951                           
 11952     0078                     rdBlkRegCompleteHandler@p:	
 11953                           ; 1 bytes @ 0x8
 11954                           
 11955     0078                     rd1RegCompleteHandler@i2c1_master_example$F1689@ptr:	
 11956                           ; 1 bytes @ 0x8
 11957                           
 11958     0078                     rd2RegCompleteHandler@i2c1_master_example$F1700@ptr:	
 11959                           ; 1 bytes @ 0x8
 11960                           
 11961     0078                     wr1RegCompleteHandler@i2c1_master_example$F1706@ptr:	
 11962                           ; 1 bytes @ 0x8
 11963                           
 11964     0078                     wr2RegCompleteHandler@i2c1_master_example$F1712@ptr:	
 11965                           ; 1 bytes @ 0x8
 11966                           
 11967     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr:	
 11968                           ; 1 bytes @ 0x8
 11969                           
 11970     0078                     RN487X_ReadMsg@resp:	
 11971                           ; 1 bytes @ 0x8
 11972                           
 11973     0078                     I2C1_CallbackReturnStop@funPtr:	
 11974                           ; 1 bytes @ 0x8
 11975                           
 11976     0078                     I2C1_CallbackReturnReset@funPtr:	
 11977                           ; 1 bytes @ 0x8
 11978                           
 11979                           
 11980                           ; 1 bytes @ 0x8
 11981     0078                     	ds	1
 11982     0079                     ?_LIGHTBLUE_SplitWord:
 11983     0079                     ??_I2C1_SetAddressNackCallback:	
 11984                           ; 1 bytes @ 0x9
 11985                           
 11986     0079                     ??_rd1RegCompleteHandler:	
 11987                           ; 1 bytes @ 0x9
 11988                           
 11989     0079                     ??_rd2RegCompleteHandler:	
 11990                           ; 1 bytes @ 0x9
 11991                           
 11992     0079                     ??_wr1RegCompleteHandler:	
 11993                           ; 1 bytes @ 0x9
 11994                           
 11995     0079                     ??_wr2RegCompleteHandler:	
 11996                           ; 1 bytes @ 0x9
 11997                           
 11998     0079                     ??_rdBlkRegCompleteHandler:	
 11999                           ; 1 bytes @ 0x9
 12000                           
 12001     0079                     ??_strstr:	
 12002                           ; 1 bytes @ 0x9
 12003                           
 12004     0079                     ??_I2C1_DO_TX:	
 12005                           ; 1 bytes @ 0x9
 12006                           
 12007     0079                     ??_I2C1_DO_RX:	
 12008                           ; 1 bytes @ 0x9
 12009                           
 12010     0079                     ??_I2C1_DO_TX_EMPTY:	
 12011                           ; 1 bytes @ 0x9
 12012                           
 12013     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 12014                           ; 1 bytes @ 0x9
 12015                           
 12016     0079                     ??_I2C1_CallbackReturnStop:	
 12017                           ; 1 bytes @ 0x9
 12018                           
 12019     0079                     ??_I2C1_CallbackReturnReset:	
 12020                           ; 1 bytes @ 0x9
 12021                           
 12022     0079                     ??_wr1RegCompleteHandler@strncmp$F4840:	
 12023                           ; 1 bytes @ 0x9
 12024                           
 12025     0079                     ??_rd1RegCompleteHandler@strncmp$F4846:	
 12026                           ; 1 bytes @ 0x9
 12027                           
 12028     0079                     ??_rd2RegCompleteHandler@strncmp$F4849:	
 12029                           ; 1 bytes @ 0x9
 12030                           
 12031     0079                     ??_wr2RegCompleteHandler@strncmp$F4852:	
 12032                           ; 1 bytes @ 0x9
 12033                           
 12034     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4858:	
 12035                           ; 1 bytes @ 0x9
 12036                           
 12037     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12038                           ; 1 bytes @ 0x9
 12039                           
 12040     0079                     RN487X_SendCmd@index:	
 12041                           ; 1 bytes @ 0x9
 12042                           
 12043     0079                     RN487X_ReadMsg@index:	
 12044                           ; 1 bytes @ 0x9
 12045                           
 12046     0079                     LIGHTBLUE_SplitWord@value:	
 12047                           ; 1 bytes @ 0x9
 12048                           
 12049                           
 12050                           ; 2 bytes @ 0x9
 12051     0079                     	ds	1
 12052     007A                     LIGHTBLUE_SendPacket@packetID:
 12053     007A                     RN487X_SendCmd@cmd:	
 12054                           ; 1 bytes @ 0xA
 12055                           
 12056                           
 12057                           ; 1 bytes @ 0xA
 12058     007A                     	ds	1
 12059     007B                     ??_i2c_write1ByteRegister:
 12060     007B                     ??_i2c_read1ByteRegister:	
 12061                           ; 1 bytes @ 0xB
 12062                           
 12063     007B                     ??_BMA253_NewAccelDataRdyY:	
 12064                           ; 1 bytes @ 0xB
 12065                           
 12066     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12067                           ; 1 bytes @ 0xB
 12068                           
 12069     007B                     ??_LIGHTBLUE_SplitWord:	
 12070                           ; 1 bytes @ 0xB
 12071                           
 12072     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12073                           ; 1 bytes @ 0xB
 12074                           
 12075     007B                     ??_RN487X_EnterCmdMode:	
 12076                           ; 1 bytes @ 0xB
 12077                           
 12078     007B                     ??_RN487X_SetOutputs:	
 12079                           ; 1 bytes @ 0xB
 12080                           
 12081     007B                     ??_RN487X_EnterDataMode:	
 12082                           ; 1 bytes @ 0xB
 12083                           
 12084     007B                     ??_I2C1_MasterWrite:	
 12085                           ; 1 bytes @ 0xB
 12086                           
 12087     007B                     ??_isConnected:	
 12088                           ; 1 bytes @ 0xB
 12089                           
 12090     007B                     ??_getLowPower:	
 12091                           ; 1 bytes @ 0xB
 12092                           
 12093     007B                     ??_getOperatingMode:	
 12094                           ; 1 bytes @ 0xB
 12095                           
 12096     007B                     ??_getMagneticChannel:	
 12097                           ; 1 bytes @ 0xB
 12098                           
 12099     007B                     ??_getTemperatureEN:	
 12100                           ; 1 bytes @ 0xB
 12101                           
 12102     007B                     ??_getAngleEn:	
 12103                           ; 1 bytes @ 0xB
 12104                           
 12105     007B                     ??_TMAG5273_GetManufacture:	
 12106                           ; 1 bytes @ 0xB
 12107                           
 12108     007B                     ?_RN487X_MessageHandler:	
 12109                           ; 1 bytes @ 0xB
 12110                           
 12111     007B                     ??_I2C1_Poller:	
 12112                           ; 1 bytes @ 0xB
 12113                           
 12114     007B                     ??_LIGHTBLUE_PushButton:	
 12115                           ; 1 bytes @ 0xB
 12116                           
 12117     007B                     ??_LIGHTBLUE_LedState:	
 12118                           ; 1 bytes @ 0xB
 12119                           
 12120     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12121                           ; 1 bytes @ 0xB
 12122                           
 12123     007B                     ??_readRegister:	
 12124                           ; 1 bytes @ 0xB
 12125                           
 12126     007B                     ??_getDeviceStatus:	
 12127                           ; 1 bytes @ 0xB
 12128                           
 12129     007B                     ??_I2C1_MasterOperation:	
 12130                           ; 1 bytes @ 0xB
 12131                           
 12132     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12133                           ; 1 bytes @ 0xB
 12134                           
 12135     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12136                           ; 1 bytes @ 0xB
 12137                           
 12138     007B                     LIGHTBLUE_SplitWord@payload:	
 12139                           ; 1 bytes @ 0xB
 12140                           
 12141     007B                     i2c_write1ByteRegister@address:	
 12142                           ; 1 bytes @ 0xB
 12143                           
 12144     007B                     getDeviceStatus@deviceStatusReg:	
 12145                           ; 1 bytes @ 0xB
 12146                           
 12147     007B                     TMAG5273_GetTemperatureValue@temperature:	
 12148                           ; 1 bytes @ 0xB
 12149                           
 12150     007B                     TMAG5273_CalcMeasurement@regAddress:	
 12151                           ; 1 bytes @ 0xB
 12152                           
 12153     007B                     RN487X_MessageHandler@message:	
 12154                           ; 1 bytes @ 0xB
 12155                           
 12156                           
 12157                           ; 1 bytes @ 0xB
 12158     007B                     	ds	1
 12159     007C                     ??_TMAG5273_GetXValue:
 12160     007C                     ??_getError:	
 12161                           ; 1 bytes @ 0xC
 12162                           
 12163     007C                     ??_RN487X_Read:	
 12164                           ; 1 bytes @ 0xC
 12165                           
 12166     007C                     ??_RN487X_DataReady:	
 12167                           ; 1 bytes @ 0xC
 12168                           
 12169     007C                     ??_RN487X_MessageHandler:	
 12170                           ; 1 bytes @ 0xC
 12171                           
 12172     007C                     ??_BMA253_GetAccelDataXYZ:	
 12173                           ; 1 bytes @ 0xC
 12174                           
 12175     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12176                           ; 1 bytes @ 0xC
 12177                           
 12178     007C                     ??_LIGHTBLUE_AccelSensor:	
 12179                           ; 1 bytes @ 0xC
 12180                           
 12181     007C                     ??_begin:	
 12182                           ; 1 bytes @ 0xC
 12183                           
 12184     007C                     ??_writeRegister:	
 12185                           ; 1 bytes @ 0xC
 12186                           
 12187                           
 12188                           	psect	cstackBANK0
 12189     0020                     __pcstackBANK0:	
 12190                           ; 1 bytes @ 0xC
 12191                           
 12192     0020                     ?_RN487X_SetOutputs:
 12193     0020                     ??_I2C1_MasterFsm:	
 12194                           ; 1 bytes @ 0x0
 12195                           
 12196     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12197                           ; 1 bytes @ 0x0
 12198                           
 12199     0020                     LIGHTBLUE_PushButton@button:	
 12200                           ; 1 bytes @ 0x0
 12201                           
 12202     0020                     RN487X_SetOutputs@bitMap:	
 12203                           ; 1 bytes @ 0x0
 12204                           
 12205     0020                     strstr@nl:	
 12206                           ; 2 bytes @ 0x0
 12207                           
 12208     0020                     LIGHTBLUE_LedState@payload:	
 12209                           ; 2 bytes @ 0x0
 12210                           
 12211     0020                     rn487x_PrintMessage@printCharacter:	
 12212                           ; 3 bytes @ 0x0
 12213                           
 12214                           
 12215                           ; 32 bytes @ 0x0
 12216     0020                     	ds	1
 12217     0021                     LIGHTBLUE_PushButton@payload:
 12218                           
 12219                           ; 3 bytes @ 0x1
 12220     0021                     	ds	1
 12221     0022                     RN487X_SetOutputs@ioLowNibble:
 12222     0022                     I2C1_MasterOperation@read:	
 12223                           ; 1 bytes @ 0x2
 12224                           
 12225     0022                     strstr@h:	
 12226                           ; 1 bytes @ 0x2
 12227                           
 12228     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12229                           ; 1 bytes @ 0x2
 12230                           
 12231                           
 12232                           ; 19 bytes @ 0x2
 12233     0022                     	ds	1
 12234     0023                     LIGHTBLUE_LedState@led:
 12235     0023                     RN487X_SetOutputs@stateLowNibble:	
 12236                           ; 1 bytes @ 0x3
 12237                           
 12238     0023                     I2C1_MasterOperation@returnValue:	
 12239                           ; 1 bytes @ 0x3
 12240                           
 12241                           
 12242                           ; 1 bytes @ 0x3
 12243     0023                     	ds	1
 12244     0024                     ?_i2c_write1ByteRegister:
 12245     0024                     ?_i2c_read1ByteRegister:	
 12246                           ; 1 bytes @ 0x4
 12247                           
 12248     0024                     ?_i2c_read2ByteRegister:	
 12249                           ; 1 bytes @ 0x4
 12250                           
 12251     0024                     i2c_write1ByteRegister@reg:	
 12252                           ; 2 bytes @ 0x4
 12253                           
 12254     0024                     i2c_read1ByteRegister@reg:	
 12255                           ; 1 bytes @ 0x4
 12256                           
 12257     0024                     i2c_read2ByteRegister@reg:	
 12258                           ; 1 bytes @ 0x4
 12259                           
 12260     0024                     RN487X_SetOutputs@ioHighNibble:	
 12261                           ; 1 bytes @ 0x4
 12262                           
 12263                           
 12264                           ; 1 bytes @ 0x4
 12265     0024                     	ds	1
 12266     0025                     i2c_write1ByteRegister@data:
 12267     0025                     i2c_read1ByteRegister@address:	
 12268                           ; 1 bytes @ 0x5
 12269                           
 12270     0025                     RN487X_SetOutputs@stateHighNibble:	
 12271                           ; 1 bytes @ 0x5
 12272                           
 12273                           
 12274                           ; 1 bytes @ 0x5
 12275     0025                     	ds	1
 12276     0026                     ??_i2c_read2ByteRegister:
 12277     0026                     ?_writeRegister:	
 12278                           ; 1 bytes @ 0x6
 12279                           
 12280     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12281                           ; 1 bytes @ 0x6
 12282                           
 12283     0026                     i2c_read1ByteRegister@e:	
 12284                           ; 1 bytes @ 0x6
 12285                           
 12286     0026                     writeRegister@data:	
 12287                           ; 1 bytes @ 0x6
 12288                           
 12289                           
 12290                           ; 1 bytes @ 0x6
 12291     0026                     	ds	1
 12292     0027                     ?_LIGHTBLUE_PerformAction:
 12293     0027                     LIGHTBLUE_PerformAction@data:	
 12294                           ; 1 bytes @ 0x7
 12295                           
 12296     0027                     writeRegister@regAddress:	
 12297                           ; 1 bytes @ 0x7
 12298                           
 12299     0027                     i2c_read1ByteRegister@x:	
 12300                           ; 1 bytes @ 0x7
 12301                           
 12302                           
 12303                           ; 2 bytes @ 0x7
 12304     0027                     	ds	1
 12305     0028                     ??_LIGHTBLUE_PerformAction:
 12306                           
 12307                           ; 1 bytes @ 0x8
 12308     0028                     	ds	1
 12309     0029                     LIGHTBLUE_PerformAction@id:
 12310     0029                     i2c_read1ByteRegister@d2:	
 12311                           ; 1 bytes @ 0x9
 12312                           
 12313                           
 12314                           ; 1 bytes @ 0x9
 12315     0029                     	ds	1
 12316     002A                     ??_BMA253_GetAccelDataY:
 12317     002A                     ??_BMA253_GetAccelDataZ:	
 12318                           ; 1 bytes @ 0xA
 12319                           
 12320     002A                     LIGHTBLUE_PerformAction@led:	
 12321                           ; 1 bytes @ 0xA
 12322                           
 12323     002A                     i2c_read2ByteRegister@address:	
 12324                           ; 1 bytes @ 0xA
 12325                           
 12326     002A                     readRegister@regAddress:	
 12327                           ; 1 bytes @ 0xA
 12328                           
 12329                           
 12330                           ; 1 bytes @ 0xA
 12331     002A                     	ds	1
 12332     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12333     002B                     readRegister@regVal:	
 12334                           ; 1 bytes @ 0xB
 12335                           
 12336     002B                     i2c_read2ByteRegister@result:	
 12337                           ; 1 bytes @ 0xB
 12338                           
 12339                           
 12340                           ; 2 bytes @ 0xB
 12341     002B                     	ds	1
 12342     002C                     getLowPower@lowPowerModeBit:
 12343     002C                     getOperatingMode@opMode:	
 12344                           ; 1 bytes @ 0xC
 12345                           
 12346     002C                     getMagneticChannel@magChannel:	
 12347                           ; 1 bytes @ 0xC
 12348                           
 12349     002C                     getAngleEn@angleReg:	
 12350                           ; 1 bytes @ 0xC
 12351                           
 12352     002C                     getTemperatureEN@tempEN:	
 12353                           ; 1 bytes @ 0xC
 12354                           
 12355     002C                     getError@undervoltageError:	
 12356                           ; 1 bytes @ 0xC
 12357                           
 12358                           
 12359                           ; 1 bytes @ 0xC
 12360     002C                     	ds	1
 12361     002D                     ??_TMAG5273_GetTemperatureValue:
 12362     002D                     ?_TMAG5273_GetManufacture:	
 12363                           ; 1 bytes @ 0xD
 12364                           
 12365     002D                     ?_TMAG5273_CalcMeasurement:	
 12366                           ; 2 bytes @ 0xD
 12367                           
 12368     002D                     BMA253_GetAccelDataY@yAccelData:	
 12369                           ; 2 bytes @ 0xD
 12370                           
 12371     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12372                           ; 1 bytes @ 0xD
 12373                           
 12374     002D                     getLowPower@lowPowerMode:	
 12375                           ; 1 bytes @ 0xD
 12376                           
 12377     002D                     getOperatingMode@opMode0:	
 12378                           ; 1 bytes @ 0xD
 12379                           
 12380     002D                     getMagneticChannel@magMode4:	
 12381                           ; 1 bytes @ 0xD
 12382                           
 12383     002D                     getAngleEn@angleDir2:	
 12384                           ; 1 bytes @ 0xD
 12385                           
 12386     002D                     getTemperatureEN@tempENreg:	
 12387                           ; 1 bytes @ 0xD
 12388                           
 12389     002D                     getError@otpCrcError:	
 12390                           ; 1 bytes @ 0xD
 12391                           
 12392     002D                     _LIGHTBLUE_ParseIncomingPacket$431:	
 12393                           ; 1 bytes @ 0xD
 12394                           
 12395                           
 12396                           ; 2 bytes @ 0xD
 12397     002D                     	ds	1
 12398     002E                     BMA253_GetAccelDataY@lsbData:
 12399     002E                     BMA253_GetAccelDataZ@lsbData:	
 12400                           ; 1 bytes @ 0xE
 12401                           
 12402     002E                     getOperatingMode@opMode1:	
 12403                           ; 1 bytes @ 0xE
 12404                           
 12405     002E                     getMagneticChannel@magMode5:	
 12406                           ; 1 bytes @ 0xE
 12407                           
 12408     002E                     getAngleEn@angleDir3:	
 12409                           ; 1 bytes @ 0xE
 12410                           
 12411     002E                     getError@intPinError:	
 12412                           ; 1 bytes @ 0xE
 12413                           
 12414                           
 12415                           ; 1 bytes @ 0xE
 12416     002E                     	ds	1
 12417     002F                     ??_TMAG5273_CalcMeasurement:
 12418     002F                     BMA253_GetAccelDataY@msbData:	
 12419                           ; 1 bytes @ 0xF
 12420                           
 12421     002F                     BMA253_GetAccelDataZ@msbData:	
 12422                           ; 1 bytes @ 0xF
 12423                           
 12424     002F                     getMagneticChannel@magMode6:	
 12425                           ; 1 bytes @ 0xF
 12426                           
 12427     002F                     getError@oscillatorError:	
 12428                           ; 1 bytes @ 0xF
 12429                           
 12430     002F                     _LIGHTBLUE_ParseIncomingPacket$432:	
 12431                           ; 1 bytes @ 0xF
 12432                           
 12433     002F                     TMAG5273_GetManufacture@read:	
 12434                           ; 2 bytes @ 0xF
 12435                           
 12436                           
 12437                           ; 2 bytes @ 0xF
 12438     002F                     	ds	1
 12439     0030                     getMagneticChannel@magMode7:
 12440     0030                     getError@statusReg:	
 12441                           ; 1 bytes @ 0x10
 12442                           
 12443                           
 12444                           ; 1 bytes @ 0x10
 12445     0030                     	ds	1
 12446     0031                     ??_setMagneticChannel:
 12447     0031                     ??_setTemperatureEn:	
 12448                           ; 1 bytes @ 0x11
 12449                           
 12450     0031                     ??_setOperatingMode:	
 12451                           ; 1 bytes @ 0x11
 12452                           
 12453     0031                     ??_setXYAxisRange:	
 12454                           ; 1 bytes @ 0x11
 12455                           
 12456     0031                     ??_setZAxisRange:	
 12457                           ; 1 bytes @ 0x11
 12458                           
 12459     0031                     _LIGHTBLUE_ParseIncomingPacket$433:	
 12460                           ; 1 bytes @ 0x11
 12461                           
 12462                           
 12463                           ; 2 bytes @ 0x11
 12464     0031                     	ds	1
 12465     0032                     LIGHTBLUE_TemperatureSensor@payload:
 12466                           
 12467                           ; 5 bytes @ 0x12
 12468     0032                     	ds	1
 12469     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:
 12470     0033                     setOperatingMode@opMode:	
 12471                           ; 1 bytes @ 0x13
 12472                           
 12473     0033                     setMagneticChannel@channelMode:	
 12474                           ; 1 bytes @ 0x13
 12475                           
 12476     0033                     setXYAxisRange@xyAxisRange:	
 12477                           ; 1 bytes @ 0x13
 12478                           
 12479     0033                     setZAxisRange@zAxisRange:	
 12480                           ; 1 bytes @ 0x13
 12481                           
 12482     0033                     setTemperatureEn@temperatureEnable:	
 12483                           ; 1 bytes @ 0x13
 12484                           
 12485                           
 12486                           ; 1 bytes @ 0x13
 12487     0033                     	ds	1
 12488     0034                     TMAG5273_GetXValue@x:
 12489     0034                     setOperatingMode@mode:	
 12490                           ; 1 bytes @ 0x14
 12491                           
 12492     0034                     setMagneticChannel@mode:	
 12493                           ; 2 bytes @ 0x14
 12494                           
 12495     0034                     setXYAxisRange@mode:	
 12496                           ; 2 bytes @ 0x14
 12497                           
 12498     0034                     setZAxisRange@mode:	
 12499                           ; 2 bytes @ 0x14
 12500                           
 12501     0034                     setTemperatureEn@mode:	
 12502                           ; 2 bytes @ 0x14
 12503                           
 12504                           
 12505                           ; 2 bytes @ 0x14
 12506     0034                     	ds	1
 12507     0035                     BMA253_GetAccelDataXYZ@accelData:
 12508     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 12509                           ; 1 bytes @ 0x15
 12510                           
 12511                           
 12512                           ; 1 bytes @ 0x15
 12513     0035                     	ds	1
 12514     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 12515     0036                     BMA253_GetAccelDataXYZ@sensorValue:	
 12516                           ; 1 bytes @ 0x16
 12517                           
 12518                           
 12519                           ; 2 bytes @ 0x16
 12520     0036                     	ds	1
 12521     0037                     LIGHTBLUE_TemperatureSensor@temperature:
 12522                           
 12523                           ; 2 bytes @ 0x17
 12524     0037                     	ds	1
 12525     0038                     LIGHTBLUE_AccelSensor@payload:
 12526                           
 12527                           ; 13 bytes @ 0x18
 12528     0038                     	ds	8
 12529     0040                     rn487x_PrintMessage@passedMessage:
 12530                           
 12531                           ; 1 bytes @ 0x20
 12532     0040                     	ds	1
 12533     0041                     rn487x_PrintMessage@messageIndex:
 12534                           
 12535                           ; 1 bytes @ 0x21
 12536     0041                     	ds	1
 12537     0042                     RN487X_MessageHandler@messageType:
 12538                           
 12539                           ; 1 bytes @ 0x22
 12540     0042                     	ds	1
 12541     0043                     ??_RN487X_FilterData:
 12542                           
 12543                           ; 1 bytes @ 0x23
 12544     0043                     	ds	1
 12545     0044                     RN487X_FilterData@readChar:
 12546                           
 12547                           ; 1 bytes @ 0x24
 12548     0044                     	ds	1
 12549     0045                     LIGHTBLUE_AccelSensor@accelData:
 12550                           
 12551                           ; 6 bytes @ 0x25
 12552     0045                     	ds	6
 12553     004B                     ??_main:
 12554                           
 12555                           ; 1 bytes @ 0x2B
 12556     004B                     	ds	1
 12557                           
 12558                           	psect	maintext
 12559     04C9                     __pmaintext:	
 12560 ;;
 12561 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12562 ;;
 12563 ;; *************** function _main *****************
 12564 ;; Defined at:
 12565 ;;		line 72 in file "main.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;		None
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  2  2703[None  ] int 
 12572 ;; Registers used:
 12573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12574 ;; Tracked objects:
 12575 ;;		On entry : B3F/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12580 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12582 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12583 ;;Total ram usage:        2 bytes
 12584 ;; Hardware stack levels required when called: 18
 12585 ;; This function calls:
 12586 ;;		_EUSART1_Read
 12587 ;;		_EUSART1_Write
 12588 ;;		_EUSART1_is_rx_ready
 12589 ;;		_EUSART2_Read
 12590 ;;		_EUSART2_Write
 12591 ;;		_EUSART2_is_rx_ready
 12592 ;;		_LIGHTBLUE_AccelSensor
 12593 ;;		_LIGHTBLUE_Initialize
 12594 ;;		_LIGHTBLUE_LedState
 12595 ;;		_LIGHTBLUE_ParseIncomingPacket
 12596 ;;		_LIGHTBLUE_PushButton
 12597 ;;		_LIGHTBLUE_SendProtocolVersion
 12598 ;;		_LIGHTBLUE_SendSerialData
 12599 ;;		_LIGHTBLUE_TemperatureSensor
 12600 ;;		_RN487X_DataReady
 12601 ;;		_RN487X_Init
 12602 ;;		_RN487X_IsConnected
 12603 ;;		_RN487X_Read
 12604 ;;		_RN487X_SetAsyncMessageHandler
 12605 ;;		_RN487X_Write
 12606 ;;		_SYSTEM_Initialize
 12607 ;;		_TMR0_HasOverflowOccured
 12608 ;;		_begin
 12609 ;; This function is called by:
 12610 ;;		Startup code after reset
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614     04C9                     _main:	
 12615                           ;psect for function _main
 12616                           
 12617     04C9                     l15852:	
 12618                           ;incstack = 0
 12619 ;; hardware stack exceeded
 12620                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12621                           
 12622                           
 12623                           ;main.c: 75:     SYSTEM_Initialize();
 12624     04C9  3193  238A  3184   	fcall	_SYSTEM_Initialize
 12625                           
 12626                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12627     04CC  3050               	movlw	80
 12628     04CD  00F1               	movwf	RN487X_SetAsyncMessageHandler@len
 12629     04CE  30A0               	movlw	(low (_statusBuffer@main$F4230| (0+768)))& (0+255)
 12630     04CF  3193  2374  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12631     04D2                     l15854:
 12632                           
 12633                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12634     04D2  178B               	bsf	11,7	;volatile
 12635     04D3                     l15856:
 12636                           
 12637                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12638     04D3  170B               	bsf	11,6	;volatile
 12639     04D4                     l15858:
 12640                           
 12641                           ;main.c: 84:     RN487X_Init();
 12642     04D4  318F  27A2  3184   	fcall	_RN487X_Init
 12643     04D7                     l15860:
 12644                           
 12645                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12646     04D7  3190  2067  3184   	fcall	_LIGHTBLUE_Initialize
 12647                           
 12648                           ;main.c: 86:     begin();
 12649     04DA  318E  26AB  3184   	fcall	_begin
 12650     04DD                     l15862:
 12651                           
 12652                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12653     04DD  319F  27F5  3184   	fcall	_RN487X_IsConnected
 12654     04E0  3A01               	xorlw	1
 12655     04E1  1D03               	skipz
 12656     04E2  2CE4               	goto	u13801
 12657     04E3  2CE5               	goto	u13800
 12658     04E4                     u13801:
 12659     04E4  2D6C               	goto	l2719
 12660     04E5                     u13800:
 12661     04E5                     l15864:
 12662                           
 12663                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12664     04E5  3190  2056  3184   	fcall	_TMR0_HasOverflowOccured
 12665     04E8  3A01               	xorlw	1
 12666     04E9  1D03               	skipz
 12667     04EA  2CEC               	goto	u13811
 12668     04EB  2CED               	goto	u13810
 12669     04EC                     u13811:
 12670     04EC  2D05               	goto	l2708
 12671     04ED                     u13810:
 12672     04ED                     l15866:
 12673                           
 12674                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12675     04ED  014E               	movlb	14	; select bank14
 12676     04EE  128C               	bcf	12,5	;volatile
 12677     04EF                     l15868:
 12678                           
 12679                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12680     04EF  3193  235E  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12681                           
 12682                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12683     04F2  3197  27D2  3184   	fcall	_LIGHTBLUE_AccelSensor
 12684                           
 12685                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12686     04F5  3192  22F9  3184   	fcall	_LIGHTBLUE_PushButton
 12687                           
 12688                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12689     04F8  3195  25D7  3184   	fcall	_LIGHTBLUE_LedState
 12690                           
 12691                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12692     04FB  3188  20A7  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12693                           
 12694                           ;main.c: 101:             }
 12695     04FE  2CDD               	goto	l15862
 12696     04FF                     l15870:
 12697                           
 12698                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12699     04FF  3191  2193  3184   	fcall	_RN487X_Read
 12700     0502  3183  23F2  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12701     0505                     l2708:	
 12702                           ;main.c: 107:                 }
 12703                           
 12704                           
 12705                           ;main.c: 104:                 while (RN487X_DataReady())
 12706     0505  3194  24E9  3184   	fcall	_RN487X_DataReady
 12707     0508  3A00               	xorlw	0
 12708     0509  1D03               	skipz
 12709     050A  2D0C               	goto	u13821
 12710     050B  2D0D               	goto	u13820
 12711     050C                     u13821:
 12712     050C  2CFF               	goto	l15870
 12713     050D                     u13820:
 12714     050D  2D4D               	goto	l15888
 12715     050E                     l15872:
 12716                           
 12717                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12718     050E  3000               	movlw	low (_uart| (0+32768))
 12719     050F  0084               	movwf	4
 12720     0510  3098               	movlw	high (_uart| (0+32768))
 12721     0511  0085               	movwf	5
 12722     0512  3F01               	moviw [1]fsr0
 12723     0513  008A               	movwf	10
 12724     0514  3F00               	moviw [0]fsr0
 12725     0515  000A               	callw
 12726     0516  3184               	pagesel	$
 12727     0517  0140               	movlb	0	; select bank0
 12728     0518  00CB               	movwf	??_main
 12729     0519  0852               	movf	_serialIndex,w
 12730     051A  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12731     051B  0086               	movwf	6
 12732     051C  3002               	movlw	2	; select bank5/6
 12733     051D  0087               	movwf	7
 12734     051E  084B               	movf	??_main,w
 12735     051F  0081               	movwf	1
 12736     0520                     l15874:
 12737                           
 12738                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12739     0520  0852               	movf	_serialIndex,w
 12740     0521  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12741     0522  0086               	movwf	6
 12742     0523  3002               	movlw	2	; select bank5/6
 12743     0524  0087               	movwf	7
 12744     0525  300D               	movlw	13
 12745     0526  0601               	xorwf	1,w
 12746     0527  1903               	btfsc	3,2
 12747     0528  2D2A               	goto	u13831
 12748     0529  2D2B               	goto	u13830
 12749     052A                     u13831:
 12750     052A  2D3C               	goto	l15880
 12751     052B                     u13830:
 12752     052B                     l15876:
 12753     052B  0852               	movf	_serialIndex,w
 12754     052C  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12755     052D  0086               	movwf	6
 12756     052E  3002               	movlw	2	; select bank5/6
 12757     052F  0087               	movwf	7
 12758     0530  300A               	movlw	10
 12759     0531  0601               	xorwf	1,w
 12760     0532  1903               	btfsc	3,2
 12761     0533  2D35               	goto	u13841
 12762     0534  2D36               	goto	u13840
 12763     0535                     u13841:
 12764     0535  2D3C               	goto	l15880
 12765     0536                     u13840:
 12766     0536                     l15878:
 12767     0536  304F               	movlw	79
 12768     0537  0652               	xorwf	_serialIndex,w
 12769     0538  1D03               	btfss	3,2
 12770     0539  2D3B               	goto	u13851
 12771     053A  2D3C               	goto	u13850
 12772     053B                     u13851:
 12773     053B  2D49               	goto	l15886
 12774     053C                     u13850:
 12775     053C                     l15880:
 12776                           
 12777                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12778     053C  0852               	movf	_serialIndex,w
 12779     053D  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12780     053E  0086               	movwf	6
 12781     053F  3002               	movlw	2	; select bank5/6
 12782     0540  0087               	movwf	7
 12783     0541  0181               	clrf	1
 12784     0542                     l15882:
 12785                           
 12786                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12787     0542  30A0               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12788     0543  3185  2599  3184   	fcall	_LIGHTBLUE_SendSerialData
 12789     0546                     l15884:
 12790                           
 12791                           ;main.c: 117:                         serialIndex = 0;
 12792     0546  0140               	movlb	0	; select bank0
 12793     0547  01D2               	clrf	_serialIndex
 12794                           
 12795                           ;main.c: 118:                     }
 12796     0548  2D4D               	goto	l15888
 12797     0549                     l15886:
 12798                           
 12799                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12800     0549  3001               	movlw	1
 12801     054A  00CB               	movwf	??_main
 12802     054B  084B               	movf	??_main,w
 12803     054C  07D2               	addwf	_serialIndex,f
 12804     054D                     l15888:
 12805                           
 12806                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12807     054D  3006               	movlw	low ((_uart+6)| (0+32768))
 12808     054E  0084               	movwf	4
 12809     054F  3098               	movlw	high ((_uart+6)| (0+32768))
 12810     0550  0085               	movwf	5
 12811     0551  3F01               	moviw [1]fsr0
 12812     0552  008A               	movwf	10
 12813     0553  3F00               	moviw [0]fsr0
 12814     0554  000A               	callw
 12815     0555  3184               	pagesel	$
 12816     0556  3A00               	xorlw	0
 12817     0557  1D03               	skipz
 12818     0558  2D5A               	goto	u13861
 12819     0559  2D5B               	goto	u13860
 12820     055A                     u13861:
 12821     055A  2D0E               	goto	l15872
 12822     055B                     u13860:
 12823     055B  2CDD               	goto	l15862
 12824     055C                     l15890:
 12825                           
 12826                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12827     055C  3191  2193  3184   	fcall	_RN487X_Read
 12828     055F  0142               	movlb	2	; select bank2
 12829     0560  00EA               	movwf	_main$5429^(0+256)
 12830                           
 12831                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12832     0561  086A               	movf	_main$5429^(0+256),w
 12833     0562  00F1               	movwf	EUSART2_Write@txData
 12834     0563  3002               	movlw	low ((_uart+2)| (0+32768))
 12835     0564  0084               	movwf	4
 12836     0565  3098               	movlw	high ((_uart+2)| (0+32768))
 12837     0566  0085               	movwf	5
 12838     0567  3F01               	moviw [1]fsr0
 12839     0568  008A               	movwf	10
 12840     0569  3F00               	moviw [0]fsr0
 12841     056A  000A               	callw
 12842     056B  3184               	pagesel	$
 12843     056C                     l2719:	
 12844                           ;main.c: 132:             }
 12845                           
 12846                           
 12847                           ;main.c: 129:             while(RN487X_DataReady())
 12848     056C  3194  24E9  3184   	fcall	_RN487X_DataReady
 12849     056F  3A00               	xorlw	0
 12850     0570  1D03               	skipz
 12851     0571  2D73               	goto	u13871
 12852     0572  2D74               	goto	u13870
 12853     0573                     u13871:
 12854     0573  2D5C               	goto	l15890
 12855     0574                     u13870:
 12856     0574  2D88               	goto	l15894
 12857     0575                     l15892:
 12858                           
 12859                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12860     0575  3000               	movlw	low (_uart| (0+32768))
 12861     0576  0084               	movwf	4
 12862     0577  3098               	movlw	high (_uart| (0+32768))
 12863     0578  0085               	movwf	5
 12864     0579  3F01               	moviw [1]fsr0
 12865     057A  008A               	movwf	10
 12866     057B  3F00               	moviw [0]fsr0
 12867     057C  000A               	callw
 12868     057D  3184               	pagesel	$
 12869     057E  00F6               	movwf	RN487X_Write@txData
 12870     057F  3068               	movlw	low (_RN487X| (0+32768))
 12871     0580  0084               	movwf	4
 12872     0581  3098               	movlw	high (_RN487X| (0+32768))
 12873     0582  0085               	movwf	5
 12874     0583  3F01               	moviw [1]fsr0
 12875     0584  008A               	movwf	10
 12876     0585  3F00               	moviw [0]fsr0
 12877     0586  000A               	callw
 12878     0587  3184               	pagesel	$
 12879     0588                     l15894:
 12880                           
 12881                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12882     0588  3006               	movlw	low ((_uart+6)| (0+32768))
 12883     0589  0084               	movwf	4
 12884     058A  3098               	movlw	high ((_uart+6)| (0+32768))
 12885     058B  0085               	movwf	5
 12886     058C  3F01               	moviw [1]fsr0
 12887     058D  008A               	movwf	10
 12888     058E  3F00               	moviw [0]fsr0
 12889     058F  000A               	callw
 12890     0590  3184               	pagesel	$
 12891     0591  3A00               	xorlw	0
 12892     0592  1D03               	skipz
 12893     0593  2D95               	goto	u13881
 12894     0594  2D96               	goto	u13880
 12895     0595                     u13881:
 12896     0595  2D75               	goto	l15892
 12897     0596                     u13880:
 12898     0596  2CDD               	goto	l15862
 12899     0597  3180  2855         	ljmp	start
 12900     0599                     __end_of_main:
 12901                           
 12902                           	psect	text1
 12903     0EAB                     __ptext1:	
 12904 ;; *************** function _begin *****************
 12905 ;; Defined at:
 12906 ;;		line 45 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      char 
 12913 ;; Registers used:
 12914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12924 ;;Total ram usage:        0 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 17
 12927 ;; This function calls:
 12928 ;;		_getAngleEn
 12929 ;;		_getError
 12930 ;;		_getLowPower
 12931 ;;		_getMagneticChannel
 12932 ;;		_getOperatingMode
 12933 ;;		_getTemperatureEN
 12934 ;;		_isConnected
 12935 ;;		_setMagneticChannel
 12936 ;;		_setOperatingMode
 12937 ;;		_setTemperatureEn
 12938 ;;		_setXYAxisRange
 12939 ;;		_setZAxisRange
 12940 ;; This function is called by:
 12941 ;;		_main
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945     0EAB                     _begin:	
 12946                           ;psect for function _begin
 12947                           
 12948     0EAB                     l14088:	
 12949                           ;incstack = 0
 12950 ;; hardware stack exceeded
 12951                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12952                           
 12953                           
 12954                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 73:     if (isConnecte
      +                          d() != 0) {
 12955     0EAB  3193  23E6  318E   	fcall	_isConnected
 12956     0EAE  3A00               	xorlw	0
 12957     0EAF  1903               	skipnz
 12958     0EB0  2EB2               	goto	u11551
 12959     0EB1  2EB3               	goto	u11550
 12960     0EB2                     u11551:
 12961     0EB2  2EB4               	goto	l14092
 12962     0EB3                     u11550:
 12963     0EB3  2EF8               	goto	l671
 12964     0EB4                     l14092:
 12965                           
 12966                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 78:     setMagneticCha
      +                          nnel(0X7);
 12967     0EB4  3007               	movlw	7
 12968     0EB5  3180  20A9  318E   	fcall	_setMagneticChannel
 12969                           
 12970                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 79:     setTemperature
      +                          En(1);
 12971     0EB8  3001               	movlw	1
 12972     0EB9  3189  217F  318E   	fcall	_setTemperatureEn
 12973                           
 12974                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 80:     setOperatingMo
      +                          de(0X2);
 12975     0EBC  3002               	movlw	2
 12976     0EBD  3187  2757  318E   	fcall	_setOperatingMode
 12977                           
 12978                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 83:     setXYAxisRange
      +                          (0X1);
 12979     0EC0  3001               	movlw	1
 12980     0EC1  318A  2297  318E   	fcall	_setXYAxisRange
 12981                           
 12982                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 84:     setZAxisRange(
      +                          0X1);
 12983     0EC4  3001               	movlw	1
 12984     0EC5  3189  21B6  318E   	fcall	_setZAxisRange
 12985                           
 12986                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 87:     if (getError()
      +                           != 0) {
 12987     0EC8  318A  22D0  318E   	fcall	_getError
 12988     0ECB  3A00               	xorlw	0
 12989     0ECC  1903               	skipnz
 12990     0ECD  2ECF               	goto	u11561
 12991     0ECE  2ED0               	goto	u11560
 12992     0ECF                     u11561:
 12993     0ECF  2ED1               	goto	l14096
 12994     0ED0                     u11560:
 12995     0ED0  2EF8               	goto	l671
 12996     0ED1                     l14096:
 12997                           
 12998                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 92:     if (getLowPowe
      +                          r() != 0X0) {
 12999     0ED1  3192  221E  318E   	fcall	_getLowPower
 13000     0ED4  3A00               	xorlw	0
 13001     0ED5  1903               	skipnz
 13002     0ED6  2ED8               	goto	u11571
 13003     0ED7  2ED9               	goto	u11570
 13004     0ED8                     u11571:
 13005     0ED8  2EDA               	goto	l14100
 13006     0ED9                     u11570:
 13007     0ED9  2EF8               	goto	l671
 13008     0EDA                     l14100:
 13009                           
 13010                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 97:     if (getOperati
      +                          ngMode() != 0X2) {
 13011     0EDA  318C  240D  318E   	fcall	_getOperatingMode
 13012     0EDD  3A02               	xorlw	2
 13013     0EDE  1903               	skipnz
 13014     0EDF  2EE1               	goto	u11581
 13015     0EE0  2EE2               	goto	u11580
 13016     0EE1                     u11581:
 13017     0EE1  2EE3               	goto	l14104
 13018     0EE2                     u11580:
 13019     0EE2  2EF8               	goto	l671
 13020     0EE3                     l14104:
 13021                           
 13022                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 102:     if (getMagnet
      +                          icChannel() != 0X7) {
 13023     0EE3  3182  22C4  318E   	fcall	_getMagneticChannel
 13024     0EE6  3A07               	xorlw	7
 13025     0EE7  1903               	skipnz
 13026     0EE8  2EEA               	goto	u11591
 13027     0EE9  2EEB               	goto	u11590
 13028     0EEA                     u11591:
 13029     0EEA  2EEC               	goto	l14108
 13030     0EEB                     u11590:
 13031     0EEB  2EF8               	goto	l671
 13032     0EEC                     l14108:
 13033                           
 13034                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 107:     if (getTemper
      +                          atureEN() != 0X1) {
 13035     0EEC  3192  220F  318E   	fcall	_getTemperatureEN
 13036     0EEF  3A01               	xorlw	1
 13037     0EF0  1903               	skipnz
 13038     0EF1  2EF3               	goto	u11601
 13039     0EF2  2EF4               	goto	u11600
 13040     0EF3                     u11601:
 13041     0EF3  2EF5               	goto	l14112
 13042     0EF4                     u11600:
 13043     0EF4  2EF8               	goto	l671
 13044     0EF5                     l14112:
 13045                           
 13046                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 112:     if (getAngleE
      +                          n() != 0X0) {
 13047     0EF5  318C  249C  318E   	fcall	_getAngleEn
 13048     0EF8                     l671:
 13049     0EF8  0008               	return
 13050     0EF9                     __end_of_begin:
 13051                           
 13052                           	psect	text2
 13053     09B6                     __ptext2:	
 13054 ;; *************** function _setZAxisRange *****************
 13055 ;; Defined at:
 13056 ;;		line 1041 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  zAxisRange      1    wreg     unsigned char 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;  zAxisRange      1   19[BANK0 ] unsigned char 
 13061 ;;  mode            2   20[BANK0 ] unsigned short 
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1    wreg      char 
 13064 ;; Registers used:
 13065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13072 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13073 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13074 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13075 ;;Total ram usage:        5 bytes
 13076 ;; Hardware stack levels used: 1
 13077 ;; Hardware stack levels required when called: 16
 13078 ;; This function calls:
 13079 ;;		_bitWrite8
 13080 ;;		_getError
 13081 ;;		_readRegister
 13082 ;;		_writeRegister
 13083 ;; This function is called by:
 13084 ;;		_begin
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088     09B6                     _setZAxisRange:	
 13089                           ;psect for function _setZAxisRange
 13090                           
 13091                           
 13092                           ;incstack = 0
 13093 ;; hardware stack exceeded
 13094                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13095                           ;setZAxisRange@zAxisRange stored from wreg
 13096     09B6  0140               	movlb	0	; select bank0
 13097     09B7  00B3               	movwf	setZAxisRange@zAxisRange
 13098     09B8                     l13448:
 13099     09B8                     l13450:
 13100                           
 13101                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1043:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13102     09B8  3003               	movlw	3
 13103     09B9  3191  219F  3189   	fcall	_readRegister
 13104     09BC  0140               	movlb	0	; select bank0
 13105     09BD  00B1               	movwf	??_setZAxisRange
 13106     09BE  01B2               	clrf	??_setZAxisRange+1
 13107     09BF  0831               	movf	??_setZAxisRange,w
 13108     09C0  00B4               	movwf	setZAxisRange@mode
 13109     09C1  0832               	movf	??_setZAxisRange+1,w
 13110     09C2  00B5               	movwf	setZAxisRange@mode+1
 13111     09C3                     l13452:
 13112                           
 13113                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:     if (zAxisRan
      +                          ge == 0X0)
 13114     09C3  0833               	movf	setZAxisRange@zAxisRange,w
 13115     09C4  1D03               	btfss	3,2
 13116     09C5  29C7               	goto	u10721
 13117     09C6  29C8               	goto	u10720
 13118     09C7                     u10721:
 13119     09C7  29D6               	goto	l13456
 13120     09C8                     u10720:
 13121     09C8                     l13454:
 13122                           
 13123                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1047:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:         bitWrite8(&mode, 0,
      +                           0);
 13124     09C8  01F1               	clrf	bitWrite8@position
 13125     09C9  01F2               	clrf	bitWrite8@value
 13126     09CA  3034               	movlw	(low (setZAxisRange@mode| 0))& (0+255)
 13127     09CB  3193  2334  3189   	fcall	_bitWrite8
 13128                           
 13129                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13130     09CE  0140               	movlb	0	; select bank0
 13131     09CF  0834               	movf	setZAxisRange@mode,w
 13132     09D0  00A6               	movwf	writeRegister@data
 13133     09D1  3003               	movlw	3
 13134     09D2  3191  2170  3189   	fcall	_writeRegister
 13135                           
 13136                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1052:     } else if (z
      +                          AxisRange == 0X1)
 13137     09D5  29E9               	goto	l881
 13138     09D6                     l13456:
 13139     09D6  0333               	decf	setZAxisRange@zAxisRange,w
 13140     09D7  1D03               	btfss	3,2
 13141     09D8  29DA               	goto	u10731
 13142     09D9  29DB               	goto	u10730
 13143     09DA                     u10731:
 13144     09DA  29E9               	goto	l881
 13145     09DB                     u10730:
 13146     09DB                     l13458:
 13147                           
 13148                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1053:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1054:         bitWrite8(&mode, 0,
      +                           1);
 13149     09DB  01F1               	clrf	bitWrite8@position
 13150     09DC  01F2               	clrf	bitWrite8@value
 13151     09DD  0AF2               	incf	bitWrite8@value,f
 13152     09DE  3034               	movlw	(low (setZAxisRange@mode| 0))& (0+255)
 13153     09DF  3193  2334  3189   	fcall	_bitWrite8
 13154                           
 13155                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1055:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13156     09E2  0140               	movlb	0	; select bank0
 13157     09E3  0834               	movf	setZAxisRange@mode,w
 13158     09E4  00A6               	movwf	writeRegister@data
 13159     09E5  3003               	movlw	3
 13160     09E6  3191  2170  3189   	fcall	_writeRegister
 13161     09E9                     l881:
 13162                           
 13163                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1058:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13164     09E9  318A  22D0  3189   	fcall	_getError
 13165     09EC                     l883:
 13166     09EC  0008               	return
 13167     09ED                     __end_of_setZAxisRange:
 13168                           
 13169                           	psect	text3
 13170     0A97                     __ptext3:	
 13171 ;; *************** function _setXYAxisRange *****************
 13172 ;; Defined at:
 13173 ;;		line 1014 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  xyAxisRange     1    wreg     unsigned char 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  xyAxisRange     1   19[BANK0 ] unsigned char 
 13178 ;;  mode            2   20[BANK0 ] unsigned short 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      char 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13191 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;Total ram usage:        5 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 16
 13195 ;; This function calls:
 13196 ;;		_bitWrite8
 13197 ;;		_getError
 13198 ;;		_readRegister
 13199 ;;		_writeRegister
 13200 ;; This function is called by:
 13201 ;;		_begin
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205     0A97                     _setXYAxisRange:	
 13206                           ;psect for function _setXYAxisRange
 13207                           
 13208                           
 13209                           ;incstack = 0
 13210 ;; hardware stack exceeded
 13211                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13212                           ;setXYAxisRange@xyAxisRange stored from wreg
 13213     0A97  0140               	movlb	0	; select bank0
 13214     0A98  00B3               	movwf	setXYAxisRange@xyAxisRange
 13215     0A99                     l13434:
 13216     0A99                     l13436:
 13217                           
 13218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13219     0A99  3003               	movlw	3
 13220     0A9A  3191  219F  318A   	fcall	_readRegister
 13221     0A9D  0140               	movlb	0	; select bank0
 13222     0A9E  00B1               	movwf	??_setXYAxisRange
 13223     0A9F  01B2               	clrf	??_setXYAxisRange+1
 13224     0AA0  0831               	movf	??_setXYAxisRange,w
 13225     0AA1  00B4               	movwf	setXYAxisRange@mode
 13226     0AA2  0832               	movf	??_setXYAxisRange+1,w
 13227     0AA3  00B5               	movwf	setXYAxisRange@mode+1
 13228     0AA4                     l13438:
 13229                           
 13230                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:     if (xyAxisRa
      +                          nge == 0X0)
 13231     0AA4  0833               	movf	setXYAxisRange@xyAxisRange,w
 13232     0AA5  1D03               	btfss	3,2
 13233     0AA6  2AA8               	goto	u10701
 13234     0AA7  2AA9               	goto	u10700
 13235     0AA8                     u10701:
 13236     0AA8  2AB8               	goto	l13442
 13237     0AA9                     u10700:
 13238     0AA9                     l13440:
 13239                           
 13240                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1020:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:         bitWrite8(&mode, 1,
      +                           0);
 13241     0AA9  01F1               	clrf	bitWrite8@position
 13242     0AAA  0AF1               	incf	bitWrite8@position,f
 13243     0AAB  01F2               	clrf	bitWrite8@value
 13244     0AAC  3034               	movlw	(low (setXYAxisRange@mode| 0))& (0+255)
 13245     0AAD  3193  2334  318A   	fcall	_bitWrite8
 13246                           
 13247                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13248     0AB0  0140               	movlb	0	; select bank0
 13249     0AB1  0834               	movf	setXYAxisRange@mode,w
 13250     0AB2  00A6               	movwf	writeRegister@data
 13251     0AB3  3003               	movlw	3
 13252     0AB4  3191  2170  318A   	fcall	_writeRegister
 13253                           
 13254                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:     } else if (x
      +                          yAxisRange == 0X1)
 13255     0AB7  2ACC               	goto	l875
 13256     0AB8                     l13442:
 13257     0AB8  0333               	decf	setXYAxisRange@xyAxisRange,w
 13258     0AB9  1D03               	btfss	3,2
 13259     0ABA  2ABC               	goto	u10711
 13260     0ABB  2ABD               	goto	u10710
 13261     0ABC                     u10711:
 13262     0ABC  2ACC               	goto	l875
 13263     0ABD                     u10710:
 13264     0ABD                     l13444:
 13265                           
 13266                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1026:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1027:         bitWrite8(&mode, 1,
      +                           1);
 13267     0ABD  01F1               	clrf	bitWrite8@position
 13268     0ABE  0AF1               	incf	bitWrite8@position,f
 13269     0ABF  01F2               	clrf	bitWrite8@value
 13270     0AC0  0AF2               	incf	bitWrite8@value,f
 13271     0AC1  3034               	movlw	(low (setXYAxisRange@mode| 0))& (0+255)
 13272     0AC2  3193  2334  318A   	fcall	_bitWrite8
 13273                           
 13274                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13275     0AC5  0140               	movlb	0	; select bank0
 13276     0AC6  0834               	movf	setXYAxisRange@mode,w
 13277     0AC7  00A6               	movwf	writeRegister@data
 13278     0AC8  3003               	movlw	3
 13279     0AC9  3191  2170  318A   	fcall	_writeRegister
 13280     0ACC                     l875:
 13281                           
 13282                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1031:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13283     0ACC  318A  22D0  318A   	fcall	_getError
 13284     0ACF                     l877:
 13285     0ACF  0008               	return
 13286     0AD0                     __end_of_setXYAxisRange:
 13287                           
 13288                           	psect	text4
 13289     097F                     __ptext4:	
 13290 ;; *************** function _setTemperatureEn *****************
 13291 ;; Defined at:
 13292 ;;		line 1140 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  temperatureE    1    wreg     _Bool 
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;  temperatureE    1   19[BANK0 ] _Bool 
 13297 ;;  mode            2   20[BANK0 ] unsigned short 
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  1    wreg      char 
 13300 ;; Registers used:
 13301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13308 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13310 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13311 ;;Total ram usage:        5 bytes
 13312 ;; Hardware stack levels used: 1
 13313 ;; Hardware stack levels required when called: 16
 13314 ;; This function calls:
 13315 ;;		_bitWrite8
 13316 ;;		_getError
 13317 ;;		_readRegister
 13318 ;;		_writeRegister
 13319 ;; This function is called by:
 13320 ;;		_begin
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324     097F                     _setTemperatureEn:	
 13325                           ;psect for function _setTemperatureEn
 13326                           
 13327                           
 13328                           ;incstack = 0
 13329 ;; hardware stack exceeded
 13330                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13331                           ;setTemperatureEn@temperatureEnable stored from wreg
 13332     097F  0140               	movlb	0	; select bank0
 13333     0980  00B3               	movwf	setTemperatureEn@temperatureEnable
 13334     0981                     l13398:
 13335     0981                     l13400:
 13336                           
 13337                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1142:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13338     0981  3007               	movlw	7
 13339     0982  3191  219F  3189   	fcall	_readRegister
 13340     0985  0140               	movlb	0	; select bank0
 13341     0986  00B1               	movwf	??_setTemperatureEn
 13342     0987  01B2               	clrf	??_setTemperatureEn+1
 13343     0988  0831               	movf	??_setTemperatureEn,w
 13344     0989  00B4               	movwf	setTemperatureEn@mode
 13345     098A  0832               	movf	??_setTemperatureEn+1,w
 13346     098B  00B5               	movwf	setTemperatureEn@mode+1
 13347     098C                     l13402:
 13348                           
 13349                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:     if (temperat
      +                          ureEnable == 0)
 13350     098C  0833               	movf	setTemperatureEn@temperatureEnable,w
 13351     098D  1D03               	btfss	3,2
 13352     098E  2990               	goto	u10641
 13353     098F  2991               	goto	u10640
 13354     0990                     u10641:
 13355     0990  299F               	goto	l13406
 13356     0991                     u10640:
 13357     0991                     l13404:
 13358                           
 13359                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1146:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:         bitWrite8(&mode, 0,
      +                           0);
 13360     0991  01F1               	clrf	bitWrite8@position
 13361     0992  01F2               	clrf	bitWrite8@value
 13362     0993  3034               	movlw	(low (setTemperatureEn@mode| 0))& (0+255)
 13363     0994  3193  2334  3189   	fcall	_bitWrite8
 13364                           
 13365                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13366     0997  0140               	movlb	0	; select bank0
 13367     0998  0834               	movf	setTemperatureEn@mode,w
 13368     0999  00A6               	movwf	writeRegister@data
 13369     099A  3007               	movlw	7
 13370     099B  3191  2170  3189   	fcall	_writeRegister
 13371                           
 13372                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1151:     } else if (t
      +                          emperatureEnable == 1)
 13373     099E  29B2               	goto	l899
 13374     099F                     l13406:
 13375     099F  0333               	decf	setTemperatureEn@temperatureEnable,w
 13376     09A0  1D03               	btfss	3,2
 13377     09A1  29A3               	goto	u10651
 13378     09A2  29A4               	goto	u10650
 13379     09A3                     u10651:
 13380     09A3  29B2               	goto	l899
 13381     09A4                     u10650:
 13382     09A4                     l13408:
 13383                           
 13384                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1152:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1153:         bitWrite8(&mode, 0,
      +                           1);
 13385     09A4  01F1               	clrf	bitWrite8@position
 13386     09A5  01F2               	clrf	bitWrite8@value
 13387     09A6  0AF2               	incf	bitWrite8@value,f
 13388     09A7  3034               	movlw	(low (setTemperatureEn@mode| 0))& (0+255)
 13389     09A8  3193  2334  3189   	fcall	_bitWrite8
 13390                           
 13391                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1154:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13392     09AB  0140               	movlb	0	; select bank0
 13393     09AC  0834               	movf	setTemperatureEn@mode,w
 13394     09AD  00A6               	movwf	writeRegister@data
 13395     09AE  3007               	movlw	7
 13396     09AF  3191  2170  3189   	fcall	_writeRegister
 13397     09B2                     l899:
 13398                           
 13399                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1157:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13400     09B2  318A  22D0  3189   	fcall	_getError
 13401     09B5                     l901:
 13402     09B5  0008               	return
 13403     09B6                     __end_of_setTemperatureEn:
 13404                           
 13405                           	psect	text5
 13406     0757                     __ptext5:	
 13407 ;; *************** function _setOperatingMode *****************
 13408 ;; Defined at:
 13409 ;;		line 533 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  opMode          1    wreg     unsigned char 
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;  opMode          1   19[BANK0 ] unsigned char 
 13414 ;;  mode            2   20[BANK0 ] unsigned short 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      char 
 13417 ;; Registers used:
 13418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;Total ram usage:        5 bytes
 13429 ;; Hardware stack levels used: 1
 13430 ;; Hardware stack levels required when called: 16
 13431 ;; This function calls:
 13432 ;;		_bitWrite8
 13433 ;;		_getError
 13434 ;;		_readRegister
 13435 ;;		_writeRegister
 13436 ;; This function is called by:
 13437 ;;		_begin
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441     0757                     _setOperatingMode:	
 13442                           ;psect for function _setOperatingMode
 13443                           
 13444                           
 13445                           ;incstack = 0
 13446 ;; hardware stack exceeded
 13447                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13448                           ;setOperatingMode@opMode stored from wreg
 13449     0757  0140               	movlb	0	; select bank0
 13450     0758  00B3               	movwf	setOperatingMode@opMode
 13451     0759                     l13412:
 13452     0759                     l13414:
 13453                           
 13454                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 535:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13455     0759  3001               	movlw	1
 13456     075A  3191  219F  3187   	fcall	_readRegister
 13457     075D  0140               	movlb	0	; select bank0
 13458     075E  00B1               	movwf	??_setOperatingMode
 13459     075F  01B2               	clrf	??_setOperatingMode+1
 13460     0760  0831               	movf	??_setOperatingMode,w
 13461     0761  00B4               	movwf	setOperatingMode@mode
 13462     0762  0832               	movf	??_setOperatingMode+1,w
 13463     0763  00B5               	movwf	setOperatingMode@mode+1
 13464     0764                     l13416:
 13465                           
 13466                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:     if (opMode ==
      +                           0)
 13467     0764  0833               	movf	setOperatingMode@opMode,w
 13468     0765  1D03               	btfss	3,2
 13469     0766  2F68               	goto	u10661
 13470     0767  2F69               	goto	u10660
 13471     0768                     u10661:
 13472     0768  2F7E               	goto	l13420
 13473     0769                     u10660:
 13474     0769                     l13418:
 13475                           
 13476                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 539:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         bitWrite8(&mode, 0, 0
      +                          );
 13477     0769  01F1               	clrf	bitWrite8@position
 13478     076A  01F2               	clrf	bitWrite8@value
 13479     076B  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13480     076C  3193  2334  3187   	fcall	_bitWrite8
 13481                           
 13482                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:         bitWrite8
      +                          (&mode, 1, 0);
 13483     076F  01F1               	clrf	bitWrite8@position
 13484     0770  0AF1               	incf	bitWrite8@position,f
 13485     0771  01F2               	clrf	bitWrite8@value
 13486     0772  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13487     0773  3193  2334  3187   	fcall	_bitWrite8
 13488                           
 13489                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13490     0776  0140               	movlb	0	; select bank0
 13491     0777  0834               	movf	setOperatingMode@mode,w
 13492     0778  00A6               	movwf	writeRegister@data
 13493     0779  3001               	movlw	1
 13494     077A  3191  2170  3187   	fcall	_writeRegister
 13495                           
 13496                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:     } else if (op
      +                          Mode == 0X1)
 13497     077D  2FD1               	goto	l765
 13498     077E                     l13420:
 13499     077E  0333               	decf	setOperatingMode@opMode,w
 13500     077F  1D03               	btfss	3,2
 13501     0780  2F82               	goto	u10671
 13502     0781  2F83               	goto	u10670
 13503     0782                     u10671:
 13504     0782  2F99               	goto	l13424
 13505     0783                     u10670:
 13506     0783                     l13422:
 13507                           
 13508                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         bitWrite8(&mode, 0, 1
      +                          );
 13509     0783  01F1               	clrf	bitWrite8@position
 13510     0784  01F2               	clrf	bitWrite8@value
 13511     0785  0AF2               	incf	bitWrite8@value,f
 13512     0786  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13513     0787  3193  2334  3187   	fcall	_bitWrite8
 13514                           
 13515                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:         bitWrite8
      +                          (&mode, 1, 0);
 13516     078A  01F1               	clrf	bitWrite8@position
 13517     078B  0AF1               	incf	bitWrite8@position,f
 13518     078C  01F2               	clrf	bitWrite8@value
 13519     078D  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13520     078E  3193  2334  3187   	fcall	_bitWrite8
 13521                           
 13522                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13523     0791  0140               	movlb	0	; select bank0
 13524     0792  0834               	movf	setOperatingMode@mode,w
 13525     0793  00A6               	movwf	writeRegister@data
 13526     0794  3001               	movlw	1
 13527     0795  3191  2170  3187   	fcall	_writeRegister
 13528                           
 13529                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:     } else if (op
      +                          Mode == 0X2)
 13530     0798  2FD1               	goto	l765
 13531     0799                     l13424:
 13532     0799  3002               	movlw	2
 13533     079A  0633               	xorwf	setOperatingMode@opMode,w
 13534     079B  1D03               	btfss	3,2
 13535     079C  2F9E               	goto	u10681
 13536     079D  2F9F               	goto	u10680
 13537     079E                     u10681:
 13538     079E  2FB5               	goto	l13428
 13539     079F                     u10680:
 13540     079F                     l13426:
 13541                           
 13542                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:         bitWrite8(&mode, 0, 0
      +                          );
 13543     079F  01F1               	clrf	bitWrite8@position
 13544     07A0  01F2               	clrf	bitWrite8@value
 13545     07A1  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13546     07A2  3193  2334  3187   	fcall	_bitWrite8
 13547                           
 13548                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:         bitWrite8
      +                          (&mode, 1, 1);
 13549     07A5  01F1               	clrf	bitWrite8@position
 13550     07A6  0AF1               	incf	bitWrite8@position,f
 13551     07A7  01F2               	clrf	bitWrite8@value
 13552     07A8  0AF2               	incf	bitWrite8@value,f
 13553     07A9  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13554     07AA  3193  2334  3187   	fcall	_bitWrite8
 13555                           
 13556                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13557     07AD  0140               	movlb	0	; select bank0
 13558     07AE  0834               	movf	setOperatingMode@mode,w
 13559     07AF  00A6               	movwf	writeRegister@data
 13560     07B0  3001               	movlw	1
 13561     07B1  3191  2170  3187   	fcall	_writeRegister
 13562                           
 13563                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     } else if (op
      +                          Mode == 0X3)
 13564     07B4  2FD1               	goto	l765
 13565     07B5                     l13428:
 13566     07B5  3003               	movlw	3
 13567     07B6  0633               	xorwf	setOperatingMode@opMode,w
 13568     07B7  1D03               	btfss	3,2
 13569     07B8  2FBA               	goto	u10691
 13570     07B9  2FBB               	goto	u10690
 13571     07BA                     u10691:
 13572     07BA  2FD1               	goto	l765
 13573     07BB                     u10690:
 13574     07BB                     l13430:
 13575                           
 13576                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 558:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 559:         bitWrite8(&mode, 0, 1
      +                          );
 13577     07BB  01F1               	clrf	bitWrite8@position
 13578     07BC  01F2               	clrf	bitWrite8@value
 13579     07BD  0AF2               	incf	bitWrite8@value,f
 13580     07BE  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13581     07BF  3193  2334  3187   	fcall	_bitWrite8
 13582                           
 13583                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:         bitWrite8
      +                          (&mode, 1, 1);
 13584     07C2  01F1               	clrf	bitWrite8@position
 13585     07C3  0AF1               	incf	bitWrite8@position,f
 13586     07C4  01F2               	clrf	bitWrite8@value
 13587     07C5  0AF2               	incf	bitWrite8@value,f
 13588     07C6  3034               	movlw	(low (setOperatingMode@mode| 0))& (0+255)
 13589     07C7  3193  2334  3187   	fcall	_bitWrite8
 13590                           
 13591                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13592     07CA  0140               	movlb	0	; select bank0
 13593     07CB  0834               	movf	setOperatingMode@mode,w
 13594     07CC  00A6               	movwf	writeRegister@data
 13595     07CD  3001               	movlw	1
 13596     07CE  3191  2170  3187   	fcall	_writeRegister
 13597     07D1                     l765:
 13598                           
 13599                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 564:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13600     07D1  318A  22D0  3187   	fcall	_getError
 13601     07D4                     l771:
 13602     07D4  0008               	return
 13603     07D5                     __end_of_setOperatingMode:
 13604                           
 13605                           	psect	text6
 13606     00A9                     __ptext6:	
 13607 ;; *************** function _setMagneticChannel *****************
 13608 ;; Defined at:
 13609 ;;		line 585 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  channelMode     1    wreg     unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  channelMode     1   19[BANK0 ] unsigned char 
 13614 ;;  mode            2   20[BANK0 ] unsigned short 
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      char 
 13617 ;; Registers used:
 13618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13627 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;Total ram usage:        5 bytes
 13629 ;; Hardware stack levels used: 1
 13630 ;; Hardware stack levels required when called: 16
 13631 ;; This function calls:
 13632 ;;		_bitWrite8
 13633 ;;		_getError
 13634 ;;		_readRegister
 13635 ;;		_writeRegister
 13636 ;; This function is called by:
 13637 ;;		_begin
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641     00A9                     _setMagneticChannel:	
 13642                           ;psect for function _setMagneticChannel
 13643                           
 13644                           
 13645                           ;incstack = 0
 13646 ;; hardware stack exceeded
 13647                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13648                           ;setMagneticChannel@channelMode stored from wreg
 13649     00A9  0140               	movlb	0	; select bank0
 13650     00AA  00B3               	movwf	setMagneticChannel@channelMode
 13651     00AB                     l13344:
 13652     00AB                     l13346:
 13653                           
 13654                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13655     00AB  3002               	movlw	2
 13656     00AC  3191  219F  3180   	fcall	_readRegister
 13657     00AF  0140               	movlb	0	; select bank0
 13658     00B0  00B1               	movwf	??_setMagneticChannel
 13659     00B1  01B2               	clrf	??_setMagneticChannel+1
 13660     00B2  0831               	movf	??_setMagneticChannel,w
 13661     00B3  00B4               	movwf	setMagneticChannel@mode
 13662     00B4  0832               	movf	??_setMagneticChannel+1,w
 13663     00B5  00B5               	movwf	setMagneticChannel@mode+1
 13664     00B6                     l13348:
 13665                           
 13666                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:     if (channelMo
      +                          de == 0X0)
 13667     00B6  0833               	movf	setMagneticChannel@channelMode,w
 13668     00B7  1D03               	btfss	3,2
 13669     00B8  28BA               	goto	u10521
 13670     00B9  28BB               	goto	u10520
 13671     00BA                     u10521:
 13672     00BA  28DF               	goto	l13352
 13673     00BB                     u10520:
 13674     00BB                     l13350:
 13675                           
 13676                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 591:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:         bitWrite8(&mode, 4, 0
      +                          );
 13677     00BB  3004               	movlw	4
 13678     00BC  00F1               	movwf	bitWrite8@position
 13679     00BD  01F2               	clrf	bitWrite8@value
 13680     00BE  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13681     00BF  3193  2334  3180   	fcall	_bitWrite8
 13682                           
 13683                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 595:         bitWrite8
      +                          (&mode, 5, 0);
 13684     00C2  3005               	movlw	5
 13685     00C3  00F1               	movwf	bitWrite8@position
 13686     00C4  01F2               	clrf	bitWrite8@value
 13687     00C5  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13688     00C6  3193  2334  3180   	fcall	_bitWrite8
 13689                           
 13690                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:         bitWrite8
      +                          (&mode, 6, 0);
 13691     00C9  3006               	movlw	6
 13692     00CA  00F1               	movwf	bitWrite8@position
 13693     00CB  01F2               	clrf	bitWrite8@value
 13694     00CC  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13695     00CD  3193  2334  3180   	fcall	_bitWrite8
 13696                           
 13697                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite8
      +                          (&mode, 7, 0);
 13698     00D0  3007               	movlw	7
 13699     00D1  00F1               	movwf	bitWrite8@position
 13700     00D2  01F2               	clrf	bitWrite8@value
 13701     00D3  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13702     00D4  3193  2334  3180   	fcall	_bitWrite8
 13703                           
 13704                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13705     00D7  0140               	movlb	0	; select bank0
 13706     00D8  0834               	movf	setMagneticChannel@mode,w
 13707     00D9  00A6               	movwf	writeRegister@data
 13708     00DA  3002               	movlw	2
 13709     00DB  3191  2170  3180   	fcall	_writeRegister
 13710                           
 13711                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:     } else if (ch
      +                          annelMode == 0X1)
 13712     00DE  2AC0               	goto	l775
 13713     00DF                     l13352:
 13714     00DF  0333               	decf	setMagneticChannel@channelMode,w
 13715     00E0  1D03               	btfss	3,2
 13716     00E1  28E3               	goto	u10531
 13717     00E2  28E4               	goto	u10530
 13718     00E3                     u10531:
 13719     00E3  2909               	goto	l13356
 13720     00E4                     u10530:
 13721     00E4                     l13354:
 13722                           
 13723                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite8(&mode, 4, 1
      +                          );
 13724     00E4  3004               	movlw	4
 13725     00E5  00F1               	movwf	bitWrite8@position
 13726     00E6  01F2               	clrf	bitWrite8@value
 13727     00E7  0AF2               	incf	bitWrite8@value,f
 13728     00E8  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13729     00E9  3193  2334  3180   	fcall	_bitWrite8
 13730                           
 13731                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite8
      +                          (&mode, 5, 0);
 13732     00EC  3005               	movlw	5
 13733     00ED  00F1               	movwf	bitWrite8@position
 13734     00EE  01F2               	clrf	bitWrite8@value
 13735     00EF  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13736     00F0  3193  2334  3180   	fcall	_bitWrite8
 13737                           
 13738                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         bitWrite8
      +                          (&mode, 6, 0);
 13739     00F3  3006               	movlw	6
 13740     00F4  00F1               	movwf	bitWrite8@position
 13741     00F5  01F2               	clrf	bitWrite8@value
 13742     00F6  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13743     00F7  3193  2334  3180   	fcall	_bitWrite8
 13744                           
 13745                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite8
      +                          (&mode, 7, 0);
 13746     00FA  3007               	movlw	7
 13747     00FB  00F1               	movwf	bitWrite8@position
 13748     00FC  01F2               	clrf	bitWrite8@value
 13749     00FD  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13750     00FE  3193  2334  3180   	fcall	_bitWrite8
 13751                           
 13752                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13753     0101  0140               	movlb	0	; select bank0
 13754     0102  0834               	movf	setMagneticChannel@mode,w
 13755     0103  00A6               	movwf	writeRegister@data
 13756     0104  3002               	movlw	2
 13757     0105  3191  2170  3180   	fcall	_writeRegister
 13758                           
 13759                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:     } else if (ch
      +                          annelMode == 0X2)
 13760     0108  2AC0               	goto	l775
 13761     0109                     l13356:
 13762     0109  3002               	movlw	2
 13763     010A  0633               	xorwf	setMagneticChannel@channelMode,w
 13764     010B  1D03               	btfss	3,2
 13765     010C  290E               	goto	u10541
 13766     010D  290F               	goto	u10540
 13767     010E                     u10541:
 13768     010E  2934               	goto	l13360
 13769     010F                     u10540:
 13770     010F                     l13358:
 13771                           
 13772                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite8(&mode, 4, 0
      +                          );
 13773     010F  3004               	movlw	4
 13774     0110  00F1               	movwf	bitWrite8@position
 13775     0111  01F2               	clrf	bitWrite8@value
 13776     0112  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13777     0113  3193  2334  3180   	fcall	_bitWrite8
 13778                           
 13779                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite8
      +                          (&mode, 5, 1);
 13780     0116  3005               	movlw	5
 13781     0117  00F1               	movwf	bitWrite8@position
 13782     0118  01F2               	clrf	bitWrite8@value
 13783     0119  0AF2               	incf	bitWrite8@value,f
 13784     011A  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13785     011B  3193  2334  3180   	fcall	_bitWrite8
 13786                           
 13787                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         bitWrite8
      +                          (&mode, 6, 0);
 13788     011E  3006               	movlw	6
 13789     011F  00F1               	movwf	bitWrite8@position
 13790     0120  01F2               	clrf	bitWrite8@value
 13791     0121  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13792     0122  3193  2334  3180   	fcall	_bitWrite8
 13793                           
 13794                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite8
      +                          (&mode, 7, 0);
 13795     0125  3007               	movlw	7
 13796     0126  00F1               	movwf	bitWrite8@position
 13797     0127  01F2               	clrf	bitWrite8@value
 13798     0128  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13799     0129  3193  2334  3180   	fcall	_bitWrite8
 13800                           
 13801                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13802     012C  0140               	movlb	0	; select bank0
 13803     012D  0834               	movf	setMagneticChannel@mode,w
 13804     012E  00A6               	movwf	writeRegister@data
 13805     012F  3002               	movlw	2
 13806     0130  3191  2170  3180   	fcall	_writeRegister
 13807                           
 13808                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:     } else if (ch
      +                          annelMode == 0X3)
 13809     0133  2AC0               	goto	l775
 13810     0134                     l13360:
 13811     0134  3003               	movlw	3
 13812     0135  0633               	xorwf	setMagneticChannel@channelMode,w
 13813     0136  1D03               	btfss	3,2
 13814     0137  2939               	goto	u10551
 13815     0138  293A               	goto	u10550
 13816     0139                     u10551:
 13817     0139  2960               	goto	l13364
 13818     013A                     u10550:
 13819     013A                     l13362:
 13820                           
 13821                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite8(&mode, 4, 1
      +                          );
 13822     013A  3004               	movlw	4
 13823     013B  00F1               	movwf	bitWrite8@position
 13824     013C  01F2               	clrf	bitWrite8@value
 13825     013D  0AF2               	incf	bitWrite8@value,f
 13826     013E  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13827     013F  3193  2334  3180   	fcall	_bitWrite8
 13828                           
 13829                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite8
      +                          (&mode, 5, 1);
 13830     0142  3005               	movlw	5
 13831     0143  00F1               	movwf	bitWrite8@position
 13832     0144  01F2               	clrf	bitWrite8@value
 13833     0145  0AF2               	incf	bitWrite8@value,f
 13834     0146  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13835     0147  3193  2334  3180   	fcall	_bitWrite8
 13836                           
 13837                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         bitWrite8
      +                          (&mode, 6, 0);
 13838     014A  3006               	movlw	6
 13839     014B  00F1               	movwf	bitWrite8@position
 13840     014C  01F2               	clrf	bitWrite8@value
 13841     014D  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13842     014E  3193  2334  3180   	fcall	_bitWrite8
 13843                           
 13844                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite8
      +                          (&mode, 7, 0);
 13845     0151  3007               	movlw	7
 13846     0152  00F1               	movwf	bitWrite8@position
 13847     0153  01F2               	clrf	bitWrite8@value
 13848     0154  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13849     0155  3193  2334  3180   	fcall	_bitWrite8
 13850                           
 13851                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13852     0158  0140               	movlb	0	; select bank0
 13853     0159  0834               	movf	setMagneticChannel@mode,w
 13854     015A  00A6               	movwf	writeRegister@data
 13855     015B  3002               	movlw	2
 13856     015C  3191  2170  3180   	fcall	_writeRegister
 13857                           
 13858                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:     } else if (ch
      +                          annelMode == 0X4)
 13859     015F  2AC0               	goto	l775
 13860     0160                     l13364:
 13861     0160  3004               	movlw	4
 13862     0161  0633               	xorwf	setMagneticChannel@channelMode,w
 13863     0162  1D03               	btfss	3,2
 13864     0163  2965               	goto	u10561
 13865     0164  2966               	goto	u10560
 13866     0165                     u10561:
 13867     0165  298B               	goto	l13368
 13868     0166                     u10560:
 13869     0166                     l13366:
 13870                           
 13871                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite8(&mode, 4, 0
      +                          );
 13872     0166  3004               	movlw	4
 13873     0167  00F1               	movwf	bitWrite8@position
 13874     0168  01F2               	clrf	bitWrite8@value
 13875     0169  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13876     016A  3193  2334  3180   	fcall	_bitWrite8
 13877                           
 13878                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite8
      +                          (&mode, 5, 0);
 13879     016D  3005               	movlw	5
 13880     016E  00F1               	movwf	bitWrite8@position
 13881     016F  01F2               	clrf	bitWrite8@value
 13882     0170  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13883     0171  3193  2334  3180   	fcall	_bitWrite8
 13884                           
 13885                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         bitWrite8
      +                          (&mode, 6, 1);
 13886     0174  3006               	movlw	6
 13887     0175  00F1               	movwf	bitWrite8@position
 13888     0176  01F2               	clrf	bitWrite8@value
 13889     0177  0AF2               	incf	bitWrite8@value,f
 13890     0178  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13891     0179  3193  2334  3180   	fcall	_bitWrite8
 13892                           
 13893                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite8
      +                          (&mode, 7, 0);
 13894     017C  3007               	movlw	7
 13895     017D  00F1               	movwf	bitWrite8@position
 13896     017E  01F2               	clrf	bitWrite8@value
 13897     017F  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13898     0180  3193  2334  3180   	fcall	_bitWrite8
 13899                           
 13900                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13901     0183  0140               	movlb	0	; select bank0
 13902     0184  0834               	movf	setMagneticChannel@mode,w
 13903     0185  00A6               	movwf	writeRegister@data
 13904     0186  3002               	movlw	2
 13905     0187  3191  2170  3180   	fcall	_writeRegister
 13906                           
 13907                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:     } else if (ch
      +                          annelMode == 0X5)
 13908     018A  2AC0               	goto	l775
 13909     018B                     l13368:
 13910     018B  3005               	movlw	5
 13911     018C  0633               	xorwf	setMagneticChannel@channelMode,w
 13912     018D  1D03               	btfss	3,2
 13913     018E  2990               	goto	u10571
 13914     018F  2991               	goto	u10570
 13915     0190                     u10571:
 13916     0190  29B7               	goto	l13372
 13917     0191                     u10570:
 13918     0191                     l13370:
 13919                           
 13920                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite8(&mode, 4, 1
      +                          );
 13921     0191  3004               	movlw	4
 13922     0192  00F1               	movwf	bitWrite8@position
 13923     0193  01F2               	clrf	bitWrite8@value
 13924     0194  0AF2               	incf	bitWrite8@value,f
 13925     0195  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13926     0196  3193  2334  3180   	fcall	_bitWrite8
 13927                           
 13928                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite8
      +                          (&mode, 5, 0);
 13929     0199  3005               	movlw	5
 13930     019A  00F1               	movwf	bitWrite8@position
 13931     019B  01F2               	clrf	bitWrite8@value
 13932     019C  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13933     019D  3193  2334  3180   	fcall	_bitWrite8
 13934                           
 13935                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         bitWrite8
      +                          (&mode, 6, 1);
 13936     01A0  3006               	movlw	6
 13937     01A1  00F1               	movwf	bitWrite8@position
 13938     01A2  01F2               	clrf	bitWrite8@value
 13939     01A3  0AF2               	incf	bitWrite8@value,f
 13940     01A4  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13941     01A5  3193  2334  3180   	fcall	_bitWrite8
 13942                           
 13943                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite8
      +                          (&mode, 7, 0);
 13944     01A8  3007               	movlw	7
 13945     01A9  00F1               	movwf	bitWrite8@position
 13946     01AA  01F2               	clrf	bitWrite8@value
 13947     01AB  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13948     01AC  3193  2334  3180   	fcall	_bitWrite8
 13949                           
 13950                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13951     01AF  0140               	movlb	0	; select bank0
 13952     01B0  0834               	movf	setMagneticChannel@mode,w
 13953     01B1  00A6               	movwf	writeRegister@data
 13954     01B2  3002               	movlw	2
 13955     01B3  3191  2170  3180   	fcall	_writeRegister
 13956                           
 13957                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:     } else if (ch
      +                          annelMode == 0X6)
 13958     01B6  2AC0               	goto	l775
 13959     01B7                     l13372:
 13960     01B7  3006               	movlw	6
 13961     01B8  0633               	xorwf	setMagneticChannel@channelMode,w
 13962     01B9  1D03               	btfss	3,2
 13963     01BA  29BC               	goto	u10581
 13964     01BB  29BD               	goto	u10580
 13965     01BC                     u10581:
 13966     01BC  29E3               	goto	l13376
 13967     01BD                     u10580:
 13968     01BD                     l13374:
 13969                           
 13970                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite8(&mode, 4, 0
      +                          );
 13971     01BD  3004               	movlw	4
 13972     01BE  00F1               	movwf	bitWrite8@position
 13973     01BF  01F2               	clrf	bitWrite8@value
 13974     01C0  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13975     01C1  3193  2334  3180   	fcall	_bitWrite8
 13976                           
 13977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite8
      +                          (&mode, 5, 1);
 13978     01C4  3005               	movlw	5
 13979     01C5  00F1               	movwf	bitWrite8@position
 13980     01C6  01F2               	clrf	bitWrite8@value
 13981     01C7  0AF2               	incf	bitWrite8@value,f
 13982     01C8  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13983     01C9  3193  2334  3180   	fcall	_bitWrite8
 13984                           
 13985                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         bitWrite8
      +                          (&mode, 6, 1);
 13986     01CC  3006               	movlw	6
 13987     01CD  00F1               	movwf	bitWrite8@position
 13988     01CE  01F2               	clrf	bitWrite8@value
 13989     01CF  0AF2               	incf	bitWrite8@value,f
 13990     01D0  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13991     01D1  3193  2334  3180   	fcall	_bitWrite8
 13992                           
 13993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite8
      +                          (&mode, 7, 0);
 13994     01D4  3007               	movlw	7
 13995     01D5  00F1               	movwf	bitWrite8@position
 13996     01D6  01F2               	clrf	bitWrite8@value
 13997     01D7  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 13998     01D8  3193  2334  3180   	fcall	_bitWrite8
 13999                           
 14000                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14001     01DB  0140               	movlb	0	; select bank0
 14002     01DC  0834               	movf	setMagneticChannel@mode,w
 14003     01DD  00A6               	movwf	writeRegister@data
 14004     01DE  3002               	movlw	2
 14005     01DF  3191  2170  3180   	fcall	_writeRegister
 14006                           
 14007                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:     } else if (ch
      +                          annelMode == 0X7)
 14008     01E2  2AC0               	goto	l775
 14009     01E3                     l13376:
 14010     01E3  3007               	movlw	7
 14011     01E4  0633               	xorwf	setMagneticChannel@channelMode,w
 14012     01E5  1D03               	btfss	3,2
 14013     01E6  29E8               	goto	u10591
 14014     01E7  29E9               	goto	u10590
 14015     01E8                     u10591:
 14016     01E8  2A10               	goto	l13380
 14017     01E9                     u10590:
 14018     01E9                     l13378:
 14019                           
 14020                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite8(&mode, 4, 1
      +                          );
 14021     01E9  3004               	movlw	4
 14022     01EA  00F1               	movwf	bitWrite8@position
 14023     01EB  01F2               	clrf	bitWrite8@value
 14024     01EC  0AF2               	incf	bitWrite8@value,f
 14025     01ED  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14026     01EE  3193  2334  3180   	fcall	_bitWrite8
 14027                           
 14028                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite8
      +                          (&mode, 5, 1);
 14029     01F1  3005               	movlw	5
 14030     01F2  00F1               	movwf	bitWrite8@position
 14031     01F3  01F2               	clrf	bitWrite8@value
 14032     01F4  0AF2               	incf	bitWrite8@value,f
 14033     01F5  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14034     01F6  3193  2334  3180   	fcall	_bitWrite8
 14035                           
 14036                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         bitWrite8
      +                          (&mode, 6, 1);
 14037     01F9  3006               	movlw	6
 14038     01FA  00F1               	movwf	bitWrite8@position
 14039     01FB  01F2               	clrf	bitWrite8@value
 14040     01FC  0AF2               	incf	bitWrite8@value,f
 14041     01FD  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14042     01FE  3193  2334  3180   	fcall	_bitWrite8
 14043                           
 14044                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite8
      +                          (&mode, 7, 0);
 14045     0201  3007               	movlw	7
 14046     0202  00F1               	movwf	bitWrite8@position
 14047     0203  01F2               	clrf	bitWrite8@value
 14048     0204  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14049     0205  3193  2334  3180   	fcall	_bitWrite8
 14050                           
 14051                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14052     0208  0140               	movlb	0	; select bank0
 14053     0209  0834               	movf	setMagneticChannel@mode,w
 14054     020A  00A6               	movwf	writeRegister@data
 14055     020B  3002               	movlw	2
 14056     020C  3191  2170  3180   	fcall	_writeRegister
 14057                           
 14058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     } else if (ch
      +                          annelMode == 0X8)
 14059     020F  2AC0               	goto	l775
 14060     0210                     l13380:
 14061     0210  3008               	movlw	8
 14062     0211  0633               	xorwf	setMagneticChannel@channelMode,w
 14063     0212  1D03               	btfss	3,2
 14064     0213  2A15               	goto	u10601
 14065     0214  2A16               	goto	u10600
 14066     0215                     u10601:
 14067     0215  2A3B               	goto	l13384
 14068     0216                     u10600:
 14069     0216                     l13382:
 14070                           
 14071                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite8(&mode, 4, 0
      +                          );
 14072     0216  3004               	movlw	4
 14073     0217  00F1               	movwf	bitWrite8@position
 14074     0218  01F2               	clrf	bitWrite8@value
 14075     0219  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14076     021A  3193  2334  3180   	fcall	_bitWrite8
 14077                           
 14078                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         bitWrite8
      +                          (&mode, 5, 0);
 14079     021D  3005               	movlw	5
 14080     021E  00F1               	movwf	bitWrite8@position
 14081     021F  01F2               	clrf	bitWrite8@value
 14082     0220  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14083     0221  3193  2334  3180   	fcall	_bitWrite8
 14084                           
 14085                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:         bitWrite8
      +                          (&mode, 6, 0);
 14086     0224  3006               	movlw	6
 14087     0225  00F1               	movwf	bitWrite8@position
 14088     0226  01F2               	clrf	bitWrite8@value
 14089     0227  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14090     0228  3193  2334  3180   	fcall	_bitWrite8
 14091                           
 14092                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite8
      +                          (&mode, 7, 1);
 14093     022B  3007               	movlw	7
 14094     022C  00F1               	movwf	bitWrite8@position
 14095     022D  01F2               	clrf	bitWrite8@value
 14096     022E  0AF2               	incf	bitWrite8@value,f
 14097     022F  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14098     0230  3193  2334  3180   	fcall	_bitWrite8
 14099                           
 14100                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14101     0233  0140               	movlb	0	; select bank0
 14102     0234  0834               	movf	setMagneticChannel@mode,w
 14103     0235  00A6               	movwf	writeRegister@data
 14104     0236  3002               	movlw	2
 14105     0237  3191  2170  3180   	fcall	_writeRegister
 14106                           
 14107                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:     } else if (ch
      +                          annelMode == 0X9)
 14108     023A  2AC0               	goto	l775
 14109     023B                     l13384:
 14110     023B  3009               	movlw	9
 14111     023C  0633               	xorwf	setMagneticChannel@channelMode,w
 14112     023D  1D03               	btfss	3,2
 14113     023E  2A40               	goto	u10611
 14114     023F  2A41               	goto	u10610
 14115     0240                     u10611:
 14116     0240  2A67               	goto	l13388
 14117     0241                     u10610:
 14118     0241                     l13386:
 14119                           
 14120                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite8(&mode, 4, 1
      +                          );
 14121     0241  3004               	movlw	4
 14122     0242  00F1               	movwf	bitWrite8@position
 14123     0243  01F2               	clrf	bitWrite8@value
 14124     0244  0AF2               	incf	bitWrite8@value,f
 14125     0245  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14126     0246  3193  2334  3180   	fcall	_bitWrite8
 14127                           
 14128                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         bitWrite8
      +                          (&mode, 5, 0);
 14129     0249  3005               	movlw	5
 14130     024A  00F1               	movwf	bitWrite8@position
 14131     024B  01F2               	clrf	bitWrite8@value
 14132     024C  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14133     024D  3193  2334  3180   	fcall	_bitWrite8
 14134                           
 14135                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:         bitWrite8
      +                          (&mode, 6, 0);
 14136     0250  3006               	movlw	6
 14137     0251  00F1               	movwf	bitWrite8@position
 14138     0252  01F2               	clrf	bitWrite8@value
 14139     0253  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14140     0254  3193  2334  3180   	fcall	_bitWrite8
 14141                           
 14142                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite8
      +                          (&mode, 7, 1);
 14143     0257  3007               	movlw	7
 14144     0258  00F1               	movwf	bitWrite8@position
 14145     0259  01F2               	clrf	bitWrite8@value
 14146     025A  0AF2               	incf	bitWrite8@value,f
 14147     025B  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14148     025C  3193  2334  3180   	fcall	_bitWrite8
 14149                           
 14150                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14151     025F  0140               	movlb	0	; select bank0
 14152     0260  0834               	movf	setMagneticChannel@mode,w
 14153     0261  00A6               	movwf	writeRegister@data
 14154     0262  3002               	movlw	2
 14155     0263  3191  2170  3180   	fcall	_writeRegister
 14156                           
 14157                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:     } else if (ch
      +                          annelMode == 0XA)
 14158     0266  2AC0               	goto	l775
 14159     0267                     l13388:
 14160     0267  300A               	movlw	10
 14161     0268  0633               	xorwf	setMagneticChannel@channelMode,w
 14162     0269  1D03               	btfss	3,2
 14163     026A  2A6C               	goto	u10621
 14164     026B  2A6D               	goto	u10620
 14165     026C                     u10621:
 14166     026C  2A93               	goto	l13392
 14167     026D                     u10620:
 14168     026D                     l13390:
 14169                           
 14170                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite8(&mode, 4, 0
      +                          );
 14171     026D  3004               	movlw	4
 14172     026E  00F1               	movwf	bitWrite8@position
 14173     026F  01F2               	clrf	bitWrite8@value
 14174     0270  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14175     0271  3193  2334  3180   	fcall	_bitWrite8
 14176                           
 14177                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         bitWrite8
      +                          (&mode, 5, 1);
 14178     0274  3005               	movlw	5
 14179     0275  00F1               	movwf	bitWrite8@position
 14180     0276  01F2               	clrf	bitWrite8@value
 14181     0277  0AF2               	incf	bitWrite8@value,f
 14182     0278  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14183     0279  3193  2334  3180   	fcall	_bitWrite8
 14184                           
 14185                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:         bitWrite8
      +                          (&mode, 6, 0);
 14186     027C  3006               	movlw	6
 14187     027D  00F1               	movwf	bitWrite8@position
 14188     027E  01F2               	clrf	bitWrite8@value
 14189     027F  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14190     0280  3193  2334  3180   	fcall	_bitWrite8
 14191                           
 14192                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite8
      +                          (&mode, 7, 1);
 14193     0283  3007               	movlw	7
 14194     0284  00F1               	movwf	bitWrite8@position
 14195     0285  01F2               	clrf	bitWrite8@value
 14196     0286  0AF2               	incf	bitWrite8@value,f
 14197     0287  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14198     0288  3193  2334  3180   	fcall	_bitWrite8
 14199                           
 14200                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14201     028B  0140               	movlb	0	; select bank0
 14202     028C  0834               	movf	setMagneticChannel@mode,w
 14203     028D  00A6               	movwf	writeRegister@data
 14204     028E  3002               	movlw	2
 14205     028F  3191  2170  3180   	fcall	_writeRegister
 14206                           
 14207                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:     } else if (ch
      +                          annelMode == 0XB)
 14208     0292  2AC0               	goto	l775
 14209     0293                     l13392:
 14210     0293  300B               	movlw	11
 14211     0294  0633               	xorwf	setMagneticChannel@channelMode,w
 14212     0295  1D03               	btfss	3,2
 14213     0296  2A98               	goto	u10631
 14214     0297  2A99               	goto	u10630
 14215     0298                     u10631:
 14216     0298  2AC0               	goto	l791
 14217     0299                     u10630:
 14218     0299                     l13394:
 14219                           
 14220                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         bitWrite8(&mode, 4, 1
      +                          );
 14221     0299  3004               	movlw	4
 14222     029A  00F1               	movwf	bitWrite8@position
 14223     029B  01F2               	clrf	bitWrite8@value
 14224     029C  0AF2               	incf	bitWrite8@value,f
 14225     029D  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14226     029E  3193  2334  3180   	fcall	_bitWrite8
 14227                           
 14228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 676:         bitWrite8
      +                          (&mode, 5, 1);
 14229     02A1  3005               	movlw	5
 14230     02A2  00F1               	movwf	bitWrite8@position
 14231     02A3  01F2               	clrf	bitWrite8@value
 14232     02A4  0AF2               	incf	bitWrite8@value,f
 14233     02A5  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14234     02A6  3193  2334  3180   	fcall	_bitWrite8
 14235                           
 14236                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 677:         bitWrite8
      +                          (&mode, 6, 0);
 14237     02A9  3006               	movlw	6
 14238     02AA  00F1               	movwf	bitWrite8@position
 14239     02AB  01F2               	clrf	bitWrite8@value
 14240     02AC  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14241     02AD  3193  2334  3180   	fcall	_bitWrite8
 14242                           
 14243                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 678:         bitWrite8
      +                          (&mode, 7, 1);
 14244     02B0  3007               	movlw	7
 14245     02B1  00F1               	movwf	bitWrite8@position
 14246     02B2  01F2               	clrf	bitWrite8@value
 14247     02B3  0AF2               	incf	bitWrite8@value,f
 14248     02B4  3034               	movlw	(low (setMagneticChannel@mode| 0))& (0+255)
 14249     02B5  3193  2334  3180   	fcall	_bitWrite8
 14250                           
 14251                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 679:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14252     02B8  0140               	movlb	0	; select bank0
 14253     02B9  0834               	movf	setMagneticChannel@mode,w
 14254     02BA  00A6               	movwf	writeRegister@data
 14255     02BB  3002               	movlw	2
 14256     02BC  3191  2170  3180   	fcall	_writeRegister
 14257     02BF  2AC0               	goto	l775
 14258     02C0                     l791:
 14259     02C0                     l775:
 14260                           
 14261                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 682:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14262     02C0  318A  22D0  3180   	fcall	_getError
 14263     02C3                     l797:
 14264     02C3  0008               	return
 14265     02C4                     __end_of_setMagneticChannel:
 14266                           
 14267                           	psect	text7
 14268     1170                     __ptext7:	
 14269 ;; *************** function _writeRegister *****************
 14270 ;; Defined at:
 14271 ;;		line 187 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;  regAddress      1    wreg     unsigned char 
 14274 ;;  data            1    6[BANK0 ] unsigned char 
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      unsigned char 
 14279 ;; Registers used:
 14280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14286 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14290 ;;Total ram usage:        2 bytes
 14291 ;; Hardware stack levels used: 1
 14292 ;; Hardware stack levels required when called: 13
 14293 ;; This function calls:
 14294 ;;		_i2c_write1ByteRegister
 14295 ;; This function is called by:
 14296 ;;		_setOperatingMode
 14297 ;;		_setMagneticChannel
 14298 ;;		_setXYAxisRange
 14299 ;;		_setZAxisRange
 14300 ;;		_setTemperatureEn
 14301 ;;		_setupWakeUpAndSleep
 14302 ;;		_setCRCMode
 14303 ;;		_setMagTemp
 14304 ;;		_setConvAvg
 14305 ;;		_setIntThreshold
 14306 ;;		_setLowPower
 14307 ;;		_setGlitchFilter
 14308 ;;		_setTriggerMode
 14309 ;;		_setSleeptime
 14310 ;;		_setMagDir
 14311 ;;		_setMagnitudeGain
 14312 ;;		_setMagneticGain
 14313 ;;		_setMagneticOffset1
 14314 ;;		_setMagneticOffset2
 14315 ;;		_setAngleEn
 14316 ;;		_setXThreshold
 14317 ;;		_setYThreshold
 14318 ;;		_setZThreshold
 14319 ;;		_setTemperatureThreshold
 14320 ;;		_setInterruptResult
 14321 ;;		_setThresholdEn
 14322 ;;		_setIntPinState
 14323 ;;		_setInterruptMode
 14324 ;;		_setMaskInterrupt
 14325 ;;		_setI2CAddress
 14326 ;;		_setI2CAddressEN
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330     1170                     _writeRegister:	
 14331                           ;psect for function _writeRegister
 14332                           
 14333                           
 14334                           ;incstack = 0
 14335                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14336                           ;writeRegister@regAddress stored from wreg
 14337     1170  0140               	movlb	0	; select bank0
 14338     1171  00A7               	movwf	writeRegister@regAddress
 14339     1172                     l13180:
 14340                           
 14341                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 188:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14342     1172  0827               	movf	writeRegister@regAddress,w
 14343     1173  00A4               	movwf	i2c_write1ByteRegister@reg
 14344     1174  0826               	movf	writeRegister@data,w
 14345     1175  00A5               	movwf	i2c_write1ByteRegister@data
 14346     1176  3022               	movlw	34
 14347     1177  3188  2074  3191   	fcall	_i2c_write1ByteRegister
 14348     117A                     l690:
 14349     117A  0008               	return
 14350     117B                     __end_of_writeRegister:
 14351                           
 14352                           	psect	text8
 14353     0874                     __ptext8:	
 14354 ;; *************** function _i2c_write1ByteRegister *****************
 14355 ;; Defined at:
 14356 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14357 ;; Parameters:    Size  Location     Type
 14358 ;;  address         1    wreg     unsigned char 
 14359 ;;  reg             1    4[BANK0 ] unsigned char 
 14360 ;;  data            1    5[BANK0 ] unsigned char 
 14361 ;; Auto vars:     Size  Location     Type
 14362 ;;  address         1   11[COMMON] unsigned char 
 14363 ;; Return value:  Size  Location     Type
 14364 ;;                  1    wreg      void 
 14365 ;; Registers used:
 14366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14367 ;; Tracked objects:
 14368 ;;		On entry : 0/0
 14369 ;;		On exit  : 0/0
 14370 ;;		Unchanged: 0/0
 14371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14375 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14376 ;;Total ram usage:        3 bytes
 14377 ;; Hardware stack levels used: 1
 14378 ;; Hardware stack levels required when called: 12
 14379 ;; This function calls:
 14380 ;;		_I2C1_Close
 14381 ;;		_I2C1_MasterWrite
 14382 ;;		_I2C1_Open
 14383 ;;		_I2C1_SetAddressNackCallback
 14384 ;;		_I2C1_SetBuffer
 14385 ;;		_I2C1_SetDataCompleteCallback
 14386 ;; This function is called by:
 14387 ;;		_writeRegister
 14388 ;;		_BMA253_Initialize
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392     0874                     _i2c_write1ByteRegister:	
 14393                           ;psect for function _i2c_write1ByteRegister
 14394                           
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14398                           ;i2c_write1ByteRegister@address stored from wreg
 14399     0874  00FB               	movwf	i2c_write1ByteRegister@address
 14400     0875                     l13012:
 14401     0875                     l13014:	
 14402                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14403                           
 14404     0875  087B               	movf	i2c_write1ByteRegister@address,w
 14405     0876  3188  20DB  3188   	fcall	_I2C1_Open
 14406     0879  3A00               	xorlw	0
 14407     087A  1903               	skipnz
 14408     087B  287D               	goto	u10131
 14409     087C  287E               	goto	u10130
 14410     087D                     u10131:
 14411     087D  2875               	goto	l13014
 14412     087E                     u10130:
 14413     087E                     l13016:
 14414                           
 14415                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14416     087E  3074               	movlw	low _wr1RegCompleteHandler
 14417     087F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14418     0880  3012               	movlw	high _wr1RegCompleteHandler
 14419     0881  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14420     0882  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14421     0883  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14422     0884  3191  2144  3188   	fcall	_I2C1_SetDataCompleteCallback
 14423     0887                     l13018:
 14424                           
 14425                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14426     0887  3024               	movlw	low i2c_write1ByteRegister@reg
 14427     0888  00F1               	movwf	I2C1_SetBuffer@buffer
 14428     0889  3000               	movlw	high i2c_write1ByteRegister@reg
 14429     088A  00F2               	movwf	I2C1_SetBuffer@buffer+1
 14430     088B  3001               	movlw	1
 14431     088C  00F3               	movwf	I2C1_SetBuffer@bufferSize
 14432     088D  3000               	movlw	0
 14433     088E  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 14434     088F  3191  21E2  3188   	fcall	_I2C1_SetBuffer
 14435     0892                     l13020:
 14436                           
 14437                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14438     0892  3000               	movlw	0
 14439     0893  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14440     0894  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14441     0895  3000               	movlw	0
 14442     0896  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14443     0897  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14444     0898  3191  214F  3188   	fcall	_I2C1_SetAddressNackCallback
 14445     089B                     l13022:
 14446                           
 14447                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14448     089B  3190  204C  3188   	fcall	_I2C1_MasterWrite
 14449     089E                     l13024:	
 14450                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14451                           
 14452     089E  3193  23CE  3188   	fcall	_I2C1_Close
 14453     08A1  3A01               	xorlw	1
 14454     08A2  1903               	skipnz
 14455     08A3  28A5               	goto	u10141
 14456     08A4  28A6               	goto	u10140
 14457     08A5                     u10141:
 14458     08A5  289E               	goto	l13024
 14459     08A6                     u10140:
 14460     08A6                     l510:
 14461     08A6  0008               	return
 14462     08A7                     __end_of_i2c_write1ByteRegister:
 14463                           
 14464                           	psect	text9
 14465     0AD0                     __ptext9:	
 14466 ;; *************** function _getError *****************
 14467 ;; Defined at:
 14468 ;;		line 2317 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;		None
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;  statusReg       1   16[BANK0 ] unsigned char 
 14473 ;;  oscillatorEr    1   15[BANK0 ] unsigned char 
 14474 ;;  intPinError     1   14[BANK0 ] unsigned char 
 14475 ;;  otpCrcError     1   13[BANK0 ] unsigned char 
 14476 ;;  undervoltage    1   12[BANK0 ] unsigned char 
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  1    wreg      char 
 14479 ;; Registers used:
 14480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 0/0
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14487 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14489 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14490 ;;Total ram usage:        5 bytes
 14491 ;; Hardware stack levels used: 1
 14492 ;; Hardware stack levels required when called: 15
 14493 ;; This function calls:
 14494 ;;		_bitRead8
 14495 ;;		_getDeviceStatus
 14496 ;; This function is called by:
 14497 ;;		_begin
 14498 ;;		_setOperatingMode
 14499 ;;		_setMagneticChannel
 14500 ;;		_setXYAxisRange
 14501 ;;		_setZAxisRange
 14502 ;;		_setTemperatureEn
 14503 ;;		_setupWakeUpAndSleep
 14504 ;;		_readWakeUpAndSleepData
 14505 ;;		_setCRCMode
 14506 ;;		_setMagTemp
 14507 ;;		_setConvAvg
 14508 ;;		_setReadMode
 14509 ;;		_setIntThreshold
 14510 ;;		_setLowPower
 14511 ;;		_setGlitchFilter
 14512 ;;		_setTriggerMode
 14513 ;;		_setSleeptime
 14514 ;;		_setMagDir
 14515 ;;		_setMagnitudeGain
 14516 ;;		_setMagneticGain
 14517 ;;		_setMagneticOffset1
 14518 ;;		_setMagneticOffset2
 14519 ;;		_setAngleEn
 14520 ;;		_setXThreshold
 14521 ;;		_setYThreshold
 14522 ;;		_setZThreshold
 14523 ;;		_setTemperatureThreshold
 14524 ;;		_setInterruptResult
 14525 ;;		_setThresholdEn
 14526 ;;		_setIntPinState
 14527 ;;		_setInterruptMode
 14528 ;;		_setMaskInterrupt
 14529 ;;		_setI2CAddress
 14530 ;;		_setI2CAddressEN
 14531 ;;		_setOscillatorError
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535     0AD0                     _getError:	
 14536                           ;psect for function _getError
 14537                           
 14538     0AD0                     l13146:	
 14539                           ;incstack = 0
 14540 ;; hardware stack exceeded
 14541                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14542                           
 14543                           
 14544                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14545     0AD0  3190  20CE  318A   	fcall	_getDeviceStatus
 14546     0AD3  0140               	movlb	0	; select bank0
 14547     0AD4  00B0               	movwf	getError@statusReg
 14548     0AD5                     l13148:
 14549                           
 14550                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:     uint8_t unde
      +                          rvoltageError = bitRead8(&statusReg, 0);
 14551     0AD5  01F1               	clrf	bitRead8@position
 14552     0AD6  3030               	movlw	(low (getError@statusReg| 0))& (0+255)
 14553     0AD7  3193  23B7  318A   	fcall	_bitRead8
 14554     0ADA  0140               	movlb	0	; select bank0
 14555     0ADB  00AC               	movwf	getError@undervoltageError
 14556     0ADC                     l13150:
 14557                           
 14558                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2321:     uint8_t otpC
      +                          rcError = bitRead8(&statusReg, 1);
 14559     0ADC  01F1               	clrf	bitRead8@position
 14560     0ADD  0AF1               	incf	bitRead8@position,f
 14561     0ADE  3030               	movlw	(low (getError@statusReg| 0))& (0+255)
 14562     0ADF  3193  23B7  318A   	fcall	_bitRead8
 14563     0AE2  0140               	movlb	0	; select bank0
 14564     0AE3  00AD               	movwf	getError@otpCrcError
 14565     0AE4                     l13152:
 14566                           
 14567                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:     uint8_t intP
      +                          inError = bitRead8(&statusReg, 2);
 14568     0AE4  3002               	movlw	2
 14569     0AE5  00F1               	movwf	bitRead8@position
 14570     0AE6  3030               	movlw	(low (getError@statusReg| 0))& (0+255)
 14571     0AE7  3193  23B7  318A   	fcall	_bitRead8
 14572     0AEA  0140               	movlb	0	; select bank0
 14573     0AEB  00AE               	movwf	getError@intPinError
 14574     0AEC                     l13154:
 14575                           
 14576                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:     uint8_t osci
      +                          llatorError = bitRead8(&statusReg, 3);
 14577     0AEC  3003               	movlw	3
 14578     0AED  00F1               	movwf	bitRead8@position
 14579     0AEE  3030               	movlw	(low (getError@statusReg| 0))& (0+255)
 14580     0AEF  3193  23B7  318A   	fcall	_bitRead8
 14581     0AF2  0140               	movlb	0	; select bank0
 14582     0AF3  00AF               	movwf	getError@oscillatorError
 14583     0AF4                     l13156:
 14584                           
 14585                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2326:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14586     0AF4  082C               	movf	getError@undervoltageError,w
 14587     0AF5  1903               	btfsc	3,2
 14588     0AF6  2AF8               	goto	u10311
 14589     0AF7  2AF9               	goto	u10310
 14590     0AF8                     u10311:
 14591     0AF8  2B0A               	goto	l13170
 14592     0AF9                     u10310:
 14593     0AF9                     l13158:
 14594     0AF9  082D               	movf	getError@otpCrcError,w
 14595     0AFA  1903               	btfsc	3,2
 14596     0AFB  2AFD               	goto	u10321
 14597     0AFC  2AFE               	goto	u10320
 14598     0AFD                     u10321:
 14599     0AFD  2B0A               	goto	l13170
 14600     0AFE                     u10320:
 14601     0AFE                     l13160:
 14602     0AFE  082E               	movf	getError@intPinError,w
 14603     0AFF  1903               	btfsc	3,2
 14604     0B00  2B02               	goto	u10331
 14605     0B01  2B03               	goto	u10330
 14606     0B02                     u10331:
 14607     0B02  2B0A               	goto	l13170
 14608     0B03                     u10330:
 14609     0B03                     l13162:
 14610     0B03  082F               	movf	getError@oscillatorError,w
 14611     0B04  1903               	btfsc	3,2
 14612     0B05  2B07               	goto	u10341
 14613     0B06  2B08               	goto	u10340
 14614     0B07                     u10341:
 14615     0B07  2B0A               	goto	l13170
 14616     0B08                     u10340:
 14617     0B08                     l13164:
 14618                           
 14619                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2327:         return -
      +                          1;
 14620     0B08  30FF               	movlw	255
 14621     0B09  2B0B               	goto	l1191
 14622     0B0A                     l13170:
 14623                           
 14624                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2329:         return 0
      +                          ;
 14625     0B0A  3000               	movlw	0
 14626     0B0B                     l1191:
 14627     0B0B  0008               	return
 14628     0B0C                     __end_of_getError:
 14629                           
 14630                           	psect	text10
 14631     10CE                     __ptext10:	
 14632 ;; *************** function _getDeviceStatus *****************
 14633 ;; Defined at:
 14634 ;;		line 2303 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;		None
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  deviceStatus    1   11[COMMON] unsigned char 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  1    wreg      unsigned char 
 14641 ;; Registers used:
 14642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;Total ram usage:        1 bytes
 14653 ;; Hardware stack levels used: 1
 14654 ;; Hardware stack levels required when called: 14
 14655 ;; This function calls:
 14656 ;;		_readRegister
 14657 ;; This function is called by:
 14658 ;;		_getError
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662     10CE                     _getDeviceStatus:	
 14663                           ;psect for function _getDeviceStatus
 14664                           
 14665     10CE                     l13060:	
 14666                           ;incstack = 0
 14667 ;; hardware stack exceeded
 14668                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14669                           
 14670                           
 14671                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2305:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14672     10CE  301C               	movlw	28
 14673     10CF  3191  219F  3190   	fcall	_readRegister
 14674     10D2  00FB               	movwf	getDeviceStatus@deviceStatusReg
 14675     10D3                     l13062:
 14676                           
 14677                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2307:     return devic
      +                          eStatusReg;
 14678     10D3  087B               	movf	getDeviceStatus@deviceStatusReg,w
 14679     10D4                     l1187:
 14680     10D4  0008               	return
 14681     10D5                     __end_of_getDeviceStatus:
 14682                           
 14683                           	psect	text11
 14684     1334                     __ptext11:	
 14685 ;; *************** function _bitWrite8 *****************
 14686 ;; Defined at:
 14687 ;;		line 2533 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14688 ;; Parameters:    Size  Location     Type
 14689 ;;  reg             1    wreg     PTR unsigned char 
 14690 ;;		 -> setOscillatorError@deviceStatusReg(2), setI2CAddressEN@addReg(2), setMaskInterrupt@mode(2), setIntPinState@mode(
      +2), 
 14691 ;;		 -> setThresholdEn@mode(2), setInterruptResult@mode(2), setTemperatureEn@mode(2), setZAxisRange@mode(2), 
 14692 ;;		 -> setXYAxisRange@mode(2), setAngleEn@mode(2), setMagnitudeGain@mode(2), setMagDir@mode(2), 
 14693 ;;		 -> setSleeptime@mode(2), setMagneticChannel@mode(2), setOperatingMode@mode(2), setTriggerMode@mode(2), 
 14694 ;;		 -> setGlitchFilter@mode(2), setLowPower@mode(2), setIntThreshold@mode(2), setReadMode@mode(1), 
 14695 ;;		 -> setConvAvg@mode(1), setMagTemp@mode(2), setCRCMode@mode(1), 
 14696 ;;  position        1    1[COMMON] unsigned char 
 14697 ;;  value           1    2[COMMON] unsigned char 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;  reg             1    5[COMMON] PTR unsigned char 
 14700 ;;		 -> setOscillatorError@deviceStatusReg(2), setI2CAddressEN@addReg(2), setMaskInterrupt@mode(2), setIntPinState@mode(
      +2), 
 14701 ;;		 -> setThresholdEn@mode(2), setInterruptResult@mode(2), setTemperatureEn@mode(2), setZAxisRange@mode(2), 
 14702 ;;		 -> setXYAxisRange@mode(2), setAngleEn@mode(2), setMagnitudeGain@mode(2), setMagDir@mode(2), 
 14703 ;;		 -> setSleeptime@mode(2), setMagneticChannel@mode(2), setOperatingMode@mode(2), setTriggerMode@mode(2), 
 14704 ;;		 -> setGlitchFilter@mode(2), setLowPower@mode(2), setIntThreshold@mode(2), setReadMode@mode(1), 
 14705 ;;		 -> setConvAvg@mode(1), setMagTemp@mode(2), setCRCMode@mode(1), 
 14706 ;;  mask            1    4[COMMON] unsigned char 
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      void 
 14709 ;; Registers used:
 14710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14720 ;;Total ram usage:        5 bytes
 14721 ;; Hardware stack levels used: 1
 14722 ;; Hardware stack levels required when called: 4
 14723 ;; This function calls:
 14724 ;;		Nothing
 14725 ;; This function is called by:
 14726 ;;		_setOperatingMode
 14727 ;;		_setMagneticChannel
 14728 ;;		_setXYAxisRange
 14729 ;;		_setZAxisRange
 14730 ;;		_setTemperatureEn
 14731 ;;		_setCRCMode
 14732 ;;		_setMagTemp
 14733 ;;		_setConvAvg
 14734 ;;		_setReadMode
 14735 ;;		_setIntThreshold
 14736 ;;		_setLowPower
 14737 ;;		_setGlitchFilter
 14738 ;;		_setTriggerMode
 14739 ;;		_setSleeptime
 14740 ;;		_setMagDir
 14741 ;;		_setMagnitudeGain
 14742 ;;		_setAngleEn
 14743 ;;		_setInterruptResult
 14744 ;;		_setThresholdEn
 14745 ;;		_setIntPinState
 14746 ;;		_setMaskInterrupt
 14747 ;;		_setI2CAddressEN
 14748 ;;		_setOscillatorError
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752     1334                     _bitWrite8:	
 14753                           ;psect for function _bitWrite8
 14754                           
 14755                           
 14756                           ;incstack = 0
 14757                           ; Regs used in _bitWrite8: [wreg-fsr1h+status,2+status,0]
 14758                           ;bitWrite8@reg stored from wreg
 14759     1334  00F5               	movwf	bitWrite8@reg
 14760     1335                     l13184:
 14761     1335                     l13186:
 14762                           
 14763                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2535:     mask = value
      +                           << position;
 14764     1335  0872               	movf	bitWrite8@value,w
 14765     1336  00F3               	movwf	??_bitWrite8
 14766     1337  0A71               	incf	bitWrite8@position,w
 14767     1338  2B3A               	goto	u10354
 14768     1339                     u10355:
 14769     1339  35F3               	lslf	??_bitWrite8,f
 14770     133A                     u10354:
 14771     133A  0B89               	decfsz	9,f
 14772     133B  2B39               	goto	u10355
 14773     133C  0873               	movf	??_bitWrite8,w
 14774     133D  00F4               	movwf	bitWrite8@mask
 14775     133E                     l13188:
 14776                           
 14777                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2536:     *reg = *reg 
      +                          | mask;
 14778     133E  0875               	movf	bitWrite8@reg,w
 14779     133F  0086               	movwf	6
 14780     1340  0187               	clrf	7
 14781     1341  0875               	movf	bitWrite8@reg,w
 14782     1342  0084               	movwf	4
 14783     1343  0185               	clrf	5
 14784     1344  0800               	movf	0,w
 14785     1345  0474               	iorwf	bitWrite8@mask,w
 14786     1346  0081               	movwf	1
 14787     1347                     l1235:
 14788     1347  0008               	return
 14789     1348                     __end_of_bitWrite8:
 14790                           
 14791                           	psect	text12
 14792     13E6                     __ptext12:	
 14793 ;; *************** function _isConnected *****************
 14794 ;; Defined at:
 14795 ;;		line 125 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;		None
 14798 ;; Auto vars:     Size  Location     Type
 14799 ;;		None
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  1    wreg      char 
 14802 ;; Registers used:
 14803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14813 ;;Total ram usage:        0 bytes
 14814 ;; Hardware stack levels used: 1
 14815 ;; Hardware stack levels required when called: 14
 14816 ;; This function calls:
 14817 ;;		_TMAG5273_GetManufacture
 14818 ;; This function is called by:
 14819 ;;		_begin
 14820 ;; This function uses a non-reentrant model
 14821 ;;
 14822                           
 14823     13E6                     _isConnected:	
 14824                           ;psect for function _isConnected
 14825                           
 14826     13E6                     l13332:	
 14827                           ;incstack = 0
 14828                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14829                           
 14830                           
 14831                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 133:     manufactureId
      +                           = TMAG5273_GetManufacture();
 14832     13E6  3194  2449  3193   	fcall	_TMAG5273_GetManufacture
 14833     13E9  0140               	movlb	0	; select bank0
 14834     13EA  082E               	movf	?_TMAG5273_GetManufacture+1,w
 14835     13EB  0141               	movlb	1	; select bank1
 14836     13EC  00D7               	movwf	(_manufactureId+1)^(0+128)
 14837     13ED  0140               	movlb	0	; select bank0
 14838     13EE  082D               	movf	?_TMAG5273_GetManufacture,w
 14839     13EF  0141               	movlb	1	; select bank1
 14840     13F0  00D6               	movwf	_manufactureId^(0+128)
 14841     13F1                     l13334:
 14842                           
 14843                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 135:     if (manufactu
      +                          reId != 0x5449) {
 14844     13F1  3049               	movlw	73
 14845     13F2  0656               	xorwf	_manufactureId^(0+128),w
 14846     13F3  3054               	movlw	84
 14847     13F4  1903               	skipnz
 14848     13F5  0657               	xorwf	(_manufactureId+1)^(0+128),w
 14849     13F6  1903               	btfsc	3,2
 14850     13F7  2BF9               	goto	u10511
 14851     13F8  2BFA               	goto	u10510
 14852     13F9                     u10511:
 14853     13F9  2BFC               	goto	l13340
 14854     13FA                     u10510:
 14855     13FA                     l13336:
 14856                           
 14857                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 136:         return -1
      +                          ;
 14858     13FA  30FF               	movlw	255
 14859     13FB  2BFD               	goto	l681
 14860     13FC                     l13340:
 14861                           
 14862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 139:     return 0;
 14863     13FC  3000               	movlw	0
 14864     13FD                     l681:
 14865     13FD  0008               	return
 14866     13FE                     __end_of_isConnected:
 14867                           
 14868                           	psect	text13
 14869     1449                     __ptext13:	
 14870 ;; *************** function _TMAG5273_GetManufacture *****************
 14871 ;; Defined at:
 14872 ;;		line 2539 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;  read            2   15[BANK0 ] unsigned short 
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  2   13[BANK0 ] unsigned short 
 14879 ;; Registers used:
 14880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14890 ;;Total ram usage:        4 bytes
 14891 ;; Hardware stack levels used: 1
 14892 ;; Hardware stack levels required when called: 13
 14893 ;; This function calls:
 14894 ;;		_i2c_read2ByteRegister
 14895 ;;		_swap
 14896 ;; This function is called by:
 14897 ;;		_isConnected
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901     1449                     _TMAG5273_GetManufacture:	
 14902                           ;psect for function _TMAG5273_GetManufacture
 14903                           
 14904     1449                     l13174:	
 14905                           ;incstack = 0
 14906                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14907                           
 14908                           
 14909                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2541:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 14910     1449  300E               	movlw	14
 14911     144A  0140               	movlb	0	; select bank0
 14912     144B  00A4               	movwf	i2c_read2ByteRegister@reg
 14913     144C  3022               	movlw	34
 14914     144D  318B  23C7  3194   	fcall	_i2c_read2ByteRegister
 14915     1450  0140               	movlb	0	; select bank0
 14916     1451  0825               	movf	?_i2c_read2ByteRegister+1,w
 14917     1452  00B0               	movwf	TMAG5273_GetManufacture@read+1
 14918     1453  0824               	movf	?_i2c_read2ByteRegister,w
 14919     1454  00AF               	movwf	TMAG5273_GetManufacture@read
 14920     1455                     l13176:
 14921                           
 14922                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2542:     return swap(
      +                          read);
 14923     1455  0830               	movf	TMAG5273_GetManufacture@read+1,w
 14924     1456  00F2               	movwf	swap@reg+1
 14925     1457  082F               	movf	TMAG5273_GetManufacture@read,w
 14926     1458  00F1               	movwf	swap@reg
 14927     1459  3188  2000  3194   	fcall	_swap
 14928     145C  0872               	movf	?_swap+1,w
 14929     145D  0140               	movlb	0	; select bank0
 14930     145E  00AE               	movwf	?_TMAG5273_GetManufacture+1
 14931     145F  0871               	movf	?_swap,w
 14932     1460  00AD               	movwf	?_TMAG5273_GetManufacture
 14933     1461                     l1238:
 14934     1461  0008               	return
 14935     1462                     __end_of_TMAG5273_GetManufacture:
 14936                           
 14937                           	psect	text14
 14938     0800                     __ptext14:	
 14939 ;; *************** function _swap *****************
 14940 ;; Defined at:
 14941 ;;		line 2545 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;  reg             2    1[COMMON] unsigned short 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  2    1[COMMON] unsigned short 
 14948 ;; Registers used:
 14949 ;;		wreg, status,2
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14957 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14959 ;;Total ram usage:        7 bytes
 14960 ;; Hardware stack levels used: 1
 14961 ;; Hardware stack levels required when called: 4
 14962 ;; This function calls:
 14963 ;;		Nothing
 14964 ;; This function is called by:
 14965 ;;		_TMAG5273_GetManufacture
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969     0800                     _swap:	
 14970                           ;psect for function _swap
 14971                           
 14972     0800                     l13066:	
 14973                           ;incstack = 0
 14974                           ; Regs used in _swap: [wreg+status,2]
 14975                           
 14976                           
 14977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2547:     upperByte = 
      +                          ((reg & (0xFF00)) >> 8);
 14978     0800  0872               	movf	swap@reg+1,w
 14979     0801  0140               	movlb	0	; select bank0
 14980     0802  00E7               	movwf	_upperByte
 14981     0803                     l13068:
 14982                           
 14983                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2548:     lowerByte = 
      +                          (uint8_t) reg;
 14984     0803  0871               	movf	swap@reg,w
 14985     0804  00E6               	movwf	_lowerByte
 14986     0805                     l13070:
 14987                           
 14988                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2550:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 14989     0805  0867               	movf	_upperByte,w
 14990     0806  00F3               	movwf	??_swap
 14991     0807  01F4               	clrf	??_swap+1
 14992     0808  0866               	movf	_lowerByte,w
 14993     0809  00F5               	movwf	??_swap+2
 14994     080A  01F6               	clrf	??_swap+3
 14995     080B  0875               	movf	??_swap+2,w
 14996     080C  00F6               	movwf	??_swap+3
 14997     080D  01F5               	clrf	??_swap+2
 14998     080E  0873               	movf	??_swap,w
 14999     080F  0475               	iorwf	??_swap+2,w
 15000     0810  00F1               	movwf	swap@reg
 15001     0811  0874               	movf	??_swap+1,w
 15002     0812  0476               	iorwf	??_swap+3,w
 15003     0813  00F2               	movwf	swap@reg+1
 15004     0814                     l13072:
 15005     0814                     l1241:	
 15006                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2552:     return reg;
 15007                           
 15008     0814  0008               	return
 15009     0815                     __end_of_swap:
 15010                           
 15011                           	psect	text15
 15012     120F                     __ptext15:	
 15013 ;; *************** function _getTemperatureEN *****************
 15014 ;; Defined at:
 15015 ;;		line 2036 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  tempENreg       1   13[BANK0 ] unsigned char 
 15020 ;;  tempEN          1   12[BANK0 ] unsigned char 
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  1    wreg      unsigned char 
 15023 ;; Registers used:
 15024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15034 ;;Total ram usage:        2 bytes
 15035 ;; Hardware stack levels used: 1
 15036 ;; Hardware stack levels required when called: 14
 15037 ;; This function calls:
 15038 ;;		_bitRead8
 15039 ;;		_readRegister
 15040 ;; This function is called by:
 15041 ;;		_begin
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045     120F                     _getTemperatureEN:	
 15046                           ;psect for function _getTemperatureEN
 15047                           
 15048     120F                     l13706:	
 15049                           ;incstack = 0
 15050                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15051                           
 15052     120F                     l13708:
 15053                           
 15054                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2038:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15055     120F  3007               	movlw	7
 15056     1210  3191  219F  3192   	fcall	_readRegister
 15057     1213  0140               	movlb	0	; select bank0
 15058     1214  00AD               	movwf	getTemperatureEN@tempENreg
 15059     1215                     l13710:
 15060                           
 15061                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2040:     uint8_t temp
      +                          EN = bitRead8(&tempENreg, 0);
 15062     1215  01F1               	clrf	bitRead8@position
 15063     1216  302D               	movlw	(low (getTemperatureEN@tempENreg| 0))& (0+255)
 15064     1217  3193  23B7  3192   	fcall	_bitRead8
 15065     121A  0140               	movlb	0	; select bank0
 15066     121B  00AC               	movwf	getTemperatureEN@tempEN
 15067     121C                     l13712:
 15068                           
 15069                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2042:     return tempE
      +                          N;
 15070     121C  082C               	movf	getTemperatureEN@tempEN,w
 15071     121D                     l1131:
 15072     121D  0008               	return
 15073     121E                     __end_of_getTemperatureEN:
 15074                           
 15075                           	psect	text16
 15076     0C0D                     __ptext16:	
 15077 ;; *************** function _getOperatingMode *****************
 15078 ;; Defined at:
 15079 ;;		line 1582 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;		None
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;  opMode1         1   14[BANK0 ] unsigned char 
 15084 ;;  opMode0         1   13[BANK0 ] unsigned char 
 15085 ;;  opMode          1   12[BANK0 ] unsigned char 
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      unsigned char 
 15088 ;; Registers used:
 15089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15099 ;;Total ram usage:        3 bytes
 15100 ;; Hardware stack levels used: 1
 15101 ;; Hardware stack levels required when called: 14
 15102 ;; This function calls:
 15103 ;;		_bitRead8
 15104 ;;		_readRegister
 15105 ;; This function is called by:
 15106 ;;		_begin
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110     0C0D                     _getOperatingMode:	
 15111                           ;psect for function _getOperatingMode
 15112                           
 15113     0C0D                     l13472:	
 15114                           ;incstack = 0
 15115                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15116                           
 15117     0C0D                     l13474:
 15118                           
 15119                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1584:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15120     0C0D  3001               	movlw	1
 15121     0C0E  3191  219F  318C   	fcall	_readRegister
 15122     0C11  0140               	movlb	0	; select bank0
 15123     0C12  00AC               	movwf	getOperatingMode@opMode
 15124     0C13                     l13476:
 15125                           
 15126                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1586:     uint8_t opMo
      +                          de0 = bitRead8(&opMode, 0);
 15127     0C13  01F1               	clrf	bitRead8@position
 15128     0C14  302C               	movlw	(low (getOperatingMode@opMode| 0))& (0+255)
 15129     0C15  3193  23B7  318C   	fcall	_bitRead8
 15130     0C18  0140               	movlb	0	; select bank0
 15131     0C19  00AD               	movwf	getOperatingMode@opMode0
 15132     0C1A                     l13478:
 15133                           
 15134                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     uint8_t opMo
      +                          de1 = bitRead8(&opMode, 1);
 15135     0C1A  01F1               	clrf	bitRead8@position
 15136     0C1B  0AF1               	incf	bitRead8@position,f
 15137     0C1C  302C               	movlw	(low (getOperatingMode@opMode| 0))& (0+255)
 15138     0C1D  3193  23B7  318C   	fcall	_bitRead8
 15139     0C20  0140               	movlb	0	; select bank0
 15140     0C21  00AE               	movwf	getOperatingMode@opMode1
 15141     0C22                     l13480:
 15142                           
 15143                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15144     0C22  082D               	movf	getOperatingMode@opMode0,w
 15145     0C23  1D03               	btfss	3,2
 15146     0C24  2C26               	goto	u10741
 15147     0C25  2C27               	goto	u10740
 15148     0C26                     u10741:
 15149     0C26  2C2E               	goto	l13490
 15150     0C27                     u10740:
 15151     0C27                     l13482:
 15152     0C27  082E               	movf	getOperatingMode@opMode1,w
 15153     0C28  1D03               	btfss	3,2
 15154     0C29  2C2B               	goto	u10751
 15155     0C2A  2C2C               	goto	u10750
 15156     0C2B                     u10751:
 15157     0C2B  2C2E               	goto	l13490
 15158     0C2C                     u10750:
 15159     0C2C                     l13484:
 15160                           
 15161                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1590:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1592:         return 0;
 15162     0C2C  3000               	movlw	0
 15163     0C2D  2C53               	goto	l1003
 15164     0C2E                     l13490:
 15165     0C2E  032D               	decf	getOperatingMode@opMode0,w
 15166     0C2F  1D03               	btfss	3,2
 15167     0C30  2C32               	goto	u10761
 15168     0C31  2C33               	goto	u10760
 15169     0C32                     u10761:
 15170     0C32  2C3A               	goto	l13500
 15171     0C33                     u10760:
 15172     0C33                     l13492:
 15173     0C33  082E               	movf	getOperatingMode@opMode1,w
 15174     0C34  1D03               	btfss	3,2
 15175     0C35  2C37               	goto	u10771
 15176     0C36  2C38               	goto	u10770
 15177     0C37                     u10771:
 15178     0C37  2C3A               	goto	l13500
 15179     0C38                     u10770:
 15180     0C38                     l13494:
 15181                           
 15182                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1594:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1596:         return 1;
 15183     0C38  3001               	movlw	1
 15184     0C39  2C53               	goto	l1003
 15185     0C3A                     l13500:
 15186     0C3A  082D               	movf	getOperatingMode@opMode0,w
 15187     0C3B  1D03               	btfss	3,2
 15188     0C3C  2C3E               	goto	u10781
 15189     0C3D  2C3F               	goto	u10780
 15190     0C3E                     u10781:
 15191     0C3E  2C46               	goto	l13510
 15192     0C3F                     u10780:
 15193     0C3F                     l13502:
 15194     0C3F  032E               	decf	getOperatingMode@opMode1,w
 15195     0C40  1D03               	btfss	3,2
 15196     0C41  2C43               	goto	u10791
 15197     0C42  2C44               	goto	u10790
 15198     0C43                     u10791:
 15199     0C43  2C46               	goto	l13510
 15200     0C44                     u10790:
 15201     0C44                     l13504:
 15202                           
 15203                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1598:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1600:         return 2;
 15204     0C44  3002               	movlw	2
 15205     0C45  2C53               	goto	l1003
 15206     0C46                     l13510:
 15207     0C46  032D               	decf	getOperatingMode@opMode0,w
 15208     0C47  1D03               	btfss	3,2
 15209     0C48  2C4A               	goto	u10801
 15210     0C49  2C4B               	goto	u10800
 15211     0C4A                     u10801:
 15212     0C4A  2C52               	goto	l1006
 15213     0C4B                     u10800:
 15214     0C4B                     l13512:
 15215     0C4B  032E               	decf	getOperatingMode@opMode1,w
 15216     0C4C  1D03               	btfss	3,2
 15217     0C4D  2C4F               	goto	u10811
 15218     0C4E  2C50               	goto	u10810
 15219     0C4F                     u10811:
 15220     0C4F  2C52               	goto	l1006
 15221     0C50                     u10810:
 15222     0C50                     l13514:
 15223                           
 15224                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1602:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1604:         return 3;
 15225     0C50  3003               	movlw	3
 15226     0C51  2C53               	goto	l1003
 15227     0C52                     l1006:
 15228     0C52  2C2C               	goto	l13484
 15229     0C53                     l1003:
 15230     0C53  0008               	return
 15231     0C54                     __end_of_getOperatingMode:
 15232                           
 15233                           	psect	text17
 15234     02C4                     __ptext17:	
 15235 ;; *************** function _getMagneticChannel *****************
 15236 ;; Defined at:
 15237 ;;		line 1626 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;  magMode7        1   16[BANK0 ] unsigned char 
 15242 ;;  magMode6        1   15[BANK0 ] unsigned char 
 15243 ;;  magMode5        1   14[BANK0 ] unsigned char 
 15244 ;;  magMode4        1   13[BANK0 ] unsigned char 
 15245 ;;  magChannel      1   12[BANK0 ] unsigned char 
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      unsigned char 
 15248 ;; Registers used:
 15249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15256 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;Total ram usage:        5 bytes
 15260 ;; Hardware stack levels used: 1
 15261 ;; Hardware stack levels required when called: 14
 15262 ;; This function calls:
 15263 ;;		_bitRead8
 15264 ;;		_readRegister
 15265 ;; This function is called by:
 15266 ;;		_begin
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270     02C4                     _getMagneticChannel:	
 15271                           ;psect for function _getMagneticChannel
 15272                           
 15273     02C4                     l13522:	
 15274                           ;incstack = 0
 15275                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15276                           
 15277     02C4                     l13524:
 15278                           
 15279                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15280     02C4  3002               	movlw	2
 15281     02C5  3191  219F  3182   	fcall	_readRegister
 15282     02C8  0140               	movlb	0	; select bank0
 15283     02C9  00AC               	movwf	getMagneticChannel@magChannel
 15284     02CA                     l13526:
 15285                           
 15286                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     uint8_t magM
      +                          ode4 = bitRead8(&magChannel, 4);
 15287     02CA  3004               	movlw	4
 15288     02CB  00F1               	movwf	bitRead8@position
 15289     02CC  302C               	movlw	(low (getMagneticChannel@magChannel| 0))& (0+255)
 15290     02CD  3193  23B7  3182   	fcall	_bitRead8
 15291     02D0  0140               	movlb	0	; select bank0
 15292     02D1  00AD               	movwf	getMagneticChannel@magMode4
 15293     02D2                     l13528:
 15294                           
 15295                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:     uint8_t magM
      +                          ode5 = bitRead8(&magChannel, 5);
 15296     02D2  3005               	movlw	5
 15297     02D3  00F1               	movwf	bitRead8@position
 15298     02D4  302C               	movlw	(low (getMagneticChannel@magChannel| 0))& (0+255)
 15299     02D5  3193  23B7  3182   	fcall	_bitRead8
 15300     02D8  0140               	movlb	0	; select bank0
 15301     02D9  00AE               	movwf	getMagneticChannel@magMode5
 15302     02DA                     l13530:
 15303                           
 15304                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     uint8_t magM
      +                          ode6 = bitRead8(&magChannel, 6);
 15305     02DA  3006               	movlw	6
 15306     02DB  00F1               	movwf	bitRead8@position
 15307     02DC  302C               	movlw	(low (getMagneticChannel@magChannel| 0))& (0+255)
 15308     02DD  3193  23B7  3182   	fcall	_bitRead8
 15309     02E0  0140               	movlb	0	; select bank0
 15310     02E1  00AF               	movwf	getMagneticChannel@magMode6
 15311     02E2                     l13532:
 15312                           
 15313                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     uint8_t magM
      +                          ode7 = bitRead8(&magChannel, 7);
 15314     02E2  3007               	movlw	7
 15315     02E3  00F1               	movwf	bitRead8@position
 15316     02E4  302C               	movlw	(low (getMagneticChannel@magChannel| 0))& (0+255)
 15317     02E5  3193  23B7  3182   	fcall	_bitRead8
 15318     02E8  0140               	movlb	0	; select bank0
 15319     02E9  00B0               	movwf	getMagneticChannel@magMode7
 15320     02EA                     l13534:
 15321                           
 15322                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15323     02EA  082D               	movf	getMagneticChannel@magMode4,w
 15324     02EB  1D03               	btfss	3,2
 15325     02EC  2AEE               	goto	u10821
 15326     02ED  2AEF               	goto	u10820
 15327     02EE                     u10821:
 15328     02EE  2B00               	goto	l13548
 15329     02EF                     u10820:
 15330     02EF                     l13536:
 15331     02EF  082E               	movf	getMagneticChannel@magMode5,w
 15332     02F0  1D03               	btfss	3,2
 15333     02F1  2AF3               	goto	u10831
 15334     02F2  2AF4               	goto	u10830
 15335     02F3                     u10831:
 15336     02F3  2B00               	goto	l13548
 15337     02F4                     u10830:
 15338     02F4                     l13538:
 15339     02F4  082F               	movf	getMagneticChannel@magMode6,w
 15340     02F5  1D03               	btfss	3,2
 15341     02F6  2AF8               	goto	u10841
 15342     02F7  2AF9               	goto	u10840
 15343     02F8                     u10841:
 15344     02F8  2B00               	goto	l13548
 15345     02F9                     u10840:
 15346     02F9                     l13540:
 15347     02F9  0830               	movf	getMagneticChannel@magMode7,w
 15348     02FA  1D03               	btfss	3,2
 15349     02FB  2AFD               	goto	u10851
 15350     02FC  2AFE               	goto	u10850
 15351     02FD                     u10851:
 15352     02FD  2B00               	goto	l13548
 15353     02FE                     u10850:
 15354     02FE                     l13542:
 15355                           
 15356                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 0;
 15357     02FE  3000               	movlw	0
 15358     02FF  2BF1               	goto	l1013
 15359     0300                     l13548:
 15360     0300  032D               	decf	getMagneticChannel@magMode4,w
 15361     0301  1D03               	btfss	3,2
 15362     0302  2B04               	goto	u10861
 15363     0303  2B05               	goto	u10860
 15364     0304                     u10861:
 15365     0304  2B16               	goto	l13562
 15366     0305                     u10860:
 15367     0305                     l13550:
 15368     0305  082E               	movf	getMagneticChannel@magMode5,w
 15369     0306  1D03               	btfss	3,2
 15370     0307  2B09               	goto	u10871
 15371     0308  2B0A               	goto	u10870
 15372     0309                     u10871:
 15373     0309  2B16               	goto	l13562
 15374     030A                     u10870:
 15375     030A                     l13552:
 15376     030A  082F               	movf	getMagneticChannel@magMode6,w
 15377     030B  1D03               	btfss	3,2
 15378     030C  2B0E               	goto	u10881
 15379     030D  2B0F               	goto	u10880
 15380     030E                     u10881:
 15381     030E  2B16               	goto	l13562
 15382     030F                     u10880:
 15383     030F                     l13554:
 15384     030F  0830               	movf	getMagneticChannel@magMode7,w
 15385     0310  1D03               	btfss	3,2
 15386     0311  2B13               	goto	u10891
 15387     0312  2B14               	goto	u10890
 15388     0313                     u10891:
 15389     0313  2B16               	goto	l13562
 15390     0314                     u10890:
 15391     0314                     l13556:
 15392                           
 15393                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 1;
 15394     0314  3001               	movlw	1
 15395     0315  2BF1               	goto	l1013
 15396     0316                     l13562:
 15397     0316  082D               	movf	getMagneticChannel@magMode4,w
 15398     0317  1D03               	btfss	3,2
 15399     0318  2B1A               	goto	u10901
 15400     0319  2B1B               	goto	u10900
 15401     031A                     u10901:
 15402     031A  2B2C               	goto	l13576
 15403     031B                     u10900:
 15404     031B                     l13564:
 15405     031B  032E               	decf	getMagneticChannel@magMode5,w
 15406     031C  1D03               	btfss	3,2
 15407     031D  2B1F               	goto	u10911
 15408     031E  2B20               	goto	u10910
 15409     031F                     u10911:
 15410     031F  2B2C               	goto	l13576
 15411     0320                     u10910:
 15412     0320                     l13566:
 15413     0320  082F               	movf	getMagneticChannel@magMode6,w
 15414     0321  1D03               	btfss	3,2
 15415     0322  2B24               	goto	u10921
 15416     0323  2B25               	goto	u10920
 15417     0324                     u10921:
 15418     0324  2B2C               	goto	l13576
 15419     0325                     u10920:
 15420     0325                     l13568:
 15421     0325  0830               	movf	getMagneticChannel@magMode7,w
 15422     0326  1D03               	btfss	3,2
 15423     0327  2B29               	goto	u10931
 15424     0328  2B2A               	goto	u10930
 15425     0329                     u10931:
 15426     0329  2B2C               	goto	l13576
 15427     032A                     u10930:
 15428     032A                     l13570:
 15429                           
 15430                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1643:         return 2;
 15431     032A  3002               	movlw	2
 15432     032B  2BF1               	goto	l1013
 15433     032C                     l13576:
 15434     032C  032D               	decf	getMagneticChannel@magMode4,w
 15435     032D  1D03               	btfss	3,2
 15436     032E  2B30               	goto	u10941
 15437     032F  2B31               	goto	u10940
 15438     0330                     u10941:
 15439     0330  2B42               	goto	l13590
 15440     0331                     u10940:
 15441     0331                     l13578:
 15442     0331  032E               	decf	getMagneticChannel@magMode5,w
 15443     0332  1D03               	btfss	3,2
 15444     0333  2B35               	goto	u10951
 15445     0334  2B36               	goto	u10950
 15446     0335                     u10951:
 15447     0335  2B42               	goto	l13590
 15448     0336                     u10950:
 15449     0336                     l13580:
 15450     0336  082F               	movf	getMagneticChannel@magMode6,w
 15451     0337  1D03               	btfss	3,2
 15452     0338  2B3A               	goto	u10961
 15453     0339  2B3B               	goto	u10960
 15454     033A                     u10961:
 15455     033A  2B42               	goto	l13590
 15456     033B                     u10960:
 15457     033B                     l13582:
 15458     033B  0830               	movf	getMagneticChannel@magMode7,w
 15459     033C  1D03               	btfss	3,2
 15460     033D  2B3F               	goto	u10971
 15461     033E  2B40               	goto	u10970
 15462     033F                     u10971:
 15463     033F  2B42               	goto	l13590
 15464     0340                     u10970:
 15465     0340                     l13584:
 15466                           
 15467                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1646:         return 3;
 15468     0340  3003               	movlw	3
 15469     0341  2BF1               	goto	l1013
 15470     0342                     l13590:
 15471     0342  082D               	movf	getMagneticChannel@magMode4,w
 15472     0343  1D03               	btfss	3,2
 15473     0344  2B46               	goto	u10981
 15474     0345  2B47               	goto	u10980
 15475     0346                     u10981:
 15476     0346  2B58               	goto	l13604
 15477     0347                     u10980:
 15478     0347                     l13592:
 15479     0347  082E               	movf	getMagneticChannel@magMode5,w
 15480     0348  1D03               	btfss	3,2
 15481     0349  2B4B               	goto	u10991
 15482     034A  2B4C               	goto	u10990
 15483     034B                     u10991:
 15484     034B  2B58               	goto	l13604
 15485     034C                     u10990:
 15486     034C                     l13594:
 15487     034C  032F               	decf	getMagneticChannel@magMode6,w
 15488     034D  1D03               	btfss	3,2
 15489     034E  2B50               	goto	u11001
 15490     034F  2B51               	goto	u11000
 15491     0350                     u11001:
 15492     0350  2B58               	goto	l13604
 15493     0351                     u11000:
 15494     0351                     l13596:
 15495     0351  0830               	movf	getMagneticChannel@magMode7,w
 15496     0352  1D03               	btfss	3,2
 15497     0353  2B55               	goto	u11011
 15498     0354  2B56               	goto	u11010
 15499     0355                     u11011:
 15500     0355  2B58               	goto	l13604
 15501     0356                     u11010:
 15502     0356                     l13598:
 15503                           
 15504                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1649:         return 4;
 15505     0356  3004               	movlw	4
 15506     0357  2BF1               	goto	l1013
 15507     0358                     l13604:
 15508     0358  032D               	decf	getMagneticChannel@magMode4,w
 15509     0359  1D03               	btfss	3,2
 15510     035A  2B5C               	goto	u11021
 15511     035B  2B5D               	goto	u11020
 15512     035C                     u11021:
 15513     035C  2B6E               	goto	l13618
 15514     035D                     u11020:
 15515     035D                     l13606:
 15516     035D  082E               	movf	getMagneticChannel@magMode5,w
 15517     035E  1D03               	btfss	3,2
 15518     035F  2B61               	goto	u11031
 15519     0360  2B62               	goto	u11030
 15520     0361                     u11031:
 15521     0361  2B6E               	goto	l13618
 15522     0362                     u11030:
 15523     0362                     l13608:
 15524     0362  032F               	decf	getMagneticChannel@magMode6,w
 15525     0363  1D03               	btfss	3,2
 15526     0364  2B66               	goto	u11041
 15527     0365  2B67               	goto	u11040
 15528     0366                     u11041:
 15529     0366  2B6E               	goto	l13618
 15530     0367                     u11040:
 15531     0367                     l13610:
 15532     0367  0830               	movf	getMagneticChannel@magMode7,w
 15533     0368  1D03               	btfss	3,2
 15534     0369  2B6B               	goto	u11051
 15535     036A  2B6C               	goto	u11050
 15536     036B                     u11051:
 15537     036B  2B6E               	goto	l13618
 15538     036C                     u11050:
 15539     036C                     l13612:
 15540                           
 15541                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1652:         return 5;
 15542     036C  3005               	movlw	5
 15543     036D  2BF1               	goto	l1013
 15544     036E                     l13618:
 15545     036E  082D               	movf	getMagneticChannel@magMode4,w
 15546     036F  1D03               	btfss	3,2
 15547     0370  2B72               	goto	u11061
 15548     0371  2B73               	goto	u11060
 15549     0372                     u11061:
 15550     0372  2B84               	goto	l13632
 15551     0373                     u11060:
 15552     0373                     l13620:
 15553     0373  032E               	decf	getMagneticChannel@magMode5,w
 15554     0374  1D03               	btfss	3,2
 15555     0375  2B77               	goto	u11071
 15556     0376  2B78               	goto	u11070
 15557     0377                     u11071:
 15558     0377  2B84               	goto	l13632
 15559     0378                     u11070:
 15560     0378                     l13622:
 15561     0378  032F               	decf	getMagneticChannel@magMode6,w
 15562     0379  1D03               	btfss	3,2
 15563     037A  2B7C               	goto	u11081
 15564     037B  2B7D               	goto	u11080
 15565     037C                     u11081:
 15566     037C  2B84               	goto	l13632
 15567     037D                     u11080:
 15568     037D                     l13624:
 15569     037D  0830               	movf	getMagneticChannel@magMode7,w
 15570     037E  1D03               	btfss	3,2
 15571     037F  2B81               	goto	u11091
 15572     0380  2B82               	goto	u11090
 15573     0381                     u11091:
 15574     0381  2B84               	goto	l13632
 15575     0382                     u11090:
 15576     0382                     l13626:
 15577                           
 15578                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1655:         return 6;
 15579     0382  3006               	movlw	6
 15580     0383  2BF1               	goto	l1013
 15581     0384                     l13632:
 15582     0384  032D               	decf	getMagneticChannel@magMode4,w
 15583     0385  1D03               	btfss	3,2
 15584     0386  2B88               	goto	u11101
 15585     0387  2B89               	goto	u11100
 15586     0388                     u11101:
 15587     0388  2B9A               	goto	l13646
 15588     0389                     u11100:
 15589     0389                     l13634:
 15590     0389  032E               	decf	getMagneticChannel@magMode5,w
 15591     038A  1D03               	btfss	3,2
 15592     038B  2B8D               	goto	u11111
 15593     038C  2B8E               	goto	u11110
 15594     038D                     u11111:
 15595     038D  2B9A               	goto	l13646
 15596     038E                     u11110:
 15597     038E                     l13636:
 15598     038E  032F               	decf	getMagneticChannel@magMode6,w
 15599     038F  1D03               	btfss	3,2
 15600     0390  2B92               	goto	u11121
 15601     0391  2B93               	goto	u11120
 15602     0392                     u11121:
 15603     0392  2B9A               	goto	l13646
 15604     0393                     u11120:
 15605     0393                     l13638:
 15606     0393  0830               	movf	getMagneticChannel@magMode7,w
 15607     0394  1D03               	btfss	3,2
 15608     0395  2B97               	goto	u11131
 15609     0396  2B98               	goto	u11130
 15610     0397                     u11131:
 15611     0397  2B9A               	goto	l13646
 15612     0398                     u11130:
 15613     0398                     l13640:
 15614                           
 15615                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1658:         return 7;
 15616     0398  3007               	movlw	7
 15617     0399  2BF1               	goto	l1013
 15618     039A                     l13646:
 15619     039A  082D               	movf	getMagneticChannel@magMode4,w
 15620     039B  1D03               	btfss	3,2
 15621     039C  2B9E               	goto	u11141
 15622     039D  2B9F               	goto	u11140
 15623     039E                     u11141:
 15624     039E  2BB0               	goto	l13660
 15625     039F                     u11140:
 15626     039F                     l13648:
 15627     039F  082E               	movf	getMagneticChannel@magMode5,w
 15628     03A0  1D03               	btfss	3,2
 15629     03A1  2BA3               	goto	u11151
 15630     03A2  2BA4               	goto	u11150
 15631     03A3                     u11151:
 15632     03A3  2BB0               	goto	l13660
 15633     03A4                     u11150:
 15634     03A4                     l13650:
 15635     03A4  082F               	movf	getMagneticChannel@magMode6,w
 15636     03A5  1D03               	btfss	3,2
 15637     03A6  2BA8               	goto	u11161
 15638     03A7  2BA9               	goto	u11160
 15639     03A8                     u11161:
 15640     03A8  2BB0               	goto	l13660
 15641     03A9                     u11160:
 15642     03A9                     l13652:
 15643     03A9  0330               	decf	getMagneticChannel@magMode7,w
 15644     03AA  1D03               	btfss	3,2
 15645     03AB  2BAD               	goto	u11171
 15646     03AC  2BAE               	goto	u11170
 15647     03AD                     u11171:
 15648     03AD  2BB0               	goto	l13660
 15649     03AE                     u11170:
 15650     03AE                     l13654:
 15651                           
 15652                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1661:         return 8;
 15653     03AE  3008               	movlw	8
 15654     03AF  2BF1               	goto	l1013
 15655     03B0                     l13660:
 15656     03B0  032D               	decf	getMagneticChannel@magMode4,w
 15657     03B1  1D03               	btfss	3,2
 15658     03B2  2BB4               	goto	u11181
 15659     03B3  2BB5               	goto	u11180
 15660     03B4                     u11181:
 15661     03B4  2BC6               	goto	l13674
 15662     03B5                     u11180:
 15663     03B5                     l13662:
 15664     03B5  082E               	movf	getMagneticChannel@magMode5,w
 15665     03B6  1D03               	btfss	3,2
 15666     03B7  2BB9               	goto	u11191
 15667     03B8  2BBA               	goto	u11190
 15668     03B9                     u11191:
 15669     03B9  2BC6               	goto	l13674
 15670     03BA                     u11190:
 15671     03BA                     l13664:
 15672     03BA  082F               	movf	getMagneticChannel@magMode6,w
 15673     03BB  1D03               	btfss	3,2
 15674     03BC  2BBE               	goto	u11201
 15675     03BD  2BBF               	goto	u11200
 15676     03BE                     u11201:
 15677     03BE  2BC6               	goto	l13674
 15678     03BF                     u11200:
 15679     03BF                     l13666:
 15680     03BF  0330               	decf	getMagneticChannel@magMode7,w
 15681     03C0  1D03               	btfss	3,2
 15682     03C1  2BC3               	goto	u11211
 15683     03C2  2BC4               	goto	u11210
 15684     03C3                     u11211:
 15685     03C3  2BC6               	goto	l13674
 15686     03C4                     u11210:
 15687     03C4                     l13668:
 15688                           
 15689                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1664:         return 9;
 15690     03C4  3009               	movlw	9
 15691     03C5  2BF1               	goto	l1013
 15692     03C6                     l13674:
 15693     03C6  082D               	movf	getMagneticChannel@magMode4,w
 15694     03C7  1D03               	btfss	3,2
 15695     03C8  2BCA               	goto	u11221
 15696     03C9  2BCB               	goto	u11220
 15697     03CA                     u11221:
 15698     03CA  2BDC               	goto	l13688
 15699     03CB                     u11220:
 15700     03CB                     l13676:
 15701     03CB  032E               	decf	getMagneticChannel@magMode5,w
 15702     03CC  1D03               	btfss	3,2
 15703     03CD  2BCF               	goto	u11231
 15704     03CE  2BD0               	goto	u11230
 15705     03CF                     u11231:
 15706     03CF  2BDC               	goto	l13688
 15707     03D0                     u11230:
 15708     03D0                     l13678:
 15709     03D0  082F               	movf	getMagneticChannel@magMode6,w
 15710     03D1  1D03               	btfss	3,2
 15711     03D2  2BD4               	goto	u11241
 15712     03D3  2BD5               	goto	u11240
 15713     03D4                     u11241:
 15714     03D4  2BDC               	goto	l13688
 15715     03D5                     u11240:
 15716     03D5                     l13680:
 15717     03D5  0330               	decf	getMagneticChannel@magMode7,w
 15718     03D6  1D03               	btfss	3,2
 15719     03D7  2BD9               	goto	u11251
 15720     03D8  2BDA               	goto	u11250
 15721     03D9                     u11251:
 15722     03D9  2BDC               	goto	l13688
 15723     03DA                     u11250:
 15724     03DA                     l13682:
 15725                           
 15726                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1667:         return 10;
 15727     03DA  300A               	movlw	10
 15728     03DB  2BF1               	goto	l1013
 15729     03DC                     l13688:
 15730     03DC  032D               	decf	getMagneticChannel@magMode4,w
 15731     03DD  1D03               	btfss	3,2
 15732     03DE  2BE0               	goto	u11261
 15733     03DF  2BE1               	goto	u11260
 15734     03E0                     u11261:
 15735     03E0  2AFE               	goto	l13542
 15736     03E1                     u11260:
 15737     03E1                     l13690:
 15738     03E1  032E               	decf	getMagneticChannel@magMode5,w
 15739     03E2  1D03               	btfss	3,2
 15740     03E3  2BE5               	goto	u11271
 15741     03E4  2BE6               	goto	u11270
 15742     03E5                     u11271:
 15743     03E5  2AFE               	goto	l13542
 15744     03E6                     u11270:
 15745     03E6                     l13692:
 15746     03E6  082F               	movf	getMagneticChannel@magMode6,w
 15747     03E7  1D03               	btfss	3,2
 15748     03E8  2BEA               	goto	u11281
 15749     03E9  2BEB               	goto	u11280
 15750     03EA                     u11281:
 15751     03EA  2AFE               	goto	l13542
 15752     03EB                     u11280:
 15753     03EB                     l13694:
 15754     03EB  0330               	decf	getMagneticChannel@magMode7,w
 15755     03EC  1D03               	btfss	3,2
 15756     03ED  2BEF               	goto	u11291
 15757     03EE  2BF0               	goto	u11290
 15758     03EF                     u11291:
 15759     03EF  2AFE               	goto	l13542
 15760     03F0                     u11290:
 15761     03F0                     l13696:
 15762                           
 15763                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1669:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1670:         return 11;
 15764     03F0  300B               	movlw	11
 15765     03F1                     l1013:
 15766     03F1  0008               	return
 15767     03F2                     __end_of_getMagneticChannel:
 15768                           
 15769                           	psect	text18
 15770     121E                     __ptext18:	
 15771 ;; *************** function _getLowPower *****************
 15772 ;; Defined at:
 15773 ;;		line 1531 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;  lowPowerMode    1   13[BANK0 ] unsigned char 
 15778 ;;  lowPowerMode    1   12[BANK0 ] unsigned char 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      unsigned char 
 15781 ;; Registers used:
 15782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15792 ;;Total ram usage:        2 bytes
 15793 ;; Hardware stack levels used: 1
 15794 ;; Hardware stack levels required when called: 14
 15795 ;; This function calls:
 15796 ;;		_bitRead8
 15797 ;;		_readRegister
 15798 ;; This function is called by:
 15799 ;;		_begin
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803     121E                     _getLowPower:	
 15804                           ;psect for function _getLowPower
 15805                           
 15806     121E                     l13462:	
 15807                           ;incstack = 0
 15808                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15809                           
 15810     121E                     l13464:
 15811                           
 15812                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1533:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15813     121E  3001               	movlw	1
 15814     121F  3191  219F  3192   	fcall	_readRegister
 15815     1222  0140               	movlb	0	; select bank0
 15816     1223  00AD               	movwf	getLowPower@lowPowerMode
 15817     1224                     l13466:
 15818                           
 15819                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1535:     uint8_t lowP
      +                          owerModeBit = bitRead8(&lowPowerMode, 4);
 15820     1224  3004               	movlw	4
 15821     1225  00F1               	movwf	bitRead8@position
 15822     1226  302D               	movlw	(low (getLowPower@lowPowerMode| 0))& (0+255)
 15823     1227  3193  23B7  3192   	fcall	_bitRead8
 15824     122A  0140               	movlb	0	; select bank0
 15825     122B  00AC               	movwf	getLowPower@lowPowerModeBit
 15826     122C                     l13468:
 15827                           
 15828                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1537:     return lowPo
      +                          werModeBit;
 15829     122C  082C               	movf	getLowPower@lowPowerModeBit,w
 15830     122D                     l993:
 15831     122D  0008               	return
 15832     122E                     __end_of_getLowPower:
 15833                           
 15834                           	psect	text19
 15835     0C9C                     __ptext19:	
 15836 ;; *************** function _getAngleEn *****************
 15837 ;; Defined at:
 15838 ;;		line 1887 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;  angleDir3       1   14[BANK0 ] unsigned char 
 15843 ;;  angleDir2       1   13[BANK0 ] unsigned char 
 15844 ;;  angleReg        1   12[BANK0 ] unsigned char 
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  1    wreg      unsigned char 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15855 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15857 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15858 ;;Total ram usage:        3 bytes
 15859 ;; Hardware stack levels used: 1
 15860 ;; Hardware stack levels required when called: 14
 15861 ;; This function calls:
 15862 ;;		_bitRead8
 15863 ;;		_readRegister
 15864 ;; This function is called by:
 15865 ;;		_begin
 15866 ;;		_setMagneticOffset2
 15867 ;;		_getMagneticOffset2
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871     0C9C                     _getAngleEn:	
 15872                           ;psect for function _getAngleEn
 15873                           
 15874     0C9C                     l13716:	
 15875                           ;incstack = 0
 15876                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15877                           
 15878     0C9C                     l13718:
 15879                           
 15880                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1889:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 15881     0C9C  3003               	movlw	3
 15882     0C9D  3191  219F  318C   	fcall	_readRegister
 15883     0CA0  0140               	movlb	0	; select bank0
 15884     0CA1  00AC               	movwf	getAngleEn@angleReg
 15885     0CA2                     l13720:
 15886                           
 15887                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1891:     uint8_t angl
      +                          eDir2 = bitRead8(&angleReg, 2);
 15888     0CA2  3002               	movlw	2
 15889     0CA3  00F1               	movwf	bitRead8@position
 15890     0CA4  302C               	movlw	(low (getAngleEn@angleReg| 0))& (0+255)
 15891     0CA5  3193  23B7  318C   	fcall	_bitRead8
 15892     0CA8  0140               	movlb	0	; select bank0
 15893     0CA9  00AD               	movwf	getAngleEn@angleDir2
 15894     0CAA                     l13722:
 15895                           
 15896                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     uint8_t angl
      +                          eDir3 = bitRead8(&angleReg, 3);
 15897     0CAA  3003               	movlw	3
 15898     0CAB  00F1               	movwf	bitRead8@position
 15899     0CAC  302C               	movlw	(low (getAngleEn@angleReg| 0))& (0+255)
 15900     0CAD  3193  23B7  318C   	fcall	_bitRead8
 15901     0CB0  0140               	movlb	0	; select bank0
 15902     0CB1  00AE               	movwf	getAngleEn@angleDir3
 15903     0CB2                     l13724:
 15904                           
 15905                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 15906     0CB2  082D               	movf	getAngleEn@angleDir2,w
 15907     0CB3  1D03               	btfss	3,2
 15908     0CB4  2CB6               	goto	u11301
 15909     0CB5  2CB7               	goto	u11300
 15910     0CB6                     u11301:
 15911     0CB6  2CBE               	goto	l13734
 15912     0CB7                     u11300:
 15913     0CB7                     l13726:
 15914     0CB7  082E               	movf	getAngleEn@angleDir3,w
 15915     0CB8  1D03               	btfss	3,2
 15916     0CB9  2CBB               	goto	u11311
 15917     0CBA  2CBC               	goto	u11310
 15918     0CBB                     u11311:
 15919     0CBB  2CBE               	goto	l13734
 15920     0CBC                     u11310:
 15921     0CBC                     l13728:
 15922                           
 15923                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1895:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1897:         return 0;
 15924     0CBC  3000               	movlw	0
 15925     0CBD  2CE3               	goto	l1098
 15926     0CBE                     l13734:
 15927     0CBE  032D               	decf	getAngleEn@angleDir2,w
 15928     0CBF  1D03               	btfss	3,2
 15929     0CC0  2CC2               	goto	u11321
 15930     0CC1  2CC3               	goto	u11320
 15931     0CC2                     u11321:
 15932     0CC2  2CCA               	goto	l13744
 15933     0CC3                     u11320:
 15934     0CC3                     l13736:
 15935     0CC3  082E               	movf	getAngleEn@angleDir3,w
 15936     0CC4  1D03               	btfss	3,2
 15937     0CC5  2CC7               	goto	u11331
 15938     0CC6  2CC8               	goto	u11330
 15939     0CC7                     u11331:
 15940     0CC7  2CCA               	goto	l13744
 15941     0CC8                     u11330:
 15942     0CC8                     l13738:
 15943                           
 15944                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1899:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1901:         return 1;
 15945     0CC8  3001               	movlw	1
 15946     0CC9  2CE3               	goto	l1098
 15947     0CCA                     l13744:
 15948     0CCA  082D               	movf	getAngleEn@angleDir2,w
 15949     0CCB  1D03               	btfss	3,2
 15950     0CCC  2CCE               	goto	u11341
 15951     0CCD  2CCF               	goto	u11340
 15952     0CCE                     u11341:
 15953     0CCE  2CD6               	goto	l13754
 15954     0CCF                     u11340:
 15955     0CCF                     l13746:
 15956     0CCF  032E               	decf	getAngleEn@angleDir3,w
 15957     0CD0  1D03               	btfss	3,2
 15958     0CD1  2CD3               	goto	u11351
 15959     0CD2  2CD4               	goto	u11350
 15960     0CD3                     u11351:
 15961     0CD3  2CD6               	goto	l13754
 15962     0CD4                     u11350:
 15963     0CD4                     l13748:
 15964                           
 15965                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1903:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1905:         return 2;
 15966     0CD4  3002               	movlw	2
 15967     0CD5  2CE3               	goto	l1098
 15968     0CD6                     l13754:
 15969     0CD6  032D               	decf	getAngleEn@angleDir2,w
 15970     0CD7  1D03               	btfss	3,2
 15971     0CD8  2CDA               	goto	u11361
 15972     0CD9  2CDB               	goto	u11360
 15973     0CDA                     u11361:
 15974     0CDA  2CE2               	goto	l1101
 15975     0CDB                     u11360:
 15976     0CDB                     l13756:
 15977     0CDB  032E               	decf	getAngleEn@angleDir3,w
 15978     0CDC  1D03               	btfss	3,2
 15979     0CDD  2CDF               	goto	u11371
 15980     0CDE  2CE0               	goto	u11370
 15981     0CDF                     u11371:
 15982     0CDF  2CE2               	goto	l1101
 15983     0CE0                     u11370:
 15984     0CE0                     l13758:
 15985                           
 15986                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1907:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1909:         return 3;
 15987     0CE0  3003               	movlw	3
 15988     0CE1  2CE3               	goto	l1098
 15989     0CE2                     l1101:
 15990     0CE2  2CBC               	goto	l13728
 15991     0CE3                     l1098:
 15992     0CE3  0008               	return
 15993     0CE4                     __end_of_getAngleEn:
 15994                           
 15995                           	psect	text20
 15996     119F                     __ptext20:	
 15997 ;; *************** function _readRegister *****************
 15998 ;; Defined at:
 15999 ;;		line 176 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;  regAddress      1    wreg     unsigned char 
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;  regAddress      1   10[BANK0 ] unsigned char 
 16004 ;;  regVal          1   11[BANK0 ] unsigned char 
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      unsigned char 
 16007 ;; Registers used:
 16008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16018 ;;Total ram usage:        2 bytes
 16019 ;; Hardware stack levels used: 1
 16020 ;; Hardware stack levels required when called: 13
 16021 ;; This function calls:
 16022 ;;		_i2c_read1ByteRegister
 16023 ;; This function is called by:
 16024 ;;		_setOperatingMode
 16025 ;;		_setMagneticChannel
 16026 ;;		_setXYAxisRange
 16027 ;;		_setZAxisRange
 16028 ;;		_setTemperatureEn
 16029 ;;		_getLowPower
 16030 ;;		_getOperatingMode
 16031 ;;		_getMagneticChannel
 16032 ;;		_getAngleEn
 16033 ;;		_getTemperatureEN
 16034 ;;		_getDeviceStatus
 16035 ;;		_setCRCMode
 16036 ;;		_setMagTemp
 16037 ;;		_setConvAvg
 16038 ;;		_setReadMode
 16039 ;;		_setIntThreshold
 16040 ;;		_setLowPower
 16041 ;;		_setGlitchFilter
 16042 ;;		_setTriggerMode
 16043 ;;		_setSleeptime
 16044 ;;		_setMagDir
 16045 ;;		_setMagnitudeGain
 16046 ;;		_setAngleEn
 16047 ;;		_setInterruptResult
 16048 ;;		_setThresholdEn
 16049 ;;		_setIntPinState
 16050 ;;		_setInterruptMode
 16051 ;;		_setMaskInterrupt
 16052 ;;		_setI2CAddressEN
 16053 ;;		_setOscillatorError
 16054 ;;		_getCRCMode
 16055 ;;		_getMagTemp
 16056 ;;		_getConvAvg
 16057 ;;		_getReadMode
 16058 ;;		_getIntThreshold
 16059 ;;		_getGlitchFiler
 16060 ;;		_getTriggerMode
 16061 ;;		_getSleeptime
 16062 ;;		_getMagDir
 16063 ;;		_getMagnitudeChannelSelect
 16064 ;;		_getMagneticGain
 16065 ;;		_getMagneticOffset1
 16066 ;;		_getMagneticOffset2
 16067 ;;		_getXYAxisRange
 16068 ;;		_getZAxisRange
 16069 ;;		_getXThreshold
 16070 ;;		_getYThreshold
 16071 ;;		_getZThreshold
 16072 ;;		_getTemperatureThreshold
 16073 ;;		_getInterruptResult
 16074 ;;		_getThresholdEn
 16075 ;;		_getIntPinState
 16076 ;;		_getInterruptMode
 16077 ;;		_getMaskInt
 16078 ;;		_getSetCount
 16079 ;;		_getPOR
 16080 ;;		_getDiagStatus
 16081 ;;		_getResultStatus
 16082 ;;		_getI2CAddress
 16083 ;;		_getDeviceID
 16084 ;;		_getInterruptPinStatus
 16085 ;;		_getXData
 16086 ;;		_getYData
 16087 ;;		_getZData
 16088 ;;		_getAngleResult
 16089 ;;		_getMagnitudeResult
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093     119F                     _readRegister:	
 16094                           ;psect for function _readRegister
 16095                           
 16096                           
 16097                           ;incstack = 0
 16098                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16099                           ;readRegister@regAddress stored from wreg
 16100     119F  0140               	movlb	0	; select bank0
 16101     11A0  00AA               	movwf	readRegister@regAddress
 16102     11A1                     l12960:
 16103                           
 16104                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 177:     uint8_t regVa
      +                          l;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 178:     regVal = i2
      +                          c_read1ByteRegister(0X22, regAddress);
 16105     11A1  082A               	movf	readRegister@regAddress,w
 16106     11A2  00A4               	movwf	i2c_read1ByteRegister@reg
 16107     11A3  3022               	movlw	34
 16108     11A4  318E  260F  3191   	fcall	_i2c_read1ByteRegister
 16109     11A7  0140               	movlb	0	; select bank0
 16110     11A8  00AB               	movwf	readRegister@regVal
 16111     11A9                     l12962:
 16112                           
 16113                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 179:     return regVal
      +                          ;
 16114     11A9  082B               	movf	readRegister@regVal,w
 16115     11AA                     l687:
 16116     11AA  0008               	return
 16117     11AB                     __end_of_readRegister:
 16118                           
 16119                           	psect	text21
 16120     13B7                     __ptext21:	
 16121 ;; *************** function _bitRead8 *****************
 16122 ;; Defined at:
 16123 ;;		line 2523 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;  reg             1    wreg     PTR unsigned char 
 16126 ;;		 -> getError@statusReg(1), getInterruptPinStatus@deviceStatusReg(1), getDeviceID@deviceReg(1), getResultStatus@convR
      +eg(1), 
 16127 ;;		 -> getDiagStatus@convReg(1), getPOR@convReg(1), getMaskInt@maskIntReg(1), getInterruptMode@intModeReg(1), 
 16128 ;;		 -> getIntPinState@intStateReg(1), getThresholdEn@threshReg(1), getInterruptResult@intRsltReg(1), getTemperatureEN@t
      +empENreg(1), 
 16129 ;;		 -> getZAxisRange@ZrangeReg(1), getXYAxisRange@XYrangeReg(1), getAngleEn@angleReg(1), getMagnitudeChannelSelect@magG
      +ainReg(1), 
 16130 ;;		 -> getMagDir@magDirectionReg(1), getSleeptime@sleepReg(1), getMagneticChannel@magChannel(1), getOperatingMode@opMod
      +e(1), 
 16131 ;;		 -> getTriggerMode@triggerMode(1), getGlitchFiler@glitchMode(1), getLowPower@lowPowerMode(1), getIntThreshold@interr
      +uptThreshold(1), 
 16132 ;;		 -> getReadMode@readModeReg(1), getConvAvg@convAv(1), getMagTemp@magTemp(1), getCRCMode@getCRC(1), 
 16133 ;;  position        1    1[COMMON] unsigned char 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  reg             1    4[COMMON] PTR unsigned char 
 16136 ;;		 -> getError@statusReg(1), getInterruptPinStatus@deviceStatusReg(1), getDeviceID@deviceReg(1), getResultStatus@convR
      +eg(1), 
 16137 ;;		 -> getDiagStatus@convReg(1), getPOR@convReg(1), getMaskInt@maskIntReg(1), getInterruptMode@intModeReg(1), 
 16138 ;;		 -> getIntPinState@intStateReg(1), getThresholdEn@threshReg(1), getInterruptResult@intRsltReg(1), getTemperatureEN@t
      +empENreg(1), 
 16139 ;;		 -> getZAxisRange@ZrangeReg(1), getXYAxisRange@XYrangeReg(1), getAngleEn@angleReg(1), getMagnitudeChannelSelect@magG
      +ainReg(1), 
 16140 ;;		 -> getMagDir@magDirectionReg(1), getSleeptime@sleepReg(1), getMagneticChannel@magChannel(1), getOperatingMode@opMod
      +e(1), 
 16141 ;;		 -> getTriggerMode@triggerMode(1), getGlitchFiler@glitchMode(1), getLowPower@lowPowerMode(1), getIntThreshold@interr
      +uptThreshold(1), 
 16142 ;;		 -> getReadMode@readModeReg(1), getConvAvg@convAv(1), getMagTemp@magTemp(1), getCRCMode@getCRC(1), 
 16143 ;;  mask            1    3[COMMON] unsigned char 
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  1    wreg      unsigned char 
 16146 ;; Registers used:
 16147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16148 ;; Tracked objects:
 16149 ;;		On entry : 0/0
 16150 ;;		On exit  : 0/0
 16151 ;;		Unchanged: 0/0
 16152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16157 ;;Total ram usage:        4 bytes
 16158 ;; Hardware stack levels used: 1
 16159 ;; Hardware stack levels required when called: 4
 16160 ;; This function calls:
 16161 ;;		Nothing
 16162 ;; This function is called by:
 16163 ;;		_getLowPower
 16164 ;;		_getOperatingMode
 16165 ;;		_getMagneticChannel
 16166 ;;		_getAngleEn
 16167 ;;		_getTemperatureEN
 16168 ;;		_getError
 16169 ;;		_getCRCMode
 16170 ;;		_getMagTemp
 16171 ;;		_getConvAvg
 16172 ;;		_getReadMode
 16173 ;;		_getIntThreshold
 16174 ;;		_getGlitchFiler
 16175 ;;		_getTriggerMode
 16176 ;;		_getSleeptime
 16177 ;;		_getMagDir
 16178 ;;		_getMagnitudeChannelSelect
 16179 ;;		_getXYAxisRange
 16180 ;;		_getZAxisRange
 16181 ;;		_getInterruptResult
 16182 ;;		_getThresholdEn
 16183 ;;		_getIntPinState
 16184 ;;		_getInterruptMode
 16185 ;;		_getMaskInt
 16186 ;;		_getPOR
 16187 ;;		_getDiagStatus
 16188 ;;		_getResultStatus
 16189 ;;		_getDeviceID
 16190 ;;		_getInterruptPinStatus
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194     13B7                     _bitRead8:	
 16195                           ;psect for function _bitRead8
 16196                           
 16197                           
 16198                           ;incstack = 0
 16199                           ; Regs used in _bitRead8: [wreg+fsr1l+fsr1h+status,2+status,0]
 16200                           ;bitRead8@reg stored from wreg
 16201     13B7  00F4               	movwf	bitRead8@reg
 16202     13B8                     l13046:
 16203                           
 16204                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2524:     uint8_t mask
      +                           = (1 << position) & *reg;
 16205     13B8  0874               	movf	bitRead8@reg,w
 16206     13B9  0086               	movwf	6
 16207     13BA  0187               	clrf	7
 16208     13BB  3001               	movlw	1
 16209     13BC  00F2               	movwf	??_bitRead8
 16210     13BD  0A71               	incf	bitRead8@position,w
 16211     13BE  2BC0               	goto	u10194
 16212     13BF                     u10195:
 16213     13BF  35F2               	lslf	??_bitRead8,f
 16214     13C0                     u10194:
 16215     13C0  0B89               	decfsz	9,f
 16216     13C1  2BBF               	goto	u10195
 16217     13C2  0872               	movf	??_bitRead8,w
 16218     13C3  0501               	andwf	1,w
 16219     13C4  00F3               	movwf	bitRead8@mask
 16220     13C5                     l13048:
 16221                           
 16222                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2526:     if (mask == 
      +                          0) {
 16223     13C5  0873               	movf	bitRead8@mask,w
 16224     13C6  1D03               	btfss	3,2
 16225     13C7  2BC9               	goto	u10201
 16226     13C8  2BCA               	goto	u10200
 16227     13C9                     u10201:
 16228     13C9  2BCC               	goto	l13056
 16229     13CA                     u10200:
 16230     13CA                     l13050:
 16231                           
 16232                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2527:         return 0
      +                          ;
 16233     13CA  3000               	movlw	0
 16234     13CB  2BCD               	goto	l1231
 16235     13CC                     l13056:
 16236                           
 16237                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2529:         return 1
      +                          ;
 16238     13CC  3001               	movlw	1
 16239     13CD                     l1231:
 16240     13CD  0008               	return
 16241     13CE                     __end_of_bitRead8:
 16242                           
 16243                           	psect	text22
 16244     1056                     __ptext22:	
 16245 ;; *************** function _TMR0_HasOverflowOccured *****************
 16246 ;; Defined at:
 16247 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;		None
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;		None
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      _Bool 
 16254 ;; Registers used:
 16255 ;;		wreg, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16265 ;;Total ram usage:        0 bytes
 16266 ;; Hardware stack levels used: 1
 16267 ;; Hardware stack levels required when called: 4
 16268 ;; This function calls:
 16269 ;;		Nothing
 16270 ;; This function is called by:
 16271 ;;		_main
 16272 ;; This function uses a non-reentrant model
 16273 ;;
 16274                           
 16275     1056                     _TMR0_HasOverflowOccured:	
 16276                           ;psect for function _TMR0_HasOverflowOccured
 16277                           
 16278     1056                     l14220:	
 16279                           ;incstack = 0
 16280                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16281                           
 16282                           
 16283                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16284     1056  014E               	movlb	14	; select bank14
 16285     1057  0E0C               	swapf	12,w	;volatile
 16286     1058  0C89               	rrf	9,f
 16287     1059  3901               	andlw	1
 16288     105A                     l2154:
 16289     105A  0008               	return
 16290     105B                     __end_of_TMR0_HasOverflowOccured:
 16291                           
 16292                           	psect	text23
 16293     138A                     __ptext23:	
 16294 ;; *************** function _SYSTEM_Initialize *****************
 16295 ;; Defined at:
 16296 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16297 ;; Parameters:    Size  Location     Type
 16298 ;;		None
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;		None
 16301 ;; Return value:  Size  Location     Type
 16302 ;;                  1    wreg      void 
 16303 ;; Registers used:
 16304 ;;		wreg, status,2, status,0, pclath, cstack
 16305 ;; Tracked objects:
 16306 ;;		On entry : 0/0
 16307 ;;		On exit  : 0/0
 16308 ;;		Unchanged: 0/0
 16309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16314 ;;Total ram usage:        0 bytes
 16315 ;; Hardware stack levels used: 1
 16316 ;; Hardware stack levels required when called: 6
 16317 ;; This function calls:
 16318 ;;		_EUSART1_Initialize
 16319 ;;		_EUSART2_Initialize
 16320 ;;		_I2C1_Initialize
 16321 ;;		_OSCILLATOR_Initialize
 16322 ;;		_PIN_MANAGER_Initialize
 16323 ;;		_PMD_Initialize
 16324 ;;		_TMR0_Initialize
 16325 ;; This function is called by:
 16326 ;;		_main
 16327 ;; This function uses a non-reentrant model
 16328 ;;
 16329                           
 16330     138A                     _SYSTEM_Initialize:	
 16331                           ;psect for function _SYSTEM_Initialize
 16332                           
 16333     138A                     l14206:	
 16334                           ;incstack = 0
 16335                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16336                           
 16337                           
 16338                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16339     138A  3191  213A  3193   	fcall	_PMD_Initialize
 16340     138D                     l14208:
 16341                           
 16342                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16343     138D  3191  2109  3193   	fcall	_I2C1_Initialize
 16344     1390                     l14210:
 16345                           
 16346                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16347     1390  318D  252D  3193   	fcall	_PIN_MANAGER_Initialize
 16348     1393                     l14212:
 16349                           
 16350                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16351     1393  3191  2130  3193   	fcall	_OSCILLATOR_Initialize
 16352     1396                     l14214:
 16353                           
 16354                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16355     1396  3193  2320  3193   	fcall	_TMR0_Initialize
 16356     1399                     l14216:
 16357                           
 16358                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16359     1399  318B  2349  3193   	fcall	_EUSART1_Initialize
 16360     139C                     l14218:
 16361                           
 16362                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16363     139C  318B  2388  3193   	fcall	_EUSART2_Initialize
 16364     139F                     l2014:
 16365     139F  0008               	return
 16366     13A0                     __end_of_SYSTEM_Initialize:
 16367                           
 16368                           	psect	text24
 16369     1320                     __ptext24:	
 16370 ;; *************** function _TMR0_Initialize *****************
 16371 ;; Defined at:
 16372 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;		None
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		wreg
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16390 ;;Total ram usage:        0 bytes
 16391 ;; Hardware stack levels used: 1
 16392 ;; Hardware stack levels required when called: 4
 16393 ;; This function calls:
 16394 ;;		Nothing
 16395 ;; This function is called by:
 16396 ;;		_SYSTEM_Initialize
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400     1320                     _TMR0_Initialize:	
 16401                           ;psect for function _TMR0_Initialize
 16402                           
 16403     1320                     l13938:	
 16404                           ;incstack = 0
 16405                           ; Regs used in _TMR0_Initialize: [wreg]
 16406                           
 16407                           
 16408                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16409     1320  3047               	movlw	71
 16410     1321  014B               	movlb	11	; select bank11
 16411     1322  009F               	movwf	31	;volatile
 16412                           
 16413                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16414     1323  300B               	movlw	11
 16415     1324  009D               	movwf	29	;volatile
 16416                           
 16417                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16418     1325  30DC               	movlw	220
 16419     1326  009C               	movwf	28	;volatile
 16420                           
 16421                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16422     1327  081D               	movf	29,w	;volatile
 16423     1328  0140               	movlb	0	; select bank0
 16424     1329  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
 16425     132A  014B               	movlb	11	; select bank11
 16426     132B  081C               	movf	28,w	;volatile
 16427     132C  0140               	movlb	0	; select bank0
 16428     132D  00CC               	movwf	_timer0ReloadVal16bit	;volatile
 16429     132E                     l13940:
 16430                           
 16431                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16432     132E  014E               	movlb	14	; select bank14
 16433     132F  128C               	bcf	12,5	;volatile
 16434                           
 16435                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16436     1330  3090               	movlw	144
 16437     1331  014B               	movlb	11	; select bank11
 16438     1332  009E               	movwf	30	;volatile
 16439     1333                     l2136:
 16440     1333  0008               	return
 16441     1334                     __end_of_TMR0_Initialize:
 16442                           
 16443                           	psect	text25
 16444     113A                     __ptext25:	
 16445 ;; *************** function _PMD_Initialize *****************
 16446 ;; Defined at:
 16447 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16448 ;; Parameters:    Size  Location     Type
 16449 ;;		None
 16450 ;; Auto vars:     Size  Location     Type
 16451 ;;		None
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  1    wreg      void 
 16454 ;; Registers used:
 16455 ;;		status,2
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16465 ;;Total ram usage:        0 bytes
 16466 ;; Hardware stack levels used: 1
 16467 ;; Hardware stack levels required when called: 4
 16468 ;; This function calls:
 16469 ;;		Nothing
 16470 ;; This function is called by:
 16471 ;;		_SYSTEM_Initialize
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475     113A                     _PMD_Initialize:	
 16476                           ;psect for function _PMD_Initialize
 16477                           
 16478     113A                     l13852:	
 16479                           ;incstack = 0
 16480                           ; Regs used in _PMD_Initialize: [status,2]
 16481                           
 16482                           
 16483                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16484     113A  014F               	movlb	15	; select bank15
 16485     113B  0196               	clrf	22	;volatile
 16486                           
 16487                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16488     113C  0197               	clrf	23	;volatile
 16489                           
 16490                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16491     113D  0198               	clrf	24	;volatile
 16492                           
 16493                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16494     113E  0199               	clrf	25	;volatile
 16495                           
 16496                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16497     113F  019A               	clrf	26	;volatile
 16498                           
 16499                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16500     1140  019B               	clrf	27	;volatile
 16501                           
 16502                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16503     1141  019C               	clrf	28	;volatile
 16504                           
 16505                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16506     1142  019D               	clrf	29	;volatile
 16507     1143                     l2020:
 16508     1143  0008               	return
 16509     1144                     __end_of_PMD_Initialize:
 16510                           
 16511                           	psect	text26
 16512     0D2D                     __ptext26:	
 16513 ;; *************** function _PIN_MANAGER_Initialize *****************
 16514 ;; Defined at:
 16515 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16516 ;; Parameters:    Size  Location     Type
 16517 ;;		None
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;		None
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  1    wreg      void 
 16522 ;; Registers used:
 16523 ;;		wreg, status,2, status,0, pclath, cstack
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/0
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16533 ;;Total ram usage:        0 bytes
 16534 ;; Hardware stack levels used: 1
 16535 ;; Hardware stack levels required when called: 5
 16536 ;; This function calls:
 16537 ;;		_IOCAF6_SetInterruptHandler
 16538 ;; This function is called by:
 16539 ;;		_SYSTEM_Initialize
 16540 ;; This function uses a non-reentrant model
 16541 ;;
 16542                           
 16543     0D2D                     _PIN_MANAGER_Initialize:	
 16544                           ;psect for function _PIN_MANAGER_Initialize
 16545                           
 16546     0D2D                     l13862:	
 16547                           ;incstack = 0
 16548                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16549                           
 16550                           
 16551                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16552     0D2D  0140               	movlb	0	; select bank0
 16553     0D2E  019C               	clrf	28	;volatile
 16554     0D2F                     l13864:
 16555                           
 16556                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16557     0D2F  3031               	movlw	49
 16558     0D30  0098               	movwf	24	;volatile
 16559     0D31                     l13866:
 16560                           
 16561                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16562     0D31  0199               	clrf	25	;volatile
 16563                           
 16564                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16565     0D32  30C1               	movlw	193
 16566     0D33  009A               	movwf	26	;volatile
 16567                           
 16568                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16569     0D34  3008               	movlw	8
 16570     0D35  0096               	movwf	22	;volatile
 16571                           
 16572                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16573     0D36  30DE               	movlw	222
 16574     0D37  0092               	movwf	18	;volatile
 16575                           
 16576                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16577     0D38  30EF               	movlw	239
 16578     0D39  0093               	movwf	19	;volatile
 16579                           
 16580                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16581     0D3A  3025               	movlw	37
 16582     0D3B  0094               	movwf	20	;volatile
 16583     0D3C                     l13868:
 16584                           
 16585                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16586     0D3C  017E               	movlb	62	; select bank62
 16587     0D3D  01CE               	clrf	78	;volatile
 16588     0D3E                     l13870:
 16589                           
 16590                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16591     0D3E  30C9               	movlw	201
 16592     0D3F  00C3               	movwf	67	;volatile
 16593     0D40                     l13872:
 16594                           
 16595                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16596     0D40  300E               	movlw	14
 16597     0D41  00B8               	movwf	56	;volatile
 16598     0D42                     l13874:
 16599                           
 16600                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16601     0D42  01E5               	clrf	101	;volatile
 16602     0D43                     l13876:
 16603                           
 16604                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16605     0D43  01C4               	clrf	68	;volatile
 16606     0D44                     l13878:
 16607                           
 16608                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16609     0D44  01B9               	clrf	57	;volatile
 16610     0D45                     l13880:
 16611                           
 16612                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16613     0D45  01CF               	clrf	79	;volatile
 16614     0D46                     l13882:
 16615                           
 16616                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16617     0D46  01E6               	clrf	102	;volatile
 16618     0D47                     l13884:
 16619                           
 16620                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16621     0D47  01BA               	clrf	58	;volatile
 16622     0D48                     l13886:
 16623                           
 16624                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16625     0D48  01C5               	clrf	69	;volatile
 16626     0D49                     l13888:
 16627                           
 16628                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16629     0D49  01D0               	clrf	80	;volatile
 16630     0D4A                     l13890:
 16631                           
 16632                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16633     0D4A  30FF               	movlw	255
 16634     0D4B  00BB               	movwf	59	;volatile
 16635     0D4C                     l13892:
 16636                           
 16637                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16638     0D4C  30FF               	movlw	255
 16639     0D4D  00C6               	movwf	70	;volatile
 16640     0D4E                     l13894:
 16641                           
 16642                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16643     0D4E  30FF               	movlw	255
 16644     0D4F  00D1               	movwf	81	;volatile
 16645     0D50                     l13896:
 16646                           
 16647                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16648     0D50  303F               	movlw	63
 16649     0D51  00BC               	movwf	60	;volatile
 16650     0D52                     l13898:
 16651                           
 16652                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16653     0D52  303F               	movlw	63
 16654     0D53  00C7               	movwf	71	;volatile
 16655     0D54                     l13900:
 16656                           
 16657                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16658     0D54  303F               	movlw	63
 16659     0D55  00D2               	movwf	82	;volatile
 16660     0D56                     l13902:
 16661                           
 16662                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16663     0D56  133F               	bcf	63,6	;volatile
 16664     0D57                     l13904:
 16665                           
 16666                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16667     0D57  133E               	bcf	62,6	;volatile
 16668     0D58                     l13906:
 16669                           
 16670                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16671     0D58  173D               	bsf	61,6	;volatile
 16672     0D59                     l13908:
 16673                           
 16674                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16675     0D59  30D7               	movlw	low _IOCAF6_DefaultInterruptHandler
 16676     0D5A  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16677     0D5B  301F               	movlw	high _IOCAF6_DefaultInterruptHandler
 16678     0D5C  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16679     0D5D  3190  20B5  318D   	fcall	_IOCAF6_SetInterruptHandler
 16680     0D60                     l13910:
 16681                           
 16682                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16683     0D60  014E               	movlb	14	; select bank14
 16684     0D61  1616               	bsf	22,4	;volatile
 16685     0D62                     l13912:
 16686                           
 16687                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16688     0D62  3009               	movlw	9
 16689     0D63  017D               	movlb	61	; select bank61
 16690     0D64  00C5               	movwf	69	;volatile
 16691     0D65                     l13914:
 16692                           
 16693                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16694     0D65  3013               	movlw	19
 16695     0D66  017E               	movlb	62	; select bank62
 16696     0D67  0099               	movwf	25	;volatile
 16697     0D68                     l13916:
 16698                           
 16699                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16700     0D68  3014               	movlw	20
 16701     0D69  009A               	movwf	26	;volatile
 16702     0D6A                     l13918:
 16703                           
 16704                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16705     0D6A  3025               	movlw	37
 16706     0D6B  00A4               	movwf	36	;volatile
 16707     0D6C                     l13920:
 16708                           
 16709                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16710     0D6C  300F               	movlw	15
 16711     0D6D  009C               	movwf	28	;volatile
 16712     0D6E                     l13922:
 16713                           
 16714                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16715     0D6E  3015               	movlw	21
 16716     0D6F  017D               	movlb	61	; select bank61
 16717     0D70  00CD               	movwf	77	;volatile
 16718     0D71                     l13924:
 16719                           
 16720                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16721     0D71  300A               	movlw	10
 16722     0D72  00C6               	movwf	70	;volatile
 16723     0D73                     l13926:
 16724                           
 16725                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16726     0D73  300D               	movlw	13
 16727     0D74  00CB               	movwf	75	;volatile
 16728     0D75                     l2105:
 16729     0D75  0008               	return
 16730     0D76                     __end_of_PIN_MANAGER_Initialize:
 16731                           
 16732                           	psect	text27
 16733     10B5                     __ptext27:	
 16734 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 16735 ;; Defined at:
 16736 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 16737 ;; Parameters:    Size  Location     Type
 16738 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 16739 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 16740 ;; Auto vars:     Size  Location     Type
 16741 ;;		None
 16742 ;; Return value:  Size  Location     Type
 16743 ;;                  1    wreg      void 
 16744 ;; Registers used:
 16745 ;;		wreg
 16746 ;; Tracked objects:
 16747 ;;		On entry : 0/0
 16748 ;;		On exit  : 0/0
 16749 ;;		Unchanged: 0/0
 16750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;Total ram usage:        2 bytes
 16756 ;; Hardware stack levels used: 1
 16757 ;; Hardware stack levels required when called: 4
 16758 ;; This function calls:
 16759 ;;		Nothing
 16760 ;; This function is called by:
 16761 ;;		_PIN_MANAGER_Initialize
 16762 ;; This function uses a non-reentrant model
 16763 ;;
 16764                           
 16765     10B5                     _IOCAF6_SetInterruptHandler:	
 16766                           ;psect for function _IOCAF6_SetInterruptHandler
 16767                           
 16768     10B5                     l13242:	
 16769                           ;incstack = 0
 16770                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 16771                           
 16772                           
 16773                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 16774     10B5  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 16775     10B6  0141               	movlb	1	; select bank1
 16776     10B7  00E7               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 16777     10B8  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 16778     10B9  00E6               	movwf	_IOCAF6_InterruptHandler^(0+128)
 16779     10BA                     l2116:
 16780     10BA  0008               	return
 16781     10BB                     __end_of_IOCAF6_SetInterruptHandler:
 16782                           
 16783                           	psect	text28
 16784     1130                     __ptext28:	
 16785 ;; *************** function _OSCILLATOR_Initialize *****************
 16786 ;; Defined at:
 16787 ;;		line 61 in file "mcc_generated_files/mcc.c"
 16788 ;; Parameters:    Size  Location     Type
 16789 ;;		None
 16790 ;; Auto vars:     Size  Location     Type
 16791 ;;		None
 16792 ;; Return value:  Size  Location     Type
 16793 ;;                  1    wreg      void 
 16794 ;; Registers used:
 16795 ;;		wreg, status,2
 16796 ;; Tracked objects:
 16797 ;;		On entry : 0/0
 16798 ;;		On exit  : 0/0
 16799 ;;		Unchanged: 0/0
 16800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16805 ;;Total ram usage:        0 bytes
 16806 ;; Hardware stack levels used: 1
 16807 ;; Hardware stack levels required when called: 4
 16808 ;; This function calls:
 16809 ;;		Nothing
 16810 ;; This function is called by:
 16811 ;;		_SYSTEM_Initialize
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815     1130                     _OSCILLATOR_Initialize:	
 16816                           ;psect for function _OSCILLATOR_Initialize
 16817                           
 16818     1130                     l13928:	
 16819                           ;incstack = 0
 16820                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16821                           
 16822                           
 16823                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 16824     1130  3060               	movlw	96
 16825     1131  0151               	movlb	17	; select bank17
 16826     1132  008D               	movwf	13	;volatile
 16827     1133                     l13930:
 16828                           
 16829                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 16830     1133  018F               	clrf	15	;volatile
 16831     1134                     l13932:
 16832                           
 16833                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 16834     1134  0191               	clrf	17	;volatile
 16835                           
 16836                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 16837     1135  3006               	movlw	6
 16838     1136  0093               	movwf	19	;volatile
 16839     1137                     l13934:
 16840                           
 16841                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 16842     1137  0190               	clrf	16	;volatile
 16843     1138                     l13936:
 16844                           
 16845                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16846     1138  0192               	clrf	18	;volatile
 16847     1139                     l2017:
 16848     1139  0008               	return
 16849     113A                     __end_of_OSCILLATOR_Initialize:
 16850                           
 16851                           	psect	text29
 16852     1109                     __ptext29:	
 16853 ;; *************** function _I2C1_Initialize *****************
 16854 ;; Defined at:
 16855 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16856 ;; Parameters:    Size  Location     Type
 16857 ;;		None
 16858 ;; Auto vars:     Size  Location     Type
 16859 ;;		None
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  1    wreg      void 
 16862 ;; Registers used:
 16863 ;;		wreg, status,2
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16873 ;;Total ram usage:        0 bytes
 16874 ;; Hardware stack levels used: 1
 16875 ;; Hardware stack levels required when called: 4
 16876 ;; This function calls:
 16877 ;;		Nothing
 16878 ;; This function is called by:
 16879 ;;		_SYSTEM_Initialize
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883     1109                     _I2C1_Initialize:	
 16884                           ;psect for function _I2C1_Initialize
 16885                           
 16886     1109                     l13854:	
 16887                           ;incstack = 0
 16888                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16889                           
 16890                           
 16891                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 16892     1109  0143               	movlb	3	; select bank3
 16893     110A  018F               	clrf	15	;volatile
 16894     110B                     l13856:
 16895                           
 16896                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16897     110B  3008               	movlw	8
 16898     110C  0090               	movwf	16	;volatile
 16899     110D                     l13858:
 16900                           
 16901                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16902     110D  0191               	clrf	17	;volatile
 16903                           
 16904                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 16905     110E  304F               	movlw	79
 16906     110F  008D               	movwf	13	;volatile
 16907     1110                     l13860:
 16908                           
 16909                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16910     1110  1290               	bcf	16,5	;volatile
 16911     1111                     l2404:
 16912     1111  0008               	return
 16913     1112                     __end_of_I2C1_Initialize:
 16914                           
 16915                           	psect	text30
 16916     0B88                     __ptext30:	
 16917 ;; *************** function _EUSART2_Initialize *****************
 16918 ;; Defined at:
 16919 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;		None
 16922 ;; Auto vars:     Size  Location     Type
 16923 ;;		None
 16924 ;; Return value:  Size  Location     Type
 16925 ;;                  1    wreg      void 
 16926 ;; Registers used:
 16927 ;;		wreg, status,2, status,0, pclath, cstack
 16928 ;; Tracked objects:
 16929 ;;		On entry : 0/0
 16930 ;;		On exit  : 0/0
 16931 ;;		Unchanged: 0/0
 16932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16937 ;;Total ram usage:        0 bytes
 16938 ;; Hardware stack levels used: 1
 16939 ;; Hardware stack levels required when called: 5
 16940 ;; This function calls:
 16941 ;;		_EUSART2_SetErrorHandler
 16942 ;;		_EUSART2_SetFramingErrorHandler
 16943 ;;		_EUSART2_SetOverrunErrorHandler
 16944 ;;		_EUSART2_SetRxInterruptHandler
 16945 ;;		_EUSART2_SetTxInterruptHandler
 16946 ;; This function is called by:
 16947 ;;		_SYSTEM_Initialize
 16948 ;; This function uses a non-reentrant model
 16949 ;;
 16950                           
 16951     0B88                     _EUSART2_Initialize:	
 16952                           ;psect for function _EUSART2_Initialize
 16953                           
 16954     0B88                     l13788:	
 16955                           ;incstack = 0
 16956                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16957                           
 16958                           
 16959                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 16960     0B88  014E               	movlb	14	; select bank14
 16961     0B89  1399               	bcf	25,7	;volatile
 16962     0B8A                     l13790:
 16963                           
 16964                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 16965     0B8A  3025               	movlw	low _EUSART2_Receive_ISR
 16966     0B8B  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 16967     0B8C  300A               	movlw	high _EUSART2_Receive_ISR
 16968     0B8D  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 16969     0B8E  3190  20A9  318B   	fcall	_EUSART2_SetRxInterruptHandler
 16970     0B91                     l13792:
 16971                           
 16972                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 16973     0B91  014E               	movlb	14	; select bank14
 16974     0B92  1319               	bcf	25,6	;volatile
 16975                           
 16976                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 16977     0B93  3026               	movlw	low _EUSART2_Transmit_ISR
 16978     0B94  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 16979     0B95  3015               	movlw	high _EUSART2_Transmit_ISR
 16980     0B96  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 16981     0B97  3190  20AF  318B   	fcall	_EUSART2_SetTxInterruptHandler
 16982     0B9A                     l13794:
 16983                           
 16984                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 16985     0B9A  3008               	movlw	8
 16986     0B9B  0154               	movlb	20	; select bank20
 16987     0B9C  009F               	movwf	31	;volatile
 16988     0B9D                     l13796:
 16989                           
 16990                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 16991     0B9D  3090               	movlw	144
 16992     0B9E  009D               	movwf	29	;volatile
 16993     0B9F                     l13798:
 16994                           
 16995                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 16996     0B9F  3024               	movlw	36
 16997     0BA0  009E               	movwf	30	;volatile
 16998     0BA1                     l13800:
 16999                           
 17000                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17001     0BA1  3040               	movlw	64
 17002     0BA2  009B               	movwf	27	;volatile
 17003     0BA3                     l13802:
 17004                           
 17005                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17006     0BA3  3003               	movlw	3
 17007     0BA4  009C               	movwf	28	;volatile
 17008     0BA5                     l13804:
 17009                           
 17010                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17011     0BA5  30D6               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17012     0BA6  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17013     0BA7  301F               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17014     0BA8  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17015     0BA9  3190  209D  318B   	fcall	_EUSART2_SetFramingErrorHandler
 17016     0BAC                     l13806:
 17017                           
 17018                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17019     0BAC  3006               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17020     0BAD  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17021     0BAE  3010               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17022     0BAF  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17023     0BB0  3190  20A3  318B   	fcall	_EUSART2_SetOverrunErrorHandler
 17024     0BB3                     l13808:
 17025                           
 17026                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17027     0BB3  3002               	movlw	low _EUSART2_DefaultErrorHandler
 17028     0BB4  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17029     0BB5  3010               	movlw	high _EUSART2_DefaultErrorHandler
 17030     0BB6  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17031     0BB7  3190  2097  318B   	fcall	_EUSART2_SetErrorHandler
 17032     0BBA                     l13810:
 17033                           
 17034                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17035     0BBA  0141               	movlb	1	; select bank1
 17036     0BBB  01DF               	clrf	_eusart2RxLastError^(0+128)	;volatile
 17037     0BBC                     l13812:
 17038                           
 17039                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17040     0BBC  0140               	movlb	0	; select bank0
 17041     0BBD  01DD               	clrf	_eusart2TxHead	;volatile
 17042     0BBE                     l13814:
 17043                           
 17044                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17045     0BBE  01DC               	clrf	_eusart2TxTail	;volatile
 17046     0BBF                     l13816:
 17047                           
 17048                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17049     0BBF  3008               	movlw	8
 17050     0BC0  00DB               	movwf	_eusart2TxBufferRemaining	;volatile
 17051                           
 17052                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17053     0BC1  01FC               	clrf	_eusart2RxHead	;volatile
 17054                           
 17055                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17056     0BC2  01DA               	clrf	_eusart2RxTail	;volatile
 17057                           
 17058                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17059     0BC3  01D9               	clrf	_eusart2RxCount	;volatile
 17060     0BC4                     l13818:
 17061                           
 17062                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17063     0BC4  014E               	movlb	14	; select bank14
 17064     0BC5  1799               	bsf	25,7	;volatile
 17065     0BC6                     l1713:
 17066     0BC6  0008               	return
 17067     0BC7                     __end_of_EUSART2_Initialize:
 17068                           
 17069                           	psect	text31
 17070     10AF                     __ptext31:	
 17071 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17072 ;; Defined at:
 17073 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17076 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		wreg
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17092 ;;Total ram usage:        2 bytes
 17093 ;; Hardware stack levels used: 1
 17094 ;; Hardware stack levels required when called: 4
 17095 ;; This function calls:
 17096 ;;		Nothing
 17097 ;; This function is called by:
 17098 ;;		_EUSART2_Initialize
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102     10AF                     _EUSART2_SetTxInterruptHandler:	
 17103                           ;psect for function _EUSART2_SetTxInterruptHandler
 17104                           
 17105     10AF                     l13224:	
 17106                           ;incstack = 0
 17107                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17108                           
 17109                           
 17110                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17111     10AF  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17112     10B0  0141               	movlb	1	; select bank1
 17113     10B1  00ED               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17114     10B2  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17115     10B3  00EC               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17116     10B4                     l1779:
 17117     10B4  0008               	return
 17118     10B5                     __end_of_EUSART2_SetTxInterruptHandler:
 17119                           
 17120                           	psect	text32
 17121     10A9                     __ptext32:	
 17122 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17123 ;; Defined at:
 17124 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17127 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17128 ;; Auto vars:     Size  Location     Type
 17129 ;;		None
 17130 ;; Return value:  Size  Location     Type
 17131 ;;                  1    wreg      void 
 17132 ;; Registers used:
 17133 ;;		wreg
 17134 ;; Tracked objects:
 17135 ;;		On entry : 0/0
 17136 ;;		On exit  : 0/0
 17137 ;;		Unchanged: 0/0
 17138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17143 ;;Total ram usage:        2 bytes
 17144 ;; Hardware stack levels used: 1
 17145 ;; Hardware stack levels required when called: 4
 17146 ;; This function calls:
 17147 ;;		Nothing
 17148 ;; This function is called by:
 17149 ;;		_EUSART2_Initialize
 17150 ;; This function uses a non-reentrant model
 17151 ;;
 17152                           
 17153     10A9                     _EUSART2_SetRxInterruptHandler:	
 17154                           ;psect for function _EUSART2_SetRxInterruptHandler
 17155                           
 17156     10A9                     l13222:	
 17157                           ;incstack = 0
 17158                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17159                           
 17160                           
 17161                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17162     10A9  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17163     10AA  0141               	movlb	1	; select bank1
 17164     10AB  00EB               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17165     10AC  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17166     10AD  00EA               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17167     10AE                     l1782:
 17168     10AE  0008               	return
 17169     10AF                     __end_of_EUSART2_SetRxInterruptHandler:
 17170                           
 17171                           	psect	text33
 17172     10A3                     __ptext33:	
 17173 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17174 ;; Defined at:
 17175 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17178 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		wreg
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17194 ;;Total ram usage:        2 bytes
 17195 ;; Hardware stack levels used: 1
 17196 ;; Hardware stack levels required when called: 4
 17197 ;; This function calls:
 17198 ;;		Nothing
 17199 ;; This function is called by:
 17200 ;;		_EUSART2_Initialize
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204     10A3                     _EUSART2_SetOverrunErrorHandler:	
 17205                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17206                           
 17207     10A3                     l13228:	
 17208                           ;incstack = 0
 17209                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17210                           
 17211                           
 17212                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17213     10A3  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17214     10A4  0142               	movlb	2	; select bank2
 17215     10A5  00E9               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17216     10A6  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17217     10A7  00E8               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17218     10A8                     l1773:
 17219     10A8  0008               	return
 17220     10A9                     __end_of_EUSART2_SetOverrunErrorHandler:
 17221                           
 17222                           	psect	text34
 17223     109D                     __ptext34:	
 17224 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17225 ;; Defined at:
 17226 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17229 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17230 ;; Auto vars:     Size  Location     Type
 17231 ;;		None
 17232 ;; Return value:  Size  Location     Type
 17233 ;;                  1    wreg      void 
 17234 ;; Registers used:
 17235 ;;		wreg
 17236 ;; Tracked objects:
 17237 ;;		On entry : 0/0
 17238 ;;		On exit  : 0/0
 17239 ;;		Unchanged: 0/0
 17240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17245 ;;Total ram usage:        2 bytes
 17246 ;; Hardware stack levels used: 1
 17247 ;; Hardware stack levels required when called: 4
 17248 ;; This function calls:
 17249 ;;		Nothing
 17250 ;; This function is called by:
 17251 ;;		_EUSART2_Initialize
 17252 ;; This function uses a non-reentrant model
 17253 ;;
 17254                           
 17255     109D                     _EUSART2_SetFramingErrorHandler:	
 17256                           ;psect for function _EUSART2_SetFramingErrorHandler
 17257                           
 17258     109D                     l13226:	
 17259                           ;incstack = 0
 17260                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17261                           
 17262                           
 17263                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17264     109D  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17265     109E  0141               	movlb	1	; select bank1
 17266     109F  00E9               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+128)
 17267     10A0  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17268     10A1  00E8               	movwf	_EUSART2_FramingErrorHandler^(0+128)
 17269     10A2                     l1770:
 17270     10A2  0008               	return
 17271     10A3                     __end_of_EUSART2_SetFramingErrorHandler:
 17272                           
 17273                           	psect	text35
 17274     1097                     __ptext35:	
 17275 ;; *************** function _EUSART2_SetErrorHandler *****************
 17276 ;; Defined at:
 17277 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17280 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;                  1    wreg      void 
 17285 ;; Registers used:
 17286 ;;		wreg
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/0
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17296 ;;Total ram usage:        2 bytes
 17297 ;; Hardware stack levels used: 1
 17298 ;; Hardware stack levels required when called: 4
 17299 ;; This function calls:
 17300 ;;		Nothing
 17301 ;; This function is called by:
 17302 ;;		_EUSART2_Initialize
 17303 ;; This function uses a non-reentrant model
 17304 ;;
 17305                           
 17306     1097                     _EUSART2_SetErrorHandler:	
 17307                           ;psect for function _EUSART2_SetErrorHandler
 17308                           
 17309     1097                     l13230:	
 17310                           ;incstack = 0
 17311                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17312                           
 17313                           
 17314                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17315     1097  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17316     1098  0142               	movlb	2	; select bank2
 17317     1099  00E7               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17318     109A  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17319     109B  00E6               	movwf	_EUSART2_ErrorHandler^(0+256)
 17320     109C                     l1776:
 17321     109C  0008               	return
 17322     109D                     __end_of_EUSART2_SetErrorHandler:
 17323                           
 17324                           	psect	text36
 17325     0B49                     __ptext36:	
 17326 ;; *************** function _EUSART1_Initialize *****************
 17327 ;; Defined at:
 17328 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17329 ;; Parameters:    Size  Location     Type
 17330 ;;		None
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;		None
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  1    wreg      void 
 17335 ;; Registers used:
 17336 ;;		wreg, status,2, status,0, pclath, cstack
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17346 ;;Total ram usage:        0 bytes
 17347 ;; Hardware stack levels used: 1
 17348 ;; Hardware stack levels required when called: 5
 17349 ;; This function calls:
 17350 ;;		_EUSART1_SetErrorHandler
 17351 ;;		_EUSART1_SetFramingErrorHandler
 17352 ;;		_EUSART1_SetOverrunErrorHandler
 17353 ;;		_EUSART1_SetRxInterruptHandler
 17354 ;;		_EUSART1_SetTxInterruptHandler
 17355 ;; This function is called by:
 17356 ;;		_SYSTEM_Initialize
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           
 17360     0B49                     _EUSART1_Initialize:	
 17361                           ;psect for function _EUSART1_Initialize
 17362                           
 17363     0B49                     l13820:	
 17364                           ;incstack = 0
 17365                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17366                           
 17367                           
 17368                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17369     0B49  014E               	movlb	14	; select bank14
 17370     0B4A  1299               	bcf	25,5	;volatile
 17371     0B4B                     l13822:
 17372                           
 17373                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17374     0B4B  300C               	movlw	low _EUSART1_Receive_ISR
 17375     0B4C  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17376     0B4D  300B               	movlw	high _EUSART1_Receive_ISR
 17377     0B4E  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17378     0B4F  3190  208B  318B   	fcall	_EUSART1_SetRxInterruptHandler
 17379     0B52                     l13824:
 17380                           
 17381                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17382     0B52  014E               	movlb	14	; select bank14
 17383     0B53  1219               	bcf	25,4	;volatile
 17384                           
 17385                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17386     0B54  3048               	movlw	low _EUSART1_Transmit_ISR
 17387     0B55  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17388     0B56  3015               	movlw	high _EUSART1_Transmit_ISR
 17389     0B57  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17390     0B58  3190  2091  318B   	fcall	_EUSART1_SetTxInterruptHandler
 17391     0B5B                     l13826:
 17392                           
 17393                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17394     0B5B  3008               	movlw	8
 17395     0B5C  0142               	movlb	2	; select bank2
 17396     0B5D  009F               	movwf	31	;volatile
 17397     0B5E                     l13828:
 17398                           
 17399                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17400     0B5E  3090               	movlw	144
 17401     0B5F  009D               	movwf	29	;volatile
 17402     0B60                     l13830:
 17403                           
 17404                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17405     0B60  3024               	movlw	36
 17406     0B61  009E               	movwf	30	;volatile
 17407     0B62                     l13832:
 17408                           
 17409                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17410     0B62  3040               	movlw	64
 17411     0B63  009B               	movwf	27	;volatile
 17412     0B64                     l13834:
 17413                           
 17414                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17415     0B64  3003               	movlw	3
 17416     0B65  009C               	movwf	28	;volatile
 17417     0B66                     l13836:
 17418                           
 17419                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17420     0B66  30D5               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17421     0B67  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17422     0B68  301F               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17423     0B69  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17424     0B6A  3190  207F  318B   	fcall	_EUSART1_SetFramingErrorHandler
 17425     0B6D                     l13838:
 17426                           
 17427                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17428     0B6D  30FC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17429     0B6E  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17430     0B6F  301F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17431     0B70  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17432     0B71  3190  2085  318B   	fcall	_EUSART1_SetOverrunErrorHandler
 17433     0B74                     l13840:
 17434                           
 17435                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17436     0B74  30F8               	movlw	low _EUSART1_DefaultErrorHandler
 17437     0B75  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17438     0B76  301F               	movlw	high _EUSART1_DefaultErrorHandler
 17439     0B77  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17440     0B78  3190  2079  318B   	fcall	_EUSART1_SetErrorHandler
 17441     0B7B                     l13842:
 17442                           
 17443                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17444     0B7B  0141               	movlb	1	; select bank1
 17445     0B7C  01DE               	clrf	_eusart1RxLastError^(0+128)	;volatile
 17446     0B7D                     l13844:
 17447                           
 17448                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17449     0B7D  0140               	movlb	0	; select bank0
 17450     0B7E  01D8               	clrf	_eusart1TxHead	;volatile
 17451     0B7F                     l13846:
 17452                           
 17453                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17454     0B7F  01D7               	clrf	_eusart1TxTail	;volatile
 17455     0B80                     l13848:
 17456                           
 17457                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17458     0B80  3008               	movlw	8
 17459     0B81  00D6               	movwf	_eusart1TxBufferRemaining	;volatile
 17460                           
 17461                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17462     0B82  01D5               	clrf	_eusart1RxHead	;volatile
 17463                           
 17464                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17465     0B83  01D4               	clrf	_eusart1RxTail	;volatile
 17466                           
 17467                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17468     0B84  01D3               	clrf	_eusart1RxCount	;volatile
 17469     0B85                     l13850:
 17470                           
 17471                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17472     0B85  014E               	movlb	14	; select bank14
 17473     0B86  1699               	bsf	25,5	;volatile
 17474     0B87                     l1857:
 17475     0B87  0008               	return
 17476     0B88                     __end_of_EUSART1_Initialize:
 17477                           
 17478                           	psect	text37
 17479     1091                     __ptext37:	
 17480 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17481 ;; Defined at:
 17482 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17485 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;		None
 17488 ;; Return value:  Size  Location     Type
 17489 ;;                  1    wreg      void 
 17490 ;; Registers used:
 17491 ;;		wreg
 17492 ;; Tracked objects:
 17493 ;;		On entry : 0/0
 17494 ;;		On exit  : 0/0
 17495 ;;		Unchanged: 0/0
 17496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17501 ;;Total ram usage:        2 bytes
 17502 ;; Hardware stack levels used: 1
 17503 ;; Hardware stack levels required when called: 4
 17504 ;; This function calls:
 17505 ;;		Nothing
 17506 ;; This function is called by:
 17507 ;;		_EUSART1_Initialize
 17508 ;; This function uses a non-reentrant model
 17509 ;;
 17510                           
 17511     1091                     _EUSART1_SetTxInterruptHandler:	
 17512                           ;psect for function _EUSART1_SetTxInterruptHandler
 17513                           
 17514     1091                     l13234:	
 17515                           ;incstack = 0
 17516                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17517                           
 17518                           
 17519                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17520     1091  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17521     1092  0142               	movlb	2	; select bank2
 17522     1093  00E5               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17523     1094  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17524     1095  00E4               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17525     1096                     l1929:
 17526     1096  0008               	return
 17527     1097                     __end_of_EUSART1_SetTxInterruptHandler:
 17528                           
 17529                           	psect	text38
 17530     108B                     __ptext38:	
 17531 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17532 ;; Defined at:
 17533 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17536 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;		None
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      void 
 17541 ;; Registers used:
 17542 ;;		wreg
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17552 ;;Total ram usage:        2 bytes
 17553 ;; Hardware stack levels used: 1
 17554 ;; Hardware stack levels required when called: 4
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		_EUSART1_Initialize
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562     108B                     _EUSART1_SetRxInterruptHandler:	
 17563                           ;psect for function _EUSART1_SetRxInterruptHandler
 17564                           
 17565     108B                     l13232:	
 17566                           ;incstack = 0
 17567                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17568                           
 17569                           
 17570                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17571     108B  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17572     108C  0142               	movlb	2	; select bank2
 17573     108D  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17574     108E  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17575     108F  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17576     1090                     l1932:
 17577     1090  0008               	return
 17578     1091                     __end_of_EUSART1_SetRxInterruptHandler:
 17579                           
 17580                           	psect	text39
 17581     1085                     __ptext39:	
 17582 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17583 ;; Defined at:
 17584 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17587 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1    wreg      void 
 17592 ;; Registers used:
 17593 ;;		wreg
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17603 ;;Total ram usage:        2 bytes
 17604 ;; Hardware stack levels used: 1
 17605 ;; Hardware stack levels required when called: 4
 17606 ;; This function calls:
 17607 ;;		Nothing
 17608 ;; This function is called by:
 17609 ;;		_EUSART1_Initialize
 17610 ;; This function uses a non-reentrant model
 17611 ;;
 17612                           
 17613     1085                     _EUSART1_SetOverrunErrorHandler:	
 17614                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17615                           
 17616     1085                     l13238:	
 17617                           ;incstack = 0
 17618                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17619                           
 17620                           
 17621                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17622     1085  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17623     1086  0142               	movlb	2	; select bank2
 17624     1087  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17625     1088  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17626     1089  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17627     108A                     l1923:
 17628     108A  0008               	return
 17629     108B                     __end_of_EUSART1_SetOverrunErrorHandler:
 17630                           
 17631                           	psect	text40
 17632     107F                     __ptext40:	
 17633 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17634 ;; Defined at:
 17635 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17638 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17639 ;; Auto vars:     Size  Location     Type
 17640 ;;		None
 17641 ;; Return value:  Size  Location     Type
 17642 ;;                  1    wreg      void 
 17643 ;; Registers used:
 17644 ;;		wreg
 17645 ;; Tracked objects:
 17646 ;;		On entry : 0/0
 17647 ;;		On exit  : 0/0
 17648 ;;		Unchanged: 0/0
 17649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17654 ;;Total ram usage:        2 bytes
 17655 ;; Hardware stack levels used: 1
 17656 ;; Hardware stack levels required when called: 4
 17657 ;; This function calls:
 17658 ;;		Nothing
 17659 ;; This function is called by:
 17660 ;;		_EUSART1_Initialize
 17661 ;; This function uses a non-reentrant model
 17662 ;;
 17663                           
 17664     107F                     _EUSART1_SetFramingErrorHandler:	
 17665                           ;psect for function _EUSART1_SetFramingErrorHandler
 17666                           
 17667     107F                     l13236:	
 17668                           ;incstack = 0
 17669                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17670                           
 17671                           
 17672                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17673     107F  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17674     1080  0142               	movlb	2	; select bank2
 17675     1081  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17676     1082  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17677     1083  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17678     1084                     l1920:
 17679     1084  0008               	return
 17680     1085                     __end_of_EUSART1_SetFramingErrorHandler:
 17681                           
 17682                           	psect	text41
 17683     1079                     __ptext41:	
 17684 ;; *************** function _EUSART1_SetErrorHandler *****************
 17685 ;; Defined at:
 17686 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17689 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17690 ;; Auto vars:     Size  Location     Type
 17691 ;;		None
 17692 ;; Return value:  Size  Location     Type
 17693 ;;                  1    wreg      void 
 17694 ;; Registers used:
 17695 ;;		wreg
 17696 ;; Tracked objects:
 17697 ;;		On entry : 0/0
 17698 ;;		On exit  : 0/0
 17699 ;;		Unchanged: 0/0
 17700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17705 ;;Total ram usage:        2 bytes
 17706 ;; Hardware stack levels used: 1
 17707 ;; Hardware stack levels required when called: 4
 17708 ;; This function calls:
 17709 ;;		Nothing
 17710 ;; This function is called by:
 17711 ;;		_EUSART1_Initialize
 17712 ;; This function uses a non-reentrant model
 17713 ;;
 17714                           
 17715     1079                     _EUSART1_SetErrorHandler:	
 17716                           ;psect for function _EUSART1_SetErrorHandler
 17717                           
 17718     1079                     l13240:	
 17719                           ;incstack = 0
 17720                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17721                           
 17722                           
 17723                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17724     1079  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17725     107A  0142               	movlb	2	; select bank2
 17726     107B  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 17727     107C  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17728     107D  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
 17729     107E                     l1926:
 17730     107E  0008               	return
 17731     107F                     __end_of_EUSART1_SetErrorHandler:
 17732                           
 17733                           	psect	text42
 17734     1374                     __ptext42:	
 17735 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 17736 ;; Defined at:
 17737 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 17738 ;; Parameters:    Size  Location     Type
 17739 ;;  pBuffer         1    wreg     PTR unsigned char 
 17740 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), 
 17741 ;;  len             1    1[COMMON] unsigned char 
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  pBuffer         1    2[COMMON] PTR unsigned char 
 17744 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), 
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  1    wreg      _Bool 
 17747 ;; Registers used:
 17748 ;;		wreg, status,2, status,0
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17754 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17758 ;;Total ram usage:        2 bytes
 17759 ;; Hardware stack levels used: 1
 17760 ;; Hardware stack levels required when called: 4
 17761 ;; This function calls:
 17762 ;;		Nothing
 17763 ;; This function is called by:
 17764 ;;		_main
 17765 ;;		_RN487X_Example_Initialized
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769     1374                     _RN487X_SetAsyncMessageHandler:	
 17770                           ;psect for function _RN487X_SetAsyncMessageHandler
 17771                           
 17772                           
 17773                           ;incstack = 0
 17774                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 17775                           ;RN487X_SetAsyncMessageHandler@pBuffer stored from wreg
 17776     1374  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 17777     1375                     l14168:
 17778                           
 17779                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 17780     1375  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 17781     1376  1903               	btfsc	3,2
 17782     1377  2B79               	goto	u11651
 17783     1378  2B7A               	goto	u11650
 17784     1379                     u11651:
 17785     1379  2B88               	goto	l14182
 17786     137A                     u11650:
 17787     137A                     l14170:
 17788     137A  3002               	movlw	2
 17789     137B  0271               	subwf	RN487X_SetAsyncMessageHandler@len,w
 17790     137C  1C03               	skipc
 17791     137D  2B7F               	goto	u11661
 17792     137E  2B80               	goto	u11660
 17793     137F                     u11661:
 17794     137F  2B88               	goto	l14182
 17795     1380                     u11660:
 17796     1380                     l14172:
 17797                           
 17798                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 17799     1380  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 17800     1381  0140               	movlb	0	; select bank0
 17801     1382  00E3               	movwf	_asyncBuffer
 17802     1383                     l14174:
 17803                           
 17804                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 17805     1383  0871               	movf	RN487X_SetAsyncMessageHandler@len,w
 17806     1384  3EFF               	addlw	255
 17807     1385  00E2               	movwf	_asyncBufferSize
 17808     1386                     l14176:
 17809                           
 17810                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 17811     1386  3001               	movlw	1
 17812     1387  2B89               	goto	l1614
 17813     1388                     l14182:
 17814                           
 17815                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 17816     1388  3000               	movlw	0
 17817     1389                     l1614:
 17818     1389  0008               	return
 17819     138A                     __end_of_RN487X_SetAsyncMessageHandler:
 17820                           
 17821                           	psect	text43
 17822     1193                     __ptext43:	
 17823 ;; *************** function _RN487X_Read *****************
 17824 ;; Defined at:
 17825 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 17826 ;; Parameters:    Size  Location     Type
 17827 ;;		None
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;		None
 17830 ;; Return value:  Size  Location     Type
 17831 ;;                  1    wreg      unsigned char 
 17832 ;; Registers used:
 17833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17834 ;; Tracked objects:
 17835 ;;		On entry : 0/0
 17836 ;;		On exit  : 0/0
 17837 ;;		Unchanged: 0/0
 17838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17843 ;;Total ram usage:        0 bytes
 17844 ;; Hardware stack levels used: 1
 17845 ;; Hardware stack levels required when called: 9
 17846 ;; This function calls:
 17847 ;;		_RN487X_DataReady
 17848 ;; This function is called by:
 17849 ;;		_main
 17850 ;;		_RN487X_Example_TransparentUart
 17851 ;; This function uses a non-reentrant model
 17852 ;;
 17853                           
 17854     1193                     _RN487X_Read:	
 17855                           ;psect for function _RN487X_Read
 17856                           
 17857     1193                     l14190:	
 17858                           ;incstack = 0
 17859                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17860                           
 17861     1193                     l14192:	
 17862                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 17863                           
 17864     1193  3194  24E9  3191   	fcall	_RN487X_DataReady
 17865     1196  3A00               	xorlw	0
 17866     1197  1903               	skipnz
 17867     1198  299A               	goto	u11671
 17868     1199  299B               	goto	u11670
 17869     119A                     u11671:
 17870     119A  2993               	goto	l14192
 17871     119B                     u11670:
 17872     119B                     l14194:
 17873                           
 17874                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 17875     119B  0140               	movlb	0	; select bank0
 17876     119C  01DF               	clrf	_dataReady
 17877     119D                     l14196:
 17878                           
 17879                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 17880     119D  0860               	movf	_peek,w
 17881     119E                     l1626:
 17882     119E  0008               	return
 17883     119F                     __end_of_RN487X_Read:
 17884                           
 17885                           	psect	text44
 17886     14E9                     __ptext44:	
 17887 ;; *************** function _RN487X_DataReady *****************
 17888 ;; Defined at:
 17889 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;		None
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;		None
 17894 ;; Return value:  Size  Location     Type
 17895 ;;                  1    wreg      _Bool 
 17896 ;; Registers used:
 17897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17907 ;;Total ram usage:        0 bytes
 17908 ;; Hardware stack levels used: 1
 17909 ;; Hardware stack levels required when called: 8
 17910 ;; This function calls:
 17911 ;;		_RN487X_FilterData
 17912 ;;		_RN487X_is_rx_ready
 17913 ;; This function is called by:
 17914 ;;		_RN487X_Read
 17915 ;;		_main
 17916 ;;		_RN487X_Example_TransparentUart
 17917 ;; This function uses a non-reentrant model
 17918 ;;
 17919                           
 17920     14E9                     _RN487X_DataReady:	
 17921                           ;psect for function _RN487X_DataReady
 17922                           
 17923     14E9                     l13766:	
 17924                           ;incstack = 0
 17925                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17926                           
 17927                           
 17928                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 17929     14E9  0140               	movlb	0	; select bank0
 17930     14EA  085F               	movf	_dataReady,w
 17931     14EB  1903               	btfsc	3,2
 17932     14EC  2CEE               	goto	u11381
 17933     14ED  2CEF               	goto	u11380
 17934     14EE                     u11381:
 17935     14EE  2CF1               	goto	l13772
 17936     14EF                     u11380:
 17937     14EF                     l13768:
 17938                           
 17939                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 17940     14EF  3001               	movlw	1
 17941     14F0  2D04               	goto	l1619
 17942     14F1                     l13772:
 17943                           
 17944                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 17945     14F1  306E               	movlw	low ((_RN487X+6)| (0+32768))
 17946     14F2  0084               	movwf	4
 17947     14F3  3098               	movlw	high ((_RN487X+6)| (0+32768))
 17948     14F4  0085               	movwf	5
 17949     14F5  3F01               	moviw [1]fsr0
 17950     14F6  008A               	movwf	10
 17951     14F7  3F00               	moviw [0]fsr0
 17952     14F8  000A               	callw
 17953     14F9  3194               	pagesel	$
 17954     14FA  3A00               	xorlw	0
 17955     14FB  1903               	skipnz
 17956     14FC  2CFE               	goto	u11391
 17957     14FD  2CFF               	goto	u11390
 17958     14FE                     u11391:
 17959     14FE  2D03               	goto	l13778
 17960     14FF                     u11390:
 17961     14FF                     l13774:
 17962                           
 17963                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 17964     14FF  318D  2576  3194   	fcall	_RN487X_FilterData
 17965     1502  2D04               	goto	l1619
 17966     1503                     l13778:
 17967                           
 17968                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 17969     1503  3000               	movlw	0
 17970     1504                     l1619:
 17971     1504  0008               	return
 17972     1505                     __end_of_RN487X_DataReady:
 17973                           
 17974                           	psect	text45
 17975     0D76                     __ptext45:	
 17976 ;; *************** function _RN487X_FilterData *****************
 17977 ;; Defined at:
 17978 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;		None
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;  readChar        1   36[BANK0 ] unsigned char 
 17983 ;; Return value:  Size  Location     Type
 17984 ;;                  1    wreg      _Bool 
 17985 ;; Registers used:
 17986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17987 ;; Tracked objects:
 17988 ;;		On entry : 0/0
 17989 ;;		On exit  : 0/0
 17990 ;;		Unchanged: 0/0
 17991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17996 ;;Total ram usage:        2 bytes
 17997 ;; Hardware stack levels used: 1
 17998 ;; Hardware stack levels required when called: 7
 17999 ;; This function calls:
 18000 ;;		_RN487X_MessageHandler
 18001 ;;		_RN487X_Read@rn487x_interface$F1831
 18002 ;; This function is called by:
 18003 ;;		_RN487X_DataReady
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007     0D76                     _RN487X_FilterData:	
 18008                           ;psect for function _RN487X_FilterData
 18009                           
 18010     0D76                     l13194:	
 18011                           ;incstack = 0
 18012                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18013                           
 18014                           
 18015                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18016     0D76  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18017     0D77  0084               	movwf	4
 18018     0D78  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18019     0D79  0085               	movwf	5
 18020     0D7A  3F01               	moviw [1]fsr0
 18021     0D7B  008A               	movwf	10
 18022     0D7C  3F00               	moviw [0]fsr0
 18023     0D7D  000A               	callw
 18024     0D7E  318D               	pagesel	$
 18025     0D7F  0140               	movlb	0	; select bank0
 18026     0D80  00C4               	movwf	RN487X_FilterData@readChar
 18027     0D81                     l13196:
 18028                           
 18029                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18030     0D81  035E               	decf	RN487X_FilterData@asyncBuffering,w
 18031     0D82  1D03               	btfss	3,2
 18032     0D83  2D85               	goto	u10361
 18033     0D84  2D86               	goto	u10360
 18034     0D85                     u10361:
 18035     0D85  2DB0               	goto	l13212
 18036     0D86                     u10360:
 18037     0D86                     l13198:
 18038                           
 18039                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18040     0D86  3025               	movlw	37
 18041     0D87  0644               	xorwf	RN487X_FilterData@readChar,w
 18042     0D88  1D03               	btfss	3,2
 18043     0D89  2D8B               	goto	u10371
 18044     0D8A  2D8C               	goto	u10370
 18045     0D8B                     u10371:
 18046     0D8B  2D9E               	goto	l13206
 18047     0D8C                     u10370:
 18048     0D8C                     l13200:
 18049                           
 18050                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18051     0D8C  01DE               	clrf	RN487X_FilterData@asyncBuffering
 18052     0D8D                     l13202:
 18053                           
 18054                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18055     0D8D  0861               	movf	_pHead,w
 18056     0D8E  0086               	movwf	6
 18057     0D8F  3003               	movlw	3	; select bank6/7
 18058     0D90  0087               	movwf	7
 18059     0D91  0181               	clrf	1
 18060     0D92                     l13204:
 18061                           
 18062                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18063     0D92  0863               	movf	_asyncBuffer,w
 18064     0D93  00FB               	movwf	RN487X_MessageHandler@message
 18065     0D94  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18066     0D95  0084               	movwf	4
 18067     0D96  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18068     0D97  0085               	movwf	5
 18069     0D98  3F01               	moviw [1]fsr0
 18070     0D99  008A               	movwf	10
 18071     0D9A  3F00               	moviw [0]fsr0
 18072     0D9B  000A               	callw
 18073     0D9C  318D               	pagesel	$
 18074                           
 18075                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18076     0D9D  2DBF               	goto	l1635
 18077     0D9E                     l13206:
 18078     0D9E  0863               	movf	_asyncBuffer,w
 18079     0D9F  0762               	addwf	_asyncBufferSize,w
 18080     0DA0  0261               	subwf	_pHead,w
 18081     0DA1  1803               	skipnc
 18082     0DA2  2DA4               	goto	u10381
 18083     0DA3  2DA5               	goto	u10380
 18084     0DA4                     u10381:
 18085     0DA4  2DBF               	goto	l1635
 18086     0DA5                     u10380:
 18087     0DA5                     l13208:
 18088                           
 18089                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18090     0DA5  0861               	movf	_pHead,w
 18091     0DA6  0086               	movwf	6
 18092     0DA7  3003               	movlw	3	; select bank6/7
 18093     0DA8  0087               	movwf	7
 18094     0DA9  0844               	movf	RN487X_FilterData@readChar,w
 18095     0DAA  0081               	movwf	1
 18096     0DAB                     l13210:
 18097     0DAB  3001               	movlw	1
 18098     0DAC  00C3               	movwf	??_RN487X_FilterData
 18099     0DAD  0843               	movf	??_RN487X_FilterData,w
 18100     0DAE  07E1               	addwf	_pHead,f
 18101     0DAF  2DBF               	goto	l1635
 18102     0DB0                     l13212:
 18103                           
 18104                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18105     0DB0  3025               	movlw	37
 18106     0DB1  0644               	xorwf	RN487X_FilterData@readChar,w
 18107     0DB2  1D03               	btfss	3,2
 18108     0DB3  2DB5               	goto	u10391
 18109     0DB4  2DB6               	goto	u10390
 18110     0DB5                     u10391:
 18111     0DB5  2DBB               	goto	l1636
 18112     0DB6                     u10390:
 18113     0DB6                     l13214:
 18114                           
 18115                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18116     0DB6  01DE               	clrf	RN487X_FilterData@asyncBuffering
 18117     0DB7  0ADE               	incf	RN487X_FilterData@asyncBuffering,f
 18118     0DB8                     l13216:
 18119                           
 18120                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18121     0DB8  0863               	movf	_asyncBuffer,w
 18122     0DB9  00E1               	movwf	_pHead
 18123                           
 18124                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18125     0DBA  2DBF               	goto	l1635
 18126     0DBB                     l1636:	
 18127                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18128                           
 18129                           
 18130                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18131     0DBB  01DF               	clrf	_dataReady
 18132     0DBC  0ADF               	incf	_dataReady,f
 18133     0DBD                     l13218:
 18134                           
 18135                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18136     0DBD  0844               	movf	RN487X_FilterData@readChar,w
 18137     0DBE  00E0               	movwf	_peek
 18138     0DBF                     l1635:	
 18139                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18140                           
 18141                           
 18142                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18143     0DBF  0140               	movlb	0	; select bank0
 18144     0DC0  085F               	movf	_dataReady,w
 18145     0DC1                     l1638:
 18146     0DC1  0008               	return
 18147     0DC2                     __end_of_RN487X_FilterData:
 18148                           
 18149                           	psect	text46
 18150     0948                     __ptext46:	
 18151 ;; *************** function _RN487X_MessageHandler *****************
 18152 ;; Defined at:
 18153 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18154 ;; Parameters:    Size  Location     Type
 18155 ;;  message         1   11[COMMON] PTR unsigned char 
 18156 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18157 ;; Auto vars:     Size  Location     Type
 18158 ;;  messageType     1   34[BANK0 ] enum E12962
 18159 ;; Return value:  Size  Location     Type
 18160 ;;                  1    wreg      void 
 18161 ;; Registers used:
 18162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18163 ;; Tracked objects:
 18164 ;;		On entry : 0/0
 18165 ;;		On exit  : 0/0
 18166 ;;		Unchanged: 0/0
 18167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18168 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;Total ram usage:        2 bytes
 18173 ;; Hardware stack levels used: 1
 18174 ;; Hardware stack levels required when called: 6
 18175 ;; This function calls:
 18176 ;;		_rn487x_PrintIndicatorCharacters
 18177 ;;		_rn487x_PrintMessage
 18178 ;;		_rn487x_PrintMessageEnd
 18179 ;;		_rn487x_PrintMessageStart
 18180 ;;		_strstr
 18181 ;; This function is called by:
 18182 ;;		_RN487X_FilterData
 18183 ;; This function uses a non-reentrant model
 18184 ;;
 18185                           
 18186     0948                     _RN487X_MessageHandler:	
 18187                           ;psect for function _RN487X_MessageHandler
 18188                           
 18189     0948                     l13088:	
 18190                           ;incstack = 0
 18191                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18192                           
 18193                           
 18194                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18195     0948  3197  2749  3189   	fcall	_rn487x_PrintMessageStart
 18196                           
 18197                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18198     094B  3091               	movlw	low (STR_2| (0+32768))
 18199     094C  00F7               	movwf	strstr@n
 18200     094D  3098               	movlw	high (STR_2| (0+32768))
 18201     094E  00F8               	movwf	strstr@n+1
 18202     094F  087B               	movf	RN487X_MessageHandler@message,w
 18203     0950  318D  25C2  3189   	fcall	_strstr
 18204     0953  3A00               	xorlw	0
 18205     0954  1903               	skipnz
 18206     0955  2957               	goto	u10211
 18207     0956  2958               	goto	u10210
 18208     0957                     u10211:
 18209     0957  295C               	goto	l13092
 18210     0958                     u10210:
 18211     0958                     l13090:
 18212                           
 18213                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18214     0958  0140               	movlb	0	; select bank0
 18215     0959  01C2               	clrf	RN487X_MessageHandler@messageType
 18216                           
 18217                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18218     095A  01E4               	clrf	_connected
 18219                           
 18220                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18221     095B  2972               	goto	l13098
 18222     095C                     l13092:
 18223     095C  307A               	movlw	low (STR_4| (0+32768))
 18224     095D  00F7               	movwf	strstr@n
 18225     095E  3098               	movlw	high (STR_4| (0+32768))
 18226     095F  00F8               	movwf	strstr@n+1
 18227     0960  087B               	movf	RN487X_MessageHandler@message,w
 18228     0961  318D  25C2  3189   	fcall	_strstr
 18229     0964  3A00               	xorlw	0
 18230     0965  1903               	skipnz
 18231     0966  2968               	goto	u10221
 18232     0967  2969               	goto	u10220
 18233     0968                     u10221:
 18234     0968  296F               	goto	l13096
 18235     0969                     u10220:
 18236     0969                     l13094:
 18237                           
 18238                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18239     0969  0140               	movlb	0	; select bank0
 18240     096A  01C2               	clrf	RN487X_MessageHandler@messageType
 18241     096B  0AC2               	incf	RN487X_MessageHandler@messageType,f
 18242                           
 18243                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18244     096C  01E4               	clrf	_connected
 18245     096D  0AE4               	incf	_connected,f
 18246                           
 18247                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18248     096E  2972               	goto	l13098
 18249     096F                     l13096:
 18250                           
 18251                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18252     096F  3002               	movlw	2
 18253     0970  0140               	movlb	0	; select bank0
 18254     0971  00C2               	movwf	RN487X_MessageHandler@messageType
 18255     0972                     l13098:
 18256                           
 18257                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18258     0972  087B               	movf	RN487X_MessageHandler@message,w
 18259     0973  3189  2111  3189   	fcall	_rn487x_PrintMessage
 18260     0976                     l13100:
 18261                           
 18262                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18263     0976  318E  265D  3189   	fcall	_rn487x_PrintMessageEnd
 18264     0979                     l13102:
 18265                           
 18266                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18267     0979  0140               	movlb	0	; select bank0
 18268     097A  0842               	movf	RN487X_MessageHandler@messageType,w
 18269     097B  3195  256B  3189   	fcall	_rn487x_PrintIndicatorCharacters
 18270     097E                     l1517:
 18271     097E  0008               	return
 18272     097F                     __end_of_RN487X_MessageHandler:
 18273                           
 18274                           	psect	text47
 18275     0DC2                     __ptext47:	
 18276 ;; *************** function _strstr *****************
 18277 ;; Defined at:
 18278 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18279 ;; Parameters:    Size  Location     Type
 18280 ;;  h               1    wreg     PTR const unsigned char 
 18281 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18282 ;;  n               2    7[COMMON] PTR const unsigned char 
 18283 ;;		 -> STR_5(12), STR_3(11), 
 18284 ;; Auto vars:     Size  Location     Type
 18285 ;;  h               1    2[BANK0 ] PTR const unsigned char 
 18286 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18287 ;;  nl              2    0[BANK0 ] unsigned int 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  1    wreg      PTR unsigned char 
 18290 ;; Registers used:
 18291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18300 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18301 ;;Total ram usage:        7 bytes
 18302 ;; Hardware stack levels used: 1
 18303 ;; Hardware stack levels required when called: 5
 18304 ;; This function calls:
 18305 ;;		_strchr
 18306 ;;		_strlen
 18307 ;;		_strncmp
 18308 ;; This function is called by:
 18309 ;;		_RN487X_MessageHandler
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313     0DC2                     _strstr:	
 18314                           ;psect for function _strstr
 18315                           
 18316                           
 18317                           ;incstack = 0
 18318                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18319                           ;strstr@h stored from wreg
 18320     0DC2  0140               	movlb	0	; select bank0
 18321     0DC3  00A2               	movwf	strstr@h
 18322     0DC4                     l12992:
 18323     0DC4  0877               	movf	strstr@n,w
 18324     0DC5  0478               	iorwf	strstr@n+1,w
 18325     0DC6  1903               	btfsc	3,2
 18326     0DC7  2DC9               	goto	u10091
 18327     0DC8  2DCA               	goto	u10090
 18328     0DC9                     u10091:
 18329     0DC9  2E0D               	goto	l13008
 18330     0DCA                     u10090:
 18331     0DCA                     l12994:
 18332     0DCA  0878               	movf	strstr@n+1,w
 18333     0DCB  00F2               	movwf	strlen@s+1
 18334     0DCC  0877               	movf	strstr@n,w
 18335     0DCD  00F1               	movwf	strlen@s
 18336     0DCE  3194  2417  318D   	fcall	_strlen
 18337     0DD1  0872               	movf	?_strlen+1,w
 18338     0DD2  0140               	movlb	0	; select bank0
 18339     0DD3  00A1               	movwf	strstr@nl+1
 18340     0DD4  0871               	movf	?_strlen,w
 18341     0DD5  00A0               	movwf	strstr@nl
 18342     0DD6  2DFF               	goto	l13004
 18343     0DD7                     l12996:
 18344     0DD7  0878               	movf	strstr@n+1,w
 18345     0DD8  00F2               	movwf	strncmp@r+1
 18346     0DD9  0877               	movf	strstr@n,w
 18347     0DDA  00F1               	movwf	strncmp@r
 18348     0DDB  0821               	movf	strstr@nl+1,w
 18349     0DDC  00F4               	movwf	strncmp@n+1
 18350     0DDD  0820               	movf	strstr@nl,w
 18351     0DDE  00F3               	movwf	strncmp@n
 18352     0DDF  0822               	movf	strstr@h,w
 18353     0DE0  318E  26F9  318D   	fcall	_strncmp
 18354     0DE3  0871               	movf	?_strncmp,w
 18355     0DE4  0472               	iorwf	?_strncmp+1,w
 18356     0DE5  1D03               	btfss	3,2
 18357     0DE6  2DE8               	goto	u10101
 18358     0DE7  2DE9               	goto	u10100
 18359     0DE8                     u10101:
 18360     0DE8  2DEC               	goto	l13002
 18361     0DE9                     u10100:
 18362     0DE9                     l12998:
 18363     0DE9  0140               	movlb	0	; select bank0
 18364     0DEA  0822               	movf	strstr@h,w
 18365     0DEB  2E0E               	goto	l3360
 18366     0DEC                     l13002:
 18367     0DEC  0877               	movf	strstr@n,w
 18368     0DED  0084               	movwf	4
 18369     0DEE  0878               	movf	strstr@n+1,w
 18370     0DEF  0085               	movwf	5
 18371     0DF0  0800               	movf	0,w	;code access
 18372     0DF1  00F9               	movwf	??_strstr
 18373     0DF2  01FA               	clrf	??_strstr+1
 18374     0DF3  0879               	movf	??_strstr,w
 18375     0DF4  00F1               	movwf	strchr@c
 18376     0DF5  087A               	movf	??_strstr+1,w
 18377     0DF6  00F2               	movwf	strchr@c+1
 18378     0DF7  0140               	movlb	0	; select bank0
 18379     0DF8  0822               	movf	strstr@h,w
 18380     0DF9  3E01               	addlw	1
 18381     0DFA  3194  2430  318D   	fcall	_strchr
 18382     0DFD  0140               	movlb	0	; select bank0
 18383     0DFE  00A2               	movwf	strstr@h
 18384     0DFF                     l13004:
 18385     0DFF  0822               	movf	strstr@h,w
 18386     0E00  1903               	btfsc	3,2
 18387     0E01  2E03               	goto	u10111
 18388     0E02  2E04               	goto	u10110
 18389     0E03                     u10111:
 18390     0E03  2E0D               	goto	l13008
 18391     0E04                     u10110:
 18392     0E04                     l13006:
 18393     0E04  0822               	movf	strstr@h,w
 18394     0E05  0086               	movwf	6
 18395     0E06  3003               	movlw	3	; select bank6/7
 18396     0E07  0087               	movwf	7
 18397     0E08  0801               	movf	1,w
 18398     0E09  1D03               	btfss	3,2
 18399     0E0A  2E0C               	goto	u10121
 18400     0E0B  2E0D               	goto	u10120
 18401     0E0C                     u10121:
 18402     0E0C  2DD7               	goto	l12996
 18403     0E0D                     u10120:
 18404     0E0D                     l13008:
 18405     0E0D  3000               	movlw	0
 18406     0E0E                     l3360:
 18407     0E0E  0008               	return
 18408     0E0F                     __end_of_strstr:
 18409                           
 18410                           	psect	text48
 18411     0EF9                     __ptext48:	
 18412 ;; *************** function _strncmp *****************
 18413 ;; Defined at:
 18414 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18415 ;; Parameters:    Size  Location     Type
 18416 ;;  l               1    wreg     PTR const unsigned char 
 18417 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18418 ;;  r               2    1[COMMON] PTR const unsigned char 
 18419 ;;		 -> STR_5(12), STR_3(11), 
 18420 ;;  n               2    3[COMMON] unsigned int 
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;  l               1    6[COMMON] PTR const unsigned char 
 18423 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18424 ;; Return value:  Size  Location     Type
 18425 ;;                  2    1[COMMON] int 
 18426 ;; Registers used:
 18427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18428 ;; Tracked objects:
 18429 ;;		On entry : 0/0
 18430 ;;		On exit  : 0/0
 18431 ;;		Unchanged: 0/0
 18432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18437 ;;Total ram usage:        6 bytes
 18438 ;; Hardware stack levels used: 1
 18439 ;; Hardware stack levels required when called: 4
 18440 ;; This function calls:
 18441 ;;		Nothing
 18442 ;; This function is called by:
 18443 ;;		_strstr
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447     0EF9                     _strncmp:	
 18448                           ;psect for function _strncmp
 18449                           
 18450                           
 18451                           ;incstack = 0
 18452                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18453                           ;strncmp@l stored from wreg
 18454     0EF9  00F6               	movwf	strncmp@l
 18455     0EFA                     l12846:
 18456     0EFA  3001               	movlw	1
 18457     0EFB  02F3               	subwf	strncmp@n,f
 18458     0EFC  3000               	movlw	0
 18459     0EFD  3BF4               	subwfb	strncmp@n+1,f
 18460     0EFE  0A73               	incf	strncmp@n,w
 18461     0EFF  1D03               	skipz
 18462     0F00  2F05               	goto	u9951
 18463     0F01  0A74               	incf	strncmp@n+1,w
 18464     0F02  1D03               	btfss	3,2
 18465     0F03  2F05               	goto	u9951
 18466     0F04  2F06               	goto	u9950
 18467     0F05                     u9951:
 18468     0F05  2F15               	goto	l12858
 18469     0F06                     u9950:
 18470     0F06                     l12848:
 18471     0F06  01F1               	clrf	?_strncmp
 18472     0F07  01F2               	clrf	?_strncmp+1
 18473     0F08  2F4B               	goto	l3373
 18474     0F09                     l12852:
 18475     0F09  3001               	movlw	1
 18476     0F0A  00F5               	movwf	??_strncmp
 18477     0F0B  0875               	movf	??_strncmp,w
 18478     0F0C  07F6               	addwf	strncmp@l,f
 18479     0F0D                     l12854:
 18480     0F0D  3001               	movlw	1
 18481     0F0E  07F1               	addwf	strncmp@r,f
 18482     0F0F  3000               	movlw	0
 18483     0F10  3DF2               	addwfc	strncmp@r+1,f
 18484     0F11                     l12856:
 18485     0F11  3001               	movlw	1
 18486     0F12  02F3               	subwf	strncmp@n,f
 18487     0F13  3000               	movlw	0
 18488     0F14  3BF4               	subwfb	strncmp@n+1,f
 18489     0F15                     l12858:
 18490     0F15  0876               	movf	strncmp@l,w
 18491     0F16  0086               	movwf	6
 18492     0F17  3003               	movlw	3	; select bank6/7
 18493     0F18  0087               	movwf	7
 18494     0F19  0801               	movf	1,w
 18495     0F1A  1903               	btfsc	3,2
 18496     0F1B  2F1D               	goto	u9961
 18497     0F1C  2F1E               	goto	u9960
 18498     0F1D                     u9961:
 18499     0F1D  2F3D               	goto	l12866
 18500     0F1E                     u9960:
 18501     0F1E                     l12860:
 18502     0F1E  0871               	movf	strncmp@r,w
 18503     0F1F  0084               	movwf	4
 18504     0F20  0872               	movf	strncmp@r+1,w
 18505     0F21  0085               	movwf	5
 18506     0F22  0012               	moviw fsr0++
 18507     0F23  1903               	btfsc	3,2
 18508     0F24  2F26               	goto	u9971
 18509     0F25  2F27               	goto	u9970
 18510     0F26                     u9971:
 18511     0F26  2F3D               	goto	l12866
 18512     0F27                     u9970:
 18513     0F27                     l12862:
 18514     0F27  0873               	movf	strncmp@n,w
 18515     0F28  0474               	iorwf	strncmp@n+1,w
 18516     0F29  1903               	btfsc	3,2
 18517     0F2A  2F2C               	goto	u9981
 18518     0F2B  2F2D               	goto	u9980
 18519     0F2C                     u9981:
 18520     0F2C  2F3D               	goto	l12866
 18521     0F2D                     u9980:
 18522     0F2D                     l12864:
 18523     0F2D  0871               	movf	strncmp@r,w
 18524     0F2E  0084               	movwf	4
 18525     0F2F  0872               	movf	strncmp@r+1,w
 18526     0F30  0085               	movwf	5
 18527     0F31  0800               	movf	0,w	;code access
 18528     0F32  00F5               	movwf	??_strncmp
 18529     0F33  0876               	movf	strncmp@l,w
 18530     0F34  0086               	movwf	6
 18531     0F35  3003               	movlw	3	; select bank6/7
 18532     0F36  0087               	movwf	7
 18533     0F37  0801               	movf	1,w
 18534     0F38  0675               	xorwf	??_strncmp,w
 18535     0F39  1903               	skipnz
 18536     0F3A  2F3C               	goto	u9991
 18537     0F3B  2F3D               	goto	u9990
 18538     0F3C                     u9991:
 18539     0F3C  2F09               	goto	l12852
 18540     0F3D                     u9990:
 18541     0F3D                     l12866:
 18542     0F3D  0876               	movf	strncmp@l,w
 18543     0F3E  0086               	movwf	6
 18544     0F3F  3003               	movlw	3	; select bank6/7
 18545     0F40  0087               	movwf	7
 18546     0F41  0871               	movf	strncmp@r,w
 18547     0F42  0084               	movwf	4
 18548     0F43  0872               	movf	strncmp@r+1,w
 18549     0F44  0085               	movwf	5
 18550     0F45  0800               	movf	0,w	;code access
 18551     0F46  0201               	subwf	1,w
 18552     0F47  00F1               	movwf	?_strncmp
 18553     0F48  01F2               	clrf	?_strncmp+1
 18554     0F49  1C03               	skipc
 18555     0F4A  03F2               	decf	?_strncmp+1,f
 18556     0F4B                     l3373:
 18557     0F4B  0008               	return
 18558     0F4C                     __end_of_strncmp:
 18559                           
 18560                           	psect	text49
 18561     1430                     __ptext49:	
 18562 ;; *************** function _strchr *****************
 18563 ;; Defined at:
 18564 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18565 ;; Parameters:    Size  Location     Type
 18566 ;;  s               1    wreg     PTR const unsigned char 
 18567 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18568 ;;  c               2    1[COMMON] int 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  s               1    3[COMMON] PTR const unsigned char 
 18571 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18572 ;; Return value:  Size  Location     Type
 18573 ;;                  1    wreg      PTR unsigned char 
 18574 ;; Registers used:
 18575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18576 ;; Tracked objects:
 18577 ;;		On entry : 0/0
 18578 ;;		On exit  : 0/0
 18579 ;;		Unchanged: 0/0
 18580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18585 ;;Total ram usage:        3 bytes
 18586 ;; Hardware stack levels used: 1
 18587 ;; Hardware stack levels required when called: 4
 18588 ;; This function calls:
 18589 ;;		Nothing
 18590 ;; This function is called by:
 18591 ;;		_strstr
 18592 ;; This function uses a non-reentrant model
 18593 ;;
 18594                           
 18595     1430                     _strchr:	
 18596                           ;psect for function _strchr
 18597                           
 18598                           
 18599                           ;incstack = 0
 18600                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18601                           ;strchr@s stored from wreg
 18602     1430  00F3               	movwf	strchr@s
 18603     1431                     l3366:
 18604     1431                     l12870:
 18605     1431  0873               	movf	strchr@s,w
 18606     1432  0086               	movwf	6
 18607     1433  3003               	movlw	3	; select bank6/7
 18608     1434  0087               	movwf	7
 18609     1435  0801               	movf	1,w
 18610     1436  0671               	xorwf	strchr@c,w
 18611     1437  1D03               	skipz
 18612     1438  2C3A               	goto	u10001
 18613     1439  2C3B               	goto	u10000
 18614     143A                     u10001:
 18615     143A  2C3D               	goto	l12876
 18616     143B                     u10000:
 18617     143B                     l12872:
 18618     143B  0873               	movf	strchr@s,w
 18619     143C  2C48               	goto	l3368
 18620     143D                     l12876:
 18621     143D  0873               	movf	strchr@s,w
 18622     143E  0086               	movwf	6
 18623     143F  3003               	movlw	3	; select bank6/7
 18624     1440  0087               	movwf	7
 18625     1441  0AF3               	incf	strchr@s,f
 18626     1442  0801               	movf	1,w
 18627     1443  1D03               	btfss	3,2
 18628     1444  2C46               	goto	u10011
 18629     1445  2C47               	goto	u10010
 18630     1446                     u10011:
 18631     1446  2C31               	goto	l3366
 18632     1447                     u10010:
 18633     1447                     l12878:
 18634     1447  3000               	movlw	0
 18635     1448                     l3368:
 18636     1448  0008               	return
 18637     1449                     __end_of_strchr:
 18638                           
 18639                           	psect	text50
 18640     1749                     __ptext50:	
 18641 ;; *************** function _rn487x_PrintMessageStart *****************
 18642 ;; Defined at:
 18643 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18644 ;; Parameters:    Size  Location     Type
 18645 ;;		None
 18646 ;; Auto vars:     Size  Location     Type
 18647 ;;		None
 18648 ;; Return value:  Size  Location     Type
 18649 ;;                  1    wreg      void 
 18650 ;; Registers used:
 18651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18652 ;; Tracked objects:
 18653 ;;		On entry : 0/0
 18654 ;;		On exit  : 0/0
 18655 ;;		Unchanged: 0/0
 18656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18661 ;;Total ram usage:        0 bytes
 18662 ;; Hardware stack levels used: 1
 18663 ;; Hardware stack levels required when called: 5
 18664 ;; This function calls:
 18665 ;;		_EUSART1_Write
 18666 ;;		_EUSART2_Write
 18667 ;; This function is called by:
 18668 ;;		_RN487X_MessageHandler
 18669 ;; This function uses a non-reentrant model
 18670 ;;
 18671                           
 18672     1749                     _rn487x_PrintMessageStart:	
 18673                           ;psect for function _rn487x_PrintMessageStart
 18674                           
 18675     1749                     l12970:	
 18676                           ;incstack = 0
 18677                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18678                           
 18679                           
 18680                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18681     1749  303C               	movlw	60
 18682     174A  00F1               	movwf	EUSART2_Write@txData
 18683     174B  3002               	movlw	low ((_uart+2)| (0+32768))
 18684     174C  0084               	movwf	4
 18685     174D  3098               	movlw	high ((_uart+2)| (0+32768))
 18686     174E  0085               	movwf	5
 18687     174F  3F01               	moviw [1]fsr0
 18688     1750  008A               	movwf	10
 18689     1751  3F00               	moviw [0]fsr0
 18690     1752  000A               	callw
 18691     1753  3197               	pagesel	$
 18692                           
 18693                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18694     1754  303C               	movlw	60
 18695     1755  00F1               	movwf	EUSART2_Write@txData
 18696     1756  3002               	movlw	low ((_uart+2)| (0+32768))
 18697     1757  0084               	movwf	4
 18698     1758  3098               	movlw	high ((_uart+2)| (0+32768))
 18699     1759  0085               	movwf	5
 18700     175A  3F01               	moviw [1]fsr0
 18701     175B  008A               	movwf	10
 18702     175C  3F00               	moviw [0]fsr0
 18703     175D  000A               	callw
 18704     175E  3197               	pagesel	$
 18705                           
 18706                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18707     175F  303C               	movlw	60
 18708     1760  00F1               	movwf	EUSART2_Write@txData
 18709     1761  3002               	movlw	low ((_uart+2)| (0+32768))
 18710     1762  0084               	movwf	4
 18711     1763  3098               	movlw	high ((_uart+2)| (0+32768))
 18712     1764  0085               	movwf	5
 18713     1765  3F01               	moviw [1]fsr0
 18714     1766  008A               	movwf	10
 18715     1767  3F00               	moviw [0]fsr0
 18716     1768  000A               	callw
 18717     1769  3197               	pagesel	$
 18718                           
 18719                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 18720     176A  3020               	movlw	32
 18721     176B  00F1               	movwf	EUSART2_Write@txData
 18722     176C  3002               	movlw	low ((_uart+2)| (0+32768))
 18723     176D  0084               	movwf	4
 18724     176E  3098               	movlw	high ((_uart+2)| (0+32768))
 18725     176F  0085               	movwf	5
 18726     1770  3F01               	moviw [1]fsr0
 18727     1771  008A               	movwf	10
 18728     1772  3F00               	moviw [0]fsr0
 18729     1773  000A               	callw
 18730     1774  3197               	pagesel	$
 18731     1775                     l1494:
 18732     1775  0008               	return
 18733     1776                     __end_of_rn487x_PrintMessageStart:
 18734                           
 18735                           	psect	text51
 18736     0E5D                     __ptext51:	
 18737 ;; *************** function _rn487x_PrintMessageEnd *****************
 18738 ;; Defined at:
 18739 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;		None
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;		None
 18744 ;; Return value:  Size  Location     Type
 18745 ;;                  1    wreg      void 
 18746 ;; Registers used:
 18747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18757 ;;Total ram usage:        0 bytes
 18758 ;; Hardware stack levels used: 1
 18759 ;; Hardware stack levels required when called: 5
 18760 ;; This function calls:
 18761 ;;		_EUSART1_Write
 18762 ;;		_EUSART2_Write
 18763 ;; This function is called by:
 18764 ;;		_RN487X_MessageHandler
 18765 ;; This function uses a non-reentrant model
 18766 ;;
 18767                           
 18768     0E5D                     _rn487x_PrintMessageEnd:	
 18769                           ;psect for function _rn487x_PrintMessageEnd
 18770                           
 18771     0E5D                     l12972:	
 18772                           ;incstack = 0
 18773                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18774                           
 18775                           
 18776                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 18777     0E5D  3020               	movlw	32
 18778     0E5E  00F1               	movwf	EUSART2_Write@txData
 18779     0E5F  3002               	movlw	low ((_uart+2)| (0+32768))
 18780     0E60  0084               	movwf	4
 18781     0E61  3098               	movlw	high ((_uart+2)| (0+32768))
 18782     0E62  0085               	movwf	5
 18783     0E63  3F01               	moviw [1]fsr0
 18784     0E64  008A               	movwf	10
 18785     0E65  3F00               	moviw [0]fsr0
 18786     0E66  000A               	callw
 18787     0E67  318E               	pagesel	$
 18788                           
 18789                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 18790     0E68  303E               	movlw	62
 18791     0E69  00F1               	movwf	EUSART2_Write@txData
 18792     0E6A  3002               	movlw	low ((_uart+2)| (0+32768))
 18793     0E6B  0084               	movwf	4
 18794     0E6C  3098               	movlw	high ((_uart+2)| (0+32768))
 18795     0E6D  0085               	movwf	5
 18796     0E6E  3F01               	moviw [1]fsr0
 18797     0E6F  008A               	movwf	10
 18798     0E70  3F00               	moviw [0]fsr0
 18799     0E71  000A               	callw
 18800     0E72  318E               	pagesel	$
 18801                           
 18802                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 18803     0E73  303E               	movlw	62
 18804     0E74  00F1               	movwf	EUSART2_Write@txData
 18805     0E75  3002               	movlw	low ((_uart+2)| (0+32768))
 18806     0E76  0084               	movwf	4
 18807     0E77  3098               	movlw	high ((_uart+2)| (0+32768))
 18808     0E78  0085               	movwf	5
 18809     0E79  3F01               	moviw [1]fsr0
 18810     0E7A  008A               	movwf	10
 18811     0E7B  3F00               	moviw [0]fsr0
 18812     0E7C  000A               	callw
 18813     0E7D  318E               	pagesel	$
 18814                           
 18815                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 18816     0E7E  303E               	movlw	62
 18817     0E7F  00F1               	movwf	EUSART2_Write@txData
 18818     0E80  3002               	movlw	low ((_uart+2)| (0+32768))
 18819     0E81  0084               	movwf	4
 18820     0E82  3098               	movlw	high ((_uart+2)| (0+32768))
 18821     0E83  0085               	movwf	5
 18822     0E84  3F01               	moviw [1]fsr0
 18823     0E85  008A               	movwf	10
 18824     0E86  3F00               	moviw [0]fsr0
 18825     0E87  000A               	callw
 18826     0E88  318E               	pagesel	$
 18827                           
 18828                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 18829     0E89  3020               	movlw	32
 18830     0E8A  00F1               	movwf	EUSART2_Write@txData
 18831     0E8B  3002               	movlw	low ((_uart+2)| (0+32768))
 18832     0E8C  0084               	movwf	4
 18833     0E8D  3098               	movlw	high ((_uart+2)| (0+32768))
 18834     0E8E  0085               	movwf	5
 18835     0E8F  3F01               	moviw [1]fsr0
 18836     0E90  008A               	movwf	10
 18837     0E91  3F00               	moviw [0]fsr0
 18838     0E92  000A               	callw
 18839     0E93  318E               	pagesel	$
 18840                           
 18841                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 18842     0E94  300D               	movlw	13
 18843     0E95  00F1               	movwf	EUSART2_Write@txData
 18844     0E96  3002               	movlw	low ((_uart+2)| (0+32768))
 18845     0E97  0084               	movwf	4
 18846     0E98  3098               	movlw	high ((_uart+2)| (0+32768))
 18847     0E99  0085               	movwf	5
 18848     0E9A  3F01               	moviw [1]fsr0
 18849     0E9B  008A               	movwf	10
 18850     0E9C  3F00               	moviw [0]fsr0
 18851     0E9D  000A               	callw
 18852     0E9E  318E               	pagesel	$
 18853                           
 18854                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 18855     0E9F  300A               	movlw	10
 18856     0EA0  00F1               	movwf	EUSART2_Write@txData
 18857     0EA1  3002               	movlw	low ((_uart+2)| (0+32768))
 18858     0EA2  0084               	movwf	4
 18859     0EA3  3098               	movlw	high ((_uart+2)| (0+32768))
 18860     0EA4  0085               	movwf	5
 18861     0EA5  3F01               	moviw [1]fsr0
 18862     0EA6  008A               	movwf	10
 18863     0EA7  3F00               	moviw [0]fsr0
 18864     0EA8  000A               	callw
 18865     0EA9  318E               	pagesel	$
 18866     0EAA                     l1497:
 18867     0EAA  0008               	return
 18868     0EAB                     __end_of_rn487x_PrintMessageEnd:
 18869                           
 18870                           	psect	text52
 18871     0911                     __ptext52:	
 18872 ;; *************** function _rn487x_PrintMessage *****************
 18873 ;; Defined at:
 18874 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  passedMessag    1    wreg     PTR unsigned char 
 18877 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  passedMessag    1   32[BANK0 ] PTR unsigned char 
 18880 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18881 ;;  messageIndex    1   33[BANK0 ] unsigned char 
 18882 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 18883 ;; Return value:  Size  Location     Type
 18884 ;;                  1    wreg      void 
 18885 ;; Registers used:
 18886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18887 ;; Tracked objects:
 18888 ;;		On entry : 0/0
 18889 ;;		On exit  : 0/0
 18890 ;;		Unchanged: 0/0
 18891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18893 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18895 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18896 ;;Total ram usage:       36 bytes
 18897 ;; Hardware stack levels used: 1
 18898 ;; Hardware stack levels required when called: 5
 18899 ;; This function calls:
 18900 ;;		_EUSART1_Write
 18901 ;;		_EUSART2_Write
 18902 ;;		_strcpy
 18903 ;;		_strlen
 18904 ;; This function is called by:
 18905 ;;		_RN487X_MessageHandler
 18906 ;; This function uses a non-reentrant model
 18907 ;;
 18908                           
 18909     0911                     _rn487x_PrintMessage:	
 18910                           ;psect for function _rn487x_PrintMessage
 18911                           
 18912                           
 18913                           ;incstack = 0
 18914                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18915                           ;rn487x_PrintMessage@passedMessage stored from wreg
 18916     0911  0140               	movlb	0	; select bank0
 18917     0912  00C0               	movwf	rn487x_PrintMessage@passedMessage
 18918     0913                     l12982:
 18919                           
 18920                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 18921     0913  0840               	movf	rn487x_PrintMessage@passedMessage,w
 18922     0914  00F1               	movwf	strcpy@src
 18923     0915  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 18924     0916  3193  230C  3189   	fcall	_strcpy
 18925     0919                     l12984:
 18926                           
 18927                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 18928     0919  0140               	movlb	0	; select bank0
 18929     091A  01C1               	clrf	rn487x_PrintMessage@messageIndex
 18930     091B  2930               	goto	l12990
 18931     091C                     l12986:
 18932                           
 18933                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 18934     091C  0841               	movf	rn487x_PrintMessage@messageIndex,w
 18935     091D  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 18936     091E  0086               	movwf	6
 18937     091F  0187               	clrf	7
 18938     0920  0801               	movf	1,w
 18939     0921  00F1               	movwf	EUSART2_Write@txData
 18940     0922  3002               	movlw	low ((_uart+2)| (0+32768))
 18941     0923  0084               	movwf	4
 18942     0924  3098               	movlw	high ((_uart+2)| (0+32768))
 18943     0925  0085               	movwf	5
 18944     0926  3F01               	moviw [1]fsr0
 18945     0927  008A               	movwf	10
 18946     0928  3F00               	moviw [0]fsr0
 18947     0929  000A               	callw
 18948     092A  3189               	pagesel	$
 18949     092B                     l12988:
 18950                           
 18951                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 18952     092B  3001               	movlw	1
 18953     092C  00F6               	movwf	??_rn487x_PrintMessage
 18954     092D  0876               	movf	??_rn487x_PrintMessage,w
 18955     092E  0140               	movlb	0	; select bank0
 18956     092F  07C1               	addwf	rn487x_PrintMessage@messageIndex,f
 18957     0930                     l12990:
 18958     0930  0840               	movf	rn487x_PrintMessage@passedMessage,w
 18959     0931  00F1               	movwf	strlen@s
 18960     0932  39FF               	andlw	255
 18961     0933  1D03               	skipz
 18962     0934  3003               	movlw	3
 18963     0935  00F2               	movwf	strlen@s+1
 18964     0936  3194  2417  3189   	fcall	_strlen
 18965     0939  0140               	movlb	0	; select bank0
 18966     093A  0841               	movf	rn487x_PrintMessage@messageIndex,w
 18967     093B  00F6               	movwf	??_rn487x_PrintMessage
 18968     093C  01F7               	clrf	??_rn487x_PrintMessage+1
 18969     093D  0872               	movf	?_strlen+1,w
 18970     093E  0277               	subwf	??_rn487x_PrintMessage+1,w
 18971     093F  1D03               	skipz
 18972     0940  2943               	goto	u10085
 18973     0941  0871               	movf	?_strlen,w
 18974     0942  0276               	subwf	??_rn487x_PrintMessage,w
 18975     0943                     u10085:
 18976     0943  1C03               	skipc
 18977     0944  2946               	goto	u10081
 18978     0945  2947               	goto	u10080
 18979     0946                     u10081:
 18980     0946  291C               	goto	l12986
 18981     0947                     u10080:
 18982     0947                     l1510:
 18983     0947  0008               	return
 18984     0948                     __end_of_rn487x_PrintMessage:
 18985                           
 18986                           	psect	text53
 18987     130C                     __ptext53:	
 18988 ;; *************** function _strcpy *****************
 18989 ;; Defined at:
 18990 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;  dest            1    wreg     PTR unsigned char 
 18993 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 18994 ;;  src             1    1[COMMON] PTR const unsigned char 
 18995 ;;		 -> statusBuffer@main$F4230(80), statusBuffer(80), NULL(0), 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;  dest            1    3[COMMON] PTR unsigned char 
 18998 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 18999 ;;  d               1    2[COMMON] PTR unsigned char 
 19000 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      PTR unsigned char 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19014 ;;Total ram usage:        3 bytes
 19015 ;; Hardware stack levels used: 1
 19016 ;; Hardware stack levels required when called: 4
 19017 ;; This function calls:
 19018 ;;		Nothing
 19019 ;; This function is called by:
 19020 ;;		_rn487x_PrintMessage
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024     130C                     _strcpy:	
 19025                           ;psect for function _strcpy
 19026                           
 19027                           
 19028                           ;incstack = 0
 19029                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19030                           ;strcpy@dest stored from wreg
 19031     130C  00F3               	movwf	strcpy@dest
 19032     130D                     l12780:
 19033     130D  0873               	movf	strcpy@dest,w
 19034     130E  00F2               	movwf	strcpy@d
 19035     130F                     l12782:
 19036     130F  0872               	movf	strcpy@d,w
 19037     1310  0086               	movwf	6
 19038     1311  0187               	clrf	7
 19039     1312  0AF2               	incf	strcpy@d,f
 19040     1313  0871               	movf	strcpy@src,w
 19041     1314  0084               	movwf	4
 19042     1315  3003               	movlw	3	; select bank6/7
 19043     1316  0085               	movwf	5
 19044     1317  0AF1               	incf	strcpy@src,f
 19045     1318  0800               	movf	0,w
 19046     1319  3FC0               	movwi [0]fsr1
 19047     131A  0889               	movf	9,f
 19048     131B  1D03               	btfss	3,2
 19049     131C  2B1E               	goto	u9861
 19050     131D  2B1F               	goto	u9860
 19051     131E                     u9861:
 19052     131E  2B0F               	goto	l12782
 19053     131F                     u9860:
 19054     131F                     l3341:
 19055     131F  0008               	return
 19056     1320                     __end_of_strcpy:
 19057                           
 19058                           	psect	text54
 19059     156B                     __ptext54:	
 19060 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19061 ;; Defined at:
 19062 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19063 ;; Parameters:    Size  Location     Type
 19064 ;;  messageType     1    wreg     enum E12962
 19065 ;; Auto vars:     Size  Location     Type
 19066 ;;  messageType     1    3[COMMON] enum E12962
 19067 ;; Return value:  Size  Location     Type
 19068 ;;                  1    wreg      void 
 19069 ;; Registers used:
 19070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19071 ;; Tracked objects:
 19072 ;;		On entry : 0/0
 19073 ;;		On exit  : 0/0
 19074 ;;		Unchanged: 0/0
 19075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19080 ;;Total ram usage:        1 bytes
 19081 ;; Hardware stack levels used: 1
 19082 ;; Hardware stack levels required when called: 5
 19083 ;; This function calls:
 19084 ;;		_EUSART1_Write
 19085 ;;		_EUSART2_Write
 19086 ;; This function is called by:
 19087 ;;		_RN487X_MessageHandler
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091     156B                     _rn487x_PrintIndicatorCharacters:	
 19092                           ;psect for function _rn487x_PrintIndicatorCharacters
 19093                           
 19094                           
 19095                           ;incstack = 0
 19096                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19097                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19098     156B  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19099     156C                     l12974:
 19100                           
 19101                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19102     156C  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19103     156D  1D03               	btfss	3,2
 19104     156E  2D70               	goto	u10061
 19105     156F  2D71               	goto	u10060
 19106     1570                     u10061:
 19107     1570  2D7D               	goto	l12978
 19108     1571                     u10060:
 19109     1571                     l12976:
 19110                           
 19111                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19112     1571  305B               	movlw	91
 19113     1572  00F1               	movwf	EUSART2_Write@txData
 19114     1573  3002               	movlw	low ((_uart+2)| (0+32768))
 19115     1574  0084               	movwf	4
 19116     1575  3098               	movlw	high ((_uart+2)| (0+32768))
 19117     1576  0085               	movwf	5
 19118     1577  3F01               	moviw [1]fsr0
 19119     1578  008A               	movwf	10
 19120     1579  3F00               	moviw [0]fsr0
 19121     157A  000A               	callw
 19122     157B  3195               	pagesel	$
 19123                           
 19124                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19125     157C  2D8D               	goto	l1504
 19126     157D                     l12978:
 19127     157D  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19128     157E  1D03               	btfss	3,2
 19129     157F  2D81               	goto	u10071
 19130     1580  2D82               	goto	u10070
 19131     1581                     u10071:
 19132     1581  2D8D               	goto	l1504
 19133     1582                     u10070:
 19134     1582                     l12980:
 19135                           
 19136                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19137     1582  305D               	movlw	93
 19138     1583  00F1               	movwf	EUSART2_Write@txData
 19139     1584  3002               	movlw	low ((_uart+2)| (0+32768))
 19140     1585  0084               	movwf	4
 19141     1586  3098               	movlw	high ((_uart+2)| (0+32768))
 19142     1587  0085               	movwf	5
 19143     1588  3F01               	moviw [1]fsr0
 19144     1589  008A               	movwf	10
 19145     158A  3F00               	moviw [0]fsr0
 19146     158B  000A               	callw
 19147     158C  3195               	pagesel	$
 19148     158D                     l1504:	
 19149                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19150                           
 19151     158D  0008               	return
 19152     158E                     __end_of_rn487x_PrintIndicatorCharacters:
 19153                           
 19154                           	psect	text55
 19155     1FF5                     __ptext55:	
 19156 ;; *************** function _RN487X_IsConnected *****************
 19157 ;; Defined at:
 19158 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;		None
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;		None
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      _Bool 
 19165 ;; Registers used:
 19166 ;;		wreg
 19167 ;; Tracked objects:
 19168 ;;		On entry : 0/0
 19169 ;;		On exit  : 0/0
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:        0 bytes
 19177 ;; Hardware stack levels used: 1
 19178 ;; Hardware stack levels required when called: 4
 19179 ;; This function calls:
 19180 ;;		Nothing
 19181 ;; This function is called by:
 19182 ;;		_main
 19183 ;;		_RN487X_Example_TransparentUart
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187     1FF5                     _RN487X_IsConnected:	
 19188                           ;psect for function _RN487X_IsConnected
 19189                           
 19190     1FF5                     l14186:	
 19191                           ;incstack = 0
 19192                           ; Regs used in _RN487X_IsConnected: [wreg]
 19193                           
 19194                           
 19195                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19196     1FF5  0140               	movlb	0	; select bank0
 19197     1FF6  0864               	movf	_connected,w
 19198     1FF7                     l1445:
 19199     1FF7  0008               	return
 19200     1FF8                     __end_of_RN487X_IsConnected:
 19201                           
 19202                           	psect	text56
 19203     0FA2                     __ptext56:	
 19204 ;; *************** function _RN487X_Init *****************
 19205 ;; Defined at:
 19206 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;		None
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  1    wreg      _Bool 
 19213 ;; Registers used:
 19214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;Total ram usage:        0 bytes
 19225 ;; Hardware stack levels used: 1
 19226 ;; Hardware stack levels required when called: 6
 19227 ;; This function calls:
 19228 ;;		_RN487X_Delay
 19229 ;;		_RN487X_IndicateRx
 19230 ;;		_RN487X_Read@rn487x_interface$F1831
 19231 ;;		_RN487X_Reset
 19232 ;;		_RN487X_SetSystemMode
 19233 ;;		_RN487X_is_rx_ready
 19234 ;; This function is called by:
 19235 ;;		_main
 19236 ;; This function uses a non-reentrant model
 19237 ;;
 19238                           
 19239     0FA2                     _RN487X_Init:	
 19240                           ;psect for function _RN487X_Init
 19241                           
 19242     0FA2                     l14200:	
 19243                           ;incstack = 0
 19244                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19245                           
 19246                           
 19247                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19248     0FA2  01F1               	clrf	RN487X_SetSystemMode@mode
 19249     0FA3  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19250     0FA4  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19251     0FA5  0084               	movwf	4
 19252     0FA6  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19253     0FA7  0085               	movwf	5
 19254     0FA8  3F01               	moviw [1]fsr0
 19255     0FA9  008A               	movwf	10
 19256     0FAA  3F00               	moviw [0]fsr0
 19257     0FAB  000A               	callw
 19258     0FAC  318F               	pagesel	$
 19259                           
 19260                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19261     0FAD  01F1               	clrf	RN487X_Reset@value
 19262     0FAE  0AF1               	incf	RN487X_Reset@value,f
 19263     0FAF  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19264     0FB0  0084               	movwf	4
 19265     0FB1  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19266     0FB2  0085               	movwf	5
 19267     0FB3  3F01               	moviw [1]fsr0
 19268     0FB4  008A               	movwf	10
 19269     0FB5  3F00               	moviw [0]fsr0
 19270     0FB6  000A               	callw
 19271     0FB7  318F               	pagesel	$
 19272                           
 19273                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19274     0FB8  3001               	movlw	1
 19275     0FB9  00F4               	movwf	RN487X_Delay@delayCount
 19276     0FBA  3000               	movlw	0
 19277     0FBB  00F5               	movwf	RN487X_Delay@delayCount+1
 19278     0FBC  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19279     0FBD  0084               	movwf	4
 19280     0FBE  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19281     0FBF  0085               	movwf	5
 19282     0FC0  3F01               	moviw [1]fsr0
 19283     0FC1  008A               	movwf	10
 19284     0FC2  3F00               	moviw [0]fsr0
 19285     0FC3  000A               	callw
 19286     0FC4  318F               	pagesel	$
 19287                           
 19288                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19289     0FC5  01F1               	clrf	RN487X_Reset@value
 19290     0FC6  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19291     0FC7  0084               	movwf	4
 19292     0FC8  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19293     0FC9  0085               	movwf	5
 19294     0FCA  3F01               	moviw [1]fsr0
 19295     0FCB  008A               	movwf	10
 19296     0FCC  3F00               	moviw [0]fsr0
 19297     0FCD  000A               	callw
 19298     0FCE  318F               	pagesel	$
 19299                           
 19300                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19301     0FCF  01F1               	clrf	RN487X_IndicateRx@value
 19302     0FD0  0AF1               	incf	RN487X_IndicateRx@value,f
 19303     0FD1  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19304     0FD2  0084               	movwf	4
 19305     0FD3  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19306     0FD4  0085               	movwf	5
 19307     0FD5  3F01               	moviw [1]fsr0
 19308     0FD6  008A               	movwf	10
 19309     0FD7  3F00               	moviw [0]fsr0
 19310     0FD8  000A               	callw
 19311     0FD9  318F               	pagesel	$
 19312                           
 19313                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19314     0FDA  30C8               	movlw	200
 19315     0FDB  00F4               	movwf	RN487X_Delay@delayCount
 19316     0FDC  3000               	movlw	0
 19317     0FDD  00F5               	movwf	RN487X_Delay@delayCount+1
 19318     0FDE  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19319     0FDF  0084               	movwf	4
 19320     0FE0  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19321     0FE1  0085               	movwf	5
 19322     0FE2  3F01               	moviw [1]fsr0
 19323     0FE3  008A               	movwf	10
 19324     0FE4  3F00               	moviw [0]fsr0
 19325     0FE5  000A               	callw
 19326     0FE6  318F               	pagesel	$
 19327                           
 19328                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19329     0FE7  2FF1               	goto	l14204
 19330     0FE8                     l14202:
 19331                           
 19332                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19333     0FE8  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19334     0FE9  0084               	movwf	4
 19335     0FEA  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19336     0FEB  0085               	movwf	5
 19337     0FEC  3F01               	moviw [1]fsr0
 19338     0FED  008A               	movwf	10
 19339     0FEE  3F00               	moviw [0]fsr0
 19340     0FEF  000A               	callw
 19341     0FF0  318F               	pagesel	$
 19342     0FF1                     l14204:
 19343                           
 19344                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19345     0FF1  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19346     0FF2  0084               	movwf	4
 19347     0FF3  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19348     0FF4  0085               	movwf	5
 19349     0FF5  3F01               	moviw [1]fsr0
 19350     0FF6  008A               	movwf	10
 19351     0FF7  3F00               	moviw [0]fsr0
 19352     0FF8  000A               	callw
 19353     0FF9  318F               	pagesel	$
 19354     0FFA  3A00               	xorlw	0
 19355     0FFB  1D03               	skipz
 19356     0FFC  2FFE               	goto	u11681
 19357     0FFD  2FFF               	goto	u11680
 19358     0FFE                     u11681:
 19359     0FFE  2FE8               	goto	l14202
 19360     0FFF                     u11680:
 19361     0FFF                     l1541:
 19362     0FFF  0008               	return
 19363     1000                     __end_of_RN487X_Init:
 19364                           
 19365                           	psect	text57
 19366     1126                     __ptext57:	
 19367 ;; *************** function _RN487X_is_rx_ready *****************
 19368 ;; Defined at:
 19369 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19370 ;; Parameters:    Size  Location     Type
 19371 ;;		None
 19372 ;; Auto vars:     Size  Location     Type
 19373 ;;		None
 19374 ;; Return value:  Size  Location     Type
 19375 ;;                  1    wreg      _Bool 
 19376 ;; Registers used:
 19377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19378 ;; Tracked objects:
 19379 ;;		On entry : 0/0
 19380 ;;		On exit  : 0/0
 19381 ;;		Unchanged: 0/0
 19382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19387 ;;Total ram usage:        0 bytes
 19388 ;; Hardware stack levels used: 1
 19389 ;; Hardware stack levels required when called: 5
 19390 ;; This function calls:
 19391 ;;		_EUSART1_is_rx_ready
 19392 ;;		_EUSART2_is_rx_ready
 19393 ;; This function is called by:
 19394 ;;		_RN487X_DataReady
 19395 ;;		_RN487X_Init
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           
 19399     1126                     _RN487X_is_rx_ready:	
 19400                           ;psect for function _RN487X_is_rx_ready
 19401                           
 19402     1126                     l13190:	
 19403                           ;incstack = 0
 19404                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19405                           
 19406                           
 19407                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19408     1126  301A               	movlw	low ((_uart+26)| (0+32768))
 19409     1127  0084               	movwf	4
 19410     1128  3098               	movlw	high ((_uart+26)| (0+32768))
 19411     1129  0085               	movwf	5
 19412     112A  3F01               	moviw [1]fsr0
 19413     112B  008A               	movwf	10
 19414     112C  3F00               	moviw [0]fsr0
 19415     112D  000A               	callw
 19416     112E  3191               	pagesel	$
 19417     112F                     l1457:
 19418     112F  0008               	return
 19419     1130                     __end_of_RN487X_is_rx_ready:
 19420                           
 19421                           	psect	text58
 19422     1100                     __ptext58:	
 19423 ;; *************** function _EUSART1_is_rx_ready *****************
 19424 ;; Defined at:
 19425 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19426 ;; Parameters:    Size  Location     Type
 19427 ;;		None
 19428 ;; Auto vars:     Size  Location     Type
 19429 ;;		None
 19430 ;; Return value:  Size  Location     Type
 19431 ;;                  1    wreg      _Bool 
 19432 ;; Registers used:
 19433 ;;		wreg, status,2, status,0
 19434 ;; Tracked objects:
 19435 ;;		On entry : 0/0
 19436 ;;		On exit  : 0/0
 19437 ;;		Unchanged: 0/0
 19438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19443 ;;Total ram usage:        0 bytes
 19444 ;; Hardware stack levels used: 1
 19445 ;; Hardware stack levels required when called: 4
 19446 ;; This function calls:
 19447 ;;		Nothing
 19448 ;; This function is called by:
 19449 ;;		_RN487X_is_rx_ready
 19450 ;;		_RN487X_Example_TransparentUart
 19451 ;;		_main
 19452 ;; This function uses a non-reentrant model
 19453 ;;
 19454                           
 19455     1100                     _EUSART1_is_rx_ready:	
 19456                           ;psect for function _EUSART1_is_rx_ready
 19457                           
 19458     1100                     l13108:	
 19459                           ;incstack = 0
 19460                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19461                           
 19462                           
 19463                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19464     1100  0140               	movlb	0	; select bank0
 19465     1101  0853               	movf	_eusart1RxCount,w	;volatile
 19466     1102  1D03               	btfss	3,2
 19467     1103  2905               	goto	u10251
 19468     1104  2907               	goto	u10250
 19469     1105                     u10251:
 19470     1105  3001               	movlw	1
 19471     1106  2908               	goto	u10260
 19472     1107                     u10250:
 19473     1107  3000               	movlw	0
 19474     1108                     u10260:
 19475     1108                     l1863:
 19476     1108  0008               	return
 19477     1109                     __end_of_EUSART1_is_rx_ready:
 19478                           
 19479                           	psect	text59
 19480     10F7                     __ptext59:	
 19481 ;; *************** function _EUSART2_is_rx_ready *****************
 19482 ;; Defined at:
 19483 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19484 ;; Parameters:    Size  Location     Type
 19485 ;;		None
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;		None
 19488 ;; Return value:  Size  Location     Type
 19489 ;;                  1    wreg      _Bool 
 19490 ;; Registers used:
 19491 ;;		wreg, status,2, status,0
 19492 ;; Tracked objects:
 19493 ;;		On entry : 0/0
 19494 ;;		On exit  : 0/0
 19495 ;;		Unchanged: 0/0
 19496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;Total ram usage:        0 bytes
 19502 ;; Hardware stack levels used: 1
 19503 ;; Hardware stack levels required when called: 4
 19504 ;; This function calls:
 19505 ;;		Nothing
 19506 ;; This function is called by:
 19507 ;;		_RN487X_is_rx_ready
 19508 ;;		_RN487X_Example_TransparentUart
 19509 ;;		_main
 19510 ;; This function uses a non-reentrant model
 19511 ;;
 19512                           
 19513     10F7                     _EUSART2_is_rx_ready:	
 19514                           ;psect for function _EUSART2_is_rx_ready
 19515                           
 19516     10F7                     l13104:	
 19517                           ;incstack = 0
 19518                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19519                           
 19520                           
 19521                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19522     10F7  0140               	movlb	0	; select bank0
 19523     10F8  0859               	movf	_eusart2RxCount,w	;volatile
 19524     10F9  1D03               	btfss	3,2
 19525     10FA  28FC               	goto	u10231
 19526     10FB  28FE               	goto	u10230
 19527     10FC                     u10231:
 19528     10FC  3001               	movlw	1
 19529     10FD  28FF               	goto	u10240
 19530     10FE                     u10230:
 19531     10FE  3000               	movlw	0
 19532     10FF                     u10240:
 19533     10FF                     l1719:
 19534     10FF  0008               	return
 19535     1100                     __end_of_EUSART2_is_rx_ready:
 19536                           
 19537                           	psect	text60
 19538     1187                     __ptext60:	
 19539 ;; *************** function _RN487X_SetSystemMode *****************
 19540 ;; Defined at:
 19541 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19542 ;; Parameters:    Size  Location     Type
 19543 ;;  mode            1    1[COMMON] enum E204
 19544 ;; Auto vars:     Size  Location     Type
 19545 ;;		None
 19546 ;; Return value:  Size  Location     Type
 19547 ;;                  1    wreg      void 
 19548 ;; Registers used:
 19549 ;;		wreg, status,2, status,0
 19550 ;; Tracked objects:
 19551 ;;		On entry : 0/0
 19552 ;;		On exit  : 0/0
 19553 ;;		Unchanged: 0/0
 19554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19559 ;;Total ram usage:        1 bytes
 19560 ;; Hardware stack levels used: 1
 19561 ;; Hardware stack levels required when called: 4
 19562 ;; This function calls:
 19563 ;;		Nothing
 19564 ;; This function is called by:
 19565 ;;		_RN487X_Init
 19566 ;; This function uses a non-reentrant model
 19567 ;;
 19568                           
 19569     1187                     _RN487X_SetSystemMode:	
 19570                           ;psect for function _RN487X_SetSystemMode
 19571                           
 19572     1187                     l1481:	
 19573                           ;incstack = 0
 19574                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19575                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19576                           
 19577     1187  0140               	movlb	0	; select bank0
 19578     1188  1392               	bcf	18,7	;volatile
 19579     1189                     l13786:
 19580                           
 19581                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19582     1189  0371               	decf	RN487X_SetSystemMode@mode,w
 19583     118A  1D03               	btfss	3,2
 19584     118B  298D               	goto	u11421
 19585     118C  298E               	goto	u11420
 19586     118D                     u11421:
 19587     118D  2990               	goto	l1487
 19588     118E                     u11420:
 19589     118E                     l1484:	
 19590                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19591                           
 19592     118E  1798               	bsf	24,7	;volatile
 19593     118F  2991               	goto	l1489
 19594     1190                     l1487:	
 19595                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19596                           
 19597     1190  1398               	bcf	24,7	;volatile
 19598     1191                     l1489:	
 19599                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19600                           
 19601     1191  1792               	bsf	18,7	;volatile
 19602     1192                     l1491:
 19603     1192  0008               	return
 19604     1193                     __end_of_RN487X_SetSystemMode:
 19605                           
 19606                           	psect	text61
 19607     1165                     __ptext61:	
 19608 ;; *************** function _RN487X_Reset *****************
 19609 ;; Defined at:
 19610 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19611 ;; Parameters:    Size  Location     Type
 19612 ;;  value           1    1[COMMON] _Bool 
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;		None
 19615 ;; Return value:  Size  Location     Type
 19616 ;;                  1    wreg      void 
 19617 ;; Registers used:
 19618 ;;		wreg, status,2, status,0
 19619 ;; Tracked objects:
 19620 ;;		On entry : 0/0
 19621 ;;		On exit  : 0/0
 19622 ;;		Unchanged: 0/0
 19623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19628 ;;Total ram usage:        1 bytes
 19629 ;; Hardware stack levels used: 1
 19630 ;; Hardware stack levels required when called: 4
 19631 ;; This function calls:
 19632 ;;		Nothing
 19633 ;; This function is called by:
 19634 ;;		_RN487X_Init
 19635 ;; This function uses a non-reentrant model
 19636 ;;
 19637                           
 19638     1165                     _RN487X_Reset:	
 19639                           ;psect for function _RN487X_Reset
 19640                           
 19641     1165                     l13782:	
 19642                           ;incstack = 0
 19643                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19644                           
 19645                           
 19646                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19647     1165  0371               	decf	RN487X_Reset@value,w
 19648     1166  1D03               	btfss	3,2
 19649     1167  2969               	goto	u11401
 19650     1168  296A               	goto	u11400
 19651     1169                     u11401:
 19652     1169  296D               	goto	l1467
 19653     116A                     u11400:
 19654     116A                     l1464:	
 19655                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19656                           
 19657     116A  0140               	movlb	0	; select bank0
 19658     116B  1018               	bcf	24,0	;volatile
 19659     116C  296F               	goto	l1469
 19660     116D                     l1467:	
 19661                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19662                           
 19663     116D  0140               	movlb	0	; select bank0
 19664     116E  1418               	bsf	24,0	;volatile
 19665     116F                     l1469:
 19666     116F  0008               	return
 19667     1170                     __end_of_RN487X_Reset:
 19668                           
 19669                           	psect	text62
 19670     115A                     __ptext62:	
 19671 ;; *************** function _RN487X_IndicateRx *****************
 19672 ;; Defined at:
 19673 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19674 ;; Parameters:    Size  Location     Type
 19675 ;;  value           1    1[COMMON] _Bool 
 19676 ;; Auto vars:     Size  Location     Type
 19677 ;;		None
 19678 ;; Return value:  Size  Location     Type
 19679 ;;                  1    wreg      void 
 19680 ;; Registers used:
 19681 ;;		wreg, status,2, status,0
 19682 ;; Tracked objects:
 19683 ;;		On entry : 0/0
 19684 ;;		On exit  : 0/0
 19685 ;;		Unchanged: 0/0
 19686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19687 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19691 ;;Total ram usage:        1 bytes
 19692 ;; Hardware stack levels used: 1
 19693 ;; Hardware stack levels required when called: 4
 19694 ;; This function calls:
 19695 ;;		Nothing
 19696 ;; This function is called by:
 19697 ;;		_RN487X_Init
 19698 ;; This function uses a non-reentrant model
 19699 ;;
 19700                           
 19701     115A                     _RN487X_IndicateRx:	
 19702                           ;psect for function _RN487X_IndicateRx
 19703                           
 19704     115A                     l13784:	
 19705                           ;incstack = 0
 19706                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19707                           
 19708                           
 19709                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 19710     115A  0371               	decf	RN487X_IndicateRx@value,w
 19711     115B  1D03               	btfss	3,2
 19712     115C  295E               	goto	u11411
 19713     115D  295F               	goto	u11410
 19714     115E                     u11411:
 19715     115E  2962               	goto	l1476
 19716     115F                     u11410:
 19717     115F                     l1473:	
 19718                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 19719                           
 19720     115F  0140               	movlb	0	; select bank0
 19721     1160  131A               	bcf	26,6	;volatile
 19722     1161  2964               	goto	l1478
 19723     1162                     l1476:	
 19724                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 19725                           
 19726     1162  0140               	movlb	0	; select bank0
 19727     1163  171A               	bsf	26,6	;volatile
 19728     1164                     l1478:
 19729     1164  0008               	return
 19730     1165                     __end_of_RN487X_IndicateRx:
 19731                           
 19732                           	psect	text63
 19733     135E                     __ptext63:	
 19734 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 19735 ;; Defined at:
 19736 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19737 ;; Parameters:    Size  Location     Type
 19738 ;;		None
 19739 ;; Auto vars:     Size  Location     Type
 19740 ;;  payload         5   18[BANK0 ] unsigned char [5]
 19741 ;;  temperature     2   23[BANK0 ] short 
 19742 ;;  read            1    0        unsigned char 
 19743 ;; Return value:  Size  Location     Type
 19744 ;;                  1    wreg      void 
 19745 ;; Registers used:
 19746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19747 ;; Tracked objects:
 19748 ;;		On entry : 0/0
 19749 ;;		On exit  : 0/0
 19750 ;;		Unchanged: 0/0
 19751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19753 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19755 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19756 ;;Total ram usage:        7 bytes
 19757 ;; Hardware stack levels used: 1
 19758 ;; Hardware stack levels required when called: 14
 19759 ;; This function calls:
 19760 ;;		_LIGHTBLUE_SendPacket
 19761 ;;		_LIGHTBLUE_SplitWord
 19762 ;;		_TMAG5273_GetTemperatureValue
 19763 ;; This function is called by:
 19764 ;;		_main
 19765 ;; This function uses a non-reentrant model
 19766 ;;
 19767                           
 19768     135E                     _LIGHTBLUE_TemperatureSensor:	
 19769                           ;psect for function _LIGHTBLUE_TemperatureSensor
 19770                           
 19771     135E                     l13944:	
 19772                           ;incstack = 0
 19773                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19774                           
 19775                           
 19776                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     uint8_t read;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 316:     *payload = '\0';
 19777     135E  0140               	movlb	0	; select bank0
 19778     135F  01B2               	clrf	LIGHTBLUE_TemperatureSensor@payload
 19779     1360                     l13946:
 19780                           
 19781                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     TMAG5273_GetTemperatureVa
      +                          lue(&temperature);
 19782     1360  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 19783     1361  3197  271C  3193   	fcall	_TMAG5273_GetTemperatureValue
 19784     1364                     l13948:
 19785                           
 19786                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 19787     1364  0140               	movlb	0	; select bank0
 19788     1365  0838               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 19789     1366  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 19790     1367  0837               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 19791     1368  00F9               	movwf	LIGHTBLUE_SplitWord@value
 19792     1369  3032               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 19793     136A  3191  21C5  3193   	fcall	_LIGHTBLUE_SplitWord
 19794     136D                     l13950:
 19795                           
 19796                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 19797     136D  3032               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 19798     136E  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 19799     136F  3054               	movlw	84
 19800     1370  3186  2643  3193   	fcall	_LIGHTBLUE_SendPacket
 19801     1373                     l124:
 19802     1373  0008               	return
 19803     1374                     __end_of_LIGHTBLUE_TemperatureSensor:
 19804                           
 19805                           	psect	text64
 19806     171C                     __ptext64:	
 19807 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 19808 ;; Defined at:
 19809 ;;		line 2560 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 19810 ;; Parameters:    Size  Location     Type
 19811 ;;  temperature     1    wreg     PTR short 
 19812 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;  temperature     1   11[COMMON] PTR short 
 19815 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 19816 ;; Return value:  Size  Location     Type
 19817 ;;                  1    wreg      void 
 19818 ;; Registers used:
 19819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19827 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19828 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19829 ;;Total ram usage:        6 bytes
 19830 ;; Hardware stack levels used: 1
 19831 ;; Hardware stack levels required when called: 13
 19832 ;; This function calls:
 19833 ;;		_i2c_read2ByteRegister
 19834 ;; This function is called by:
 19835 ;;		_LIGHTBLUE_TemperatureSensor
 19836 ;; This function uses a non-reentrant model
 19837 ;;
 19838                           
 19839     171C                     _TMAG5273_GetTemperatureValue:	
 19840                           ;psect for function _TMAG5273_GetTemperatureValue
 19841                           
 19842                           
 19843                           ;incstack = 0
 19844                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 19845                           ;TMAG5273_GetTemperatureValue@temperature stored from wreg
 19846     171C  00FB               	movwf	TMAG5273_GetTemperatureValue@temperature
 19847     171D                     l13260:
 19848                           
 19849                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2562:     data = i2c_r
      +                          ead2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 19850     171D  3010               	movlw	16
 19851     171E  0140               	movlb	0	; select bank0
 19852     171F  00A4               	movwf	i2c_read2ByteRegister@reg
 19853     1720  3022               	movlw	34
 19854     1721  318B  23C7  3197   	fcall	_i2c_read2ByteRegister
 19855     1724  0140               	movlb	0	; select bank0
 19856     1725  0825               	movf	?_i2c_read2ByteRegister+1,w
 19857     1726  00CF               	movwf	_data+1
 19858     1727  0824               	movf	?_i2c_read2ByteRegister,w
 19859     1728  00CE               	movwf	_data
 19860     1729                     l13262:
 19861                           
 19862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2563:     data = 25 + 
      +                          (data - 17508);
 19863     1729  084E               	movf	_data,w
 19864     172A  3EB5               	addlw	181
 19865     172B  00CE               	movwf	_data
 19866     172C  30BB               	movlw	187
 19867     172D  3D4F               	addwfc	_data+1,w
 19868     172E  00CF               	movwf	_data+1
 19869     172F                     l13264:
 19870                           
 19871                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2564:             uppe
      +                          rByte = ((data & (0x00FF)) >> 8);
 19872     172F  01E7               	clrf	_upperByte
 19873     1730                     l13266:
 19874                           
 19875                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2565:     lowerByte = 
      +                          (uint8_t) data;
 19876     1730  084E               	movf	_data,w
 19877     1731  00E6               	movwf	_lowerByte
 19878     1732                     l13268:
 19879                           
 19880                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2567:     data = ((int
      +                          16_t) (upperByte << 8) | lowerByte);
 19881     1732  0866               	movf	_lowerByte,w
 19882     1733  00AD               	movwf	??_TMAG5273_GetTemperatureValue
 19883     1734  01AE               	clrf	??_TMAG5273_GetTemperatureValue+1
 19884     1735  0867               	movf	_upperByte,w
 19885     1736  00AF               	movwf	??_TMAG5273_GetTemperatureValue+2
 19886     1737  01B0               	clrf	??_TMAG5273_GetTemperatureValue+3
 19887     1738  082F               	movf	??_TMAG5273_GetTemperatureValue+2,w
 19888     1739  00B0               	movwf	??_TMAG5273_GetTemperatureValue+3
 19889     173A  01AF               	clrf	??_TMAG5273_GetTemperatureValue+2
 19890     173B  082D               	movf	??_TMAG5273_GetTemperatureValue,w
 19891     173C  042F               	iorwf	??_TMAG5273_GetTemperatureValue+2,w
 19892     173D  00CE               	movwf	_data
 19893     173E  082E               	movf	??_TMAG5273_GetTemperatureValue+1,w
 19894     173F  0430               	iorwf	??_TMAG5273_GetTemperatureValue+3,w
 19895     1740  00CF               	movwf	_data+1
 19896     1741                     l13270:
 19897                           
 19898                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2568:     *temperature
      +                           = data;
 19899     1741  087B               	movf	TMAG5273_GetTemperatureValue@temperature,w
 19900     1742  0086               	movwf	6
 19901     1743  0187               	clrf	7
 19902     1744  084E               	movf	_data,w
 19903     1745  3FC0               	movwi [0]fsr1
 19904     1746  084F               	movf	_data+1,w
 19905     1747  3FC1               	movwi [1]fsr1
 19906     1748                     l1247:
 19907     1748  0008               	return
 19908     1749                     __end_of_TMAG5273_GetTemperatureValue:
 19909                           
 19910                           	psect	text65
 19911     0599                     __ptext65:	
 19912 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 19913 ;; Defined at:
 19914 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  serialData      1    wreg     PTR unsigned char 
 19917 ;;		 -> lightBlueSerial(80), 
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;  serialData      1    9[COMMON] PTR unsigned char 
 19920 ;;		 -> lightBlueSerial(80), 
 19921 ;;  length          1    8[COMMON] unsigned char 
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  1    wreg      void 
 19924 ;; Registers used:
 19925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19934 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19935 ;;Total ram usage:        3 bytes
 19936 ;; Hardware stack levels used: 1
 19937 ;; Hardware stack levels required when called: 6
 19938 ;; This function calls:
 19939 ;;		_RN487X_Write
 19940 ;;		_strlen
 19941 ;; This function is called by:
 19942 ;;		_main
 19943 ;; This function uses a non-reentrant model
 19944 ;;
 19945                           
 19946     0599                     _LIGHTBLUE_SendSerialData:	
 19947                           ;psect for function _LIGHTBLUE_SendSerialData
 19948                           
 19949                           
 19950                           ;incstack = 0
 19951                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19952                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 19953     0599  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 19954     059A                     l13998:
 19955                           
 19956                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 19957     059A  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 19958     059B  00F1               	movwf	strlen@s
 19959     059C  3002               	movlw	2
 19960     059D  00F2               	movwf	strlen@s+1
 19961     059E  3194  2417  3185   	fcall	_strlen
 19962     05A1  0871               	movf	?_strlen,w
 19963     05A2  0709               	addwf	9,w
 19964     05A3  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 19965     05A4                     l14000:
 19966                           
 19967                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 19968     05A4  305B               	movlw	91
 19969     05A5  00F6               	movwf	RN487X_Write@txData
 19970     05A6  3068               	movlw	low (_RN487X| (0+32768))
 19971     05A7  0084               	movwf	4
 19972     05A8  3098               	movlw	high (_RN487X| (0+32768))
 19973     05A9  0085               	movwf	5
 19974     05AA  3F01               	moviw [1]fsr0
 19975     05AB  008A               	movwf	10
 19976     05AC  3F00               	moviw [0]fsr0
 19977     05AD  000A               	callw
 19978     05AE  3185               	pagesel	$
 19979     05AF                     l14002:
 19980                           
 19981                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 19982     05AF  0140               	movlb	0	; select bank0
 19983     05B0  086E               	movf	_sequenceNumber,w
 19984     05B1  390F               	andlw	15
 19985     05B2  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 19986     05B3  0086               	movwf	6
 19987     05B4  3001               	movlw	1	; select bank3/4
 19988     05B5  0087               	movwf	7
 19989     05B6  0801               	movf	1,w
 19990     05B7  00F6               	movwf	RN487X_Write@txData
 19991     05B8  3068               	movlw	low (_RN487X| (0+32768))
 19992     05B9  0084               	movwf	4
 19993     05BA  3098               	movlw	high (_RN487X| (0+32768))
 19994     05BB  0085               	movwf	5
 19995     05BC  3F01               	moviw [1]fsr0
 19996     05BD  008A               	movwf	10
 19997     05BE  3F00               	moviw [0]fsr0
 19998     05BF  000A               	callw
 19999     05C0  3185               	pagesel	$
 20000     05C1                     l14004:
 20001     05C1  3001               	movlw	1
 20002     05C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20003     05C3  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20004     05C4  0140               	movlb	0	; select bank0
 20005     05C5  07EE               	addwf	_sequenceNumber,f
 20006     05C6                     l14006:
 20007                           
 20008                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20009     05C6  3053               	movlw	83
 20010     05C7  00F6               	movwf	RN487X_Write@txData
 20011     05C8  3068               	movlw	low (_RN487X| (0+32768))
 20012     05C9  0084               	movwf	4
 20013     05CA  3098               	movlw	high (_RN487X| (0+32768))
 20014     05CB  0085               	movwf	5
 20015     05CC  3F01               	moviw [1]fsr0
 20016     05CD  008A               	movwf	10
 20017     05CE  3F00               	moviw [0]fsr0
 20018     05CF  000A               	callw
 20019     05D0  3185               	pagesel	$
 20020     05D1                     l14008:
 20021                           
 20022                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20023     05D1  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20024     05D2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20025     05D3  3004               	movlw	4
 20026     05D4                     u11445:
 20027     05D4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20028     05D5  0B89               	decfsz	9,f
 20029     05D6  2DD4               	goto	u11445
 20030     05D7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20031     05D8  390F               	andlw	15
 20032     05D9  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20033     05DA  0086               	movwf	6
 20034     05DB  3001               	movlw	1	; select bank3/4
 20035     05DC  0087               	movwf	7
 20036     05DD  0801               	movf	1,w
 20037     05DE  00F6               	movwf	RN487X_Write@txData
 20038     05DF  3068               	movlw	low (_RN487X| (0+32768))
 20039     05E0  0084               	movwf	4
 20040     05E1  3098               	movlw	high (_RN487X| (0+32768))
 20041     05E2  0085               	movwf	5
 20042     05E3  3F01               	moviw [1]fsr0
 20043     05E4  008A               	movwf	10
 20044     05E5  3F00               	moviw [0]fsr0
 20045     05E6  000A               	callw
 20046     05E7  3185               	pagesel	$
 20047     05E8                     l14010:
 20048                           
 20049                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20050     05E8  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20051     05E9  390F               	andlw	15
 20052     05EA  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20053     05EB  0086               	movwf	6
 20054     05EC  3001               	movlw	1	; select bank3/4
 20055     05ED  0087               	movwf	7
 20056     05EE  0801               	movf	1,w
 20057     05EF  00F6               	movwf	RN487X_Write@txData
 20058     05F0  3068               	movlw	low (_RN487X| (0+32768))
 20059     05F1  0084               	movwf	4
 20060     05F2  3098               	movlw	high (_RN487X| (0+32768))
 20061     05F3  0085               	movwf	5
 20062     05F4  3F01               	moviw [1]fsr0
 20063     05F5  008A               	movwf	10
 20064     05F6  3F00               	moviw [0]fsr0
 20065     05F7  000A               	callw
 20066     05F8  3185               	pagesel	$
 20067                           
 20068                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20069     05F9  2E2E               	goto	l14016
 20070     05FA                     l14012:
 20071                           
 20072                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20073     05FA  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20074     05FB  0086               	movwf	6
 20075     05FC  3002               	movlw	2	; select bank4/5
 20076     05FD  0087               	movwf	7
 20077     05FE  0801               	movf	1,w
 20078     05FF  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20079     0600  3004               	movlw	4
 20080     0601                     u11455:
 20081     0601  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20082     0602  0B89               	decfsz	9,f
 20083     0603  2E01               	goto	u11455
 20084     0604  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20085     0605  390F               	andlw	15
 20086     0606  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20087     0607  0086               	movwf	6
 20088     0608  3001               	movlw	1	; select bank3/4
 20089     0609  0087               	movwf	7
 20090     060A  0801               	movf	1,w
 20091     060B  00F6               	movwf	RN487X_Write@txData
 20092     060C  3068               	movlw	low (_RN487X| (0+32768))
 20093     060D  0084               	movwf	4
 20094     060E  3098               	movlw	high (_RN487X| (0+32768))
 20095     060F  0085               	movwf	5
 20096     0610  3F01               	moviw [1]fsr0
 20097     0611  008A               	movwf	10
 20098     0612  3F00               	moviw [0]fsr0
 20099     0613  000A               	callw
 20100     0614  3185               	pagesel	$
 20101                           
 20102                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20103     0615  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20104     0616  0086               	movwf	6
 20105     0617  3002               	movlw	2	; select bank4/5
 20106     0618  0087               	movwf	7
 20107     0619  0801               	movf	1,w
 20108     061A  390F               	andlw	15
 20109     061B  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20110     061C  0086               	movwf	6
 20111     061D  3001               	movlw	1	; select bank3/4
 20112     061E  0087               	movwf	7
 20113     061F  0801               	movf	1,w
 20114     0620  00F6               	movwf	RN487X_Write@txData
 20115     0621  3068               	movlw	low (_RN487X| (0+32768))
 20116     0622  0084               	movwf	4
 20117     0623  3098               	movlw	high (_RN487X| (0+32768))
 20118     0624  0085               	movwf	5
 20119     0625  3F01               	moviw [1]fsr0
 20120     0626  008A               	movwf	10
 20121     0627  3F00               	moviw [0]fsr0
 20122     0628  000A               	callw
 20123     0629  3185               	pagesel	$
 20124     062A                     l14014:
 20125     062A  3001               	movlw	1
 20126     062B  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20127     062C  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20128     062D  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20129     062E                     l14016:
 20130                           
 20131                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20132     062E  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20133     062F  0086               	movwf	6
 20134     0630  3002               	movlw	2	; select bank4/5
 20135     0631  0087               	movwf	7
 20136     0632  0801               	movf	1,w
 20137     0633  1D03               	btfss	3,2
 20138     0634  2E36               	goto	u11461
 20139     0635  2E37               	goto	u11460
 20140     0636                     u11461:
 20141     0636  2DFA               	goto	l14012
 20142     0637                     u11460:
 20143     0637                     l14018:
 20144                           
 20145                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20146     0637  305D               	movlw	93
 20147     0638  00F6               	movwf	RN487X_Write@txData
 20148     0639  3068               	movlw	low (_RN487X| (0+32768))
 20149     063A  0084               	movwf	4
 20150     063B  3098               	movlw	high (_RN487X| (0+32768))
 20151     063C  0085               	movwf	5
 20152     063D  3F01               	moviw [1]fsr0
 20153     063E  008A               	movwf	10
 20154     063F  3F00               	moviw [0]fsr0
 20155     0640  000A               	callw
 20156     0641  3185               	pagesel	$
 20157     0642                     l145:
 20158     0642  0008               	return
 20159     0643                     __end_of_LIGHTBLUE_SendSerialData:
 20160                           
 20161                           	psect	text66
 20162     08A7                     __ptext66:	
 20163 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20164 ;; Defined at:
 20165 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;		None
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20170 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20171 ;;  value           1   21[BANK0 ] unsigned char 
 20172 ;; Return value:  Size  Location     Type
 20173 ;;                  1    wreg      void 
 20174 ;; Registers used:
 20175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20176 ;; Tracked objects:
 20177 ;;		On entry : 0/0
 20178 ;;		On exit  : 0/0
 20179 ;;		Unchanged: 0/0
 20180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20182 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20184 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20185 ;;Total ram usage:       23 bytes
 20186 ;; Hardware stack levels used: 1
 20187 ;; Hardware stack levels required when called: 7
 20188 ;; This function calls:
 20189 ;;		_LIGHTBLUE_SendPacket
 20190 ;;		_LIGHTBLUE_SplitByte
 20191 ;;		_strlen
 20192 ;; This function is called by:
 20193 ;;		_main
 20194 ;; This function uses a non-reentrant model
 20195 ;;
 20196                           
 20197     08A7                     _LIGHTBLUE_SendProtocolVersion:	
 20198                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20199                           
 20200     08A7                     l13986:	
 20201                           ;incstack = 0
 20202                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20203                           
 20204                           
 20205                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20206     08A7  0140               	movlb	0	; select bank0
 20207     08A8  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20208                           
 20209                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20210     08A9  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20211     08AA  28BF               	goto	l13994
 20212     08AB                     l13988:
 20213                           
 20214                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20215     08AB  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20216     08AC  3E9C               	addlw	low (STR_1| (0+32768))
 20217     08AD  0084               	movwf	4
 20218     08AE  3098               	movlw	high (STR_1| (0+32768))
 20219     08AF  1803               	skipnc
 20220     08B0  3E01               	addlw	1
 20221     08B1  0085               	movwf	5
 20222     08B2  0800               	movf	0,w	;code access
 20223     08B3  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20224     08B4                     l13990:
 20225                           
 20226                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20227     08B4  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20228     08B5  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20229     08B6  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20230     08B7  3188  2043  3188   	fcall	_LIGHTBLUE_SplitByte
 20231     08BA                     l13992:
 20232                           
 20233                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20234     08BA  3001               	movlw	1
 20235     08BB  0140               	movlb	0	; select bank0
 20236     08BC  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20237     08BD  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20238     08BE  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20239     08BF                     l13994:
 20240     08BF  309C               	movlw	low (STR_1| (0+32768))
 20241     08C0  00F1               	movwf	strlen@s
 20242     08C1  3098               	movlw	high (STR_1| (0+32768))
 20243     08C2  00F2               	movwf	strlen@s+1
 20244     08C3  3194  2417  3188   	fcall	_strlen
 20245     08C6  0140               	movlb	0	; select bank0
 20246     08C7  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20247     08C8  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20248     08C9  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20249     08CA  0872               	movf	?_strlen+1,w
 20250     08CB  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20251     08CC  1D03               	skipz
 20252     08CD  28D0               	goto	u11435
 20253     08CE  0871               	movf	?_strlen,w
 20254     08CF  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20255     08D0                     u11435:
 20256     08D0  1C03               	skipc
 20257     08D1  28D3               	goto	u11431
 20258     08D2  28D4               	goto	u11430
 20259     08D3                     u11431:
 20260     08D3  28AB               	goto	l13988
 20261     08D4                     u11430:
 20262     08D4                     l13996:
 20263                           
 20264                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20265     08D4  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20266     08D5  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20267     08D6  3056               	movlw	86
 20268     08D7  3186  2643  3188   	fcall	_LIGHTBLUE_SendPacket
 20269     08DA                     l139:
 20270     08DA  0008               	return
 20271     08DB                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20272                           
 20273                           	psect	text67
 20274     12F9                     __ptext67:	
 20275 ;; *************** function _LIGHTBLUE_PushButton *****************
 20276 ;; Defined at:
 20277 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20278 ;; Parameters:    Size  Location     Type
 20279 ;;		None
 20280 ;; Auto vars:     Size  Location     Type
 20281 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20282 ;;  button          1    0[BANK0 ] unsigned char 
 20283 ;; Return value:  Size  Location     Type
 20284 ;;                  1    wreg      void 
 20285 ;; Registers used:
 20286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20287 ;; Tracked objects:
 20288 ;;		On entry : 0/0
 20289 ;;		On exit  : 0/0
 20290 ;;		Unchanged: 0/0
 20291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20293 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20296 ;;Total ram usage:        4 bytes
 20297 ;; Hardware stack levels used: 1
 20298 ;; Hardware stack levels required when called: 7
 20299 ;; This function calls:
 20300 ;;		_LIGHTBLUE_GetButtonValue
 20301 ;;		_LIGHTBLUE_SendPacket
 20302 ;;		_LIGHTBLUE_SplitByte
 20303 ;; This function is called by:
 20304 ;;		_main
 20305 ;; This function uses a non-reentrant model
 20306 ;;
 20307                           
 20308     12F9                     _LIGHTBLUE_PushButton:	
 20309                           ;psect for function _LIGHTBLUE_PushButton
 20310                           
 20311     12F9                     l13964:	
 20312                           ;incstack = 0
 20313                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20314                           
 20315                           
 20316                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20317     12F9  3190  2073  3192   	fcall	_LIGHTBLUE_GetButtonValue
 20318     12FC  0140               	movlb	0	; select bank0
 20319     12FD  00A0               	movwf	LIGHTBLUE_PushButton@button
 20320     12FE                     l13966:
 20321                           
 20322                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20323     12FE  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20324     12FF                     l13968:
 20325                           
 20326                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20327     12FF  0820               	movf	LIGHTBLUE_PushButton@button,w
 20328     1300  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20329     1301  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20330     1302  3188  2043  3192   	fcall	_LIGHTBLUE_SplitByte
 20331     1305                     l13970:
 20332                           
 20333                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20334     1305  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20335     1306  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20336     1307  3050               	movlw	80
 20337     1308  3186  2643  3192   	fcall	_LIGHTBLUE_SendPacket
 20338     130B                     l130:
 20339     130B  0008               	return
 20340     130C                     __end_of_LIGHTBLUE_PushButton:
 20341                           
 20342                           	psect	text68
 20343     1073                     __ptext68:	
 20344 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20345 ;; Defined at:
 20346 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;		None
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;		None
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      unsigned char 
 20353 ;; Registers used:
 20354 ;;		wreg, status,2, status,0
 20355 ;; Tracked objects:
 20356 ;;		On entry : 0/0
 20357 ;;		On exit  : 0/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20364 ;;Total ram usage:        0 bytes
 20365 ;; Hardware stack levels used: 1
 20366 ;; Hardware stack levels required when called: 4
 20367 ;; This function calls:
 20368 ;;		Nothing
 20369 ;; This function is called by:
 20370 ;;		_LIGHTBLUE_PushButton
 20371 ;; This function uses a non-reentrant model
 20372 ;;
 20373                           
 20374     1073                     _LIGHTBLUE_GetButtonValue:	
 20375                           ;psect for function _LIGHTBLUE_GetButtonValue
 20376                           
 20377     1073                     l13292:	
 20378                           ;incstack = 0
 20379                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20380                           
 20381                           
 20382                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20383     1073  0140               	movlb	0	; select bank0
 20384     1074  0D0C               	rlf	12,w	;volatile
 20385     1075  0D0C               	rlf	12,w	;volatile
 20386     1076  3901               	andlw	1
 20387     1077  3C01               	sublw	1
 20388     1078                     l202:
 20389     1078  0008               	return
 20390     1079                     __end_of_LIGHTBLUE_GetButtonValue:
 20391                           
 20392                           	psect	text69
 20393     03F2                     __ptext69:	
 20394 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20395 ;; Defined at:
 20396 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;  receivedByte    1    wreg     unsigned char 
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20411 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20413 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20414 ;;Total ram usage:        9 bytes
 20415 ;; Hardware stack levels used: 1
 20416 ;; Hardware stack levels required when called: 11
 20417 ;; This function calls:
 20418 ;;		_LIGHTBLUE_PerformAction
 20419 ;; This function is called by:
 20420 ;;		_main
 20421 ;; This function uses a non-reentrant model
 20422 ;;
 20423                           
 20424     03F2                     _LIGHTBLUE_ParseIncomingPacket:	
 20425                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20426                           
 20427                           
 20428                           ;incstack = 0
 20429                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20430                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20431     03F2  0140               	movlb	0	; select bank0
 20432     03F3  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20433     03F4                     l14020:
 20434                           
 20435                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20436     03F4  2CA9               	goto	l14080
 20437     03F5                     l14022:
 20438                           
 20439                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20440     03F5  3002               	movlw	2
 20441     03F6  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20442                           
 20443                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20444     03F7  2CC8               	goto	l187
 20445     03F8                     l14024:
 20446                           
 20447                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20448     03F8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20449     03F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20450                           
 20451                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20452     03FA  3003               	movlw	3
 20453     03FB  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20454                           
 20455                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20456     03FC  2CC8               	goto	l187
 20457     03FD                     l14026:
 20458                           
 20459                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20460     03FD  303A               	movlw	58
 20461     03FE  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20462     03FF  1C03               	skipc
 20463     0400  2C02               	goto	u11471
 20464     0401  2C03               	goto	u11470
 20465     0402                     u11471:
 20466     0402  2C0C               	goto	l14030
 20467     0403                     u11470:
 20468     0403                     l14028:
 20469     0403  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20470     0404  395F               	andlw	95
 20471     0405  3EC9               	addlw	201
 20472     0406  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20473     0407  30FF               	movlw	255
 20474     0408  1803               	skipnc
 20475     0409  3000               	movlw	0
 20476     040A  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20477     040B  2C13               	goto	l164
 20478     040C                     l14030:
 20479     040C  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20480     040D  3ED0               	addlw	208
 20481     040E  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20482     040F  30FF               	movlw	255
 20483     0410  1803               	skipnc
 20484     0411  3000               	movlw	0
 20485     0412  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20486     0413                     l164:
 20487     0413  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$431,w
 20488     0414  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20489                           
 20490                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20491     0415  3004               	movlw	4
 20492     0416  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20493                           
 20494                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20495     0417  2CC8               	goto	l187
 20496     0418                     l14032:
 20497                           
 20498                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20499     0418  303A               	movlw	58
 20500     0419  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20501     041A  1C03               	skipc
 20502     041B  2C1D               	goto	u11481
 20503     041C  2C1E               	goto	u11480
 20504     041D                     u11481:
 20505     041D  2C27               	goto	l14036
 20506     041E                     u11480:
 20507     041E                     l14034:
 20508     041E  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20509     041F  395F               	andlw	95
 20510     0420  3EC9               	addlw	201
 20511     0421  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20512     0422  30FF               	movlw	255
 20513     0423  1803               	skipnc
 20514     0424  3000               	movlw	0
 20515     0425  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20516     0426  2C2E               	goto	l14038
 20517     0427                     l14036:
 20518     0427  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20519     0428  3ED0               	addlw	208
 20520     0429  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20521     042A  30FF               	movlw	255
 20522     042B  1803               	skipnc
 20523     042C  3000               	movlw	0
 20524     042D  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20525     042E                     l14038:
 20526     042E  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20527     042F  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20528     0430  3003               	movlw	3
 20529     0431                     u11495:
 20530     0431  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20531     0432  3EFF               	addlw	-1
 20532     0433  1D03               	skipz
 20533     0434  2C31               	goto	u11495
 20534     0435  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20535     0436  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$432,w
 20536     0437  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20537     0438                     l14040:
 20538                           
 20539                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 20540     0438  3005               	movlw	5
 20541     0439  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20542                           
 20543                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 20544     043A  2CC8               	goto	l187
 20545     043B                     l14042:
 20546                           
 20547                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20548     043B  303A               	movlw	58
 20549     043C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20550     043D  1C03               	skipc
 20551     043E  2C40               	goto	u11501
 20552     043F  2C41               	goto	u11500
 20553     0440                     u11501:
 20554     0440  2C4B               	goto	l14046
 20555     0441                     u11500:
 20556     0441                     l14044:
 20557     0441  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20558     0442  395F               	andlw	95
 20559     0443  3EC9               	addlw	201
 20560     0444  0141               	movlb	1	; select bank1
 20561     0445  00DC               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20562     0446  30FF               	movlw	255
 20563     0447  1803               	skipnc
 20564     0448  3000               	movlw	0
 20565     0449  00DD               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20566     044A  2C53               	goto	l14048
 20567     044B                     l14046:
 20568     044B  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20569     044C  3ED0               	addlw	208
 20570     044D  0141               	movlb	1	; select bank1
 20571     044E  00DC               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20572     044F  30FF               	movlw	255
 20573     0450  1803               	skipnc
 20574     0451  3000               	movlw	0
 20575     0452  00DD               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20576     0453                     l14048:
 20577                           
 20578                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 20579     0453  3001               	movlw	1
 20580     0454  0140               	movlb	0	; select bank0
 20581     0455  02EC               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20582     0456                     l14050:
 20583                           
 20584                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 20585     0456  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20586     0457  1D03               	btfss	3,2
 20587     0458  2C5A               	goto	u11511
 20588     0459  2C5B               	goto	u11510
 20589     045A                     u11511:
 20590     045A  2C5D               	goto	l14054
 20591     045B                     u11510:
 20592     045B                     l14052:
 20593                           
 20594                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 20595     045B  01ED               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20596                           
 20597                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 20598     045C  2CC8               	goto	l187
 20599     045D                     l14054:
 20600                           
 20601                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 20602     045D  3006               	movlw	6
 20603     045E  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20604     045F  2CC8               	goto	l187
 20605     0460                     l14056:
 20606                           
 20607                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20608     0460  303A               	movlw	58
 20609     0461  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20610     0462  1C03               	skipc
 20611     0463  2C65               	goto	u11521
 20612     0464  2C66               	goto	u11520
 20613     0465                     u11521:
 20614     0465  2C6F               	goto	l14060
 20615     0466                     u11520:
 20616     0466                     l14058:
 20617     0466  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20618     0467  395F               	andlw	95
 20619     0468  3EC9               	addlw	201
 20620     0469  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 20621     046A  30FF               	movlw	255
 20622     046B  1803               	skipnc
 20623     046C  3000               	movlw	0
 20624     046D  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 20625     046E  2C76               	goto	l14062
 20626     046F                     l14060:
 20627     046F  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20628     0470  3ED0               	addlw	208
 20629     0471  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 20630     0472  30FF               	movlw	255
 20631     0473  1803               	skipnc
 20632     0474  3000               	movlw	0
 20633     0475  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 20634     0476                     l14062:
 20635     0476  0141               	movlb	1	; select bank1
 20636     0477  085D               	movf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128),w
 20637     0478  0140               	movlb	0	; select bank0
 20638     0479  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 20639     047A  0141               	movlb	1	; select bank1
 20640     047B  085C               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 20641     047C  0140               	movlb	0	; select bank0
 20642     047D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20643     047E  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 20644     047F  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20645     0480  30F0               	movlw	240
 20646     0481  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20647     0482  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 20648     0483  390F               	andlw	15
 20649     0484  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20650     0485  30F0               	movlw	240
 20651     0486  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 20652     0487  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$433,w
 20653     0488  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 20654     0489  0141               	movlb	1	; select bank1
 20655     048A  00DC               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20656     048B  0140               	movlb	0	; select bank0
 20657     048C  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$433+1,w
 20658     048D  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 20659     048E  0141               	movlb	1	; select bank1
 20660     048F  00DD               	movwf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128)
 20661     0490                     l14064:
 20662                           
 20663                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 20664     0490  085C               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 20665     0491  0140               	movlb	0	; select bank0
 20666     0492  00A7               	movwf	LIGHTBLUE_PerformAction@data
 20667     0493  086B               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 20668     0494  3189  21ED  3183   	fcall	_LIGHTBLUE_PerformAction
 20669     0497                     l14066:
 20670                           
 20671                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 20672     0497  3001               	movlw	1
 20673     0498  0140               	movlb	0	; select bank0
 20674     0499  02EC               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20675     049A                     l14068:
 20676                           
 20677                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 20678     049A  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20679     049B  1D03               	btfss	3,2
 20680     049C  2C9E               	goto	u11531
 20681     049D  2C9F               	goto	u11530
 20682     049E                     u11531:
 20683     049E  2C38               	goto	l14040
 20684     049F                     u11530:
 20685     049F  2C5B               	goto	l14052
 20686     04A0                     l14074:
 20687                           
 20688                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 20689     04A0  305B               	movlw	91
 20690     04A1  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20691     04A2  1D03               	btfss	3,2
 20692     04A3  2CA5               	goto	u11541
 20693     04A4  2CA6               	goto	u11540
 20694     04A5                     u11541:
 20695     04A5  2CC8               	goto	l187
 20696     04A6                     u11540:
 20697     04A6                     l14076:
 20698                           
 20699                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 20700     04A6  01ED               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20701     04A7  0AED               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 20702     04A8  2CC8               	goto	l187
 20703     04A9                     l14080:
 20704     04A9  086D               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 20705     04AA  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20706     04AB  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 20707                           
 20708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20709                           ; Switch size 1, requested type "simple"
 20710                           ; Number of cases is 1, Range of values is 0 to 0
 20711                           ; switch strategies available:
 20712                           ; Name         Instructions Cycles
 20713                           ; simple_byte            4     3 (average)
 20714                           ; direct_byte            8     6 (fixed)
 20715                           ; jumptable            260     6 (fixed)
 20716                           ;	Chosen strategy is simple_byte
 20717     04AC  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 20718     04AD  3A00               	xorlw	0	; case 0
 20719     04AE  1903               	skipnz
 20720     04AF  2CB1               	goto	l16036
 20721     04B0  2CA0               	goto	l14074
 20722     04B1                     l16036:
 20723                           
 20724                           ; Switch size 1, requested type "simple"
 20725                           ; Number of cases is 7, Range of values is 0 to 6
 20726                           ; switch strategies available:
 20727                           ; Name         Instructions Cycles
 20728                           ; direct_byte           20     6 (fixed)
 20729                           ; simple_byte           22    12 (average)
 20730                           ; jumptable            260     6 (fixed)
 20731                           ;	Chosen strategy is simple_byte
 20732     04B1  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 20733     04B2  3A00               	xorlw	0	; case 0
 20734     04B3  1903               	skipnz
 20735     04B4  2CA0               	goto	l14074
 20736     04B5  3A01               	xorlw	1	; case 1
 20737     04B6  1903               	skipnz
 20738     04B7  2BF5               	goto	l14022
 20739     04B8  3A03               	xorlw	3	; case 2
 20740     04B9  1903               	skipnz
 20741     04BA  2BF8               	goto	l14024
 20742     04BB  3A01               	xorlw	1	; case 3
 20743     04BC  1903               	skipnz
 20744     04BD  2BFD               	goto	l14026
 20745     04BE  3A07               	xorlw	7	; case 4
 20746     04BF  1903               	skipnz
 20747     04C0  2C18               	goto	l14032
 20748     04C1  3A01               	xorlw	1	; case 5
 20749     04C2  1903               	skipnz
 20750     04C3  2C3B               	goto	l14042
 20751     04C4  3A03               	xorlw	3	; case 6
 20752     04C5  1903               	skipnz
 20753     04C6  2C60               	goto	l14056
 20754     04C7  2CA0               	goto	l14074
 20755     04C8                     l187:
 20756     04C8  0008               	return
 20757     04C9                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 20758                           
 20759                           	psect	text70
 20760     09ED                     __ptext70:	
 20761 ;; *************** function _LIGHTBLUE_PerformAction *****************
 20762 ;; Defined at:
 20763 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20764 ;; Parameters:    Size  Location     Type
 20765 ;;  id              1    wreg     unsigned char 
 20766 ;;  data            1    7[BANK0 ] unsigned char 
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;  id              1    9[BANK0 ] unsigned char 
 20769 ;;  led             1   10[BANK0 ] unsigned char 
 20770 ;; Return value:  Size  Location     Type
 20771 ;;                  1    wreg      void 
 20772 ;; Registers used:
 20773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20774 ;; Tracked objects:
 20775 ;;		On entry : 0/0
 20776 ;;		On exit  : 0/0
 20777 ;;		Unchanged: 0/0
 20778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20779 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20780 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;Total ram usage:        4 bytes
 20784 ;; Hardware stack levels used: 1
 20785 ;; Hardware stack levels required when called: 10
 20786 ;; This function calls:
 20787 ;;		_EUSART1_Write
 20788 ;;		_EUSART2_Write
 20789 ;;		_LIGHTBLUE_SetErrorLedValue
 20790 ;; This function is called by:
 20791 ;;		_LIGHTBLUE_ParseIncomingPacket
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795     09ED                     _LIGHTBLUE_PerformAction:	
 20796                           ;psect for function _LIGHTBLUE_PerformAction
 20797                           
 20798                           
 20799                           ;incstack = 0
 20800                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20801                           ;LIGHTBLUE_PerformAction@id stored from wreg
 20802     09ED  0140               	movlb	0	; select bank0
 20803     09EE  00A9               	movwf	LIGHTBLUE_PerformAction@id
 20804     09EF                     l13304:
 20805                           
 20806                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 20807     09EF  2A1C               	goto	l13316
 20808     09F0                     l13306:
 20809                           
 20810                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 20811     09F0  0827               	movf	LIGHTBLUE_PerformAction@data,w
 20812     09F1  00A8               	movwf	??_LIGHTBLUE_PerformAction
 20813     09F2  3004               	movlw	4
 20814     09F3                     u10445:
 20815     09F3  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 20816     09F4  0B89               	decfsz	9,f
 20817     09F5  29F3               	goto	u10445
 20818     09F6  0828               	movf	??_LIGHTBLUE_PerformAction,w
 20819     09F7  3901               	andlw	1
 20820     09F8  00AA               	movwf	LIGHTBLUE_PerformAction@led
 20821                           
 20822                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 20823     09F9  082A               	movf	LIGHTBLUE_PerformAction@led,w
 20824     09FA  1D03               	btfss	3,2
 20825     09FB  29FD               	goto	u10451
 20826     09FC  29FE               	goto	u10450
 20827     09FD                     u10451:
 20828     09FD  2A06               	goto	l13310
 20829     09FE                     u10450:
 20830     09FE                     l13308:
 20831                           
 20832                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 20833     09FE  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 20834     09FF  2A01               	goto	u10461
 20835     0A00  2A02               	goto	u10460
 20836     0A01                     u10461:
 20837     0A01  2A04               	goto	l224
 20838     0A02                     u10460:
 20839     0A02                     l221:	
 20840                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 20841                           
 20842     0A02  1698               	bsf	24,5	;volatile
 20843     0A03  2A24               	goto	l230
 20844     0A04                     l224:	
 20845                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 20846                           
 20847     0A04  1298               	bcf	24,5	;volatile
 20848     0A05  2A24               	goto	l230
 20849     0A06                     l13310:
 20850                           
 20851                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 20852     0A06  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 20853     0A07  2A09               	goto	u10471
 20854     0A08  2A0B               	goto	u10470
 20855     0A09                     u10471:
 20856     0A09  3001               	movlw	1
 20857     0A0A  2A0C               	goto	u10480
 20858     0A0B                     u10470:
 20859     0A0B  3000               	movlw	0
 20860     0A0C                     u10480:
 20861     0A0C  3192  2200  3189   	fcall	_LIGHTBLUE_SetErrorLedValue
 20862     0A0F  2A24               	goto	l230
 20863     0A10                     l13312:
 20864                           
 20865                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 20866     0A10  0827               	movf	LIGHTBLUE_PerformAction@data,w
 20867     0A11  00F1               	movwf	EUSART2_Write@txData
 20868     0A12  3002               	movlw	low ((_uart+2)| (0+32768))
 20869     0A13  0084               	movwf	4
 20870     0A14  3098               	movlw	high ((_uart+2)| (0+32768))
 20871     0A15  0085               	movwf	5
 20872     0A16  3F01               	moviw [1]fsr0
 20873     0A17  008A               	movwf	10
 20874     0A18  3F00               	moviw [0]fsr0
 20875     0A19  000A               	callw
 20876     0A1A  3189               	pagesel	$
 20877                           
 20878                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 20879     0A1B  2A24               	goto	l230
 20880     0A1C                     l13316:
 20881     0A1C  0829               	movf	LIGHTBLUE_PerformAction@id,w
 20882                           
 20883                           ; Switch size 1, requested type "simple"
 20884                           ; Number of cases is 2, Range of values is 76 to 83
 20885                           ; switch strategies available:
 20886                           ; Name         Instructions Cycles
 20887                           ; simple_byte            7     4 (average)
 20888                           ; direct_byte           25     9 (fixed)
 20889                           ; jumptable            263     9 (fixed)
 20890                           ;	Chosen strategy is simple_byte
 20891     0A1D  3A4C               	xorlw	76	; case 76
 20892     0A1E  1903               	skipnz
 20893     0A1F  29F0               	goto	l13306
 20894     0A20  3A1F               	xorlw	31	; case 83
 20895     0A21  1903               	skipnz
 20896     0A22  2A10               	goto	l13312
 20897     0A23  2A24               	goto	l230
 20898     0A24                     l230:
 20899     0A24  0008               	return
 20900     0A25                     __end_of_LIGHTBLUE_PerformAction:
 20901                           
 20902                           	psect	text71
 20903     1200                     __ptext71:	
 20904 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 20905 ;; Defined at:
 20906 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;  value           1    wreg     _Bool 
 20909 ;; Auto vars:     Size  Location     Type
 20910 ;;  value           1    6[BANK0 ] _Bool 
 20911 ;; Return value:  Size  Location     Type
 20912 ;;                  1    wreg      void 
 20913 ;; Registers used:
 20914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20915 ;; Tracked objects:
 20916 ;;		On entry : 0/0
 20917 ;;		On exit  : 0/0
 20918 ;;		Unchanged: 0/0
 20919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20923 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20924 ;;Total ram usage:        2 bytes
 20925 ;; Hardware stack levels used: 1
 20926 ;; Hardware stack levels required when called: 9
 20927 ;; This function calls:
 20928 ;;		_LIGHTBLUE_UpdateErrorLed
 20929 ;; This function is called by:
 20930 ;;		_LIGHTBLUE_PerformAction
 20931 ;; This function uses a non-reentrant model
 20932 ;;
 20933                           
 20934     1200                     _LIGHTBLUE_SetErrorLedValue:	
 20935                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 20936                           
 20937                           
 20938                           ;incstack = 0
 20939                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20940                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 20941     1200  0140               	movlb	0	; select bank0
 20942     1201  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 20943     1202                     l13142:
 20944                           
 20945                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 20946     1202  3001               	movlw	1
 20947     1203  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 20948     1204  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 20949     1205  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 20950     1206  0851               	movf	_bitMap+1,w	;volatile
 20951     1207  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 20952     1208  39FE               	andlw	-2
 20953     1209  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 20954     120A  00D1               	movwf	_bitMap+1	;volatile
 20955     120B                     l13144:
 20956                           
 20957                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 20958     120B  3194  24CD  3192   	fcall	_LIGHTBLUE_UpdateErrorLed
 20959     120E                     l211:
 20960     120E  0008               	return
 20961     120F                     __end_of_LIGHTBLUE_SetErrorLedValue:
 20962                           
 20963                           	psect	text72
 20964     14CD                     __ptext72:	
 20965 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 20966 ;; Defined at:
 20967 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;		None
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  1    wreg      void 
 20974 ;; Registers used:
 20975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20985 ;;Total ram usage:        0 bytes
 20986 ;; Hardware stack levels used: 1
 20987 ;; Hardware stack levels required when called: 8
 20988 ;; This function calls:
 20989 ;;		_RN487X_Delay
 20990 ;;		_RN487X_EnterCmdMode
 20991 ;;		_RN487X_EnterDataMode
 20992 ;;		_RN487X_SetOutputs
 20993 ;; This function is called by:
 20994 ;;		_LIGHTBLUE_SetErrorLedValue
 20995 ;; This function uses a non-reentrant model
 20996 ;;
 20997                           
 20998     14CD                     _LIGHTBLUE_UpdateErrorLed:	
 20999                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21000                           
 21001     14CD                     l13038:	
 21002                           ;incstack = 0
 21003                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21004                           
 21005                           
 21006                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21007     14CD  3193  23A0  3194   	fcall	_RN487X_EnterCmdMode
 21008     14D0                     l13040:
 21009                           
 21010                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21011     14D0  3014               	movlw	20
 21012     14D1  00F4               	movwf	RN487X_Delay@delayCount
 21013     14D2  3000               	movlw	0
 21014     14D3  00F5               	movwf	RN487X_Delay@delayCount+1
 21015     14D4  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21016     14D5  0084               	movwf	4
 21017     14D6  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21018     14D7  0085               	movwf	5
 21019     14D8  3F01               	moviw [1]fsr0
 21020     14D9  008A               	movwf	10
 21021     14DA  3F00               	moviw [0]fsr0
 21022     14DB  000A               	callw
 21023     14DC  3194               	pagesel	$
 21024     14DD                     l13042:
 21025                           
 21026                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21027     14DD  0140               	movlb	0	; select bank0
 21028     14DE  0851               	movf	_bitMap+1,w	;volatile
 21029     14DF  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21030     14E0  0850               	movf	_bitMap,w	;volatile
 21031     14E1  00A0               	movwf	RN487X_SetOutputs@bitMap
 21032     14E2  318C  2454  3194   	fcall	_RN487X_SetOutputs
 21033     14E5                     l13044:
 21034                           
 21035                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21036     14E5  3194  24B2  3194   	fcall	_RN487X_EnterDataMode
 21037     14E8                     l214:
 21038     14E8  0008               	return
 21039     14E9                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21040                           
 21041                           	psect	text73
 21042     0C54                     __ptext73:	
 21043 ;; *************** function _RN487X_SetOutputs *****************
 21044 ;; Defined at:
 21045 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21046 ;; Parameters:    Size  Location     Type
 21047 ;;  bitMap          2    0[BANK0 ] struct .
 21048 ;; Auto vars:     Size  Location     Type
 21049 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21050 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21051 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21052 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21053 ;; Return value:  Size  Location     Type
 21054 ;;                  1    wreg      _Bool 
 21055 ;; Registers used:
 21056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21063 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21066 ;;Total ram usage:        6 bytes
 21067 ;; Hardware stack levels used: 1
 21068 ;; Hardware stack levels required when called: 7
 21069 ;; This function calls:
 21070 ;;		_RN487X_ReadDefaultResponse
 21071 ;;		_RN487X_SendCmd
 21072 ;; This function is called by:
 21073 ;;		_LIGHTBLUE_UpdateErrorLed
 21074 ;; This function uses a non-reentrant model
 21075 ;;
 21076                           
 21077     0C54                     _RN487X_SetOutputs:	
 21078                           ;psect for function _RN487X_SetOutputs
 21079                           
 21080     0C54                     l12908:	
 21081                           ;incstack = 0
 21082                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21083                           
 21084                           
 21085                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21086     0C54  3030               	movlw	48
 21087     0C55  0140               	movlb	0	; select bank0
 21088     0C56  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21089                           
 21090                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21091     0C57  3030               	movlw	48
 21092     0C58  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21093                           
 21094                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21095     0C59  3030               	movlw	48
 21096     0C5A  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21097     0C5B                     l12910:
 21098                           
 21099                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21100     0C5B  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21101     0C5C  2C5E               	goto	u10041
 21102     0C5D  2C5F               	goto	u10040
 21103     0C5E                     u10041:
 21104     0C5E  2C62               	goto	l12914
 21105     0C5F                     u10040:
 21106     0C5F                     l12912:
 21107                           
 21108                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21109     0C5F  3031               	movlw	49
 21110     0C60  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21111                           
 21112                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21113     0C61  2C64               	goto	l12916
 21114     0C62                     l12914:
 21115                           
 21116                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21117     0C62  3030               	movlw	48
 21118     0C63  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21119     0C64                     l12916:
 21120                           
 21121                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21122     0C64  0820               	movf	RN487X_SetOutputs@bitMap,w
 21123     0C65  390F               	andlw	15
 21124     0C66  3E30               	addlw	48
 21125     0C67  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21126     0C68                     l12918:
 21127                           
 21128                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21129     0C68  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21130     0C69  2C6B               	goto	u10051
 21131     0C6A  2C6C               	goto	u10050
 21132     0C6B                     u10051:
 21133     0C6B  2C6F               	goto	l12922
 21134     0C6C                     u10050:
 21135     0C6C                     l12920:
 21136                           
 21137                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21138     0C6C  3031               	movlw	49
 21139     0C6D  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21140                           
 21141                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21142     0C6E  2C71               	goto	l12924
 21143     0C6F                     l12922:
 21144                           
 21145                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21146     0C6F  3030               	movlw	48
 21147     0C70  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21148     0C71                     l12924:
 21149                           
 21150                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21151     0C71  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21152     0C72  390F               	andlw	15
 21153     0C73  3E30               	addlw	48
 21154     0C74  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21155     0C75                     l12926:
 21156                           
 21157                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21158     0C75  307C               	movlw	124
 21159     0C76  0144               	movlb	4	; select bank4
 21160     0C77  00A0               	movwf	_cmdBuf^(0+512)
 21161     0C78                     l12928:
 21162                           
 21163                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21164     0C78  304F               	movlw	79
 21165     0C79  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21166     0C7A                     l12930:
 21167                           
 21168                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21169     0C7A  302C               	movlw	44
 21170     0C7B  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21171     0C7C                     l12932:
 21172                           
 21173                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21174     0C7C  0140               	movlb	0	; select bank0
 21175     0C7D  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21176     0C7E  0144               	movlb	4	; select bank4
 21177     0C7F  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21178     0C80                     l12934:
 21179                           
 21180                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21181     0C80  0140               	movlb	0	; select bank0
 21182     0C81  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21183     0C82  0144               	movlb	4	; select bank4
 21184     0C83  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21185     0C84                     l12936:
 21186                           
 21187                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21188     0C84  302C               	movlw	44
 21189     0C85  00A5               	movwf	(_cmdBuf^(0+512)+5)
 21190     0C86                     l12938:
 21191                           
 21192                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21193     0C86  0140               	movlb	0	; select bank0
 21194     0C87  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21195     0C88  0144               	movlb	4	; select bank4
 21196     0C89  00A6               	movwf	(_cmdBuf^(0+512)+6)
 21197     0C8A                     l12940:
 21198                           
 21199                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21200     0C8A  0140               	movlb	0	; select bank0
 21201     0C8B  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21202     0C8C  0144               	movlb	4	; select bank4
 21203     0C8D  00A7               	movwf	(_cmdBuf^(0+512)+7)
 21204     0C8E                     l12942:
 21205                           
 21206                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21207     0C8E  300D               	movlw	13
 21208     0C8F  00A8               	movwf	(_cmdBuf^(0+512)+8)
 21209     0C90                     l12944:
 21210                           
 21211                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21212     0C90  300A               	movlw	10
 21213     0C91  00A9               	movwf	(_cmdBuf^(0+512)+9)
 21214     0C92                     l12946:
 21215                           
 21216                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21217     0C92  300A               	movlw	10
 21218     0C93  00F7               	movwf	RN487X_SendCmd@cmdLen
 21219     0C94  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21220     0C95  3188  2015  318C   	fcall	_RN487X_SendCmd
 21221     0C98                     l12948:
 21222                           
 21223                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21224     0C98  3186  26CF  318C   	fcall	_RN487X_ReadDefaultResponse
 21225     0C9B                     l1595:
 21226     0C9B  0008               	return
 21227     0C9C                     __end_of_RN487X_SetOutputs:
 21228                           
 21229                           	psect	text74
 21230     06CF                     __ptext74:	
 21231 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21232 ;; Defined at:
 21233 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21234 ;; Parameters:    Size  Location     Type
 21235 ;;		None
 21236 ;; Auto vars:     Size  Location     Type
 21237 ;;  resp            3    3[COMMON] unsigned char [3]
 21238 ;;  status          1    6[COMMON] _Bool 
 21239 ;; Return value:  Size  Location     Type
 21240 ;;                  1    wreg      _Bool 
 21241 ;; Registers used:
 21242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21243 ;; Tracked objects:
 21244 ;;		On entry : 0/0
 21245 ;;		On exit  : 0/0
 21246 ;;		Unchanged: 0/0
 21247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21249 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21252 ;;Total ram usage:        4 bytes
 21253 ;; Hardware stack levels used: 1
 21254 ;; Hardware stack levels required when called: 6
 21255 ;; This function calls:
 21256 ;;		_RN487X_Read@rn487x_interface$F1831
 21257 ;; This function is called by:
 21258 ;;		_RN487X_SetOutputs
 21259 ;;		_RN487X_Disconnect
 21260 ;; This function uses a non-reentrant model
 21261 ;;
 21262                           
 21263     06CF                     _RN487X_ReadDefaultResponse:	
 21264                           ;psect for function _RN487X_ReadDefaultResponse
 21265                           
 21266     06CF                     l12812:	
 21267                           ;incstack = 0
 21268                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21269                           
 21270                           
 21271                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21272     06CF  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21273     06D0                     l12814:
 21274                           
 21275                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21276     06D0  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21277     06D1  0084               	movwf	4
 21278     06D2  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21279     06D3  0085               	movwf	5
 21280     06D4  3F01               	moviw [1]fsr0
 21281     06D5  008A               	movwf	10
 21282     06D6  3F00               	moviw [0]fsr0
 21283     06D7  000A               	callw
 21284     06D8  3186               	pagesel	$
 21285     06D9  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21286     06DA                     l12816:
 21287                           
 21288                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21289     06DA  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21290     06DB  0084               	movwf	4
 21291     06DC  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21292     06DD  0085               	movwf	5
 21293     06DE  3F01               	moviw [1]fsr0
 21294     06DF  008A               	movwf	10
 21295     06E0  3F00               	moviw [0]fsr0
 21296     06E1  000A               	callw
 21297     06E2  3186               	pagesel	$
 21298     06E3  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21299     06E4                     l12818:
 21300                           
 21301                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21302     06E4  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21303     06E5  0084               	movwf	4
 21304     06E6  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21305     06E7  0085               	movwf	5
 21306     06E8  3F01               	moviw [1]fsr0
 21307     06E9  008A               	movwf	10
 21308     06EA  3F00               	moviw [0]fsr0
 21309     06EB  000A               	callw
 21310     06EC  3186               	pagesel	$
 21311     06ED  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21312                           
 21313                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21314     06EE  2F0E               	goto	l12838
 21315     06EF                     l12820:
 21316                           
 21317                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21318     06EF  304F               	movlw	79
 21319     06F0  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21320     06F1  1D03               	btfss	3,2
 21321     06F2  2EF4               	goto	u9911
 21322     06F3  2EF5               	goto	u9910
 21323     06F4                     u9911:
 21324     06F4  2F16               	goto	l12840
 21325     06F5                     u9910:
 21326     06F5                     l12822:
 21327     06F5  304B               	movlw	75
 21328     06F6  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21329     06F7  1D03               	btfss	3,2
 21330     06F8  2EFA               	goto	u9921
 21331     06F9  2EFB               	goto	u9920
 21332     06FA                     u9921:
 21333     06FA  2F16               	goto	l12840
 21334     06FB                     u9920:
 21335     06FB                     l12824:
 21336                           
 21337                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21338     06FB  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21339     06FC  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21340     06FD  2F16               	goto	l12840
 21341     06FE                     l12826:
 21342                           
 21343                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21344     06FE  3072               	movlw	114
 21345     06FF  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21346     0700  1D03               	btfss	3,2
 21347     0701  2F03               	goto	u9931
 21348     0702  2F04               	goto	u9930
 21349     0703                     u9931:
 21350     0703  2F16               	goto	l12840
 21351     0704                     u9930:
 21352     0704                     l12828:
 21353     0704  3072               	movlw	114
 21354     0705  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21355     0706  1D03               	btfss	3,2
 21356     0707  2F09               	goto	u9941
 21357     0708  2F0A               	goto	u9940
 21358     0709                     u9941:
 21359     0709  2F16               	goto	l12840
 21360     070A                     u9940:
 21361     070A                     l12830:
 21362                           
 21363                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21364     070A  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21365     070B  2F16               	goto	l12840
 21366     070C                     l12832:
 21367                           
 21368                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21369     070C  3000               	movlw	0
 21370     070D  2F56               	goto	l1570
 21371     070E                     l12838:
 21372     070E  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21373                           
 21374                           ; Switch size 1, requested type "simple"
 21375                           ; Number of cases is 2, Range of values is 65 to 69
 21376                           ; switch strategies available:
 21377                           ; Name         Instructions Cycles
 21378                           ; simple_byte            7     4 (average)
 21379                           ; direct_byte           19     9 (fixed)
 21380                           ; jumptable            263     9 (fixed)
 21381                           ;	Chosen strategy is simple_byte
 21382     070F  3A41               	xorlw	65	; case 65
 21383     0710  1903               	skipnz
 21384     0711  2EEF               	goto	l12820
 21385     0712  3A04               	xorlw	4	; case 69
 21386     0713  1903               	skipnz
 21387     0714  2EFE               	goto	l12826
 21388     0715  2F0C               	goto	l12832
 21389     0716                     l12840:
 21390                           
 21391                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21392     0716  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21393     0717  0084               	movwf	4
 21394     0718  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21395     0719  0085               	movwf	5
 21396     071A  3F01               	moviw [1]fsr0
 21397     071B  008A               	movwf	10
 21398     071C  3F00               	moviw [0]fsr0
 21399     071D  000A               	callw
 21400     071E  3186               	pagesel	$
 21401                           
 21402                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21403     071F  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21404     0720  0084               	movwf	4
 21405     0721  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21406     0722  0085               	movwf	5
 21407     0723  3F01               	moviw [1]fsr0
 21408     0724  008A               	movwf	10
 21409     0725  3F00               	moviw [0]fsr0
 21410     0726  000A               	callw
 21411     0727  3186               	pagesel	$
 21412                           
 21413                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21414     0728  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21415     0729  0084               	movwf	4
 21416     072A  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21417     072B  0085               	movwf	5
 21418     072C  3F01               	moviw [1]fsr0
 21419     072D  008A               	movwf	10
 21420     072E  3F00               	moviw [0]fsr0
 21421     072F  000A               	callw
 21422     0730  3186               	pagesel	$
 21423                           
 21424                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21425     0731  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21426     0732  0084               	movwf	4
 21427     0733  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21428     0734  0085               	movwf	5
 21429     0735  3F01               	moviw [1]fsr0
 21430     0736  008A               	movwf	10
 21431     0737  3F00               	moviw [0]fsr0
 21432     0738  000A               	callw
 21433     0739  3186               	pagesel	$
 21434                           
 21435                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21436     073A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21437     073B  0084               	movwf	4
 21438     073C  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21439     073D  0085               	movwf	5
 21440     073E  3F01               	moviw [1]fsr0
 21441     073F  008A               	movwf	10
 21442     0740  3F00               	moviw [0]fsr0
 21443     0741  000A               	callw
 21444     0742  3186               	pagesel	$
 21445                           
 21446                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21447     0743  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21448     0744  0084               	movwf	4
 21449     0745  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21450     0746  0085               	movwf	5
 21451     0747  3F01               	moviw [1]fsr0
 21452     0748  008A               	movwf	10
 21453     0749  3F00               	moviw [0]fsr0
 21454     074A  000A               	callw
 21455     074B  3186               	pagesel	$
 21456                           
 21457                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21458     074C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21459     074D  0084               	movwf	4
 21460     074E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21461     074F  0085               	movwf	5
 21462     0750  3F01               	moviw [1]fsr0
 21463     0751  008A               	movwf	10
 21464     0752  3F00               	moviw [0]fsr0
 21465     0753  000A               	callw
 21466     0754  3186               	pagesel	$
 21467     0755                     l12842:
 21468                           
 21469                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21470     0755  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21471     0756                     l1570:
 21472     0756  0008               	return
 21473     0757                     __end_of_RN487X_ReadDefaultResponse:
 21474                           
 21475                           	psect	text75
 21476     14B2                     __ptext75:	
 21477 ;; *************** function _RN487X_EnterDataMode *****************
 21478 ;; Defined at:
 21479 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21480 ;; Parameters:    Size  Location     Type
 21481 ;;		None
 21482 ;; Auto vars:     Size  Location     Type
 21483 ;;		None
 21484 ;; Return value:  Size  Location     Type
 21485 ;;                  1    wreg      _Bool 
 21486 ;; Registers used:
 21487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21488 ;; Tracked objects:
 21489 ;;		On entry : 0/0
 21490 ;;		On exit  : 0/0
 21491 ;;		Unchanged: 0/0
 21492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21497 ;;Total ram usage:        0 bytes
 21498 ;; Hardware stack levels used: 1
 21499 ;; Hardware stack levels required when called: 7
 21500 ;; This function calls:
 21501 ;;		_RN487X_ReadMsg
 21502 ;;		_RN487X_SendCmd
 21503 ;; This function is called by:
 21504 ;;		_LIGHTBLUE_UpdateErrorLed
 21505 ;; This function uses a non-reentrant model
 21506 ;;
 21507                           
 21508     14B2                     _RN487X_EnterDataMode:	
 21509                           ;psect for function _RN487X_EnterDataMode
 21510                           
 21511     14B2                     l12952:	
 21512                           ;incstack = 0
 21513                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21514                           
 21515                           
 21516                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21517     14B2  302D               	movlw	45
 21518     14B3  0144               	movlb	4	; select bank4
 21519     14B4  00A0               	movwf	_cmdBuf^(0+512)
 21520                           
 21521                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21522     14B5  302D               	movlw	45
 21523     14B6  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21524                           
 21525                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21526     14B7  302D               	movlw	45
 21527     14B8  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21528                           
 21529                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21530     14B9  300D               	movlw	13
 21531     14BA  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21532                           
 21533                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21534     14BB  300A               	movlw	10
 21535     14BC  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21536     14BD                     l12954:
 21537                           
 21538                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21539     14BD  3005               	movlw	5
 21540     14BE  00F7               	movwf	RN487X_SendCmd@cmdLen
 21541     14BF  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21542     14C0  3188  2015  3194   	fcall	_RN487X_SendCmd
 21543     14C3                     l12956:
 21544                           
 21545                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21546     14C3  30A2               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21547     14C4  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21548     14C5  3098               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21549     14C6  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21550     14C7  3005               	movlw	5
 21551     14C8  00F5               	movwf	RN487X_ReadMsg@msgLen
 21552     14C9  3187  27D5  3194   	fcall	_RN487X_ReadMsg
 21553     14CC                     l1588:
 21554     14CC  0008               	return
 21555     14CD                     __end_of_RN487X_EnterDataMode:
 21556                           
 21557                           	psect	text76
 21558     13A0                     __ptext76:	
 21559 ;; *************** function _RN487X_EnterCmdMode *****************
 21560 ;; Defined at:
 21561 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 21562 ;; Parameters:    Size  Location     Type
 21563 ;;		None
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;		None
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  1    wreg      _Bool 
 21568 ;; Registers used:
 21569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21579 ;;Total ram usage:        0 bytes
 21580 ;; Hardware stack levels used: 1
 21581 ;; Hardware stack levels required when called: 7
 21582 ;; This function calls:
 21583 ;;		_RN487X_ReadMsg
 21584 ;;		_RN487X_SendCmd
 21585 ;; This function is called by:
 21586 ;;		_LIGHTBLUE_UpdateErrorLed
 21587 ;; This function uses a non-reentrant model
 21588 ;;
 21589                           
 21590     13A0                     _RN487X_EnterCmdMode:	
 21591                           ;psect for function _RN487X_EnterCmdMode
 21592                           
 21593     13A0                     l12900:	
 21594                           ;incstack = 0
 21595                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21596                           
 21597                           
 21598                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 21599     13A0  3024               	movlw	36
 21600     13A1  0144               	movlb	4	; select bank4
 21601     13A2  00A0               	movwf	_cmdBuf^(0+512)
 21602                           
 21603                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 21604     13A3  3024               	movlw	36
 21605     13A4  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21606                           
 21607                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 21608     13A5  3024               	movlw	36
 21609     13A6  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21610     13A7                     l12902:
 21611                           
 21612                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 21613     13A7  3003               	movlw	3
 21614     13A8  00F7               	movwf	RN487X_SendCmd@cmdLen
 21615     13A9  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21616     13AA  3188  2015  3193   	fcall	_RN487X_SendCmd
 21617     13AD                     l12904:
 21618                           
 21619                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 21620     13AD  30A7               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21621     13AE  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21622     13AF  3098               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21623     13B0  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21624     13B1  3005               	movlw	5
 21625     13B2  00F5               	movwf	RN487X_ReadMsg@msgLen
 21626     13B3  3187  27D5  3193   	fcall	_RN487X_ReadMsg
 21627     13B6                     l1583:
 21628     13B6  0008               	return
 21629     13B7                     __end_of_RN487X_EnterCmdMode:
 21630                           
 21631                           	psect	text77
 21632     0815                     __ptext77:	
 21633 ;; *************** function _RN487X_SendCmd *****************
 21634 ;; Defined at:
 21635 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;  cmd             1    wreg     PTR const unsigned char 
 21638 ;;		 -> cmdBuf(64), 
 21639 ;;  cmdLen          1    7[COMMON] unsigned char 
 21640 ;; Auto vars:     Size  Location     Type
 21641 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 21642 ;;		 -> cmdBuf(64), 
 21643 ;;  index           1    9[COMMON] unsigned char 
 21644 ;; Return value:  Size  Location     Type
 21645 ;;                  1    wreg      void 
 21646 ;; Registers used:
 21647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21648 ;; Tracked objects:
 21649 ;;		On entry : 0/0
 21650 ;;		On exit  : 0/0
 21651 ;;		Unchanged: 0/0
 21652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21653 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21657 ;;Total ram usage:        4 bytes
 21658 ;; Hardware stack levels used: 1
 21659 ;; Hardware stack levels required when called: 6
 21660 ;; This function calls:
 21661 ;;		_RN487X_Write
 21662 ;;		_RN487X_is_tx_done
 21663 ;; This function is called by:
 21664 ;;		_RN487X_EnterCmdMode
 21665 ;;		_RN487X_EnterDataMode
 21666 ;;		_RN487X_SetOutputs
 21667 ;;		_RN487X_GetCmd
 21668 ;;		_RN487X_GetInputsValues
 21669 ;;		_RN487X_RebootCmd
 21670 ;;		_RN487X_Disconnect
 21671 ;; This function uses a non-reentrant model
 21672 ;;
 21673                           
 21674     0815                     _RN487X_SendCmd:	
 21675                           ;psect for function _RN487X_SendCmd
 21676                           
 21677                           
 21678                           ;incstack = 0
 21679                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21680                           ;RN487X_SendCmd@cmd stored from wreg
 21681     0815  00FA               	movwf	RN487X_SendCmd@cmd
 21682     0816                     l12784:
 21683                           
 21684                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 21685     0816  01F9               	clrf	RN487X_SendCmd@index
 21686                           
 21687                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 21688     0817  283C               	goto	l12792
 21689     0818                     l12786:
 21690                           
 21691                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 21692     0818  306C               	movlw	low ((_RN487X+4)| (0+32768))
 21693     0819  0084               	movwf	4
 21694     081A  3098               	movlw	high ((_RN487X+4)| (0+32768))
 21695     081B  0085               	movwf	5
 21696     081C  3F01               	moviw [1]fsr0
 21697     081D  008A               	movwf	10
 21698     081E  3F00               	moviw [0]fsr0
 21699     081F  000A               	callw
 21700     0820  3188               	pagesel	$
 21701     0821  3A00               	xorlw	0
 21702     0822  1903               	skipnz
 21703     0823  2825               	goto	u9871
 21704     0824  2826               	goto	u9870
 21705     0825                     u9871:
 21706     0825  283C               	goto	l12792
 21707     0826                     u9870:
 21708     0826                     l12788:
 21709                           
 21710                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 21711     0826  0879               	movf	RN487X_SendCmd@index,w
 21712     0827  077A               	addwf	RN487X_SendCmd@cmd,w
 21713     0828  00F8               	movwf	??_RN487X_SendCmd
 21714     0829  0878               	movf	??_RN487X_SendCmd,w
 21715     082A  0086               	movwf	6
 21716     082B  3002               	movlw	2	; select bank4/5
 21717     082C  0087               	movwf	7
 21718     082D  0801               	movf	1,w
 21719     082E  00F6               	movwf	RN487X_Write@txData
 21720     082F  3068               	movlw	low (_RN487X| (0+32768))
 21721     0830  0084               	movwf	4
 21722     0831  3098               	movlw	high (_RN487X| (0+32768))
 21723     0832  0085               	movwf	5
 21724     0833  3F01               	moviw [1]fsr0
 21725     0834  008A               	movwf	10
 21726     0835  3F00               	moviw [0]fsr0
 21727     0836  000A               	callw
 21728     0837  3188               	pagesel	$
 21729     0838                     l12790:
 21730                           
 21731                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 21732     0838  3001               	movlw	1
 21733     0839  00F8               	movwf	??_RN487X_SendCmd
 21734     083A  0878               	movf	??_RN487X_SendCmd,w
 21735     083B  07F9               	addwf	RN487X_SendCmd@index,f
 21736     083C                     l12792:
 21737                           
 21738                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 21739     083C  0877               	movf	RN487X_SendCmd@cmdLen,w
 21740     083D  0279               	subwf	RN487X_SendCmd@index,w
 21741     083E  1C03               	skipc
 21742     083F  2841               	goto	u9881
 21743     0840  2842               	goto	u9880
 21744     0841                     u9881:
 21745     0841  2818               	goto	l12786
 21746     0842                     u9880:
 21747     0842                     l1548:
 21748     0842  0008               	return
 21749     0843                     __end_of_RN487X_SendCmd:
 21750                           
 21751                           	psect	text78
 21752     111C                     __ptext78:	
 21753 ;; *************** function _RN487X_is_tx_done *****************
 21754 ;; Defined at:
 21755 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;		None
 21758 ;; Auto vars:     Size  Location     Type
 21759 ;;		None
 21760 ;; Return value:  Size  Location     Type
 21761 ;;                  1    wreg      _Bool 
 21762 ;; Registers used:
 21763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21764 ;; Tracked objects:
 21765 ;;		On entry : 0/0
 21766 ;;		On exit  : 0/0
 21767 ;;		Unchanged: 0/0
 21768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21773 ;;Total ram usage:        0 bytes
 21774 ;; Hardware stack levels used: 1
 21775 ;; Hardware stack levels required when called: 5
 21776 ;; This function calls:
 21777 ;;		_EUSART1_is_tx_done
 21778 ;;		_EUSART2_is_tx_done
 21779 ;; This function is called by:
 21780 ;;		_RN487X_SendCmd
 21781 ;; This function uses a non-reentrant model
 21782 ;;
 21783                           
 21784     111C                     _RN487X_is_tx_done:	
 21785                           ;psect for function _RN487X_is_tx_done
 21786                           
 21787     111C                     l12730:	
 21788                           ;incstack = 0
 21789                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21790                           
 21791                           
 21792                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 21793     111C  3022               	movlw	low ((_uart+34)| (0+32768))
 21794     111D  0084               	movwf	4
 21795     111E  3098               	movlw	high ((_uart+34)| (0+32768))
 21796     111F  0085               	movwf	5
 21797     1120  3F01               	moviw [1]fsr0
 21798     1121  008A               	movwf	10
 21799     1122  3F00               	moviw [0]fsr0
 21800     1123  000A               	callw
 21801     1124  3191               	pagesel	$
 21802     1125                     l1454:
 21803     1125  0008               	return
 21804     1126                     __end_of_RN487X_is_tx_done:
 21805                           
 21806                           	psect	text79
 21807     1016                     __ptext79:	
 21808 ;; *************** function _EUSART1_is_tx_done *****************
 21809 ;; Defined at:
 21810 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 21811 ;; Parameters:    Size  Location     Type
 21812 ;;		None
 21813 ;; Auto vars:     Size  Location     Type
 21814 ;;		None
 21815 ;; Return value:  Size  Location     Type
 21816 ;;                  1    wreg      _Bool 
 21817 ;; Registers used:
 21818 ;;		wreg, status,2, status,0
 21819 ;; Tracked objects:
 21820 ;;		On entry : 0/0
 21821 ;;		On exit  : 0/0
 21822 ;;		Unchanged: 0/0
 21823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21828 ;;Total ram usage:        0 bytes
 21829 ;; Hardware stack levels used: 1
 21830 ;; Hardware stack levels required when called: 4
 21831 ;; This function calls:
 21832 ;;		Nothing
 21833 ;; This function is called by:
 21834 ;;		_RN487X_is_tx_done
 21835 ;; This function uses a non-reentrant model
 21836 ;;
 21837                           
 21838     1016                     _EUSART1_is_tx_done:	
 21839                           ;psect for function _EUSART1_is_tx_done
 21840                           
 21841     1016                     l12588:	
 21842                           ;incstack = 0
 21843                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 21844                           
 21845                           
 21846                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 21847     1016  0142               	movlb	2	; select bank2
 21848     1017  0C1E               	rrf	30,w	;volatile
 21849     1018  3901               	andlw	1
 21850     1019                     l1866:
 21851     1019  0008               	return
 21852     101A                     __end_of_EUSART1_is_tx_done:
 21853                           
 21854                           	psect	text80
 21855     1012                     __ptext80:	
 21856 ;; *************** function _EUSART2_is_tx_done *****************
 21857 ;; Defined at:
 21858 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 21859 ;; Parameters:    Size  Location     Type
 21860 ;;		None
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;		None
 21863 ;; Return value:  Size  Location     Type
 21864 ;;                  1    wreg      _Bool 
 21865 ;; Registers used:
 21866 ;;		wreg, status,2, status,0
 21867 ;; Tracked objects:
 21868 ;;		On entry : 0/0
 21869 ;;		On exit  : 0/0
 21870 ;;		Unchanged: 0/0
 21871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21876 ;;Total ram usage:        0 bytes
 21877 ;; Hardware stack levels used: 1
 21878 ;; Hardware stack levels required when called: 4
 21879 ;; This function calls:
 21880 ;;		Nothing
 21881 ;; This function is called by:
 21882 ;;		_RN487X_is_tx_done
 21883 ;; This function uses a non-reentrant model
 21884 ;;
 21885                           
 21886     1012                     _EUSART2_is_tx_done:	
 21887                           ;psect for function _EUSART2_is_tx_done
 21888                           
 21889     1012                     l12544:	
 21890                           ;incstack = 0
 21891                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 21892                           
 21893                           
 21894                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 21895     1012  0154               	movlb	20	; select bank20
 21896     1013  0C1E               	rrf	30,w	;volatile
 21897     1014  3901               	andlw	1
 21898     1015                     l1722:
 21899     1015  0008               	return
 21900     1016                     __end_of_EUSART2_is_tx_done:
 21901                           
 21902                           	psect	text81
 21903     07D5                     __ptext81:	
 21904 ;; *************** function _RN487X_ReadMsg *****************
 21905 ;; Defined at:
 21906 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 21907 ;; Parameters:    Size  Location     Type
 21908 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 21909 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 21910 ;;  msgLen          1    5[COMMON] unsigned char 
 21911 ;; Auto vars:     Size  Location     Type
 21912 ;;  index           1    9[COMMON] unsigned char 
 21913 ;;  resp            1    8[COMMON] unsigned char 
 21914 ;; Return value:  Size  Location     Type
 21915 ;;                  1    wreg      _Bool 
 21916 ;; Registers used:
 21917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21918 ;; Tracked objects:
 21919 ;;		On entry : 0/0
 21920 ;;		On exit  : 0/0
 21921 ;;		Unchanged: 0/0
 21922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21923 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21927 ;;Total ram usage:        7 bytes
 21928 ;; Hardware stack levels used: 1
 21929 ;; Hardware stack levels required when called: 6
 21930 ;; This function calls:
 21931 ;;		_RN487X_Read@rn487x_interface$F1831
 21932 ;; This function is called by:
 21933 ;;		_RN487X_EnterCmdMode
 21934 ;;		_RN487X_EnterDataMode
 21935 ;;		_RN487X_GetInputsValues
 21936 ;;		_RN487X_RebootCmd
 21937 ;; This function uses a non-reentrant model
 21938 ;;
 21939                           
 21940     07D5                     _RN487X_ReadMsg:	
 21941                           ;psect for function _RN487X_ReadMsg
 21942                           
 21943     07D5                     l12794:	
 21944                           ;incstack = 0
 21945                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21946                           
 21947                           
 21948                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 21949     07D5  01F9               	clrf	RN487X_ReadMsg@index
 21950     07D6  2FF8               	goto	l12806
 21951     07D7                     l12796:
 21952                           
 21953                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 21954     07D7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21955     07D8  0084               	movwf	4
 21956     07D9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21957     07DA  0085               	movwf	5
 21958     07DB  3F01               	moviw [1]fsr0
 21959     07DC  008A               	movwf	10
 21960     07DD  3F00               	moviw [0]fsr0
 21961     07DE  000A               	callw
 21962     07DF  3187               	pagesel	$
 21963     07E0  00F8               	movwf	RN487X_ReadMsg@resp
 21964     07E1                     l12798:
 21965                           
 21966                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 21967     07E1  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 21968     07E2  00F7               	movwf	??_RN487X_ReadMsg+1
 21969     07E3  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 21970     07E4  00F6               	movwf	??_RN487X_ReadMsg
 21971     07E5  0879               	movf	RN487X_ReadMsg@index,w
 21972     07E6  0776               	addwf	??_RN487X_ReadMsg,w
 21973     07E7  0084               	movwf	4
 21974     07E8  0877               	movf	??_RN487X_ReadMsg+1,w
 21975     07E9  1803               	skipnc
 21976     07EA  0A77               	incf	??_RN487X_ReadMsg+1,w
 21977     07EB  0085               	movwf	5
 21978     07EC  0800               	movf	0,w	;code access
 21979     07ED  0678               	xorwf	RN487X_ReadMsg@resp,w
 21980     07EE  1903               	skipnz
 21981     07EF  2FF1               	goto	u9891
 21982     07F0  2FF2               	goto	u9890
 21983     07F1                     u9891:
 21984     07F1  2FF4               	goto	l12804
 21985     07F2                     u9890:
 21986     07F2                     l12800:
 21987                           
 21988                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 21989     07F2  3000               	movlw	0
 21990     07F3  2FFF               	goto	l1559
 21991     07F4                     l12804:
 21992                           
 21993                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 21994     07F4  3001               	movlw	1
 21995     07F5  00F6               	movwf	??_RN487X_ReadMsg
 21996     07F6  0876               	movf	??_RN487X_ReadMsg,w
 21997     07F7  07F9               	addwf	RN487X_ReadMsg@index,f
 21998     07F8                     l12806:
 21999     07F8  0875               	movf	RN487X_ReadMsg@msgLen,w
 22000     07F9  0279               	subwf	RN487X_ReadMsg@index,w
 22001     07FA  1C03               	skipc
 22002     07FB  2FFD               	goto	u9901
 22003     07FC  2FFE               	goto	u9900
 22004     07FD                     u9901:
 22005     07FD  2FD7               	goto	l12796
 22006     07FE                     u9900:
 22007     07FE                     l12808:
 22008                           
 22009                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22010     07FE  3001               	movlw	1
 22011     07FF                     l1559:
 22012     07FF  0008               	return
 22013     0800                     __end_of_RN487X_ReadMsg:
 22014                           
 22015                           	psect	text82
 22016     1112                     __ptext82:	
 22017 ;; *************** function _RN487X_Read@rn487x_interface$F1831 *****************
 22018 ;; Defined at:
 22019 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22020 ;; Parameters:    Size  Location     Type
 22021 ;;		None
 22022 ;; Auto vars:     Size  Location     Type
 22023 ;;		None
 22024 ;; Return value:  Size  Location     Type
 22025 ;;                  1    wreg      unsigned char 
 22026 ;; Registers used:
 22027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22028 ;; Tracked objects:
 22029 ;;		On entry : 0/0
 22030 ;;		On exit  : 0/0
 22031 ;;		Unchanged: 0/0
 22032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22037 ;;Total ram usage:        0 bytes
 22038 ;; Hardware stack levels used: 1
 22039 ;; Hardware stack levels required when called: 5
 22040 ;; This function calls:
 22041 ;;		_EUSART1_Read
 22042 ;;		_EUSART2_Read
 22043 ;; This function is called by:
 22044 ;;		_RN487X_ReadMsg
 22045 ;;		_RN487X_ReadDefaultResponse
 22046 ;;		_RN487X_FilterData
 22047 ;;		_RN487X_Init
 22048 ;;		_RN487X_GetCmd
 22049 ;;		_RN487X_WaitForMsg
 22050 ;; This function uses a non-reentrant model
 22051 ;;
 22052                           
 22053     1112                     _RN487X_Read@rn487x_interface$F1831:	
 22054                           ;psect for function _RN487X_Read@rn487x_interface$F1831
 22055                           
 22056     1112                     l12726:	
 22057                           ;incstack = 0
 22058                           ; Regs used in _RN487X_Read@rn487x_interface$F1831: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22059                           
 22060                           
 22061                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22062     1112  3014               	movlw	low ((_uart+20)| (0+32768))
 22063     1113  0084               	movwf	4
 22064     1114  3098               	movlw	high ((_uart+20)| (0+32768))
 22065     1115  0085               	movwf	5
 22066     1116  3F01               	moviw [1]fsr0
 22067     1117  008A               	movwf	10
 22068     1118  3F00               	moviw [0]fsr0
 22069     1119  000A               	callw
 22070     111A  3191               	pagesel	$
 22071     111B                     l1451:
 22072     111B  0008               	return
 22073     111C                     __end_of_RN487X_Read@rn487x_interface$F1831:
 22074                           
 22075                           	psect	text83
 22076     16C6                     __ptext83:	
 22077 ;; *************** function _EUSART1_Read *****************
 22078 ;; Defined at:
 22079 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22080 ;; Parameters:    Size  Location     Type
 22081 ;;		None
 22082 ;; Auto vars:     Size  Location     Type
 22083 ;;  readValue       1    2[COMMON] unsigned char 
 22084 ;; Return value:  Size  Location     Type
 22085 ;;                  1    wreg      unsigned char 
 22086 ;; Registers used:
 22087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22088 ;; Tracked objects:
 22089 ;;		On entry : 0/0
 22090 ;;		On exit  : 0/0
 22091 ;;		Unchanged: 0/0
 22092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22097 ;;Total ram usage:        2 bytes
 22098 ;; Hardware stack levels used: 1
 22099 ;; Hardware stack levels required when called: 4
 22100 ;; This function calls:
 22101 ;;		Nothing
 22102 ;; This function is called by:
 22103 ;;		_getch
 22104 ;;		_RN487X_Read@rn487x_interface$F1831
 22105 ;;		_RN487X_Example_TransparentUart
 22106 ;;		_main
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110     16C6                     _EUSART1_Read:	
 22111                           ;psect for function _EUSART1_Read
 22112                           
 22113     16C6                     l12592:	
 22114                           ;incstack = 0
 22115                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22116                           
 22117     16C6                     l12594:	
 22118                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22119                           
 22120                           
 22121                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22122     16C6  0140               	movlb	0	; select bank0
 22123     16C7  0853               	movf	_eusart1RxCount,w	;volatile
 22124     16C8  1903               	btfsc	3,2
 22125     16C9  2ECB               	goto	u9701
 22126     16CA  2ECC               	goto	u9700
 22127     16CB                     u9701:
 22128     16CB  2EC6               	goto	l12594
 22129     16CC                     u9700:
 22130     16CC                     l12596:
 22131                           
 22132                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22133     16CC  0854               	movf	_eusart1RxTail,w	;volatile
 22134     16CD  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22135     16CE  0086               	movwf	6
 22136     16CF  0187               	clrf	7
 22137     16D0  0801               	movf	1,w
 22138     16D1  0141               	movlb	1	; select bank1
 22139     16D2  00DE               	movwf	_eusart1RxLastError^(0+128)	;volatile
 22140                           
 22141                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22142     16D3  0140               	movlb	0	; select bank0
 22143     16D4  0854               	movf	_eusart1RxTail,w
 22144     16D5  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22145     16D6  0086               	movwf	6
 22146     16D7  3001               	movlw	1	; select bank2/3
 22147     16D8  0087               	movwf	7
 22148     16D9  0801               	movf	1,w
 22149     16DA  00F2               	movwf	EUSART1_Read@readValue
 22150     16DB                     l12598:
 22151     16DB  3001               	movlw	1
 22152     16DC  00F1               	movwf	??_EUSART1_Read
 22153     16DD  0871               	movf	??_EUSART1_Read,w
 22154     16DE  07D4               	addwf	_eusart1RxTail,f	;volatile
 22155     16DF                     l12600:
 22156                           
 22157                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22158     16DF  3008               	movlw	8
 22159     16E0  0254               	subwf	_eusart1RxTail,w	;volatile
 22160     16E1  1C03               	skipc
 22161     16E2  2EE4               	goto	u9711
 22162     16E3  2EE5               	goto	u9710
 22163     16E4                     u9711:
 22164     16E4  2EE6               	goto	l12604
 22165     16E5                     u9710:
 22166     16E5                     l12602:
 22167                           
 22168                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22169     16E5  01D4               	clrf	_eusart1RxTail	;volatile
 22170     16E6                     l12604:
 22171                           
 22172                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22173     16E6  014E               	movlb	14	; select bank14
 22174     16E7  1299               	bcf	25,5	;volatile
 22175     16E8                     l12606:
 22176                           
 22177                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22178     16E8  3001               	movlw	1
 22179     16E9  0140               	movlb	0	; select bank0
 22180     16EA  02D3               	subwf	_eusart1RxCount,f	;volatile
 22181     16EB                     l12608:
 22182                           
 22183                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22184     16EB  014E               	movlb	14	; select bank14
 22185     16EC  1699               	bsf	25,5	;volatile
 22186     16ED                     l12610:
 22187                           
 22188                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22189     16ED  0872               	movf	EUSART1_Read@readValue,w
 22190     16EE                     l1876:
 22191     16EE  0008               	return
 22192     16EF                     __end_of_EUSART1_Read:
 22193                           
 22194                           	psect	text84
 22195     169D                     __ptext84:	
 22196 ;; *************** function _EUSART2_Read *****************
 22197 ;; Defined at:
 22198 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22199 ;; Parameters:    Size  Location     Type
 22200 ;;		None
 22201 ;; Auto vars:     Size  Location     Type
 22202 ;;  readValue       1    2[COMMON] unsigned char 
 22203 ;; Return value:  Size  Location     Type
 22204 ;;                  1    wreg      unsigned char 
 22205 ;; Registers used:
 22206 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22207 ;; Tracked objects:
 22208 ;;		On entry : 0/0
 22209 ;;		On exit  : 0/0
 22210 ;;		Unchanged: 0/0
 22211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22216 ;;Total ram usage:        2 bytes
 22217 ;; Hardware stack levels used: 1
 22218 ;; Hardware stack levels required when called: 4
 22219 ;; This function calls:
 22220 ;;		Nothing
 22221 ;; This function is called by:
 22222 ;;		_RN487X_Read@rn487x_interface$F1831
 22223 ;;		_RN487X_Example_TransparentUart
 22224 ;;		_main
 22225 ;; This function uses a non-reentrant model
 22226 ;;
 22227                           
 22228     169D                     _EUSART2_Read:	
 22229                           ;psect for function _EUSART2_Read
 22230                           
 22231     169D                     l12548:	
 22232                           ;incstack = 0
 22233                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22234                           
 22235     169D                     l12550:	
 22236                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22237                           
 22238                           
 22239                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22240     169D  0140               	movlb	0	; select bank0
 22241     169E  0859               	movf	_eusart2RxCount,w	;volatile
 22242     169F  1903               	btfsc	3,2
 22243     16A0  2EA2               	goto	u9651
 22244     16A1  2EA3               	goto	u9650
 22245     16A2                     u9651:
 22246     16A2  2E9D               	goto	l12550
 22247     16A3                     u9650:
 22248     16A3                     l12552:
 22249                           
 22250                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22251     16A3  085A               	movf	_eusart2RxTail,w	;volatile
 22252     16A4  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22253     16A5  0086               	movwf	6
 22254     16A6  0187               	clrf	7
 22255     16A7  0801               	movf	1,w
 22256     16A8  0141               	movlb	1	; select bank1
 22257     16A9  00DF               	movwf	_eusart2RxLastError^(0+128)	;volatile
 22258                           
 22259                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22260     16AA  0140               	movlb	0	; select bank0
 22261     16AB  085A               	movf	_eusart2RxTail,w
 22262     16AC  3E54               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 22263     16AD  0086               	movwf	6
 22264     16AE  3001               	movlw	1	; select bank2/3
 22265     16AF  0087               	movwf	7
 22266     16B0  0801               	movf	1,w
 22267     16B1  00F2               	movwf	EUSART2_Read@readValue
 22268     16B2                     l12554:
 22269     16B2  3001               	movlw	1
 22270     16B3  00F1               	movwf	??_EUSART2_Read
 22271     16B4  0871               	movf	??_EUSART2_Read,w
 22272     16B5  07DA               	addwf	_eusart2RxTail,f	;volatile
 22273     16B6                     l12556:
 22274                           
 22275                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22276     16B6  3008               	movlw	8
 22277     16B7  025A               	subwf	_eusart2RxTail,w	;volatile
 22278     16B8  1C03               	skipc
 22279     16B9  2EBB               	goto	u9661
 22280     16BA  2EBC               	goto	u9660
 22281     16BB                     u9661:
 22282     16BB  2EBD               	goto	l12560
 22283     16BC                     u9660:
 22284     16BC                     l12558:
 22285                           
 22286                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22287     16BC  01DA               	clrf	_eusart2RxTail	;volatile
 22288     16BD                     l12560:
 22289                           
 22290                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22291     16BD  014E               	movlb	14	; select bank14
 22292     16BE  1399               	bcf	25,7	;volatile
 22293     16BF                     l12562:
 22294                           
 22295                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22296     16BF  3001               	movlw	1
 22297     16C0  0140               	movlb	0	; select bank0
 22298     16C1  02D9               	subwf	_eusart2RxCount,f	;volatile
 22299     16C2                     l12564:
 22300                           
 22301                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22302     16C2  014E               	movlb	14	; select bank14
 22303     16C3  1799               	bsf	25,7	;volatile
 22304     16C4                     l12566:
 22305                           
 22306                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22307     16C4  0872               	movf	EUSART2_Read@readValue,w
 22308     16C5                     l1732:
 22309     16C5  0008               	return
 22310     16C6                     __end_of_EUSART2_Read:
 22311                           
 22312                           	psect	text85
 22313     10DD                     __ptext85:	
 22314 ;; *************** function _RN487X_Delay *****************
 22315 ;; Defined at:
 22316 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;  delayCount      2    4[COMMON] unsigned short 
 22319 ;; Auto vars:     Size  Location     Type
 22320 ;;		None
 22321 ;; Return value:  Size  Location     Type
 22322 ;;                  1    wreg      void 
 22323 ;; Registers used:
 22324 ;;		wreg, status,2, status,0, pclath, cstack
 22325 ;; Tracked objects:
 22326 ;;		On entry : 0/0
 22327 ;;		On exit  : 0/0
 22328 ;;		Unchanged: 0/0
 22329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22334 ;;Total ram usage:        2 bytes
 22335 ;; Hardware stack levels used: 1
 22336 ;; Hardware stack levels required when called: 5
 22337 ;; This function calls:
 22338 ;;		_DELAY_milliseconds
 22339 ;; This function is called by:
 22340 ;;		_LIGHTBLUE_UpdateErrorLed
 22341 ;;		_RN487X_Init
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345     10DD                     _RN487X_Delay:	
 22346                           ;psect for function _RN487X_Delay
 22347                           
 22348     10DD                     l12966:	
 22349                           ;incstack = 0
 22350                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22351                           
 22352                           
 22353                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22354     10DD  0875               	movf	RN487X_Delay@delayCount+1,w
 22355     10DE  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22356     10DF  0874               	movf	RN487X_Delay@delayCount,w
 22357     10E0  00F1               	movwf	DELAY_milliseconds@milliseconds
 22358     10E1  3193  2348  3190   	fcall	_DELAY_milliseconds
 22359     10E4                     l1460:
 22360     10E4  0008               	return
 22361     10E5                     __end_of_RN487X_Delay:
 22362                           
 22363                           	psect	text86
 22364     1348                     __ptext86:	
 22365 ;; *************** function _DELAY_milliseconds *****************
 22366 ;; Defined at:
 22367 ;;		line 38 in file "mcc_generated_files/delay.c"
 22368 ;; Parameters:    Size  Location     Type
 22369 ;;  milliseconds    2    1[COMMON] unsigned short 
 22370 ;; Auto vars:     Size  Location     Type
 22371 ;;		None
 22372 ;; Return value:  Size  Location     Type
 22373 ;;                  1    wreg      void 
 22374 ;; Registers used:
 22375 ;;		wreg, status,2, status,0
 22376 ;; Tracked objects:
 22377 ;;		On entry : 0/0
 22378 ;;		On exit  : 0/0
 22379 ;;		Unchanged: 0/0
 22380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22385 ;;Total ram usage:        3 bytes
 22386 ;; Hardware stack levels used: 1
 22387 ;; Hardware stack levels required when called: 4
 22388 ;; This function calls:
 22389 ;;		Nothing
 22390 ;; This function is called by:
 22391 ;;		_RN487X_Delay
 22392 ;; This function uses a non-reentrant model
 22393 ;;
 22394                           
 22395     1348                     _DELAY_milliseconds:	
 22396                           ;psect for function _DELAY_milliseconds
 22397                           
 22398     1348                     l12774:	
 22399                           ;incstack = 0
 22400                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22401                           
 22402                           
 22403                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22404     1348  2B51               	goto	l12778
 22405     1349                     l12776:
 22406                           
 22407                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22408     1349  300B               	movlw	11
 22409     134A  00F3               	movwf	??_DELAY_milliseconds
 22410     134B  3062               	movlw	98
 22411     134C                     u13897:
 22412     134C  0B89               	decfsz	9,f
 22413     134D  2B4C               	goto	u13897
 22414     134E  0BF3               	decfsz	??_DELAY_milliseconds,f
 22415     134F  2B4C               	goto	u13897
 22416     1350  3200               	nop2
 22417     1351                     l12778:
 22418                           
 22419                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22420     1351  3001               	movlw	1
 22421     1352  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22422     1353  3000               	movlw	0
 22423     1354  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22424     1355  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22425     1356  1D03               	skipz
 22426     1357  2B5C               	goto	u9851
 22427     1358  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22428     1359  1D03               	btfss	3,2
 22429     135A  2B5C               	goto	u9851
 22430     135B  2B5D               	goto	u9850
 22431     135C                     u9851:
 22432     135C  2B49               	goto	l12776
 22433     135D                     u9850:
 22434     135D                     l2642:
 22435     135D  0008               	return
 22436     135E                     __end_of_DELAY_milliseconds:
 22437                           
 22438                           	psect	text87
 22439     15D7                     __ptext87:	
 22440 ;; *************** function _LIGHTBLUE_LedState *****************
 22441 ;; Defined at:
 22442 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22443 ;; Parameters:    Size  Location     Type
 22444 ;;		None
 22445 ;; Auto vars:     Size  Location     Type
 22446 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22447 ;;  led             1    3[BANK0 ] unsigned char 
 22448 ;; Return value:  Size  Location     Type
 22449 ;;                  1    wreg      void 
 22450 ;; Registers used:
 22451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22452 ;; Tracked objects:
 22453 ;;		On entry : 0/0
 22454 ;;		On exit  : 0/0
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22461 ;;Total ram usage:        4 bytes
 22462 ;; Hardware stack levels used: 1
 22463 ;; Hardware stack levels required when called: 7
 22464 ;; This function calls:
 22465 ;;		_LIGHTBLUE_GetDataLedValue
 22466 ;;		_LIGHTBLUE_GetErrorLedValue
 22467 ;;		_LIGHTBLUE_SendPacket
 22468 ;;		_LIGHTBLUE_SplitByte
 22469 ;; This function is called by:
 22470 ;;		_main
 22471 ;; This function uses a non-reentrant model
 22472 ;;
 22473                           
 22474     15D7                     _LIGHTBLUE_LedState:	
 22475                           ;psect for function _LIGHTBLUE_LedState
 22476                           
 22477     15D7                     l13972:	
 22478                           ;incstack = 0
 22479                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22480                           
 22481                           
 22482                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22483     15D7  3190  206D  3195   	fcall	_LIGHTBLUE_GetDataLedValue
 22484     15DA  0140               	movlb	0	; select bank0
 22485     15DB  00A3               	movwf	LIGHTBLUE_LedState@led
 22486     15DC                     l13974:
 22487                           
 22488                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22489     15DC  01A0               	clrf	LIGHTBLUE_LedState@payload
 22490     15DD                     l13976:
 22491                           
 22492                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22493     15DD  0823               	movf	LIGHTBLUE_LedState@led,w
 22494     15DE  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22495     15DF  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22496     15E0  3188  2043  3195   	fcall	_LIGHTBLUE_SplitByte
 22497     15E3                     l13978:
 22498                           
 22499                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22500     15E3  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22501     15E4  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22502     15E5  304C               	movlw	76
 22503     15E6  3186  2643  3195   	fcall	_LIGHTBLUE_SendPacket
 22504     15E9                     l13980:
 22505                           
 22506                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22507     15E9  3190  2051  3195   	fcall	_LIGHTBLUE_GetErrorLedValue
 22508     15EC  3E10               	addlw	16
 22509     15ED  0140               	movlb	0	; select bank0
 22510     15EE  00A3               	movwf	LIGHTBLUE_LedState@led
 22511                           
 22512                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22513     15EF  01A0               	clrf	LIGHTBLUE_LedState@payload
 22514     15F0                     l13982:
 22515                           
 22516                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22517     15F0  0823               	movf	LIGHTBLUE_LedState@led,w
 22518     15F1  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22519     15F2  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22520     15F3  3188  2043  3195   	fcall	_LIGHTBLUE_SplitByte
 22521     15F6                     l13984:
 22522                           
 22523                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22524     15F6  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22525     15F7  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22526     15F8  304C               	movlw	76
 22527     15F9  3186  2643  3195   	fcall	_LIGHTBLUE_SendPacket
 22528     15FC                     l133:
 22529     15FC  0008               	return
 22530     15FD                     __end_of_LIGHTBLUE_LedState:
 22531                           
 22532                           	psect	text88
 22533     1051                     __ptext88:	
 22534 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22535 ;; Defined at:
 22536 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22537 ;; Parameters:    Size  Location     Type
 22538 ;;		None
 22539 ;; Auto vars:     Size  Location     Type
 22540 ;;		None
 22541 ;; Return value:  Size  Location     Type
 22542 ;;                  1    wreg      unsigned char 
 22543 ;; Registers used:
 22544 ;;		wreg, status,2, status,0
 22545 ;; Tracked objects:
 22546 ;;		On entry : 0/0
 22547 ;;		On exit  : 0/0
 22548 ;;		Unchanged: 0/0
 22549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22554 ;;Total ram usage:        0 bytes
 22555 ;; Hardware stack levels used: 1
 22556 ;; Hardware stack levels required when called: 4
 22557 ;; This function calls:
 22558 ;;		Nothing
 22559 ;; This function is called by:
 22560 ;;		_LIGHTBLUE_LedState
 22561 ;; This function uses a non-reentrant model
 22562 ;;
 22563                           
 22564     1051                     _LIGHTBLUE_GetErrorLedValue:	
 22565                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 22566                           
 22567     1051                     l13300:	
 22568                           ;incstack = 0
 22569                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 22570                           
 22571                           
 22572                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 22573     1051  0140               	movlb	0	; select bank0
 22574     1052  0851               	movf	_bitMap+1,w	;volatile
 22575     1053  3901               	andlw	1
 22576     1054  3C01               	sublw	1
 22577     1055                     l208:
 22578     1055  0008               	return
 22579     1056                     __end_of_LIGHTBLUE_GetErrorLedValue:
 22580                           
 22581                           	psect	text89
 22582     106D                     __ptext89:	
 22583 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 22584 ;; Defined at:
 22585 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;		None
 22588 ;; Auto vars:     Size  Location     Type
 22589 ;;		None
 22590 ;; Return value:  Size  Location     Type
 22591 ;;                  1    wreg      unsigned char 
 22592 ;; Registers used:
 22593 ;;		wreg, status,2, status,0
 22594 ;; Tracked objects:
 22595 ;;		On entry : 0/0
 22596 ;;		On exit  : 0/0
 22597 ;;		Unchanged: 0/0
 22598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22603 ;;Total ram usage:        0 bytes
 22604 ;; Hardware stack levels used: 1
 22605 ;; Hardware stack levels required when called: 4
 22606 ;; This function calls:
 22607 ;;		Nothing
 22608 ;; This function is called by:
 22609 ;;		_LIGHTBLUE_LedState
 22610 ;; This function uses a non-reentrant model
 22611 ;;
 22612                           
 22613     106D                     _LIGHTBLUE_GetDataLedValue:	
 22614                           ;psect for function _LIGHTBLUE_GetDataLedValue
 22615                           
 22616     106D                     l13296:	
 22617                           ;incstack = 0
 22618                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 22619                           
 22620                           
 22621                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 22622     106D  0140               	movlb	0	; select bank0
 22623     106E  0E0C               	swapf	12,w	;volatile
 22624     106F  0C89               	rrf	9,f
 22625     1070  3901               	andlw	1
 22626     1071  3C01               	sublw	1
 22627     1072                     l205:
 22628     1072  0008               	return
 22629     1073                     __end_of_LIGHTBLUE_GetDataLedValue:
 22630                           
 22631                           	psect	text90
 22632     1067                     __ptext90:	
 22633 ;; *************** function _LIGHTBLUE_Initialize *****************
 22634 ;; Defined at:
 22635 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22636 ;; Parameters:    Size  Location     Type
 22637 ;;		None
 22638 ;; Auto vars:     Size  Location     Type
 22639 ;;		None
 22640 ;; Return value:  Size  Location     Type
 22641 ;;                  1    wreg      void 
 22642 ;; Registers used:
 22643 ;;		wreg
 22644 ;; Tracked objects:
 22645 ;;		On entry : 0/0
 22646 ;;		On exit  : 0/0
 22647 ;;		Unchanged: 0/0
 22648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22653 ;;Total ram usage:        0 bytes
 22654 ;; Hardware stack levels used: 1
 22655 ;; Hardware stack levels required when called: 4
 22656 ;; This function calls:
 22657 ;;		Nothing
 22658 ;; This function is called by:
 22659 ;;		_main
 22660 ;; This function uses a non-reentrant model
 22661 ;;
 22662                           
 22663     1067                     _LIGHTBLUE_Initialize:	
 22664                           ;psect for function _LIGHTBLUE_Initialize
 22665                           
 22666     1067                     l13942:	
 22667                           ;incstack = 0
 22668                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 22669                           
 22670                           
 22671                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 22672     1067  3001               	movlw	1
 22673     1068  0140               	movlb	0	; select bank0
 22674     1069  00D0               	movwf	_bitMap	;volatile
 22675                           
 22676                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 22677     106A  3001               	movlw	1
 22678     106B  00D1               	movwf	_bitMap+1	;volatile
 22679     106C                     l121:
 22680     106C  0008               	return
 22681     106D                     __end_of_LIGHTBLUE_Initialize:
 22682                           
 22683                           	psect	text91
 22684     17D2                     __ptext91:	
 22685 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 22686 ;; Defined at:
 22687 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22688 ;; Parameters:    Size  Location     Type
 22689 ;;		None
 22690 ;; Auto vars:     Size  Location     Type
 22691 ;;  payload        13   24[BANK0 ] unsigned char [13]
 22692 ;;  accelData       6   37[BANK0 ] struct .
 22693 ;; Return value:  Size  Location     Type
 22694 ;;                  1    wreg      void 
 22695 ;; Registers used:
 22696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22697 ;; Tracked objects:
 22698 ;;		On entry : 0/0
 22699 ;;		On exit  : 0/0
 22700 ;;		Unchanged: 0/0
 22701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22705 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22706 ;;Total ram usage:       19 bytes
 22707 ;; Hardware stack levels used: 1
 22708 ;; Hardware stack levels required when called: 16
 22709 ;; This function calls:
 22710 ;;		_BMA253_GetAccelDataXYZ
 22711 ;;		_LIGHTBLUE_SendPacket
 22712 ;;		_LIGHTBLUE_SplitWord
 22713 ;; This function is called by:
 22714 ;;		_main
 22715 ;; This function uses a non-reentrant model
 22716 ;;
 22717                           
 22718     17D2                     _LIGHTBLUE_AccelSensor:	
 22719                           ;psect for function _LIGHTBLUE_AccelSensor
 22720                           
 22721     17D2                     l13952:	
 22722                           ;incstack = 0
 22723 ;; hardware stack exceeded
 22724                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22725                           
 22726                           
 22727                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 22728     17D2  0140               	movlb	0	; select bank0
 22729     17D3  01B8               	clrf	LIGHTBLUE_AccelSensor@payload
 22730     17D4                     l13954:
 22731                           
 22732                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 22733     17D4  3045               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 22734     17D5  318A  225E  3197   	fcall	_BMA253_GetAccelDataXYZ
 22735     17D8                     l13956:
 22736                           
 22737                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 22738     17D8  30FF               	movlw	255
 22739     17D9  0140               	movlb	0	; select bank0
 22740     17DA  0545               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 22741     17DB  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22742     17DC  300F               	movlw	15
 22743     17DD  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 22744     17DE  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22745     17DF  3038               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22746     17E0  3191  21C5  3197   	fcall	_LIGHTBLUE_SplitWord
 22747     17E3                     l13958:
 22748                           
 22749                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 22750     17E3  30FF               	movlw	255
 22751     17E4  0140               	movlb	0	; select bank0
 22752     17E5  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 22753     17E6  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22754     17E7  300F               	movlw	15
 22755     17E8  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 22756     17E9  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22757     17EA  3038               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22758     17EB  3191  21C5  3197   	fcall	_LIGHTBLUE_SplitWord
 22759     17EE                     l13960:
 22760                           
 22761                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 22762     17EE  30FF               	movlw	255
 22763     17EF  0140               	movlb	0	; select bank0
 22764     17F0  0549               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 22765     17F1  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22766     17F2  300F               	movlw	15
 22767     17F3  054A               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 22768     17F4  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22769     17F5  3038               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22770     17F6  3191  21C5  3197   	fcall	_LIGHTBLUE_SplitWord
 22771     17F9                     l13962:
 22772                           
 22773                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 22774     17F9  3038               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22775     17FA  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22776     17FB  3058               	movlw	88
 22777     17FC  3186  2643  3197   	fcall	_LIGHTBLUE_SendPacket
 22778     17FF                     l127:
 22779     17FF  0008               	return
 22780     1800                     __end_of_LIGHTBLUE_AccelSensor:
 22781                           
 22782                           	psect	text92
 22783     11C5                     __ptext92:	
 22784 ;; *************** function _LIGHTBLUE_SplitWord *****************
 22785 ;; Defined at:
 22786 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22787 ;; Parameters:    Size  Location     Type
 22788 ;;  payload         1    wreg     PTR unsigned char 
 22789 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 22790 ;;  value           2    9[COMMON] short 
 22791 ;; Auto vars:     Size  Location     Type
 22792 ;;  payload         1   11[COMMON] PTR unsigned char 
 22793 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 22794 ;; Return value:  Size  Location     Type
 22795 ;;                  1    wreg      void 
 22796 ;; Registers used:
 22797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22798 ;; Tracked objects:
 22799 ;;		On entry : 0/0
 22800 ;;		On exit  : 0/0
 22801 ;;		Unchanged: 0/0
 22802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22807 ;;Total ram usage:        3 bytes
 22808 ;; Hardware stack levels used: 1
 22809 ;; Hardware stack levels required when called: 6
 22810 ;; This function calls:
 22811 ;;		_LIGHTBLUE_SplitByte
 22812 ;; This function is called by:
 22813 ;;		_LIGHTBLUE_TemperatureSensor
 22814 ;;		_LIGHTBLUE_AccelSensor
 22815 ;; This function uses a non-reentrant model
 22816 ;;
 22817                           
 22818     11C5                     _LIGHTBLUE_SplitWord:	
 22819                           ;psect for function _LIGHTBLUE_SplitWord
 22820                           
 22821                           
 22822                           ;incstack = 0
 22823                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22824                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 22825     11C5  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 22826     11C6                     l13272:
 22827                           
 22828                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 22829     11C6  0879               	movf	LIGHTBLUE_SplitWord@value,w
 22830     11C7  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22831     11C8  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 22832     11C9  3188  2043  3191   	fcall	_LIGHTBLUE_SplitByte
 22833                           
 22834                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 22835     11CC  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 22836     11CD  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22837     11CE  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 22838     11CF  3188  2043  3191   	fcall	_LIGHTBLUE_SplitByte
 22839     11D2                     l196:
 22840     11D2  0008               	return
 22841     11D3                     __end_of_LIGHTBLUE_SplitWord:
 22842                           
 22843                           	psect	text93
 22844     0843                     __ptext93:	
 22845 ;; *************** function _LIGHTBLUE_SplitByte *****************
 22846 ;; Defined at:
 22847 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22848 ;; Parameters:    Size  Location     Type
 22849 ;;  payload         1    wreg     PTR unsigned char 
 22850 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 22851 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 22852 ;;  value           1    6[COMMON] char 
 22853 ;; Auto vars:     Size  Location     Type
 22854 ;;  payload         1    8[COMMON] PTR unsigned char 
 22855 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 22856 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 22857 ;; Return value:  Size  Location     Type
 22858 ;;                  1    wreg      void 
 22859 ;; Registers used:
 22860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22861 ;; Tracked objects:
 22862 ;;		On entry : 0/0
 22863 ;;		On exit  : 0/0
 22864 ;;		Unchanged: 0/0
 22865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22870 ;;Total ram usage:        3 bytes
 22871 ;; Hardware stack levels used: 1
 22872 ;; Hardware stack levels required when called: 5
 22873 ;; This function calls:
 22874 ;;		_strlen
 22875 ;; This function is called by:
 22876 ;;		_LIGHTBLUE_PushButton
 22877 ;;		_LIGHTBLUE_LedState
 22878 ;;		_LIGHTBLUE_SendProtocolVersion
 22879 ;;		_LIGHTBLUE_SplitWord
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883     0843                     _LIGHTBLUE_SplitByte:	
 22884                           ;psect for function _LIGHTBLUE_SplitByte
 22885                           
 22886                           
 22887                           ;incstack = 0
 22888                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22889                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 22890     0843  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 22891     0844                     l13130:
 22892                           
 22893                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 22894     0844  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 22895     0845  00F1               	movwf	strlen@s
 22896     0846  01F2               	clrf	strlen@s+1
 22897     0847  3194  2417  3188   	fcall	_strlen
 22898     084A  0871               	movf	?_strlen,w
 22899     084B  00F7               	movwf	??_LIGHTBLUE_SplitByte
 22900     084C  0877               	movf	??_LIGHTBLUE_SplitByte,w
 22901     084D  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 22902     084E                     l13132:
 22903                           
 22904                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 22905     084E  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 22906     084F  0086               	movwf	6
 22907     0850  0187               	clrf	7
 22908     0851  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 22909     0852  390F               	andlw	15
 22910     0853  1989               	btfsc	9,3
 22911     0854  38F0               	iorlw	240
 22912     0855  390F               	andlw	15
 22913     0856  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22914     0857  0084               	movwf	4
 22915     0858  3001               	movlw	1	; select bank3/4
 22916     0859  0085               	movwf	5
 22917     085A  0800               	movf	0,w
 22918     085B  0081               	movwf	1
 22919     085C                     l13134:
 22920     085C  3001               	movlw	1
 22921     085D  00F7               	movwf	??_LIGHTBLUE_SplitByte
 22922     085E  0877               	movf	??_LIGHTBLUE_SplitByte,w
 22923     085F  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 22924     0860                     l13136:
 22925                           
 22926                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 22927     0860  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 22928     0861  0086               	movwf	6
 22929     0862  0187               	clrf	7
 22930     0863  0876               	movf	LIGHTBLUE_SplitByte@value,w
 22931     0864  390F               	andlw	15
 22932     0865  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22933     0866  0084               	movwf	4
 22934     0867  3001               	movlw	1	; select bank3/4
 22935     0868  0085               	movwf	5
 22936     0869  0800               	movf	0,w
 22937     086A  0081               	movwf	1
 22938     086B                     l13138:
 22939     086B  3001               	movlw	1
 22940     086C  00F7               	movwf	??_LIGHTBLUE_SplitByte
 22941     086D  0877               	movf	??_LIGHTBLUE_SplitByte,w
 22942     086E  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 22943     086F                     l13140:
 22944                           
 22945                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 22946     086F  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 22947     0870  0086               	movwf	6
 22948     0871  0187               	clrf	7
 22949     0872  0181               	clrf	1
 22950     0873                     l199:
 22951     0873  0008               	return
 22952     0874                     __end_of_LIGHTBLUE_SplitByte:
 22953                           
 22954                           	psect	text94
 22955     0643                     __ptext94:	
 22956 ;; *************** function _LIGHTBLUE_SendPacket *****************
 22957 ;; Defined at:
 22958 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;  packetID        1    wreg     unsigned char 
 22961 ;;  payload         1    7[COMMON] PTR unsigned char 
 22962 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 22963 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 22964 ;; Auto vars:     Size  Location     Type
 22965 ;;  packetID        1   10[COMMON] unsigned char 
 22966 ;; Return value:  Size  Location     Type
 22967 ;;                  1    wreg      void 
 22968 ;; Registers used:
 22969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22970 ;; Tracked objects:
 22971 ;;		On entry : 0/0
 22972 ;;		On exit  : 0/0
 22973 ;;		Unchanged: 0/0
 22974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22975 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22979 ;;Total ram usage:        4 bytes
 22980 ;; Hardware stack levels used: 1
 22981 ;; Hardware stack levels required when called: 6
 22982 ;; This function calls:
 22983 ;;		_RN487X_Write
 22984 ;;		_strlen
 22985 ;; This function is called by:
 22986 ;;		_LIGHTBLUE_TemperatureSensor
 22987 ;;		_LIGHTBLUE_AccelSensor
 22988 ;;		_LIGHTBLUE_PushButton
 22989 ;;		_LIGHTBLUE_LedState
 22990 ;;		_LIGHTBLUE_SendProtocolVersion
 22991 ;; This function uses a non-reentrant model
 22992 ;;
 22993                           
 22994     0643                     _LIGHTBLUE_SendPacket:	
 22995                           ;psect for function _LIGHTBLUE_SendPacket
 22996                           
 22997                           
 22998                           ;incstack = 0
 22999                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23000                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23001     0643  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23002     0644                     l13274:
 23003                           
 23004                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23005     0644  305B               	movlw	91
 23006     0645  00F6               	movwf	RN487X_Write@txData
 23007     0646  3068               	movlw	low (_RN487X| (0+32768))
 23008     0647  0084               	movwf	4
 23009     0648  3098               	movlw	high (_RN487X| (0+32768))
 23010     0649  0085               	movwf	5
 23011     064A  3F01               	moviw [1]fsr0
 23012     064B  008A               	movwf	10
 23013     064C  3F00               	moviw [0]fsr0
 23014     064D  000A               	callw
 23015     064E  3186               	pagesel	$
 23016                           
 23017                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23018     064F  0140               	movlb	0	; select bank0
 23019     0650  086E               	movf	_sequenceNumber,w
 23020     0651  390F               	andlw	15
 23021     0652  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23022     0653  0086               	movwf	6
 23023     0654  3001               	movlw	1	; select bank3/4
 23024     0655  0087               	movwf	7
 23025     0656  0801               	movf	1,w
 23026     0657  00F6               	movwf	RN487X_Write@txData
 23027     0658  3068               	movlw	low (_RN487X| (0+32768))
 23028     0659  0084               	movwf	4
 23029     065A  3098               	movlw	high (_RN487X| (0+32768))
 23030     065B  0085               	movwf	5
 23031     065C  3F01               	moviw [1]fsr0
 23032     065D  008A               	movwf	10
 23033     065E  3F00               	moviw [0]fsr0
 23034     065F  000A               	callw
 23035     0660  3186               	pagesel	$
 23036     0661                     l13276:
 23037     0661  3001               	movlw	1
 23038     0662  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23039     0663  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23040     0664  0140               	movlb	0	; select bank0
 23041     0665  07EE               	addwf	_sequenceNumber,f
 23042     0666                     l13278:
 23043                           
 23044                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23045     0666  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23046     0667  00F6               	movwf	RN487X_Write@txData
 23047     0668  3068               	movlw	low (_RN487X| (0+32768))
 23048     0669  0084               	movwf	4
 23049     066A  3098               	movlw	high (_RN487X| (0+32768))
 23050     066B  0085               	movwf	5
 23051     066C  3F01               	moviw [1]fsr0
 23052     066D  008A               	movwf	10
 23053     066E  3F00               	moviw [0]fsr0
 23054     066F  000A               	callw
 23055     0670  3186               	pagesel	$
 23056     0671                     l13280:
 23057                           
 23058                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23059     0671  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23060     0672  00F1               	movwf	strlen@s
 23061     0673  01F2               	clrf	strlen@s+1
 23062     0674  3194  2417  3186   	fcall	_strlen
 23063     0677  0871               	movf	?_strlen,w
 23064     0678  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23065     0679  0872               	movf	?_strlen+1,w
 23066     067A  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23067     067B  3004               	movlw	4
 23068     067C                     u10425:
 23069     067C  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23070     067D  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23071     067E  0B89               	decfsz	9,f
 23072     067F  2E7C               	goto	u10425
 23073     0680  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23074     0681  390F               	andlw	15
 23075     0682  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23076     0683  0086               	movwf	6
 23077     0684  3001               	movlw	1	; select bank3/4
 23078     0685  0087               	movwf	7
 23079     0686  0801               	movf	1,w
 23080     0687  00F6               	movwf	RN487X_Write@txData
 23081     0688  3068               	movlw	low (_RN487X| (0+32768))
 23082     0689  0084               	movwf	4
 23083     068A  3098               	movlw	high (_RN487X| (0+32768))
 23084     068B  0085               	movwf	5
 23085     068C  3F01               	moviw [1]fsr0
 23086     068D  008A               	movwf	10
 23087     068E  3F00               	moviw [0]fsr0
 23088     068F  000A               	callw
 23089     0690  3186               	pagesel	$
 23090     0691                     l13282:
 23091                           
 23092                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23093     0691  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23094     0692  00F1               	movwf	strlen@s
 23095     0693  01F2               	clrf	strlen@s+1
 23096     0694  3194  2417  3186   	fcall	_strlen
 23097     0697  0871               	movf	?_strlen,w
 23098     0698  390F               	andlw	15
 23099     0699  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23100     069A  0086               	movwf	6
 23101     069B  3001               	movlw	1	; select bank3/4
 23102     069C  0087               	movwf	7
 23103     069D  0801               	movf	1,w
 23104     069E  00F6               	movwf	RN487X_Write@txData
 23105     069F  3068               	movlw	low (_RN487X| (0+32768))
 23106     06A0  0084               	movwf	4
 23107     06A1  3098               	movlw	high (_RN487X| (0+32768))
 23108     06A2  0085               	movwf	5
 23109     06A3  3F01               	moviw [1]fsr0
 23110     06A4  008A               	movwf	10
 23111     06A5  3F00               	moviw [0]fsr0
 23112     06A6  000A               	callw
 23113     06A7  3186               	pagesel	$
 23114                           
 23115                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23116     06A8  2EBB               	goto	l13288
 23117     06A9                     l13284:
 23118                           
 23119                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23120     06A9  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23121     06AA  0086               	movwf	6
 23122     06AB  0187               	clrf	7
 23123     06AC  0801               	movf	1,w
 23124     06AD  00F6               	movwf	RN487X_Write@txData
 23125     06AE  3068               	movlw	low (_RN487X| (0+32768))
 23126     06AF  0084               	movwf	4
 23127     06B0  3098               	movlw	high (_RN487X| (0+32768))
 23128     06B1  0085               	movwf	5
 23129     06B2  3F01               	moviw [1]fsr0
 23130     06B3  008A               	movwf	10
 23131     06B4  3F00               	moviw [0]fsr0
 23132     06B5  000A               	callw
 23133     06B6  3186               	pagesel	$
 23134     06B7                     l13286:
 23135     06B7  3001               	movlw	1
 23136     06B8  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23137     06B9  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23138     06BA  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23139     06BB                     l13288:
 23140                           
 23141                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23142     06BB  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23143     06BC  0086               	movwf	6
 23144     06BD  0187               	clrf	7
 23145     06BE  0801               	movf	1,w
 23146     06BF  1D03               	btfss	3,2
 23147     06C0  2EC2               	goto	u10431
 23148     06C1  2EC3               	goto	u10430
 23149     06C2                     u10431:
 23150     06C2  2EA9               	goto	l13284
 23151     06C3                     u10430:
 23152     06C3                     l13290:
 23153                           
 23154                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23155     06C3  305D               	movlw	93
 23156     06C4  00F6               	movwf	RN487X_Write@txData
 23157     06C5  3068               	movlw	low (_RN487X| (0+32768))
 23158     06C6  0084               	movwf	4
 23159     06C7  3098               	movlw	high (_RN487X| (0+32768))
 23160     06C8  0085               	movwf	5
 23161     06C9  3F01               	moviw [1]fsr0
 23162     06CA  008A               	movwf	10
 23163     06CB  3F00               	moviw [0]fsr0
 23164     06CC  000A               	callw
 23165     06CD  3186               	pagesel	$
 23166     06CE                     l193:
 23167     06CE  0008               	return
 23168     06CF                     __end_of_LIGHTBLUE_SendPacket:
 23169                           
 23170                           	psect	text95
 23171     1417                     __ptext95:	
 23172 ;; *************** function _strlen *****************
 23173 ;; Defined at:
 23174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23175 ;; Parameters:    Size  Location     Type
 23176 ;;  s               2    1[COMMON] PTR const unsigned char 
 23177 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4230(80), STR_5(12), STR_3(11), 
 23178 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23179 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23180 ;; Auto vars:     Size  Location     Type
 23181 ;;  a               2    4[COMMON] PTR const unsigned char 
 23182 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4230(80), STR_5(12), STR_3(11), 
 23183 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23184 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23185 ;; Return value:  Size  Location     Type
 23186 ;;                  2    1[COMMON] unsigned int 
 23187 ;; Registers used:
 23188 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23189 ;; Tracked objects:
 23190 ;;		On entry : 0/0
 23191 ;;		On exit  : 0/0
 23192 ;;		Unchanged: 0/0
 23193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23197 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23198 ;;Total ram usage:        5 bytes
 23199 ;; Hardware stack levels used: 1
 23200 ;; Hardware stack levels required when called: 4
 23201 ;; This function calls:
 23202 ;;		Nothing
 23203 ;; This function is called by:
 23204 ;;		_LIGHTBLUE_SendProtocolVersion
 23205 ;;		_LIGHTBLUE_SendSerialData
 23206 ;;		_LIGHTBLUE_SendPacket
 23207 ;;		_LIGHTBLUE_SplitByte
 23208 ;;		_rn487x_PrintMessage
 23209 ;;		_strstr
 23210 ;; This function uses a non-reentrant model
 23211 ;;
 23212                           
 23213     1417                     _strlen:	
 23214                           ;psect for function _strlen
 23215                           
 23216     1417                     l12764:	
 23217                           ;incstack = 0
 23218                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23219                           
 23220     1417  0872               	movf	strlen@s+1,w
 23221     1418  00F5               	movwf	strlen@a+1
 23222     1419  0871               	movf	strlen@s,w
 23223     141A  00F4               	movwf	strlen@a
 23224     141B  2C20               	goto	l12768
 23225     141C                     l12766:
 23226     141C  3001               	movlw	1
 23227     141D  07F1               	addwf	strlen@s,f
 23228     141E  3000               	movlw	0
 23229     141F  3DF2               	addwfc	strlen@s+1,f
 23230     1420                     l12768:
 23231     1420  0871               	movf	strlen@s,w
 23232     1421  0084               	movwf	4
 23233     1422  0872               	movf	strlen@s+1,w
 23234     1423  0085               	movwf	5
 23235     1424  0012               	moviw fsr0++
 23236     1425  1D03               	btfss	3,2
 23237     1426  2C28               	goto	u9841
 23238     1427  2C29               	goto	u9840
 23239     1428                     u9841:
 23240     1428  2C1C               	goto	l12766
 23241     1429                     u9840:
 23242     1429                     l12770:
 23243     1429  0874               	movf	strlen@a,w
 23244     142A  0271               	subwf	strlen@s,w
 23245     142B  00F1               	movwf	?_strlen
 23246     142C  0875               	movf	strlen@a+1,w
 23247     142D  3B72               	subwfb	strlen@s+1,w
 23248     142E  00F2               	movwf	?_strlen+1
 23249     142F                     l3347:
 23250     142F  0008               	return
 23251     1430                     __end_of_strlen:
 23252                           
 23253                           	psect	text96
 23254     117B                     __ptext96:	
 23255 ;; *************** function _RN487X_Write *****************
 23256 ;; Defined at:
 23257 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23258 ;; Parameters:    Size  Location     Type
 23259 ;;  txData          1    6[COMMON] unsigned char 
 23260 ;; Auto vars:     Size  Location     Type
 23261 ;;		None
 23262 ;; Return value:  Size  Location     Type
 23263 ;;                  1    wreg      void 
 23264 ;; Registers used:
 23265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23266 ;; Tracked objects:
 23267 ;;		On entry : 0/0
 23268 ;;		On exit  : 0/0
 23269 ;;		Unchanged: 0/0
 23270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23271 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23275 ;;Total ram usage:        1 bytes
 23276 ;; Hardware stack levels used: 1
 23277 ;; Hardware stack levels required when called: 5
 23278 ;; This function calls:
 23279 ;;		_EUSART1_Write
 23280 ;;		_EUSART2_Write
 23281 ;; This function is called by:
 23282 ;;		_RN487X_SendCmd
 23283 ;;		_LIGHTBLUE_SendPacket
 23284 ;;		_LIGHTBLUE_SendSerialData
 23285 ;;		_RN487X_Example_TransparentUart
 23286 ;;		_main
 23287 ;; This function uses a non-reentrant model
 23288 ;;
 23289                           
 23290     117B                     _RN487X_Write:	
 23291                           ;psect for function _RN487X_Write
 23292                           
 23293     117B                     l12724:	
 23294                           ;incstack = 0
 23295                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23296                           
 23297                           
 23298                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23299     117B  0876               	movf	RN487X_Write@txData,w
 23300     117C  00F1               	movwf	EUSART2_Write@txData
 23301     117D  3016               	movlw	low ((_uart+22)| (0+32768))
 23302     117E  0084               	movwf	4
 23303     117F  3098               	movlw	high ((_uart+22)| (0+32768))
 23304     1180  0085               	movwf	5
 23305     1181  3F01               	moviw [1]fsr0
 23306     1182  008A               	movwf	10
 23307     1183  3F00               	moviw [0]fsr0
 23308     1184  000A               	callw
 23309     1185  3191               	pagesel	$
 23310     1186                     l1448:
 23311     1186  0008               	return
 23312     1187                     __end_of_RN487X_Write:
 23313                           
 23314                           	psect	text97
 23315     164C                     __ptext97:	
 23316 ;; *************** function _EUSART1_Write *****************
 23317 ;; Defined at:
 23318 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23319 ;; Parameters:    Size  Location     Type
 23320 ;;  txData          1    1[COMMON] unsigned char 
 23321 ;; Auto vars:     Size  Location     Type
 23322 ;;		None
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  1    wreg      void 
 23325 ;; Registers used:
 23326 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23327 ;; Tracked objects:
 23328 ;;		On entry : 0/0
 23329 ;;		On exit  : 0/0
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23332 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23336 ;;Total ram usage:        2 bytes
 23337 ;; Hardware stack levels used: 1
 23338 ;; Hardware stack levels required when called: 4
 23339 ;; This function calls:
 23340 ;;		Nothing
 23341 ;; This function is called by:
 23342 ;;		_putch
 23343 ;;		_RN487X_Write
 23344 ;;		_rn487x_PrintMessageStart
 23345 ;;		_rn487x_PrintMessageEnd
 23346 ;;		_rn487x_PrintIndicatorCharacters
 23347 ;;		_rn487x_PrintMessage
 23348 ;;		_LIGHTBLUE_PerformAction
 23349 ;;		_RN487X_Example_TransparentUart
 23350 ;;		_main
 23351 ;; This function uses a non-reentrant model
 23352 ;;
 23353                           
 23354     164C                     _EUSART1_Write:	
 23355                           ;psect for function _EUSART1_Write
 23356                           
 23357     164C                     l12614:	
 23358                           ;incstack = 0
 23359                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23360                           
 23361     164C                     l12616:	
 23362                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23363                           
 23364                           
 23365                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23366     164C  0140               	movlb	0	; select bank0
 23367     164D  0856               	movf	_eusart1TxBufferRemaining,w	;volatile
 23368     164E  1903               	btfsc	3,2
 23369     164F  2E51               	goto	u9721
 23370     1650  2E52               	goto	u9720
 23371     1651                     u9721:
 23372     1651  2E4C               	goto	l12616
 23373     1652                     u9720:
 23374     1652                     l1881:
 23375                           
 23376                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23377     1652  014E               	movlb	14	; select bank14
 23378     1653  1A19               	btfsc	25,4	;volatile
 23379     1654  2E56               	goto	u9731
 23380     1655  2E57               	goto	u9730
 23381     1656                     u9731:
 23382     1656  2E5B               	goto	l1882
 23383     1657                     u9730:
 23384     1657                     l12618:
 23385                           
 23386                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23387     1657  0871               	movf	EUSART1_Write@txData,w
 23388     1658  0142               	movlb	2	; select bank2
 23389     1659  009A               	movwf	26	;volatile
 23390                           
 23391                           ;mcc_generated_files/eusart1.c: 182:     }
 23392     165A  2E71               	goto	l12630
 23393     165B                     l1882:	
 23394                           ;mcc_generated_files/eusart1.c: 183:     else
 23395                           
 23396                           
 23397                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23398     165B  1219               	bcf	25,4	;volatile
 23399     165C                     l12620:
 23400                           
 23401                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23402     165C  0140               	movlb	0	; select bank0
 23403     165D  0858               	movf	_eusart1TxHead,w
 23404     165E  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 23405     165F  0086               	movwf	6
 23406     1660  3001               	movlw	1	; select bank2/3
 23407     1661  0087               	movwf	7
 23408     1662  0871               	movf	EUSART1_Write@txData,w
 23409     1663  0081               	movwf	1
 23410     1664                     l12622:
 23411     1664  3001               	movlw	1
 23412     1665  00F2               	movwf	??_EUSART1_Write
 23413     1666  0872               	movf	??_EUSART1_Write,w
 23414     1667  07D8               	addwf	_eusart1TxHead,f	;volatile
 23415     1668                     l12624:
 23416                           
 23417                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23418     1668  3008               	movlw	8
 23419     1669  0258               	subwf	_eusart1TxHead,w	;volatile
 23420     166A  1C03               	skipc
 23421     166B  2E6D               	goto	u9741
 23422     166C  2E6E               	goto	u9740
 23423     166D                     u9741:
 23424     166D  2E6F               	goto	l12628
 23425     166E                     u9740:
 23426     166E                     l12626:
 23427                           
 23428                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23429     166E  01D8               	clrf	_eusart1TxHead	;volatile
 23430     166F                     l12628:
 23431                           
 23432                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23433     166F  3001               	movlw	1
 23434     1670  02D6               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23435     1671                     l12630:
 23436                           
 23437                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23438     1671  014E               	movlb	14	; select bank14
 23439     1672  1619               	bsf	25,4	;volatile
 23440     1673                     l1885:
 23441     1673  0008               	return
 23442     1674                     __end_of_EUSART1_Write:
 23443                           
 23444                           	psect	text98
 23445     15FD                     __ptext98:	
 23446 ;; *************** function _EUSART2_Write *****************
 23447 ;; Defined at:
 23448 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;  txData          1    1[COMMON] unsigned char 
 23451 ;; Auto vars:     Size  Location     Type
 23452 ;;		None
 23453 ;; Return value:  Size  Location     Type
 23454 ;;                  1    wreg      void 
 23455 ;; Registers used:
 23456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23457 ;; Tracked objects:
 23458 ;;		On entry : 0/0
 23459 ;;		On exit  : 0/0
 23460 ;;		Unchanged: 0/0
 23461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23466 ;;Total ram usage:        2 bytes
 23467 ;; Hardware stack levels used: 1
 23468 ;; Hardware stack levels required when called: 4
 23469 ;; This function calls:
 23470 ;;		Nothing
 23471 ;; This function is called by:
 23472 ;;		_RN487X_Write
 23473 ;;		_rn487x_PrintMessageStart
 23474 ;;		_rn487x_PrintMessageEnd
 23475 ;;		_rn487x_PrintIndicatorCharacters
 23476 ;;		_rn487x_PrintMessage
 23477 ;;		_LIGHTBLUE_PerformAction
 23478 ;;		_RN487X_Example_TransparentUart
 23479 ;;		_main
 23480 ;; This function uses a non-reentrant model
 23481 ;;
 23482                           
 23483     15FD                     _EUSART2_Write:	
 23484                           ;psect for function _EUSART2_Write
 23485                           
 23486     15FD                     l12570:	
 23487                           ;incstack = 0
 23488                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23489                           
 23490     15FD                     l12572:	
 23491                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23492                           
 23493                           
 23494                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23495     15FD  0140               	movlb	0	; select bank0
 23496     15FE  085B               	movf	_eusart2TxBufferRemaining,w	;volatile
 23497     15FF  1903               	btfsc	3,2
 23498     1600  2E02               	goto	u9671
 23499     1601  2E03               	goto	u9670
 23500     1602                     u9671:
 23501     1602  2DFD               	goto	l12572
 23502     1603                     u9670:
 23503     1603                     l1737:
 23504                           
 23505                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23506     1603  014E               	movlb	14	; select bank14
 23507     1604  1B19               	btfsc	25,6	;volatile
 23508     1605  2E07               	goto	u9681
 23509     1606  2E08               	goto	u9680
 23510     1607                     u9681:
 23511     1607  2E0C               	goto	l1738
 23512     1608                     u9680:
 23513     1608                     l12574:
 23514                           
 23515                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23516     1608  0871               	movf	EUSART2_Write@txData,w
 23517     1609  0154               	movlb	20	; select bank20
 23518     160A  009A               	movwf	26	;volatile
 23519                           
 23520                           ;mcc_generated_files/eusart2.c: 182:     }
 23521     160B  2E21               	goto	l12586
 23522     160C                     l1738:	
 23523                           ;mcc_generated_files/eusart2.c: 183:     else
 23524                           
 23525                           
 23526                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23527     160C  1319               	bcf	25,6	;volatile
 23528     160D                     l12576:
 23529                           
 23530                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23531     160D  0140               	movlb	0	; select bank0
 23532     160E  085D               	movf	_eusart2TxHead,w
 23533     160F  3ECE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23534     1610  0086               	movwf	6
 23535     1611  0187               	clrf	7
 23536     1612  0871               	movf	EUSART2_Write@txData,w
 23537     1613  0081               	movwf	1
 23538     1614                     l12578:
 23539     1614  3001               	movlw	1
 23540     1615  00F2               	movwf	??_EUSART2_Write
 23541     1616  0872               	movf	??_EUSART2_Write,w
 23542     1617  07DD               	addwf	_eusart2TxHead,f	;volatile
 23543     1618                     l12580:
 23544                           
 23545                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23546     1618  3008               	movlw	8
 23547     1619  025D               	subwf	_eusart2TxHead,w	;volatile
 23548     161A  1C03               	skipc
 23549     161B  2E1D               	goto	u9691
 23550     161C  2E1E               	goto	u9690
 23551     161D                     u9691:
 23552     161D  2E1F               	goto	l12584
 23553     161E                     u9690:
 23554     161E                     l12582:
 23555                           
 23556                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23557     161E  01DD               	clrf	_eusart2TxHead	;volatile
 23558     161F                     l12584:
 23559                           
 23560                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 23561     161F  3001               	movlw	1
 23562     1620  02DB               	subwf	_eusart2TxBufferRemaining,f	;volatile
 23563     1621                     l12586:
 23564                           
 23565                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 23566     1621  014E               	movlb	14	; select bank14
 23567     1622  1719               	bsf	25,6	;volatile
 23568     1623                     l1741:
 23569     1623  0008               	return
 23570     1624                     __end_of_EUSART2_Write:
 23571                           
 23572                           	psect	text99
 23573     0A5E                     __ptext99:	
 23574 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 23575 ;; Defined at:
 23576 ;;		line 111 in file "mcc_generated_files/application/BMA253_accel.c"
 23577 ;; Parameters:    Size  Location     Type
 23578 ;;  accelData       1    wreg     PTR struct .
 23579 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;  accelData       1   21[BANK0 ] PTR struct .
 23582 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23583 ;;  sensorValue     2   22[BANK0 ] short 
 23584 ;; Return value:  Size  Location     Type
 23585 ;;                  1    wreg      void 
 23586 ;; Registers used:
 23587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23588 ;; Tracked objects:
 23589 ;;		On entry : 0/0
 23590 ;;		On exit  : 0/0
 23591 ;;		Unchanged: 0/0
 23592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23596 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23597 ;;Total ram usage:        3 bytes
 23598 ;; Hardware stack levels used: 1
 23599 ;; Hardware stack levels required when called: 15
 23600 ;; This function calls:
 23601 ;;		_BMA253_GetAccelDataY
 23602 ;;		_BMA253_GetAccelDataZ
 23603 ;;		_BMA253_NewAccelDataRdyY
 23604 ;;		_BMA253_NewAccelDataRdyZ
 23605 ;;		_TMAG5273_GetXValue
 23606 ;; This function is called by:
 23607 ;;		_LIGHTBLUE_AccelSensor
 23608 ;; This function uses a non-reentrant model
 23609 ;;
 23610                           
 23611     0A5E                     _BMA253_GetAccelDataXYZ:	
 23612                           ;psect for function _BMA253_GetAccelDataXYZ
 23613                           
 23614                           
 23615                           ;incstack = 0
 23616 ;; hardware stack exceeded
 23617                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23618                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 23619     0A5E  0140               	movlb	0	; select bank0
 23620     0A5F  00B5               	movwf	BMA253_GetAccelDataXYZ@accelData
 23621     0A60                     l13244:
 23622                           
 23623                           ;mcc_generated_files/application/BMA253_accel.c: 112:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 113:     TMAG5273_GetXValue(&sensorValue);
 23624     0A60  3036               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23625     0A61  3191  21F1  318A   	fcall	_TMAG5273_GetXValue
 23626     0A64                     l13246:
 23627                           
 23628                           ;mcc_generated_files/application/BMA253_accel.c: 115:     accelData->x = sensorValue;
 23629     0A64  0140               	movlb	0	; select bank0
 23630     0A65  0835               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23631     0A66  0086               	movwf	6
 23632     0A67  0187               	clrf	7
 23633     0A68  0836               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23634     0A69  3FC0               	movwi [0]fsr1
 23635     0A6A  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23636     0A6B  3FC1               	movwi [1]fsr1
 23637     0A6C                     l13248:	
 23638                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 23639                           
 23640                           
 23641                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 23642     0A6C  3192  222E  318A   	fcall	_BMA253_NewAccelDataRdyY
 23643     0A6F  3A00               	xorlw	0
 23644     0A70  1903               	skipnz
 23645     0A71  2A73               	goto	u10401
 23646     0A72  2A74               	goto	u10400
 23647     0A73                     u10401:
 23648     0A73  2A6C               	goto	l13248
 23649     0A74                     u10400:
 23650     0A74                     l13250:
 23651                           
 23652                           ;mcc_generated_files/application/BMA253_accel.c: 121:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 23653     0A74  3036               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23654     0A75  3197  2776  318A   	fcall	_BMA253_GetAccelDataY
 23655     0A78                     l13252:
 23656                           
 23657                           ;mcc_generated_files/application/BMA253_accel.c: 122:     accelData->y = sensorValue;
 23658     0A78  0140               	movlb	0	; select bank0
 23659     0A79  0835               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23660     0A7A  3E02               	addlw	2
 23661     0A7B  0086               	movwf	6
 23662     0A7C  0187               	clrf	7
 23663     0A7D  0836               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23664     0A7E  3FC0               	movwi [0]fsr1
 23665     0A7F  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23666     0A80  3FC1               	movwi [1]fsr1
 23667     0A81                     l13254:	
 23668                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 23669                           
 23670                           
 23671                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 23672     0A81  3192  223F  318A   	fcall	_BMA253_NewAccelDataRdyZ
 23673     0A84  3A00               	xorlw	0
 23674     0A85  1903               	skipnz
 23675     0A86  2A88               	goto	u10411
 23676     0A87  2A89               	goto	u10410
 23677     0A88                     u10411:
 23678     0A88  2A81               	goto	l13254
 23679     0A89                     u10410:
 23680     0A89                     l13256:
 23681                           
 23682                           ;mcc_generated_files/application/BMA253_accel.c: 128:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 23683     0A89  3036               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23684     0A8A  3197  27A4  318A   	fcall	_BMA253_GetAccelDataZ
 23685     0A8D                     l13258:
 23686                           
 23687                           ;mcc_generated_files/application/BMA253_accel.c: 129:     accelData->z = sensorValue;
 23688     0A8D  0140               	movlb	0	; select bank0
 23689     0A8E  0835               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23690     0A8F  3E04               	addlw	4
 23691     0A90  0086               	movwf	6
 23692     0A91  0187               	clrf	7
 23693     0A92  0836               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23694     0A93  3FC0               	movwi [0]fsr1
 23695     0A94  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23696     0A95  3FC1               	movwi [1]fsr1
 23697     0A96                     l44:
 23698     0A96  0008               	return
 23699     0A97                     __end_of_BMA253_GetAccelDataXYZ:
 23700                           
 23701                           	psect	text100
 23702     11F1                     __ptext100:	
 23703 ;; *************** function _TMAG5273_GetXValue *****************
 23704 ;; Defined at:
 23705 ;;		line 2571 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  x               1    wreg     PTR short 
 23708 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;  x               1   20[BANK0 ] PTR short 
 23711 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 23712 ;; Return value:  Size  Location     Type
 23713 ;;                  1    wreg      void 
 23714 ;; Registers used:
 23715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23716 ;; Tracked objects:
 23717 ;;		On entry : 0/0
 23718 ;;		On exit  : 0/0
 23719 ;;		Unchanged: 0/0
 23720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23725 ;;Total ram usage:        1 bytes
 23726 ;; Hardware stack levels used: 1
 23727 ;; Hardware stack levels required when called: 14
 23728 ;; This function calls:
 23729 ;;		_TMAG5273_CalcMeasurement
 23730 ;; This function is called by:
 23731 ;;		_BMA253_GetAccelDataXYZ
 23732 ;; This function uses a non-reentrant model
 23733 ;;
 23734                           
 23735     11F1                     _TMAG5273_GetXValue:	
 23736                           ;psect for function _TMAG5273_GetXValue
 23737                           
 23738                           
 23739                           ;incstack = 0
 23740 ;; hardware stack exceeded
 23741                           ; Regs used in _TMAG5273_GetXValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23742                           ;TMAG5273_GetXValue@x stored from wreg
 23743     11F1  0140               	movlb	0	; select bank0
 23744     11F2  00B4               	movwf	TMAG5273_GetXValue@x
 23745     11F3                     l13128:
 23746                           
 23747                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2572:     *x = TMAG527
      +                          3_CalcMeasurement(TMAG5273_REG_X_MSB_RESULT);
 23748     11F3  3012               	movlw	18
 23749     11F4  3195  25B2  3191   	fcall	_TMAG5273_CalcMeasurement
 23750     11F7  0140               	movlb	0	; select bank0
 23751     11F8  0834               	movf	TMAG5273_GetXValue@x,w
 23752     11F9  0086               	movwf	6
 23753     11FA  0187               	clrf	7
 23754     11FB  082D               	movf	?_TMAG5273_CalcMeasurement,w
 23755     11FC  3FC0               	movwi [0]fsr1
 23756     11FD  082E               	movf	?_TMAG5273_CalcMeasurement+1,w
 23757     11FE  3FC1               	movwi [1]fsr1
 23758     11FF                     l1250:
 23759     11FF  0008               	return
 23760     1200                     __end_of_TMAG5273_GetXValue:
 23761                           
 23762                           	psect	text101
 23763     15B2                     __ptext101:	
 23764 ;; *************** function _TMAG5273_CalcMeasurement *****************
 23765 ;; Defined at:
 23766 ;;		line 2575 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 23767 ;; Parameters:    Size  Location     Type
 23768 ;;  regAddress      1    wreg     unsigned char 
 23769 ;; Auto vars:     Size  Location     Type
 23770 ;;  regAddress      1   11[COMMON] unsigned char 
 23771 ;; Return value:  Size  Location     Type
 23772 ;;                  2   13[BANK0 ] short 
 23773 ;; Registers used:
 23774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23775 ;; Tracked objects:
 23776 ;;		On entry : 0/0
 23777 ;;		On exit  : 0/0
 23778 ;;		Unchanged: 0/0
 23779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23782 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23783 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23784 ;;Total ram usage:        8 bytes
 23785 ;; Hardware stack levels used: 1
 23786 ;; Hardware stack levels required when called: 13
 23787 ;; This function calls:
 23788 ;;		_i2c_read2ByteRegister
 23789 ;; This function is called by:
 23790 ;;		_TMAG5273_GetXValue
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794     15B2                     _TMAG5273_CalcMeasurement:	
 23795                           ;psect for function _TMAG5273_CalcMeasurement
 23796                           
 23797                           
 23798                           ;incstack = 0
 23799 ;; hardware stack exceeded
 23800                           ; Regs used in _TMAG5273_CalcMeasurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23801                           ;TMAG5273_CalcMeasurement@regAddress stored from wreg
 23802     15B2  00FB               	movwf	TMAG5273_CalcMeasurement@regAddress
 23803     15B3                     l13076:
 23804                           
 23805                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2576:     data = i2c_r
      +                          ead2ByteRegister(0X22, regAddress);
 23806     15B3  087B               	movf	TMAG5273_CalcMeasurement@regAddress,w
 23807     15B4  0140               	movlb	0	; select bank0
 23808     15B5  00A4               	movwf	i2c_read2ByteRegister@reg
 23809     15B6  3022               	movlw	34
 23810     15B7  318B  23C7  3195   	fcall	_i2c_read2ByteRegister
 23811     15BA  0140               	movlb	0	; select bank0
 23812     15BB  0825               	movf	?_i2c_read2ByteRegister+1,w
 23813     15BC  00CF               	movwf	_data+1
 23814     15BD  0824               	movf	?_i2c_read2ByteRegister,w
 23815     15BE  00CE               	movwf	_data
 23816     15BF                     l13078:
 23817                           
 23818                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2577:     upperByte = 
      +                          ((data & (0xFF00)) >> 8);
 23819     15BF  084F               	movf	_data+1,w
 23820     15C0  00E7               	movwf	_upperByte
 23821     15C1                     l13080:
 23822                           
 23823                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2578:     lowerByte = 
      +                          (uint8_t) data;
 23824     15C1  084E               	movf	_data,w
 23825     15C2  00E6               	movwf	_lowerByte
 23826     15C3                     l13082:
 23827                           
 23828                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2580:     data = ((int
      +                          16_t) (lowerByte << 8) | upperByte);
 23829     15C3  0867               	movf	_upperByte,w
 23830     15C4  00AF               	movwf	??_TMAG5273_CalcMeasurement
 23831     15C5  01B0               	clrf	??_TMAG5273_CalcMeasurement+1
 23832     15C6  0866               	movf	_lowerByte,w
 23833     15C7  00B1               	movwf	??_TMAG5273_CalcMeasurement+2
 23834     15C8  01B2               	clrf	??_TMAG5273_CalcMeasurement+3
 23835     15C9  0831               	movf	??_TMAG5273_CalcMeasurement+2,w
 23836     15CA  00B2               	movwf	??_TMAG5273_CalcMeasurement+3
 23837     15CB  01B1               	clrf	??_TMAG5273_CalcMeasurement+2
 23838     15CC  082F               	movf	??_TMAG5273_CalcMeasurement,w
 23839     15CD  0431               	iorwf	??_TMAG5273_CalcMeasurement+2,w
 23840     15CE  00CE               	movwf	_data
 23841     15CF  0830               	movf	??_TMAG5273_CalcMeasurement+1,w
 23842     15D0  0432               	iorwf	??_TMAG5273_CalcMeasurement+3,w
 23843     15D1  00CF               	movwf	_data+1
 23844     15D2                     l13084:
 23845                           
 23846                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2582:     return data;
 23847     15D2  084F               	movf	_data+1,w
 23848     15D3  00AE               	movwf	?_TMAG5273_CalcMeasurement+1
 23849     15D4  084E               	movf	_data,w
 23850     15D5  00AD               	movwf	?_TMAG5273_CalcMeasurement
 23851     15D6                     l1253:
 23852     15D6  0008               	return
 23853     15D7                     __end_of_TMAG5273_CalcMeasurement:
 23854                           
 23855                           	psect	text102
 23856     0BC7                     __ptext102:	
 23857 ;; *************** function _i2c_read2ByteRegister *****************
 23858 ;; Defined at:
 23859 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;  address         1    wreg     unsigned char 
 23862 ;;  reg             1    4[BANK0 ] unsigned char 
 23863 ;; Auto vars:     Size  Location     Type
 23864 ;;  address         1   10[BANK0 ] unsigned char 
 23865 ;;  result          2   11[BANK0 ] unsigned short 
 23866 ;; Return value:  Size  Location     Type
 23867 ;;                  2    4[BANK0 ] unsigned short 
 23868 ;; Registers used:
 23869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23870 ;; Tracked objects:
 23871 ;;		On entry : 0/0
 23872 ;;		On exit  : 0/0
 23873 ;;		Unchanged: 0/0
 23874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23876 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23878 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23879 ;;Total ram usage:        9 bytes
 23880 ;; Hardware stack levels used: 1
 23881 ;; Hardware stack levels required when called: 12
 23882 ;; This function calls:
 23883 ;;		_I2C1_Close
 23884 ;;		_I2C1_MasterWrite
 23885 ;;		_I2C1_Open
 23886 ;;		_I2C1_SetAddressNackCallback
 23887 ;;		_I2C1_SetBuffer
 23888 ;;		_I2C1_SetDataCompleteCallback
 23889 ;; This function is called by:
 23890 ;;		_TMAG5273_GetManufacture
 23891 ;;		_TMAG5273_GetTemperatureValue
 23892 ;;		_TMAG5273_CalcMeasurement
 23893 ;;		_MCP9844_GetManufacture
 23894 ;;		_MCP9844_GetDevice
 23895 ;;		_MCP9844_CalcTemperature
 23896 ;;		_TMAG5273_GetDevice
 23897 ;; This function uses a non-reentrant model
 23898 ;;
 23899                           
 23900     0BC7                     _i2c_read2ByteRegister:	
 23901                           ;psect for function _i2c_read2ByteRegister
 23902                           
 23903                           
 23904                           ;incstack = 0
 23905                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23906                           ;i2c_read2ByteRegister@address stored from wreg
 23907     0BC7  0140               	movlb	0	; select bank0
 23908     0BC8  00AA               	movwf	i2c_read2ByteRegister@address
 23909     0BC9                     l12882:
 23910     0BC9                     l12884:	
 23911                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 23912                           
 23913     0BC9  0140               	movlb	0	; select bank0
 23914     0BCA  082A               	movf	i2c_read2ByteRegister@address,w
 23915     0BCB  3188  20DB  318B   	fcall	_I2C1_Open
 23916     0BCE  3A00               	xorlw	0
 23917     0BCF  1903               	skipnz
 23918     0BD0  2BD2               	goto	u10021
 23919     0BD1  2BD3               	goto	u10020
 23920     0BD2                     u10021:
 23921     0BD2  2BC9               	goto	l12884
 23922     0BD3                     u10020:
 23923     0BD3                     l12886:
 23924                           
 23925                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 23926     0BD3  309A               	movlw	low _rd2RegCompleteHandler
 23927     0BD4  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23928     0BD5  3012               	movlw	high _rd2RegCompleteHandler
 23929     0BD6  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23930     0BD7  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 23931     0BD8  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23932     0BD9  3191  2144  318B   	fcall	_I2C1_SetDataCompleteCallback
 23933     0BDC                     l12888:
 23934                           
 23935                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 23936     0BDC  3024               	movlw	low i2c_read2ByteRegister@reg
 23937     0BDD  00F1               	movwf	I2C1_SetBuffer@buffer
 23938     0BDE  3000               	movlw	high i2c_read2ByteRegister@reg
 23939     0BDF  00F2               	movwf	I2C1_SetBuffer@buffer+1
 23940     0BE0  3001               	movlw	1
 23941     0BE1  00F3               	movwf	I2C1_SetBuffer@bufferSize
 23942     0BE2  3000               	movlw	0
 23943     0BE3  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 23944     0BE4  3191  21E2  318B   	fcall	_I2C1_SetBuffer
 23945     0BE7                     l12890:
 23946                           
 23947                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 23948     0BE7  3000               	movlw	0
 23949     0BE8  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 23950     0BE9  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 23951     0BEA  3000               	movlw	0
 23952     0BEB  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 23953     0BEC  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 23954     0BED  3191  214F  318B   	fcall	_I2C1_SetAddressNackCallback
 23955     0BF0                     l12892:
 23956                           
 23957                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 23958     0BF0  3190  204C  318B   	fcall	_I2C1_MasterWrite
 23959     0BF3                     l12894:	
 23960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 23961                           
 23962     0BF3  3193  23CE  318B   	fcall	_I2C1_Close
 23963     0BF6  3A01               	xorlw	1
 23964     0BF7  1903               	skipnz
 23965     0BF8  2BFA               	goto	u10031
 23966     0BF9  2BFB               	goto	u10030
 23967     0BFA                     u10031:
 23968     0BFA  2BF3               	goto	l12894
 23969     0BFB                     u10030:
 23970     0BFB                     l12896:
 23971                           
 23972                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 23973     0BFB  0140               	movlb	0	; select bank0
 23974     0BFC  082C               	movf	i2c_read2ByteRegister@result+1,w
 23975     0BFD  00A7               	movwf	??_i2c_read2ByteRegister+1
 23976     0BFE  082B               	movf	i2c_read2ByteRegister@result,w
 23977     0BFF  00A6               	movwf	??_i2c_read2ByteRegister
 23978     0C00  0827               	movf	??_i2c_read2ByteRegister+1,w
 23979     0C01  00A6               	movwf	??_i2c_read2ByteRegister
 23980     0C02  01A7               	clrf	??_i2c_read2ByteRegister+1
 23981     0C03  082B               	movf	i2c_read2ByteRegister@result,w
 23982     0C04  00A9               	movwf	??_i2c_read2ByteRegister+3
 23983     0C05  01A8               	clrf	??_i2c_read2ByteRegister+2
 23984     0C06  0826               	movf	??_i2c_read2ByteRegister,w
 23985     0C07  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 23986     0C08  00A4               	movwf	?_i2c_read2ByteRegister
 23987     0C09  0827               	movf	??_i2c_read2ByteRegister+1,w
 23988     0C0A  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 23989     0C0B  00A5               	movwf	?_i2c_read2ByteRegister+1
 23990     0C0C                     l546:
 23991     0C0C  0008               	return
 23992     0C0D                     __end_of_i2c_read2ByteRegister:
 23993                           
 23994                           	psect	text103
 23995     17A4                     __ptext103:	
 23996 ;; *************** function _BMA253_GetAccelDataZ *****************
 23997 ;; Defined at:
 23998 ;;		line 99 in file "mcc_generated_files/application/BMA253_accel.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;  zAccelData      1    wreg     PTR short 
 24001 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24002 ;; Auto vars:     Size  Location     Type
 24003 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24004 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24005 ;;  msbData         1   15[BANK0 ] unsigned char 
 24006 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24007 ;; Return value:  Size  Location     Type
 24008 ;;                  1    wreg      void 
 24009 ;; Registers used:
 24010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24011 ;; Tracked objects:
 24012 ;;		On entry : 0/0
 24013 ;;		On exit  : 0/0
 24014 ;;		Unchanged: 0/0
 24015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24017 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24018 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24019 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24020 ;;Total ram usage:        6 bytes
 24021 ;; Hardware stack levels used: 1
 24022 ;; Hardware stack levels required when called: 14
 24023 ;; This function calls:
 24024 ;;		_BMA253_NewAccelDataRdyZ
 24025 ;;		_i2c_read1ByteRegister
 24026 ;; This function is called by:
 24027 ;;		_BMA253_GetAccelDataXYZ
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031     17A4                     _BMA253_GetAccelDataZ:	
 24032                           ;psect for function _BMA253_GetAccelDataZ
 24033                           
 24034                           
 24035                           ;incstack = 0
 24036 ;; hardware stack exceeded
 24037                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24038                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24039     17A4  0140               	movlb	0	; select bank0
 24040     17A5  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24041     17A6                     l13120:
 24042     17A6                     l13122:	
 24043                           ;mcc_generated_files/application/BMA253_accel.c: 100:     uint8_t lsbData;;mcc_generated
      +                          _files/application/BMA253_accel.c: 101:     uint8_t msbData;;mcc_generated_files/applica
      +                          tion/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdyZ()) {
 24044                           
 24045                           
 24046                           ;mcc_generated_files/application/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24047     17A6  3192  223F  3197   	fcall	_BMA253_NewAccelDataRdyZ
 24048     17A9  3A00               	xorlw	0
 24049     17AA  1903               	skipnz
 24050     17AB  2FAD               	goto	u10291
 24051     17AC  2FAE               	goto	u10290
 24052     17AD                     u10291:
 24053     17AD  2FA6               	goto	l13122
 24054     17AE                     u10290:
 24055     17AE                     l13124:
 24056                           
 24057                           ;mcc_generated_files/application/BMA253_accel.c: 106:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24058     17AE  3006               	movlw	6
 24059     17AF  0140               	movlb	0	; select bank0
 24060     17B0  00A4               	movwf	i2c_read1ByteRegister@reg
 24061     17B1  3019               	movlw	25
 24062     17B2  318E  260F  3197   	fcall	_i2c_read1ByteRegister
 24063     17B5  0140               	movlb	0	; select bank0
 24064     17B6  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24065                           
 24066                           ;mcc_generated_files/application/BMA253_accel.c: 107:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24067     17B7  3007               	movlw	7
 24068     17B8  00A4               	movwf	i2c_read1ByteRegister@reg
 24069     17B9  3019               	movlw	25
 24070     17BA  318E  260F  3197   	fcall	_i2c_read1ByteRegister
 24071     17BD  0140               	movlb	0	; select bank0
 24072     17BE  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24073     17BF                     l13126:
 24074                           
 24075                           ;mcc_generated_files/application/BMA253_accel.c: 108:     *zAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 24076     17BF  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24077     17C0  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24078     17C1  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24079     17C2  00AA               	movwf	??_BMA253_GetAccelDataZ
 24080     17C3  3004               	movlw	4
 24081     17C4  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24082     17C5                     u10305:
 24083     17C5  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24084     17C6  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24085     17C7  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24086     17C8  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24087     17C9  2FC5               	goto	u10305
 24088     17CA  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24089     17CB  0086               	movwf	6
 24090     17CC  0187               	clrf	7
 24091     17CD  082A               	movf	??_BMA253_GetAccelDataZ,w
 24092     17CE  3FC0               	movwi [0]fsr1
 24093     17CF  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24094     17D0  3FC1               	movwi [1]fsr1
 24095     17D1                     l35:
 24096     17D1  0008               	return
 24097     17D2                     __end_of_BMA253_GetAccelDataZ:
 24098                           
 24099                           	psect	text104
 24100     123F                     __ptext104:	
 24101 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24102 ;; Defined at:
 24103 ;;		line 152 in file "mcc_generated_files/application/BMA253_accel.c"
 24104 ;; Parameters:    Size  Location     Type
 24105 ;;		None
 24106 ;; Auto vars:     Size  Location     Type
 24107 ;;  zNewData        1   11[COMMON] _Bool 
 24108 ;; Return value:  Size  Location     Type
 24109 ;;                  1    wreg      _Bool 
 24110 ;; Registers used:
 24111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24112 ;; Tracked objects:
 24113 ;;		On entry : 0/0
 24114 ;;		On exit  : 0/0
 24115 ;;		Unchanged: 0/0
 24116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24121 ;;Total ram usage:        1 bytes
 24122 ;; Hardware stack levels used: 1
 24123 ;; Hardware stack levels required when called: 13
 24124 ;; This function calls:
 24125 ;;		_i2c_read1ByteRegister
 24126 ;; This function is called by:
 24127 ;;		_BMA253_GetAccelDataZ
 24128 ;;		_BMA253_GetAccelDataXYZ
 24129 ;; This function uses a non-reentrant model
 24130 ;;
 24131                           
 24132     123F                     _BMA253_NewAccelDataRdyZ:	
 24133                           ;psect for function _BMA253_NewAccelDataRdyZ
 24134                           
 24135     123F                     l13032:	
 24136                           ;incstack = 0
 24137                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24138                           
 24139                           
 24140                           ;mcc_generated_files/application/BMA253_accel.c: 153:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 155:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24141     123F  3006               	movlw	6
 24142     1240  0140               	movlb	0	; select bank0
 24143     1241  00A4               	movwf	i2c_read1ByteRegister@reg
 24144     1242  3019               	movlw	25
 24145     1243  318E  260F  3192   	fcall	_i2c_read1ByteRegister
 24146     1246  3901               	andlw	1
 24147     1247  1D03               	btfss	3,2
 24148     1248  2A4A               	goto	u10171
 24149     1249  2A4C               	goto	u10170
 24150     124A                     u10171:
 24151     124A  3001               	movlw	1
 24152     124B  2A4D               	goto	u10180
 24153     124C                     u10170:
 24154     124C  3000               	movlw	0
 24155     124D                     u10180:
 24156     124D  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24157     124E                     l13034:
 24158                           
 24159                           ;mcc_generated_files/application/BMA253_accel.c: 157:     return zNewData;
 24160     124E  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24161     124F                     l56:
 24162     124F  0008               	return
 24163     1250                     __end_of_BMA253_NewAccelDataRdyZ:
 24164                           
 24165                           	psect	text105
 24166     1776                     __ptext105:	
 24167 ;; *************** function _BMA253_GetAccelDataY *****************
 24168 ;; Defined at:
 24169 ;;		line 87 in file "mcc_generated_files/application/BMA253_accel.c"
 24170 ;; Parameters:    Size  Location     Type
 24171 ;;  yAccelData      1    wreg     PTR short 
 24172 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24173 ;; Auto vars:     Size  Location     Type
 24174 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24175 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24176 ;;  msbData         1   15[BANK0 ] unsigned char 
 24177 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24178 ;; Return value:  Size  Location     Type
 24179 ;;                  1    wreg      void 
 24180 ;; Registers used:
 24181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24182 ;; Tracked objects:
 24183 ;;		On entry : 0/0
 24184 ;;		On exit  : 0/0
 24185 ;;		Unchanged: 0/0
 24186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24188 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24191 ;;Total ram usage:        6 bytes
 24192 ;; Hardware stack levels used: 1
 24193 ;; Hardware stack levels required when called: 14
 24194 ;; This function calls:
 24195 ;;		_BMA253_NewAccelDataRdyY
 24196 ;;		_i2c_read1ByteRegister
 24197 ;; This function is called by:
 24198 ;;		_BMA253_GetAccelDataXYZ
 24199 ;; This function uses a non-reentrant model
 24200 ;;
 24201                           
 24202     1776                     _BMA253_GetAccelDataY:	
 24203                           ;psect for function _BMA253_GetAccelDataY
 24204                           
 24205                           
 24206                           ;incstack = 0
 24207 ;; hardware stack exceeded
 24208                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24209                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24210     1776  0140               	movlb	0	; select bank0
 24211     1777  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24212     1778                     l13112:
 24213     1778                     l13114:	
 24214                           ;mcc_generated_files/application/BMA253_accel.c: 88:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 89:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY()) {
 24215                           
 24216                           
 24217                           ;mcc_generated_files/application/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY
      +                          ()) {
 24218     1778  3192  222E  3197   	fcall	_BMA253_NewAccelDataRdyY
 24219     177B  3A00               	xorlw	0
 24220     177C  1903               	skipnz
 24221     177D  2F7F               	goto	u10271
 24222     177E  2F80               	goto	u10270
 24223     177F                     u10271:
 24224     177F  2F78               	goto	l13114
 24225     1780                     u10270:
 24226     1780                     l13116:
 24227                           
 24228                           ;mcc_generated_files/application/BMA253_accel.c: 94:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24229     1780  3004               	movlw	4
 24230     1781  0140               	movlb	0	; select bank0
 24231     1782  00A4               	movwf	i2c_read1ByteRegister@reg
 24232     1783  3019               	movlw	25
 24233     1784  318E  260F  3197   	fcall	_i2c_read1ByteRegister
 24234     1787  0140               	movlb	0	; select bank0
 24235     1788  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24236                           
 24237                           ;mcc_generated_files/application/BMA253_accel.c: 95:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x05));
 24238     1789  3005               	movlw	5
 24239     178A  00A4               	movwf	i2c_read1ByteRegister@reg
 24240     178B  3019               	movlw	25
 24241     178C  318E  260F  3197   	fcall	_i2c_read1ByteRegister
 24242     178F  0140               	movlb	0	; select bank0
 24243     1790  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24244     1791                     l13118:
 24245                           
 24246                           ;mcc_generated_files/application/BMA253_accel.c: 96:     *yAccelData = ((((int16_t) msbD
      +                          ata) << 8) | (lsbData)) >> 4;
 24247     1791  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24248     1792  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24249     1793  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24250     1794  00AA               	movwf	??_BMA253_GetAccelDataY
 24251     1795  3004               	movlw	4
 24252     1796  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24253     1797                     u10285:
 24254     1797  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24255     1798  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24256     1799  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24257     179A  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24258     179B  2F97               	goto	u10285
 24259     179C  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24260     179D  0086               	movwf	6
 24261     179E  0187               	clrf	7
 24262     179F  082A               	movf	??_BMA253_GetAccelDataY,w
 24263     17A0  3FC0               	movwi [0]fsr1
 24264     17A1  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24265     17A2  3FC1               	movwi [1]fsr1
 24266     17A3                     l29:
 24267     17A3  0008               	return
 24268     17A4                     __end_of_BMA253_GetAccelDataY:
 24269                           
 24270                           	psect	text106
 24271     122E                     __ptext106:	
 24272 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24273 ;; Defined at:
 24274 ;;		line 144 in file "mcc_generated_files/application/BMA253_accel.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;		None
 24277 ;; Auto vars:     Size  Location     Type
 24278 ;;  yNewData        1   11[COMMON] _Bool 
 24279 ;; Return value:  Size  Location     Type
 24280 ;;                  1    wreg      _Bool 
 24281 ;; Registers used:
 24282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24283 ;; Tracked objects:
 24284 ;;		On entry : 0/0
 24285 ;;		On exit  : 0/0
 24286 ;;		Unchanged: 0/0
 24287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24292 ;;Total ram usage:        1 bytes
 24293 ;; Hardware stack levels used: 1
 24294 ;; Hardware stack levels required when called: 13
 24295 ;; This function calls:
 24296 ;;		_i2c_read1ByteRegister
 24297 ;; This function is called by:
 24298 ;;		_BMA253_GetAccelDataY
 24299 ;;		_BMA253_GetAccelDataXYZ
 24300 ;; This function uses a non-reentrant model
 24301 ;;
 24302                           
 24303     122E                     _BMA253_NewAccelDataRdyY:	
 24304                           ;psect for function _BMA253_NewAccelDataRdyY
 24305                           
 24306     122E                     l13026:	
 24307                           ;incstack = 0
 24308                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24309                           
 24310                           
 24311                           ;mcc_generated_files/application/BMA253_accel.c: 145:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 147:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24312     122E  3004               	movlw	4
 24313     122F  0140               	movlb	0	; select bank0
 24314     1230  00A4               	movwf	i2c_read1ByteRegister@reg
 24315     1231  3019               	movlw	25
 24316     1232  318E  260F  3192   	fcall	_i2c_read1ByteRegister
 24317     1235  3901               	andlw	1
 24318     1236  1D03               	btfss	3,2
 24319     1237  2A39               	goto	u10151
 24320     1238  2A3B               	goto	u10150
 24321     1239                     u10151:
 24322     1239  3001               	movlw	1
 24323     123A  2A3C               	goto	u10160
 24324     123B                     u10150:
 24325     123B  3000               	movlw	0
 24326     123C                     u10160:
 24327     123C  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24328     123D                     l13028:
 24329                           
 24330                           ;mcc_generated_files/application/BMA253_accel.c: 149:     return yNewData;
 24331     123D  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24332     123E                     l53:
 24333     123E  0008               	return
 24334     123F                     __end_of_BMA253_NewAccelDataRdyY:
 24335                           
 24336                           	psect	text107
 24337     0E0F                     __ptext107:	
 24338 ;; *************** function _i2c_read1ByteRegister *****************
 24339 ;; Defined at:
 24340 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24341 ;; Parameters:    Size  Location     Type
 24342 ;;  address         1    wreg     unsigned char 
 24343 ;;  reg             1    4[BANK0 ] unsigned char 
 24344 ;; Auto vars:     Size  Location     Type
 24345 ;;  address         1    5[BANK0 ] unsigned char 
 24346 ;;  x               2    7[BANK0 ] int 
 24347 ;;  d2              1    9[BANK0 ] unsigned char 
 24348 ;;  e               1    6[BANK0 ] enum E358
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      unsigned char 
 24351 ;; Registers used:
 24352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/0
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24359 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24362 ;;Total ram usage:        6 bytes
 24363 ;; Hardware stack levels used: 1
 24364 ;; Hardware stack levels required when called: 12
 24365 ;; This function calls:
 24366 ;;		_I2C1_Close
 24367 ;;		_I2C1_MasterWrite
 24368 ;;		_I2C1_Open
 24369 ;;		_I2C1_SetAddressNackCallback
 24370 ;;		_I2C1_SetBuffer
 24371 ;;		_I2C1_SetDataCompleteCallback
 24372 ;; This function is called by:
 24373 ;;		_BMA253_GetAccelDataY
 24374 ;;		_BMA253_GetAccelDataZ
 24375 ;;		_BMA253_NewAccelDataRdyY
 24376 ;;		_BMA253_NewAccelDataRdyZ
 24377 ;;		_readRegister
 24378 ;;		_BMA253_GetAccelDataX
 24379 ;;		_BMA253_GetAccelChipId
 24380 ;;		_BMA253_NewAccelDataRdyX
 24381 ;; This function uses a non-reentrant model
 24382 ;;
 24383                           
 24384     0E0F                     _i2c_read1ByteRegister:	
 24385                           ;psect for function _i2c_read1ByteRegister
 24386                           
 24387                           
 24388                           ;incstack = 0
 24389                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24390                           ;i2c_read1ByteRegister@address stored from wreg
 24391     0E0F  0140               	movlb	0	; select bank0
 24392     0E10  00A5               	movwf	i2c_read1ByteRegister@address
 24393     0E11                     l12734:
 24394                           
 24395                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24396     0E11  302A               	movlw	42
 24397     0E12  00A9               	movwf	i2c_read1ByteRegister@d2
 24398                           
 24399                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24400     0E13  3002               	movlw	2
 24401     0E14  00A7               	movwf	i2c_read1ByteRegister@x
 24402     0E15  3000               	movlw	0
 24403     0E16  00A8               	movwf	i2c_read1ByteRegister@x+1
 24404     0E17                     l12740:
 24405     0E17  0140               	movlb	0	; select bank0
 24406     0E18  0825               	movf	i2c_read1ByteRegister@address,w
 24407     0E19  3188  20DB  318E   	fcall	_I2C1_Open
 24408     0E1C  3A00               	xorlw	0
 24409     0E1D  1903               	skipnz
 24410     0E1E  2E20               	goto	u9801
 24411     0E1F  2E21               	goto	u9800
 24412     0E20                     u9801:
 24413     0E20  2E17               	goto	l12740
 24414     0E21                     u9800:
 24415     0E21                     l12742:
 24416                           
 24417                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24418     0E21  3087               	movlw	low _rd1RegCompleteHandler
 24419     0E22  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24420     0E23  3012               	movlw	high _rd1RegCompleteHandler
 24421     0E24  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24422     0E25  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24423     0E26  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24424     0E27  3191  2144  318E   	fcall	_I2C1_SetDataCompleteCallback
 24425     0E2A                     l12744:
 24426                           
 24427                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24428     0E2A  3024               	movlw	low i2c_read1ByteRegister@reg
 24429     0E2B  00F1               	movwf	I2C1_SetBuffer@buffer
 24430     0E2C  3000               	movlw	high i2c_read1ByteRegister@reg
 24431     0E2D  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24432     0E2E  3001               	movlw	1
 24433     0E2F  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24434     0E30  3000               	movlw	0
 24435     0E31  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24436     0E32  3191  21E2  318E   	fcall	_I2C1_SetBuffer
 24437     0E35                     l12746:
 24438                           
 24439                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24440     0E35  3000               	movlw	0
 24441     0E36  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24442     0E37  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24443     0E38  3000               	movlw	0
 24444     0E39  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24445     0E3A  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24446     0E3B  3191  214F  318E   	fcall	_I2C1_SetAddressNackCallback
 24447     0E3E                     l12748:
 24448                           
 24449                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24450     0E3E  3190  204C  318E   	fcall	_I2C1_MasterWrite
 24451     0E41                     l12750:	
 24452                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24453                           
 24454     0E41  3193  23CE  318E   	fcall	_I2C1_Close
 24455     0E44  0140               	movlb	0	; select bank0
 24456     0E45  00A6               	movwf	i2c_read1ByteRegister@e
 24457     0E46  0326               	decf	i2c_read1ByteRegister@e,w
 24458     0E47  1903               	btfsc	3,2
 24459     0E48  2E4A               	goto	u9811
 24460     0E49  2E4B               	goto	u9810
 24461     0E4A                     u9811:
 24462     0E4A  2E41               	goto	l12750
 24463     0E4B                     u9810:
 24464     0E4B                     l12752:
 24465                           
 24466                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24467     0E4B  0826               	movf	i2c_read1ByteRegister@e,w
 24468     0E4C  1D03               	btfss	3,2
 24469     0E4D  2E4F               	goto	u9821
 24470     0E4E  2E50               	goto	u9820
 24471     0E4F                     u9821:
 24472     0E4F  2E51               	goto	l12756
 24473     0E50                     u9820:
 24474     0E50  2E5B               	goto	l12760
 24475     0E51                     l12756:
 24476                           
 24477                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24478     0E51  30FF               	movlw	255
 24479     0E52  07A7               	addwf	i2c_read1ByteRegister@x,f
 24480     0E53  30FF               	movlw	255
 24481     0E54  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24482     0E55                     l12758:
 24483     0E55  0827               	movf	i2c_read1ByteRegister@x,w
 24484     0E56  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24485     0E57  1D03               	btfss	3,2
 24486     0E58  2E5A               	goto	u9831
 24487     0E59  2E5B               	goto	u9830
 24488     0E5A                     u9831:
 24489     0E5A  2E17               	goto	l12740
 24490     0E5B                     u9830:
 24491     0E5B                     l12760:
 24492                           
 24493                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 24494     0E5B  0829               	movf	i2c_read1ByteRegister@d2,w
 24495     0E5C                     l534:
 24496     0E5C  0008               	return
 24497     0E5D                     __end_of_i2c_read1ByteRegister:
 24498                           
 24499                           	psect	text108
 24500     114F                     __ptext108:	
 24501 ;; *************** function _I2C1_SetAddressNackCallback *****************
 24502 ;; Defined at:
 24503 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 24504 ;; Parameters:    Size  Location     Type
 24505 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 24506 ;;		 -> NULL(1), 
 24507 ;;  ptr             2    7[COMMON] PTR void 
 24508 ;;		 -> NULL(0), 
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;		None
 24511 ;; Return value:  Size  Location     Type
 24512 ;;                  1    wreg      void 
 24513 ;; Registers used:
 24514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/0
 24517 ;;		On exit  : 0/0
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24524 ;;Total ram usage:        4 bytes
 24525 ;; Hardware stack levels used: 1
 24526 ;; Hardware stack levels required when called: 5
 24527 ;; This function calls:
 24528 ;;		_I2C1_SetCallback
 24529 ;; This function is called by:
 24530 ;;		_i2c_write1ByteRegister
 24531 ;;		_i2c_read1ByteRegister
 24532 ;;		_i2c_read2ByteRegister
 24533 ;;		_i2c_writeNBytes
 24534 ;;		_i2c_write2ByteRegister
 24535 ;;		_i2c_readDataBlock
 24536 ;;		_I2C1_Read1ByteRegister
 24537 ;;		_I2C1_Read2ByteRegister
 24538 ;;		_I2C1_Write1ByteRegister
 24539 ;;		_I2C1_Write2ByteRegister
 24540 ;;		_I2C1_WriteNBytes
 24541 ;;		_I2C1_ReadDataBlock
 24542 ;; This function uses a non-reentrant model
 24543 ;;
 24544                           
 24545     114F                     _I2C1_SetAddressNackCallback:	
 24546                           ;psect for function _I2C1_SetAddressNackCallback
 24547                           
 24548     114F                     l12700:	
 24549                           ;incstack = 0
 24550                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24551                           
 24552                           
 24553                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 24554     114F  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 24555     1150  00F2               	movwf	I2C1_SetCallback@cb+1
 24556     1151  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 24557     1152  00F1               	movwf	I2C1_SetCallback@cb
 24558     1153  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 24559     1154  00F3               	movwf	I2C1_SetCallback@ptr
 24560     1155  3002               	movlw	2
 24561     1156  3195  258E  3191   	fcall	_I2C1_SetCallback
 24562     1159                     l2440:
 24563     1159  0008               	return
 24564     115A                     __end_of_I2C1_SetAddressNackCallback:
 24565                           
 24566                           	psect	text109
 24567     08DB                     __ptext109:	
 24568 ;; *************** function _I2C1_Open *****************
 24569 ;; Defined at:
 24570 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 24571 ;; Parameters:    Size  Location     Type
 24572 ;;  address         1    wreg     unsigned char 
 24573 ;; Auto vars:     Size  Location     Type
 24574 ;;  address         1    1[COMMON] unsigned char 
 24575 ;;  returnValue     1    2[COMMON] enum E358
 24576 ;; Return value:  Size  Location     Type
 24577 ;;                  1    wreg      enum E358
 24578 ;; Registers used:
 24579 ;;		wreg, status,2, status,0, pclath, cstack
 24580 ;; Tracked objects:
 24581 ;;		On entry : 0/0
 24582 ;;		On exit  : 0/0
 24583 ;;		Unchanged: 0/0
 24584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24589 ;;Total ram usage:        2 bytes
 24590 ;; Hardware stack levels used: 1
 24591 ;; Hardware stack levels required when called: 5
 24592 ;; This function calls:
 24593 ;;		_I2C1_MasterClearIrq
 24594 ;;		_I2C1_MasterOpen
 24595 ;; This function is called by:
 24596 ;;		_i2c_write1ByteRegister
 24597 ;;		_i2c_read1ByteRegister
 24598 ;;		_i2c_read2ByteRegister
 24599 ;;		_i2c_writeNBytes
 24600 ;;		_i2c_write2ByteRegister
 24601 ;;		_i2c_readDataBlock
 24602 ;;		_i2c_readNBytes
 24603 ;;		_I2C1_Read1ByteRegister
 24604 ;;		_I2C1_Read2ByteRegister
 24605 ;;		_I2C1_Write1ByteRegister
 24606 ;;		_I2C1_Write2ByteRegister
 24607 ;;		_I2C1_WriteNBytes
 24608 ;;		_I2C1_ReadNBytes
 24609 ;;		_I2C1_ReadDataBlock
 24610 ;; This function uses a non-reentrant model
 24611 ;;
 24612                           
 24613     08DB                     _I2C1_Open:	
 24614                           ;psect for function _I2C1_Open
 24615                           
 24616                           
 24617                           ;incstack = 0
 24618                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 24619                           ;I2C1_Open@address stored from wreg
 24620     08DB  00F1               	movwf	I2C1_Open@address
 24621     08DC                     l12668:
 24622                           
 24623                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 24624     08DC  01F2               	clrf	I2C1_Open@returnValue
 24625     08DD  0AF2               	incf	I2C1_Open@returnValue,f
 24626                           
 24627                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 24628     08DE  0141               	movlb	1	; select bank1
 24629     08DF  193D               	btfsc	(_I2C1_Status^(0+128)+29),2
 24630     08E0  28E2               	goto	u9781
 24631     08E1  28E3               	goto	u9780
 24632     08E2                     u9781:
 24633     08E2  290F               	goto	l2407
 24634     08E3                     u9780:
 24635     08E3                     l12670:
 24636                           
 24637                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 24638     08E3  0871               	movf	I2C1_Open@address,w
 24639     08E4  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 24640     08E5                     l12672:
 24641                           
 24642                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 24643     08E5  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 24644     08E6                     l12674:
 24645                           
 24646                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 24647     08E6  153D               	bsf	(_I2C1_Status^(0+128)+29),2
 24648     08E7                     l12676:
 24649                           
 24650                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 24651     08E7  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 24652                           
 24653                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 24654     08E8  300E               	movlw	14
 24655     08E9  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 24656                           
 24657                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 24658     08EA  30F4               	movlw	244
 24659     08EB  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 24660     08EC  3001               	movlw	1
 24661     08ED  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 24662     08EE                     l12678:
 24663                           
 24664                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 24665     08EE  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 24666                           
 24667                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 24668     08EF  30D8               	movlw	low _I2C1_CallbackReturnStop
 24669     08F0  00A0               	movwf	_I2C1_Status^(0+128)
 24670     08F1  301F               	movlw	high _I2C1_CallbackReturnStop
 24671     08F2  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 24672     08F3                     l12680:
 24673                           
 24674                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 24675     08F3  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 24676     08F4                     l12682:
 24677                           
 24678                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 24679     08F4  30D8               	movlw	low _I2C1_CallbackReturnStop
 24680     08F5  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 24681     08F6  301F               	movlw	high _I2C1_CallbackReturnStop
 24682     08F7  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 24683                           
 24684                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 24685     08F8  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 24686     08F9                     l12684:
 24687                           
 24688                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24689     08F9  30D8               	movlw	low _I2C1_CallbackReturnStop
 24690     08FA  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 24691     08FB  301F               	movlw	high _I2C1_CallbackReturnStop
 24692     08FC  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 24693     08FD                     l12686:
 24694                           
 24695                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 24696     08FD  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 24697                           
 24698                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24699     08FE  30D8               	movlw	low _I2C1_CallbackReturnStop
 24700     08FF  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 24701     0900  301F               	movlw	high _I2C1_CallbackReturnStop
 24702     0901  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 24703     0902                     l12688:
 24704                           
 24705                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 24706     0902  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 24707     0903                     l12690:
 24708                           
 24709                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 24710     0903  3000               	movlw	low _I2C1_CallbackReturnReset
 24711     0904  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 24712     0905  3010               	movlw	high _I2C1_CallbackReturnReset
 24713     0906  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 24714                           
 24715                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 24716     0907  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 24717     0908                     l12692:
 24718                           
 24719                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 24720     0908  319F  27DA  3188   	fcall	_I2C1_MasterClearIrq
 24721     090B                     l12694:
 24722                           
 24723                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 24724     090B  3191  21B8  3188   	fcall	_I2C1_MasterOpen
 24725     090E                     l12696:
 24726                           
 24727                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 24728     090E  01F2               	clrf	I2C1_Open@returnValue
 24729     090F                     l2407:	
 24730                           ;mcc_generated_files/i2c1_master.c: 205:     }
 24731                           
 24732                           
 24733                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 24734     090F  0872               	movf	I2C1_Open@returnValue,w
 24735     0910                     l2408:
 24736     0910  0008               	return
 24737     0911                     __end_of_I2C1_Open:
 24738                           
 24739                           	psect	text110
 24740     11B8                     __ptext110:	
 24741 ;; *************** function _I2C1_MasterOpen *****************
 24742 ;; Defined at:
 24743 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;		None
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;		None
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      _Bool 
 24750 ;; Registers used:
 24751 ;;		wreg, status,2
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24761 ;;Total ram usage:        0 bytes
 24762 ;; Hardware stack levels used: 1
 24763 ;; Hardware stack levels required when called: 4
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_I2C1_Open
 24768 ;; This function uses a non-reentrant model
 24769 ;;
 24770                           
 24771     11B8                     _I2C1_MasterOpen:	
 24772                           ;psect for function _I2C1_MasterOpen
 24773                           
 24774     11B8                     l12632:	
 24775                           ;incstack = 0
 24776                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 24777                           
 24778                           
 24779                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 24780     11B8  0143               	movlb	3	; select bank3
 24781     11B9  1A90               	btfsc	16,5	;volatile
 24782     11BA  29BC               	goto	u9751
 24783     11BB  29BD               	goto	u9750
 24784     11BC                     u9751:
 24785     11BC  29C4               	goto	l2573
 24786     11BD                     u9750:
 24787     11BD                     l12634:
 24788                           
 24789                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 24790     11BD  018F               	clrf	15	;volatile
 24791     11BE                     l12636:
 24792                           
 24793                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 24794     11BE  3008               	movlw	8
 24795     11BF  0090               	movwf	16	;volatile
 24796     11C0                     l12638:
 24797                           
 24798                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 24799     11C0  0191               	clrf	17	;volatile
 24800                           
 24801                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 24802     11C1  304F               	movlw	79
 24803     11C2  008D               	movwf	13	;volatile
 24804     11C3                     l12640:
 24805                           
 24806                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 24807     11C3  1690               	bsf	16,5	;volatile
 24808     11C4                     l2573:
 24809     11C4  0008               	return
 24810     11C5                     __end_of_I2C1_MasterOpen:
 24811                           
 24812                           	psect	text111
 24813     104C                     __ptext111:	
 24814 ;; *************** function _I2C1_MasterWrite *****************
 24815 ;; Defined at:
 24816 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 24817 ;; Parameters:    Size  Location     Type
 24818 ;;		None
 24819 ;; Auto vars:     Size  Location     Type
 24820 ;;		None
 24821 ;; Return value:  Size  Location     Type
 24822 ;;                  1    wreg      enum E358
 24823 ;; Registers used:
 24824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24825 ;; Tracked objects:
 24826 ;;		On entry : 0/0
 24827 ;;		On exit  : 0/0
 24828 ;;		Unchanged: 0/0
 24829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24834 ;;Total ram usage:        0 bytes
 24835 ;; Hardware stack levels used: 1
 24836 ;; Hardware stack levels required when called: 11
 24837 ;; This function calls:
 24838 ;;		_I2C1_MasterOperation
 24839 ;; This function is called by:
 24840 ;;		_i2c_write1ByteRegister
 24841 ;;		_i2c_read1ByteRegister
 24842 ;;		_i2c_read2ByteRegister
 24843 ;;		_i2c_writeNBytes
 24844 ;;		_i2c_write2ByteRegister
 24845 ;;		_i2c_readDataBlock
 24846 ;;		_I2C1_Read1ByteRegister
 24847 ;;		_I2C1_Read2ByteRegister
 24848 ;;		_I2C1_Write1ByteRegister
 24849 ;;		_I2C1_Write2ByteRegister
 24850 ;;		_I2C1_WriteNBytes
 24851 ;;		_I2C1_ReadDataBlock
 24852 ;; This function uses a non-reentrant model
 24853 ;;
 24854                           
 24855     104C                     _I2C1_MasterWrite:	
 24856                           ;psect for function _I2C1_MasterWrite
 24857                           
 24858     104C                     l12702:	
 24859                           ;incstack = 0
 24860                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24861                           
 24862                           
 24863                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 24864     104C  3000               	movlw	0
 24865     104D  3195  2505  3190   	fcall	_I2C1_MasterOperation
 24866     1050                     l2424:
 24867     1050  0008               	return
 24868     1051                     __end_of_I2C1_MasterWrite:
 24869                           
 24870                           	psect	text112
 24871     1505                     __ptext112:	
 24872 ;; *************** function _I2C1_MasterOperation *****************
 24873 ;; Defined at:
 24874 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 24875 ;; Parameters:    Size  Location     Type
 24876 ;;  read            1    wreg     _Bool 
 24877 ;; Auto vars:     Size  Location     Type
 24878 ;;  read            1    2[BANK0 ] _Bool 
 24879 ;;  returnValue     1    3[BANK0 ] enum E358
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      enum E358
 24882 ;; Registers used:
 24883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24892 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24893 ;;Total ram usage:        2 bytes
 24894 ;; Hardware stack levels used: 1
 24895 ;; Hardware stack levels required when called: 10
 24896 ;; This function calls:
 24897 ;;		_I2C1_MasterStart
 24898 ;;		_I2C1_Poller
 24899 ;; This function is called by:
 24900 ;;		_I2C1_MasterWrite
 24901 ;;		_I2C1_MasterRead
 24902 ;; This function uses a non-reentrant model
 24903 ;;
 24904                           
 24905     1505                     _I2C1_MasterOperation:	
 24906                           ;psect for function _I2C1_MasterOperation
 24907                           
 24908                           
 24909                           ;incstack = 0
 24910                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24911                           ;I2C1_MasterOperation@read stored from wreg
 24912     1505  0140               	movlb	0	; select bank0
 24913     1506  00A2               	movwf	I2C1_MasterOperation@read
 24914     1507                     l12648:
 24915                           
 24916                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 24917     1507  01A3               	clrf	I2C1_MasterOperation@returnValue
 24918     1508  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 24919                           
 24920                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 24921     1509  0141               	movlb	1	; select bank1
 24922     150A  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 24923     150B  2D0D               	goto	u9761
 24924     150C  2D0E               	goto	u9760
 24925     150D                     u9761:
 24926     150D  2D23               	goto	l12664
 24927     150E                     u9760:
 24928     150E                     l12650:
 24929                           
 24930                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 24931     150E  14BD               	bsf	(_I2C1_Status^(0+128)+29),1
 24932     150F                     l12652:
 24933                           
 24934                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 24935     150F  0140               	movlb	0	; select bank0
 24936     1510  01A3               	clrf	I2C1_MasterOperation@returnValue
 24937     1511                     l12654:
 24938                           
 24939                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 24940     1511  0822               	movf	I2C1_MasterOperation@read,w
 24941     1512  1903               	btfsc	3,2
 24942     1513  2D15               	goto	u9771
 24943     1514  2D16               	goto	u9770
 24944     1515                     u9771:
 24945     1515  2D1A               	goto	l12658
 24946     1516                     u9770:
 24947     1516                     l12656:
 24948                           
 24949                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 24950     1516  0141               	movlb	1	; select bank1
 24951     1517  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 24952     1518  0ABB               	incf	(_I2C1_Status^(0+128)+27),f
 24953                           
 24954                           ;mcc_generated_files/i2c1_master.c: 235:         }
 24955     1519  2D1D               	goto	l12660
 24956     151A                     l12658:
 24957                           
 24958                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 24959     151A  3002               	movlw	2
 24960     151B  0141               	movlb	1	; select bank1
 24961     151C  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 24962     151D                     l12660:
 24963                           
 24964                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 24965     151D  319F  27E3  3195   	fcall	_I2C1_MasterStart
 24966     1520                     l12662:
 24967                           
 24968                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 24969     1520  3191  21AB  3195   	fcall	_I2C1_Poller
 24970     1523                     l12664:
 24971                           
 24972                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 24973     1523  0140               	movlb	0	; select bank0
 24974     1524  0823               	movf	I2C1_MasterOperation@returnValue,w
 24975     1525                     l2418:
 24976     1525  0008               	return
 24977     1526                     __end_of_I2C1_MasterOperation:
 24978                           
 24979                           	psect	text113
 24980     11AB                     __ptext113:	
 24981 ;; *************** function _I2C1_Poller *****************
 24982 ;; Defined at:
 24983 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;		None
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;		None
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1    wreg      void 
 24990 ;; Registers used:
 24991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25001 ;;Total ram usage:        0 bytes
 25002 ;; Hardware stack levels used: 1
 25003 ;; Hardware stack levels required when called: 9
 25004 ;; This function calls:
 25005 ;;		_I2C1_MasterFsm
 25006 ;;		_I2C1_MasterWaitForEvent
 25007 ;; This function is called by:
 25008 ;;		_I2C1_MasterOperation
 25009 ;; This function uses a non-reentrant model
 25010 ;;
 25011                           
 25012     11AB                     _I2C1_Poller:	
 25013                           ;psect for function _I2C1_Poller
 25014                           
 25015     11AB                     l12536:	
 25016                           ;incstack = 0
 25017                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25018                           
 25019                           
 25020                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25021     11AB  29B2               	goto	l12542
 25022     11AC                     l12538:
 25023                           
 25024                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25025     11AC  3190  2061  3191   	fcall	_I2C1_MasterWaitForEvent
 25026     11AF                     l12540:
 25027                           
 25028                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25029     11AF  3196  2674  3191   	fcall	_I2C1_MasterFsm
 25030     11B2                     l12542:
 25031                           
 25032                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25033     11B2  0141               	movlb	1	; select bank1
 25034     11B3  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25035     11B4  29B6               	goto	u9641
 25036     11B5  29B7               	goto	u9640
 25037     11B6                     u9641:
 25038     11B6  29AC               	goto	l12538
 25039     11B7                     u9640:
 25040     11B7                     l2457:
 25041     11B7  0008               	return
 25042     11B8                     __end_of_I2C1_Poller:
 25043                           
 25044                           	psect	text114
 25045     1061                     __ptext114:	
 25046 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25047 ;; Defined at:
 25048 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25049 ;; Parameters:    Size  Location     Type
 25050 ;;		None
 25051 ;; Auto vars:     Size  Location     Type
 25052 ;;		None
 25053 ;; Return value:  Size  Location     Type
 25054 ;;                  1    wreg      void 
 25055 ;; Registers used:
 25056 ;;		None
 25057 ;; Tracked objects:
 25058 ;;		On entry : 0/0
 25059 ;;		On exit  : 0/0
 25060 ;;		Unchanged: 0/0
 25061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25066 ;;Total ram usage:        0 bytes
 25067 ;; Hardware stack levels used: 1
 25068 ;; Hardware stack levels required when called: 4
 25069 ;; This function calls:
 25070 ;;		Nothing
 25071 ;; This function is called by:
 25072 ;;		_I2C1_Poller
 25073 ;; This function uses a non-reentrant model
 25074 ;;
 25075                           
 25076     1061                     _I2C1_MasterWaitForEvent:	
 25077                           ;psect for function _I2C1_MasterWaitForEvent
 25078                           
 25079     1061                     l2630:	
 25080                           ;incstack = 0
 25081                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25082                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25083                           
 25084                           
 25085                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25086     1061  014E               	movlb	14	; select bank14
 25087     1062  1C0F               	btfss	15,0	;volatile
 25088     1063  2865               	goto	u9611
 25089     1064  2866               	goto	u9610
 25090     1065                     u9611:
 25091     1065  2861               	goto	l2630
 25092     1066                     u9610:
 25093     1066                     l2634:
 25094     1066  0008               	return
 25095     1067                     __end_of_I2C1_MasterWaitForEvent:
 25096                           
 25097                           	psect	text115
 25098     1674                     __ptext115:	
 25099 ;; *************** function _I2C1_MasterFsm *****************
 25100 ;; Defined at:
 25101 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25102 ;; Parameters:    Size  Location     Type
 25103 ;;		None
 25104 ;; Auto vars:     Size  Location     Type
 25105 ;;		None
 25106 ;; Return value:  Size  Location     Type
 25107 ;;                  1    wreg      void 
 25108 ;; Registers used:
 25109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25110 ;; Tracked objects:
 25111 ;;		On entry : 0/0
 25112 ;;		On exit  : 0/0
 25113 ;;		Unchanged: 0/0
 25114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25119 ;;Total ram usage:        2 bytes
 25120 ;; Hardware stack levels used: 1
 25121 ;; Hardware stack levels required when called: 8
 25122 ;; This function calls:
 25123 ;;		_I2C1_DO_ADDRESS_NACK
 25124 ;;		_I2C1_DO_IDLE
 25125 ;;		_I2C1_DO_RCEN
 25126 ;;		_I2C1_DO_RESET
 25127 ;;		_I2C1_DO_RX
 25128 ;;		_I2C1_DO_RX_ACK
 25129 ;;		_I2C1_DO_RX_NACK_RESTART
 25130 ;;		_I2C1_DO_RX_NACK_STOP
 25131 ;;		_I2C1_DO_SEND_ADR_READ
 25132 ;;		_I2C1_DO_SEND_ADR_WRITE
 25133 ;;		_I2C1_DO_SEND_RESTART
 25134 ;;		_I2C1_DO_SEND_RESTART_READ
 25135 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25136 ;;		_I2C1_DO_SEND_STOP
 25137 ;;		_I2C1_DO_TX
 25138 ;;		_I2C1_DO_TX_EMPTY
 25139 ;;		_I2C1_MasterClearIrq
 25140 ;;		_I2C1_MasterIsNack
 25141 ;; This function is called by:
 25142 ;;		_I2C1_Poller
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146     1674                     _I2C1_MasterFsm:	
 25147                           ;psect for function _I2C1_MasterFsm
 25148                           
 25149     1674                     l12524:	
 25150                           ;incstack = 0
 25151                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25152                           
 25153                           
 25154                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25155     1674  319F  27DA  3196   	fcall	_I2C1_MasterClearIrq
 25156     1677                     l12526:
 25157                           
 25158                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25159     1677  0141               	movlb	1	; select bank1
 25160     1678  1C3D               	btfss	(_I2C1_Status^(0+128)+29),0
 25161     1679  2E7B               	goto	u9621
 25162     167A  2E7C               	goto	u9620
 25163     167B                     u9621:
 25164     167B  2E87               	goto	l12532
 25165     167C                     u9620:
 25166     167C                     l12528:
 25167     167C  3190  205B  3196   	fcall	_I2C1_MasterIsNack
 25168     167F  3A00               	xorlw	0
 25169     1680  1903               	skipnz
 25170     1681  2E83               	goto	u9631
 25171     1682  2E84               	goto	u9630
 25172     1683                     u9631:
 25173     1683  2E87               	goto	l12532
 25174     1684                     u9630:
 25175     1684                     l12530:
 25176                           
 25177                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25178     1684  300F               	movlw	15
 25179     1685  0141               	movlb	1	; select bank1
 25180     1686  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25181     1687                     l12532:
 25182                           
 25183                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25184     1687  0141               	movlb	1	; select bank1
 25185     1688  083B               	movf	(_I2C1_Status^(0+128)+27),w
 25186     1689  0140               	movlb	0	; select bank0
 25187     168A  00A0               	movwf	??_I2C1_MasterFsm
 25188     168B  01A1               	clrf	??_I2C1_MasterFsm+1
 25189     168C  35A0               	lslf	??_I2C1_MasterFsm,f
 25190     168D  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25191     168E  3028               	movlw	low _i2c1_fsmStateTable
 25192     168F  0720               	addwf	??_I2C1_MasterFsm,w
 25193     1690  0084               	movwf	4
 25194     1691  3018               	movlw	high _i2c1_fsmStateTable
 25195     1692  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25196     1693  3880               	iorlw	128
 25197     1694  0085               	movwf	5
 25198     1695  3F01               	moviw [1]fsr0
 25199     1696  008A               	movwf	10
 25200     1697  3F00               	moviw [0]fsr0
 25201     1698  000A               	callw
 25202     1699  3196               	pagesel	$
 25203     169A  0141               	movlb	1	; select bank1
 25204     169B  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25205     169C                     l2461:
 25206     169C  0008               	return
 25207     169D                     __end_of_I2C1_MasterFsm:
 25208                           
 25209                           	psect	text116
 25210     1624                     __ptext116:	
 25211 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25212 ;; Defined at:
 25213 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25214 ;; Parameters:    Size  Location     Type
 25215 ;;		None
 25216 ;; Auto vars:     Size  Location     Type
 25217 ;;		None
 25218 ;; Return value:  Size  Location     Type
 25219 ;;                  1    wreg      enum E12565
 25220 ;; Registers used:
 25221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25222 ;; Tracked objects:
 25223 ;;		On entry : 0/0
 25224 ;;		On exit  : 0/0
 25225 ;;		Unchanged: 0/0
 25226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25231 ;;Total ram usage:        2 bytes
 25232 ;; Hardware stack levels used: 1
 25233 ;; Hardware stack levels required when called: 7
 25234 ;; This function calls:
 25235 ;;		NULL
 25236 ;;		_I2C1_CallbackReturnReset
 25237 ;;		_I2C1_CallbackReturnStop
 25238 ;;		_I2C1_DO_SEND_RESTART
 25239 ;;		_I2C1_DO_SEND_STOP
 25240 ;;		_rd1RegCompleteHandler
 25241 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 25242 ;;		_rd2RegCompleteHandler
 25243 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 25244 ;;		_rdBlkRegCompleteHandler
 25245 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 25246 ;;		_wr1RegCompleteHandler
 25247 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 25248 ;;		_wr2RegCompleteHandler
 25249 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 25250 ;; This function is called by:
 25251 ;;		_I2C1_MasterFsm
 25252 ;; This function uses a non-reentrant model
 25253 ;;
 25254                           
 25255     1624                     _I2C1_DO_ADDRESS_NACK:	
 25256                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25257                           
 25258     1624                     l12500:	
 25259                           ;incstack = 0
 25260                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25261                           
 25262                           
 25263                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25264     1624  0141               	movlb	1	; select bank1
 25265     1625  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25266     1626                     l12502:
 25267                           
 25268                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25269     1626  3002               	movlw	2
 25270     1627  00BC               	movwf	(_I2C1_Status^(0+128)+28)
 25271                           
 25272                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25273     1628  2E31               	goto	l12514
 25274     1629                     l12504:
 25275                           
 25276                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25277     1629  3190  202E  3196   	fcall	_I2C1_DO_SEND_RESTART
 25278     162C  2E4B               	goto	l2552
 25279     162D                     l12508:
 25280                           
 25281                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25282     162D  3190  2033  3196   	fcall	_I2C1_DO_SEND_STOP
 25283     1630  2E4B               	goto	l2552
 25284     1631                     l12514:
 25285     1631  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25286     1632  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25287     1633  3004               	movlw	4
 25288     1634  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25289     1635  0086               	movwf	6
 25290     1636  0187               	clrf	7
 25291     1637  3F41               	moviw [1]fsr1
 25292     1638  008A               	movwf	10
 25293     1639  3F40               	moviw [0]fsr1
 25294     163A  000A               	callw
 25295     163B  3196               	pagesel	$
 25296     163C  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25297     163D  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25298                           
 25299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25300                           ; Switch size 1, requested type "simple"
 25301                           ; Number of cases is 1, Range of values is 0 to 0
 25302                           ; switch strategies available:
 25303                           ; Name         Instructions Cycles
 25304                           ; simple_byte            4     3 (average)
 25305                           ; direct_byte            8     6 (fixed)
 25306                           ; jumptable            260     6 (fixed)
 25307                           ;	Chosen strategy is simple_byte
 25308     163E  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25309     163F  3A00               	xorlw	0	; case 0
 25310     1640  1903               	skipnz
 25311     1641  2E43               	goto	l16038
 25312     1642  2E2D               	goto	l12508
 25313     1643                     l16038:
 25314                           
 25315                           ; Switch size 1, requested type "simple"
 25316                           ; Number of cases is 2, Range of values is 2 to 3
 25317                           ; switch strategies available:
 25318                           ; Name         Instructions Cycles
 25319                           ; simple_byte            7     4 (average)
 25320                           ; direct_byte           13     9 (fixed)
 25321                           ; jumptable            263     9 (fixed)
 25322                           ;	Chosen strategy is simple_byte
 25323     1643  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25324     1644  3A02               	xorlw	2	; case 2
 25325     1645  1903               	skipnz
 25326     1646  2E29               	goto	l12504
 25327     1647  3A01               	xorlw	1	; case 3
 25328     1648  1903               	skipnz
 25329     1649  2E29               	goto	l12504
 25330     164A  2E2D               	goto	l12508
 25331     164B                     l2552:
 25332     164B  0008               	return
 25333     164C                     __end_of_I2C1_DO_ADDRESS_NACK:
 25334                           
 25335                           	psect	text117
 25336     1047                     __ptext117:	
 25337 ;; *************** function _I2C1_DO_RESET *****************
 25338 ;; Defined at:
 25339 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25340 ;; Parameters:    Size  Location     Type
 25341 ;;		None
 25342 ;; Auto vars:     Size  Location     Type
 25343 ;;		None
 25344 ;; Return value:  Size  Location     Type
 25345 ;;                  1    wreg      enum E12565
 25346 ;; Registers used:
 25347 ;;		wreg, status,2
 25348 ;; Tracked objects:
 25349 ;;		On entry : 0/0
 25350 ;;		On exit  : 0/0
 25351 ;;		Unchanged: 0/0
 25352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25357 ;;Total ram usage:        0 bytes
 25358 ;; Hardware stack levels used: 1
 25359 ;; Hardware stack levels required when called: 4
 25360 ;; This function calls:
 25361 ;;		Nothing
 25362 ;; This function is called by:
 25363 ;;		_I2C1_MasterFsm
 25364 ;; This function uses a non-reentrant model
 25365 ;;
 25366                           
 25367     1047                     _I2C1_DO_RESET:	
 25368                           ;psect for function _I2C1_DO_RESET
 25369                           
 25370     1047                     l12492:	
 25371                           ;incstack = 0
 25372                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25373                           
 25374                           
 25375                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25376     1047  0141               	movlb	1	; select bank1
 25377     1048  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25378     1049                     l12494:
 25379                           
 25380                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25381     1049  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 25382     104A                     l12496:
 25383                           
 25384                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25385     104A  300E               	movlw	14
 25386     104B                     l2546:
 25387     104B  0008               	return
 25388     104C                     __end_of_I2C1_DO_RESET:
 25389                           
 25390                           	psect	text118
 25391     1042                     __ptext118:	
 25392 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25393 ;; Defined at:
 25394 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25395 ;; Parameters:    Size  Location     Type
 25396 ;;		None
 25397 ;; Auto vars:     Size  Location     Type
 25398 ;;		None
 25399 ;; Return value:  Size  Location     Type
 25400 ;;                  1    wreg      enum E12565
 25401 ;; Registers used:
 25402 ;;		wreg, status,2, status,0, pclath, cstack
 25403 ;; Tracked objects:
 25404 ;;		On entry : 0/0
 25405 ;;		On exit  : 0/0
 25406 ;;		Unchanged: 0/0
 25407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25412 ;;Total ram usage:        0 bytes
 25413 ;; Hardware stack levels used: 1
 25414 ;; Hardware stack levels required when called: 5
 25415 ;; This function calls:
 25416 ;;		_I2C1_MasterSendNack
 25417 ;; This function is called by:
 25418 ;;		_I2C1_DO_RX
 25419 ;;		_I2C1_MasterFsm
 25420 ;; This function uses a non-reentrant model
 25421 ;;
 25422                           
 25423     1042                     _I2C1_DO_RX_NACK_RESTART:	
 25424                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25425                           
 25426     1042                     l12330:	
 25427                           ;incstack = 0
 25428                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25429                           
 25430                           
 25431                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25432     1042  3190  200A  3190   	fcall	_I2C1_MasterSendNack
 25433     1045                     l12332:
 25434                           
 25435                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25436     1045  3009               	movlw	9
 25437     1046                     l2543:
 25438     1046  0008               	return
 25439     1047                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25440                           
 25441                           	psect	text119
 25442     103D                     __ptext119:	
 25443 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25444 ;; Defined at:
 25445 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;		None
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  1    wreg      enum E12565
 25452 ;; Registers used:
 25453 ;;		wreg, status,2, status,0, pclath, cstack
 25454 ;; Tracked objects:
 25455 ;;		On entry : 0/0
 25456 ;;		On exit  : 0/0
 25457 ;;		Unchanged: 0/0
 25458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25463 ;;Total ram usage:        0 bytes
 25464 ;; Hardware stack levels used: 1
 25465 ;; Hardware stack levels required when called: 5
 25466 ;; This function calls:
 25467 ;;		_I2C1_MasterSendNack
 25468 ;; This function is called by:
 25469 ;;		_I2C1_DO_RX
 25470 ;;		_I2C1_MasterFsm
 25471 ;; This function uses a non-reentrant model
 25472 ;;
 25473                           
 25474     103D                     _I2C1_DO_RX_NACK_STOP:	
 25475                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25476                           
 25477     103D                     l12336:	
 25478                           ;incstack = 0
 25479                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25480                           
 25481                           
 25482                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25483     103D  3190  200A  3190   	fcall	_I2C1_MasterSendNack
 25484     1040                     l12338:
 25485                           
 25486                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25487     1040  300A               	movlw	10
 25488     1041                     l2540:
 25489     1041  0008               	return
 25490     1042                     __end_of_I2C1_DO_RX_NACK_STOP:
 25491                           
 25492                           	psect	text120
 25493     1038                     __ptext120:	
 25494 ;; *************** function _I2C1_DO_RX_ACK *****************
 25495 ;; Defined at:
 25496 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 25497 ;; Parameters:    Size  Location     Type
 25498 ;;		None
 25499 ;; Auto vars:     Size  Location     Type
 25500 ;;		None
 25501 ;; Return value:  Size  Location     Type
 25502 ;;                  1    wreg      enum E12565
 25503 ;; Registers used:
 25504 ;;		wreg, status,2, status,0, pclath, cstack
 25505 ;; Tracked objects:
 25506 ;;		On entry : 0/0
 25507 ;;		On exit  : 0/0
 25508 ;;		Unchanged: 0/0
 25509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25514 ;;Total ram usage:        0 bytes
 25515 ;; Hardware stack levels used: 1
 25516 ;; Hardware stack levels required when called: 5
 25517 ;; This function calls:
 25518 ;;		_I2C1_MasterSendAck
 25519 ;; This function is called by:
 25520 ;;		_I2C1_MasterFsm
 25521 ;; This function uses a non-reentrant model
 25522 ;;
 25523                           
 25524     1038                     _I2C1_DO_RX_ACK:	
 25525                           ;psect for function _I2C1_DO_RX_ACK
 25526                           
 25527     1038                     l12486:	
 25528                           ;incstack = 0
 25529                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 25530                           
 25531                           
 25532                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 25533     1038  3190  200E  3190   	fcall	_I2C1_MasterSendAck
 25534     103B                     l12488:
 25535                           
 25536                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 25537     103B  3005               	movlw	5
 25538     103C                     l2537:
 25539     103C  0008               	return
 25540     103D                     __end_of_I2C1_DO_RX_ACK:
 25541                           
 25542                           	psect	text121
 25543     1033                     __ptext121:	
 25544 ;; *************** function _I2C1_DO_SEND_STOP *****************
 25545 ;; Defined at:
 25546 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 25547 ;; Parameters:    Size  Location     Type
 25548 ;;		None
 25549 ;; Auto vars:     Size  Location     Type
 25550 ;;		None
 25551 ;; Return value:  Size  Location     Type
 25552 ;;                  1    wreg      enum E12565
 25553 ;; Registers used:
 25554 ;;		wreg, status,2, status,0, pclath, cstack
 25555 ;; Tracked objects:
 25556 ;;		On entry : 0/0
 25557 ;;		On exit  : 0/0
 25558 ;;		Unchanged: 0/0
 25559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25564 ;;Total ram usage:        0 bytes
 25565 ;; Hardware stack levels used: 1
 25566 ;; Hardware stack levels required when called: 5
 25567 ;; This function calls:
 25568 ;;		_I2C1_MasterStop
 25569 ;; This function is called by:
 25570 ;;		_I2C1_DO_TX
 25571 ;;		_I2C1_DO_TX_EMPTY
 25572 ;;		_I2C1_DO_ADDRESS_NACK
 25573 ;;		_I2C1_MasterFsm
 25574 ;; This function uses a non-reentrant model
 25575 ;;
 25576                           
 25577     1033                     _I2C1_DO_SEND_STOP:	
 25578                           ;psect for function _I2C1_DO_SEND_STOP
 25579                           
 25580     1033                     l12318:	
 25581                           ;incstack = 0
 25582                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25583                           
 25584                           
 25585                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 25586     1033  319F  27E9  3190   	fcall	_I2C1_MasterStop
 25587     1036                     l12320:
 25588                           
 25589                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 25590     1036  3000               	movlw	0
 25591     1037                     l2534:
 25592     1037  0008               	return
 25593     1038                     __end_of_I2C1_DO_SEND_STOP:
 25594                           
 25595                           	psect	text122
 25596     102E                     __ptext122:	
 25597 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 25598 ;; Defined at:
 25599 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 25600 ;; Parameters:    Size  Location     Type
 25601 ;;		None
 25602 ;; Auto vars:     Size  Location     Type
 25603 ;;		None
 25604 ;; Return value:  Size  Location     Type
 25605 ;;                  1    wreg      enum E12565
 25606 ;; Registers used:
 25607 ;;		wreg, status,2, status,0, pclath, cstack
 25608 ;; Tracked objects:
 25609 ;;		On entry : 0/0
 25610 ;;		On exit  : 0/0
 25611 ;;		Unchanged: 0/0
 25612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25617 ;;Total ram usage:        0 bytes
 25618 ;; Hardware stack levels used: 1
 25619 ;; Hardware stack levels required when called: 5
 25620 ;; This function calls:
 25621 ;;		_I2C1_MasterEnableRestart
 25622 ;; This function is called by:
 25623 ;;		_I2C1_DO_TX_EMPTY
 25624 ;;		_I2C1_DO_ADDRESS_NACK
 25625 ;;		_I2C1_MasterFsm
 25626 ;; This function uses a non-reentrant model
 25627 ;;
 25628                           
 25629     102E                     _I2C1_DO_SEND_RESTART:	
 25630                           ;psect for function _I2C1_DO_SEND_RESTART
 25631                           
 25632     102E                     l12344:	
 25633                           ;incstack = 0
 25634                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25635                           
 25636                           
 25637                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 25638     102E  319F  27E6  3190   	fcall	_I2C1_MasterEnableRestart
 25639     1031                     l12346:
 25640                           
 25641                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 25642     1031  3001               	movlw	1
 25643     1032                     l2531:
 25644     1032  0008               	return
 25645     1033                     __end_of_I2C1_DO_SEND_RESTART:
 25646                           
 25647                           	psect	text123
 25648     1029                     __ptext123:	
 25649 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 25650 ;; Defined at:
 25651 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 25652 ;; Parameters:    Size  Location     Type
 25653 ;;		None
 25654 ;; Auto vars:     Size  Location     Type
 25655 ;;		None
 25656 ;; Return value:  Size  Location     Type
 25657 ;;                  1    wreg      enum E12565
 25658 ;; Registers used:
 25659 ;;		wreg, status,2, status,0, pclath, cstack
 25660 ;; Tracked objects:
 25661 ;;		On entry : 0/0
 25662 ;;		On exit  : 0/0
 25663 ;;		Unchanged: 0/0
 25664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25669 ;;Total ram usage:        0 bytes
 25670 ;; Hardware stack levels used: 1
 25671 ;; Hardware stack levels required when called: 5
 25672 ;; This function calls:
 25673 ;;		_I2C1_MasterEnableRestart
 25674 ;; This function is called by:
 25675 ;;		_I2C1_DO_TX
 25676 ;;		_I2C1_MasterFsm
 25677 ;; This function uses a non-reentrant model
 25678 ;;
 25679                           
 25680     1029                     _I2C1_DO_SEND_RESTART_WRITE:	
 25681                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 25682                           
 25683     1029                     l12312:	
 25684                           ;incstack = 0
 25685                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 25686                           
 25687                           
 25688                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 25689     1029  319F  27E6  3190   	fcall	_I2C1_MasterEnableRestart
 25690     102C                     l12314:
 25691                           
 25692                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 25693     102C  3002               	movlw	2
 25694     102D                     l2528:
 25695     102D  0008               	return
 25696     102E                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 25697                           
 25698                           	psect	text124
 25699     1024                     __ptext124:	
 25700 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 25701 ;; Defined at:
 25702 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 25703 ;; Parameters:    Size  Location     Type
 25704 ;;		None
 25705 ;; Auto vars:     Size  Location     Type
 25706 ;;		None
 25707 ;; Return value:  Size  Location     Type
 25708 ;;                  1    wreg      enum E12565
 25709 ;; Registers used:
 25710 ;;		wreg, status,2, status,0, pclath, cstack
 25711 ;; Tracked objects:
 25712 ;;		On entry : 0/0
 25713 ;;		On exit  : 0/0
 25714 ;;		Unchanged: 0/0
 25715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25720 ;;Total ram usage:        0 bytes
 25721 ;; Hardware stack levels used: 1
 25722 ;; Hardware stack levels required when called: 5
 25723 ;; This function calls:
 25724 ;;		_I2C1_MasterEnableRestart
 25725 ;; This function is called by:
 25726 ;;		_I2C1_DO_TX
 25727 ;;		_I2C1_MasterFsm
 25728 ;; This function uses a non-reentrant model
 25729 ;;
 25730                           
 25731     1024                     _I2C1_DO_SEND_RESTART_READ:	
 25732                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 25733                           
 25734     1024                     l12306:	
 25735                           ;incstack = 0
 25736                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 25737                           
 25738                           
 25739                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 25740     1024  319F  27E6  3190   	fcall	_I2C1_MasterEnableRestart
 25741     1027                     l12308:
 25742                           
 25743                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 25744     1027  3001               	movlw	1
 25745     1028                     l2525:
 25746     1028  0008               	return
 25747     1029                     __end_of_I2C1_DO_SEND_RESTART_READ:
 25748                           
 25749                           	psect	text125
 25750     10C7                     __ptext125:	
 25751 ;; *************** function _I2C1_DO_RCEN *****************
 25752 ;; Defined at:
 25753 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 25754 ;; Parameters:    Size  Location     Type
 25755 ;;		None
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;		None
 25758 ;; Return value:  Size  Location     Type
 25759 ;;                  1    wreg      enum E12565
 25760 ;; Registers used:
 25761 ;;		wreg, status,2, status,0, pclath, cstack
 25762 ;; Tracked objects:
 25763 ;;		On entry : 0/0
 25764 ;;		On exit  : 0/0
 25765 ;;		Unchanged: 0/0
 25766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25771 ;;Total ram usage:        0 bytes
 25772 ;; Hardware stack levels used: 1
 25773 ;; Hardware stack levels required when called: 5
 25774 ;; This function calls:
 25775 ;;		_I2C1_MasterStartRx
 25776 ;; This function is called by:
 25777 ;;		_I2C1_MasterFsm
 25778 ;; This function uses a non-reentrant model
 25779 ;;
 25780                           
 25781     10C7                     _I2C1_DO_RCEN:	
 25782                           ;psect for function _I2C1_DO_RCEN
 25783                           
 25784     10C7                     l12452:	
 25785                           ;incstack = 0
 25786                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 25787                           
 25788                           
 25789                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 25790     10C7  0141               	movlb	1	; select bank1
 25791     10C8  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25792     10C9                     l12454:
 25793                           
 25794                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 25795     10C9  319F  27EC  3190   	fcall	_I2C1_MasterStartRx
 25796     10CC                     l12456:
 25797                           
 25798                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 25799     10CC  3004               	movlw	4
 25800     10CD                     l2501:
 25801     10CD  0008               	return
 25802     10CE                     __end_of_I2C1_DO_RCEN:
 25803                           
 25804                           	psect	text126
 25805     0CE4                     __ptext126:	
 25806 ;; *************** function _I2C1_DO_RX *****************
 25807 ;; Defined at:
 25808 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 25809 ;; Parameters:    Size  Location     Type
 25810 ;;		None
 25811 ;; Auto vars:     Size  Location     Type
 25812 ;;		None
 25813 ;; Return value:  Size  Location     Type
 25814 ;;                  1    wreg      enum E12565
 25815 ;; Registers used:
 25816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25817 ;; Tracked objects:
 25818 ;;		On entry : 0/0
 25819 ;;		On exit  : 0/0
 25820 ;;		Unchanged: 0/0
 25821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25826 ;;Total ram usage:        2 bytes
 25827 ;; Hardware stack levels used: 1
 25828 ;; Hardware stack levels required when called: 7
 25829 ;; This function calls:
 25830 ;;		NULL
 25831 ;;		_I2C1_CallbackReturnReset
 25832 ;;		_I2C1_CallbackReturnStop
 25833 ;;		_I2C1_DO_RX_NACK_RESTART
 25834 ;;		_I2C1_DO_RX_NACK_STOP
 25835 ;;		_I2C1_MasterGetRxData
 25836 ;;		_I2C1_MasterSendAck
 25837 ;;		_rd1RegCompleteHandler
 25838 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 25839 ;;		_rd2RegCompleteHandler
 25840 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 25841 ;;		_rdBlkRegCompleteHandler
 25842 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 25843 ;;		_wr1RegCompleteHandler
 25844 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 25845 ;;		_wr2RegCompleteHandler
 25846 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 25847 ;; This function is called by:
 25848 ;;		_I2C1_MasterFsm
 25849 ;; This function uses a non-reentrant model
 25850 ;;
 25851                           
 25852     0CE4                     _I2C1_DO_RX:	
 25853                           ;psect for function _I2C1_DO_RX
 25854                           
 25855     0CE4                     l12420:	
 25856                           ;incstack = 0
 25857                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25858                           
 25859                           
 25860                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 25861     0CE4  319F  27EF  318C   	fcall	_I2C1_MasterGetRxData
 25862     0CE7  00F9               	movwf	??_I2C1_DO_RX
 25863     0CE8  3017               	movlw	23
 25864     0CE9  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25865     0CEA  0086               	movwf	6
 25866     0CEB  0187               	clrf	7
 25867     0CEC  3F40               	moviw [0]fsr1
 25868     0CED  0084               	movwf	4
 25869     0CEE  3F41               	moviw [1]fsr1
 25870     0CEF  0085               	movwf	5
 25871     0CF0  0879               	movf	??_I2C1_DO_RX,w
 25872     0CF1  0080               	movwf	0
 25873     0CF2                     l12422:
 25874     0CF2  3001               	movlw	1
 25875     0CF3  0141               	movlb	1	; select bank1
 25876     0CF4  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 25877     0CF5  3000               	movlw	0
 25878     0CF6  3DB8               	addwfc	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 25879     0CF7                     l12424:
 25880                           
 25881                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 25882     0CF7  3001               	movlw	1
 25883     0CF8  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 25884     0CF9  3000               	movlw	0
 25885     0CFA  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 25886     0CFB  0839               	movf	(_I2C1_Status^(0+128)+25),w
 25887     0CFC  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 25888     0CFD  1903               	btfsc	3,2
 25889     0CFE  2D00               	goto	u9601
 25890     0CFF  2D01               	goto	u9600
 25891     0D00                     u9601:
 25892     0D00  2D06               	goto	l2489
 25893     0D01                     u9600:
 25894     0D01                     l12426:
 25895                           
 25896                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 25897     0D01  3190  200E  318C   	fcall	_I2C1_MasterSendAck
 25898     0D04                     l12428:
 25899                           
 25900                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 25901     0D04  3005               	movlw	5
 25902     0D05  2D2C               	goto	l2490
 25903     0D06                     l2489:	
 25904                           ;mcc_generated_files/i2c1_master.c: 386:     else
 25905                           
 25906                           
 25907                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 25908     0D06  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 25909                           
 25910                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 25911     0D07  2D10               	goto	l12444
 25912     0D08                     l12434:
 25913                           
 25914                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 25915     0D08  3190  2042  318C   	fcall	_I2C1_DO_RX_NACK_RESTART
 25916     0D0B  2D2C               	goto	l2490
 25917     0D0C                     l12438:
 25918                           
 25919                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 25920     0D0C  3190  203D  318C   	fcall	_I2C1_DO_RX_NACK_STOP
 25921     0D0F  2D2C               	goto	l2490
 25922     0D10                     l12444:
 25923     0D10  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 25924     0D11  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25925     0D12  0821               	movf	(_I2C1_Status+1)^(0+128),w
 25926     0D13  008A               	movwf	10
 25927     0D14  0820               	movf	_I2C1_Status^(0+128),w
 25928     0D15  000A               	callw
 25929     0D16  318C               	pagesel	$
 25930     0D17  00F9               	movwf	??_I2C1_DO_RX
 25931     0D18  01FA               	clrf	??_I2C1_DO_RX+1
 25932                           
 25933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25934                           ; Switch size 1, requested type "simple"
 25935                           ; Number of cases is 1, Range of values is 0 to 0
 25936                           ; switch strategies available:
 25937                           ; Name         Instructions Cycles
 25938                           ; simple_byte            4     3 (average)
 25939                           ; direct_byte            8     6 (fixed)
 25940                           ; jumptable            260     6 (fixed)
 25941                           ;	Chosen strategy is simple_byte
 25942     0D19  087A               	movf	??_I2C1_DO_RX+1,w
 25943     0D1A  3A00               	xorlw	0	; case 0
 25944     0D1B  1903               	skipnz
 25945     0D1C  2D1E               	goto	l16040
 25946     0D1D  2D0C               	goto	l12438
 25947     0D1E                     l16040:
 25948                           
 25949                           ; Switch size 1, requested type "simple"
 25950                           ; Number of cases is 4, Range of values is 1 to 4
 25951                           ; switch strategies available:
 25952                           ; Name         Instructions Cycles
 25953                           ; simple_byte           13     7 (average)
 25954                           ; direct_byte           17     9 (fixed)
 25955                           ; jumptable            263     9 (fixed)
 25956                           ;	Chosen strategy is simple_byte
 25957     0D1E  0879               	movf	??_I2C1_DO_RX,w
 25958     0D1F  3A01               	xorlw	1	; case 1
 25959     0D20  1903               	skipnz
 25960     0D21  2D0C               	goto	l12438
 25961     0D22  3A03               	xorlw	3	; case 2
 25962     0D23  1903               	skipnz
 25963     0D24  2D08               	goto	l12434
 25964     0D25  3A01               	xorlw	1	; case 3
 25965     0D26  1903               	skipnz
 25966     0D27  2D08               	goto	l12434
 25967     0D28  3A07               	xorlw	7	; case 4
 25968     0D29  1903               	skipnz
 25969     0D2A  2D0C               	goto	l12438
 25970     0D2B  2D0C               	goto	l12438
 25971     0D2C                     l2490:
 25972     0D2C  0008               	return
 25973     0D2D                     __end_of_I2C1_DO_RX:
 25974                           
 25975                           	psect	text127
 25976     0F4C                     __ptext127:	
 25977 ;; *************** function _I2C1_DO_TX *****************
 25978 ;; Defined at:
 25979 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 25980 ;; Parameters:    Size  Location     Type
 25981 ;;		None
 25982 ;; Auto vars:     Size  Location     Type
 25983 ;;		None
 25984 ;; Return value:  Size  Location     Type
 25985 ;;                  1    wreg      enum E12565
 25986 ;; Registers used:
 25987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25988 ;; Tracked objects:
 25989 ;;		On entry : 0/0
 25990 ;;		On exit  : 0/0
 25991 ;;		Unchanged: 0/0
 25992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25997 ;;Total ram usage:        2 bytes
 25998 ;; Hardware stack levels used: 1
 25999 ;; Hardware stack levels required when called: 7
 26000 ;; This function calls:
 26001 ;;		NULL
 26002 ;;		_I2C1_CallbackReturnReset
 26003 ;;		_I2C1_CallbackReturnStop
 26004 ;;		_I2C1_DO_SEND_RESTART_READ
 26005 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26006 ;;		_I2C1_DO_SEND_STOP
 26007 ;;		_I2C1_MasterIsNack
 26008 ;;		_I2C1_MasterSendTxData
 26009 ;;		_rd1RegCompleteHandler
 26010 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 26011 ;;		_rd2RegCompleteHandler
 26012 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 26013 ;;		_rdBlkRegCompleteHandler
 26014 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 26015 ;;		_wr1RegCompleteHandler
 26016 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 26017 ;;		_wr2RegCompleteHandler
 26018 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 26019 ;; This function is called by:
 26020 ;;		_I2C1_MasterFsm
 26021 ;; This function uses a non-reentrant model
 26022 ;;
 26023                           
 26024     0F4C                     _I2C1_DO_TX:	
 26025                           ;psect for function _I2C1_DO_TX
 26026                           
 26027     0F4C                     l12386:	
 26028                           ;incstack = 0
 26029                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26030                           
 26031                           
 26032                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26033     0F4C  3190  205B  318F   	fcall	_I2C1_MasterIsNack
 26034     0F4F  3A00               	xorlw	0
 26035     0F50  1903               	skipnz
 26036     0F51  2F53               	goto	u9581
 26037     0F52  2F54               	goto	u9580
 26038     0F53                     u9581:
 26039     0F53  2F82               	goto	l2473
 26040     0F54                     u9580:
 26041     0F54  2F61               	goto	l12404
 26042     0F55                     l12390:
 26043                           
 26044                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26045     0F55  3190  2024  318F   	fcall	_I2C1_DO_SEND_RESTART_READ
 26046     0F58  2FA1               	goto	l2476
 26047     0F59                     l12394:
 26048                           
 26049                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26050     0F59  3190  2029  318F   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26051     0F5C  2FA1               	goto	l2476
 26052     0F5D                     l12398:
 26053                           
 26054                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26055     0F5D  3190  2033  318F   	fcall	_I2C1_DO_SEND_STOP
 26056     0F60  2FA1               	goto	l2476
 26057     0F61                     l12404:
 26058     0F61  0141               	movlb	1	; select bank1
 26059     0F62  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26060     0F63  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26061     0F64  3006               	movlw	6
 26062     0F65  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26063     0F66  0086               	movwf	6
 26064     0F67  0187               	clrf	7
 26065     0F68  3F41               	moviw [1]fsr1
 26066     0F69  008A               	movwf	10
 26067     0F6A  3F40               	moviw [0]fsr1
 26068     0F6B  000A               	callw
 26069     0F6C  318F               	pagesel	$
 26070     0F6D  00F9               	movwf	??_I2C1_DO_TX
 26071     0F6E  01FA               	clrf	??_I2C1_DO_TX+1
 26072                           
 26073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26074                           ; Switch size 1, requested type "simple"
 26075                           ; Number of cases is 1, Range of values is 0 to 0
 26076                           ; switch strategies available:
 26077                           ; Name         Instructions Cycles
 26078                           ; simple_byte            4     3 (average)
 26079                           ; direct_byte            8     6 (fixed)
 26080                           ; jumptable            260     6 (fixed)
 26081                           ;	Chosen strategy is simple_byte
 26082     0F6F  087A               	movf	??_I2C1_DO_TX+1,w
 26083     0F70  3A00               	xorlw	0	; case 0
 26084     0F71  1903               	skipnz
 26085     0F72  2F74               	goto	l16042
 26086     0F73  2F5D               	goto	l12398
 26087     0F74                     l16042:
 26088                           
 26089                           ; Switch size 1, requested type "simple"
 26090                           ; Number of cases is 4, Range of values is 1 to 4
 26091                           ; switch strategies available:
 26092                           ; Name         Instructions Cycles
 26093                           ; simple_byte           13     7 (average)
 26094                           ; direct_byte           17     9 (fixed)
 26095                           ; jumptable            263     9 (fixed)
 26096                           ;	Chosen strategy is simple_byte
 26097     0F74  0879               	movf	??_I2C1_DO_TX,w
 26098     0F75  3A01               	xorlw	1	; case 1
 26099     0F76  1903               	skipnz
 26100     0F77  2F5D               	goto	l12398
 26101     0F78  3A03               	xorlw	3	; case 2
 26102     0F79  1903               	skipnz
 26103     0F7A  2F55               	goto	l12390
 26104     0F7B  3A01               	xorlw	1	; case 3
 26105     0F7C  1903               	skipnz
 26106     0F7D  2F59               	goto	l12394
 26107     0F7E  3A07               	xorlw	7	; case 4
 26108     0F7F  1903               	skipnz
 26109     0F80  2F5D               	goto	l12398
 26110     0F81  2F5D               	goto	l12398
 26111     0F82                     l2473:	
 26112                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26113                           
 26114                           
 26115                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26116     0F82  0141               	movlb	1	; select bank1
 26117     0F83  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26118     0F84                     l12406:
 26119                           
 26120                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26121     0F84  0838               	movf	((low ((_I2C1_Status| 0+23))+1))^(0+128),w
 26122     0F85  00FA               	movwf	??_I2C1_DO_TX+1
 26123     0F86  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26124     0F87  00F9               	movwf	??_I2C1_DO_TX
 26125     0F88  0AB7               	incf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26126     0F89  1903               	skipnz
 26127     0F8A  0AB8               	incf	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26128     0F8B  0879               	movf	??_I2C1_DO_TX,w
 26129     0F8C  0086               	movwf	6
 26130     0F8D  087A               	movf	??_I2C1_DO_TX+1,w
 26131     0F8E  0087               	movwf	7
 26132     0F8F  0801               	movf	1,w
 26133     0F90  3190  201A  318F   	fcall	_I2C1_MasterSendTxData
 26134     0F93                     l12408:
 26135                           
 26136                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26137     0F93  3001               	movlw	1
 26138     0F94  0141               	movlb	1	; select bank1
 26139     0F95  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26140     0F96  3000               	movlw	0
 26141     0F97  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26142     0F98  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26143     0F99  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26144     0F9A  1D03               	btfss	3,2
 26145     0F9B  2F9D               	goto	u9591
 26146     0F9C  2F9E               	goto	u9590
 26147     0F9D                     u9591:
 26148     0F9D  2FA0               	goto	l12412
 26149     0F9E                     u9590:
 26150     0F9E                     l12410:
 26151     0F9E  3006               	movlw	6
 26152     0F9F  2FA1               	goto	l2476
 26153     0FA0                     l12412:
 26154     0FA0  3003               	movlw	3
 26155     0FA1                     l2476:
 26156     0FA1  0008               	return
 26157     0FA2                     __end_of_I2C1_DO_TX:
 26158                           
 26159                           	psect	text128
 26160     10D5                     __ptext128:	
 26161 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26162 ;; Defined at:
 26163 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26164 ;; Parameters:    Size  Location     Type
 26165 ;;		None
 26166 ;; Auto vars:     Size  Location     Type
 26167 ;;		None
 26168 ;; Return value:  Size  Location     Type
 26169 ;;                  1    wreg      enum E12565
 26170 ;; Registers used:
 26171 ;;		wreg, status,2, status,0, pclath, cstack
 26172 ;; Tracked objects:
 26173 ;;		On entry : 0/0
 26174 ;;		On exit  : 0/0
 26175 ;;		Unchanged: 0/0
 26176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26181 ;;Total ram usage:        0 bytes
 26182 ;; Hardware stack levels used: 1
 26183 ;; Hardware stack levels required when called: 5
 26184 ;; This function calls:
 26185 ;;		_I2C1_MasterSendTxData
 26186 ;; This function is called by:
 26187 ;;		_I2C1_MasterFsm
 26188 ;; This function uses a non-reentrant model
 26189 ;;
 26190                           
 26191     10D5                     _I2C1_DO_SEND_ADR_WRITE:	
 26192                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26193                           
 26194     10D5                     l12378:	
 26195                           ;incstack = 0
 26196                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26197                           
 26198                           
 26199                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26200     10D5  0141               	movlb	1	; select bank1
 26201     10D6  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26202     10D7                     l12380:
 26203                           
 26204                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26205     10D7  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26206     10D8  3190  201A  3190   	fcall	_I2C1_MasterSendTxData
 26207     10DB                     l12382:
 26208                           
 26209                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26210     10DB  3003               	movlw	3
 26211     10DC                     l2470:
 26212     10DC  0008               	return
 26213     10DD                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26214                           
 26215                           	psect	text129
 26216     10EE                     __ptext129:	
 26217 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26218 ;; Defined at:
 26219 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26220 ;; Parameters:    Size  Location     Type
 26221 ;;		None
 26222 ;; Auto vars:     Size  Location     Type
 26223 ;;		None
 26224 ;; Return value:  Size  Location     Type
 26225 ;;                  1    wreg      enum E12565
 26226 ;; Registers used:
 26227 ;;		wreg, status,2, status,0, pclath, cstack
 26228 ;; Tracked objects:
 26229 ;;		On entry : 0/0
 26230 ;;		On exit  : 0/0
 26231 ;;		Unchanged: 0/0
 26232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26237 ;;Total ram usage:        0 bytes
 26238 ;; Hardware stack levels used: 1
 26239 ;; Hardware stack levels required when called: 5
 26240 ;; This function calls:
 26241 ;;		_I2C1_MasterSendTxData
 26242 ;; This function is called by:
 26243 ;;		_I2C1_MasterFsm
 26244 ;; This function uses a non-reentrant model
 26245 ;;
 26246                           
 26247     10EE                     _I2C1_DO_SEND_ADR_READ:	
 26248                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26249                           
 26250     10EE                     l12370:	
 26251                           ;incstack = 0
 26252                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26253                           
 26254                           
 26255                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26256     10EE  0141               	movlb	1	; select bank1
 26257     10EF  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26258     10F0                     l12372:
 26259                           
 26260                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26261     10F0  1403               	setc
 26262     10F1  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26263     10F2  3190  201A  3190   	fcall	_I2C1_MasterSendTxData
 26264     10F5                     l12374:
 26265                           
 26266                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26267     10F5  3005               	movlw	5
 26268     10F6                     l2467:
 26269     10F6  0008               	return
 26270     10F7                     __end_of_I2C1_DO_SEND_ADR_READ:
 26271                           
 26272                           	psect	text130
 26273     101F                     __ptext130:	
 26274 ;; *************** function _I2C1_DO_IDLE *****************
 26275 ;; Defined at:
 26276 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26277 ;; Parameters:    Size  Location     Type
 26278 ;;		None
 26279 ;; Auto vars:     Size  Location     Type
 26280 ;;		None
 26281 ;; Return value:  Size  Location     Type
 26282 ;;                  1    wreg      enum E12565
 26283 ;; Registers used:
 26284 ;;		wreg, status,2
 26285 ;; Tracked objects:
 26286 ;;		On entry : 0/0
 26287 ;;		On exit  : 0/0
 26288 ;;		Unchanged: 0/0
 26289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26294 ;;Total ram usage:        0 bytes
 26295 ;; Hardware stack levels used: 1
 26296 ;; Hardware stack levels required when called: 4
 26297 ;; This function calls:
 26298 ;;		Nothing
 26299 ;; This function is called by:
 26300 ;;		_I2C1_MasterFsm
 26301 ;; This function uses a non-reentrant model
 26302 ;;
 26303                           
 26304     101F                     _I2C1_DO_IDLE:	
 26305                           ;psect for function _I2C1_DO_IDLE
 26306                           
 26307     101F                     l12362:	
 26308                           ;incstack = 0
 26309                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26310                           
 26311                           
 26312                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26313     101F  0141               	movlb	1	; select bank1
 26314     1020  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 26315     1021                     l12364:
 26316                           
 26317                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26318     1021  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 26319     1022                     l12366:
 26320                           
 26321                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26322     1022  300E               	movlw	14
 26323     1023                     l2464:
 26324     1023  0008               	return
 26325     1024                     __end_of_I2C1_DO_IDLE:
 26326                           
 26327                           	psect	text131
 26328     16EF                     __ptext131:	
 26329 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26330 ;; Defined at:
 26331 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26332 ;; Parameters:    Size  Location     Type
 26333 ;;		None
 26334 ;; Auto vars:     Size  Location     Type
 26335 ;;		None
 26336 ;; Return value:  Size  Location     Type
 26337 ;;                  1    wreg      enum E12565
 26338 ;; Registers used:
 26339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26340 ;; Tracked objects:
 26341 ;;		On entry : 0/0
 26342 ;;		On exit  : 0/0
 26343 ;;		Unchanged: 0/0
 26344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26349 ;;Total ram usage:        2 bytes
 26350 ;; Hardware stack levels used: 1
 26351 ;; Hardware stack levels required when called: 7
 26352 ;; This function calls:
 26353 ;;		NULL
 26354 ;;		_I2C1_CallbackReturnReset
 26355 ;;		_I2C1_CallbackReturnStop
 26356 ;;		_I2C1_DO_SEND_RESTART
 26357 ;;		_I2C1_DO_SEND_STOP
 26358 ;;		_I2C1_MasterSetIrq
 26359 ;;		_rd1RegCompleteHandler
 26360 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 26361 ;;		_rd2RegCompleteHandler
 26362 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 26363 ;;		_rdBlkRegCompleteHandler
 26364 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 26365 ;;		_wr1RegCompleteHandler
 26366 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 26367 ;;		_wr2RegCompleteHandler
 26368 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 26369 ;; This function is called by:
 26370 ;;		_I2C1_MasterFsm
 26371 ;; This function uses a non-reentrant model
 26372 ;;
 26373                           
 26374     16EF                     _I2C1_DO_TX_EMPTY:	
 26375                           ;psect for function _I2C1_DO_TX_EMPTY
 26376                           
 26377     16EF                     l12460:	
 26378                           ;incstack = 0
 26379                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26380                           
 26381                           
 26382                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26383     16EF  0141               	movlb	1	; select bank1
 26384     16F0  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26385                           
 26386                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26387     16F1  2EFF               	goto	l12478
 26388     16F2                     l12462:
 26389                           
 26390                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26391     16F2  3190  202E  3196   	fcall	_I2C1_DO_SEND_RESTART
 26392     16F5  2F1B               	goto	l2507
 26393     16F6                     l12466:
 26394                           
 26395                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26396     16F6  319F  27F2  3196   	fcall	_I2C1_MasterSetIrq
 26397     16F9                     l12468:
 26398                           
 26399                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26400     16F9  3003               	movlw	3
 26401     16FA  2F1B               	goto	l2507
 26402     16FB                     l12472:
 26403                           
 26404                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26405     16FB  3190  2033  3196   	fcall	_I2C1_DO_SEND_STOP
 26406     16FE  2F1B               	goto	l2507
 26407     16FF                     l12478:
 26408     16FF  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26409     1700  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26410     1701  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26411     1702  008A               	movwf	10
 26412     1703  0820               	movf	_I2C1_Status^(0+128),w
 26413     1704  000A               	callw
 26414     1705  3196               	pagesel	$
 26415     1706  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26416     1707  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26417                           
 26418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26419                           ; Switch size 1, requested type "simple"
 26420                           ; Number of cases is 1, Range of values is 0 to 0
 26421                           ; switch strategies available:
 26422                           ; Name         Instructions Cycles
 26423                           ; simple_byte            4     3 (average)
 26424                           ; direct_byte            8     6 (fixed)
 26425                           ; jumptable            260     6 (fixed)
 26426                           ;	Chosen strategy is simple_byte
 26427     1708  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26428     1709  3A00               	xorlw	0	; case 0
 26429     170A  1903               	skipnz
 26430     170B  2F0D               	goto	l16044
 26431     170C  2EFB               	goto	l12472
 26432     170D                     l16044:
 26433                           
 26434                           ; Switch size 1, requested type "simple"
 26435                           ; Number of cases is 4, Range of values is 1 to 4
 26436                           ; switch strategies available:
 26437                           ; Name         Instructions Cycles
 26438                           ; simple_byte           13     7 (average)
 26439                           ; direct_byte           17     9 (fixed)
 26440                           ; jumptable            263     9 (fixed)
 26441                           ;	Chosen strategy is simple_byte
 26442     170D  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26443     170E  3A01               	xorlw	1	; case 1
 26444     170F  1903               	skipnz
 26445     1710  2EFB               	goto	l12472
 26446     1711  3A03               	xorlw	3	; case 2
 26447     1712  1903               	skipnz
 26448     1713  2EF2               	goto	l12462
 26449     1714  3A01               	xorlw	1	; case 3
 26450     1715  1903               	skipnz
 26451     1716  2EF2               	goto	l12462
 26452     1717  3A07               	xorlw	7	; case 4
 26453     1718  1903               	skipnz
 26454     1719  2EF6               	goto	l12466
 26455     171A  2EFB               	goto	l12472
 26456     171B                     l2507:
 26457     171B  0008               	return
 26458     171C                     __end_of_I2C1_DO_TX_EMPTY:
 26459                           
 26460                           	psect	text132
 26461     1FF2                     __ptext132:	
 26462 ;; *************** function _I2C1_MasterSetIrq *****************
 26463 ;; Defined at:
 26464 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;		None
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;		None
 26469 ;; Return value:  Size  Location     Type
 26470 ;;                  1    wreg      void 
 26471 ;; Registers used:
 26472 ;;		None
 26473 ;; Tracked objects:
 26474 ;;		On entry : 0/0
 26475 ;;		On exit  : 0/0
 26476 ;;		Unchanged: 0/0
 26477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26482 ;;Total ram usage:        0 bytes
 26483 ;; Hardware stack levels used: 1
 26484 ;; Hardware stack levels required when called: 4
 26485 ;; This function calls:
 26486 ;;		Nothing
 26487 ;; This function is called by:
 26488 ;;		_I2C1_DO_TX_EMPTY
 26489 ;; This function uses a non-reentrant model
 26490 ;;
 26491                           
 26492     1FF2                     _I2C1_MasterSetIrq:	
 26493                           ;psect for function _I2C1_MasterSetIrq
 26494                           
 26495     1FF2                     l12350:	
 26496                           ;incstack = 0
 26497                           ; Regs used in _I2C1_MasterSetIrq: []
 26498                           
 26499                           
 26500                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 26501     1FF2  014E               	movlb	14	; select bank14
 26502     1FF3  140F               	bsf	15,0	;volatile
 26503     1FF4                     l2627:
 26504     1FF4  0008               	return
 26505     1FF5                     __end_of_I2C1_MasterSetIrq:
 26506                           
 26507                           	psect	text133
 26508     105B                     __ptext133:	
 26509 ;; *************** function _I2C1_MasterIsNack *****************
 26510 ;; Defined at:
 26511 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 26512 ;; Parameters:    Size  Location     Type
 26513 ;;		None
 26514 ;; Auto vars:     Size  Location     Type
 26515 ;;		None
 26516 ;; Return value:  Size  Location     Type
 26517 ;;                  1    wreg      _Bool 
 26518 ;; Registers used:
 26519 ;;		wreg, status,2, status,0
 26520 ;; Tracked objects:
 26521 ;;		On entry : 0/0
 26522 ;;		On exit  : 0/0
 26523 ;;		Unchanged: 0/0
 26524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26529 ;;Total ram usage:        0 bytes
 26530 ;; Hardware stack levels used: 1
 26531 ;; Hardware stack levels required when called: 4
 26532 ;; This function calls:
 26533 ;;		Nothing
 26534 ;; This function is called by:
 26535 ;;		_I2C1_MasterFsm
 26536 ;;		_I2C1_DO_TX
 26537 ;; This function uses a non-reentrant model
 26538 ;;
 26539                           
 26540     105B                     _I2C1_MasterIsNack:	
 26541                           ;psect for function _I2C1_MasterIsNack
 26542                           
 26543     105B                     l12300:	
 26544                           ;incstack = 0
 26545                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 26546                           
 26547                           
 26548                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 26549     105B  0143               	movlb	3	; select bank3
 26550     105C  0E11               	swapf	17,w	;volatile
 26551     105D  0C89               	rrf	9,f
 26552     105E  0C89               	rrf	9,f
 26553     105F  3901               	andlw	1
 26554     1060                     l2600:
 26555     1060  0008               	return
 26556     1061                     __end_of_I2C1_MasterIsNack:
 26557                           
 26558                           	psect	text134
 26559     101A                     __ptext134:	
 26560 ;; *************** function _I2C1_MasterSendTxData *****************
 26561 ;; Defined at:
 26562 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 26563 ;; Parameters:    Size  Location     Type
 26564 ;;  data            1    wreg     unsigned char 
 26565 ;; Auto vars:     Size  Location     Type
 26566 ;;  data            1    1[COMMON] unsigned char 
 26567 ;; Return value:  Size  Location     Type
 26568 ;;                  1    wreg      void 
 26569 ;; Registers used:
 26570 ;;		wreg
 26571 ;; Tracked objects:
 26572 ;;		On entry : 0/0
 26573 ;;		On exit  : 0/0
 26574 ;;		Unchanged: 0/0
 26575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26580 ;;Total ram usage:        1 bytes
 26581 ;; Hardware stack levels used: 1
 26582 ;; Hardware stack levels required when called: 4
 26583 ;; This function calls:
 26584 ;;		Nothing
 26585 ;; This function is called by:
 26586 ;;		_I2C1_DO_SEND_ADR_READ
 26587 ;;		_I2C1_DO_SEND_ADR_WRITE
 26588 ;;		_I2C1_DO_TX
 26589 ;; This function uses a non-reentrant model
 26590 ;;
 26591                           
 26592     101A                     _I2C1_MasterSendTxData:	
 26593                           ;psect for function _I2C1_MasterSendTxData
 26594                           
 26595                           
 26596                           ;incstack = 0
 26597                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 26598                           ;I2C1_MasterSendTxData@data stored from wreg
 26599     101A  00F1               	movwf	I2C1_MasterSendTxData@data
 26600     101B                     l12304:
 26601                           
 26602                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 26603     101B  0871               	movf	I2C1_MasterSendTxData@data,w
 26604     101C  0143               	movlb	3	; select bank3
 26605     101D  008C               	movwf	12	;volatile
 26606     101E                     l2582:
 26607     101E  0008               	return
 26608     101F                     __end_of_I2C1_MasterSendTxData:
 26609                           
 26610                           	psect	text135
 26611     100E                     __ptext135:	
 26612 ;; *************** function _I2C1_MasterSendAck *****************
 26613 ;; Defined at:
 26614 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 26615 ;; Parameters:    Size  Location     Type
 26616 ;;		None
 26617 ;; Auto vars:     Size  Location     Type
 26618 ;;		None
 26619 ;; Return value:  Size  Location     Type
 26620 ;;                  1    wreg      void 
 26621 ;; Registers used:
 26622 ;;		None
 26623 ;; Tracked objects:
 26624 ;;		On entry : 0/0
 26625 ;;		On exit  : 0/0
 26626 ;;		Unchanged: 0/0
 26627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26632 ;;Total ram usage:        0 bytes
 26633 ;; Hardware stack levels used: 1
 26634 ;; Hardware stack levels required when called: 4
 26635 ;; This function calls:
 26636 ;;		Nothing
 26637 ;; This function is called by:
 26638 ;;		_I2C1_DO_RX
 26639 ;;		_I2C1_DO_RX_ACK
 26640 ;; This function uses a non-reentrant model
 26641 ;;
 26642                           
 26643     100E                     _I2C1_MasterSendAck:	
 26644                           ;psect for function _I2C1_MasterSendAck
 26645                           
 26646     100E                     l12328:	
 26647                           ;incstack = 0
 26648                           ; Regs used in _I2C1_MasterSendAck: []
 26649                           
 26650                           
 26651                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 26652     100E  0143               	movlb	3	; select bank3
 26653     100F  1291               	bcf	17,5	;volatile
 26654                           
 26655                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 26656     1010  1611               	bsf	17,4	;volatile
 26657     1011                     l2603:
 26658     1011  0008               	return
 26659     1012                     __end_of_I2C1_MasterSendAck:
 26660                           
 26661                           	psect	text136
 26662     1FEF                     __ptext136:	
 26663 ;; *************** function _I2C1_MasterGetRxData *****************
 26664 ;; Defined at:
 26665 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 26666 ;; Parameters:    Size  Location     Type
 26667 ;;		None
 26668 ;; Auto vars:     Size  Location     Type
 26669 ;;		None
 26670 ;; Return value:  Size  Location     Type
 26671 ;;                  1    wreg      unsigned char 
 26672 ;; Registers used:
 26673 ;;		wreg
 26674 ;; Tracked objects:
 26675 ;;		On entry : 0/0
 26676 ;;		On exit  : 0/0
 26677 ;;		Unchanged: 0/0
 26678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26683 ;;Total ram usage:        0 bytes
 26684 ;; Hardware stack levels used: 1
 26685 ;; Hardware stack levels required when called: 4
 26686 ;; This function calls:
 26687 ;;		Nothing
 26688 ;; This function is called by:
 26689 ;;		_I2C1_DO_RX
 26690 ;; This function uses a non-reentrant model
 26691 ;;
 26692                           
 26693     1FEF                     _I2C1_MasterGetRxData:	
 26694                           ;psect for function _I2C1_MasterGetRxData
 26695                           
 26696     1FEF                     l12324:	
 26697                           ;incstack = 0
 26698                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 26699                           
 26700                           
 26701                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 26702     1FEF  0143               	movlb	3	; select bank3
 26703     1FF0  080C               	movf	12,w	;volatile
 26704     1FF1                     l2579:
 26705     1FF1  0008               	return
 26706     1FF2                     __end_of_I2C1_MasterGetRxData:
 26707                           
 26708                           	psect	text137
 26709     100A                     __ptext137:	
 26710 ;; *************** function _I2C1_MasterSendNack *****************
 26711 ;; Defined at:
 26712 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 26713 ;; Parameters:    Size  Location     Type
 26714 ;;		None
 26715 ;; Auto vars:     Size  Location     Type
 26716 ;;		None
 26717 ;; Return value:  Size  Location     Type
 26718 ;;                  1    wreg      void 
 26719 ;; Registers used:
 26720 ;;		None
 26721 ;; Tracked objects:
 26722 ;;		On entry : 0/0
 26723 ;;		On exit  : 0/0
 26724 ;;		Unchanged: 0/0
 26725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26730 ;;Total ram usage:        0 bytes
 26731 ;; Hardware stack levels used: 1
 26732 ;; Hardware stack levels required when called: 4
 26733 ;; This function calls:
 26734 ;;		Nothing
 26735 ;; This function is called by:
 26736 ;;		_I2C1_DO_RX_NACK_STOP
 26737 ;;		_I2C1_DO_RX_NACK_RESTART
 26738 ;; This function uses a non-reentrant model
 26739 ;;
 26740                           
 26741     100A                     _I2C1_MasterSendNack:	
 26742                           ;psect for function _I2C1_MasterSendNack
 26743                           
 26744     100A                     l12222:	
 26745                           ;incstack = 0
 26746                           ; Regs used in _I2C1_MasterSendNack: []
 26747                           
 26748                           
 26749                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 26750     100A  0143               	movlb	3	; select bank3
 26751     100B  1691               	bsf	17,5	;volatile
 26752                           
 26753                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 26754     100C  1611               	bsf	17,4	;volatile
 26755     100D                     l2606:
 26756     100D  0008               	return
 26757     100E                     __end_of_I2C1_MasterSendNack:
 26758                           
 26759                           	psect	text138
 26760     1FEC                     __ptext138:	
 26761 ;; *************** function _I2C1_MasterStartRx *****************
 26762 ;; Defined at:
 26763 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;		None
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;                  1    wreg      void 
 26770 ;; Registers used:
 26771 ;;		None
 26772 ;; Tracked objects:
 26773 ;;		On entry : 0/0
 26774 ;;		On exit  : 0/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used: 1
 26783 ;; Hardware stack levels required when called: 4
 26784 ;; This function calls:
 26785 ;;		Nothing
 26786 ;; This function is called by:
 26787 ;;		_I2C1_DO_RCEN
 26788 ;; This function uses a non-reentrant model
 26789 ;;
 26790                           
 26791     1FEC                     _I2C1_MasterStartRx:	
 26792                           ;psect for function _I2C1_MasterStartRx
 26793                           
 26794     1FEC                     l12342:	
 26795                           ;incstack = 0
 26796                           ; Regs used in _I2C1_MasterStartRx: []
 26797                           
 26798                           
 26799                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 26800     1FEC  0143               	movlb	3	; select bank3
 26801     1FED  1591               	bsf	17,3	;volatile
 26802     1FEE                     l2591:
 26803     1FEE  0008               	return
 26804     1FEF                     __end_of_I2C1_MasterStartRx:
 26805                           
 26806                           	psect	text139
 26807     1000                     __ptext139:	
 26808 ;; *************** function _I2C1_CallbackReturnReset *****************
 26809 ;; Defined at:
 26810 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 26811 ;; Parameters:    Size  Location     Type
 26812 ;;  funPtr          1    8[COMMON] PTR void 
 26813 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26814 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26815 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26816 ;; Auto vars:     Size  Location     Type
 26817 ;;		None
 26818 ;; Return value:  Size  Location     Type
 26819 ;;                  1    wreg      enum E363
 26820 ;; Registers used:
 26821 ;;		wreg
 26822 ;; Tracked objects:
 26823 ;;		On entry : 0/0
 26824 ;;		On exit  : 0/0
 26825 ;;		Unchanged: 0/0
 26826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26827 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26831 ;;Total ram usage:        1 bytes
 26832 ;; Hardware stack levels used: 1
 26833 ;; Hardware stack levels required when called: 4
 26834 ;; This function calls:
 26835 ;;		Nothing
 26836 ;; This function is called by:
 26837 ;;		_I2C1_Open
 26838 ;;		_I2C1_DO_TX
 26839 ;;		_I2C1_DO_RX
 26840 ;;		_I2C1_DO_TX_EMPTY
 26841 ;;		_I2C1_DO_ADDRESS_NACK
 26842 ;;		_I2C1_DO_RX_EMPTY
 26843 ;; This function uses a non-reentrant model
 26844 ;;
 26845                           
 26846     1000                     _I2C1_CallbackReturnReset:	
 26847                           ;psect for function _I2C1_CallbackReturnReset
 26848                           
 26849     1000                     l12356:	
 26850                           ;incstack = 0
 26851                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 26852                           
 26853                           
 26854                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 26855     1000  3005               	movlw	5
 26856     1001                     l2563:
 26857     1001  0008               	return
 26858     1002                     __end_of_I2C1_CallbackReturnReset:
 26859                           
 26860                           	psect	text140
 26861     1FD8                     __ptext140:	
 26862 ;; *************** function _I2C1_CallbackReturnStop *****************
 26863 ;; Defined at:
 26864 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 26865 ;; Parameters:    Size  Location     Type
 26866 ;;  funPtr          1    8[COMMON] PTR void 
 26867 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26868 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26869 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26870 ;; Auto vars:     Size  Location     Type
 26871 ;;		None
 26872 ;; Return value:  Size  Location     Type
 26873 ;;                  1    wreg      enum E363
 26874 ;; Registers used:
 26875 ;;		wreg
 26876 ;; Tracked objects:
 26877 ;;		On entry : 0/0
 26878 ;;		On exit  : 0/0
 26879 ;;		Unchanged: 0/0
 26880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26885 ;;Total ram usage:        1 bytes
 26886 ;; Hardware stack levels used: 1
 26887 ;; Hardware stack levels required when called: 4
 26888 ;; This function calls:
 26889 ;;		Nothing
 26890 ;; This function is called by:
 26891 ;;		_I2C1_Open
 26892 ;;		_I2C1_SetCallback
 26893 ;;		_I2C1_DO_TX
 26894 ;;		_I2C1_DO_RX
 26895 ;;		_I2C1_DO_TX_EMPTY
 26896 ;;		_I2C1_DO_ADDRESS_NACK
 26897 ;;		_I2C1_DO_RX_EMPTY
 26898 ;; This function uses a non-reentrant model
 26899 ;;
 26900                           
 26901     1FD8                     _I2C1_CallbackReturnStop:	
 26902                           ;psect for function _I2C1_CallbackReturnStop
 26903                           
 26904     1FD8                     l12352:	
 26905                           ;incstack = 0
 26906                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 26907                           
 26908                           
 26909                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 26910     1FD8  3001               	movlw	1
 26911     1FD9                     l2560:
 26912     1FD9  0008               	return
 26913     1FDA                     __end_of_I2C1_CallbackReturnStop:
 26914                           
 26915                           	psect	text141
 26916     1497                     __ptext141:	
 26917 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1723 *****************
 26918 ;; Defined at:
 26919 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 26920 ;; Parameters:    Size  Location     Type
 26921 ;;  ptr             1    8[COMMON] PTR void 
 26922 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26923 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26924 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26925 ;; Auto vars:     Size  Location     Type
 26926 ;;		None
 26927 ;; Return value:  Size  Location     Type
 26928 ;;                  1    wreg      enum E363
 26929 ;; Registers used:
 26930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26931 ;; Tracked objects:
 26932 ;;		On entry : 0/0
 26933 ;;		On exit  : 0/0
 26934 ;;		Unchanged: 0/0
 26935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26940 ;;Total ram usage:        1 bytes
 26941 ;; Hardware stack levels used: 1
 26942 ;; Hardware stack levels required when called: 6
 26943 ;; This function calls:
 26944 ;;		_I2C1_SetBuffer
 26945 ;;		_I2C1_SetDataCompleteCallback
 26946 ;; This function is called by:
 26947 ;;		_I2C1_ReadDataBlock
 26948 ;;		_I2C1_DO_TX
 26949 ;;		_I2C1_DO_RX
 26950 ;;		_I2C1_DO_TX_EMPTY
 26951 ;;		_I2C1_DO_ADDRESS_NACK
 26952 ;;		_I2C1_DO_RX_EMPTY
 26953 ;; This function uses a non-reentrant model
 26954 ;;
 26955                           
 26956     1497                     _rdBlkRegCompleteHandler@i2c1_master_example$F1723:	
 26957                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1723
 26958                           
 26959     1497                     l12294:	
 26960                           ;incstack = 0
 26961                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1723: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 26962                           
 26963                           
 26964                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 26965     1497  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr,w
 26966     1498  3E02               	addlw	2
 26967     1499  0086               	movwf	6
 26968     149A  0187               	clrf	7
 26969     149B  3F40               	moviw [0]fsr1
 26970     149C  00F1               	movwf	I2C1_SetBuffer@buffer
 26971     149D  3F41               	moviw [1]fsr1
 26972     149E  00F2               	movwf	I2C1_SetBuffer@buffer+1
 26973     149F  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr,w
 26974     14A0  0086               	movwf	6
 26975     14A1  0187               	clrf	7
 26976     14A2  3F40               	moviw [0]fsr1
 26977     14A3  00F3               	movwf	I2C1_SetBuffer@bufferSize
 26978     14A4  3F41               	moviw [1]fsr1
 26979     14A5  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 26980     14A6  3191  21E2  3194   	fcall	_I2C1_SetBuffer
 26981                           
 26982                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26983     14A9  3000               	movlw	0
 26984     14AA  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 26985     14AB  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 26986     14AC  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 26987     14AD  3191  2144  3194   	fcall	_I2C1_SetDataCompleteCallback
 26988     14B0                     l12296:
 26989                           
 26990                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 26991     14B0  3002               	movlw	2
 26992     14B1                     l1404:
 26993     14B1  0008               	return
 26994     14B2                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1723:
 26995                           
 26996                           	psect	text142
 26997     12E6                     __ptext142:	
 26998 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1706 *****************
 26999 ;; Defined at:
 27000 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27001 ;; Parameters:    Size  Location     Type
 27002 ;;  ptr             1    8[COMMON] PTR void 
 27003 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27004 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27005 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27006 ;; Auto vars:     Size  Location     Type
 27007 ;;		None
 27008 ;; Return value:  Size  Location     Type
 27009 ;;                  1    wreg      enum E363
 27010 ;; Registers used:
 27011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27012 ;; Tracked objects:
 27013 ;;		On entry : 0/0
 27014 ;;		On exit  : 0/0
 27015 ;;		Unchanged: 0/0
 27016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27021 ;;Total ram usage:        1 bytes
 27022 ;; Hardware stack levels used: 1
 27023 ;; Hardware stack levels required when called: 6
 27024 ;; This function calls:
 27025 ;;		_I2C1_SetBuffer
 27026 ;;		_I2C1_SetDataCompleteCallback
 27027 ;; This function is called by:
 27028 ;;		_I2C1_Write1ByteRegister
 27029 ;;		_I2C1_DO_TX
 27030 ;;		_I2C1_DO_RX
 27031 ;;		_I2C1_DO_TX_EMPTY
 27032 ;;		_I2C1_DO_ADDRESS_NACK
 27033 ;;		_I2C1_DO_RX_EMPTY
 27034 ;; This function uses a non-reentrant model
 27035 ;;
 27036                           
 27037     12E6                     _wr1RegCompleteHandler@i2c1_master_example$F1706:	
 27038                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1706
 27039                           
 27040     12E6                     l12278:	
 27041                           ;incstack = 0
 27042                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1706: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27043                           
 27044                           
 27045                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27046     12E6  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1706@ptr,w
 27047     12E7  00F1               	movwf	I2C1_SetBuffer@buffer
 27048     12E8  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27049     12E9  3001               	movlw	1
 27050     12EA  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27051     12EB  3000               	movlw	0
 27052     12EC  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27053     12ED  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27054     12F0                     l12280:
 27055                           
 27056                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27057     12F0  3000               	movlw	0
 27058     12F1  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27059     12F2  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27060     12F3  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27061     12F4  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27062     12F7                     l12282:
 27063                           
 27064                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27065     12F7  3004               	movlw	4
 27066     12F8                     l1398:
 27067     12F8  0008               	return
 27068     12F9                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1706:
 27069                           
 27070                           	psect	text143
 27071     12D3                     __ptext143:	
 27072 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1700 *****************
 27073 ;; Defined at:
 27074 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27075 ;; Parameters:    Size  Location     Type
 27076 ;;  ptr             1    8[COMMON] PTR void 
 27077 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27078 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27079 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27080 ;; Auto vars:     Size  Location     Type
 27081 ;;		None
 27082 ;; Return value:  Size  Location     Type
 27083 ;;                  1    wreg      enum E363
 27084 ;; Registers used:
 27085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27086 ;; Tracked objects:
 27087 ;;		On entry : 0/0
 27088 ;;		On exit  : 0/0
 27089 ;;		Unchanged: 0/0
 27090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27091 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27095 ;;Total ram usage:        1 bytes
 27096 ;; Hardware stack levels used: 1
 27097 ;; Hardware stack levels required when called: 6
 27098 ;; This function calls:
 27099 ;;		_I2C1_SetBuffer
 27100 ;;		_I2C1_SetDataCompleteCallback
 27101 ;; This function is called by:
 27102 ;;		_I2C1_Read2ByteRegister
 27103 ;;		_I2C1_DO_TX
 27104 ;;		_I2C1_DO_RX
 27105 ;;		_I2C1_DO_TX_EMPTY
 27106 ;;		_I2C1_DO_ADDRESS_NACK
 27107 ;;		_I2C1_DO_RX_EMPTY
 27108 ;; This function uses a non-reentrant model
 27109 ;;
 27110                           
 27111     12D3                     _rd2RegCompleteHandler@i2c1_master_example$F1700:	
 27112                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1700
 27113                           
 27114     12D3                     l12270:	
 27115                           ;incstack = 0
 27116                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1700: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27117                           
 27118                           
 27119                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27120     12D3  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1700@ptr,w
 27121     12D4  00F1               	movwf	I2C1_SetBuffer@buffer
 27122     12D5  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27123     12D6  3002               	movlw	2
 27124     12D7  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27125     12D8  3000               	movlw	0
 27126     12D9  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27127     12DA  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27128     12DD                     l12272:
 27129                           
 27130                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27131     12DD  3000               	movlw	0
 27132     12DE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27133     12DF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27134     12E0  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27135     12E1  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27136     12E4                     l12274:
 27137                           
 27138                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27139     12E4  3002               	movlw	2
 27140     12E5                     l1395:
 27141     12E5  0008               	return
 27142     12E6                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1700:
 27143                           
 27144                           	psect	text144
 27145     12C0                     __ptext144:	
 27146 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1689 *****************
 27147 ;; Defined at:
 27148 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27149 ;; Parameters:    Size  Location     Type
 27150 ;;  ptr             1    8[COMMON] PTR void 
 27151 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27152 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27153 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27154 ;; Auto vars:     Size  Location     Type
 27155 ;;		None
 27156 ;; Return value:  Size  Location     Type
 27157 ;;                  1    wreg      enum E363
 27158 ;; Registers used:
 27159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27160 ;; Tracked objects:
 27161 ;;		On entry : 0/0
 27162 ;;		On exit  : 0/0
 27163 ;;		Unchanged: 0/0
 27164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27169 ;;Total ram usage:        1 bytes
 27170 ;; Hardware stack levels used: 1
 27171 ;; Hardware stack levels required when called: 6
 27172 ;; This function calls:
 27173 ;;		_I2C1_SetBuffer
 27174 ;;		_I2C1_SetDataCompleteCallback
 27175 ;; This function is called by:
 27176 ;;		_I2C1_Read1ByteRegister
 27177 ;;		_I2C1_DO_TX
 27178 ;;		_I2C1_DO_RX
 27179 ;;		_I2C1_DO_TX_EMPTY
 27180 ;;		_I2C1_DO_ADDRESS_NACK
 27181 ;;		_I2C1_DO_RX_EMPTY
 27182 ;; This function uses a non-reentrant model
 27183 ;;
 27184                           
 27185     12C0                     _rd1RegCompleteHandler@i2c1_master_example$F1689:	
 27186                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1689
 27187                           
 27188     12C0                     l12262:	
 27189                           ;incstack = 0
 27190                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1689: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27191                           
 27192                           
 27193                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27194     12C0  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1689@ptr,w
 27195     12C1  00F1               	movwf	I2C1_SetBuffer@buffer
 27196     12C2  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27197     12C3  3001               	movlw	1
 27198     12C4  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27199     12C5  3000               	movlw	0
 27200     12C6  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27201     12C7  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27202     12CA                     l12264:
 27203                           
 27204                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27205     12CA  3000               	movlw	0
 27206     12CB  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27207     12CC  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27208     12CD  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27209     12CE  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27210     12D1                     l12266:
 27211                           
 27212                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27213     12D1  3002               	movlw	2
 27214     12D2                     l1392:
 27215     12D2  0008               	return
 27216     12D3                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1689:
 27217                           
 27218                           	psect	text145
 27219     147C                     __ptext145:	
 27220 ;; *************** function _rdBlkRegCompleteHandler *****************
 27221 ;; Defined at:
 27222 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27223 ;; Parameters:    Size  Location     Type
 27224 ;;  p               1    8[COMMON] PTR void 
 27225 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27226 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27227 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27228 ;; Auto vars:     Size  Location     Type
 27229 ;;		None
 27230 ;; Return value:  Size  Location     Type
 27231 ;;                  1    wreg      enum E363
 27232 ;; Registers used:
 27233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27234 ;; Tracked objects:
 27235 ;;		On entry : 0/0
 27236 ;;		On exit  : 0/0
 27237 ;;		Unchanged: 0/0
 27238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27243 ;;Total ram usage:        1 bytes
 27244 ;; Hardware stack levels used: 1
 27245 ;; Hardware stack levels required when called: 6
 27246 ;; This function calls:
 27247 ;;		_I2C1_SetBuffer
 27248 ;;		_I2C1_SetDataCompleteCallback
 27249 ;; This function is called by:
 27250 ;;		_i2c_readDataBlock
 27251 ;;		_I2C1_DO_TX
 27252 ;;		_I2C1_DO_RX
 27253 ;;		_I2C1_DO_TX_EMPTY
 27254 ;;		_I2C1_DO_ADDRESS_NACK
 27255 ;;		_I2C1_DO_RX_EMPTY
 27256 ;; This function uses a non-reentrant model
 27257 ;;
 27258                           
 27259     147C                     _rdBlkRegCompleteHandler:	
 27260                           ;psect for function _rdBlkRegCompleteHandler
 27261                           
 27262     147C                     l12256:	
 27263                           ;incstack = 0
 27264                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27265                           
 27266                           
 27267                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27268     147C  0878               	movf	rdBlkRegCompleteHandler@p,w
 27269     147D  3E02               	addlw	2
 27270     147E  0086               	movwf	6
 27271     147F  0187               	clrf	7
 27272     1480  3F40               	moviw [0]fsr1
 27273     1481  00F1               	movwf	I2C1_SetBuffer@buffer
 27274     1482  3F41               	moviw [1]fsr1
 27275     1483  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27276     1484  0878               	movf	rdBlkRegCompleteHandler@p,w
 27277     1485  0086               	movwf	6
 27278     1486  0187               	clrf	7
 27279     1487  3F40               	moviw [0]fsr1
 27280     1488  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27281     1489  3F41               	moviw [1]fsr1
 27282     148A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27283     148B  3191  21E2  3194   	fcall	_I2C1_SetBuffer
 27284                           
 27285                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27286     148E  3000               	movlw	0
 27287     148F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27288     1490  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27289     1491  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27290     1492  3191  2144  3194   	fcall	_I2C1_SetDataCompleteCallback
 27291     1495                     l12258:
 27292                           
 27293                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27294     1495  3002               	movlw	2
 27295     1496                     l561:
 27296     1496  0008               	return
 27297     1497                     __end_of_rdBlkRegCompleteHandler:
 27298                           
 27299                           	psect	text146
 27300     12AD                     __ptext146:	
 27301 ;; *************** function _wr2RegCompleteHandler *****************
 27302 ;; Defined at:
 27303 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27304 ;; Parameters:    Size  Location     Type
 27305 ;;  p               1    8[COMMON] PTR void 
 27306 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27307 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27308 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27309 ;; Auto vars:     Size  Location     Type
 27310 ;;		None
 27311 ;; Return value:  Size  Location     Type
 27312 ;;                  1    wreg      enum E363
 27313 ;; Registers used:
 27314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27315 ;; Tracked objects:
 27316 ;;		On entry : 0/0
 27317 ;;		On exit  : 0/0
 27318 ;;		Unchanged: 0/0
 27319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27324 ;;Total ram usage:        1 bytes
 27325 ;; Hardware stack levels used: 1
 27326 ;; Hardware stack levels required when called: 6
 27327 ;; This function calls:
 27328 ;;		_I2C1_SetBuffer
 27329 ;;		_I2C1_SetDataCompleteCallback
 27330 ;; This function is called by:
 27331 ;;		_i2c_write2ByteRegister
 27332 ;;		_I2C1_DO_TX
 27333 ;;		_I2C1_DO_RX
 27334 ;;		_I2C1_DO_TX_EMPTY
 27335 ;;		_I2C1_DO_ADDRESS_NACK
 27336 ;;		_I2C1_DO_RX_EMPTY
 27337 ;; This function uses a non-reentrant model
 27338 ;;
 27339                           
 27340     12AD                     _wr2RegCompleteHandler:	
 27341                           ;psect for function _wr2RegCompleteHandler
 27342                           
 27343     12AD                     l12248:	
 27344                           ;incstack = 0
 27345                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27346                           
 27347                           
 27348                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27349     12AD  0878               	movf	wr2RegCompleteHandler@p,w
 27350     12AE  00F1               	movwf	I2C1_SetBuffer@buffer
 27351     12AF  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27352     12B0  3002               	movlw	2
 27353     12B1  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27354     12B2  3000               	movlw	0
 27355     12B3  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27356     12B4  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27357     12B7                     l12250:
 27358                           
 27359                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27360     12B7  3000               	movlw	0
 27361     12B8  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27362     12B9  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27363     12BA  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27364     12BB  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27365     12BE                     l12252:
 27366                           
 27367                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27368     12BE  3004               	movlw	4
 27369     12BF                     l549:
 27370     12BF  0008               	return
 27371     12C0                     __end_of_wr2RegCompleteHandler:
 27372                           
 27373                           	psect	text147
 27374     129A                     __ptext147:	
 27375 ;; *************** function _rd2RegCompleteHandler *****************
 27376 ;; Defined at:
 27377 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27378 ;; Parameters:    Size  Location     Type
 27379 ;;  p               1    8[COMMON] PTR void 
 27380 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27381 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27382 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27383 ;; Auto vars:     Size  Location     Type
 27384 ;;		None
 27385 ;; Return value:  Size  Location     Type
 27386 ;;                  1    wreg      enum E363
 27387 ;; Registers used:
 27388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27389 ;; Tracked objects:
 27390 ;;		On entry : 0/0
 27391 ;;		On exit  : 0/0
 27392 ;;		Unchanged: 0/0
 27393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27398 ;;Total ram usage:        1 bytes
 27399 ;; Hardware stack levels used: 1
 27400 ;; Hardware stack levels required when called: 6
 27401 ;; This function calls:
 27402 ;;		_I2C1_SetBuffer
 27403 ;;		_I2C1_SetDataCompleteCallback
 27404 ;; This function is called by:
 27405 ;;		_i2c_read2ByteRegister
 27406 ;;		_I2C1_DO_TX
 27407 ;;		_I2C1_DO_RX
 27408 ;;		_I2C1_DO_TX_EMPTY
 27409 ;;		_I2C1_DO_ADDRESS_NACK
 27410 ;;		_I2C1_DO_RX_EMPTY
 27411 ;; This function uses a non-reentrant model
 27412 ;;
 27413                           
 27414     129A                     _rd2RegCompleteHandler:	
 27415                           ;psect for function _rd2RegCompleteHandler
 27416                           
 27417     129A                     l12240:	
 27418                           ;incstack = 0
 27419                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27420                           
 27421                           
 27422                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27423     129A  0878               	movf	rd2RegCompleteHandler@p,w
 27424     129B  00F1               	movwf	I2C1_SetBuffer@buffer
 27425     129C  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27426     129D  3002               	movlw	2
 27427     129E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27428     129F  3000               	movlw	0
 27429     12A0  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27430     12A1  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27431     12A4                     l12242:
 27432                           
 27433                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27434     12A4  3000               	movlw	0
 27435     12A5  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27436     12A6  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27437     12A7  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27438     12A8  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27439     12AB                     l12244:
 27440                           
 27441                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27442     12AB  3002               	movlw	2
 27443     12AC                     l537:
 27444     12AC  0008               	return
 27445     12AD                     __end_of_rd2RegCompleteHandler:
 27446                           
 27447                           	psect	text148
 27448     1287                     __ptext148:	
 27449 ;; *************** function _rd1RegCompleteHandler *****************
 27450 ;; Defined at:
 27451 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27452 ;; Parameters:    Size  Location     Type
 27453 ;;  p               1    8[COMMON] PTR void 
 27454 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27455 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27456 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27457 ;; Auto vars:     Size  Location     Type
 27458 ;;		None
 27459 ;; Return value:  Size  Location     Type
 27460 ;;                  1    wreg      enum E363
 27461 ;; Registers used:
 27462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27463 ;; Tracked objects:
 27464 ;;		On entry : 0/0
 27465 ;;		On exit  : 0/0
 27466 ;;		Unchanged: 0/0
 27467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27472 ;;Total ram usage:        1 bytes
 27473 ;; Hardware stack levels used: 1
 27474 ;; Hardware stack levels required when called: 6
 27475 ;; This function calls:
 27476 ;;		_I2C1_SetBuffer
 27477 ;;		_I2C1_SetDataCompleteCallback
 27478 ;; This function is called by:
 27479 ;;		_i2c_read1ByteRegister
 27480 ;;		_I2C1_DO_TX
 27481 ;;		_I2C1_DO_RX
 27482 ;;		_I2C1_DO_TX_EMPTY
 27483 ;;		_I2C1_DO_ADDRESS_NACK
 27484 ;;		_I2C1_DO_RX_EMPTY
 27485 ;; This function uses a non-reentrant model
 27486 ;;
 27487                           
 27488     1287                     _rd1RegCompleteHandler:	
 27489                           ;psect for function _rd1RegCompleteHandler
 27490                           
 27491     1287                     l12232:	
 27492                           ;incstack = 0
 27493                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27494                           
 27495                           
 27496                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27497     1287  0878               	movf	rd1RegCompleteHandler@p,w
 27498     1288  00F1               	movwf	I2C1_SetBuffer@buffer
 27499     1289  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27500     128A  3001               	movlw	1
 27501     128B  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27502     128C  3000               	movlw	0
 27503     128D  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27504     128E  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27505     1291                     l12234:
 27506                           
 27507                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27508     1291  3000               	movlw	0
 27509     1292  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27510     1293  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27511     1294  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27512     1295  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27513     1298                     l12236:
 27514                           
 27515                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 27516     1298  3002               	movlw	2
 27517     1299                     l522:
 27518     1299  0008               	return
 27519     129A                     __end_of_rd1RegCompleteHandler:
 27520                           
 27521                           	psect	text149
 27522     1274                     __ptext149:	
 27523 ;; *************** function _wr1RegCompleteHandler *****************
 27524 ;; Defined at:
 27525 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27526 ;; Parameters:    Size  Location     Type
 27527 ;;  p               1    8[COMMON] PTR void 
 27528 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27529 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27530 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27531 ;; Auto vars:     Size  Location     Type
 27532 ;;		None
 27533 ;; Return value:  Size  Location     Type
 27534 ;;                  1    wreg      enum E363
 27535 ;; Registers used:
 27536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27537 ;; Tracked objects:
 27538 ;;		On entry : 0/0
 27539 ;;		On exit  : 0/0
 27540 ;;		Unchanged: 0/0
 27541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27542 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27546 ;;Total ram usage:        1 bytes
 27547 ;; Hardware stack levels used: 1
 27548 ;; Hardware stack levels required when called: 6
 27549 ;; This function calls:
 27550 ;;		_I2C1_SetBuffer
 27551 ;;		_I2C1_SetDataCompleteCallback
 27552 ;; This function is called by:
 27553 ;;		_i2c_write1ByteRegister
 27554 ;;		_I2C1_DO_TX
 27555 ;;		_I2C1_DO_RX
 27556 ;;		_I2C1_DO_TX_EMPTY
 27557 ;;		_I2C1_DO_ADDRESS_NACK
 27558 ;;		_I2C1_DO_RX_EMPTY
 27559 ;; This function uses a non-reentrant model
 27560 ;;
 27561                           
 27562     1274                     _wr1RegCompleteHandler:	
 27563                           ;psect for function _wr1RegCompleteHandler
 27564                           
 27565     1274                     l12224:	
 27566                           ;incstack = 0
 27567                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27568                           
 27569                           
 27570                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 27571     1274  0878               	movf	wr1RegCompleteHandler@p,w
 27572     1275  00F1               	movwf	I2C1_SetBuffer@buffer
 27573     1276  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27574     1277  3001               	movlw	1
 27575     1278  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27576     1279  3000               	movlw	0
 27577     127A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27578     127B  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27579     127E                     l12226:
 27580                           
 27581                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27582     127E  3000               	movlw	0
 27583     127F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27584     1280  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27585     1281  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27586     1282  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27587     1285                     l12228:
 27588                           
 27589                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 27590     1285  3004               	movlw	4
 27591     1286                     l501:
 27592     1286  0008               	return
 27593     1287                     __end_of_wr1RegCompleteHandler:
 27594                           
 27595                           	psect	text150
 27596     1261                     __ptext150:	
 27597 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1712 *****************
 27598 ;; Defined at:
 27599 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27600 ;; Parameters:    Size  Location     Type
 27601 ;;  ptr             1    8[COMMON] PTR void 
 27602 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27603 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27604 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27605 ;; Auto vars:     Size  Location     Type
 27606 ;;		None
 27607 ;; Return value:  Size  Location     Type
 27608 ;;                  1    wreg      enum E363
 27609 ;; Registers used:
 27610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27611 ;; Tracked objects:
 27612 ;;		On entry : 0/0
 27613 ;;		On exit  : 0/0
 27614 ;;		Unchanged: 0/0
 27615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27616 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27620 ;;Total ram usage:        1 bytes
 27621 ;; Hardware stack levels used: 1
 27622 ;; Hardware stack levels required when called: 6
 27623 ;; This function calls:
 27624 ;;		_I2C1_SetBuffer
 27625 ;;		_I2C1_SetDataCompleteCallback
 27626 ;; This function is called by:
 27627 ;;		_I2C1_Write2ByteRegister
 27628 ;;		_I2C1_DO_TX
 27629 ;;		_I2C1_DO_RX
 27630 ;;		_I2C1_DO_TX_EMPTY
 27631 ;;		_I2C1_DO_ADDRESS_NACK
 27632 ;;		_I2C1_DO_RX_EMPTY
 27633 ;; This function uses a non-reentrant model
 27634 ;;
 27635                           
 27636     1261                     _wr2RegCompleteHandler@i2c1_master_example$F1712:	
 27637                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1712
 27638                           
 27639     1261                     l12286:	
 27640                           ;incstack = 0
 27641                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1712: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27642                           
 27643                           
 27644                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 27645     1261  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1712@ptr,w
 27646     1262  00F1               	movwf	I2C1_SetBuffer@buffer
 27647     1263  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27648     1264  3002               	movlw	2
 27649     1265  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27650     1266  3000               	movlw	0
 27651     1267  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27652     1268  3191  21E2  3192   	fcall	_I2C1_SetBuffer
 27653     126B                     l12288:
 27654                           
 27655                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27656     126B  3000               	movlw	0
 27657     126C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27658     126D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27659     126E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27660     126F  3191  2144  3192   	fcall	_I2C1_SetDataCompleteCallback
 27661     1272                     l12290:
 27662                           
 27663                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 27664     1272  3004               	movlw	4
 27665     1273                     l1401:
 27666     1273  0008               	return
 27667     1274                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1712:
 27668                           
 27669                           	psect	text151
 27670     1144                     __ptext151:	
 27671 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 27672 ;; Defined at:
 27673 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 27674 ;; Parameters:    Size  Location     Type
 27675 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 27676 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1723(1), wr2RegCompleteHandler@i2c1_master_example$F1712(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1706(1), rd2RegCompleteHandler@i2c1_master_example$F1700(1), 
 27677 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1689(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27678 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27679 ;;  ptr             1    7[COMMON] PTR void 
 27680 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27681 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27682 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27683 ;; Auto vars:     Size  Location     Type
 27684 ;;		None
 27685 ;; Return value:  Size  Location     Type
 27686 ;;                  1    wreg      void 
 27687 ;; Registers used:
 27688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27689 ;; Tracked objects:
 27690 ;;		On entry : 0/0
 27691 ;;		On exit  : 0/0
 27692 ;;		Unchanged: 0/0
 27693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27694 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27698 ;;Total ram usage:        3 bytes
 27699 ;; Hardware stack levels used: 1
 27700 ;; Hardware stack levels required when called: 5
 27701 ;; This function calls:
 27702 ;;		_I2C1_SetCallback
 27703 ;; This function is called by:
 27704 ;;		_wr1RegCompleteHandler
 27705 ;;		_i2c_write1ByteRegister
 27706 ;;		_rd1RegCompleteHandler
 27707 ;;		_i2c_read1ByteRegister
 27708 ;;		_rd2RegCompleteHandler
 27709 ;;		_i2c_read2ByteRegister
 27710 ;;		_wr2RegCompleteHandler
 27711 ;;		_rdBlkRegCompleteHandler
 27712 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 27713 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 27714 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 27715 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 27716 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 27717 ;;		_i2c_write2ByteRegister
 27718 ;;		_i2c_readDataBlock
 27719 ;;		_I2C1_Read1ByteRegister
 27720 ;;		_I2C1_Read2ByteRegister
 27721 ;;		_I2C1_Write1ByteRegister
 27722 ;;		_I2C1_Write2ByteRegister
 27723 ;;		_I2C1_ReadDataBlock
 27724 ;; This function uses a non-reentrant model
 27725 ;;
 27726                           
 27727     1144                     _I2C1_SetDataCompleteCallback:	
 27728                           ;psect for function _I2C1_SetDataCompleteCallback
 27729                           
 27730     1144                     l12216:	
 27731                           ;incstack = 0
 27732                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 27733                           
 27734                           
 27735                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 27736     1144  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 27737     1145  00F2               	movwf	I2C1_SetCallback@cb+1
 27738     1146  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 27739     1147  00F1               	movwf	I2C1_SetCallback@cb
 27740     1148  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 27741     1149  00F3               	movwf	I2C1_SetCallback@ptr
 27742     114A  3000               	movlw	0
 27743     114B  3195  258E  3191   	fcall	_I2C1_SetCallback
 27744     114E                     l2434:
 27745     114E  0008               	return
 27746     114F                     __end_of_I2C1_SetDataCompleteCallback:
 27747                           
 27748                           	psect	text152
 27749     158E                     __ptext152:	
 27750 ;; *************** function _I2C1_SetCallback *****************
 27751 ;; Defined at:
 27752 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 27753 ;; Parameters:    Size  Location     Type
 27754 ;;  idx             1    wreg     enum E12583
 27755 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 27756 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1723(1), wr2RegCompleteHandler@i2c1_master_example$F1712(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1706(1), rd2RegCompleteHandler@i2c1_master_example$F1700(1), 
 27757 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1689(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27758 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27759 ;;  ptr             1    3[COMMON] PTR void 
 27760 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27761 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27762 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27763 ;; Auto vars:     Size  Location     Type
 27764 ;;  idx             1    4[COMMON] enum E12583
 27765 ;; Return value:  Size  Location     Type
 27766 ;;                  1    wreg      void 
 27767 ;; Registers used:
 27768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27769 ;; Tracked objects:
 27770 ;;		On entry : 0/0
 27771 ;;		On exit  : 0/0
 27772 ;;		Unchanged: 0/0
 27773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27774 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27778 ;;Total ram usage:        4 bytes
 27779 ;; Hardware stack levels used: 1
 27780 ;; Hardware stack levels required when called: 4
 27781 ;; This function calls:
 27782 ;;		Nothing
 27783 ;; This function is called by:
 27784 ;;		_I2C1_SetDataCompleteCallback
 27785 ;;		_I2C1_SetAddressNackCallback
 27786 ;;		_I2C1_SetWriteCollisionCallback
 27787 ;;		_I2C1_SetDataNackCallback
 27788 ;;		_I2C1_SetTimeoutCallback
 27789 ;; This function uses a non-reentrant model
 27790 ;;
 27791                           
 27792     158E                     _I2C1_SetCallback:	
 27793                           ;psect for function _I2C1_SetCallback
 27794                           
 27795                           
 27796                           ;incstack = 0
 27797                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 27798                           ;I2C1_SetCallback@idx stored from wreg
 27799     158E  00F4               	movwf	I2C1_SetCallback@idx
 27800     158F                     l12204:
 27801                           
 27802                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 27803     158F  0871               	movf	I2C1_SetCallback@cb,w
 27804     1590  0472               	iorwf	I2C1_SetCallback@cb+1,w
 27805     1591  1903               	btfsc	3,2
 27806     1592  2D94               	goto	u9561
 27807     1593  2D95               	goto	u9560
 27808     1594                     u9561:
 27809     1594  2DA4               	goto	l12208
 27810     1595                     u9560:
 27811     1595                     l12206:
 27812                           
 27813                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 27814     1595  3574               	lslf	I2C1_SetCallback@idx,w
 27815     1596  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 27816     1597  0086               	movwf	6
 27817     1598  0187               	clrf	7
 27818     1599  0871               	movf	I2C1_SetCallback@cb,w
 27819     159A  3FC0               	movwi [0]fsr1
 27820     159B  0872               	movf	I2C1_SetCallback@cb+1,w
 27821     159C  3FC1               	movwi [1]fsr1
 27822                           
 27823                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 27824     159D  0874               	movf	I2C1_SetCallback@idx,w
 27825     159E  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 27826     159F  0086               	movwf	6
 27827     15A0  0187               	clrf	7
 27828     15A1  0873               	movf	I2C1_SetCallback@ptr,w
 27829     15A2  0081               	movwf	1
 27830                           
 27831                           ;mcc_generated_files/i2c1_master.c: 304:     }
 27832     15A3  2DB1               	goto	l2451
 27833     15A4                     l12208:
 27834                           
 27835                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 27836     15A4  3574               	lslf	I2C1_SetCallback@idx,w
 27837     15A5  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 27838     15A6  0086               	movwf	6
 27839     15A7  0187               	clrf	7
 27840     15A8  30D8               	movlw	low _I2C1_CallbackReturnStop
 27841     15A9  3FC0               	movwi [0]fsr1
 27842     15AA  301F               	movlw	high _I2C1_CallbackReturnStop
 27843     15AB  3FC1               	movwi [1]fsr1
 27844                           
 27845                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 27846     15AC  0874               	movf	I2C1_SetCallback@idx,w
 27847     15AD  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 27848     15AE  0086               	movwf	6
 27849     15AF  0187               	clrf	7
 27850     15B0  0181               	clrf	1
 27851     15B1                     l2451:
 27852     15B1  0008               	return
 27853     15B2                     __end_of_I2C1_SetCallback:
 27854                           
 27855                           	psect	text153
 27856     11E2                     __ptext153:	
 27857 ;; *************** function _I2C1_SetBuffer *****************
 27858 ;; Defined at:
 27859 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;  buffer          2    1[COMMON] PTR void 
 27862 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 27863 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 27864 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), RAM(8192), i2c_readDataBlock@reg(1), 
 27865 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 27866 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
 27867 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 27868 ;;  bufferSize      2    3[COMMON] unsigned int 
 27869 ;; Auto vars:     Size  Location     Type
 27870 ;;		None
 27871 ;; Return value:  Size  Location     Type
 27872 ;;                  1    wreg      void 
 27873 ;; Registers used:
 27874 ;;		wreg
 27875 ;; Tracked objects:
 27876 ;;		On entry : 0/0
 27877 ;;		On exit  : 0/0
 27878 ;;		Unchanged: 0/0
 27879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27884 ;;Total ram usage:        4 bytes
 27885 ;; Hardware stack levels used: 1
 27886 ;; Hardware stack levels required when called: 4
 27887 ;; This function calls:
 27888 ;;		Nothing
 27889 ;; This function is called by:
 27890 ;;		_wr1RegCompleteHandler
 27891 ;;		_i2c_write1ByteRegister
 27892 ;;		_rd1RegCompleteHandler
 27893 ;;		_i2c_read1ByteRegister
 27894 ;;		_rd2RegCompleteHandler
 27895 ;;		_i2c_read2ByteRegister
 27896 ;;		_wr2RegCompleteHandler
 27897 ;;		_rdBlkRegCompleteHandler
 27898 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1689
 27899 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1700
 27900 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1706
 27901 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1712
 27902 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1723
 27903 ;;		_i2c_writeNBytes
 27904 ;;		_i2c_write2ByteRegister
 27905 ;;		_i2c_readDataBlock
 27906 ;;		_i2c_readNBytes
 27907 ;;		_I2C1_Read1ByteRegister
 27908 ;;		_I2C1_Read2ByteRegister
 27909 ;;		_I2C1_Write1ByteRegister
 27910 ;;		_I2C1_Write2ByteRegister
 27911 ;;		_I2C1_WriteNBytes
 27912 ;;		_I2C1_ReadNBytes
 27913 ;;		_I2C1_ReadDataBlock
 27914 ;; This function uses a non-reentrant model
 27915 ;;
 27916                           
 27917     11E2                     _I2C1_SetBuffer:	
 27918                           ;psect for function _I2C1_SetBuffer
 27919                           
 27920     11E2                     l12210:	
 27921                           ;incstack = 0
 27922                           ; Regs used in _I2C1_SetBuffer: [wreg]
 27923                           
 27924                           
 27925                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 27926     11E2  0141               	movlb	1	; select bank1
 27927     11E3  1DBD               	btfss	(_I2C1_Status^(0+128)+29),3
 27928     11E4  29E6               	goto	u9571
 27929     11E5  29E7               	goto	u9570
 27930     11E6                     u9571:
 27931     11E6  29F0               	goto	l2431
 27932     11E7                     u9570:
 27933     11E7                     l12212:
 27934                           
 27935                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 27936     11E7  0872               	movf	I2C1_SetBuffer@buffer+1,w
 27937     11E8  00B8               	movwf	((low ((_I2C1_Status| 0+23))+1))^(0+128)
 27938     11E9  0871               	movf	I2C1_SetBuffer@buffer,w
 27939     11EA  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 27940                           
 27941                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 27942     11EB  0874               	movf	I2C1_SetBuffer@bufferSize+1,w
 27943     11EC  00BA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 27944     11ED  0873               	movf	I2C1_SetBuffer@bufferSize,w
 27945     11EE  00B9               	movwf	(_I2C1_Status^(0+128)+25)
 27946     11EF                     l12214:
 27947                           
 27948                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 27949     11EF  11BD               	bcf	(_I2C1_Status^(0+128)+29),3
 27950     11F0                     l2431:
 27951     11F0  0008               	return
 27952     11F1                     __end_of_I2C1_SetBuffer:
 27953                           
 27954                           	psect	text154
 27955     1FE9                     __ptext154:	
 27956 ;; *************** function _I2C1_MasterStop *****************
 27957 ;; Defined at:
 27958 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;		None
 27961 ;; Auto vars:     Size  Location     Type
 27962 ;;		None
 27963 ;; Return value:  Size  Location     Type
 27964 ;;                  1    wreg      void 
 27965 ;; Registers used:
 27966 ;;		None
 27967 ;; Tracked objects:
 27968 ;;		On entry : 0/0
 27969 ;;		On exit  : 0/0
 27970 ;;		Unchanged: 0/0
 27971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27976 ;;Total ram usage:        0 bytes
 27977 ;; Hardware stack levels used: 1
 27978 ;; Hardware stack levels required when called: 4
 27979 ;; This function calls:
 27980 ;;		Nothing
 27981 ;; This function is called by:
 27982 ;;		_I2C1_DO_SEND_STOP
 27983 ;; This function uses a non-reentrant model
 27984 ;;
 27985                           
 27986     1FE9                     _I2C1_MasterStop:	
 27987                           ;psect for function _I2C1_MasterStop
 27988                           
 27989     1FE9                     l12220:	
 27990                           ;incstack = 0
 27991                           ; Regs used in _I2C1_MasterStop: []
 27992                           
 27993                           
 27994                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 27995     1FE9  0143               	movlb	3	; select bank3
 27996     1FEA  1511               	bsf	17,2	;volatile
 27997     1FEB                     l2597:
 27998     1FEB  0008               	return
 27999     1FEC                     __end_of_I2C1_MasterStop:
 28000                           
 28001                           	psect	text155
 28002     1FE6                     __ptext155:	
 28003 ;; *************** function _I2C1_MasterEnableRestart *****************
 28004 ;; Defined at:
 28005 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;		None
 28008 ;; Auto vars:     Size  Location     Type
 28009 ;;		None
 28010 ;; Return value:  Size  Location     Type
 28011 ;;                  1    wreg      void 
 28012 ;; Registers used:
 28013 ;;		None
 28014 ;; Tracked objects:
 28015 ;;		On entry : 0/0
 28016 ;;		On exit  : 0/0
 28017 ;;		Unchanged: 0/0
 28018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28023 ;;Total ram usage:        0 bytes
 28024 ;; Hardware stack levels used: 1
 28025 ;; Hardware stack levels required when called: 4
 28026 ;; This function calls:
 28027 ;;		Nothing
 28028 ;; This function is called by:
 28029 ;;		_I2C1_DO_SEND_RESTART_READ
 28030 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28031 ;;		_I2C1_DO_SEND_RESTART
 28032 ;;		_I2C1_DO_RX_EMPTY
 28033 ;; This function uses a non-reentrant model
 28034 ;;
 28035                           
 28036     1FE6                     _I2C1_MasterEnableRestart:	
 28037                           ;psect for function _I2C1_MasterEnableRestart
 28038                           
 28039     1FE6                     l12218:	
 28040                           ;incstack = 0
 28041                           ; Regs used in _I2C1_MasterEnableRestart: []
 28042                           
 28043                           
 28044                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28045     1FE6  0143               	movlb	3	; select bank3
 28046     1FE7  1491               	bsf	17,1	;volatile
 28047     1FE8                     l2585:
 28048     1FE8  0008               	return
 28049     1FE9                     __end_of_I2C1_MasterEnableRestart:
 28050                           
 28051                           	psect	text156
 28052     1FE3                     __ptext156:	
 28053 ;; *************** function _I2C1_MasterStart *****************
 28054 ;; Defined at:
 28055 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28056 ;; Parameters:    Size  Location     Type
 28057 ;;		None
 28058 ;; Auto vars:     Size  Location     Type
 28059 ;;		None
 28060 ;; Return value:  Size  Location     Type
 28061 ;;                  1    wreg      void 
 28062 ;; Registers used:
 28063 ;;		None
 28064 ;; Tracked objects:
 28065 ;;		On entry : 0/0
 28066 ;;		On exit  : 0/0
 28067 ;;		Unchanged: 0/0
 28068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28073 ;;Total ram usage:        0 bytes
 28074 ;; Hardware stack levels used: 1
 28075 ;; Hardware stack levels required when called: 4
 28076 ;; This function calls:
 28077 ;;		Nothing
 28078 ;; This function is called by:
 28079 ;;		_I2C1_MasterOperation
 28080 ;; This function uses a non-reentrant model
 28081 ;;
 28082                           
 28083     1FE3                     _I2C1_MasterStart:	
 28084                           ;psect for function _I2C1_MasterStart
 28085                           
 28086     1FE3                     l12534:	
 28087                           ;incstack = 0
 28088                           ; Regs used in _I2C1_MasterStart: []
 28089                           
 28090                           
 28091                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28092     1FE3  0143               	movlb	3	; select bank3
 28093     1FE4  1411               	bsf	17,0	;volatile
 28094     1FE5                     l2594:
 28095     1FE5  0008               	return
 28096     1FE6                     __end_of_I2C1_MasterStart:
 28097                           
 28098                           	psect	text157
 28099     13CE                     __ptext157:	
 28100 ;; *************** function _I2C1_Close *****************
 28101 ;; Defined at:
 28102 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28103 ;; Parameters:    Size  Location     Type
 28104 ;;		None
 28105 ;; Auto vars:     Size  Location     Type
 28106 ;;  returnValue     1    1[COMMON] enum E358
 28107 ;; Return value:  Size  Location     Type
 28108 ;;                  1    wreg      enum E358
 28109 ;; Registers used:
 28110 ;;		wreg, status,2, status,0, pclath, cstack
 28111 ;; Tracked objects:
 28112 ;;		On entry : 0/0
 28113 ;;		On exit  : 0/0
 28114 ;;		Unchanged: 0/0
 28115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28120 ;;Total ram usage:        1 bytes
 28121 ;; Hardware stack levels used: 1
 28122 ;; Hardware stack levels required when called: 5
 28123 ;; This function calls:
 28124 ;;		_I2C1_MasterClearIrq
 28125 ;;		_I2C1_MasterClose
 28126 ;;		_I2C1_MasterDisableIrq
 28127 ;; This function is called by:
 28128 ;;		_i2c_write1ByteRegister
 28129 ;;		_i2c_read1ByteRegister
 28130 ;;		_i2c_read2ByteRegister
 28131 ;;		_i2c_writeNBytes
 28132 ;;		_i2c_write2ByteRegister
 28133 ;;		_i2c_readDataBlock
 28134 ;;		_i2c_readNBytes
 28135 ;;		_I2C1_Read1ByteRegister
 28136 ;;		_I2C1_Read2ByteRegister
 28137 ;;		_I2C1_Write1ByteRegister
 28138 ;;		_I2C1_Write2ByteRegister
 28139 ;;		_I2C1_WriteNBytes
 28140 ;;		_I2C1_ReadNBytes
 28141 ;;		_I2C1_ReadDataBlock
 28142 ;; This function uses a non-reentrant model
 28143 ;;
 28144                           
 28145     13CE                     _I2C1_Close:	
 28146                           ;psect for function _I2C1_Close
 28147                           
 28148     13CE                     l12706:	
 28149                           ;incstack = 0
 28150                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28151                           
 28152                           
 28153                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28154     13CE  01F1               	clrf	I2C1_Close@returnValue
 28155     13CF  0AF1               	incf	I2C1_Close@returnValue,f
 28156                           
 28157                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28158     13D0  0141               	movlb	1	; select bank1
 28159     13D1  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 28160     13D2  2BD4               	goto	u9791
 28161     13D3  2BD5               	goto	u9790
 28162     13D4                     u9791:
 28163     13D4  2BE4               	goto	l12720
 28164     13D5                     u9790:
 28165     13D5                     l12708:
 28166                           
 28167                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28168     13D5  113D               	bcf	(_I2C1_Status^(0+128)+29),2
 28169     13D6                     l12710:
 28170                           
 28171                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28172     13D6  30FF               	movlw	255
 28173     13D7  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28174     13D8                     l12712:
 28175                           
 28176                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28177     13D8  319F  27DA  3193   	fcall	_I2C1_MasterClearIrq
 28178     13DB                     l12714:
 28179                           
 28180                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28181     13DB  319F  27E0  3193   	fcall	_I2C1_MasterDisableIrq
 28182     13DE                     l12716:
 28183                           
 28184                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28185     13DE  319F  27DD  3193   	fcall	_I2C1_MasterClose
 28186     13E1                     l12718:
 28187                           
 28188                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28189     13E1  0141               	movlb	1	; select bank1
 28190     13E2  083C               	movf	(_I2C1_Status^(0+128)+28),w
 28191     13E3  00F1               	movwf	I2C1_Close@returnValue
 28192     13E4                     l12720:
 28193                           
 28194                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28195     13E4  0871               	movf	I2C1_Close@returnValue,w
 28196     13E5                     l2412:
 28197     13E5  0008               	return
 28198     13E6                     __end_of_I2C1_Close:
 28199                           
 28200                           	psect	text158
 28201     1FE0                     __ptext158:	
 28202 ;; *************** function _I2C1_MasterDisableIrq *****************
 28203 ;; Defined at:
 28204 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28205 ;; Parameters:    Size  Location     Type
 28206 ;;		None
 28207 ;; Auto vars:     Size  Location     Type
 28208 ;;		None
 28209 ;; Return value:  Size  Location     Type
 28210 ;;                  1    wreg      void 
 28211 ;; Registers used:
 28212 ;;		None
 28213 ;; Tracked objects:
 28214 ;;		On entry : 0/0
 28215 ;;		On exit  : 0/0
 28216 ;;		Unchanged: 0/0
 28217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28222 ;;Total ram usage:        0 bytes
 28223 ;; Hardware stack levels used: 1
 28224 ;; Hardware stack levels required when called: 4
 28225 ;; This function calls:
 28226 ;;		Nothing
 28227 ;; This function is called by:
 28228 ;;		_I2C1_Close
 28229 ;;		_I2C1_SetTimeOut
 28230 ;; This function uses a non-reentrant model
 28231 ;;
 28232                           
 28233     1FE0                     _I2C1_MasterDisableIrq:	
 28234                           ;psect for function _I2C1_MasterDisableIrq
 28235                           
 28236     1FE0                     l12644:	
 28237                           ;incstack = 0
 28238                           ; Regs used in _I2C1_MasterDisableIrq: []
 28239                           
 28240                           
 28241                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28242     1FE0  014E               	movlb	14	; select bank14
 28243     1FE1  1019               	bcf	25,0	;volatile
 28244     1FE2                     l2621:
 28245     1FE2  0008               	return
 28246     1FE3                     __end_of_I2C1_MasterDisableIrq:
 28247                           
 28248                           	psect	text159
 28249     1FDD                     __ptext159:	
 28250 ;; *************** function _I2C1_MasterClose *****************
 28251 ;; Defined at:
 28252 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28253 ;; Parameters:    Size  Location     Type
 28254 ;;		None
 28255 ;; Auto vars:     Size  Location     Type
 28256 ;;		None
 28257 ;; Return value:  Size  Location     Type
 28258 ;;                  1    wreg      void 
 28259 ;; Registers used:
 28260 ;;		None
 28261 ;; Tracked objects:
 28262 ;;		On entry : 0/0
 28263 ;;		On exit  : 0/0
 28264 ;;		Unchanged: 0/0
 28265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28270 ;;Total ram usage:        0 bytes
 28271 ;; Hardware stack levels used: 1
 28272 ;; Hardware stack levels required when called: 4
 28273 ;; This function calls:
 28274 ;;		Nothing
 28275 ;; This function is called by:
 28276 ;;		_I2C1_Close
 28277 ;; This function uses a non-reentrant model
 28278 ;;
 28279                           
 28280     1FDD                     _I2C1_MasterClose:	
 28281                           ;psect for function _I2C1_MasterClose
 28282                           
 28283     1FDD                     l12646:	
 28284                           ;incstack = 0
 28285                           ; Regs used in _I2C1_MasterClose: []
 28286                           
 28287                           
 28288                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28289     1FDD  0143               	movlb	3	; select bank3
 28290     1FDE  1290               	bcf	16,5	;volatile
 28291     1FDF                     l2576:
 28292     1FDF  0008               	return
 28293     1FE0                     __end_of_I2C1_MasterClose:
 28294                           
 28295                           	psect	text160
 28296     1FDA                     __ptext160:	
 28297 ;; *************** function _I2C1_MasterClearIrq *****************
 28298 ;; Defined at:
 28299 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28300 ;; Parameters:    Size  Location     Type
 28301 ;;		None
 28302 ;; Auto vars:     Size  Location     Type
 28303 ;;		None
 28304 ;; Return value:  Size  Location     Type
 28305 ;;                  1    wreg      void 
 28306 ;; Registers used:
 28307 ;;		None
 28308 ;; Tracked objects:
 28309 ;;		On entry : 0/0
 28310 ;;		On exit  : 0/0
 28311 ;;		Unchanged: 0/0
 28312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28317 ;;Total ram usage:        0 bytes
 28318 ;; Hardware stack levels used: 1
 28319 ;; Hardware stack levels required when called: 4
 28320 ;; This function calls:
 28321 ;;		Nothing
 28322 ;; This function is called by:
 28323 ;;		_I2C1_Open
 28324 ;;		_I2C1_Close
 28325 ;;		_I2C1_MasterFsm
 28326 ;; This function uses a non-reentrant model
 28327 ;;
 28328                           
 28329     1FDA                     _I2C1_MasterClearIrq:	
 28330                           ;psect for function _I2C1_MasterClearIrq
 28331                           
 28332     1FDA                     l12360:	
 28333                           ;incstack = 0
 28334                           ; Regs used in _I2C1_MasterClearIrq: []
 28335                           
 28336                           
 28337                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28338     1FDA  014E               	movlb	14	; select bank14
 28339     1FDB  100F               	bcf	15,0	;volatile
 28340     1FDC                     l2624:
 28341     1FDC  0008               	return
 28342     1FDD                     __end_of_I2C1_MasterClearIrq:
 28343                           
 28344                           	psect	intentry
 28345     0004                     __pintentry:	
 28346 ;; *************** function _INTERRUPT_InterruptManager *****************
 28347 ;; Defined at:
 28348 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28349 ;; Parameters:    Size  Location     Type
 28350 ;;		None
 28351 ;; Auto vars:     Size  Location     Type
 28352 ;;		None
 28353 ;; Return value:  Size  Location     Type
 28354 ;;                  1    wreg      void 
 28355 ;; Registers used:
 28356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28357 ;; Tracked objects:
 28358 ;;		On entry : 0/0
 28359 ;;		On exit  : 0/0
 28360 ;;		Unchanged: 0/0
 28361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28366 ;;Total ram usage:        0 bytes
 28367 ;; Hardware stack levels used: 1
 28368 ;; Hardware stack levels required when called: 3
 28369 ;; This function calls:
 28370 ;;		NULL
 28371 ;;		_EUSART1_Receive_ISR
 28372 ;;		_EUSART1_Transmit_ISR
 28373 ;;		_EUSART2_Receive_ISR
 28374 ;;		_EUSART2_Transmit_ISR
 28375 ;;		_PIN_MANAGER_IOC
 28376 ;; This function is called by:
 28377 ;;		Interrupt level 1
 28378 ;; This function uses a non-reentrant model
 28379 ;;
 28380                           
 28381     0004                     _INTERRUPT_InterruptManager:
 28382                           
 28383                           ;incstack = 0
 28384 ;; hardware stack exceeded
 28385     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28386                           
 28387                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28388     0005  3180               	pagesel	$
 28389     0006                     i1l11944:
 28390                           
 28391                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28392     0006  014E               	movlb	14	; select bank14
 28393     0007  1E16               	btfss	22,4	;volatile
 28394     0008  280A               	goto	u935_21
 28395     0009  280B               	goto	u935_20
 28396     000A                     u935_21:
 28397     000A  2813               	goto	i1l1957
 28398     000B                     u935_20:
 28399     000B                     i1l11946:
 28400     000B  1E0C               	btfss	12,4	;volatile
 28401     000C  280E               	goto	u936_21
 28402     000D  280F               	goto	u936_20
 28403     000E                     u936_21:
 28404     000E  2813               	goto	i1l1957
 28405     000F                     u936_20:
 28406     000F                     i1l11948:
 28407                           
 28408                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28409     000F  3190  20E5  3180   	fcall	_PIN_MANAGER_IOC
 28410                           
 28411                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28412     0012  2853               	goto	i1l1969
 28413     0013                     i1l1957:	
 28414                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28415                           
 28416     0013  1F0B               	btfss	11,6	;volatile
 28417     0014  2816               	goto	u937_21
 28418     0015  2817               	goto	u937_20
 28419     0016                     u937_21:
 28420     0016  2853               	goto	i1l1969
 28421     0017                     u937_20:
 28422     0017                     i1l11950:
 28423                           
 28424                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28425     0017  1F19               	btfss	25,6	;volatile
 28426     0018  281A               	goto	u938_21
 28427     0019  281B               	goto	u938_20
 28428     001A                     u938_21:
 28429     001A  2826               	goto	i1l1960
 28430     001B                     u938_20:
 28431     001B                     i1l11952:
 28432     001B  1F0F               	btfss	15,6	;volatile
 28433     001C  281E               	goto	u939_21
 28434     001D  281F               	goto	u939_20
 28435     001E                     u939_21:
 28436     001E  2826               	goto	i1l1960
 28437     001F                     u939_20:
 28438     001F                     i1l11954:
 28439                           
 28440                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28441     001F  0141               	movlb	1	; select bank1
 28442     0020  086D               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28443     0021  008A               	movwf	10
 28444     0022  086C               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28445     0023  000A               	callw
 28446     0024  3180               	pagesel	$
 28447                           
 28448                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28449     0025  2853               	goto	i1l1969
 28450     0026                     i1l1960:	
 28451                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28452                           
 28453     0026  1F99               	btfss	25,7	;volatile
 28454     0027  2829               	goto	u940_21
 28455     0028  282A               	goto	u940_20
 28456     0029                     u940_21:
 28457     0029  2835               	goto	i1l1962
 28458     002A                     u940_20:
 28459     002A                     i1l11956:
 28460     002A  1F8F               	btfss	15,7	;volatile
 28461     002B  282D               	goto	u941_21
 28462     002C  282E               	goto	u941_20
 28463     002D                     u941_21:
 28464     002D  2835               	goto	i1l1962
 28465     002E                     u941_20:
 28466     002E                     i1l11958:
 28467                           
 28468                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28469     002E  0141               	movlb	1	; select bank1
 28470     002F  086B               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28471     0030  008A               	movwf	10
 28472     0031  086A               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28473     0032  000A               	callw
 28474     0033  3180               	pagesel	$
 28475                           
 28476                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28477     0034  2853               	goto	i1l1969
 28478     0035                     i1l1962:	
 28479                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28480                           
 28481     0035  1E19               	btfss	25,4	;volatile
 28482     0036  2838               	goto	u942_21
 28483     0037  2839               	goto	u942_20
 28484     0038                     u942_21:
 28485     0038  2844               	goto	i1l1964
 28486     0039                     u942_20:
 28487     0039                     i1l11960:
 28488     0039  1E0F               	btfss	15,4	;volatile
 28489     003A  283C               	goto	u943_21
 28490     003B  283D               	goto	u943_20
 28491     003C                     u943_21:
 28492     003C  2844               	goto	i1l1964
 28493     003D                     u943_20:
 28494     003D                     i1l11962:
 28495                           
 28496                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28497     003D  0142               	movlb	2	; select bank2
 28498     003E  0865               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28499     003F  008A               	movwf	10
 28500     0040  0864               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28501     0041  000A               	callw
 28502     0042  3180               	pagesel	$
 28503                           
 28504                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28505     0043  2853               	goto	i1l1969
 28506     0044                     i1l1964:	
 28507                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28508                           
 28509     0044  1E99               	btfss	25,5	;volatile
 28510     0045  2847               	goto	u944_21
 28511     0046  2848               	goto	u944_20
 28512     0047                     u944_21:
 28513     0047  2853               	goto	i1l1963
 28514     0048                     u944_20:
 28515     0048                     i1l11964:
 28516     0048  1E8F               	btfss	15,5	;volatile
 28517     0049  284B               	goto	u945_21
 28518     004A  284C               	goto	u945_20
 28519     004B                     u945_21:
 28520     004B  2853               	goto	i1l1963
 28521     004C                     u945_20:
 28522     004C                     i1l11966:
 28523                           
 28524                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 28525     004C  0142               	movlb	2	; select bank2
 28526     004D  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 28527     004E  008A               	movwf	10
 28528     004F  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 28529     0050  000A               	callw
 28530     0051  3180               	pagesel	$
 28531                           
 28532                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 28533     0052  2853               	goto	i1l1969
 28534     0053                     i1l1963:
 28535     0053                     i1l1969:
 28536     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 28537     0054  0009               	retfie
 28538     0055                     __end_of_INTERRUPT_InterruptManager:
 28539                           
 28540                           	psect	text162
 28541     10E5                     __ptext162:	
 28542 ;; *************** function _PIN_MANAGER_IOC *****************
 28543 ;; Defined at:
 28544 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 28545 ;; Parameters:    Size  Location     Type
 28546 ;;		None
 28547 ;; Auto vars:     Size  Location     Type
 28548 ;;		None
 28549 ;; Return value:  Size  Location     Type
 28550 ;;                  1    wreg      void 
 28551 ;; Registers used:
 28552 ;;		wreg, status,2, status,0, pclath, cstack
 28553 ;; Tracked objects:
 28554 ;;		On entry : 0/0
 28555 ;;		On exit  : 0/0
 28556 ;;		Unchanged: 0/0
 28557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28562 ;;Total ram usage:        0 bytes
 28563 ;; Hardware stack levels used: 1
 28564 ;; Hardware stack levels required when called: 2
 28565 ;; This function calls:
 28566 ;;		_IOCAF6_ISR
 28567 ;; This function is called by:
 28568 ;;		_INTERRUPT_InterruptManager
 28569 ;; This function uses a non-reentrant model
 28570 ;;
 28571                           
 28572     10E5                     _PIN_MANAGER_IOC:	
 28573                           ;psect for function _PIN_MANAGER_IOC
 28574                           
 28575     10E5                     i1l10150:	
 28576                           ;incstack = 0
 28577 ;; hardware stack exceeded
 28578                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 28579                           
 28580                           
 28581                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 28582     10E5  017E               	movlb	62	; select bank62
 28583     10E6  1F3F               	btfss	63,6	;volatile
 28584     10E7  28E9               	goto	u712_21
 28585     10E8  28EA               	goto	u712_20
 28586     10E9                     u712_21:
 28587     10E9  28ED               	goto	i1l2109
 28588     10EA                     u712_20:
 28589     10EA                     i1l10152:
 28590                           
 28591                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 28592     10EA  3191  21D3  3190   	fcall	_IOCAF6_ISR
 28593     10ED                     i1l2109:
 28594     10ED  0008               	return
 28595     10EE                     __end_of_PIN_MANAGER_IOC:
 28596                           
 28597                           	psect	text163
 28598     11D3                     __ptext163:	
 28599 ;; *************** function _IOCAF6_ISR *****************
 28600 ;; Defined at:
 28601 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 28602 ;; Parameters:    Size  Location     Type
 28603 ;;		None
 28604 ;; Auto vars:     Size  Location     Type
 28605 ;;		None
 28606 ;; Return value:  Size  Location     Type
 28607 ;;                  1    wreg      void 
 28608 ;; Registers used:
 28609 ;;		wreg, status,2, status,0, pclath, cstack
 28610 ;; Tracked objects:
 28611 ;;		On entry : 0/0
 28612 ;;		On exit  : 0/0
 28613 ;;		Unchanged: 0/0
 28614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28619 ;;Total ram usage:        0 bytes
 28620 ;; Hardware stack levels used: 1
 28621 ;; Hardware stack levels required when called: 1
 28622 ;; This function calls:
 28623 ;;		NULL
 28624 ;;		_IOCAF6_DefaultInterruptHandler
 28625 ;; This function is called by:
 28626 ;;		_PIN_MANAGER_IOC
 28627 ;; This function uses a non-reentrant model
 28628 ;;
 28629                           
 28630     11D3                     _IOCAF6_ISR:	
 28631                           ;psect for function _IOCAF6_ISR
 28632                           
 28633     11D3                     i1l9634:	
 28634                           ;incstack = 0
 28635 ;; hardware stack exceeded
 28636                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 28637                           
 28638                           
 28639                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 28640     11D3  0141               	movlb	1	; select bank1
 28641     11D4  0866               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28642     11D5  0467               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28643     11D6  1903               	btfsc	3,2
 28644     11D7  29D9               	goto	u669_21
 28645     11D8  29DA               	goto	u669_20
 28646     11D9                     u669_21:
 28647     11D9  29DF               	goto	i1l9638
 28648     11DA                     u669_20:
 28649     11DA                     i1l9636:
 28650                           
 28651                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 28652     11DA  0867               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28653     11DB  008A               	movwf	10
 28654     11DC  0866               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28655     11DD  000A               	callw
 28656     11DE  3191               	pagesel	$
 28657     11DF                     i1l9638:
 28658                           
 28659                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 28660     11DF  017E               	movlb	62	; select bank62
 28661     11E0  133F               	bcf	63,6	;volatile
 28662     11E1                     i1l2113:
 28663     11E1  0008               	return
 28664     11E2                     __end_of_IOCAF6_ISR:
 28665                           
 28666                           	psect	text164
 28667     1FD7                     __ptext164:	
 28668 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 28669 ;; Defined at:
 28670 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 28671 ;; Parameters:    Size  Location     Type
 28672 ;;		None
 28673 ;; Auto vars:     Size  Location     Type
 28674 ;;		None
 28675 ;; Return value:  Size  Location     Type
 28676 ;;                  1    wreg      void 
 28677 ;; Registers used:
 28678 ;;		None
 28679 ;; Tracked objects:
 28680 ;;		On entry : 0/0
 28681 ;;		On exit  : 0/0
 28682 ;;		Unchanged: 0/0
 28683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28688 ;;Total ram usage:        0 bytes
 28689 ;; Hardware stack levels used: 1
 28690 ;; This function calls:
 28691 ;;		Nothing
 28692 ;; This function is called by:
 28693 ;;		_PIN_MANAGER_Initialize
 28694 ;;		_IOCAF6_ISR
 28695 ;; This function uses a non-reentrant model
 28696 ;;
 28697                           
 28698     1FD7                     _IOCAF6_DefaultInterruptHandler:	
 28699                           ;psect for function _IOCAF6_DefaultInterruptHandler
 28700                           
 28701     1FD7                     i1l2119:	
 28702                           ;incstack = 0
 28703 ;; hardware stack exceeded
 28704                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 28705                           
 28706     1FD7  0008               	return
 28707     1FD8                     __end_of_IOCAF6_DefaultInterruptHandler:
 28708                           
 28709                           	psect	text165
 28710     1548                     __ptext165:	
 28711 ;; *************** function _EUSART1_Transmit_ISR *****************
 28712 ;; Defined at:
 28713 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 28714 ;; Parameters:    Size  Location     Type
 28715 ;;		None
 28716 ;; Auto vars:     Size  Location     Type
 28717 ;;		None
 28718 ;; Return value:  Size  Location     Type
 28719 ;;                  1    wreg      void 
 28720 ;; Registers used:
 28721 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28722 ;; Tracked objects:
 28723 ;;		On entry : 0/0
 28724 ;;		On exit  : 0/0
 28725 ;;		Unchanged: 0/0
 28726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28731 ;;Total ram usage:        1 bytes
 28732 ;; Hardware stack levels used: 1
 28733 ;; This function calls:
 28734 ;;		Nothing
 28735 ;; This function is called by:
 28736 ;;		_EUSART1_Initialize
 28737 ;;		_INTERRUPT_InterruptManager
 28738 ;; This function uses a non-reentrant model
 28739 ;;
 28740                           
 28741     1548                     _EUSART1_Transmit_ISR:	
 28742                           ;psect for function _EUSART1_Transmit_ISR
 28743                           
 28744     1548                     i1l10118:	
 28745                           ;incstack = 0
 28746                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 28747                           
 28748                           
 28749                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 28750     1548  3008               	movlw	8
 28751     1549  0140               	movlb	0	; select bank0
 28752     154A  0256               	subwf	_eusart1TxBufferRemaining,w	;volatile
 28753     154B  1803               	skipnc
 28754     154C  2D4E               	goto	u707_21
 28755     154D  2D4F               	goto	u707_20
 28756     154E                     u707_21:
 28757     154E  2D68               	goto	i1l1894
 28758     154F                     u707_20:
 28759     154F                     i1l10120:
 28760                           
 28761                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 28762     154F  0857               	movf	_eusart1TxTail,w
 28763     1550  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 28764     1551  0086               	movwf	6
 28765     1552  3001               	movlw	1	; select bank2/3
 28766     1553  0087               	movwf	7
 28767     1554  0801               	movf	1,w
 28768     1555  0142               	movlb	2	; select bank2
 28769     1556  009A               	movwf	26	;volatile
 28770     1557                     i1l10122:
 28771     1557  3001               	movlw	1
 28772     1558  00F0               	movwf	??_EUSART1_Transmit_ISR
 28773     1559  0870               	movf	??_EUSART1_Transmit_ISR,w
 28774     155A  0140               	movlb	0	; select bank0
 28775     155B  07D7               	addwf	_eusart1TxTail,f	;volatile
 28776     155C                     i1l10124:
 28777                           
 28778                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 28779     155C  3008               	movlw	8
 28780     155D  0257               	subwf	_eusart1TxTail,w	;volatile
 28781     155E  1C03               	skipc
 28782     155F  2D61               	goto	u708_21
 28783     1560  2D62               	goto	u708_20
 28784     1561                     u708_21:
 28785     1561  2D63               	goto	i1l10128
 28786     1562                     u708_20:
 28787     1562                     i1l10126:
 28788                           
 28789                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 28790     1562  01D7               	clrf	_eusart1TxTail	;volatile
 28791     1563                     i1l10128:
 28792                           
 28793                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 28794     1563  3001               	movlw	1
 28795     1564  00F0               	movwf	??_EUSART1_Transmit_ISR
 28796     1565  0870               	movf	??_EUSART1_Transmit_ISR,w
 28797     1566  07D6               	addwf	_eusart1TxBufferRemaining,f	;volatile
 28798                           
 28799                           ;mcc_generated_files/eusart1.c: 218:     }
 28800     1567  2D6A               	goto	i1l1897
 28801     1568                     i1l1894:	
 28802                           ;mcc_generated_files/eusart1.c: 219:     else
 28803                           
 28804                           
 28805                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 28806     1568  014E               	movlb	14	; select bank14
 28807     1569  1219               	bcf	25,4	;volatile
 28808     156A                     i1l1897:
 28809     156A  0008               	return
 28810     156B                     __end_of_EUSART1_Transmit_ISR:
 28811                           
 28812                           	psect	text166
 28813     1526                     __ptext166:	
 28814 ;; *************** function _EUSART2_Transmit_ISR *****************
 28815 ;; Defined at:
 28816 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 28817 ;; Parameters:    Size  Location     Type
 28818 ;;		None
 28819 ;; Auto vars:     Size  Location     Type
 28820 ;;		None
 28821 ;; Return value:  Size  Location     Type
 28822 ;;                  1    wreg      void 
 28823 ;; Registers used:
 28824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28825 ;; Tracked objects:
 28826 ;;		On entry : 0/0
 28827 ;;		On exit  : 0/0
 28828 ;;		Unchanged: 0/0
 28829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28834 ;;Total ram usage:        1 bytes
 28835 ;; Hardware stack levels used: 1
 28836 ;; This function calls:
 28837 ;;		Nothing
 28838 ;; This function is called by:
 28839 ;;		_EUSART2_Initialize
 28840 ;;		_INTERRUPT_InterruptManager
 28841 ;; This function uses a non-reentrant model
 28842 ;;
 28843                           
 28844     1526                     _EUSART2_Transmit_ISR:	
 28845                           ;psect for function _EUSART2_Transmit_ISR
 28846                           
 28847     1526                     i1l10086:	
 28848                           ;incstack = 0
 28849                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 28850                           
 28851                           
 28852                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 28853     1526  3008               	movlw	8
 28854     1527  0140               	movlb	0	; select bank0
 28855     1528  025B               	subwf	_eusart2TxBufferRemaining,w	;volatile
 28856     1529  1803               	skipnc
 28857     152A  2D2C               	goto	u702_21
 28858     152B  2D2D               	goto	u702_20
 28859     152C                     u702_21:
 28860     152C  2D45               	goto	i1l1744
 28861     152D                     u702_20:
 28862     152D                     i1l10088:
 28863                           
 28864                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 28865     152D  085C               	movf	_eusart2TxTail,w
 28866     152E  3ECE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 28867     152F  0086               	movwf	6
 28868     1530  0187               	clrf	7
 28869     1531  0801               	movf	1,w
 28870     1532  0154               	movlb	20	; select bank20
 28871     1533  009A               	movwf	26	;volatile
 28872     1534                     i1l10090:
 28873     1534  3001               	movlw	1
 28874     1535  00F0               	movwf	??_EUSART2_Transmit_ISR
 28875     1536  0870               	movf	??_EUSART2_Transmit_ISR,w
 28876     1537  0140               	movlb	0	; select bank0
 28877     1538  07DC               	addwf	_eusart2TxTail,f	;volatile
 28878     1539                     i1l10092:
 28879                           
 28880                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 28881     1539  3008               	movlw	8
 28882     153A  025C               	subwf	_eusart2TxTail,w	;volatile
 28883     153B  1C03               	skipc
 28884     153C  2D3E               	goto	u703_21
 28885     153D  2D3F               	goto	u703_20
 28886     153E                     u703_21:
 28887     153E  2D40               	goto	i1l10096
 28888     153F                     u703_20:
 28889     153F                     i1l10094:
 28890                           
 28891                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 28892     153F  01DC               	clrf	_eusart2TxTail	;volatile
 28893     1540                     i1l10096:
 28894                           
 28895                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 28896     1540  3001               	movlw	1
 28897     1541  00F0               	movwf	??_EUSART2_Transmit_ISR
 28898     1542  0870               	movf	??_EUSART2_Transmit_ISR,w
 28899     1543  07DB               	addwf	_eusart2TxBufferRemaining,f	;volatile
 28900                           
 28901                           ;mcc_generated_files/eusart2.c: 209:     }
 28902     1544  2D47               	goto	i1l1747
 28903     1545                     i1l1744:	
 28904                           ;mcc_generated_files/eusart2.c: 210:     else
 28905                           
 28906                           
 28907                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 28908     1545  014E               	movlb	14	; select bank14
 28909     1546  1319               	bcf	25,6	;volatile
 28910     1547                     i1l1747:
 28911     1547  0008               	return
 28912     1548                     __end_of_EUSART2_Transmit_ISR:
 28913                           
 28914                           	psect	text167
 28915     0B0C                     __ptext167:	
 28916 ;; *************** function _EUSART1_Receive_ISR *****************
 28917 ;; Defined at:
 28918 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 28919 ;; Parameters:    Size  Location     Type
 28920 ;;		None
 28921 ;; Auto vars:     Size  Location     Type
 28922 ;;		None
 28923 ;; Return value:  Size  Location     Type
 28924 ;;                  1    wreg      void 
 28925 ;; Registers used:
 28926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28927 ;; Tracked objects:
 28928 ;;		On entry : 0/0
 28929 ;;		On exit  : 0/0
 28930 ;;		Unchanged: 0/0
 28931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28936 ;;Total ram usage:        0 bytes
 28937 ;; Hardware stack levels used: 1
 28938 ;; Hardware stack levels required when called: 2
 28939 ;; This function calls:
 28940 ;;		NULL
 28941 ;;		_EUSART1_DefaultErrorHandler
 28942 ;;		_EUSART1_DefaultFramingErrorHandler
 28943 ;;		_EUSART1_DefaultOverrunErrorHandler
 28944 ;;		_EUSART1_RxDataHandler
 28945 ;; This function is called by:
 28946 ;;		_EUSART1_Initialize
 28947 ;;		_INTERRUPT_InterruptManager
 28948 ;; This function uses a non-reentrant model
 28949 ;;
 28950                           
 28951     0B0C                     _EUSART1_Receive_ISR:	
 28952                           ;psect for function _EUSART1_Receive_ISR
 28953                           
 28954     0B0C                     i1l10130:	
 28955                           ;incstack = 0
 28956 ;; hardware stack exceeded
 28957                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 28958                           
 28959                           
 28960                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 28961     0B0C  0140               	movlb	0	; select bank0
 28962     0B0D  0855               	movf	_eusart1RxHead,w	;volatile
 28963     0B0E  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 28964     0B0F  0086               	movwf	6
 28965     0B10  0187               	clrf	7
 28966     0B11  0181               	clrf	1
 28967     0B12                     i1l10132:
 28968                           
 28969                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 28970     0B12  0142               	movlb	2	; select bank2
 28971     0B13  1D1D               	btfss	29,2	;volatile
 28972     0B14  2B16               	goto	u709_21
 28973     0B15  2B17               	goto	u709_20
 28974     0B16                     u709_21:
 28975     0B16  2B23               	goto	i1l10138
 28976     0B17                     u709_20:
 28977     0B17                     i1l10134:
 28978                           
 28979                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 28980     0B17  0140               	movlb	0	; select bank0
 28981     0B18  0855               	movf	_eusart1RxHead,w	;volatile
 28982     0B19  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 28983     0B1A  0086               	movwf	6
 28984     0B1B  0187               	clrf	7
 28985     0B1C  1481               	bsf	1,1
 28986     0B1D                     i1l10136:
 28987                           
 28988                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 28989     0B1D  0142               	movlb	2	; select bank2
 28990     0B1E  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 28991     0B1F  008A               	movwf	10
 28992     0B20  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 28993     0B21  000A               	callw
 28994     0B22  318B               	pagesel	$
 28995     0B23                     i1l10138:
 28996                           
 28997                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 28998     0B23  0142               	movlb	2	; select bank2
 28999     0B24  1C9D               	btfss	29,1	;volatile
 29000     0B25  2B27               	goto	u710_21
 29001     0B26  2B28               	goto	u710_20
 29002     0B27                     u710_21:
 29003     0B27  2B34               	goto	i1l10144
 29004     0B28                     u710_20:
 29005     0B28                     i1l10140:
 29006                           
 29007                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29008     0B28  0140               	movlb	0	; select bank0
 29009     0B29  0855               	movf	_eusart1RxHead,w	;volatile
 29010     0B2A  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29011     0B2B  0086               	movwf	6
 29012     0B2C  0187               	clrf	7
 29013     0B2D  1501               	bsf	1,2
 29014     0B2E                     i1l10142:
 29015                           
 29016                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29017     0B2E  0142               	movlb	2	; select bank2
 29018     0B2F  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29019     0B30  008A               	movwf	10
 29020     0B31  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29021     0B32  000A               	callw
 29022     0B33  318B               	pagesel	$
 29023     0B34                     i1l10144:
 29024                           
 29025                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29026     0B34  0140               	movlb	0	; select bank0
 29027     0B35  0855               	movf	_eusart1RxHead,w	;volatile
 29028     0B36  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29029     0B37  0086               	movwf	6
 29030     0B38  0187               	clrf	7
 29031     0B39  0801               	movf	1,w
 29032     0B3A  1903               	btfsc	3,2
 29033     0B3B  2B3D               	goto	u711_21
 29034     0B3C  2B3E               	goto	u711_20
 29035     0B3D                     u711_21:
 29036     0B3D  2B45               	goto	i1l10148
 29037     0B3E                     u711_20:
 29038     0B3E                     i1l10146:
 29039                           
 29040                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29041     0B3E  0142               	movlb	2	; select bank2
 29042     0B3F  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29043     0B40  008A               	movwf	10
 29044     0B41  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 29045     0B42  000A               	callw
 29046     0B43  318B               	pagesel	$
 29047                           
 29048                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29049     0B44  2B48               	goto	i1l1904
 29050     0B45                     i1l10148:
 29051                           
 29052                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29053     0B45  3194  2462  318B   	fcall	_EUSART1_RxDataHandler
 29054     0B48                     i1l1904:
 29055     0B48  0008               	return
 29056     0B49                     __end_of_EUSART1_Receive_ISR:
 29057                           
 29058                           	psect	text168
 29059     0A25                     __ptext168:	
 29060 ;; *************** function _EUSART2_Receive_ISR *****************
 29061 ;; Defined at:
 29062 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29063 ;; Parameters:    Size  Location     Type
 29064 ;;		None
 29065 ;; Auto vars:     Size  Location     Type
 29066 ;;		None
 29067 ;; Return value:  Size  Location     Type
 29068 ;;                  1    wreg      void 
 29069 ;; Registers used:
 29070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29071 ;; Tracked objects:
 29072 ;;		On entry : 0/0
 29073 ;;		On exit  : 0/0
 29074 ;;		Unchanged: 0/0
 29075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29080 ;;Total ram usage:        0 bytes
 29081 ;; Hardware stack levels used: 1
 29082 ;; Hardware stack levels required when called: 2
 29083 ;; This function calls:
 29084 ;;		NULL
 29085 ;;		_EUSART2_DefaultErrorHandler
 29086 ;;		_EUSART2_DefaultFramingErrorHandler
 29087 ;;		_EUSART2_DefaultOverrunErrorHandler
 29088 ;;		_EUSART2_RxDataHandler
 29089 ;; This function is called by:
 29090 ;;		_EUSART2_Initialize
 29091 ;;		_INTERRUPT_InterruptManager
 29092 ;; This function uses a non-reentrant model
 29093 ;;
 29094                           
 29095     0A25                     _EUSART2_Receive_ISR:	
 29096                           ;psect for function _EUSART2_Receive_ISR
 29097                           
 29098     0A25                     i1l10098:	
 29099                           ;incstack = 0
 29100 ;; hardware stack exceeded
 29101                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29102                           
 29103                           
 29104                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29105     0A25  087C               	movf	_eusart2RxHead,w	;volatile
 29106     0A26  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29107     0A27  0086               	movwf	6
 29108     0A28  0187               	clrf	7
 29109     0A29  0181               	clrf	1
 29110     0A2A                     i1l10100:
 29111                           
 29112                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29113     0A2A  0154               	movlb	20	; select bank20
 29114     0A2B  1D1D               	btfss	29,2	;volatile
 29115     0A2C  2A2E               	goto	u704_21
 29116     0A2D  2A2F               	goto	u704_20
 29117     0A2E                     u704_21:
 29118     0A2E  2A3A               	goto	i1l10106
 29119     0A2F                     u704_20:
 29120     0A2F                     i1l10102:
 29121                           
 29122                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29123     0A2F  087C               	movf	_eusart2RxHead,w	;volatile
 29124     0A30  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29125     0A31  0086               	movwf	6
 29126     0A32  0187               	clrf	7
 29127     0A33  1481               	bsf	1,1
 29128     0A34                     i1l10104:
 29129                           
 29130                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29131     0A34  0141               	movlb	1	; select bank1
 29132     0A35  0869               	movf	(_EUSART2_FramingErrorHandler+1)^(0+128),w
 29133     0A36  008A               	movwf	10
 29134     0A37  0868               	movf	_EUSART2_FramingErrorHandler^(0+128),w
 29135     0A38  000A               	callw
 29136     0A39  318A               	pagesel	$
 29137     0A3A                     i1l10106:
 29138                           
 29139                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29140     0A3A  0154               	movlb	20	; select bank20
 29141     0A3B  1C9D               	btfss	29,1	;volatile
 29142     0A3C  2A3E               	goto	u705_21
 29143     0A3D  2A3F               	goto	u705_20
 29144     0A3E                     u705_21:
 29145     0A3E  2A4A               	goto	i1l10112
 29146     0A3F                     u705_20:
 29147     0A3F                     i1l10108:
 29148                           
 29149                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29150     0A3F  087C               	movf	_eusart2RxHead,w	;volatile
 29151     0A40  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29152     0A41  0086               	movwf	6
 29153     0A42  0187               	clrf	7
 29154     0A43  1501               	bsf	1,2
 29155     0A44                     i1l10110:
 29156                           
 29157                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29158     0A44  0142               	movlb	2	; select bank2
 29159     0A45  0869               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29160     0A46  008A               	movwf	10
 29161     0A47  0868               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29162     0A48  000A               	callw
 29163     0A49  318A               	pagesel	$
 29164     0A4A                     i1l10112:
 29165                           
 29166                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29167     0A4A  087C               	movf	_eusart2RxHead,w	;volatile
 29168     0A4B  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29169     0A4C  0086               	movwf	6
 29170     0A4D  0187               	clrf	7
 29171     0A4E  0801               	movf	1,w
 29172     0A4F  1903               	btfsc	3,2
 29173     0A50  2A52               	goto	u706_21
 29174     0A51  2A53               	goto	u706_20
 29175     0A52                     u706_21:
 29176     0A52  2A5A               	goto	i1l10116
 29177     0A53                     u706_20:
 29178     0A53                     i1l10114:
 29179                           
 29180                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29181     0A53  0142               	movlb	2	; select bank2
 29182     0A54  0867               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29183     0A55  008A               	movwf	10
 29184     0A56  0866               	movf	_EUSART2_ErrorHandler^(0+256),w
 29185     0A57  000A               	callw
 29186     0A58  318A               	pagesel	$
 29187                           
 29188                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29189     0A59  2A5D               	goto	i1l1754
 29190     0A5A                     i1l10116:
 29191                           
 29192                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29193     0A5A  3193  23FE  318A   	fcall	_EUSART2_RxDataHandler
 29194     0A5D                     i1l1754:
 29195     0A5D  0008               	return
 29196     0A5E                     __end_of_EUSART2_Receive_ISR:
 29197                           
 29198                           	psect	text169
 29199     1006                     __ptext169:	
 29200 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29201 ;; Defined at:
 29202 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29203 ;; Parameters:    Size  Location     Type
 29204 ;;		None
 29205 ;; Auto vars:     Size  Location     Type
 29206 ;;		None
 29207 ;; Return value:  Size  Location     Type
 29208 ;;                  1    wreg      void 
 29209 ;; Registers used:
 29210 ;;		None
 29211 ;; Tracked objects:
 29212 ;;		On entry : 0/0
 29213 ;;		On exit  : 0/0
 29214 ;;		Unchanged: 0/0
 29215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29220 ;;Total ram usage:        0 bytes
 29221 ;; Hardware stack levels used: 1
 29222 ;; This function calls:
 29223 ;;		Nothing
 29224 ;; This function is called by:
 29225 ;;		_EUSART2_Initialize
 29226 ;;		_EUSART2_Receive_ISR
 29227 ;; This function uses a non-reentrant model
 29228 ;;
 29229                           
 29230     1006                     _EUSART2_DefaultOverrunErrorHandler:	
 29231                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29232                           
 29233     1006                     i1l9504:	
 29234                           ;incstack = 0
 29235 ;; hardware stack exceeded
 29236                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29237                           
 29238                           
 29239                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29240     1006  0154               	movlb	20	; select bank20
 29241     1007  121D               	bcf	29,4	;volatile
 29242                           
 29243                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29244     1008  161D               	bsf	29,4	;volatile
 29245     1009                     i1l1764:
 29246     1009  0008               	return
 29247     100A                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29248                           
 29249                           	psect	text170
 29250     1FD6                     __ptext170:	
 29251 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29252 ;; Defined at:
 29253 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29254 ;; Parameters:    Size  Location     Type
 29255 ;;		None
 29256 ;; Auto vars:     Size  Location     Type
 29257 ;;		None
 29258 ;; Return value:  Size  Location     Type
 29259 ;;                  1    wreg      void 
 29260 ;; Registers used:
 29261 ;;		None
 29262 ;; Tracked objects:
 29263 ;;		On entry : 0/0
 29264 ;;		On exit  : 0/0
 29265 ;;		Unchanged: 0/0
 29266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29271 ;;Total ram usage:        0 bytes
 29272 ;; Hardware stack levels used: 1
 29273 ;; This function calls:
 29274 ;;		Nothing
 29275 ;; This function is called by:
 29276 ;;		_EUSART2_Initialize
 29277 ;;		_EUSART2_Receive_ISR
 29278 ;; This function uses a non-reentrant model
 29279 ;;
 29280                           
 29281     1FD6                     _EUSART2_DefaultFramingErrorHandler:	
 29282                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29283                           
 29284     1FD6                     i1l1761:	
 29285                           ;incstack = 0
 29286 ;; hardware stack exceeded
 29287                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29288                           
 29289     1FD6  0008               	return
 29290     1FD7                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29291                           
 29292                           	psect	text171
 29293     1002                     __ptext171:	
 29294 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29295 ;; Defined at:
 29296 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29297 ;; Parameters:    Size  Location     Type
 29298 ;;		None
 29299 ;; Auto vars:     Size  Location     Type
 29300 ;;		None
 29301 ;; Return value:  Size  Location     Type
 29302 ;;                  1    wreg      void 
 29303 ;; Registers used:
 29304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29305 ;; Tracked objects:
 29306 ;;		On entry : 0/0
 29307 ;;		On exit  : 0/0
 29308 ;;		Unchanged: 0/0
 29309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29314 ;;Total ram usage:        0 bytes
 29315 ;; Hardware stack levels used: 1
 29316 ;; Hardware stack levels required when called: 1
 29317 ;; This function calls:
 29318 ;;		_EUSART2_RxDataHandler
 29319 ;; This function is called by:
 29320 ;;		_EUSART2_Initialize
 29321 ;;		_EUSART2_Receive_ISR
 29322 ;; This function uses a non-reentrant model
 29323 ;;
 29324                           
 29325     1002                     _EUSART2_DefaultErrorHandler:	
 29326                           ;psect for function _EUSART2_DefaultErrorHandler
 29327                           
 29328     1002                     i1l9506:	
 29329                           ;incstack = 0
 29330 ;; hardware stack exceeded
 29331                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29332                           
 29333                           
 29334                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29335     1002  3193  23FE  3190   	fcall	_EUSART2_RxDataHandler
 29336     1005                     i1l1767:
 29337     1005  0008               	return
 29338     1006                     __end_of_EUSART2_DefaultErrorHandler:
 29339                           
 29340                           	psect	text172
 29341     13FE                     __ptext172:	
 29342 ;; *************** function _EUSART2_RxDataHandler *****************
 29343 ;; Defined at:
 29344 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29345 ;; Parameters:    Size  Location     Type
 29346 ;;		None
 29347 ;; Auto vars:     Size  Location     Type
 29348 ;;		None
 29349 ;; Return value:  Size  Location     Type
 29350 ;;                  1    wreg      void 
 29351 ;; Registers used:
 29352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29353 ;; Tracked objects:
 29354 ;;		On entry : 0/0
 29355 ;;		On exit  : 0/0
 29356 ;;		Unchanged: 0/0
 29357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29362 ;;Total ram usage:        1 bytes
 29363 ;; Hardware stack levels used: 1
 29364 ;; This function calls:
 29365 ;;		Nothing
 29366 ;; This function is called by:
 29367 ;;		_EUSART2_Receive_ISR
 29368 ;;		_EUSART2_DefaultErrorHandler
 29369 ;; This function uses a non-reentrant model
 29370 ;;
 29371                           
 29372     13FE                     _EUSART2_RxDataHandler:	
 29373                           ;psect for function _EUSART2_RxDataHandler
 29374                           
 29375     13FE                     i1l8860:	
 29376                           ;incstack = 0
 29377 ;; hardware stack exceeded
 29378                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29379                           
 29380                           
 29381                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29382     13FE  087C               	movf	_eusart2RxHead,w
 29383     13FF  3E54               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 29384     1400  0086               	movwf	6
 29385     1401  3001               	movlw	1	; select bank2/3
 29386     1402  0087               	movwf	7
 29387     1403  0154               	movlb	20	; select bank20
 29388     1404  0819               	movf	25,w	;volatile
 29389     1405  0081               	movwf	1
 29390     1406                     i1l8862:
 29391     1406  3001               	movlw	1
 29392     1407  00F0               	movwf	??_EUSART2_RxDataHandler
 29393     1408  0870               	movf	??_EUSART2_RxDataHandler,w
 29394     1409  07FC               	addwf	_eusart2RxHead,f	;volatile
 29395     140A                     i1l8864:
 29396                           
 29397                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29398     140A  3008               	movlw	8
 29399     140B  027C               	subwf	_eusart2RxHead,w	;volatile
 29400     140C  1C03               	skipc
 29401     140D  2C0F               	goto	u564_21
 29402     140E  2C10               	goto	u564_20
 29403     140F                     u564_21:
 29404     140F  2C11               	goto	i1l8868
 29405     1410                     u564_20:
 29406     1410                     i1l8866:
 29407                           
 29408                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29409     1410  01FC               	clrf	_eusart2RxHead	;volatile
 29410     1411                     i1l8868:
 29411                           
 29412                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29413     1411  3001               	movlw	1
 29414     1412  00F0               	movwf	??_EUSART2_RxDataHandler
 29415     1413  0870               	movf	??_EUSART2_RxDataHandler,w
 29416     1414  0140               	movlb	0	; select bank0
 29417     1415  07D9               	addwf	_eusart2RxCount,f	;volatile
 29418     1416                     i1l1758:
 29419     1416  0008               	return
 29420     1417                     __end_of_EUSART2_RxDataHandler:
 29421                           
 29422                           	psect	text173
 29423     1FFC                     __ptext173:	
 29424 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29425 ;; Defined at:
 29426 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29427 ;; Parameters:    Size  Location     Type
 29428 ;;		None
 29429 ;; Auto vars:     Size  Location     Type
 29430 ;;		None
 29431 ;; Return value:  Size  Location     Type
 29432 ;;                  1    wreg      void 
 29433 ;; Registers used:
 29434 ;;		None
 29435 ;; Tracked objects:
 29436 ;;		On entry : 0/0
 29437 ;;		On exit  : 0/0
 29438 ;;		Unchanged: 0/0
 29439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29444 ;;Total ram usage:        0 bytes
 29445 ;; Hardware stack levels used: 1
 29446 ;; This function calls:
 29447 ;;		Nothing
 29448 ;; This function is called by:
 29449 ;;		_EUSART1_Initialize
 29450 ;;		_EUSART1_Receive_ISR
 29451 ;; This function uses a non-reentrant model
 29452 ;;
 29453                           
 29454     1FFC                     _EUSART1_DefaultOverrunErrorHandler:	
 29455                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29456                           
 29457     1FFC                     i1l9540:	
 29458                           ;incstack = 0
 29459 ;; hardware stack exceeded
 29460                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29461                           
 29462                           
 29463                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29464     1FFC  0142               	movlb	2	; select bank2
 29465     1FFD  121D               	bcf	29,4	;volatile
 29466                           
 29467                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29468     1FFE  161D               	bsf	29,4	;volatile
 29469     1FFF                     i1l1914:
 29470     1FFF  0008               	return
 29471     2000                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29472                           
 29473                           	psect	text174
 29474     1FD5                     __ptext174:	
 29475 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29476 ;; Defined at:
 29477 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29478 ;; Parameters:    Size  Location     Type
 29479 ;;		None
 29480 ;; Auto vars:     Size  Location     Type
 29481 ;;		None
 29482 ;; Return value:  Size  Location     Type
 29483 ;;                  1    wreg      void 
 29484 ;; Registers used:
 29485 ;;		None
 29486 ;; Tracked objects:
 29487 ;;		On entry : 0/0
 29488 ;;		On exit  : 0/0
 29489 ;;		Unchanged: 0/0
 29490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29495 ;;Total ram usage:        0 bytes
 29496 ;; Hardware stack levels used: 1
 29497 ;; This function calls:
 29498 ;;		Nothing
 29499 ;; This function is called by:
 29500 ;;		_EUSART1_Initialize
 29501 ;;		_EUSART1_Receive_ISR
 29502 ;; This function uses a non-reentrant model
 29503 ;;
 29504                           
 29505     1FD5                     _EUSART1_DefaultFramingErrorHandler:	
 29506                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29507                           
 29508     1FD5                     i1l1911:	
 29509                           ;incstack = 0
 29510 ;; hardware stack exceeded
 29511                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 29512                           
 29513     1FD5  0008               	return
 29514     1FD6                     __end_of_EUSART1_DefaultFramingErrorHandler:
 29515                           
 29516                           	psect	text175
 29517     1FF8                     __ptext175:	
 29518 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 29519 ;; Defined at:
 29520 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 29521 ;; Parameters:    Size  Location     Type
 29522 ;;		None
 29523 ;; Auto vars:     Size  Location     Type
 29524 ;;		None
 29525 ;; Return value:  Size  Location     Type
 29526 ;;                  1    wreg      void 
 29527 ;; Registers used:
 29528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29529 ;; Tracked objects:
 29530 ;;		On entry : 0/0
 29531 ;;		On exit  : 0/0
 29532 ;;		Unchanged: 0/0
 29533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29538 ;;Total ram usage:        0 bytes
 29539 ;; Hardware stack levels used: 1
 29540 ;; Hardware stack levels required when called: 1
 29541 ;; This function calls:
 29542 ;;		_EUSART1_RxDataHandler
 29543 ;; This function is called by:
 29544 ;;		_EUSART1_Initialize
 29545 ;;		_EUSART1_Receive_ISR
 29546 ;; This function uses a non-reentrant model
 29547 ;;
 29548                           
 29549     1FF8                     _EUSART1_DefaultErrorHandler:	
 29550                           ;psect for function _EUSART1_DefaultErrorHandler
 29551                           
 29552     1FF8                     i1l9542:	
 29553                           ;incstack = 0
 29554 ;; hardware stack exceeded
 29555                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29556                           
 29557                           
 29558                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 29559     1FF8  3194  2462  319F   	fcall	_EUSART1_RxDataHandler
 29560     1FFB                     i1l1917:
 29561     1FFB  0008               	return
 29562     1FFC                     __end_of_EUSART1_DefaultErrorHandler:
 29563                           
 29564                           	psect	text176
 29565     1462                     __ptext176:	
 29566 ;; *************** function _EUSART1_RxDataHandler *****************
 29567 ;; Defined at:
 29568 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 29569 ;; Parameters:    Size  Location     Type
 29570 ;;		None
 29571 ;; Auto vars:     Size  Location     Type
 29572 ;;		None
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  1    wreg      void 
 29575 ;; Registers used:
 29576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29577 ;; Tracked objects:
 29578 ;;		On entry : 0/0
 29579 ;;		On exit  : 0/0
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29586 ;;Total ram usage:        1 bytes
 29587 ;; Hardware stack levels used: 1
 29588 ;; This function calls:
 29589 ;;		Nothing
 29590 ;; This function is called by:
 29591 ;;		_EUSART1_Receive_ISR
 29592 ;;		_EUSART1_DefaultErrorHandler
 29593 ;; This function uses a non-reentrant model
 29594 ;;
 29595                           
 29596     1462                     _EUSART1_RxDataHandler:	
 29597                           ;psect for function _EUSART1_RxDataHandler
 29598                           
 29599     1462                     i1l8880:	
 29600                           ;incstack = 0
 29601 ;; hardware stack exceeded
 29602                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29603                           
 29604                           
 29605                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 29606     1462  0140               	movlb	0	; select bank0
 29607     1463  0855               	movf	_eusart1RxHead,w
 29608     1464  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 29609     1465  0086               	movwf	6
 29610     1466  3001               	movlw	1	; select bank2/3
 29611     1467  0087               	movwf	7
 29612     1468  0142               	movlb	2	; select bank2
 29613     1469  0819               	movf	25,w	;volatile
 29614     146A  0081               	movwf	1
 29615     146B                     i1l8882:
 29616     146B  3001               	movlw	1
 29617     146C  00F0               	movwf	??_EUSART1_RxDataHandler
 29618     146D  0870               	movf	??_EUSART1_RxDataHandler,w
 29619     146E  0140               	movlb	0	; select bank0
 29620     146F  07D5               	addwf	_eusart1RxHead,f	;volatile
 29621     1470                     i1l8884:
 29622                           
 29623                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 29624     1470  3008               	movlw	8
 29625     1471  0255               	subwf	_eusart1RxHead,w	;volatile
 29626     1472  1C03               	skipc
 29627     1473  2C75               	goto	u565_21
 29628     1474  2C76               	goto	u565_20
 29629     1475                     u565_21:
 29630     1475  2C77               	goto	i1l8888
 29631     1476                     u565_20:
 29632     1476                     i1l8886:
 29633                           
 29634                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 29635     1476  01D5               	clrf	_eusart1RxHead	;volatile
 29636     1477                     i1l8888:
 29637                           
 29638                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 29639     1477  3001               	movlw	1
 29640     1478  00F0               	movwf	??_EUSART1_RxDataHandler
 29641     1479  0870               	movf	??_EUSART1_RxDataHandler,w
 29642     147A  07D3               	addwf	_eusart1RxCount,f	;volatile
 29643     147B                     i1l1908:
 29644     147B  0008               	return
 29645     147C                     __end_of_EUSART1_RxDataHandler:
 29646     007E                     btemp	set	126	;btemp
 29647     007E                     int$flags	set	126
 29648     007E                     wtemp0	set	126
 29649                           
 29650                           	psect	idloc
 29651                           
 29652                           ;Config register IDLOC0 @ 0x8000
 29653                           ;	unspecified, using default values
 29654     8000                     	org	32768
 29655     8000  3FFF               	dw	16383
 29656                           
 29657                           ;Config register IDLOC1 @ 0x8001
 29658                           ;	unspecified, using default values
 29659     8001                     	org	32769
 29660     8001  3FFF               	dw	16383
 29661                           
 29662                           ;Config register IDLOC2 @ 0x8002
 29663                           ;	unspecified, using default values
 29664     8002                     	org	32770
 29665     8002  3FFF               	dw	16383
 29666                           
 29667                           ;Config register IDLOC3 @ 0x8003
 29668                           ;	unspecified, using default values
 29669     8003                     	org	32771
 29670     8003  3FFF               	dw	16383
 29671                           
 29672                           	psect	config
 29673                           
 29674                           ;Config register CONFIG1 @ 0x8007
 29675                           ;	External Oscillator mode selection bits
 29676                           ;	FEXTOSC = OFF, Oscillator not enabled
 29677                           ;	Power-up default value for COSC bits
 29678                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 29679                           ;	Clock Out Enable bit
 29680                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 29681                           ;	Clock Switch Enable bit
 29682                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 29683                           ;	Fail-Safe Clock Monitor Enable bit
 29684                           ;	FCMEN = ON, FSCM timer enabled
 29685     8007                     	org	32775
 29686     8007  3FEC               	dw	16364
 29687                           
 29688                           ;Config register CONFIG2 @ 0x8008
 29689                           ;	Master Clear Enable bit
 29690                           ;	MCLRE = ON, MCLR pin is Master Clear function
 29691                           ;	Power-up Timer Enable bit
 29692                           ;	PWRTS = OFF, PWRT disabled
 29693                           ;	Low-Power BOR enable bit
 29694                           ;	LPBOREN = OFF, ULPBOR disabled
 29695                           ;	Brown-out reset enable bits
 29696                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 29697                           ;	Brown-out Reset Voltage Selection
 29698                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 29699                           ;	Zero-cross detect disable
 29700                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 29701                           ;	Peripheral Pin Select one-way control
 29702                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 29703                           ;	Stack Overflow/Underflow Reset Enable bit
 29704                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 29705     8008                     	org	32776
 29706     8008  3FFF               	dw	16383
 29707                           
 29708                           ;Config register CONFIG3 @ 0x8009
 29709                           ;	WDT Period Select bits
 29710                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 29711                           ;	WDT operating mode
 29712                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 29713                           ;	WDT Window Select bits
 29714                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 29715                           ;	WDT input clock selector
 29716                           ;	WDTCCS = SC, Software Control
 29717     8009                     	org	32777
 29718     8009  3F9F               	dw	16287
 29719                           
 29720                           ;Config register CONFIG4 @ 0x800A
 29721                           ;	Boot Block Size Selection bits
 29722                           ;	BBSIZE = BB512, 512 words boot block size
 29723                           ;	Boot Block Enable bit
 29724                           ;	BBEN = OFF, Boot Block disabled
 29725                           ;	SAF Enable bit
 29726                           ;	SAFEN = OFF, SAF disabled
 29727                           ;	Application Block Write Protection bit
 29728                           ;	WRTAPP = OFF, Application Block not write protected
 29729                           ;	Boot Block Write Protection bit
 29730                           ;	WRTB = OFF, Boot Block not write protected
 29731                           ;	Configuration Register Write Protection bit
 29732                           ;	WRTC = OFF, Configuration Register not write protected
 29733                           ;	Data EEPROM write protection bit
 29734                           ;	WRTD = OFF, Data EEPROM NOT write protected
 29735                           ;	Storage Area Flash Write Protection bit
 29736                           ;	WRTSAF = OFF, SAF not write protected
 29737                           ;	Low Voltage Programming Enable bit
 29738                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 29739     800A                     	org	32778
 29740     800A  3FFF               	dw	16383
 29741                           
 29742                           ;Config register CONFIG5 @ 0x800B
 29743                           ;	UserNVM Program memory code protection bit
 29744                           ;	CP = OFF, UserNVM code protection disabled
 29745     800B                     	org	32779
 29746     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         471
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     44      80
    BANK1            80      0      80
    BANK2            80      1      75
    BANK3            80      0      17
    BANK4            80      0      64
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    bitRead8@reg	PTR unsigned char  size(1) Largest target is 1
		 -> getAngleEn@angleReg(BANK0[1]), getConvAvg@convAv(COMMON[1]), getCRCMode@getCRC(COMMON[1]), getDeviceID@deviceReg(COMMON[1]), 
		 -> getDiagStatus@convReg(COMMON[1]), getError@statusReg(BANK0[1]), getGlitchFiler@glitchMode(COMMON[1]), getInterruptMode@intModeReg(COMMON[1]), 
		 -> getInterruptPinStatus@deviceStatusReg(COMMON[1]), getInterruptResult@intRsltReg(COMMON[1]), getIntPinState@intStateReg(COMMON[1]), getIntThreshold@interruptThreshold(COMMON[1]), 
		 -> getLowPower@lowPowerMode(BANK0[1]), getMagDir@magDirectionReg(COMMON[1]), getMagneticChannel@magChannel(BANK0[1]), getMagnitudeChannelSelect@magGainReg(COMMON[1]), 
		 -> getMagTemp@magTemp(COMMON[1]), getMaskInt@maskIntReg(COMMON[1]), getOperatingMode@opMode(BANK0[1]), getPOR@convReg(COMMON[1]), 
		 -> getReadMode@readModeReg(COMMON[1]), getResultStatus@convReg(COMMON[1]), getSleeptime@sleepReg(COMMON[1]), getTemperatureEN@tempENreg(BANK0[1]), 
		 -> getThresholdEn@threshReg(COMMON[1]), getTriggerMode@triggerMode(COMMON[1]), getXYAxisRange@XYrangeReg(COMMON[1]), getZAxisRange@ZrangeReg(COMMON[1]), 

    bitWrite8@reg	PTR unsigned char  size(1) Largest target is 2
		 -> setAngleEn@mode(COMMON[2]), setConvAvg@mode(COMMON[1]), setCRCMode@mode(COMMON[1]), setGlitchFilter@mode(COMMON[2]), 
		 -> setI2CAddressEN@addReg(COMMON[2]), setInterruptResult@mode(COMMON[2]), setIntPinState@mode(COMMON[2]), setIntThreshold@mode(COMMON[2]), 
		 -> setLowPower@mode(COMMON[2]), setMagDir@mode(COMMON[2]), setMagneticChannel@mode(BANK0[2]), setMagnitudeGain@mode(COMMON[2]), 
		 -> setMagTemp@mode(COMMON[2]), setMaskInterrupt@mode(COMMON[2]), setOperatingMode@mode(BANK0[2]), setOscillatorError@deviceStatusReg(COMMON[2]), 
		 -> setReadMode@mode(COMMON[1]), setSleeptime@mode(COMMON[2]), setTemperatureEn@mode(BANK0[2]), setThresholdEn@mode(COMMON[2]), 
		 -> setTriggerMode@mode(COMMON[2]), setXYAxisRange@mode(BANK0[2]), setZAxisRange@mode(BANK0[2]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5423	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1689(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1700(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1723(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1706(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1712(), 
		 -> NULL(), 

    I2C1_DO_TX$5423$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5428	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5422	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1689(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1700(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1723(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1706(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1712(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1689(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1700(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1723(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1706(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1712(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1689(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1700(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1723(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1706(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1712(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK5[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1689@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1700@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1831(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK4[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), 

    S199$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    S199$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S199$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S199$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S199$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S199$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1831(), 

    S199$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S199$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S199$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S199$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S328$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S328$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S328$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S328$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S328$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S328$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S328$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S328$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S3598$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3598$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3598$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1689(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1700(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1723(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1706(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1712(), 
		 -> NULL(), 

    S3598$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    S642$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S642$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S988$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4230(BANK7[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    TMAG5273_GetXValue@x	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1706@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1712@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1831->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1831->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _TMAG5273_GetXValue->_TMAG5273_CalcMeasurement
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1689
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1700
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1723
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1706
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1689
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1700
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1723
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1706
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1689
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1700
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1723
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1706
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1712
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1689
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1700
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1723
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1706
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1712
    _wr2RegCompleteHandler@i2c1_master_example$F1712->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1706->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1723->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1700->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1689->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _readRegister->_i2c_read1ByteRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _TMAG5273_GetTemperatureValue->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_TMAG5273_GetXValue
    _TMAG5273_GetXValue->_TMAG5273_CalcMeasurement
    _TMAG5273_CalcMeasurement->_i2c_read2ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 13653938
                                             43 BANK0      1     1      0
                                              0 BANK2      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 10041561
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1382405
                                             17 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1382405
                                             17 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1382405
                                             17 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1382715
                                             17 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1384451
                                             17 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  448722
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  439917
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             5     5      0  447690
                                             12 BANK0      5     5      0
                           _bitRead8
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  440464
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite8                                            5     3      2   45362
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  440109
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  440109
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 7     5      2     200
                                              1 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     2     2      0  447464
                                             12 BANK0      2     2      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     3     3      0  447715
                                             12 BANK0      3     3      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   5     5      0  449023
                                             12 BANK0      5     5      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          2     2      0  447464
                                             12 BANK0      2     2      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           3     3      0  447715
                                             12 BANK0      3     3      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  440430
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead8                                             4     3      1    6960
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        2     1      1     410
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10867
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10867
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    2     2      0   10867
                                             35 BANK0      2     2      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1831 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1   10666
                                             11 COMMON     1     0      1
                                             34 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     5      2    2275
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     2      4     515
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     1      2     278
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 36    36      0    3046
                                              6 COMMON     2     2      0
                                              0 BANK0     34    34      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     2      1     246
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1831 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          8     8      0  447537
                                             18 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         6     6      0  439945
                                             11 COMMON     1     1      0
                                             13 BANK0      5     5      0
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1831 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1831 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1831                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3090648
                                             24 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               3     3      0 3082914
                                             21 BANK0      3     3      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                 _TMAG5273_GetXValue
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetXValue                                   1     1      0  439976
                                             20 BANK0      1     1      0
           _TMAG5273_CalcMeasurement
 ---------------------------------------------------------------------------------
 (4) _TMAG5273_CalcMeasurement                             8     6      2  439906
                                             11 COMMON     1     1      0
                                             13 BANK0      7     5      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  439875
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  440365
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  424509
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  424509
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  424441
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  424441
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0  106118
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1712     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1706     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1723   1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1700     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1689     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    5054
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1689 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1700 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1723 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1706 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1712 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1689 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1700 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1723 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1706 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1712 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1689 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1700 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1723 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1706 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1712 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1689 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1700 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1723 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1706 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1712 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _TMAG5273_GetXValue
         _TMAG5273_CalcMeasurement
           _i2c_read2ByteRegister
             _I2C1_Close
             _I2C1_MasterWrite
             _I2C1_Open
             _I2C1_SetAddressNackCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1831 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1831 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _i2c_read2ByteRegister
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1831 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1831 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead8
       _readRegister
         _i2c_read1ByteRegister
     _getError
       _bitRead8
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead8
       _readRegister
     _getMagneticChannel
       _bitRead8
       _readRegister
     _getOperatingMode
       _bitRead8
       _readRegister
     _getTemperatureEN
       _bitRead8
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     239       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      11      12       21.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     239      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Dec 26 11:19:07 2024

                                 _eusart1TxBufferRemaining 0056  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 105B  
                                                       l35 17D1  
                                                       l44 0A96  
                                                       l53 123E  
                                                       l29 17A3  
                                                       l56 124F  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002D  
                                                      l121 106C  
                                                      l202 1078  
                                                      l130 130B  
                                                      l211 120E  
                                                      l124 1373  
                                                      l205 1072  
                                                      l133 15FC  
                                                      l221 0A02  
                                                      l214 14E8  
                                                      l230 0A24  
                                                      l127 17FF  
                                                      l208 1055  
                                                      l224 0A04  
                                                      l145 0642  
                                                      l139 08DA  
                                                      l164 0413  
                                                      l501 1286  
                                                      l510 08A6  
                                                      l193 06CE  
                                                      l522 1299  
                                                      l187 04C8  
                                                      l196 11D2  
                                                      l534 0E5C  
                                                      l199 0873  
                                                      l537 12AC  
                                                      l561 1496  
                                                      l546 0C0C  
                                                      l549 12BF  
                                                      l901 09B5  
                                                      l671 0EF8  
                                                      l681 13FD  
                                                      l690 117A  
                                                      l771 07D4  
                                                      l765 07D1  
                                                      l687 11AA  
                                                      l791 02C0  
                                                      l775 02C0  
                                                      l881 09E9  
                                                      l875 0ACC  
                                                      l883 09EC  
                                                      l797 02C3  
                                                      l877 0ACF  
                                                      l993 122D  
                                                      l899 09B2  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 135E  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 10A3  
                           _EUSART2_SetFramingErrorHandler 109D  
                                                      _dos 00E5  
                                                      _uno 0068  
                               __end_of_getMagneticChannel 03F2  
                               __end_of_setMagneticChannel 02C4  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 103D  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0071  
                                                     l1003 0C53  
                                                     l1101 0CE2  
                                                     l1013 03F1  
                                                     l1006 0C52  
                                                     l1131 121D  
                                                     l2020 1143  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l2014 139F  
                                                     l1231 13CD  
                                                     l1401 1273  
                                                     l2017 1139  
                                                     l2105 0D75  
                                                     l1241 0814  
                                                     l1250 11FF  
                                                     l1235 1347  
                                                     l1404 14B1  
                                                     l2116 10BA  
                                                     l1253 15D6  
                                                     l1510 0947  
                                                     l1238 1461  
                                                     l1247 1748  
                                                     l1191 0B0B  
                                            ?_RN487X_Delay 0074  
                                                     l1504 158D  
                                                     l2136 1333  
                                                     l2154 105A  
                                                     l1098 0CE3  
                                                     l1451 111B  
                                                     l1187 10D4  
                                                     l2412 13E5  
                                                     l1460 10E4  
                                                     l2404 1111  
                                                     l2501 10CD  
                                                     l1541 0FFF  
                                                     l1445 1FF7  
                                                     l1517 097E  
                                                     l1454 1125  
                                                     l1614 1389  
                                                     l2431 11F0  
                                                     l2407 090F  
                                                     l1392 12D2  
                                                     l2600 1060  
                                                     l2424 1050  
                                                     l2408 0910  
                                                     l2440 1159  
                                                     l1448 1186  
                                                     l1464 116A  
                                                     l1473 115F  
                                                     l1481 1187  
                                                     l1457 112F  
                                                     l1713 0BC6  
                                                     l2434 114E  
                                                     l2418 1525  
                                                     l1722 1015  
                                                     l1570 0756  
                                                     l1626 119E  
                                                     l2451 15B1  
                                                     l1395 12E5  
                                                     l2603 1011  
                                                     l2507 171B  
                                                     l2531 1032  
                                                     l1467 116D  
                                                     l1491 1192  
                                                     l1635 0DBF  
                                                     l1619 1504  
                                                     l2540 1041  
                                                     l1732 16C5  
                                                     l1548 0842  
                                                     l1476 1162  
                                                     l1484 118E  
                                                     l1636 0DBB  
                                                     l2621 1FE2  
                                                     l2525 1028  
                                                     l2461 169C  
                                                     l1741 1623  
                                                     l1469 116F  
                                                     l3341 131F  
                                                     l1398 12F8  
                                                     l2606 100D  
                                                     l2470 10DC  
                                                     l2534 1037  
                                                     l2630 1061  
                                                     l1478 1164  
                                                     l1494 1775  
                                                     l1638 0DC1  
                                                     l2543 1046  
                                                     l1559 07FF  
                                                     l1583 13B6  
                                                     l1487 1190  
                                                     l1719 10FF  
                                                     l2624 1FDC  
                                                     l2560 1FD9  
                                                     l2464 1023  
                                                     l2528 102D  
                                                     l2552 164B  
                                                     l3360 0E0E  
                                                     l1920 1084  
                                                     l2473 0F82  
                                                     l2537 103C  
                                                     l2457 11B7  
                                                     l1737 1603  
                                                     l1489 1191  
                                                     l1497 0EAA  
                                                     l2490 0D2C  
                                                     l2546 104B  
                                                     l2634 1066  
                                                     l1738 160C  
                                                     l2642 135D  
                                                     l1770 10A2  
                                                     l2563 1001  
                                                     l2627 1FF4  
                                                     l2467 10F6  
                                                     l3347 142F  
                                                     l1595 0C9B  
                                                     l1923 108A  
                                                     l2476 0FA1  
                                                     l1588 14CC  
                                                     l1932 1090  
                                                     l2708 0505  
                                                     l2573 11C4  
                                                     l3373 0F4B  
                                                     l1773 10A8  
                                                     l2582 101E  
                                                     l3366 1431  
                                                     l1926 107E  
                                                     l1782 10AE  
                                                     l2591 1FEE  
                                                     l1863 1108  
                                                     l2719 056C  
                                                     l2576 1FDF  
                                                     l3368 1448  
                                                     l1776 109C  
                                                     l2585 1FE8  
                                                     l2489 0D06  
                                                     l1881 1652  
                                                     l1929 1096  
                                                     l1857 0B87  
                                                     l2594 1FE5  
                                                     l1882 165B  
                                                     l1866 1019  
                                                     l2579 1FF1  
                                                     l1779 10B4  
                                                     l1876 16EE  
                                                     l2597 1FEB  
                                                     l1885 1673  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 189C  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 189C  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 0D01  
                                                     u9601 0D00  
                                                     u9610 1066  
                                                     u9611 1065  
                                                     u9620 167C  
                                                     u9700 16CC  
                                                     u9621 167B  
                                                     u9701 16CB  
                                                     u9630 1684  
                                                     u9710 16E5  
                                                     u9631 1683  
                                                     u9711 16E4  
                                                     u9560 1595  
                                                     u9640 11B7  
                                                     u9800 0E21  
                                                     u9720 1652  
                                                     u9561 1594  
                                                     u9641 11B6  
                                                     u9801 0E20  
                                                     u9721 1651  
                                                     u9570 11E7  
                                                     u9810 0E4B  
                                                     u9730 1657  
                                                     u9650 16A3  
                                                     u9571 11E6  
                                                     u9811 0E4A  
                                                     u9731 1656  
                                                     u9651 16A2  
                                                     u9580 0F54  
                                                     u9820 0E50  
                                                     u9740 166E  
                                                     u9660 16BC  
                                                     u9900 07FE  
                                                     u9581 0F53  
                                                     u9821 0E4F  
                                                     u9741 166D  
                                                     u9661 16BB  
                                                     u9901 07FD  
                                                     u9590 0F9E  
                                                     u9750 11BD  
                                                     u9830 0E5B  
                                                     u9670 1603  
                                                     u9910 06F5  
                                                     u9591 0F9D  
                                                     u9751 11BC  
                                                     u9831 0E5A  
                                                     u9671 1602  
                                                     u9911 06F4  
                                                     u9760 150E  
                                                     u9680 1608  
                                                     u9840 1429  
                                                     u9920 06FB  
                                                     u9761 150D  
                                                     u9681 1607  
                                                     u9841 1428  
                                                     u9921 06FA  
                                                     u9770 1516  
                                                     u9690 161E  
                                                     u9850 135D  
                                                     u9930 0704  
                                                     u9771 1515  
                                                     u9691 161D  
                                                     u9851 135C  
                                                     u9931 0703  
                                                     u9780 08E3  
                                                     u9940 070A  
                                                     u9860 131F  
                                                     u9781 08E2  
                                                     u9941 0709  
                                                     u9861 131E  
                                                     u9790 13D5  
                                                     u9870 0826  
                                                     u9950 0F06  
                                                     u9791 13D4  
                                                     u9871 0825  
                                                     u9951 0F05  
                                                     u9880 0842  
                                                     u9960 0F1E  
                                                     u9881 0841  
                                                     u9961 0F1D  
                                                     u9890 07F2  
                                                     u9970 0F27  
                                                     u9891 07F1  
                                                     u9971 0F26  
                                                     u9980 0F2D  
                                                     u9981 0F2C  
                                                     u9990 0F3D  
                                                     u9991 0F3C  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0035  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 164C  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 15FD  
                                ??_I2C1_CallbackReturnStop 0079  
                                                     __hex 01A0  
                                                     _data 004E  
                                                     _main 04C9  
                                                     _mask 0065  
                                                     _peek 0060  
                                            ?_EUSART1_Read 0070  
                                                     _seis 00E1  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 07D5  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _tres 00E4  
                                                     _swap 0800  
                                                     btemp 007E  
                                                     _zero 0069  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 0815  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 0A97  
                                         ??_I2C1_SetBuffer 0075  
                             __end_of_EUSART2_Transmit_ISR 1548  
                              __end_of_RN487X_EnterCmdMode 13B7  
                                             _statusBuffer 0320  
                                         _setTemperatureEn 097F  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                               __end_of_TMAG5273_GetXValue 1200  
                                    __end_of_setZAxisRange 09ED  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 04C9  
                            _LIGHTBLUE_ParseIncomingPacket 03F2  
                                  __end_of_TMR0_Initialize 1334  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 007B  
                                   _i2c_write1ByteRegister 0874  
                            __end_of_OSCILLATOR_Initialize 113A  
                                                    l12210 11E2  
                                                    l13002 0DEC  
                                                    l12220 1FE9  
                                                    l12212 11E7  
                                                    l12204 158F  
                                                    l12300 105B  
                                                    l13004 0DFF  
                                                    l13100 0976  
                                                    l13020 0892  
                                                    l13012 0875  
                                                    l12214 11EF  
                                                    l12206 1595  
                                                    l12222 100A  
                                                    l13006 0E04  
                                                    l13102 0979  
                                                    l13022 089B  
                                                    l13014 0875  
                                                    l12208 15A4  
                                                    l12216 1144  
                                                    l12224 1274  
                                                    l12232 1287  
                                                    l12240 129A  
                                                    l12304 101B  
                                                    l12312 1029  
                                                    l12320 1036  
                                                    l13112 1778  
                                                    l13032 123F  
                                                    l13120 17A6  
                                                    l13040 14D0  
                                                    l14000 05A4  
                                                    l13104 10F7  
                                                    l13008 0E0D  
                                                    l13200 0D8C  
                                                    l13024 089E  
                                                    l13016 087E  
                                                    l12218 1FE6  
                                                    l12226 127E  
                                                    l12234 1291  
                                                    l12242 12A4  
                                                    l12250 12B7  
                                                    l12410 0F9E  
                                                    l12306 1024  
                                                    l12314 102C  
                                                    l12330 1042  
                                                    l13026 122E  
                                                    l13114 1778  
                                                    l13034 124E  
                                                    l13122 17A6  
                                                    l13130 0844  
                                                    l13042 14DD  
                                                    l14010 05E8  
                                                    l14002 05AF  
                                                    l13210 0DAB  
                                                    l13202 0D8D  
                                                    l13050 13CA  
                                                    l13018 0887  
                                                    l12228 1285  
                                                    l12236 1298  
                                                    l12244 12AB  
                                                    l12252 12BE  
                                                    l12324 1FEF  
                                                    l12412 0FA0  
                                                    l12404 0F61  
                                                    l12420 0CE4  
                                                    l12308 1027  
                                                    l12332 1045  
                                                    l12500 1624  
                                                    l13028 123D  
                                                    l13116 1780  
                                                    l13124 17AE  
                                                    l13140 086F  
                                                    l13132 084E  
                                                    l13300 1051  
                                                    l13044 14E5  
                                                    l14020 03F4  
                                                    l14012 05FA  
                                                    l14004 05C1  
                                                    l13108 1100  
                                                    l13204 0D92  
                                                    l13212 0DB0  
                                                    l13060 10CE  
                                                    l14100 0EDA  
                                                    l12262 12C0  
                                                    l12270 12D3  
                                                    l12342 1FEC  
                                                    l12350 1FF2  
                                                    l12406 0F84  
                                                    l12422 0CF2  
                                                    l12318 1033  
                                                    l12502 1626  
                                                    l13118 1791  
                                                    l13126 17BF  
                                                    l13134 085C  
                                                    l13038 14CD  
                                                    l13142 1202  
                                                    l13310 0A06  
                                                    l14030 040C  
                                                    l14022 03F5  
                                                    l14014 062A  
                                                    l14006 05C6  
                                                    l13214 0DB6  
                                                    l13206 0D9E  
                                                    l13230 1097  
                                                    l13222 10A9  
                                                    l13046 13B8  
                                                    l13070 0805  
                                                    l13062 10D3  
                                                    l13150 0ADC  
                                                    l12360 1FDA  
                                                    l12248 12AD  
                                                    l12256 147C  
                                                    l12264 12CA  
                                                    l12272 12DD  
                                                    l12280 12F0  
                                                    l12352 1FD8  
                                                    l12328 100E  
                                                    l12408 0F93  
                                                    l12424 0CF7  
                                                    l12344 102E  
                                                    l12336 103D  
                                                    l12504 1629  
                                                    l13080 15C1  
                                                    l13128 11F3  
                                                    l13136 0860  
                                                    l12600 16DF  
                                                    l13144 120B  
                                                    l13312 0A10  
                                                    l13304 09EF  
                                                    l14040 0438  
                                                    l14032 0418  
                                                    l14024 03F8  
                                                    l14016 062E  
                                                    l14008 05D1  
                                                    l14200 0FA2  
                                                    l13216 0DB8  
                                                    l13208 0DA5  
                                                    l13240 1079  
                                                    l13232 108B  
                                                    l13224 10AF  
                                                    l13056 13CC  
                                                    l13048 13C5  
                                                    l13072 0814  
                                                    l13160 0AFE  
                                                    l13152 0AE4  
                                                    l13400 0981  
                                                    l14112 0EF5  
                                                    l14104 0EE3  
                                                    l12290 1272  
                                                    l12258 1495  
                                                    l12266 12D1  
                                                    l12274 12E4  
                                                    l12282 12F7  
                                                    l12362 101F  
                                                    l12370 10EE  
                                                    l12434 0D08  
                                                    l12426 0D01  
                                                    l12346 1031  
                                                    l12338 1040  
                                                    l12514 1631  
                                                    l12530 1684  
                                                    l13082 15C3  
                                                    l13250 0A74  
                                                    l13138 086B  
                                                    l12610 16ED  
                                                    l12602 16E5  
                                                    l13306 09F0  
                                                    l14050 0456  
                                                    l14042 043B  
                                                    l14034 041E  
                                                    l14026 03FD  
                                                    l14018 0637  
                                                    l14202 0FE8  
                                                    l13090 0958  
                                                    l13218 0DBD  
                                                    l13234 1091  
                                                    l13226 109D  
                                                    l13242 10B5  
                                                    l14210 1390  
                                                    l13066 0800  
                                                    l13162 0B03  
                                                    l13170 0B0A  
                                                    l13154 0AEC  
                                                    l13146 0AD0  
                                                    l13402 098C  
                                                    l12356 1000  
                                                    l12460 16EF  
                                                    l12364 1021  
                                                    l12372 10F0  
                                                    l12380 10D7  
                                                    l12444 0D10  
                                                    l12428 0D04  
                                                    l12452 10C7  
                                                    l12508 162D  
                                                    l12532 1687  
                                                    l12524 1674  
                                                    l12540 11AF  
                                                    l12700 114F  
                                                    l13084 15D2  
                                                    l13076 15B3  
                                                    l13252 0A78  
                                                    l13244 0A60  
                                                    l12620 165C  
                                                    l12604 16E6  
                                                    l13308 09FE  
                                                    l13316 0A1C  
                                                    l14060 046F  
                                                    l14052 045B  
                                                    l14044 0441  
                                                    l14036 0427  
                                                    l14028 0403  
                                                    l13260 171D  
                                                    l14204 0FF1  
                                                    l13092 095C  
                                                    l13236 107F  
                                                    l13228 10A3  
                                                    l14212 1393  
                                                    l14220 1056  
                                                    l13500 0C3A  
                                                    l13068 0803  
                                                    l13340 13FC  
                                                    l13332 13E6  
                                                    l13164 0B08  
                                                    l13156 0AF4  
                                                    l13148 0AD5  
                                                    l13180 1172  
                                                    l13420 077E  
                                                    l13412 0759  
                                                    l13404 0991  
                                                    l14108 0EEC  
                                                    l12710 13D6  
                                                    l12534 1FE3  
                                                    l12286 1261  
                                                    l12278 12E6  
                                                    l12294 1497  
                                                    l12462 16F2  
                                                    l12366 1022  
                                                    l12374 10F5  
                                                    l12382 10DB  
                                                    l12390 0F55  
                                                    l12438 0D0C  
                                                    l12454 10C9  
                                                    l12526 1677  
                                                    l12542 11B2  
                                                    l12702 104C  
                                                    l13078 15BF  
                                                    l13254 0A81  
                                                    l13246 0A64  
                                                    l12622 1664  
                                                    l12630 1671  
                                                    l12614 164C  
                                                    l12550 169D  
                                                    l12606 16E8  
                                                    l14062 0476  
                                                    l14054 045D  
                                                    l14046 044B  
                                                    l14038 042E  
                                                    l13270 1741  
                                                    l13262 1729  
                                                    l13190 1126  
                                                    l13094 0969  
                                                    l13238 1085  
                                                    l14214 1396  
                                                    l14206 138A  
                                                    l13502 0C3F  
                                                    l13510 0C46  
                                                    l13174 1449  
                                                    l13334 13F1  
                                                    l13158 0AF9  
                                                    l13350 00BB  
                                                    l13430 07BB  
                                                    l13422 0783  
                                                    l13414 0759  
                                                    l13406 099F  
                                                    l12712 13D8  
                                                    l12720 13E4  
                                                    l12288 126B  
                                                    l12296 14B0  
                                                    l12472 16FB  
                                                    l12456 10CC  
                                                    l12528 167C  
                                                    l12536 11AB  
                                                    l12640 11C3  
                                                    l12632 11B8  
                                                    l13256 0A89  
                                                    l13248 0A6C  
                                                    l12624 1668  
                                                    l12616 164C  
                                                    l13280 0671  
                                                    l13272 11C6  
                                                    l12560 16BD  
                                                    l12552 16A3  
                                                    l12608 16EB  
                                                    l12800 07F2  
                                                    l12544 1012  
                                                    l14064 0490  
                                                    l14056 0460  
                                                    l14048 0453  
                                                    l14080 04A9  
                                                    l13264 172F  
                                                    l13096 096F  
                                                    l13088 0948  
                                                    l14216 1399  
                                                    l14208 138D  
                                                    l13512 0C4B  
                                                    l13504 0C44  
                                                    l13176 1455  
                                                    l13336 13FA  
                                                    l13184 1335  
                                                    l13360 0134  
                                                    l13352 00DF  
                                                    l13344 00AB  
                                                    l13424 0799  
                                                    l13416 0764  
                                                    l13408 09A4  
                                                    l13440 0AA9  
                                                    l12714 13DB  
                                                    l12706 13CE  
                                                    l12466 16F6  
                                                    l12378 10D5  
                                                    l12394 0F59  
                                                    l12386 0F4C  
                                                    l12538 11AC  
                                                    l12650 150E  
                                                    l12634 11BD  
                                                    l13258 0A8D  
                                                    l12570 15FD  
                                                    l12626 166E  
                                                    l12618 1657  
                                                    l13290 06C3  
                                                    l13282 0691  
                                                    l13274 0644  
                                                    l12562 16BF  
                                                    l12554 16B2  
                                                    l12730 111C  
                                                    l14074 04A0  
                                                    l14066 0497  
                                                    l14058 0466  
                                                    l13266 1730  
                                                    l13098 0972  
                                                    l13194 0D76  
                                                    l14170 137A  
                                                    l14218 139C  
                                                    l13610 0367  
                                                    l13530 02DA  
                                                    l13522 02C4  
                                                    l13514 0C50  
                                                    l13186 1335  
                                                    l13370 0191  
                                                    l13362 013A  
                                                    l13354 00E4  
                                                    l13346 00AB  
                                                    l13426 079F  
                                                    l13418 0769  
                                                    l13442 0AB8  
                                                    l13434 0A99  
                                                    l13450 09B8  
                                                    l12644 1FE0  
                                                    l12716 13DE  
                                                    l12708 13D5  
                                                    l12468 16F9  
                                                    l12492 1047  
                                                    l12660 151D  
                                                    l12652 150F  
                                                    l12636 11BE  
                                                    l12740 0E17  
                                                    l12580 1618  
                                                    l12572 15FD  
                                                    l12628 166F  
                                                    l12724 117B  
                                                    l13284 06A9  
                                                    l13276 0661  
                                                    l12564 16C2  
                                                    l12556 16B6  
                                                    l12548 169D  
                                                    l12804 07F4  
                                                    l12900 13A0  
                                                    l12820 06EF  
                                                    l12812 06CF  
                                                    l14076 04A6  
                                                    l14068 049A  
                                                    l13292 1073  
                                                    l13268 1732  
                                                    l13196 0D81  
                                                    l14172 1380  
                                                    l13620 0373  
                                                    l13612 036C  
                                                    l13604 0358  
                                                    l13540 02F9  
                                                    l13532 02E2  
                                                    l13524 02C4  
                                                    l13188 133E  
                                                    l13380 0210  
                                                    l13372 01B7  
                                                    l13364 0160  
                                                    l13356 0109  
                                                    l13348 00B6  
                                                    l13428 07B5  
                                                    l13444 0ABD  
                                                    l13436 0A99  
                                                    l13452 09C3  
                                                    l14092 0EB4  
                                                    l12646 1FDD  
                                                    l12718 13E1  
                                                    l12478 16FF  
                                                    l12398 0F5D  
                                                    l12486 1038  
                                                    l12494 1049  
                                                    l12662 1520  
                                                    l12654 1511  
                                                    l12638 11C0  
                                                    l12670 08E3  
                                                    l12750 0E41  
                                                    l12742 0E21  
                                                    l12734 0E11  
                                                    l12582 161E  
                                                    l12574 1608  
                                                    l13286 06B7  
                                                    l13278 0666  
                                                    l12566 16C4  
                                                    l12558 16BC  
                                                    l12726 1112  
                                                    l12806 07F8  
                                                    l12902 13A7  
                                                    l12830 070A  
                                                    l12822 06F5  
                                                    l12814 06D0  
                                                    l12910 0C5B  
                                                    l13198 0D86  
                                                    l14190 1193  
                                                    l14174 1383  
                                                    l14182 1388  
                                                    l13462 121E  
                                                    l13622 0378  
                                                    l13606 035D  
                                                    l13550 0305  
                                                    l13542 02FE  
                                                    l13534 02EA  
                                                    l13526 02CA  
                                                    l13710 1215  
                                                    l13390 026D  
                                                    l13382 0216  
                                                    l13374 01BD  
                                                    l13366 0166  
                                                    l13358 010F  
                                                    l13438 0AA4  
                                                    l13454 09C8  
                                                    l16040 0D1E  
                                                    l12488 103B  
                                                    l12496 104A  
                                                    l12656 1516  
                                                    l12664 1523  
                                                    l12648 1507  
                                                    l12680 08F3  
                                                    l12672 08E5  
                                                    l12760 0E5B  
                                                    l12752 0E4B  
                                                    l12744 0E2A  
                                                    l12584 161F  
                                                    l12576 160D  
                                                    l13288 06BB  
                                                    l13296 106D  
                                                    l12592 16C6  
                                                    l12808 07FE  
                                                    l12904 13AD  
                                                    l12832 070C  
                                                    l12824 06FB  
                                                    l12840 0716  
                                                    l12816 06DA  
                                                    l12920 0C6C  
                                                    l12912 0C5F  
                                                    l14192 1193  
                                                    l14176 1386  
                                                    l14168 1375  
                                                    l13800 0BA1  
                                                    l13720 0CA2  
                                                    l13464 121E  
                                                    l13640 0398  
                                                    l13624 037D  
                                                    l13632 0384  
                                                    l13608 0362  
                                                    l13552 030A  
                                                    l13536 02EF  
                                                    l13528 02D2  
                                                    l13480 0C22  
                                                    l13472 0C0D  
                                                    l13712 121C  
                                                    l13392 0293  
                                                    l13384 023B  
                                                    l13376 01E3  
                                                    l13368 018B  
                                                    l13456 09D6  
                                                    l13448 09B8  
                                                    l14096 0ED1  
                                                    l14088 0EAB  
                                                    l16042 0F74  
                                                    l12658 151A  
                                                    l12690 0903  
                                                    l12682 08F4  
                                                    l12674 08E6  
                                                    l12746 0E35  
                                                    l12578 1614  
                                                    l12586 1621  
                                                    l12770 1429  
                                                    l12594 16C6  
                                                    l12842 0755  
                                                    l12826 06FE  
                                                    l12818 06E4  
                                                    l12930 0C7A  
                                                    l12922 0C6F  
                                                    l12914 0C62  
                                                    l14186 1FF5  
                                                    l14194 119B  
                                                    l13810 0BBA  
                                                    l13802 0BA3  
                                                    l13722 0CAA  
                                                    l13466 1224  
                                                    l13650 03A4  
                                                    l13634 0389  
                                                    l13626 0382  
                                                    l13618 036E  
                                                    l13570 032A  
                                                    l13554 030F  
                                                    l13562 0316  
                                                    l13538 02F4  
                                                    l13482 0C27  
                                                    l13490 0C2E  
                                                    l13474 0C0D  
                                                    l13706 120F  
                                                    l13394 0299  
                                                    l13386 0241  
                                                    l13378 01E9  
                                                    l13458 09DB  
                                                    l16044 170D  
                                                    l12692 0908  
                                                    l12684 08F9  
                                                    l12676 08E7  
                                                    l12668 08DC  
                                                    l12756 0E51  
                                                    l12748 0E3E  
                                                    l12764 1417  
                                                    l12596 16CC  
                                                    l12588 1016  
                                                    l12828 0704  
                                                    l12940 0C8A  
                                                    l12932 0C7C  
                                                    l12924 0C71  
                                                    l12916 0C64  
                                                    l12908 0C54  
                                                    l16036 04B1  
                                                    l12780 130D  
                                                    l12860 0F1E  
                                                    l12852 0F09  
                                                    l14196 119D  
                                                    l13820 0B49  
                                                    l13812 0BBC  
                                                    l13804 0BA5  
                                                    l13900 0D54  
                                                    l13724 0CB2  
                                                    l13716 0C9C  
                                                    l13468 122C  
                                                    l13652 03A9  
                                                    l13660 03B0  
                                                    l13636 038E  
                                                    l13580 0336  
                                                    l13564 031B  
                                                    l13556 0314  
                                                    l13548 0300  
                                                    l13492 0C33  
                                                    l13484 0C2C  
                                                    l13476 0C13  
                                                    l13708 120F  
                                                    l13388 0267  
                     __end_of_TMAG5273_GetTemperatureValue 1749  
                             _TMAG5273_GetTemperatureValue 171C  
                                                    l16038 1643  
                                                    l12694 090B  
                                                    l12686 08FD  
                                                    l12678 08EE  
                                                    l12758 0E55  
                                                    l12766 141C  
                                                    l12774 1348  
                                                    l12598 16DB  
                                                    l12790 0838  
                                                    l12838 070E  
                                                    l12942 0C8E  
                                                    l12934 0C80  
                                                    l12926 0C75  
                                                    l12918 0C68  
                                                    l12782 130F  
                                                    l12870 1431  
                                                    l12862 0F27  
                                                    l12854 0F0D  
                                                    l12846 0EFA  
                                                    l13830 0B60  
                                                    l13822 0B4B  
                                                    l13814 0BBE  
                                                    l13806 0BAC  
                                                    l13910 0D60  
                                                    l13902 0D56  
                                                    l13726 0CB7  
                                                    l13734 0CBE  
                                                    l13718 0C9C  
                                                    l13662 03B5  
                                                    l13654 03AE  
                                                    l13638 0393  
                                                    l13646 039A  
                                                    l13582 033B  
                                                    l13590 0342  
                                                    l13566 0320  
                                                    l13494 0C38  
                                                    l13478 0C1A  
                                                    l13398 0981  
                                                    l12696 090E  
                                                    l12688 0902  
                                                    l12768 1420  
                                                    l12776 1349  
                                                    l12792 083C  
                                                    l12784 0816  
                                                    l12952 14B2  
                                                    l12944 0C90  
                                                    l12936 0C84  
                                                    l12928 0C78  
                                                    l12872 143B  
                                                    l12864 0F2D  
                                                    l12856 0F11  
                                                    l12848 0F06  
                                                    l13840 0B74  
                                                    l13832 0B62  
                                                    l13824 0B52  
                                                    l13816 0BBF  
                                                    l13808 0BB3  
                                                    l13920 0D6C  
                                                    l13912 0D62  
                                                    l13904 0D57  
                                                    l12960 11A1  
                                                    l13736 0CC3  
                                                    l13744 0CCA  
                                                    l13728 0CBC  
                                                    l13680 03D5  
                                                    l13664 03BA  
                                                    l13648 039F  
                                                    l13592 0347  
                                                    l13584 0340  
                                                    l13568 0325  
                                                    l13576 032C  
                                                    l12890 0BE7  
                                                    l12882 0BC9  
                                                    l12778 1351  
                                                    l12794 07D5  
                                                    l12786 0818  
                                                    l12954 14BD  
                                                    l12946 0C92  
                                                    l12938 0C86  
                                                    l12970 1749  
                                                    l12866 0F3D  
                                                    l12858 0F15  
                                                    l13850 0B85  
                                                    l13842 0B7B  
                                                    l13834 0B64  
                                                    l13826 0B5B  
                                                    l13818 0BC4  
                                                    l13930 1133  
                                                    l13922 0D6E  
                                                    l13914 0D65  
                                                    l13906 0D58  
                                                    l12962 11A9  
                                                    l13746 0CCF  
                                                    l13754 0CD6  
                                                    l13738 0CC8  
                                                    l13690 03E1  
                                                    l13682 03DA  
                                                    l13666 03BF  
                                                    l13674 03C6  
                                                    l13594 034C  
                                                    l13578 0331  
                                                    l12892 0BF0  
                                                    l12884 0BC9  
                                                    l12796 07D7  
                                                    l12788 0826  
                                                    l12956 14C3  
                                                    l12948 0C98  
                                                    l12980 1582  
                                                    l12972 0E5D  
                                                    l12876 143D  
                                                    l13772 14F1  
                                                    l13844 0B7D  
                                                    l13836 0B66  
                                                    l13828 0B5E  
                                                    l13860 1110  
                                                    l13932 1134  
                                                    l13924 0D71  
                                                    l13916 0D68  
                                                    l13908 0D59  
                                                    l13852 113A  
                                                    l13940 132E  
                                                    l13756 0CDB  
                                                    l13748 0CD4  
                                                    l13692 03E6  
                                                    l13676 03CB  
                                                    l13668 03C4  
                                                    l13596 0351  
                                                    l12894 0BF3  
                                                    l12886 0BD3  
                                                    l13942 1067  
                                                    l12966 10DD  
                                                    l12798 07E1  
                                                    l13950 136D  
                                                    l13782 1165  
                                                    l12974 156C  
                                                    l12990 0930  
                                                    l12982 0913  
                                                    l12878 1447  
                                                    l13774 14FF  
                                                    l13766 14E9  
                                                    l13846 0B7F  
                                                    l13838 0B6D  
                                                    l13790 0B8A  
                                                    l13854 1109  
                                                    l13934 1137  
                                                    l13926 0D73  
                                                    l13918 0D6A  
                                                    l13870 0D3E  
                                                    l13862 0D2D  
                                                    l13758 0CE0  
                                                    l13694 03EB  
                                                    l13678 03D0  
                                                    l13598 0356  
                                                    l12896 0BFB  
                                                    l12888 0BDC  
                                                    l13960 17EE  
                                                    l13952 17D2  
                                                    l13944 135E  
                                                    l13784 115A  
                                                    l12976 1571  
                                                    l12984 0919  
                                                    l12992 0DC4  
                                                    l13768 14EF  
                                                    l13848 0B80  
                                                    l13792 0B91  
                                                    l13856 110B  
                                                    l13936 1138  
                                                    l13928 1130  
                                                    l13880 0D45  
                                                    l13872 0D40  
                                                    l13864 0D2F  
                                                    l13696 03F0  
                                                    l13688 03DC  
                                                    l13962 17F9  
                                                    l13954 17D4  
                                                    l13970 1305  
                                                    l13946 1360  
                                                    l13786 1189  
                                                    l12978 157D  
                                                    l12986 091C  
                                                    l12994 0DCA  
                                                    l13778 1503  
                                                    l13794 0B9A  
                                                    l13858 110D  
                                                    l13890 0D4A  
                                                    l13882 0D46  
                                                    l13874 0D42  
                                                    l13866 0D31  
                                                    l13938 1320  
                                                    l13956 17D8  
                                                    l13980 15E9  
                                                    l13972 15D7  
                                                    l13964 12F9  
                                                    l13948 1364  
                                                    l12988 092B  
                                                    l12996 0DD7  
                                                    l13796 0B9D  
                                                    l13788 0B88  
                                                    l13892 0D4C  
                                                    l13884 0D47  
                                                    l13876 0D43  
                                                    l13868 0D3C  
                                                    l13958 17E3  
                                                    l13982 15F0  
                                                    l13974 15DC  
                                                    l13966 12FE  
                                                    l13990 08B4  
                                                    l12998 0DE9  
                                                    l13798 0B9F  
                                                    l13894 0D4E  
                                                    l13886 0D48  
                                                    l13878 0D44  
                                                    l13984 15F6  
                                                    l13976 15DD  
                                                    l13968 12FF  
                                                    l13992 08BA  
                                                    l13896 0D50  
                                                    l13888 0D49  
                                                    l13978 15E3  
                                                    l13994 08BF  
                                                    l13986 08A7  
                                                    l13898 0D52  
                                                    l13996 08D4  
                                                    l13988 08AB  
                                                    l15860 04D7  
                                                    l15852 04C9  
                                                    l13998 059A  
                                                    l15870 04FF  
                                                    l15862 04DD  
                                                    l15854 04D2  
                                                    l15880 053C  
                                                    l15872 050E  
                                                    l15864 04E5  
                                                    l15856 04D3  
                                                    l15890 055C  
                                                    l15882 0542  
                                                    l15874 0520  
                                                    l15866 04ED  
                                                    l15858 04D4  
                                                    l15892 0575  
                                                    l15884 0546  
                                                    l15876 052B  
                                                    l15868 04EF  
                                                    l15894 0588  
                                                    l15886 0549  
                                                    l15878 0536  
                                                    l15888 054D  
                                    _eusart1RxStatusBuffer 00BE  
                                        __end_of_I2C1_Open 0911  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 143B  
                                                    u10001 143A  
                                                    u10010 1447  
                                                    u10011 1446  
                                                    u10020 0BD3  
                                                    u10100 0DE9  
                                                    u10021 0BD2  
                                                    u10101 0DE8  
                                                    u10030 0BFB  
                                                    u10110 0E04  
                                                    u10031 0BFA  
                                                    u10111 0E03  
                                                    u10040 0C5F  
                                                    u10120 0E0D  
                                                    u10200 13CA  
                                                    u11000 0351  
                                                    u10041 0C5E  
                                                    u10121 0E0C  
                                                    u10201 13C9  
                                                    u11001 0350  
                                                    u10050 0C6C  
                                                    u10210 0958  
                                                    u11010 0356  
                                                    u10130 087E  
                                                    u10051 0C6B  
                                                    u10211 0957  
                                                    u11011 0355  
                                                    u10131 087D  
                                                    u10060 1571  
                                                    u10220 0969  
                                                    u11100 0389  
                                                    u11020 035D  
                                                    u10140 08A6  
                                                    u10061 1570  
                                                    u10221 0968  
                                                    u11101 0388  
                                                    u11021 035C  
                                                    u10141 08A5  
                                                    u10150 123B  
                                                    u10230 10FE  
                                                    u10070 1582  
                                                    u11110 038E  
                                                    u11030 0362  
                                                    u10310 0AF9  
                                                    u10151 1239  
                                                    u10231 10FC  
                                                    u10071 1581  
                                                    u11111 038D  
                                                    u11031 0361  
                                                    u10311 0AF8  
                                                    u10160 123C  
                                                    u10400 0A74  
                                                    u10240 10FF  
                                                    u10080 0947  
                                                    u11200 03BF  
                                                    u11120 0393  
                                                    u11040 0367  
                                                    u10320 0AFE  
                                                    u10305 17C5  
                                                    u10401 0A73  
                                                    u10081 0946  
                                                    u11201 03BE  
                                                    u11121 0392  
                                                    u11041 0366  
                                                    u10321 0AFD  
                                                    u10170 124C  
                                                    u10410 0A89  
                                                    u10250 1107  
                                                    u10090 0DCA  
                                                    u11210 03C4  
                                                    u11130 0398  
                                                    u11050 036C  
                                                    u10330 0B03  
                                                    u10171 124A  
                                                    u10411 0A88  
                                                    u10251 1105  
                                                    u10091 0DC9  
                                                    u11211 03C3  
                                                    u11131 0397  
                                                    u11051 036B  
                                                    u10331 0B02  
                                                    u10180 124D  
                                                    u10260 1108  
                                                    u11300 0CB7  
                                                    u11220 03CB  
                                                    u11140 039F  
                                                    u11060 0373  
                                                    u10340 0B08  
                                                    u10085 0943  
                                                    u11301 0CB6  
                                                    u11221 03CA  
                                                    u11141 039E  
                                                    u11061 0372  
                                                    u10341 0B07  
                                                    u10270 1780  
                                                    u10430 06C3  
                                                    u11310 0CBC  
                                                    u11230 03D0  
                                                    u11150 03A4  
                                                    u11070 0378  
                                                    u10510 13FA  
                                                    u10271 177F  
                                                    u10431 06C2  
                                                    u11311 0CBB  
                                                    u11231 03CF  
                                                    u11151 03A3  
                                                    u11071 0377  
                                                    u10511 13F9  
                                                    u11400 116A  
                                                    u10360 0D86  
                                                    u11320 0CC3  
                                                    u11240 03D5  
                                                    u11160 03A9  
                                                    u11080 037D  
                                                    u10600 0216  
                                                    u10520 00BB  
                                                    u10425 067C  
                                                    u11401 1169  
                                                    u10361 0D85  
                                                    u11321 0CC2  
                                                    u11241 03D4  
                                                    u11161 03A8  
                                                    u11081 037C  
                                                    u10601 0215  
                                                    u10521 00BA  
                                                    u10290 17AE  
                                                    u10450 09FE  
                                                    u11410 115F  
                                                    u10370 0D8C  
                                                    u10194 13C0  
                                                    u11330 0CC8  
                                                    u11250 03DA  
                                                    u11170 03AE  
                                                    u11090 0382  
                                                    u10354 133A  
                                                    u10610 0241  
                                                    u10530 00E4  
                                                    u10291 17AD  
                                                    u10451 09FD  
                                                    u11411 115E  
                                                    u10371 0D8B  
                                                    u10195 13BF  
                                                    u11331 0CC7  
                                                    u11251 03D9  
                                                    u11171 03AD  
                                                    u11091 0381  
                                                    u10355 1339  
                                                    u10611 0240  
                                                    u10531 00E3  
                                                    u10460 0A02  
                                                    u11500 0441  
                                                    u11420 118E  
                                                    u10380 0DA5  
                                                    u11340 0CCF  
                                                    u11260 03E1  
                                                    u11180 03B5  
                                                    u10620 026D  
                                                    u10540 010F  
                                                    u10700 0AA9  
                                                    u10285 1797  
                                                    u10461 0A01  
                                                    u10445 09F3  
                                                    u11501 0440  
                                                    u11421 118D  
                                                    u10381 0DA4  
                                                    u11341 0CCE  
                                                    u11261 03E0  
                                                    u11181 03B4  
                                                    u10621 026C  
                                                    u10541 010E  
                                                    u10701 0AA8  
                                                    u10470 0A0B  
                                                    u11510 045B  
                                                    u11430 08D4  
                                                    u10390 0DB6  
                                                    u11350 0CD4  
                                                    u11270 03E6  
                                                    u11190 03BA  
                                                    u10630 0299  
                                                    u10550 013A  
                                                    u10710 0ABD  
                                                    u10471 0A09  
                                                    u11511 045A  
                                                    u11431 08D3  
                                                    u10391 0DB5  
                                                    u11351 0CD3  
                                                    u11271 03E5  
                                                    u11191 03B9  
                                                    u10631 0298  
                                                    u10551 0139  
                                                    u10711 0ABC  
                                                    u10480 0A0C  
                                                    u11520 0466  
                                                    u11360 0CDB  
                                                    u11280 03EB  
                                                    u10800 0C4B  
                                                    u10560 0166  
                                                    u10640 0991  
                                                    u10720 09C8  
                                                    u11600 0EF4  
                                                    u11521 0465  
                                                    u11361 0CDA  
                                                    u11281 03EA  
                                                    u10801 0C4A  
                                                    u10561 0165  
                                                    u10641 0990  
                                                    u10721 09C7  
                                                    u11601 0EF3  
                                                    u11530 049F  
                                                    u11370 0CE0  
                                                    u11290 03F0  
                                                    u10810 0C50  
                                                    u10570 0191  
                                                    u10650 09A4  
                                                    u10730 09DB  
                                                    u11531 049E  
                                                    u11435 08D0  
                                                    u11371 0CDF  
                                                    u11291 03EF  
                                                    u10811 0C4F  
                                                    u10571 0190  
                                                    u10651 09A3  
                                                    u10731 09DA  
                                                    u11540 04A6  
                                                    u11460 0637  
                                                    u11380 14EF  
                                                    u10900 031B  
                                                    u10820 02EF  
                                                    u10740 0C27  
                                                    u10580 01BD  
                                                    u10660 0769  
                                                    u11541 04A5  
                                                    u11461 0636  
                                                    u11445 05D4  
                                                    u11381 14EE  
                                                    u10901 031A  
                                                    u10821 02EE  
                                                    u10741 0C26  
                                                    u10581 01BC  
                                                    u10661 0768  
                                                    u11470 0403  
                                                    u11390 14FF  
                                                    u10910 0320  
                                                    u10830 02F4  
                                                    u10750 0C2C  
                                                    u10590 01E9  
                                                    u10670 0783  
                                                    u11550 0EB3  
                                                    u11471 0402  
                                                    u11455 0601  
                                                    u11391 14FE  
                                                    u10911 031F  
                                                    u10831 02F3  
                                                    u10751 0C2B  
                                                    u10591 01E8  
                                                    u10671 0782  
                                                    u11551 0EB2  
                                                    u11480 041E  
                                                    u10920 0325  
                                                    u10840 02F9  
                                                    u10760 0C33  
                                                    u10680 079F  
                                                    u11560 0ED0  
                                                    u11481 041D  
                                                    u10921 0324  
                                                    u10841 02F8  
                                                    u10761 0C32  
                                                    u10681 079E  
                                                    u11561 0ECF  
                                                    u11650 137A  
                                                    u10930 032A  
                                                    u10850 02FE  
                                                    u10770 0C38  
                                                    u10690 07BB  
                                                    u11570 0ED9  
                                                    u11651 1379  
                                                    u10931 0329  
                                                    u10851 02FD  
                                                    u10771 0C37  
                                                    u10691 07BA  
                                                    u11571 0ED8  
                                                    u11660 1380  
                                                    u10940 0331  
                                                    u10860 0305  
                                                    u10780 0C3F  
                                                    u11580 0EE2  
                                                    u11661 137F  
                                                    u10941 0330  
                                                    u10861 0304  
                                                    u10781 0C3E  
                                                    u11581 0EE1  
                                                    u11670 119B  
                                                    u10950 0336  
                                                    u10870 030A  
                                                    u10790 0C44  
                                                    u11590 0EEB  
                                                    u11495 0431  
                                                    u11671 119A  
                                                    u10951 0335  
                                                    u10871 0309  
                                                    u10791 0C43  
                                                    u11591 0EEA  
                                                    u11680 0FFF  
                                                    u10960 033B  
                                                    u10880 030F  
                                                    u11681 0FFE  
                                                    u10961 033A  
                                                    u10881 030E  
                                                    u10970 0340  
                                                    u10890 0314  
                                                    u10971 033F  
                                                    u10891 0313  
                                                    u10980 0347  
                                                    u10981 0346  
                                                    u10990 034C  
                                                    u10991 034B  
                                                    u13800 04E5  
                                                    u13801 04E4  
                                                    u13810 04ED  
                                                    u13811 04EC  
                                                    u13820 050D  
                                                    u13821 050C  
                                                    u13830 052B  
                            __end_of_rn487x_driver_version 2002  
                                                    u13831 052A  
                                                    u13840 0536  
                                                    u13841 0535  
                                                    u13850 053C  
                                                    u13851 053B  
                                                    u13860 055B  
                                                    u13861 055A  
                                                    u13870 0574  
                                                    u13871 0573  
                                                    u13880 0596  
                                                    u13881 0595  
                                                    u13897 134C  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1548  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 0061  
                                                    _begin 0EAB  
                                                    _cinco 00E2  
                                  __end_of_PIN_MANAGER_IOC 10EE  
                                           ??_RN487X_Delay 0076  
                                                    _siete 00E0  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0E0F  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 0800  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 0843  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 0AD0  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0F4C  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1FD6  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1FD5  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 14CD  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 10B5  
                            _EUSART2_SetTxInterruptHandler 10AF  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0E5D  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 0B88  
                                             __end_of_main 0599  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 0815  
                                 _LIGHTBLUE_UpdateErrorLed 14CD  
                               __end_of_RN487X_is_rx_ready 1130  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 004B  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1006  
                              _EUSART2_DefaultErrorHandler 1002  
                                  _LIGHTBLUE_PerformAction 09ED  
                         RN487X_MessageHandler@messageType 0042  
                         __end_of_LIGHTBLUE_SendSerialData 0643  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0D2D  
                                       __end_of_I2C1_DO_TX 0FA2  
                                         _RN487X_DataReady 14E9  
                                       __end_of_I2C1_Close 13E6  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 0BC7  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 005B  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0BC7  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   _RC4PPS 1F24  
                                                   i1l2113 11E1  
                                                   i1l2109 10ED  
                                                   i1l2119 1FD7  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1911 1FD5  
                                                   i1l1904 0B48  
                                                   i1l1744 1545  
                                                   i1l1761 1FD6  
                                                   i1l1914 1FFF  
                                                   i1l1754 0A5D  
                                                   i1l1747 1547  
                                                   i1l1908 147B  
                                                   i1l1764 1009  
                                                   i1l1917 1FFB  
                                                   i1l1758 1416  
                                                   _RN487X 1868  
                                                   i1l1767 1005  
                                                   i1l1960 0026  
                                                   i1l1962 0035  
                                                   i1l1963 0053  
                                                   i1l1964 0044  
                                                   i1l1957 0013  
                                                   i1l1894 1568  
                                                   i1l1897 156A  
                                                   i1l1969 0053  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9504 1006  
                                                   _INLVLA 1F3C  
                                                   i1l9506 1002  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9540 1FFC  
                                                   i1l9542 1FF8  
                                                   i1l9634 11D3  
                                                   i1l8860 13FE  
                                                   i1l9636 11DA  
                                                   i1l8862 1406  
                                                   i1l9638 11DF  
                                                   i1l8880 1462  
                                                   i1l8864 140A  
                                                   i1l8882 146B  
                                                   i1l8866 1410  
                                                   i1l8884 1470  
                                                   i1l8868 1411  
                                                   i1l8886 1476  
                                                   i1l8888 1477  
                                                   u710_20 0B28  
                                                   u702_20 152D  
                                                   u710_21 0B27  
                                                   u702_21 152C  
                                                   u711_20 0B3E  
                                                   u703_20 153F  
                                                   u711_21 0B3D  
                                                   u703_21 153E  
                                                   u704_20 0A2F  
                                                   u712_20 10EA  
                                                   u704_21 0A2E  
                                                   u712_21 10E9  
                                                   u705_20 0A3F  
                                                   u705_21 0A3E  
                       __end_of_RN487X_ReadDefaultResponse 0757  
                               _RN487X_ReadDefaultResponse 06CF  
                                                   u706_20 0A53  
                                                   u706_21 0A52  
                                                   u707_20 154F  
                                                   u707_21 154E  
                                                   u564_20 1410  
                                                   u708_20 1562  
                                                   u564_21 140F  
                                                   u708_21 1561  
                                                   _OSCFRQ 0893  
                                                   u565_20 1476  
                                                   u709_20 0B17  
                                                   u565_21 1475  
                                                   u709_21 0B16  
                                          ?_RN487X_SendCmd 0077  
                                                   u940_20 002A  
                                                   u940_21 0029  
                                                   u669_20 11DA  
                                                   u941_20 002E  
                                                   u669_21 11D9  
                                                   u941_21 002D  
                                                   u942_20 0039  
                                                   u942_21 0038  
                                                   u943_20 003D  
                                                   u935_20 000B  
                                                   u943_21 003C  
                                                   u935_21 000A  
                                                   u944_20 0048  
                                                   u936_20 000F  
                                                   u944_21 0047  
                                                   u936_21 000E  
                                                   u945_20 004C  
                                                   u937_20 0017  
                                                   u945_21 004B  
                                                   u937_21 0016  
                                                   u938_20 001B  
                                                   u938_21 001A  
                                                   _TX1REG 011A  
                                                   u939_20 001F  
                                                   u939_21 001E  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                         __end_of_bitRead8 13CE  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 16EF  
                                setXYAxisRange@xyAxisRange 0033  
                                         __end_of_getError 0B0C  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 18A7  
                            RN487X_EnterDataMode@cmdPrompt 18A2  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0036  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 0037  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07D5  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 0220  
                                                   _bitMap 0050  
                             __end_of_BMA253_GetAccelDataY 17A4  
                             __end_of_BMA253_GetAccelDataZ 17D2  
                                RN487X_FilterData@readChar 0044  
                                                   _cuatro 00E3  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                                ?_TMAG5273_CalcMeasurement 002D  
                                                   _number 006A  
                              _EUSART2_FramingErrorHandler 00E8  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1073  
                                                   _strchr 1430  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 130C  
                                                   _strlen 1417  
                                                   _strstr 0DC2  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 10EE  
                                           _PMD_Initialize 113A  
                                  _BMA253_NewAccelDataRdyY 122E  
                                  _BMA253_NewAccelDataRdyZ 123F  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 1526  
                               LIGHTBLUE_PerformAction@led 002A  
                                           bitWrite8@value 0072  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0075  
                                            _manufactureId 00D6  
                                  _I2C1_DO_RX_NACK_RESTART 1042  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 0948  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 0154  
                                          _eusart1TxBuffer 014C  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 138A  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00CE  
                                  __end_of__initialization 00A5  
                                  _protocol_version_number 2002  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002C  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 18AC  
                             RN487X_EnterCmdMode@cmdPrompt 18A7  
                            __end_of_EUSART1_RxDataHandler 147C  
                                  _rdBlkRegCompleteHandler 147C  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK1 0002  
                                             __pidataBANK3 1250  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1FE9  
                                            __end_of_begin 0EF9  
                                     __end_of_RN487X_Delay 10E5  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 007C  
                                     __end_of_RN487X_Reset 1170  
                                   setOperatingMode@opMode 0033  
                                     __end_of_RN487X_Write 1187  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1144  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 11E2  
                                     __end_of_EUSART1_Read 16EF  
                                     __end_of_EUSART2_Read 16C6  
                                      _LIGHTBLUE_SplitByte 0843  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 11C5  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 14B2  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 0B49  
                                    __end_of_I2C1_DO_RESET 104C  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 09B6  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 002D  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 13A0  
                                 _LIGHTBLUE_SendSerialData 0599  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 0055  
                                            _eusart1TxHead 0058  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0054  
                                            _eusart2TxHead 005D  
                                               __pbssBANK0 004C  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                               __pbssBANK7 03A0  
                                            _eusart2RxTail 005A  
                                            _eusart1TxTail 0057  
                          __end_of_I2C1_MasterWaitForEvent 1067  
                        _EUSART1_TxDefaultInterruptHandler 0164  
                                            _eusart2TxTail 005C  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 15FD  
                            __end_of_rd2RegCompleteHandler 12AD  
                                       _DELAY_milliseconds 1348  
                             __end_of_LIGHTBLUE_Initialize 106D  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 02C4  
                                       _setMagneticChannel 00A9  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 12C0  
                                    _rd1RegCompleteHandler 1287  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1033  
                                    _wr1RegCompleteHandler 1274  
                          __end_of_EUSART1_SetErrorHandler 107F  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04C9  
                                               _getAngleEn 0C9C  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002C  
                         rn487x_PrintMessage@passedMessage 0040  
                          rn487x_PrintMessage@messageIndex 0041  
                                          _I2C1_MasterOpen 11B8  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1FE9  
                                          _I2C1_Initialize 1109  
                             __end_of_LIGHTBLUE_SendPacket 06CF  
                                      __end_of_I2C1_Poller 11B8  
                            __end_of_LIGHTBLUE_AccelSensor 1800  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1085  
                           _EUSART1_SetFramingErrorHandler 107F  
                                                  ?_strstr 0077  
                                    _eusart2RxStatusBuffer 00C6  
                                                  i1l10100 0A2A  
                                                  i1l10110 0A44  
                                                  i1l10102 0A2F  
                                                  i1l10112 0A4A  
                                                  i1l10104 0A34  
                                                  i1l10120 154F  
                                                  i1l10114 0A53  
                                                  i1l10106 0A3A  
                                                  i1l10130 0B0C  
                                                  i1l10122 1557  
                                                  i1l10116 0A5A  
                                                  i1l10108 0A3F  
                                                  i1l10140 0B28  
                                                  i1l10132 0B12  
                                                  i1l10124 155C  
                                                  i1l10142 0B2E  
                                                  i1l10134 0B17  
                                                  i1l10126 1562  
                                                  i1l10118 1548  
                                                  i1l10150 10E5  
                                                  i1l10144 0B34  
                                                  i1l10136 0B1D  
                                                  i1l10128 1563  
                                                  i1l10152 10EA  
                                                  i1l10146 0B3E  
                                                  i1l10138 0B23  
                                                  i1l10090 1534  
                                                  i1l10148 0B45  
                                                  i1l10092 1539  
                                                  i1l10094 153F  
                                                  i1l10086 1526  
                                                  i1l10096 1540  
                                                  i1l10088 152D  
                                                  i1l10098 0A25  
                                                  i1l11950 0017  
                                                  i1l11960 0039  
                                                  i1l11952 001B  
                                                  i1l11944 0006  
                                                  i1l11962 003D  
                                                  i1l11954 001F  
                                                  i1l11946 000B  
                                                  i1l11964 0048  
                                                  i1l11956 002A  
                                                  i1l11948 000F  
                                                  i1l11966 004C  
                                                  i1l11958 002E  
                             getMagneticChannel@magChannel 002C  
                                    ?_RN487X_EnterDataMode 0070  
                                            _writeRegister 1170  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                                ?_bitRead8 0071  
                                        _I2C1_MasterIsNack 105B  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 08DB  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1700 12E6  
          _rd2RegCompleteHandler@i2c1_master_example$F1700 12D3  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1712 1274  
          _wr2RegCompleteHandler@i2c1_master_example$F1712 1261  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1706 12F9  
          _wr1RegCompleteHandler@i2c1_master_example$F1706 12E6  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1723 14B2  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1723 1497  
                              __end_of_EUSART2_Receive_ISR 0A5E  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1689 12D3  
          _rd1RegCompleteHandler@i2c1_master_example$F1689 12C0  
                       __end_of_IOCAF6_SetInterruptHandler 10BB  
                               _IOCAF6_SetInterruptHandler 10B5  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 1462  
                                       _TMAG5273_GetXValue 11F1  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1FF2  
                                     ??_getMagneticChannel 007B  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0031  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 120F  
                               _LIGHTBLUE_SetErrorLedValue 1200  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 007B  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1776  
                                     _BMA253_GetAccelDataZ 17A4  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1056  
                                      ?_TMAG5273_GetXValue 0070  
                                          _asyncBufferSize 0062  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00D8  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                        __end_of_bitWrite8 1348  
                                __end_of_I2C1_DO_SEND_STOP 1038  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 0911  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0071  
                           __end_of_i2c_write1ByteRegister 08A7  
                                        _RN487X_FilterData 0D76  
                                 __end_of_RN487X_DataReady 1505  
                             __end_of_LIGHTBLUE_PushButton 130C  
                                     __end_of_readRegister 11AB  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1100  
                               __end_of_EUSART1_is_tx_done 101A  
                          __end_of_EUSART2_SetErrorHandler 109D  
                                            ?_I2C1_DO_IDLE 0070  
                                     ??_TMAG5273_GetXValue 007C  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 115A  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0EAB  
                                                  __ptext2 09B6  
                                                  __ptext3 0A97  
                                                  __ptext4 097F  
                                                  __ptext5 0757  
                                                  __ptext6 00A9  
                                                  __ptext7 1170  
                                                  __ptext8 0874  
                                                  __ptext9 0AD0  
                                 _I2C1_MasterEnableRestart 1FE6  
                                __end_of_I2C1_MasterIsNack 1061  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0043  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0070  
               __end_of_EUSART2_DefaultOverrunErrorHandler 100A  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1006  
                                    _OSCILLATOR_Initialize 1130  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1FF5  
                                 __end_of_I2C1_DO_TX_EMPTY 171C  
                                               ??_bitRead8 0072  
                                       _EUSART1_Initialize 0B49  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2000  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                               ??_getError 007C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1126  
                                         ??_setXYAxisRange 0031  
                  TMAG5273_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 10BC  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0EF9  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1029  
                                     end_of_initialization 00A5  
                               __end_of_I2C1_MasterSendAck 1012  
               __end_of_RN487X_Read@rn487x_interface$F1831 111C  
                       _RN487X_Read@rn487x_interface$F1831 1112  
                      ?_RN487X_Read@rn487x_interface$F1832 0070  
                     ??_RN487X_Read@rn487x_interface$F1834 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 1374  
                              _LIGHTBLUE_TemperatureSensor 135E  
                                      _I2C1_MasterClearIrq 1FDA  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1016  
                           __end_of_rn487x_PrintMessageEnd 0EAB  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 10C1  
                               __end_of_I2C1_MasterStartRx 1FEF  
                              _EUSART1_OverrunErrorHandler 015E  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 10C2  
                         __end_of_TMAG5273_CalcMeasurement 15D7  
                                   _I2C1_DO_SEND_ADR_WRITE 10D5  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0030  
                                __end_of_RN487X_FilterData 0DC2  
                             __end_of_I2C1_DO_SEND_RESTART 1033  
                                  __end_of_I2C1_MasterOpen 11C5  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1FEC  
                                  __end_of_I2C1_Initialize 1112  
                    __end_of_EUSART1_SetRxInterruptHandler 1091  
                            _EUSART1_SetRxInterruptHandler 108B  
                                              _I2C1_Poller 11AB  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 0B88  
                            __end_of_I2C1_MasterDisableIrq 1FE3  
                                              _I2C1_Status 00A0  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0C0D  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2004  
                               __end_of_RN487X_IsConnected 1FF8  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 100A  
                      __end_of_I2C1_SetAddressNackCallback 115A  
                              _I2C1_SetAddressNackCallback 114F  
                                __end_of_RN487X_IndicateRx 1165  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0071  
                                                  strchr@s 0073  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 102E  
                               _I2C1_DO_SEND_RESTART_WRITE 1029  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0072  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0031  
                                      _EUSART2_is_rx_ready 10F7  
                                                  strlen@s 0071  
                                           __deviceAddress 006F  
                                               _returnStop 0000  
                                                  strstr@h 0022  
                                                  strstr@n 0077  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0C54  
                          __end_of_rdBlkRegCompleteHandler 1497  
                                    ??_rn487x_PrintMessage 0076  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1067  
                                  _statusBuffer@main$F4230 03A0  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 007B  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E6  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                       TMAG5273_CalcMeasurement@regAddress 007B  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 10DD  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 002D  
                                  getOperatingMode@opMode1 002E  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0A5E  
                                     _LIGHTBLUE_SendPacket 0643  
                                             _RN487X_Reset 1165  
                                _LIGHTBLUE_GetDataLedValue 106D  
                                             _RN487X_Write 117B  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 16C6  
                                             _EUSART2_Read 169D  
                         __end_of_LIGHTBLUE_GetButtonValue 1079  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004C  
                            __end_of_EUSART2_RxDataHandler 1417  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 1749  
                                __end_of_RN487X_SetOutputs 0C9C  
                                            _setZAxisRange 09B6  
                                           _I2C1_DO_RX_ACK 1038  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 005E  
                          __end_of_I2C1_CallbackReturnStop 1FDA  
                            __end_of_I2C1_MasterSendTxData 101F  
                                           __end_of_strchr 1449  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1320  
                                           __end_of_strlen 1430  
                                           __end_of_strstr 0E0F  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0038  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0033  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 120F  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0034  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 12F9  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0034  
                                    __end_of_EUSART1_Write 1674  
                                    __end_of_EUSART2_Write 1624  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 122E  
                                       ??_setTemperatureEn 0031  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002D  
                               getMagneticChannel@magMode5 002E  
                               getMagneticChannel@magMode6 002F  
                               getMagneticChannel@magMode7 0030  
                                 I2C1_SetBuffer@bufferSize 0073  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 10A9  
                           _EUSART2_SetOverrunErrorHandler 10A3  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 002E  
                                      __end_of_isConnected 13FE  
                                getTemperatureEN@tempENreg 002D  
                                         bitRead8@position 0071  
                                 _TMAG5273_CalcMeasurement 15B2  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0034  
                                   __end_of_I2C1_DO_RX_ACK 103D  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 1462  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 15D7  
                                              __pdataBANK1 00EE  
                                              __pdataBANK3 01A0  
                                            bitWrite8@mask 0074  
                                                 ??_strchr 0073  
                                                 ??_strcpy 0072  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0053  
                                                 ??_strstr 0079  
                                           _eusart2RxCount 0059  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 102E  
                        _EUSART1_RxDefaultInterruptHandler 0162  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK2 016A  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 119F  
                                      __end_of_RN487X_Init 1000  
                                      __end_of_RN487X_Read 119F  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 13A0  
                                     __end_of_I2C1_DO_IDLE 1024  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 10CE  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 005F  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00E6  
                                                __pnvBANK2 015C  
                                    _rd2RegCompleteHandler 129A  
                                             bitRead8@mask 0073  
                                    __end_of_fsmStateTable 1868  
                                                _main$5429 016A  
                                   _PIN_MANAGER_Initialize 0D2D  
                                    _wr2RegCompleteHandler 12AD  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                                _bitWrite8 1334  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1674  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 11F1  
                                                __ptext101 15B2  
                                                __ptext110 11B8  
                                                __ptext102 0BC7  
                                                __ptext111 104C  
                                                __ptext103 17A4  
                                                __ptext120 1038  
                                                __ptext112 1505  
                                                __ptext104 123F  
                                                __ptext121 1033  
                                                __ptext113 11AB  
                                                __ptext105 1776  
                                                __ptext130 101F  
                                                __ptext122 102E  
                                                __ptext114 1061  
                                                __ptext106 122E  
                                                __ptext131 16EF  
                                                __ptext123 1029  
                                                __ptext115 1674  
                                                __ptext107 0E0F  
                                                __ptext140 1FD8  
                                                __ptext132 1FF2  
                                                __ptext124 1024  
                                                __ptext116 1624  
                                                __ptext108 114F  
                                                __ptext141 1497  
                                                __ptext133 105B  
                                                __ptext125 10C7  
                                                __ptext117 1047  
                                                __ptext109 08DB  
                                                __ptext150 1261  
                                                __ptext142 12E6  
                                                __ptext134 101A  
                                                __ptext126 0CE4  
                                                __ptext118 1042  
                                                __ptext151 1144  
                                                __ptext143 12D3  
                                                __ptext135 100E  
                                                __ptext127 0F4C  
                                                __ptext119 103D  
                                                __ptext160 1FDA  
                                                __ptext152 158E  
                                                __ptext144 12C0  
                                                __ptext136 1FEF  
                                                __ptext128 10D5  
                                                __ptext153 11E2  
                                                __ptext145 147C  
                                                __ptext137 100A  
                                                __ptext129 10EE  
                                                __ptext170 1FD6  
                                                __ptext162 10E5  
                                                __ptext154 1FE9  
                                                __ptext146 12AD  
                                                __ptext138 1FEC  
                                                __ptext171 1002  
                                                __ptext163 11D3  
                                                __ptext155 1FE6  
                                                __ptext147 129A  
                                                __ptext139 1000  
                                                __ptext172 13FE  
                                                __ptext164 1FD7  
                                                __ptext156 1FE3  
                                                __ptext148 1287  
                                                __ptext173 1FFC  
                                                __ptext165 1548  
                                                __ptext157 13CE  
                                                __ptext149 1274  
                                                __ptext174 1FD5  
                                                __ptext166 1526  
                                                __ptext158 1FE0  
                                                __ptext175 1FF8  
                                                __ptext167 0B0C  
                                                __ptext159 1FDD  
                                                __ptext176 1462  
                                                __ptext168 0A25  
                                                __ptext169 1006  
                                      getAngleEn@angleDir2 002D  
                                      getAngleEn@angleDir3 002E  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00DA  
                                 _LIGHTBLUE_GetButtonValue 1073  
                        _EUSART2_TxDefaultInterruptHandler 00EC  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                  _I2C1_MasterWaitForEvent 1061  
                                         _I2C1_MasterClose 1FDD  
                                  getError@oscillatorError 002F  
                                           _I2C1_SetBuffer 11E2  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006E  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1FE3  
                                                _connected 0064  
                                         _I2C1_MasterWrite 104C  
                                    _LIGHTBLUE_AccelSensor 17D2  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_wr1RegCompleteHandler@strncmp$F4840 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4850 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4852 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4844 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4846 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4838 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4847 0078  
                   ?_rdBlkRegCompleteHandler@strncmp$F4856 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4849 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4858 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 2000  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1FFC  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015C  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 121E  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1079  
                              __end_of_LIGHTBLUE_SplitByte 0874  
                                 __end_of_getOperatingMode 0C54  
                         __end_of_I2C1_CallbackReturnReset 1002  
                              __end_of_LIGHTBLUE_SplitWord 11D3  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 002D  
                                       _EUSART1_is_tx_done 1016  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 13E6  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 158E  
                                        _RN487X_is_tx_done 111C  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0CE4  
                                               _I2C1_DO_TX 0F4C  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 10BB  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006D  
                                               _I2C1_Close 13CE  
                    __end_of_LIGHTBLUE_SendProtocolVersion 08DB  
                            _LIGHTBLUE_SendProtocolVersion 08A7  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 169D  
                                                _lowerByte 0066  
                             __end_of_I2C1_MasterGetRxData 1FF2  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 007B  
                                                 _PIR3bits 070F  
                                               ?_bitWrite8 0071  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0031  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 1449  
                                       _I2C1_MasterSendAck 100E  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 158E  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 156B  
                                _I2C1_DO_SEND_RESTART_READ 1024  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0034  
                                       _EUSART2_is_tx_done 1012  
                                   __end_of_I2C1_SetBuffer 11F1  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 114F  
                             _I2C1_SetDataCompleteCallback 1144  
                                       _I2C1_MasterStartRx 1FEC  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0045  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                      TMAG5273_GetXValue@x 0034  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 0FA2  
                                              _RN487X_Read 1193  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002C  
                             __end_of_RN487X_SetSystemMode 1193  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 10CE  
                                                _upperByte 0067  
                             __end_of_I2C1_DO_ADDRESS_NACK 164C  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1FF5  
                            __end_of_i2c_read1ByteRegister 0E5D  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 10DD  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1047  
                                              _asyncBuffer 0063  
                                       __end_of_getAngleEn 0CE4  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0034  
                                __end_of_RN487X_is_tx_done 1126  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1097  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 006B  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0168  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0033  
                             __end_of_I2C1_MasterOperation 1526  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 0A25  
                          ??_RN487X_SetAsyncMessageHandler 0072  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1097  
                            _EUSART1_SetTxInterruptHandler 1091  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 10AF  
                            _EUSART2_SetRxInterruptHandler 10A9  
                      LIGHTBLUE_ParseIncomingPacket@length 006C  
                                 __end_of_getTemperatureEN 121E  
                                  setZAxisRange@zAxisRange 0033  
                                ??_I2C1_MasterWaitForEvent 0071  
       rd2RegCompleteHandler@i2c1_master_example$F1700@ptr 0078  
                             RN487X_SetOutputs@ioLowNibble 0022  
                              __end_of_rn487x_PrintMessage 0948  
       wr2RegCompleteHandler@i2c1_master_example$F1712@ptr 0078  
                                    _I2C1_MasterDisableIrq 1FE0  
       wr1RegCompleteHandler@i2c1_master_example$F1706@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1723@ptr 0078  
                                             bitWrite8@reg 0075  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
       rd1RegCompleteHandler@i2c1_master_example$F1689@ptr 0078  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1FFC  
                              _EUSART1_DefaultErrorHandler 1FF8  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1109  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0A97  
                                                 _bitRead8 13B7  
                                              bitRead8@reg 0074  
                                     _EUSART2_ErrorHandler 0166  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0032  
                            __end_of_i2c_read2ByteRegister 0C0D  
                                                 _getError 0AD0  
                                                 __ptext10 10CE  
                                                 __ptext11 1334  
                                                 __ptext20 119F  
                                                 __ptext12 13E6  
                                                 __ptext21 13B7  
                                                 __ptext13 1449  
                                                 __ptext30 0B88  
                                                 __ptext22 1056  
                                                 __ptext14 0800  
                                                 __ptext31 10AF  
                                                 __ptext23 138A  
                                                 __ptext15 120F  
                                                 __ptext40 107F  
                                                 __ptext32 10A9  
                                                 __ptext24 1320  
                                                 __ptext16 0C0D  
                                                 __ptext41 1079  
                                                 __ptext33 10A3  
                                                 __ptext25 113A  
                                                 __ptext17 02C4  
                                                 __ptext50 1749  
                                                 __ptext42 1374  
                                                 __ptext34 109D  
                                                 __ptext26 0D2D  
                                                 __ptext18 121E  
                                                 __ptext51 0E5D  
                                                 __ptext43 1193  
                                                 __ptext35 1097  
                                                 __ptext27 10B5  
                                                 __ptext19 0C9C  
                                                 __ptext60 1187  
                                                 __ptext52 0911  
                                                 __ptext44 14E9  
                                                 __ptext36 0B49  
                                                 __ptext28 1130  
                                                 __ptext61 1165  
                                                 __ptext53 130C  
                                                 __ptext45 0D76  
                                                 __ptext37 1091  
                                                 __ptext29 1109  
                                                 __ptext70 09ED  
                                                 __ptext62 115A  
                                                 __ptext54 156B  
                                                 __ptext46 0948  
                                                 __ptext38 108B  
                                                 __ptext71 1200  
                                                 __ptext63 135E  
                                                 __ptext55 1FF5  
                                                 __ptext47 0DC2  
                                                 __ptext39 1085  
                                                 __ptext80 1012  
                                                 __ptext72 14CD  
                                                 __ptext64 171C  
                                                 __ptext56 0FA2  
                                                 __ptext48 0EF9  
                                                 __ptext81 07D5  
                                                 __ptext73 0C54  
                                                 __ptext65 0599  
                                                 __ptext57 1126  
                                                 __ptext49 1430  
                                                 __ptext90 1067  
                                                 __ptext82 1112  
                                                 __ptext74 06CF  
                                                 __ptext66 08A7  
                                                 __ptext58 1100  
                                                 __ptext91 17D2  
                                                 __ptext83 16C6  
                                                 __ptext75 14B2  
                                                 __ptext67 12F9  
                                                 __ptext59 10F7  
                                                 __ptext92 11C5  
                                                 __ptext84 169D  
                                                 __ptext76 13A0  
                                                 __ptext68 1073  
                                                 __ptext93 0843  
                                                 __ptext85 10DD  
                                                 __ptext77 0815  
                                                 __ptext69 03F2  
                                                 __ptext94 0643  
                                                 __ptext86 1348  
                                                 __ptext78 111C  
                                                 __ptext95 1417  
                                                 __ptext87 15D7  
                                                 __ptext79 1016  
                                                 __ptext96 117B  
                                                 __ptext88 1051  
                                                 __ptext97 164C  
                                                 __ptext89 106D  
                                                 __ptext98 15FD  
                                                 __ptext99 0A5E  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 11D3  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0073  
                               ??_TMAG5273_CalcMeasurement 002F  
                                 _I2C1_CallbackReturnReset 1000  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1FD7  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1FD6  
                          __end_of_BMA253_NewAccelDataRdyY 123F  
                          __end_of_BMA253_NewAccelDataRdyZ 1250  
                                          _lightBlueSerial 02A0  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1FDD  
                             __end_of_I2C1_DO_RX_NACK_STOP 1042  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                              ??_bitWrite8 0073  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0072  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1056  
                               _LIGHTBLUE_GetErrorLedValue 1051  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1047  
                             RN487X_GetInputsValues@F12901 00EE  
                                   getTemperatureEN@tempEN 002C  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 13FE  
                                  __end_of_getDeviceStatus 10D5  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 10F7  
                              _EUSART1_FramingErrorHandler 0160  
                                             _I2C1_DO_IDLE 101F  
                                      _EUSART1_Receive_ISR 0B0C  
                                             _I2C1_DO_RCEN 10C7  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 100E  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 117B  
                                        bitWrite8@position 0071  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1100  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002C  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 189C  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1FEF  
                                    _I2C1_MasterSendTxData 101A  
                            __end_of_RN487X_MessageHandler 097F  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 007B  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1FE0  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1FE6  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1051  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 108B  
                           _EUSART1_SetOverrunErrorHandler 1085  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1FD8  
                             __end_of_EUSART1_Transmit_ISR 156B  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0052  
                                     _RN487X_SetSystemMode 1187  
                                     _I2C1_DO_ADDRESS_NACK 1624  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 138A  
                            _RN487X_SetAsyncMessageHandler 1374  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 00DC  
                                       _eusart1RxLastError 00DE  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2000  
                                            __pstringtext6 2002  
                                            __pstringtext7 1886  
                                            __pstringtext8 18A2  
                                            __pstringtext9 18A7  
                                      _EUSART2_Receive_ISR 0A25  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 15B2  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 1FD8  
                           _IOCAF6_DefaultInterruptHandler 1FD7  
                                     _I2C1_MasterOperation 1505  
                                          _TMR0_Initialize 1320  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0076  
                                                 strncmp@n 0073  
                                                 strncmp@r 0071  
                        _LIGHTBLUE_ParseIncomingPacket$431 002D  
                        _LIGHTBLUE_ParseIncomingPacket$432 002F  
                        _LIGHTBLUE_ParseIncomingPacket$433 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0757  
                                                 strstr@nl 0020  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0D76  
                                       ??_getOperatingMode 007B  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 129A  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 00DF  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1776  
                                          _PIN_MANAGER_IOC 10E5  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 1287  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 14E9  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EA  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
