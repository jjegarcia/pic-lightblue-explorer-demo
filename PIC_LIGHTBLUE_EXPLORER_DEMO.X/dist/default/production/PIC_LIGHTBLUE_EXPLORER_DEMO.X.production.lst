

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Dec 19 18:14:50 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	clrtext,global,class=CODE,delta=2
    35                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    36                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    37                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    40                           	psect	text1,local,class=CODE,merge=1,delta=2
    41                           	psect	text2,local,class=CODE,merge=1,delta=2
    42                           	psect	text3,local,class=CODE,merge=1,delta=2
    43                           	psect	text4,local,class=CODE,merge=1,delta=2
    44                           	psect	text5,local,class=CODE,merge=1,delta=2
    45                           	psect	text6,local,class=CODE,merge=1,delta=2
    46                           	psect	text7,local,class=CODE,merge=1,delta=2
    47                           	psect	text8,local,class=CODE,merge=1,delta=2
    48                           	psect	text9,local,class=CODE,merge=1,delta=2
    49                           	psect	text10,local,class=CODE,merge=1,delta=2
    50                           	psect	text11,local,class=CODE,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,merge=1,delta=2
    52                           	psect	text13,local,class=CODE,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,merge=1,delta=2
    54                           	psect	text15,local,class=CODE,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,merge=1,delta=2
    58                           	psect	text19,local,class=CODE,merge=1,delta=2
    59                           	psect	text20,local,class=CODE,merge=1,delta=2
    60                           	psect	text21,local,class=CODE,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,merge=1,delta=2
    72                           	psect	text33,local,class=CODE,merge=1,delta=2
    73                           	psect	text34,local,class=CODE,merge=1,delta=2
    74                           	psect	text35,local,class=CODE,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text53,local,class=CODE,merge=1,delta=2
    93                           	psect	text54,local,class=CODE,merge=1,delta=2
    94                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text56,local,class=CODE,merge=1,delta=2
    96                           	psect	text57,local,class=CODE,merge=1,delta=2
    97                           	psect	text58,local,class=CODE,merge=1,delta=2
    98                           	psect	text59,local,class=CODE,merge=1,delta=2
    99                           	psect	text60,local,class=CODE,merge=1,delta=2
   100                           	psect	text61,local,class=CODE,merge=1,delta=2
   101                           	psect	text62,local,class=CODE,merge=1,delta=2
   102                           	psect	text63,local,class=CODE,merge=1,delta=2
   103                           	psect	text64,local,class=CODE,merge=1,delta=2
   104                           	psect	text65,local,class=CODE,merge=1,delta=2
   105                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text70,local,class=CODE,merge=1,delta=2
   110                           	psect	text71,local,class=CODE,merge=1,delta=2
   111                           	psect	text72,local,class=CODE,merge=1,delta=2
   112                           	psect	text73,local,class=CODE,merge=1,delta=2
   113                           	psect	text74,local,class=CODE,merge=1,delta=2
   114                           	psect	text75,local,class=CODE,merge=1,delta=2
   115                           	psect	text76,local,class=CODE,merge=1,delta=2
   116                           	psect	text77,local,class=CODE,merge=1,delta=2
   117                           	psect	text78,local,class=CODE,merge=1,delta=2
   118                           	psect	text79,local,class=CODE,merge=1,delta=2
   119                           	psect	text80,local,class=CODE,merge=1,delta=2
   120                           	psect	text81,local,class=CODE,merge=1,delta=2
   121                           	psect	text82,local,class=CODE,merge=1,delta=2
   122                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text84,local,class=CODE,merge=1,delta=2
   124                           	psect	text85,local,class=CODE,merge=1,delta=2
   125                           	psect	text86,local,class=CODE,merge=1,delta=2
   126                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text88,local,class=CODE,merge=1,delta=2
   128                           	psect	text89,local,class=CODE,merge=1,delta=2
   129                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   130                           	psect	text91,local,class=CODE,merge=1,delta=2
   131                           	psect	text92,local,class=CODE,merge=1,delta=2
   132                           	psect	text93,local,class=CODE,merge=1,delta=2
   133                           	psect	text94,local,class=CODE,merge=1,delta=2
   134                           	psect	text95,local,class=CODE,merge=1,delta=2
   135                           	psect	text96,local,class=CODE,merge=1,delta=2
   136                           	psect	text97,local,class=CODE,merge=1,delta=2
   137                           	psect	text98,local,class=CODE,merge=1,delta=2
   138                           	psect	text99,local,class=CODE,merge=1,delta=2
   139                           	psect	text100,local,class=CODE,merge=1,delta=2,group=2
   140                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text102,local,class=CODE,merge=1,delta=2
   142                           	psect	text103,local,class=CODE,merge=1,delta=2
   143                           	psect	text104,local,class=CODE,merge=1,delta=2
   144                           	psect	text105,local,class=CODE,merge=1,delta=2
   145                           	psect	text106,local,class=CODE,merge=1,delta=2
   146                           	psect	text107,local,class=CODE,merge=1,delta=2
   147                           	psect	text108,local,class=CODE,merge=1,delta=2
   148                           	psect	text109,local,class=CODE,merge=1,delta=2
   149                           	psect	text110,local,class=CODE,merge=1,delta=2
   150                           	psect	text111,local,class=CODE,merge=1,delta=2
   151                           	psect	text112,local,class=CODE,merge=1,delta=2
   152                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text114,local,class=CODE,merge=1,delta=2
   154                           	psect	text115,local,class=CODE,merge=1,delta=2
   155                           	psect	text116,local,class=CODE,merge=1,delta=2
   156                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text119,local,class=CODE,merge=1,delta=2
   159                           	psect	text120,local,class=CODE,merge=1,delta=2
   160                           	psect	text121,local,class=CODE,merge=1,delta=2
   161                           	psect	text122,local,class=CODE,merge=1,delta=2
   162                           	psect	text123,local,class=CODE,merge=1,delta=2
   163                           	psect	text124,local,class=CODE,merge=1,delta=2
   164                           	psect	text125,local,class=CODE,merge=1,delta=2
   165                           	psect	text126,local,class=CODE,merge=1,delta=2
   166                           	psect	text127,local,class=CODE,merge=1,delta=2
   167                           	psect	text128,local,class=CODE,merge=1,delta=2
   168                           	psect	text129,local,class=CODE,merge=1,delta=2
   169                           	psect	text130,local,class=CODE,merge=1,delta=2
   170                           	psect	text131,local,class=CODE,merge=1,delta=2
   171                           	psect	text132,local,class=CODE,merge=1,delta=2
   172                           	psect	text133,local,class=CODE,merge=1,delta=2
   173                           	psect	text134,local,class=CODE,merge=1,delta=2
   174                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text142,local,class=CODE,merge=1,delta=2
   182                           	psect	text143,local,class=CODE,merge=1,delta=2
   183                           	psect	text144,local,class=CODE,merge=1,delta=2
   184                           	psect	text145,local,class=CODE,merge=1,delta=2
   185                           	psect	text146,local,class=CODE,merge=1,delta=2
   186                           	psect	text147,local,class=CODE,merge=1,delta=2
   187                           	psect	text148,local,class=CODE,merge=1,delta=2
   188                           	psect	text149,local,class=CODE,merge=1,delta=2
   189                           	psect	text150,local,class=CODE,merge=1,delta=2
   190                           	psect	text151,local,class=CODE,merge=1,delta=2
   191                           	psect	text152,local,class=CODE,merge=1,delta=2
   192                           	psect	text153,local,class=CODE,merge=1,delta=2
   193                           	psect	text154,local,class=CODE,merge=1,delta=2
   194                           	psect	text155,local,class=CODE,merge=1,delta=2
   195                           	psect	text156,local,class=CODE,merge=1,delta=2
   196                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   197                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text160,local,class=CODE,merge=1,delta=2
   200                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   201                           	psect	text162,local,class=CODE,merge=1,inline,delta=2
   202                           	psect	text163,local,class=CODE,merge=1,inline,delta=2
   203                           	psect	intentry,global,class=CODE,delta=2
   204                           	psect	text165,local,class=CODE,merge=1,delta=2
   205                           	psect	text166,local,class=CODE,merge=1,delta=2
   206                           	psect	text167,local,class=CODE,merge=1,delta=2
   207                           	psect	text168,local,class=CODE,merge=1,delta=2
   208                           	psect	text169,local,class=CODE,merge=1,delta=2
   209                           	psect	text170,local,class=CODE,merge=1,delta=2
   210                           	psect	text171,local,class=CODE,merge=1,delta=2
   211                           	psect	text172,local,class=CODE,merge=1,delta=2
   212                           	psect	text173,local,class=CODE,merge=1,delta=2
   213                           	psect	text174,local,class=CODE,merge=1,delta=2
   214                           	psect	text175,local,class=CODE,merge=1,delta=2
   215                           	psect	text176,local,class=CODE,merge=1,delta=2
   216                           	psect	text177,local,class=CODE,merge=1,delta=2
   217                           	psect	text178,local,class=CODE,merge=1,delta=2
   218                           	psect	text179,local,class=CODE,merge=1,delta=2
   219                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   220                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   221                           	dabs	1,0x7E,2
   222     0000                     
   223                           ; Version 2.35
   224                           ; Generated 01/06/2021 GMT
   225                           ; 
   226                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   227                           ; All rights reserved.
   228                           ; 
   229                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   230                           ; 
   231                           ; Redistribution and use in source and binary forms, with or without modification, are
   232                           ; permitted provided that the following conditions are met:
   233                           ; 
   234                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   235                           ;        conditions and the following disclaimer.
   236                           ; 
   237                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   238                           ;        of conditions and the following disclaimer in the documentation and/or other
   239                           ;        materials provided with the distribution. Publication is not required when
   240                           ;        this file is used in an embedded application.
   241                           ; 
   242                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   243                           ;        software without specific prior written permission.
   244                           ; 
   245                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   246                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   247                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   248                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   249                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   250                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   251                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   252                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   253                           ; 
   254                           ; 
   255                           ; Code-generator required, PIC16LF18456 Definitions
   256                           ; 
   257                           ; SFR Addresses
   258     0000                     	;# 
   259     0001                     	;# 
   260     0002                     	;# 
   261     0003                     	;# 
   262     0004                     	;# 
   263     0005                     	;# 
   264     0006                     	;# 
   265     0007                     	;# 
   266     0008                     	;# 
   267     0009                     	;# 
   268     000A                     	;# 
   269     000B                     	;# 
   270     000C                     	;# 
   271     000D                     	;# 
   272     000E                     	;# 
   273     0010                     	;# 
   274     0012                     	;# 
   275     0013                     	;# 
   276     0014                     	;# 
   277     0016                     	;# 
   278     0018                     	;# 
   279     0019                     	;# 
   280     001A                     	;# 
   281     001C                     	;# 
   282     008C                     	;# 
   283     008C                     	;# 
   284     008D                     	;# 
   285     008E                     	;# 
   286     008E                     	;# 
   287     008F                     	;# 
   288     0090                     	;# 
   289     0090                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     010C                     	;# 
   311     010C                     	;# 
   312     010D                     	;# 
   313     010E                     	;# 
   314     010F                     	;# 
   315     010F                     	;# 
   316     0110                     	;# 
   317     0111                     	;# 
   318     0112                     	;# 
   319     0113                     	;# 
   320     0114                     	;# 
   321     0115                     	;# 
   322     0116                     	;# 
   323     0117                     	;# 
   324     0118                     	;# 
   325     0119                     	;# 
   326     0119                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011A                     	;# 
   330     011A                     	;# 
   331     011B                     	;# 
   332     011B                     	;# 
   333     011B                     	;# 
   334     011B                     	;# 
   335     011B                     	;# 
   336     011C                     	;# 
   337     011C                     	;# 
   338     011C                     	;# 
   339     011D                     	;# 
   340     011D                     	;# 
   341     011D                     	;# 
   342     011E                     	;# 
   343     011E                     	;# 
   344     011E                     	;# 
   345     011F                     	;# 
   346     011F                     	;# 
   347     011F                     	;# 
   348     011F                     	;# 
   349     011F                     	;# 
   350     018C                     	;# 
   351     018D                     	;# 
   352     018E                     	;# 
   353     018F                     	;# 
   354     0190                     	;# 
   355     0191                     	;# 
   356     0192                     	;# 
   357     0196                     	;# 
   358     0197                     	;# 
   359     0198                     	;# 
   360     0199                     	;# 
   361     019A                     	;# 
   362     019B                     	;# 
   363     019C                     	;# 
   364     020C                     	;# 
   365     020D                     	;# 
   366     020E                     	;# 
   367     020E                     	;# 
   368     020F                     	;# 
   369     020F                     	;# 
   370     0210                     	;# 
   371     0210                     	;# 
   372     0211                     	;# 
   373     0211                     	;# 
   374     0212                     	;# 
   375     0213                     	;# 
   376     0214                     	;# 
   377     0214                     	;# 
   378     0215                     	;# 
   379     0215                     	;# 
   380     0216                     	;# 
   381     0216                     	;# 
   382     0217                     	;# 
   383     0217                     	;# 
   384     0218                     	;# 
   385     0219                     	;# 
   386     021A                     	;# 
   387     021A                     	;# 
   388     021B                     	;# 
   389     021B                     	;# 
   390     021C                     	;# 
   391     021C                     	;# 
   392     021D                     	;# 
   393     021D                     	;# 
   394     021E                     	;# 
   395     021F                     	;# 
   396     028C                     	;# 
   397     028C                     	;# 
   398     028D                     	;# 
   399     028D                     	;# 
   400     028E                     	;# 
   401     028F                     	;# 
   402     0290                     	;# 
   403     0291                     	;# 
   404     0292                     	;# 
   405     0292                     	;# 
   406     0293                     	;# 
   407     0293                     	;# 
   408     0294                     	;# 
   409     0295                     	;# 
   410     0296                     	;# 
   411     0297                     	;# 
   412     0298                     	;# 
   413     0298                     	;# 
   414     0299                     	;# 
   415     0299                     	;# 
   416     029A                     	;# 
   417     029B                     	;# 
   418     029C                     	;# 
   419     029D                     	;# 
   420     029F                     	;# 
   421     030C                     	;# 
   422     030C                     	;# 
   423     030D                     	;# 
   424     030E                     	;# 
   425     030F                     	;# 
   426     0310                     	;# 
   427     0310                     	;# 
   428     0311                     	;# 
   429     0312                     	;# 
   430     0313                     	;# 
   431     0314                     	;# 
   432     0314                     	;# 
   433     0315                     	;# 
   434     0316                     	;# 
   435     0317                     	;# 
   436     0318                     	;# 
   437     0318                     	;# 
   438     0319                     	;# 
   439     031A                     	;# 
   440     031B                     	;# 
   441     031C                     	;# 
   442     031C                     	;# 
   443     031D                     	;# 
   444     031E                     	;# 
   445     031F                     	;# 
   446     038C                     	;# 
   447     038C                     	;# 
   448     038D                     	;# 
   449     038E                     	;# 
   450     0390                     	;# 
   451     0390                     	;# 
   452     0391                     	;# 
   453     0392                     	;# 
   454     048C                     	;# 
   455     048C                     	;# 
   456     048D                     	;# 
   457     048E                     	;# 
   458     048F                     	;# 
   459     048F                     	;# 
   460     0490                     	;# 
   461     0491                     	;# 
   462     0492                     	;# 
   463     0492                     	;# 
   464     0493                     	;# 
   465     0494                     	;# 
   466     0495                     	;# 
   467     0495                     	;# 
   468     0496                     	;# 
   469     0497                     	;# 
   470     0498                     	;# 
   471     0499                     	;# 
   472     049A                     	;# 
   473     049B                     	;# 
   474     049C                     	;# 
   475     049D                     	;# 
   476     050C                     	;# 
   477     050C                     	;# 
   478     050D                     	;# 
   479     050E                     	;# 
   480     050F                     	;# 
   481     050F                     	;# 
   482     0510                     	;# 
   483     0511                     	;# 
   484     0512                     	;# 
   485     0512                     	;# 
   486     0513                     	;# 
   487     0514                     	;# 
   488     0515                     	;# 
   489     0515                     	;# 
   490     0516                     	;# 
   491     0517                     	;# 
   492     0518                     	;# 
   493     0519                     	;# 
   494     051A                     	;# 
   495     051B                     	;# 
   496     051C                     	;# 
   497     051D                     	;# 
   498     058C                     	;# 
   499     058C                     	;# 
   500     058D                     	;# 
   501     058E                     	;# 
   502     058F                     	;# 
   503     058F                     	;# 
   504     0590                     	;# 
   505     0591                     	;# 
   506     0592                     	;# 
   507     0593                     	;# 
   508     059C                     	;# 
   509     059C                     	;# 
   510     059D                     	;# 
   511     059D                     	;# 
   512     059E                     	;# 
   513     059F                     	;# 
   514     060C                     	;# 
   515     060C                     	;# 
   516     060D                     	;# 
   517     060D                     	;# 
   518     060E                     	;# 
   519     060F                     	;# 
   520     0610                     	;# 
   521     0611                     	;# 
   522     0612                     	;# 
   523     0613                     	;# 
   524     0614                     	;# 
   525     0616                     	;# 
   526     0616                     	;# 
   527     0617                     	;# 
   528     0617                     	;# 
   529     0618                     	;# 
   530     0619                     	;# 
   531     061A                     	;# 
   532     061B                     	;# 
   533     061C                     	;# 
   534     061D                     	;# 
   535     061E                     	;# 
   536     068C                     	;# 
   537     068D                     	;# 
   538     068E                     	;# 
   539     068F                     	;# 
   540     0690                     	;# 
   541     0691                     	;# 
   542     0692                     	;# 
   543     0693                     	;# 
   544     0694                     	;# 
   545     070C                     	;# 
   546     070D                     	;# 
   547     070E                     	;# 
   548     070F                     	;# 
   549     0710                     	;# 
   550     0711                     	;# 
   551     0712                     	;# 
   552     0713                     	;# 
   553     0714                     	;# 
   554     0716                     	;# 
   555     0717                     	;# 
   556     0718                     	;# 
   557     0719                     	;# 
   558     071A                     	;# 
   559     071B                     	;# 
   560     071C                     	;# 
   561     071D                     	;# 
   562     071E                     	;# 
   563     0796                     	;# 
   564     0797                     	;# 
   565     0798                     	;# 
   566     0799                     	;# 
   567     079A                     	;# 
   568     079B                     	;# 
   569     079C                     	;# 
   570     079D                     	;# 
   571     080C                     	;# 
   572     080D                     	;# 
   573     080E                     	;# 
   574     080F                     	;# 
   575     0810                     	;# 
   576     0811                     	;# 
   577     0813                     	;# 
   578     0814                     	;# 
   579     081A                     	;# 
   580     081A                     	;# 
   581     081B                     	;# 
   582     081C                     	;# 
   583     081C                     	;# 
   584     081D                     	;# 
   585     081E                     	;# 
   586     081F                     	;# 
   587     088C                     	;# 
   588     088D                     	;# 
   589     088E                     	;# 
   590     088F                     	;# 
   591     0890                     	;# 
   592     0891                     	;# 
   593     0892                     	;# 
   594     0893                     	;# 
   595     0895                     	;# 
   596     0896                     	;# 
   597     0897                     	;# 
   598     0898                     	;# 
   599     0899                     	;# 
   600     089A                     	;# 
   601     089B                     	;# 
   602     090C                     	;# 
   603     090E                     	;# 
   604     090F                     	;# 
   605     091F                     	;# 
   606     098F                     	;# 
   607     098F                     	;# 
   608     0990                     	;# 
   609     0991                     	;# 
   610     0992                     	;# 
   611     0993                     	;# 
   612     0994                     	;# 
   613     0995                     	;# 
   614     0996                     	;# 
   615     0997                     	;# 
   616     0A19                     	;# 
   617     0A19                     	;# 
   618     0A1A                     	;# 
   619     0A1A                     	;# 
   620     0A1B                     	;# 
   621     0A1B                     	;# 
   622     0A1B                     	;# 
   623     0A1C                     	;# 
   624     0A1C                     	;# 
   625     0A1D                     	;# 
   626     0A1D                     	;# 
   627     0A1E                     	;# 
   628     0A1E                     	;# 
   629     0A1F                     	;# 
   630     0A1F                     	;# 
   631     0A1F                     	;# 
   632     1E0F                     	;# 
   633     1E10                     	;# 
   634     1E11                     	;# 
   635     1E12                     	;# 
   636     1E13                     	;# 
   637     1E14                     	;# 
   638     1E15                     	;# 
   639     1E16                     	;# 
   640     1E17                     	;# 
   641     1E18                     	;# 
   642     1E19                     	;# 
   643     1E1A                     	;# 
   644     1E1B                     	;# 
   645     1E1C                     	;# 
   646     1E1D                     	;# 
   647     1E1E                     	;# 
   648     1E1F                     	;# 
   649     1E20                     	;# 
   650     1E21                     	;# 
   651     1E22                     	;# 
   652     1E23                     	;# 
   653     1E24                     	;# 
   654     1E25                     	;# 
   655     1E26                     	;# 
   656     1E27                     	;# 
   657     1E28                     	;# 
   658     1E29                     	;# 
   659     1E2A                     	;# 
   660     1E2B                     	;# 
   661     1E2C                     	;# 
   662     1E2D                     	;# 
   663     1E2E                     	;# 
   664     1E2F                     	;# 
   665     1E30                     	;# 
   666     1E31                     	;# 
   667     1E32                     	;# 
   668     1E33                     	;# 
   669     1E34                     	;# 
   670     1E35                     	;# 
   671     1E36                     	;# 
   672     1E37                     	;# 
   673     1E8F                     	;# 
   674     1E90                     	;# 
   675     1E91                     	;# 
   676     1E92                     	;# 
   677     1E93                     	;# 
   678     1E94                     	;# 
   679     1E95                     	;# 
   680     1E96                     	;# 
   681     1E97                     	;# 
   682     1E9C                     	;# 
   683     1E9D                     	;# 
   684     1E9E                     	;# 
   685     1EA1                     	;# 
   686     1EA2                     	;# 
   687     1EA3                     	;# 
   688     1EA4                     	;# 
   689     1EA5                     	;# 
   690     1EA9                     	;# 
   691     1EAA                     	;# 
   692     1EAB                     	;# 
   693     1EAC                     	;# 
   694     1EB1                     	;# 
   695     1EB2                     	;# 
   696     1EB3                     	;# 
   697     1EB8                     	;# 
   698     1EB9                     	;# 
   699     1EBA                     	;# 
   700     1EBB                     	;# 
   701     1EBC                     	;# 
   702     1EBD                     	;# 
   703     1EBE                     	;# 
   704     1EC3                     	;# 
   705     1EC5                     	;# 
   706     1EC6                     	;# 
   707     1EC7                     	;# 
   708     1EC8                     	;# 
   709     1EC9                     	;# 
   710     1ECA                     	;# 
   711     1ECB                     	;# 
   712     1ECC                     	;# 
   713     1ECD                     	;# 
   714     1ECE                     	;# 
   715     1F10                     	;# 
   716     1F11                     	;# 
   717     1F12                     	;# 
   718     1F13                     	;# 
   719     1F14                     	;# 
   720     1F15                     	;# 
   721     1F16                     	;# 
   722     1F17                     	;# 
   723     1F18                     	;# 
   724     1F19                     	;# 
   725     1F1A                     	;# 
   726     1F1B                     	;# 
   727     1F1C                     	;# 
   728     1F1D                     	;# 
   729     1F1E                     	;# 
   730     1F1F                     	;# 
   731     1F20                     	;# 
   732     1F21                     	;# 
   733     1F22                     	;# 
   734     1F23                     	;# 
   735     1F24                     	;# 
   736     1F25                     	;# 
   737     1F26                     	;# 
   738     1F27                     	;# 
   739     1F38                     	;# 
   740     1F39                     	;# 
   741     1F3A                     	;# 
   742     1F3B                     	;# 
   743     1F3C                     	;# 
   744     1F3D                     	;# 
   745     1F3E                     	;# 
   746     1F3F                     	;# 
   747     1F43                     	;# 
   748     1F44                     	;# 
   749     1F45                     	;# 
   750     1F46                     	;# 
   751     1F47                     	;# 
   752     1F48                     	;# 
   753     1F49                     	;# 
   754     1F4A                     	;# 
   755     1F4E                     	;# 
   756     1F4F                     	;# 
   757     1F50                     	;# 
   758     1F51                     	;# 
   759     1F52                     	;# 
   760     1F53                     	;# 
   761     1F54                     	;# 
   762     1F55                     	;# 
   763     1F65                     	;# 
   764     1F66                     	;# 
   765     1F67                     	;# 
   766     1F68                     	;# 
   767     1F69                     	;# 
   768     1F6A                     	;# 
   769     1F6B                     	;# 
   770     1FE4                     	;# 
   771     1FE5                     	;# 
   772     1FE6                     	;# 
   773     1FE7                     	;# 
   774     1FE8                     	;# 
   775     1FE8                     	;# 
   776     1FE9                     	;# 
   777     1FEA                     	;# 
   778     1FEB                     	;# 
   779     1FED                     	;# 
   780     1FEE                     	;# 
   781     1FEF                     	;# 
   782     0000                     	;# 
   783     0001                     	;# 
   784     0002                     	;# 
   785     0003                     	;# 
   786     0004                     	;# 
   787     0005                     	;# 
   788     0006                     	;# 
   789     0007                     	;# 
   790     0008                     	;# 
   791     0009                     	;# 
   792     000A                     	;# 
   793     000B                     	;# 
   794     000C                     	;# 
   795     000D                     	;# 
   796     000E                     	;# 
   797     0010                     	;# 
   798     0012                     	;# 
   799     0013                     	;# 
   800     0014                     	;# 
   801     0016                     	;# 
   802     0018                     	;# 
   803     0019                     	;# 
   804     001A                     	;# 
   805     001C                     	;# 
   806     008C                     	;# 
   807     008C                     	;# 
   808     008D                     	;# 
   809     008E                     	;# 
   810     008E                     	;# 
   811     008F                     	;# 
   812     0090                     	;# 
   813     0090                     	;# 
   814     0091                     	;# 
   815     0092                     	;# 
   816     0092                     	;# 
   817     0093                     	;# 
   818     0094                     	;# 
   819     0094                     	;# 
   820     0095                     	;# 
   821     0096                     	;# 
   822     0096                     	;# 
   823     0097                     	;# 
   824     0098                     	;# 
   825     0099                     	;# 
   826     009A                     	;# 
   827     009B                     	;# 
   828     009B                     	;# 
   829     009C                     	;# 
   830     009D                     	;# 
   831     009D                     	;# 
   832     009E                     	;# 
   833     009F                     	;# 
   834     010C                     	;# 
   835     010C                     	;# 
   836     010D                     	;# 
   837     010E                     	;# 
   838     010F                     	;# 
   839     010F                     	;# 
   840     0110                     	;# 
   841     0111                     	;# 
   842     0112                     	;# 
   843     0113                     	;# 
   844     0114                     	;# 
   845     0115                     	;# 
   846     0116                     	;# 
   847     0117                     	;# 
   848     0118                     	;# 
   849     0119                     	;# 
   850     0119                     	;# 
   851     0119                     	;# 
   852     011A                     	;# 
   853     011A                     	;# 
   854     011A                     	;# 
   855     011B                     	;# 
   856     011B                     	;# 
   857     011B                     	;# 
   858     011B                     	;# 
   859     011B                     	;# 
   860     011C                     	;# 
   861     011C                     	;# 
   862     011C                     	;# 
   863     011D                     	;# 
   864     011D                     	;# 
   865     011D                     	;# 
   866     011E                     	;# 
   867     011E                     	;# 
   868     011E                     	;# 
   869     011F                     	;# 
   870     011F                     	;# 
   871     011F                     	;# 
   872     011F                     	;# 
   873     011F                     	;# 
   874     018C                     	;# 
   875     018D                     	;# 
   876     018E                     	;# 
   877     018F                     	;# 
   878     0190                     	;# 
   879     0191                     	;# 
   880     0192                     	;# 
   881     0196                     	;# 
   882     0197                     	;# 
   883     0198                     	;# 
   884     0199                     	;# 
   885     019A                     	;# 
   886     019B                     	;# 
   887     019C                     	;# 
   888     020C                     	;# 
   889     020D                     	;# 
   890     020E                     	;# 
   891     020E                     	;# 
   892     020F                     	;# 
   893     020F                     	;# 
   894     0210                     	;# 
   895     0210                     	;# 
   896     0211                     	;# 
   897     0211                     	;# 
   898     0212                     	;# 
   899     0213                     	;# 
   900     0214                     	;# 
   901     0214                     	;# 
   902     0215                     	;# 
   903     0215                     	;# 
   904     0216                     	;# 
   905     0216                     	;# 
   906     0217                     	;# 
   907     0217                     	;# 
   908     0218                     	;# 
   909     0219                     	;# 
   910     021A                     	;# 
   911     021A                     	;# 
   912     021B                     	;# 
   913     021B                     	;# 
   914     021C                     	;# 
   915     021C                     	;# 
   916     021D                     	;# 
   917     021D                     	;# 
   918     021E                     	;# 
   919     021F                     	;# 
   920     028C                     	;# 
   921     028C                     	;# 
   922     028D                     	;# 
   923     028D                     	;# 
   924     028E                     	;# 
   925     028F                     	;# 
   926     0290                     	;# 
   927     0291                     	;# 
   928     0292                     	;# 
   929     0292                     	;# 
   930     0293                     	;# 
   931     0293                     	;# 
   932     0294                     	;# 
   933     0295                     	;# 
   934     0296                     	;# 
   935     0297                     	;# 
   936     0298                     	;# 
   937     0298                     	;# 
   938     0299                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     029B                     	;# 
   942     029C                     	;# 
   943     029D                     	;# 
   944     029F                     	;# 
   945     030C                     	;# 
   946     030C                     	;# 
   947     030D                     	;# 
   948     030E                     	;# 
   949     030F                     	;# 
   950     0310                     	;# 
   951     0310                     	;# 
   952     0311                     	;# 
   953     0312                     	;# 
   954     0313                     	;# 
   955     0314                     	;# 
   956     0314                     	;# 
   957     0315                     	;# 
   958     0316                     	;# 
   959     0317                     	;# 
   960     0318                     	;# 
   961     0318                     	;# 
   962     0319                     	;# 
   963     031A                     	;# 
   964     031B                     	;# 
   965     031C                     	;# 
   966     031C                     	;# 
   967     031D                     	;# 
   968     031E                     	;# 
   969     031F                     	;# 
   970     038C                     	;# 
   971     038C                     	;# 
   972     038D                     	;# 
   973     038E                     	;# 
   974     0390                     	;# 
   975     0390                     	;# 
   976     0391                     	;# 
   977     0392                     	;# 
   978     048C                     	;# 
   979     048C                     	;# 
   980     048D                     	;# 
   981     048E                     	;# 
   982     048F                     	;# 
   983     048F                     	;# 
   984     0490                     	;# 
   985     0491                     	;# 
   986     0492                     	;# 
   987     0492                     	;# 
   988     0493                     	;# 
   989     0494                     	;# 
   990     0495                     	;# 
   991     0495                     	;# 
   992     0496                     	;# 
   993     0497                     	;# 
   994     0498                     	;# 
   995     0499                     	;# 
   996     049A                     	;# 
   997     049B                     	;# 
   998     049C                     	;# 
   999     049D                     	;# 
  1000     050C                     	;# 
  1001     050C                     	;# 
  1002     050D                     	;# 
  1003     050E                     	;# 
  1004     050F                     	;# 
  1005     050F                     	;# 
  1006     0510                     	;# 
  1007     0511                     	;# 
  1008     0512                     	;# 
  1009     0512                     	;# 
  1010     0513                     	;# 
  1011     0514                     	;# 
  1012     0515                     	;# 
  1013     0515                     	;# 
  1014     0516                     	;# 
  1015     0517                     	;# 
  1016     0518                     	;# 
  1017     0519                     	;# 
  1018     051A                     	;# 
  1019     051B                     	;# 
  1020     051C                     	;# 
  1021     051D                     	;# 
  1022     058C                     	;# 
  1023     058C                     	;# 
  1024     058D                     	;# 
  1025     058E                     	;# 
  1026     058F                     	;# 
  1027     058F                     	;# 
  1028     0590                     	;# 
  1029     0591                     	;# 
  1030     0592                     	;# 
  1031     0593                     	;# 
  1032     059C                     	;# 
  1033     059C                     	;# 
  1034     059D                     	;# 
  1035     059D                     	;# 
  1036     059E                     	;# 
  1037     059F                     	;# 
  1038     060C                     	;# 
  1039     060C                     	;# 
  1040     060D                     	;# 
  1041     060D                     	;# 
  1042     060E                     	;# 
  1043     060F                     	;# 
  1044     0610                     	;# 
  1045     0611                     	;# 
  1046     0612                     	;# 
  1047     0613                     	;# 
  1048     0614                     	;# 
  1049     0616                     	;# 
  1050     0616                     	;# 
  1051     0617                     	;# 
  1052     0617                     	;# 
  1053     0618                     	;# 
  1054     0619                     	;# 
  1055     061A                     	;# 
  1056     061B                     	;# 
  1057     061C                     	;# 
  1058     061D                     	;# 
  1059     061E                     	;# 
  1060     068C                     	;# 
  1061     068D                     	;# 
  1062     068E                     	;# 
  1063     068F                     	;# 
  1064     0690                     	;# 
  1065     0691                     	;# 
  1066     0692                     	;# 
  1067     0693                     	;# 
  1068     0694                     	;# 
  1069     070C                     	;# 
  1070     070D                     	;# 
  1071     070E                     	;# 
  1072     070F                     	;# 
  1073     0710                     	;# 
  1074     0711                     	;# 
  1075     0712                     	;# 
  1076     0713                     	;# 
  1077     0714                     	;# 
  1078     0716                     	;# 
  1079     0717                     	;# 
  1080     0718                     	;# 
  1081     0719                     	;# 
  1082     071A                     	;# 
  1083     071B                     	;# 
  1084     071C                     	;# 
  1085     071D                     	;# 
  1086     071E                     	;# 
  1087     0796                     	;# 
  1088     0797                     	;# 
  1089     0798                     	;# 
  1090     0799                     	;# 
  1091     079A                     	;# 
  1092     079B                     	;# 
  1093     079C                     	;# 
  1094     079D                     	;# 
  1095     080C                     	;# 
  1096     080D                     	;# 
  1097     080E                     	;# 
  1098     080F                     	;# 
  1099     0810                     	;# 
  1100     0811                     	;# 
  1101     0813                     	;# 
  1102     0814                     	;# 
  1103     081A                     	;# 
  1104     081A                     	;# 
  1105     081B                     	;# 
  1106     081C                     	;# 
  1107     081C                     	;# 
  1108     081D                     	;# 
  1109     081E                     	;# 
  1110     081F                     	;# 
  1111     088C                     	;# 
  1112     088D                     	;# 
  1113     088E                     	;# 
  1114     088F                     	;# 
  1115     0890                     	;# 
  1116     0891                     	;# 
  1117     0892                     	;# 
  1118     0893                     	;# 
  1119     0895                     	;# 
  1120     0896                     	;# 
  1121     0897                     	;# 
  1122     0898                     	;# 
  1123     0899                     	;# 
  1124     089A                     	;# 
  1125     089B                     	;# 
  1126     090C                     	;# 
  1127     090E                     	;# 
  1128     090F                     	;# 
  1129     091F                     	;# 
  1130     098F                     	;# 
  1131     098F                     	;# 
  1132     0990                     	;# 
  1133     0991                     	;# 
  1134     0992                     	;# 
  1135     0993                     	;# 
  1136     0994                     	;# 
  1137     0995                     	;# 
  1138     0996                     	;# 
  1139     0997                     	;# 
  1140     0A19                     	;# 
  1141     0A19                     	;# 
  1142     0A1A                     	;# 
  1143     0A1A                     	;# 
  1144     0A1B                     	;# 
  1145     0A1B                     	;# 
  1146     0A1B                     	;# 
  1147     0A1C                     	;# 
  1148     0A1C                     	;# 
  1149     0A1D                     	;# 
  1150     0A1D                     	;# 
  1151     0A1E                     	;# 
  1152     0A1E                     	;# 
  1153     0A1F                     	;# 
  1154     0A1F                     	;# 
  1155     0A1F                     	;# 
  1156     1E0F                     	;# 
  1157     1E10                     	;# 
  1158     1E11                     	;# 
  1159     1E12                     	;# 
  1160     1E13                     	;# 
  1161     1E14                     	;# 
  1162     1E15                     	;# 
  1163     1E16                     	;# 
  1164     1E17                     	;# 
  1165     1E18                     	;# 
  1166     1E19                     	;# 
  1167     1E1A                     	;# 
  1168     1E1B                     	;# 
  1169     1E1C                     	;# 
  1170     1E1D                     	;# 
  1171     1E1E                     	;# 
  1172     1E1F                     	;# 
  1173     1E20                     	;# 
  1174     1E21                     	;# 
  1175     1E22                     	;# 
  1176     1E23                     	;# 
  1177     1E24                     	;# 
  1178     1E25                     	;# 
  1179     1E26                     	;# 
  1180     1E27                     	;# 
  1181     1E28                     	;# 
  1182     1E29                     	;# 
  1183     1E2A                     	;# 
  1184     1E2B                     	;# 
  1185     1E2C                     	;# 
  1186     1E2D                     	;# 
  1187     1E2E                     	;# 
  1188     1E2F                     	;# 
  1189     1E30                     	;# 
  1190     1E31                     	;# 
  1191     1E32                     	;# 
  1192     1E33                     	;# 
  1193     1E34                     	;# 
  1194     1E35                     	;# 
  1195     1E36                     	;# 
  1196     1E37                     	;# 
  1197     1E8F                     	;# 
  1198     1E90                     	;# 
  1199     1E91                     	;# 
  1200     1E92                     	;# 
  1201     1E93                     	;# 
  1202     1E94                     	;# 
  1203     1E95                     	;# 
  1204     1E96                     	;# 
  1205     1E97                     	;# 
  1206     1E9C                     	;# 
  1207     1E9D                     	;# 
  1208     1E9E                     	;# 
  1209     1EA1                     	;# 
  1210     1EA2                     	;# 
  1211     1EA3                     	;# 
  1212     1EA4                     	;# 
  1213     1EA5                     	;# 
  1214     1EA9                     	;# 
  1215     1EAA                     	;# 
  1216     1EAB                     	;# 
  1217     1EAC                     	;# 
  1218     1EB1                     	;# 
  1219     1EB2                     	;# 
  1220     1EB3                     	;# 
  1221     1EB8                     	;# 
  1222     1EB9                     	;# 
  1223     1EBA                     	;# 
  1224     1EBB                     	;# 
  1225     1EBC                     	;# 
  1226     1EBD                     	;# 
  1227     1EBE                     	;# 
  1228     1EC3                     	;# 
  1229     1EC5                     	;# 
  1230     1EC6                     	;# 
  1231     1EC7                     	;# 
  1232     1EC8                     	;# 
  1233     1EC9                     	;# 
  1234     1ECA                     	;# 
  1235     1ECB                     	;# 
  1236     1ECC                     	;# 
  1237     1ECD                     	;# 
  1238     1ECE                     	;# 
  1239     1F10                     	;# 
  1240     1F11                     	;# 
  1241     1F12                     	;# 
  1242     1F13                     	;# 
  1243     1F14                     	;# 
  1244     1F15                     	;# 
  1245     1F16                     	;# 
  1246     1F17                     	;# 
  1247     1F18                     	;# 
  1248     1F19                     	;# 
  1249     1F1A                     	;# 
  1250     1F1B                     	;# 
  1251     1F1C                     	;# 
  1252     1F1D                     	;# 
  1253     1F1E                     	;# 
  1254     1F1F                     	;# 
  1255     1F20                     	;# 
  1256     1F21                     	;# 
  1257     1F22                     	;# 
  1258     1F23                     	;# 
  1259     1F24                     	;# 
  1260     1F25                     	;# 
  1261     1F26                     	;# 
  1262     1F27                     	;# 
  1263     1F38                     	;# 
  1264     1F39                     	;# 
  1265     1F3A                     	;# 
  1266     1F3B                     	;# 
  1267     1F3C                     	;# 
  1268     1F3D                     	;# 
  1269     1F3E                     	;# 
  1270     1F3F                     	;# 
  1271     1F43                     	;# 
  1272     1F44                     	;# 
  1273     1F45                     	;# 
  1274     1F46                     	;# 
  1275     1F47                     	;# 
  1276     1F48                     	;# 
  1277     1F49                     	;# 
  1278     1F4A                     	;# 
  1279     1F4E                     	;# 
  1280     1F4F                     	;# 
  1281     1F50                     	;# 
  1282     1F51                     	;# 
  1283     1F52                     	;# 
  1284     1F53                     	;# 
  1285     1F54                     	;# 
  1286     1F55                     	;# 
  1287     1F65                     	;# 
  1288     1F66                     	;# 
  1289     1F67                     	;# 
  1290     1F68                     	;# 
  1291     1F69                     	;# 
  1292     1F6A                     	;# 
  1293     1F6B                     	;# 
  1294     1FE4                     	;# 
  1295     1FE5                     	;# 
  1296     1FE6                     	;# 
  1297     1FE7                     	;# 
  1298     1FE8                     	;# 
  1299     1FE8                     	;# 
  1300     1FE9                     	;# 
  1301     1FEA                     	;# 
  1302     1FEB                     	;# 
  1303     1FED                     	;# 
  1304     1FEE                     	;# 
  1305     1FEF                     	;# 
  1306     0000                     	;# 
  1307     0001                     	;# 
  1308     0002                     	;# 
  1309     0003                     	;# 
  1310     0004                     	;# 
  1311     0005                     	;# 
  1312     0006                     	;# 
  1313     0007                     	;# 
  1314     0008                     	;# 
  1315     0009                     	;# 
  1316     000A                     	;# 
  1317     000B                     	;# 
  1318     000C                     	;# 
  1319     000D                     	;# 
  1320     000E                     	;# 
  1321     0010                     	;# 
  1322     0012                     	;# 
  1323     0013                     	;# 
  1324     0014                     	;# 
  1325     0016                     	;# 
  1326     0018                     	;# 
  1327     0019                     	;# 
  1328     001A                     	;# 
  1329     001C                     	;# 
  1330     008C                     	;# 
  1331     008C                     	;# 
  1332     008D                     	;# 
  1333     008E                     	;# 
  1334     008E                     	;# 
  1335     008F                     	;# 
  1336     0090                     	;# 
  1337     0090                     	;# 
  1338     0091                     	;# 
  1339     0092                     	;# 
  1340     0092                     	;# 
  1341     0093                     	;# 
  1342     0094                     	;# 
  1343     0094                     	;# 
  1344     0095                     	;# 
  1345     0096                     	;# 
  1346     0096                     	;# 
  1347     0097                     	;# 
  1348     0098                     	;# 
  1349     0099                     	;# 
  1350     009A                     	;# 
  1351     009B                     	;# 
  1352     009B                     	;# 
  1353     009C                     	;# 
  1354     009D                     	;# 
  1355     009D                     	;# 
  1356     009E                     	;# 
  1357     009F                     	;# 
  1358     010C                     	;# 
  1359     010C                     	;# 
  1360     010D                     	;# 
  1361     010E                     	;# 
  1362     010F                     	;# 
  1363     010F                     	;# 
  1364     0110                     	;# 
  1365     0111                     	;# 
  1366     0112                     	;# 
  1367     0113                     	;# 
  1368     0114                     	;# 
  1369     0115                     	;# 
  1370     0116                     	;# 
  1371     0117                     	;# 
  1372     0118                     	;# 
  1373     0119                     	;# 
  1374     0119                     	;# 
  1375     0119                     	;# 
  1376     011A                     	;# 
  1377     011A                     	;# 
  1378     011A                     	;# 
  1379     011B                     	;# 
  1380     011B                     	;# 
  1381     011B                     	;# 
  1382     011B                     	;# 
  1383     011B                     	;# 
  1384     011C                     	;# 
  1385     011C                     	;# 
  1386     011C                     	;# 
  1387     011D                     	;# 
  1388     011D                     	;# 
  1389     011D                     	;# 
  1390     011E                     	;# 
  1391     011E                     	;# 
  1392     011E                     	;# 
  1393     011F                     	;# 
  1394     011F                     	;# 
  1395     011F                     	;# 
  1396     011F                     	;# 
  1397     011F                     	;# 
  1398     018C                     	;# 
  1399     018D                     	;# 
  1400     018E                     	;# 
  1401     018F                     	;# 
  1402     0190                     	;# 
  1403     0191                     	;# 
  1404     0192                     	;# 
  1405     0196                     	;# 
  1406     0197                     	;# 
  1407     0198                     	;# 
  1408     0199                     	;# 
  1409     019A                     	;# 
  1410     019B                     	;# 
  1411     019C                     	;# 
  1412     020C                     	;# 
  1413     020D                     	;# 
  1414     020E                     	;# 
  1415     020E                     	;# 
  1416     020F                     	;# 
  1417     020F                     	;# 
  1418     0210                     	;# 
  1419     0210                     	;# 
  1420     0211                     	;# 
  1421     0211                     	;# 
  1422     0212                     	;# 
  1423     0213                     	;# 
  1424     0214                     	;# 
  1425     0214                     	;# 
  1426     0215                     	;# 
  1427     0215                     	;# 
  1428     0216                     	;# 
  1429     0216                     	;# 
  1430     0217                     	;# 
  1431     0217                     	;# 
  1432     0218                     	;# 
  1433     0219                     	;# 
  1434     021A                     	;# 
  1435     021A                     	;# 
  1436     021B                     	;# 
  1437     021B                     	;# 
  1438     021C                     	;# 
  1439     021C                     	;# 
  1440     021D                     	;# 
  1441     021D                     	;# 
  1442     021E                     	;# 
  1443     021F                     	;# 
  1444     028C                     	;# 
  1445     028C                     	;# 
  1446     028D                     	;# 
  1447     028D                     	;# 
  1448     028E                     	;# 
  1449     028F                     	;# 
  1450     0290                     	;# 
  1451     0291                     	;# 
  1452     0292                     	;# 
  1453     0292                     	;# 
  1454     0293                     	;# 
  1455     0293                     	;# 
  1456     0294                     	;# 
  1457     0295                     	;# 
  1458     0296                     	;# 
  1459     0297                     	;# 
  1460     0298                     	;# 
  1461     0298                     	;# 
  1462     0299                     	;# 
  1463     0299                     	;# 
  1464     029A                     	;# 
  1465     029B                     	;# 
  1466     029C                     	;# 
  1467     029D                     	;# 
  1468     029F                     	;# 
  1469     030C                     	;# 
  1470     030C                     	;# 
  1471     030D                     	;# 
  1472     030E                     	;# 
  1473     030F                     	;# 
  1474     0310                     	;# 
  1475     0310                     	;# 
  1476     0311                     	;# 
  1477     0312                     	;# 
  1478     0313                     	;# 
  1479     0314                     	;# 
  1480     0314                     	;# 
  1481     0315                     	;# 
  1482     0316                     	;# 
  1483     0317                     	;# 
  1484     0318                     	;# 
  1485     0318                     	;# 
  1486     0319                     	;# 
  1487     031A                     	;# 
  1488     031B                     	;# 
  1489     031C                     	;# 
  1490     031C                     	;# 
  1491     031D                     	;# 
  1492     031E                     	;# 
  1493     031F                     	;# 
  1494     038C                     	;# 
  1495     038C                     	;# 
  1496     038D                     	;# 
  1497     038E                     	;# 
  1498     0390                     	;# 
  1499     0390                     	;# 
  1500     0391                     	;# 
  1501     0392                     	;# 
  1502     048C                     	;# 
  1503     048C                     	;# 
  1504     048D                     	;# 
  1505     048E                     	;# 
  1506     048F                     	;# 
  1507     048F                     	;# 
  1508     0490                     	;# 
  1509     0491                     	;# 
  1510     0492                     	;# 
  1511     0492                     	;# 
  1512     0493                     	;# 
  1513     0494                     	;# 
  1514     0495                     	;# 
  1515     0495                     	;# 
  1516     0496                     	;# 
  1517     0497                     	;# 
  1518     0498                     	;# 
  1519     0499                     	;# 
  1520     049A                     	;# 
  1521     049B                     	;# 
  1522     049C                     	;# 
  1523     049D                     	;# 
  1524     050C                     	;# 
  1525     050C                     	;# 
  1526     050D                     	;# 
  1527     050E                     	;# 
  1528     050F                     	;# 
  1529     050F                     	;# 
  1530     0510                     	;# 
  1531     0511                     	;# 
  1532     0512                     	;# 
  1533     0512                     	;# 
  1534     0513                     	;# 
  1535     0514                     	;# 
  1536     0515                     	;# 
  1537     0515                     	;# 
  1538     0516                     	;# 
  1539     0517                     	;# 
  1540     0518                     	;# 
  1541     0519                     	;# 
  1542     051A                     	;# 
  1543     051B                     	;# 
  1544     051C                     	;# 
  1545     051D                     	;# 
  1546     058C                     	;# 
  1547     058C                     	;# 
  1548     058D                     	;# 
  1549     058E                     	;# 
  1550     058F                     	;# 
  1551     058F                     	;# 
  1552     0590                     	;# 
  1553     0591                     	;# 
  1554     0592                     	;# 
  1555     0593                     	;# 
  1556     059C                     	;# 
  1557     059C                     	;# 
  1558     059D                     	;# 
  1559     059D                     	;# 
  1560     059E                     	;# 
  1561     059F                     	;# 
  1562     060C                     	;# 
  1563     060C                     	;# 
  1564     060D                     	;# 
  1565     060D                     	;# 
  1566     060E                     	;# 
  1567     060F                     	;# 
  1568     0610                     	;# 
  1569     0611                     	;# 
  1570     0612                     	;# 
  1571     0613                     	;# 
  1572     0614                     	;# 
  1573     0616                     	;# 
  1574     0616                     	;# 
  1575     0617                     	;# 
  1576     0617                     	;# 
  1577     0618                     	;# 
  1578     0619                     	;# 
  1579     061A                     	;# 
  1580     061B                     	;# 
  1581     061C                     	;# 
  1582     061D                     	;# 
  1583     061E                     	;# 
  1584     068C                     	;# 
  1585     068D                     	;# 
  1586     068E                     	;# 
  1587     068F                     	;# 
  1588     0690                     	;# 
  1589     0691                     	;# 
  1590     0692                     	;# 
  1591     0693                     	;# 
  1592     0694                     	;# 
  1593     070C                     	;# 
  1594     070D                     	;# 
  1595     070E                     	;# 
  1596     070F                     	;# 
  1597     0710                     	;# 
  1598     0711                     	;# 
  1599     0712                     	;# 
  1600     0713                     	;# 
  1601     0714                     	;# 
  1602     0716                     	;# 
  1603     0717                     	;# 
  1604     0718                     	;# 
  1605     0719                     	;# 
  1606     071A                     	;# 
  1607     071B                     	;# 
  1608     071C                     	;# 
  1609     071D                     	;# 
  1610     071E                     	;# 
  1611     0796                     	;# 
  1612     0797                     	;# 
  1613     0798                     	;# 
  1614     0799                     	;# 
  1615     079A                     	;# 
  1616     079B                     	;# 
  1617     079C                     	;# 
  1618     079D                     	;# 
  1619     080C                     	;# 
  1620     080D                     	;# 
  1621     080E                     	;# 
  1622     080F                     	;# 
  1623     0810                     	;# 
  1624     0811                     	;# 
  1625     0813                     	;# 
  1626     0814                     	;# 
  1627     081A                     	;# 
  1628     081A                     	;# 
  1629     081B                     	;# 
  1630     081C                     	;# 
  1631     081C                     	;# 
  1632     081D                     	;# 
  1633     081E                     	;# 
  1634     081F                     	;# 
  1635     088C                     	;# 
  1636     088D                     	;# 
  1637     088E                     	;# 
  1638     088F                     	;# 
  1639     0890                     	;# 
  1640     0891                     	;# 
  1641     0892                     	;# 
  1642     0893                     	;# 
  1643     0895                     	;# 
  1644     0896                     	;# 
  1645     0897                     	;# 
  1646     0898                     	;# 
  1647     0899                     	;# 
  1648     089A                     	;# 
  1649     089B                     	;# 
  1650     090C                     	;# 
  1651     090E                     	;# 
  1652     090F                     	;# 
  1653     091F                     	;# 
  1654     098F                     	;# 
  1655     098F                     	;# 
  1656     0990                     	;# 
  1657     0991                     	;# 
  1658     0992                     	;# 
  1659     0993                     	;# 
  1660     0994                     	;# 
  1661     0995                     	;# 
  1662     0996                     	;# 
  1663     0997                     	;# 
  1664     0A19                     	;# 
  1665     0A19                     	;# 
  1666     0A1A                     	;# 
  1667     0A1A                     	;# 
  1668     0A1B                     	;# 
  1669     0A1B                     	;# 
  1670     0A1B                     	;# 
  1671     0A1C                     	;# 
  1672     0A1C                     	;# 
  1673     0A1D                     	;# 
  1674     0A1D                     	;# 
  1675     0A1E                     	;# 
  1676     0A1E                     	;# 
  1677     0A1F                     	;# 
  1678     0A1F                     	;# 
  1679     0A1F                     	;# 
  1680     1E0F                     	;# 
  1681     1E10                     	;# 
  1682     1E11                     	;# 
  1683     1E12                     	;# 
  1684     1E13                     	;# 
  1685     1E14                     	;# 
  1686     1E15                     	;# 
  1687     1E16                     	;# 
  1688     1E17                     	;# 
  1689     1E18                     	;# 
  1690     1E19                     	;# 
  1691     1E1A                     	;# 
  1692     1E1B                     	;# 
  1693     1E1C                     	;# 
  1694     1E1D                     	;# 
  1695     1E1E                     	;# 
  1696     1E1F                     	;# 
  1697     1E20                     	;# 
  1698     1E21                     	;# 
  1699     1E22                     	;# 
  1700     1E23                     	;# 
  1701     1E24                     	;# 
  1702     1E25                     	;# 
  1703     1E26                     	;# 
  1704     1E27                     	;# 
  1705     1E28                     	;# 
  1706     1E29                     	;# 
  1707     1E2A                     	;# 
  1708     1E2B                     	;# 
  1709     1E2C                     	;# 
  1710     1E2D                     	;# 
  1711     1E2E                     	;# 
  1712     1E2F                     	;# 
  1713     1E30                     	;# 
  1714     1E31                     	;# 
  1715     1E32                     	;# 
  1716     1E33                     	;# 
  1717     1E34                     	;# 
  1718     1E35                     	;# 
  1719     1E36                     	;# 
  1720     1E37                     	;# 
  1721     1E8F                     	;# 
  1722     1E90                     	;# 
  1723     1E91                     	;# 
  1724     1E92                     	;# 
  1725     1E93                     	;# 
  1726     1E94                     	;# 
  1727     1E95                     	;# 
  1728     1E96                     	;# 
  1729     1E97                     	;# 
  1730     1E9C                     	;# 
  1731     1E9D                     	;# 
  1732     1E9E                     	;# 
  1733     1EA1                     	;# 
  1734     1EA2                     	;# 
  1735     1EA3                     	;# 
  1736     1EA4                     	;# 
  1737     1EA5                     	;# 
  1738     1EA9                     	;# 
  1739     1EAA                     	;# 
  1740     1EAB                     	;# 
  1741     1EAC                     	;# 
  1742     1EB1                     	;# 
  1743     1EB2                     	;# 
  1744     1EB3                     	;# 
  1745     1EB8                     	;# 
  1746     1EB9                     	;# 
  1747     1EBA                     	;# 
  1748     1EBB                     	;# 
  1749     1EBC                     	;# 
  1750     1EBD                     	;# 
  1751     1EBE                     	;# 
  1752     1EC3                     	;# 
  1753     1EC5                     	;# 
  1754     1EC6                     	;# 
  1755     1EC7                     	;# 
  1756     1EC8                     	;# 
  1757     1EC9                     	;# 
  1758     1ECA                     	;# 
  1759     1ECB                     	;# 
  1760     1ECC                     	;# 
  1761     1ECD                     	;# 
  1762     1ECE                     	;# 
  1763     1F10                     	;# 
  1764     1F11                     	;# 
  1765     1F12                     	;# 
  1766     1F13                     	;# 
  1767     1F14                     	;# 
  1768     1F15                     	;# 
  1769     1F16                     	;# 
  1770     1F17                     	;# 
  1771     1F18                     	;# 
  1772     1F19                     	;# 
  1773     1F1A                     	;# 
  1774     1F1B                     	;# 
  1775     1F1C                     	;# 
  1776     1F1D                     	;# 
  1777     1F1E                     	;# 
  1778     1F1F                     	;# 
  1779     1F20                     	;# 
  1780     1F21                     	;# 
  1781     1F22                     	;# 
  1782     1F23                     	;# 
  1783     1F24                     	;# 
  1784     1F25                     	;# 
  1785     1F26                     	;# 
  1786     1F27                     	;# 
  1787     1F38                     	;# 
  1788     1F39                     	;# 
  1789     1F3A                     	;# 
  1790     1F3B                     	;# 
  1791     1F3C                     	;# 
  1792     1F3D                     	;# 
  1793     1F3E                     	;# 
  1794     1F3F                     	;# 
  1795     1F43                     	;# 
  1796     1F44                     	;# 
  1797     1F45                     	;# 
  1798     1F46                     	;# 
  1799     1F47                     	;# 
  1800     1F48                     	;# 
  1801     1F49                     	;# 
  1802     1F4A                     	;# 
  1803     1F4E                     	;# 
  1804     1F4F                     	;# 
  1805     1F50                     	;# 
  1806     1F51                     	;# 
  1807     1F52                     	;# 
  1808     1F53                     	;# 
  1809     1F54                     	;# 
  1810     1F55                     	;# 
  1811     1F65                     	;# 
  1812     1F66                     	;# 
  1813     1F67                     	;# 
  1814     1F68                     	;# 
  1815     1F69                     	;# 
  1816     1F6A                     	;# 
  1817     1F6B                     	;# 
  1818     1FE4                     	;# 
  1819     1FE5                     	;# 
  1820     1FE6                     	;# 
  1821     1FE7                     	;# 
  1822     1FE8                     	;# 
  1823     1FE8                     	;# 
  1824     1FE9                     	;# 
  1825     1FEA                     	;# 
  1826     1FEB                     	;# 
  1827     1FED                     	;# 
  1828     1FEE                     	;# 
  1829     1FEF                     	;# 
  1830     0000                     	;# 
  1831     0001                     	;# 
  1832     0002                     	;# 
  1833     0003                     	;# 
  1834     0004                     	;# 
  1835     0005                     	;# 
  1836     0006                     	;# 
  1837     0007                     	;# 
  1838     0008                     	;# 
  1839     0009                     	;# 
  1840     000A                     	;# 
  1841     000B                     	;# 
  1842     000C                     	;# 
  1843     000D                     	;# 
  1844     000E                     	;# 
  1845     0010                     	;# 
  1846     0012                     	;# 
  1847     0013                     	;# 
  1848     0014                     	;# 
  1849     0016                     	;# 
  1850     0018                     	;# 
  1851     0019                     	;# 
  1852     001A                     	;# 
  1853     001C                     	;# 
  1854     008C                     	;# 
  1855     008C                     	;# 
  1856     008D                     	;# 
  1857     008E                     	;# 
  1858     008E                     	;# 
  1859     008F                     	;# 
  1860     0090                     	;# 
  1861     0090                     	;# 
  1862     0091                     	;# 
  1863     0092                     	;# 
  1864     0092                     	;# 
  1865     0093                     	;# 
  1866     0094                     	;# 
  1867     0094                     	;# 
  1868     0095                     	;# 
  1869     0096                     	;# 
  1870     0096                     	;# 
  1871     0097                     	;# 
  1872     0098                     	;# 
  1873     0099                     	;# 
  1874     009A                     	;# 
  1875     009B                     	;# 
  1876     009B                     	;# 
  1877     009C                     	;# 
  1878     009D                     	;# 
  1879     009D                     	;# 
  1880     009E                     	;# 
  1881     009F                     	;# 
  1882     010C                     	;# 
  1883     010C                     	;# 
  1884     010D                     	;# 
  1885     010E                     	;# 
  1886     010F                     	;# 
  1887     010F                     	;# 
  1888     0110                     	;# 
  1889     0111                     	;# 
  1890     0112                     	;# 
  1891     0113                     	;# 
  1892     0114                     	;# 
  1893     0115                     	;# 
  1894     0116                     	;# 
  1895     0117                     	;# 
  1896     0118                     	;# 
  1897     0119                     	;# 
  1898     0119                     	;# 
  1899     0119                     	;# 
  1900     011A                     	;# 
  1901     011A                     	;# 
  1902     011A                     	;# 
  1903     011B                     	;# 
  1904     011B                     	;# 
  1905     011B                     	;# 
  1906     011B                     	;# 
  1907     011B                     	;# 
  1908     011C                     	;# 
  1909     011C                     	;# 
  1910     011C                     	;# 
  1911     011D                     	;# 
  1912     011D                     	;# 
  1913     011D                     	;# 
  1914     011E                     	;# 
  1915     011E                     	;# 
  1916     011E                     	;# 
  1917     011F                     	;# 
  1918     011F                     	;# 
  1919     011F                     	;# 
  1920     011F                     	;# 
  1921     011F                     	;# 
  1922     018C                     	;# 
  1923     018D                     	;# 
  1924     018E                     	;# 
  1925     018F                     	;# 
  1926     0190                     	;# 
  1927     0191                     	;# 
  1928     0192                     	;# 
  1929     0196                     	;# 
  1930     0197                     	;# 
  1931     0198                     	;# 
  1932     0199                     	;# 
  1933     019A                     	;# 
  1934     019B                     	;# 
  1935     019C                     	;# 
  1936     020C                     	;# 
  1937     020D                     	;# 
  1938     020E                     	;# 
  1939     020E                     	;# 
  1940     020F                     	;# 
  1941     020F                     	;# 
  1942     0210                     	;# 
  1943     0210                     	;# 
  1944     0211                     	;# 
  1945     0211                     	;# 
  1946     0212                     	;# 
  1947     0213                     	;# 
  1948     0214                     	;# 
  1949     0214                     	;# 
  1950     0215                     	;# 
  1951     0215                     	;# 
  1952     0216                     	;# 
  1953     0216                     	;# 
  1954     0217                     	;# 
  1955     0217                     	;# 
  1956     0218                     	;# 
  1957     0219                     	;# 
  1958     021A                     	;# 
  1959     021A                     	;# 
  1960     021B                     	;# 
  1961     021B                     	;# 
  1962     021C                     	;# 
  1963     021C                     	;# 
  1964     021D                     	;# 
  1965     021D                     	;# 
  1966     021E                     	;# 
  1967     021F                     	;# 
  1968     028C                     	;# 
  1969     028C                     	;# 
  1970     028D                     	;# 
  1971     028D                     	;# 
  1972     028E                     	;# 
  1973     028F                     	;# 
  1974     0290                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0292                     	;# 
  1978     0293                     	;# 
  1979     0293                     	;# 
  1980     0294                     	;# 
  1981     0295                     	;# 
  1982     0296                     	;# 
  1983     0297                     	;# 
  1984     0298                     	;# 
  1985     0298                     	;# 
  1986     0299                     	;# 
  1987     0299                     	;# 
  1988     029A                     	;# 
  1989     029B                     	;# 
  1990     029C                     	;# 
  1991     029D                     	;# 
  1992     029F                     	;# 
  1993     030C                     	;# 
  1994     030C                     	;# 
  1995     030D                     	;# 
  1996     030E                     	;# 
  1997     030F                     	;# 
  1998     0310                     	;# 
  1999     0310                     	;# 
  2000     0311                     	;# 
  2001     0312                     	;# 
  2002     0313                     	;# 
  2003     0314                     	;# 
  2004     0314                     	;# 
  2005     0315                     	;# 
  2006     0316                     	;# 
  2007     0317                     	;# 
  2008     0318                     	;# 
  2009     0318                     	;# 
  2010     0319                     	;# 
  2011     031A                     	;# 
  2012     031B                     	;# 
  2013     031C                     	;# 
  2014     031C                     	;# 
  2015     031D                     	;# 
  2016     031E                     	;# 
  2017     031F                     	;# 
  2018     038C                     	;# 
  2019     038C                     	;# 
  2020     038D                     	;# 
  2021     038E                     	;# 
  2022     0390                     	;# 
  2023     0390                     	;# 
  2024     0391                     	;# 
  2025     0392                     	;# 
  2026     048C                     	;# 
  2027     048C                     	;# 
  2028     048D                     	;# 
  2029     048E                     	;# 
  2030     048F                     	;# 
  2031     048F                     	;# 
  2032     0490                     	;# 
  2033     0491                     	;# 
  2034     0492                     	;# 
  2035     0492                     	;# 
  2036     0493                     	;# 
  2037     0494                     	;# 
  2038     0495                     	;# 
  2039     0495                     	;# 
  2040     0496                     	;# 
  2041     0497                     	;# 
  2042     0498                     	;# 
  2043     0499                     	;# 
  2044     049A                     	;# 
  2045     049B                     	;# 
  2046     049C                     	;# 
  2047     049D                     	;# 
  2048     050C                     	;# 
  2049     050C                     	;# 
  2050     050D                     	;# 
  2051     050E                     	;# 
  2052     050F                     	;# 
  2053     050F                     	;# 
  2054     0510                     	;# 
  2055     0511                     	;# 
  2056     0512                     	;# 
  2057     0512                     	;# 
  2058     0513                     	;# 
  2059     0514                     	;# 
  2060     0515                     	;# 
  2061     0515                     	;# 
  2062     0516                     	;# 
  2063     0517                     	;# 
  2064     0518                     	;# 
  2065     0519                     	;# 
  2066     051A                     	;# 
  2067     051B                     	;# 
  2068     051C                     	;# 
  2069     051D                     	;# 
  2070     058C                     	;# 
  2071     058C                     	;# 
  2072     058D                     	;# 
  2073     058E                     	;# 
  2074     058F                     	;# 
  2075     058F                     	;# 
  2076     0590                     	;# 
  2077     0591                     	;# 
  2078     0592                     	;# 
  2079     0593                     	;# 
  2080     059C                     	;# 
  2081     059C                     	;# 
  2082     059D                     	;# 
  2083     059D                     	;# 
  2084     059E                     	;# 
  2085     059F                     	;# 
  2086     060C                     	;# 
  2087     060C                     	;# 
  2088     060D                     	;# 
  2089     060D                     	;# 
  2090     060E                     	;# 
  2091     060F                     	;# 
  2092     0610                     	;# 
  2093     0611                     	;# 
  2094     0612                     	;# 
  2095     0613                     	;# 
  2096     0614                     	;# 
  2097     0616                     	;# 
  2098     0616                     	;# 
  2099     0617                     	;# 
  2100     0617                     	;# 
  2101     0618                     	;# 
  2102     0619                     	;# 
  2103     061A                     	;# 
  2104     061B                     	;# 
  2105     061C                     	;# 
  2106     061D                     	;# 
  2107     061E                     	;# 
  2108     068C                     	;# 
  2109     068D                     	;# 
  2110     068E                     	;# 
  2111     068F                     	;# 
  2112     0690                     	;# 
  2113     0691                     	;# 
  2114     0692                     	;# 
  2115     0693                     	;# 
  2116     0694                     	;# 
  2117     070C                     	;# 
  2118     070D                     	;# 
  2119     070E                     	;# 
  2120     070F                     	;# 
  2121     0710                     	;# 
  2122     0711                     	;# 
  2123     0712                     	;# 
  2124     0713                     	;# 
  2125     0714                     	;# 
  2126     0716                     	;# 
  2127     0717                     	;# 
  2128     0718                     	;# 
  2129     0719                     	;# 
  2130     071A                     	;# 
  2131     071B                     	;# 
  2132     071C                     	;# 
  2133     071D                     	;# 
  2134     071E                     	;# 
  2135     0796                     	;# 
  2136     0797                     	;# 
  2137     0798                     	;# 
  2138     0799                     	;# 
  2139     079A                     	;# 
  2140     079B                     	;# 
  2141     079C                     	;# 
  2142     079D                     	;# 
  2143     080C                     	;# 
  2144     080D                     	;# 
  2145     080E                     	;# 
  2146     080F                     	;# 
  2147     0810                     	;# 
  2148     0811                     	;# 
  2149     0813                     	;# 
  2150     0814                     	;# 
  2151     081A                     	;# 
  2152     081A                     	;# 
  2153     081B                     	;# 
  2154     081C                     	;# 
  2155     081C                     	;# 
  2156     081D                     	;# 
  2157     081E                     	;# 
  2158     081F                     	;# 
  2159     088C                     	;# 
  2160     088D                     	;# 
  2161     088E                     	;# 
  2162     088F                     	;# 
  2163     0890                     	;# 
  2164     0891                     	;# 
  2165     0892                     	;# 
  2166     0893                     	;# 
  2167     0895                     	;# 
  2168     0896                     	;# 
  2169     0897                     	;# 
  2170     0898                     	;# 
  2171     0899                     	;# 
  2172     089A                     	;# 
  2173     089B                     	;# 
  2174     090C                     	;# 
  2175     090E                     	;# 
  2176     090F                     	;# 
  2177     091F                     	;# 
  2178     098F                     	;# 
  2179     098F                     	;# 
  2180     0990                     	;# 
  2181     0991                     	;# 
  2182     0992                     	;# 
  2183     0993                     	;# 
  2184     0994                     	;# 
  2185     0995                     	;# 
  2186     0996                     	;# 
  2187     0997                     	;# 
  2188     0A19                     	;# 
  2189     0A19                     	;# 
  2190     0A1A                     	;# 
  2191     0A1A                     	;# 
  2192     0A1B                     	;# 
  2193     0A1B                     	;# 
  2194     0A1B                     	;# 
  2195     0A1C                     	;# 
  2196     0A1C                     	;# 
  2197     0A1D                     	;# 
  2198     0A1D                     	;# 
  2199     0A1E                     	;# 
  2200     0A1E                     	;# 
  2201     0A1F                     	;# 
  2202     0A1F                     	;# 
  2203     0A1F                     	;# 
  2204     1E0F                     	;# 
  2205     1E10                     	;# 
  2206     1E11                     	;# 
  2207     1E12                     	;# 
  2208     1E13                     	;# 
  2209     1E14                     	;# 
  2210     1E15                     	;# 
  2211     1E16                     	;# 
  2212     1E17                     	;# 
  2213     1E18                     	;# 
  2214     1E19                     	;# 
  2215     1E1A                     	;# 
  2216     1E1B                     	;# 
  2217     1E1C                     	;# 
  2218     1E1D                     	;# 
  2219     1E1E                     	;# 
  2220     1E1F                     	;# 
  2221     1E20                     	;# 
  2222     1E21                     	;# 
  2223     1E22                     	;# 
  2224     1E23                     	;# 
  2225     1E24                     	;# 
  2226     1E25                     	;# 
  2227     1E26                     	;# 
  2228     1E27                     	;# 
  2229     1E28                     	;# 
  2230     1E29                     	;# 
  2231     1E2A                     	;# 
  2232     1E2B                     	;# 
  2233     1E2C                     	;# 
  2234     1E2D                     	;# 
  2235     1E2E                     	;# 
  2236     1E2F                     	;# 
  2237     1E30                     	;# 
  2238     1E31                     	;# 
  2239     1E32                     	;# 
  2240     1E33                     	;# 
  2241     1E34                     	;# 
  2242     1E35                     	;# 
  2243     1E36                     	;# 
  2244     1E37                     	;# 
  2245     1E8F                     	;# 
  2246     1E90                     	;# 
  2247     1E91                     	;# 
  2248     1E92                     	;# 
  2249     1E93                     	;# 
  2250     1E94                     	;# 
  2251     1E95                     	;# 
  2252     1E96                     	;# 
  2253     1E97                     	;# 
  2254     1E9C                     	;# 
  2255     1E9D                     	;# 
  2256     1E9E                     	;# 
  2257     1EA1                     	;# 
  2258     1EA2                     	;# 
  2259     1EA3                     	;# 
  2260     1EA4                     	;# 
  2261     1EA5                     	;# 
  2262     1EA9                     	;# 
  2263     1EAA                     	;# 
  2264     1EAB                     	;# 
  2265     1EAC                     	;# 
  2266     1EB1                     	;# 
  2267     1EB2                     	;# 
  2268     1EB3                     	;# 
  2269     1EB8                     	;# 
  2270     1EB9                     	;# 
  2271     1EBA                     	;# 
  2272     1EBB                     	;# 
  2273     1EBC                     	;# 
  2274     1EBD                     	;# 
  2275     1EBE                     	;# 
  2276     1EC3                     	;# 
  2277     1EC5                     	;# 
  2278     1EC6                     	;# 
  2279     1EC7                     	;# 
  2280     1EC8                     	;# 
  2281     1EC9                     	;# 
  2282     1ECA                     	;# 
  2283     1ECB                     	;# 
  2284     1ECC                     	;# 
  2285     1ECD                     	;# 
  2286     1ECE                     	;# 
  2287     1F10                     	;# 
  2288     1F11                     	;# 
  2289     1F12                     	;# 
  2290     1F13                     	;# 
  2291     1F14                     	;# 
  2292     1F15                     	;# 
  2293     1F16                     	;# 
  2294     1F17                     	;# 
  2295     1F18                     	;# 
  2296     1F19                     	;# 
  2297     1F1A                     	;# 
  2298     1F1B                     	;# 
  2299     1F1C                     	;# 
  2300     1F1D                     	;# 
  2301     1F1E                     	;# 
  2302     1F1F                     	;# 
  2303     1F20                     	;# 
  2304     1F21                     	;# 
  2305     1F22                     	;# 
  2306     1F23                     	;# 
  2307     1F24                     	;# 
  2308     1F25                     	;# 
  2309     1F26                     	;# 
  2310     1F27                     	;# 
  2311     1F38                     	;# 
  2312     1F39                     	;# 
  2313     1F3A                     	;# 
  2314     1F3B                     	;# 
  2315     1F3C                     	;# 
  2316     1F3D                     	;# 
  2317     1F3E                     	;# 
  2318     1F3F                     	;# 
  2319     1F43                     	;# 
  2320     1F44                     	;# 
  2321     1F45                     	;# 
  2322     1F46                     	;# 
  2323     1F47                     	;# 
  2324     1F48                     	;# 
  2325     1F49                     	;# 
  2326     1F4A                     	;# 
  2327     1F4E                     	;# 
  2328     1F4F                     	;# 
  2329     1F50                     	;# 
  2330     1F51                     	;# 
  2331     1F52                     	;# 
  2332     1F53                     	;# 
  2333     1F54                     	;# 
  2334     1F55                     	;# 
  2335     1F65                     	;# 
  2336     1F66                     	;# 
  2337     1F67                     	;# 
  2338     1F68                     	;# 
  2339     1F69                     	;# 
  2340     1F6A                     	;# 
  2341     1F6B                     	;# 
  2342     1FE4                     	;# 
  2343     1FE5                     	;# 
  2344     1FE6                     	;# 
  2345     1FE7                     	;# 
  2346     1FE8                     	;# 
  2347     1FE8                     	;# 
  2348     1FE9                     	;# 
  2349     1FEA                     	;# 
  2350     1FEB                     	;# 
  2351     1FED                     	;# 
  2352     1FEE                     	;# 
  2353     1FEF                     	;# 
  2354     0000                     	;# 
  2355     0001                     	;# 
  2356     0002                     	;# 
  2357     0003                     	;# 
  2358     0004                     	;# 
  2359     0005                     	;# 
  2360     0006                     	;# 
  2361     0007                     	;# 
  2362     0008                     	;# 
  2363     0009                     	;# 
  2364     000A                     	;# 
  2365     000B                     	;# 
  2366     000C                     	;# 
  2367     000D                     	;# 
  2368     000E                     	;# 
  2369     0010                     	;# 
  2370     0012                     	;# 
  2371     0013                     	;# 
  2372     0014                     	;# 
  2373     0016                     	;# 
  2374     0018                     	;# 
  2375     0019                     	;# 
  2376     001A                     	;# 
  2377     001C                     	;# 
  2378     008C                     	;# 
  2379     008C                     	;# 
  2380     008D                     	;# 
  2381     008E                     	;# 
  2382     008E                     	;# 
  2383     008F                     	;# 
  2384     0090                     	;# 
  2385     0090                     	;# 
  2386     0091                     	;# 
  2387     0092                     	;# 
  2388     0092                     	;# 
  2389     0093                     	;# 
  2390     0094                     	;# 
  2391     0094                     	;# 
  2392     0095                     	;# 
  2393     0096                     	;# 
  2394     0096                     	;# 
  2395     0097                     	;# 
  2396     0098                     	;# 
  2397     0099                     	;# 
  2398     009A                     	;# 
  2399     009B                     	;# 
  2400     009B                     	;# 
  2401     009C                     	;# 
  2402     009D                     	;# 
  2403     009D                     	;# 
  2404     009E                     	;# 
  2405     009F                     	;# 
  2406     010C                     	;# 
  2407     010C                     	;# 
  2408     010D                     	;# 
  2409     010E                     	;# 
  2410     010F                     	;# 
  2411     010F                     	;# 
  2412     0110                     	;# 
  2413     0111                     	;# 
  2414     0112                     	;# 
  2415     0113                     	;# 
  2416     0114                     	;# 
  2417     0115                     	;# 
  2418     0116                     	;# 
  2419     0117                     	;# 
  2420     0118                     	;# 
  2421     0119                     	;# 
  2422     0119                     	;# 
  2423     0119                     	;# 
  2424     011A                     	;# 
  2425     011A                     	;# 
  2426     011A                     	;# 
  2427     011B                     	;# 
  2428     011B                     	;# 
  2429     011B                     	;# 
  2430     011B                     	;# 
  2431     011B                     	;# 
  2432     011C                     	;# 
  2433     011C                     	;# 
  2434     011C                     	;# 
  2435     011D                     	;# 
  2436     011D                     	;# 
  2437     011D                     	;# 
  2438     011E                     	;# 
  2439     011E                     	;# 
  2440     011E                     	;# 
  2441     011F                     	;# 
  2442     011F                     	;# 
  2443     011F                     	;# 
  2444     011F                     	;# 
  2445     011F                     	;# 
  2446     018C                     	;# 
  2447     018D                     	;# 
  2448     018E                     	;# 
  2449     018F                     	;# 
  2450     0190                     	;# 
  2451     0191                     	;# 
  2452     0192                     	;# 
  2453     0196                     	;# 
  2454     0197                     	;# 
  2455     0198                     	;# 
  2456     0199                     	;# 
  2457     019A                     	;# 
  2458     019B                     	;# 
  2459     019C                     	;# 
  2460     020C                     	;# 
  2461     020D                     	;# 
  2462     020E                     	;# 
  2463     020E                     	;# 
  2464     020F                     	;# 
  2465     020F                     	;# 
  2466     0210                     	;# 
  2467     0210                     	;# 
  2468     0211                     	;# 
  2469     0211                     	;# 
  2470     0212                     	;# 
  2471     0213                     	;# 
  2472     0214                     	;# 
  2473     0214                     	;# 
  2474     0215                     	;# 
  2475     0215                     	;# 
  2476     0216                     	;# 
  2477     0216                     	;# 
  2478     0217                     	;# 
  2479     0217                     	;# 
  2480     0218                     	;# 
  2481     0219                     	;# 
  2482     021A                     	;# 
  2483     021A                     	;# 
  2484     021B                     	;# 
  2485     021B                     	;# 
  2486     021C                     	;# 
  2487     021C                     	;# 
  2488     021D                     	;# 
  2489     021D                     	;# 
  2490     021E                     	;# 
  2491     021F                     	;# 
  2492     028C                     	;# 
  2493     028C                     	;# 
  2494     028D                     	;# 
  2495     028D                     	;# 
  2496     028E                     	;# 
  2497     028F                     	;# 
  2498     0290                     	;# 
  2499     0291                     	;# 
  2500     0292                     	;# 
  2501     0292                     	;# 
  2502     0293                     	;# 
  2503     0293                     	;# 
  2504     0294                     	;# 
  2505     0295                     	;# 
  2506     0296                     	;# 
  2507     0297                     	;# 
  2508     0298                     	;# 
  2509     0298                     	;# 
  2510     0299                     	;# 
  2511     0299                     	;# 
  2512     029A                     	;# 
  2513     029B                     	;# 
  2514     029C                     	;# 
  2515     029D                     	;# 
  2516     029F                     	;# 
  2517     030C                     	;# 
  2518     030C                     	;# 
  2519     030D                     	;# 
  2520     030E                     	;# 
  2521     030F                     	;# 
  2522     0310                     	;# 
  2523     0310                     	;# 
  2524     0311                     	;# 
  2525     0312                     	;# 
  2526     0313                     	;# 
  2527     0314                     	;# 
  2528     0314                     	;# 
  2529     0315                     	;# 
  2530     0316                     	;# 
  2531     0317                     	;# 
  2532     0318                     	;# 
  2533     0318                     	;# 
  2534     0319                     	;# 
  2535     031A                     	;# 
  2536     031B                     	;# 
  2537     031C                     	;# 
  2538     031C                     	;# 
  2539     031D                     	;# 
  2540     031E                     	;# 
  2541     031F                     	;# 
  2542     038C                     	;# 
  2543     038C                     	;# 
  2544     038D                     	;# 
  2545     038E                     	;# 
  2546     0390                     	;# 
  2547     0390                     	;# 
  2548     0391                     	;# 
  2549     0392                     	;# 
  2550     048C                     	;# 
  2551     048C                     	;# 
  2552     048D                     	;# 
  2553     048E                     	;# 
  2554     048F                     	;# 
  2555     048F                     	;# 
  2556     0490                     	;# 
  2557     0491                     	;# 
  2558     0492                     	;# 
  2559     0492                     	;# 
  2560     0493                     	;# 
  2561     0494                     	;# 
  2562     0495                     	;# 
  2563     0495                     	;# 
  2564     0496                     	;# 
  2565     0497                     	;# 
  2566     0498                     	;# 
  2567     0499                     	;# 
  2568     049A                     	;# 
  2569     049B                     	;# 
  2570     049C                     	;# 
  2571     049D                     	;# 
  2572     050C                     	;# 
  2573     050C                     	;# 
  2574     050D                     	;# 
  2575     050E                     	;# 
  2576     050F                     	;# 
  2577     050F                     	;# 
  2578     0510                     	;# 
  2579     0511                     	;# 
  2580     0512                     	;# 
  2581     0512                     	;# 
  2582     0513                     	;# 
  2583     0514                     	;# 
  2584     0515                     	;# 
  2585     0515                     	;# 
  2586     0516                     	;# 
  2587     0517                     	;# 
  2588     0518                     	;# 
  2589     0519                     	;# 
  2590     051A                     	;# 
  2591     051B                     	;# 
  2592     051C                     	;# 
  2593     051D                     	;# 
  2594     058C                     	;# 
  2595     058C                     	;# 
  2596     058D                     	;# 
  2597     058E                     	;# 
  2598     058F                     	;# 
  2599     058F                     	;# 
  2600     0590                     	;# 
  2601     0591                     	;# 
  2602     0592                     	;# 
  2603     0593                     	;# 
  2604     059C                     	;# 
  2605     059C                     	;# 
  2606     059D                     	;# 
  2607     059D                     	;# 
  2608     059E                     	;# 
  2609     059F                     	;# 
  2610     060C                     	;# 
  2611     060C                     	;# 
  2612     060D                     	;# 
  2613     060D                     	;# 
  2614     060E                     	;# 
  2615     060F                     	;# 
  2616     0610                     	;# 
  2617     0611                     	;# 
  2618     0612                     	;# 
  2619     0613                     	;# 
  2620     0614                     	;# 
  2621     0616                     	;# 
  2622     0616                     	;# 
  2623     0617                     	;# 
  2624     0617                     	;# 
  2625     0618                     	;# 
  2626     0619                     	;# 
  2627     061A                     	;# 
  2628     061B                     	;# 
  2629     061C                     	;# 
  2630     061D                     	;# 
  2631     061E                     	;# 
  2632     068C                     	;# 
  2633     068D                     	;# 
  2634     068E                     	;# 
  2635     068F                     	;# 
  2636     0690                     	;# 
  2637     0691                     	;# 
  2638     0692                     	;# 
  2639     0693                     	;# 
  2640     0694                     	;# 
  2641     070C                     	;# 
  2642     070D                     	;# 
  2643     070E                     	;# 
  2644     070F                     	;# 
  2645     0710                     	;# 
  2646     0711                     	;# 
  2647     0712                     	;# 
  2648     0713                     	;# 
  2649     0714                     	;# 
  2650     0716                     	;# 
  2651     0717                     	;# 
  2652     0718                     	;# 
  2653     0719                     	;# 
  2654     071A                     	;# 
  2655     071B                     	;# 
  2656     071C                     	;# 
  2657     071D                     	;# 
  2658     071E                     	;# 
  2659     0796                     	;# 
  2660     0797                     	;# 
  2661     0798                     	;# 
  2662     0799                     	;# 
  2663     079A                     	;# 
  2664     079B                     	;# 
  2665     079C                     	;# 
  2666     079D                     	;# 
  2667     080C                     	;# 
  2668     080D                     	;# 
  2669     080E                     	;# 
  2670     080F                     	;# 
  2671     0810                     	;# 
  2672     0811                     	;# 
  2673     0813                     	;# 
  2674     0814                     	;# 
  2675     081A                     	;# 
  2676     081A                     	;# 
  2677     081B                     	;# 
  2678     081C                     	;# 
  2679     081C                     	;# 
  2680     081D                     	;# 
  2681     081E                     	;# 
  2682     081F                     	;# 
  2683     088C                     	;# 
  2684     088D                     	;# 
  2685     088E                     	;# 
  2686     088F                     	;# 
  2687     0890                     	;# 
  2688     0891                     	;# 
  2689     0892                     	;# 
  2690     0893                     	;# 
  2691     0895                     	;# 
  2692     0896                     	;# 
  2693     0897                     	;# 
  2694     0898                     	;# 
  2695     0899                     	;# 
  2696     089A                     	;# 
  2697     089B                     	;# 
  2698     090C                     	;# 
  2699     090E                     	;# 
  2700     090F                     	;# 
  2701     091F                     	;# 
  2702     098F                     	;# 
  2703     098F                     	;# 
  2704     0990                     	;# 
  2705     0991                     	;# 
  2706     0992                     	;# 
  2707     0993                     	;# 
  2708     0994                     	;# 
  2709     0995                     	;# 
  2710     0996                     	;# 
  2711     0997                     	;# 
  2712     0A19                     	;# 
  2713     0A19                     	;# 
  2714     0A1A                     	;# 
  2715     0A1A                     	;# 
  2716     0A1B                     	;# 
  2717     0A1B                     	;# 
  2718     0A1B                     	;# 
  2719     0A1C                     	;# 
  2720     0A1C                     	;# 
  2721     0A1D                     	;# 
  2722     0A1D                     	;# 
  2723     0A1E                     	;# 
  2724     0A1E                     	;# 
  2725     0A1F                     	;# 
  2726     0A1F                     	;# 
  2727     0A1F                     	;# 
  2728     1E0F                     	;# 
  2729     1E10                     	;# 
  2730     1E11                     	;# 
  2731     1E12                     	;# 
  2732     1E13                     	;# 
  2733     1E14                     	;# 
  2734     1E15                     	;# 
  2735     1E16                     	;# 
  2736     1E17                     	;# 
  2737     1E18                     	;# 
  2738     1E19                     	;# 
  2739     1E1A                     	;# 
  2740     1E1B                     	;# 
  2741     1E1C                     	;# 
  2742     1E1D                     	;# 
  2743     1E1E                     	;# 
  2744     1E1F                     	;# 
  2745     1E20                     	;# 
  2746     1E21                     	;# 
  2747     1E22                     	;# 
  2748     1E23                     	;# 
  2749     1E24                     	;# 
  2750     1E25                     	;# 
  2751     1E26                     	;# 
  2752     1E27                     	;# 
  2753     1E28                     	;# 
  2754     1E29                     	;# 
  2755     1E2A                     	;# 
  2756     1E2B                     	;# 
  2757     1E2C                     	;# 
  2758     1E2D                     	;# 
  2759     1E2E                     	;# 
  2760     1E2F                     	;# 
  2761     1E30                     	;# 
  2762     1E31                     	;# 
  2763     1E32                     	;# 
  2764     1E33                     	;# 
  2765     1E34                     	;# 
  2766     1E35                     	;# 
  2767     1E36                     	;# 
  2768     1E37                     	;# 
  2769     1E8F                     	;# 
  2770     1E90                     	;# 
  2771     1E91                     	;# 
  2772     1E92                     	;# 
  2773     1E93                     	;# 
  2774     1E94                     	;# 
  2775     1E95                     	;# 
  2776     1E96                     	;# 
  2777     1E97                     	;# 
  2778     1E9C                     	;# 
  2779     1E9D                     	;# 
  2780     1E9E                     	;# 
  2781     1EA1                     	;# 
  2782     1EA2                     	;# 
  2783     1EA3                     	;# 
  2784     1EA4                     	;# 
  2785     1EA5                     	;# 
  2786     1EA9                     	;# 
  2787     1EAA                     	;# 
  2788     1EAB                     	;# 
  2789     1EAC                     	;# 
  2790     1EB1                     	;# 
  2791     1EB2                     	;# 
  2792     1EB3                     	;# 
  2793     1EB8                     	;# 
  2794     1EB9                     	;# 
  2795     1EBA                     	;# 
  2796     1EBB                     	;# 
  2797     1EBC                     	;# 
  2798     1EBD                     	;# 
  2799     1EBE                     	;# 
  2800     1EC3                     	;# 
  2801     1EC5                     	;# 
  2802     1EC6                     	;# 
  2803     1EC7                     	;# 
  2804     1EC8                     	;# 
  2805     1EC9                     	;# 
  2806     1ECA                     	;# 
  2807     1ECB                     	;# 
  2808     1ECC                     	;# 
  2809     1ECD                     	;# 
  2810     1ECE                     	;# 
  2811     1F10                     	;# 
  2812     1F11                     	;# 
  2813     1F12                     	;# 
  2814     1F13                     	;# 
  2815     1F14                     	;# 
  2816     1F15                     	;# 
  2817     1F16                     	;# 
  2818     1F17                     	;# 
  2819     1F18                     	;# 
  2820     1F19                     	;# 
  2821     1F1A                     	;# 
  2822     1F1B                     	;# 
  2823     1F1C                     	;# 
  2824     1F1D                     	;# 
  2825     1F1E                     	;# 
  2826     1F1F                     	;# 
  2827     1F20                     	;# 
  2828     1F21                     	;# 
  2829     1F22                     	;# 
  2830     1F23                     	;# 
  2831     1F24                     	;# 
  2832     1F25                     	;# 
  2833     1F26                     	;# 
  2834     1F27                     	;# 
  2835     1F38                     	;# 
  2836     1F39                     	;# 
  2837     1F3A                     	;# 
  2838     1F3B                     	;# 
  2839     1F3C                     	;# 
  2840     1F3D                     	;# 
  2841     1F3E                     	;# 
  2842     1F3F                     	;# 
  2843     1F43                     	;# 
  2844     1F44                     	;# 
  2845     1F45                     	;# 
  2846     1F46                     	;# 
  2847     1F47                     	;# 
  2848     1F48                     	;# 
  2849     1F49                     	;# 
  2850     1F4A                     	;# 
  2851     1F4E                     	;# 
  2852     1F4F                     	;# 
  2853     1F50                     	;# 
  2854     1F51                     	;# 
  2855     1F52                     	;# 
  2856     1F53                     	;# 
  2857     1F54                     	;# 
  2858     1F55                     	;# 
  2859     1F65                     	;# 
  2860     1F66                     	;# 
  2861     1F67                     	;# 
  2862     1F68                     	;# 
  2863     1F69                     	;# 
  2864     1F6A                     	;# 
  2865     1F6B                     	;# 
  2866     1FE4                     	;# 
  2867     1FE5                     	;# 
  2868     1FE6                     	;# 
  2869     1FE7                     	;# 
  2870     1FE8                     	;# 
  2871     1FE8                     	;# 
  2872     1FE9                     	;# 
  2873     1FEA                     	;# 
  2874     1FEB                     	;# 
  2875     1FED                     	;# 
  2876     1FEE                     	;# 
  2877     1FEF                     	;# 
  2878     0000                     	;# 
  2879     0001                     	;# 
  2880     0002                     	;# 
  2881     0003                     	;# 
  2882     0004                     	;# 
  2883     0005                     	;# 
  2884     0006                     	;# 
  2885     0007                     	;# 
  2886     0008                     	;# 
  2887     0009                     	;# 
  2888     000A                     	;# 
  2889     000B                     	;# 
  2890     000C                     	;# 
  2891     000D                     	;# 
  2892     000E                     	;# 
  2893     0010                     	;# 
  2894     0012                     	;# 
  2895     0013                     	;# 
  2896     0014                     	;# 
  2897     0016                     	;# 
  2898     0018                     	;# 
  2899     0019                     	;# 
  2900     001A                     	;# 
  2901     001C                     	;# 
  2902     008C                     	;# 
  2903     008C                     	;# 
  2904     008D                     	;# 
  2905     008E                     	;# 
  2906     008E                     	;# 
  2907     008F                     	;# 
  2908     0090                     	;# 
  2909     0090                     	;# 
  2910     0091                     	;# 
  2911     0092                     	;# 
  2912     0092                     	;# 
  2913     0093                     	;# 
  2914     0094                     	;# 
  2915     0094                     	;# 
  2916     0095                     	;# 
  2917     0096                     	;# 
  2918     0096                     	;# 
  2919     0097                     	;# 
  2920     0098                     	;# 
  2921     0099                     	;# 
  2922     009A                     	;# 
  2923     009B                     	;# 
  2924     009B                     	;# 
  2925     009C                     	;# 
  2926     009D                     	;# 
  2927     009D                     	;# 
  2928     009E                     	;# 
  2929     009F                     	;# 
  2930     010C                     	;# 
  2931     010C                     	;# 
  2932     010D                     	;# 
  2933     010E                     	;# 
  2934     010F                     	;# 
  2935     010F                     	;# 
  2936     0110                     	;# 
  2937     0111                     	;# 
  2938     0112                     	;# 
  2939     0113                     	;# 
  2940     0114                     	;# 
  2941     0115                     	;# 
  2942     0116                     	;# 
  2943     0117                     	;# 
  2944     0118                     	;# 
  2945     0119                     	;# 
  2946     0119                     	;# 
  2947     0119                     	;# 
  2948     011A                     	;# 
  2949     011A                     	;# 
  2950     011A                     	;# 
  2951     011B                     	;# 
  2952     011B                     	;# 
  2953     011B                     	;# 
  2954     011B                     	;# 
  2955     011B                     	;# 
  2956     011C                     	;# 
  2957     011C                     	;# 
  2958     011C                     	;# 
  2959     011D                     	;# 
  2960     011D                     	;# 
  2961     011D                     	;# 
  2962     011E                     	;# 
  2963     011E                     	;# 
  2964     011E                     	;# 
  2965     011F                     	;# 
  2966     011F                     	;# 
  2967     011F                     	;# 
  2968     011F                     	;# 
  2969     011F                     	;# 
  2970     018C                     	;# 
  2971     018D                     	;# 
  2972     018E                     	;# 
  2973     018F                     	;# 
  2974     0190                     	;# 
  2975     0191                     	;# 
  2976     0192                     	;# 
  2977     0196                     	;# 
  2978     0197                     	;# 
  2979     0198                     	;# 
  2980     0199                     	;# 
  2981     019A                     	;# 
  2982     019B                     	;# 
  2983     019C                     	;# 
  2984     020C                     	;# 
  2985     020D                     	;# 
  2986     020E                     	;# 
  2987     020E                     	;# 
  2988     020F                     	;# 
  2989     020F                     	;# 
  2990     0210                     	;# 
  2991     0210                     	;# 
  2992     0211                     	;# 
  2993     0211                     	;# 
  2994     0212                     	;# 
  2995     0213                     	;# 
  2996     0214                     	;# 
  2997     0214                     	;# 
  2998     0215                     	;# 
  2999     0215                     	;# 
  3000     0216                     	;# 
  3001     0216                     	;# 
  3002     0217                     	;# 
  3003     0217                     	;# 
  3004     0218                     	;# 
  3005     0219                     	;# 
  3006     021A                     	;# 
  3007     021A                     	;# 
  3008     021B                     	;# 
  3009     021B                     	;# 
  3010     021C                     	;# 
  3011     021C                     	;# 
  3012     021D                     	;# 
  3013     021D                     	;# 
  3014     021E                     	;# 
  3015     021F                     	;# 
  3016     028C                     	;# 
  3017     028C                     	;# 
  3018     028D                     	;# 
  3019     028D                     	;# 
  3020     028E                     	;# 
  3021     028F                     	;# 
  3022     0290                     	;# 
  3023     0291                     	;# 
  3024     0292                     	;# 
  3025     0292                     	;# 
  3026     0293                     	;# 
  3027     0293                     	;# 
  3028     0294                     	;# 
  3029     0295                     	;# 
  3030     0296                     	;# 
  3031     0297                     	;# 
  3032     0298                     	;# 
  3033     0298                     	;# 
  3034     0299                     	;# 
  3035     0299                     	;# 
  3036     029A                     	;# 
  3037     029B                     	;# 
  3038     029C                     	;# 
  3039     029D                     	;# 
  3040     029F                     	;# 
  3041     030C                     	;# 
  3042     030C                     	;# 
  3043     030D                     	;# 
  3044     030E                     	;# 
  3045     030F                     	;# 
  3046     0310                     	;# 
  3047     0310                     	;# 
  3048     0311                     	;# 
  3049     0312                     	;# 
  3050     0313                     	;# 
  3051     0314                     	;# 
  3052     0314                     	;# 
  3053     0315                     	;# 
  3054     0316                     	;# 
  3055     0317                     	;# 
  3056     0318                     	;# 
  3057     0318                     	;# 
  3058     0319                     	;# 
  3059     031A                     	;# 
  3060     031B                     	;# 
  3061     031C                     	;# 
  3062     031C                     	;# 
  3063     031D                     	;# 
  3064     031E                     	;# 
  3065     031F                     	;# 
  3066     038C                     	;# 
  3067     038C                     	;# 
  3068     038D                     	;# 
  3069     038E                     	;# 
  3070     0390                     	;# 
  3071     0390                     	;# 
  3072     0391                     	;# 
  3073     0392                     	;# 
  3074     048C                     	;# 
  3075     048C                     	;# 
  3076     048D                     	;# 
  3077     048E                     	;# 
  3078     048F                     	;# 
  3079     048F                     	;# 
  3080     0490                     	;# 
  3081     0491                     	;# 
  3082     0492                     	;# 
  3083     0492                     	;# 
  3084     0493                     	;# 
  3085     0494                     	;# 
  3086     0495                     	;# 
  3087     0495                     	;# 
  3088     0496                     	;# 
  3089     0497                     	;# 
  3090     0498                     	;# 
  3091     0499                     	;# 
  3092     049A                     	;# 
  3093     049B                     	;# 
  3094     049C                     	;# 
  3095     049D                     	;# 
  3096     050C                     	;# 
  3097     050C                     	;# 
  3098     050D                     	;# 
  3099     050E                     	;# 
  3100     050F                     	;# 
  3101     050F                     	;# 
  3102     0510                     	;# 
  3103     0511                     	;# 
  3104     0512                     	;# 
  3105     0512                     	;# 
  3106     0513                     	;# 
  3107     0514                     	;# 
  3108     0515                     	;# 
  3109     0515                     	;# 
  3110     0516                     	;# 
  3111     0517                     	;# 
  3112     0518                     	;# 
  3113     0519                     	;# 
  3114     051A                     	;# 
  3115     051B                     	;# 
  3116     051C                     	;# 
  3117     051D                     	;# 
  3118     058C                     	;# 
  3119     058C                     	;# 
  3120     058D                     	;# 
  3121     058E                     	;# 
  3122     058F                     	;# 
  3123     058F                     	;# 
  3124     0590                     	;# 
  3125     0591                     	;# 
  3126     0592                     	;# 
  3127     0593                     	;# 
  3128     059C                     	;# 
  3129     059C                     	;# 
  3130     059D                     	;# 
  3131     059D                     	;# 
  3132     059E                     	;# 
  3133     059F                     	;# 
  3134     060C                     	;# 
  3135     060C                     	;# 
  3136     060D                     	;# 
  3137     060D                     	;# 
  3138     060E                     	;# 
  3139     060F                     	;# 
  3140     0610                     	;# 
  3141     0611                     	;# 
  3142     0612                     	;# 
  3143     0613                     	;# 
  3144     0614                     	;# 
  3145     0616                     	;# 
  3146     0616                     	;# 
  3147     0617                     	;# 
  3148     0617                     	;# 
  3149     0618                     	;# 
  3150     0619                     	;# 
  3151     061A                     	;# 
  3152     061B                     	;# 
  3153     061C                     	;# 
  3154     061D                     	;# 
  3155     061E                     	;# 
  3156     068C                     	;# 
  3157     068D                     	;# 
  3158     068E                     	;# 
  3159     068F                     	;# 
  3160     0690                     	;# 
  3161     0691                     	;# 
  3162     0692                     	;# 
  3163     0693                     	;# 
  3164     0694                     	;# 
  3165     070C                     	;# 
  3166     070D                     	;# 
  3167     070E                     	;# 
  3168     070F                     	;# 
  3169     0710                     	;# 
  3170     0711                     	;# 
  3171     0712                     	;# 
  3172     0713                     	;# 
  3173     0714                     	;# 
  3174     0716                     	;# 
  3175     0717                     	;# 
  3176     0718                     	;# 
  3177     0719                     	;# 
  3178     071A                     	;# 
  3179     071B                     	;# 
  3180     071C                     	;# 
  3181     071D                     	;# 
  3182     071E                     	;# 
  3183     0796                     	;# 
  3184     0797                     	;# 
  3185     0798                     	;# 
  3186     0799                     	;# 
  3187     079A                     	;# 
  3188     079B                     	;# 
  3189     079C                     	;# 
  3190     079D                     	;# 
  3191     080C                     	;# 
  3192     080D                     	;# 
  3193     080E                     	;# 
  3194     080F                     	;# 
  3195     0810                     	;# 
  3196     0811                     	;# 
  3197     0813                     	;# 
  3198     0814                     	;# 
  3199     081A                     	;# 
  3200     081A                     	;# 
  3201     081B                     	;# 
  3202     081C                     	;# 
  3203     081C                     	;# 
  3204     081D                     	;# 
  3205     081E                     	;# 
  3206     081F                     	;# 
  3207     088C                     	;# 
  3208     088D                     	;# 
  3209     088E                     	;# 
  3210     088F                     	;# 
  3211     0890                     	;# 
  3212     0891                     	;# 
  3213     0892                     	;# 
  3214     0893                     	;# 
  3215     0895                     	;# 
  3216     0896                     	;# 
  3217     0897                     	;# 
  3218     0898                     	;# 
  3219     0899                     	;# 
  3220     089A                     	;# 
  3221     089B                     	;# 
  3222     090C                     	;# 
  3223     090E                     	;# 
  3224     090F                     	;# 
  3225     091F                     	;# 
  3226     098F                     	;# 
  3227     098F                     	;# 
  3228     0990                     	;# 
  3229     0991                     	;# 
  3230     0992                     	;# 
  3231     0993                     	;# 
  3232     0994                     	;# 
  3233     0995                     	;# 
  3234     0996                     	;# 
  3235     0997                     	;# 
  3236     0A19                     	;# 
  3237     0A19                     	;# 
  3238     0A1A                     	;# 
  3239     0A1A                     	;# 
  3240     0A1B                     	;# 
  3241     0A1B                     	;# 
  3242     0A1B                     	;# 
  3243     0A1C                     	;# 
  3244     0A1C                     	;# 
  3245     0A1D                     	;# 
  3246     0A1D                     	;# 
  3247     0A1E                     	;# 
  3248     0A1E                     	;# 
  3249     0A1F                     	;# 
  3250     0A1F                     	;# 
  3251     0A1F                     	;# 
  3252     1E0F                     	;# 
  3253     1E10                     	;# 
  3254     1E11                     	;# 
  3255     1E12                     	;# 
  3256     1E13                     	;# 
  3257     1E14                     	;# 
  3258     1E15                     	;# 
  3259     1E16                     	;# 
  3260     1E17                     	;# 
  3261     1E18                     	;# 
  3262     1E19                     	;# 
  3263     1E1A                     	;# 
  3264     1E1B                     	;# 
  3265     1E1C                     	;# 
  3266     1E1D                     	;# 
  3267     1E1E                     	;# 
  3268     1E1F                     	;# 
  3269     1E20                     	;# 
  3270     1E21                     	;# 
  3271     1E22                     	;# 
  3272     1E23                     	;# 
  3273     1E24                     	;# 
  3274     1E25                     	;# 
  3275     1E26                     	;# 
  3276     1E27                     	;# 
  3277     1E28                     	;# 
  3278     1E29                     	;# 
  3279     1E2A                     	;# 
  3280     1E2B                     	;# 
  3281     1E2C                     	;# 
  3282     1E2D                     	;# 
  3283     1E2E                     	;# 
  3284     1E2F                     	;# 
  3285     1E30                     	;# 
  3286     1E31                     	;# 
  3287     1E32                     	;# 
  3288     1E33                     	;# 
  3289     1E34                     	;# 
  3290     1E35                     	;# 
  3291     1E36                     	;# 
  3292     1E37                     	;# 
  3293     1E8F                     	;# 
  3294     1E90                     	;# 
  3295     1E91                     	;# 
  3296     1E92                     	;# 
  3297     1E93                     	;# 
  3298     1E94                     	;# 
  3299     1E95                     	;# 
  3300     1E96                     	;# 
  3301     1E97                     	;# 
  3302     1E9C                     	;# 
  3303     1E9D                     	;# 
  3304     1E9E                     	;# 
  3305     1EA1                     	;# 
  3306     1EA2                     	;# 
  3307     1EA3                     	;# 
  3308     1EA4                     	;# 
  3309     1EA5                     	;# 
  3310     1EA9                     	;# 
  3311     1EAA                     	;# 
  3312     1EAB                     	;# 
  3313     1EAC                     	;# 
  3314     1EB1                     	;# 
  3315     1EB2                     	;# 
  3316     1EB3                     	;# 
  3317     1EB8                     	;# 
  3318     1EB9                     	;# 
  3319     1EBA                     	;# 
  3320     1EBB                     	;# 
  3321     1EBC                     	;# 
  3322     1EBD                     	;# 
  3323     1EBE                     	;# 
  3324     1EC3                     	;# 
  3325     1EC5                     	;# 
  3326     1EC6                     	;# 
  3327     1EC7                     	;# 
  3328     1EC8                     	;# 
  3329     1EC9                     	;# 
  3330     1ECA                     	;# 
  3331     1ECB                     	;# 
  3332     1ECC                     	;# 
  3333     1ECD                     	;# 
  3334     1ECE                     	;# 
  3335     1F10                     	;# 
  3336     1F11                     	;# 
  3337     1F12                     	;# 
  3338     1F13                     	;# 
  3339     1F14                     	;# 
  3340     1F15                     	;# 
  3341     1F16                     	;# 
  3342     1F17                     	;# 
  3343     1F18                     	;# 
  3344     1F19                     	;# 
  3345     1F1A                     	;# 
  3346     1F1B                     	;# 
  3347     1F1C                     	;# 
  3348     1F1D                     	;# 
  3349     1F1E                     	;# 
  3350     1F1F                     	;# 
  3351     1F20                     	;# 
  3352     1F21                     	;# 
  3353     1F22                     	;# 
  3354     1F23                     	;# 
  3355     1F24                     	;# 
  3356     1F25                     	;# 
  3357     1F26                     	;# 
  3358     1F27                     	;# 
  3359     1F38                     	;# 
  3360     1F39                     	;# 
  3361     1F3A                     	;# 
  3362     1F3B                     	;# 
  3363     1F3C                     	;# 
  3364     1F3D                     	;# 
  3365     1F3E                     	;# 
  3366     1F3F                     	;# 
  3367     1F43                     	;# 
  3368     1F44                     	;# 
  3369     1F45                     	;# 
  3370     1F46                     	;# 
  3371     1F47                     	;# 
  3372     1F48                     	;# 
  3373     1F49                     	;# 
  3374     1F4A                     	;# 
  3375     1F4E                     	;# 
  3376     1F4F                     	;# 
  3377     1F50                     	;# 
  3378     1F51                     	;# 
  3379     1F52                     	;# 
  3380     1F53                     	;# 
  3381     1F54                     	;# 
  3382     1F55                     	;# 
  3383     1F65                     	;# 
  3384     1F66                     	;# 
  3385     1F67                     	;# 
  3386     1F68                     	;# 
  3387     1F69                     	;# 
  3388     1F6A                     	;# 
  3389     1F6B                     	;# 
  3390     1FE4                     	;# 
  3391     1FE5                     	;# 
  3392     1FE6                     	;# 
  3393     1FE7                     	;# 
  3394     1FE8                     	;# 
  3395     1FE8                     	;# 
  3396     1FE9                     	;# 
  3397     1FEA                     	;# 
  3398     1FEB                     	;# 
  3399     1FED                     	;# 
  3400     1FEE                     	;# 
  3401     1FEF                     	;# 
  3402     0000                     	;# 
  3403     0001                     	;# 
  3404     0002                     	;# 
  3405     0003                     	;# 
  3406     0004                     	;# 
  3407     0005                     	;# 
  3408     0006                     	;# 
  3409     0007                     	;# 
  3410     0008                     	;# 
  3411     0009                     	;# 
  3412     000A                     	;# 
  3413     000B                     	;# 
  3414     000C                     	;# 
  3415     000D                     	;# 
  3416     000E                     	;# 
  3417     0010                     	;# 
  3418     0012                     	;# 
  3419     0013                     	;# 
  3420     0014                     	;# 
  3421     0016                     	;# 
  3422     0018                     	;# 
  3423     0019                     	;# 
  3424     001A                     	;# 
  3425     001C                     	;# 
  3426     008C                     	;# 
  3427     008C                     	;# 
  3428     008D                     	;# 
  3429     008E                     	;# 
  3430     008E                     	;# 
  3431     008F                     	;# 
  3432     0090                     	;# 
  3433     0090                     	;# 
  3434     0091                     	;# 
  3435     0092                     	;# 
  3436     0092                     	;# 
  3437     0093                     	;# 
  3438     0094                     	;# 
  3439     0094                     	;# 
  3440     0095                     	;# 
  3441     0096                     	;# 
  3442     0096                     	;# 
  3443     0097                     	;# 
  3444     0098                     	;# 
  3445     0099                     	;# 
  3446     009A                     	;# 
  3447     009B                     	;# 
  3448     009B                     	;# 
  3449     009C                     	;# 
  3450     009D                     	;# 
  3451     009D                     	;# 
  3452     009E                     	;# 
  3453     009F                     	;# 
  3454     010C                     	;# 
  3455     010C                     	;# 
  3456     010D                     	;# 
  3457     010E                     	;# 
  3458     010F                     	;# 
  3459     010F                     	;# 
  3460     0110                     	;# 
  3461     0111                     	;# 
  3462     0112                     	;# 
  3463     0113                     	;# 
  3464     0114                     	;# 
  3465     0115                     	;# 
  3466     0116                     	;# 
  3467     0117                     	;# 
  3468     0118                     	;# 
  3469     0119                     	;# 
  3470     0119                     	;# 
  3471     0119                     	;# 
  3472     011A                     	;# 
  3473     011A                     	;# 
  3474     011A                     	;# 
  3475     011B                     	;# 
  3476     011B                     	;# 
  3477     011B                     	;# 
  3478     011B                     	;# 
  3479     011B                     	;# 
  3480     011C                     	;# 
  3481     011C                     	;# 
  3482     011C                     	;# 
  3483     011D                     	;# 
  3484     011D                     	;# 
  3485     011D                     	;# 
  3486     011E                     	;# 
  3487     011E                     	;# 
  3488     011E                     	;# 
  3489     011F                     	;# 
  3490     011F                     	;# 
  3491     011F                     	;# 
  3492     011F                     	;# 
  3493     011F                     	;# 
  3494     018C                     	;# 
  3495     018D                     	;# 
  3496     018E                     	;# 
  3497     018F                     	;# 
  3498     0190                     	;# 
  3499     0191                     	;# 
  3500     0192                     	;# 
  3501     0196                     	;# 
  3502     0197                     	;# 
  3503     0198                     	;# 
  3504     0199                     	;# 
  3505     019A                     	;# 
  3506     019B                     	;# 
  3507     019C                     	;# 
  3508     020C                     	;# 
  3509     020D                     	;# 
  3510     020E                     	;# 
  3511     020E                     	;# 
  3512     020F                     	;# 
  3513     020F                     	;# 
  3514     0210                     	;# 
  3515     0210                     	;# 
  3516     0211                     	;# 
  3517     0211                     	;# 
  3518     0212                     	;# 
  3519     0213                     	;# 
  3520     0214                     	;# 
  3521     0214                     	;# 
  3522     0215                     	;# 
  3523     0215                     	;# 
  3524     0216                     	;# 
  3525     0216                     	;# 
  3526     0217                     	;# 
  3527     0217                     	;# 
  3528     0218                     	;# 
  3529     0219                     	;# 
  3530     021A                     	;# 
  3531     021A                     	;# 
  3532     021B                     	;# 
  3533     021B                     	;# 
  3534     021C                     	;# 
  3535     021C                     	;# 
  3536     021D                     	;# 
  3537     021D                     	;# 
  3538     021E                     	;# 
  3539     021F                     	;# 
  3540     028C                     	;# 
  3541     028C                     	;# 
  3542     028D                     	;# 
  3543     028D                     	;# 
  3544     028E                     	;# 
  3545     028F                     	;# 
  3546     0290                     	;# 
  3547     0291                     	;# 
  3548     0292                     	;# 
  3549     0292                     	;# 
  3550     0293                     	;# 
  3551     0293                     	;# 
  3552     0294                     	;# 
  3553     0295                     	;# 
  3554     0296                     	;# 
  3555     0297                     	;# 
  3556     0298                     	;# 
  3557     0298                     	;# 
  3558     0299                     	;# 
  3559     0299                     	;# 
  3560     029A                     	;# 
  3561     029B                     	;# 
  3562     029C                     	;# 
  3563     029D                     	;# 
  3564     029F                     	;# 
  3565     030C                     	;# 
  3566     030C                     	;# 
  3567     030D                     	;# 
  3568     030E                     	;# 
  3569     030F                     	;# 
  3570     0310                     	;# 
  3571     0310                     	;# 
  3572     0311                     	;# 
  3573     0312                     	;# 
  3574     0313                     	;# 
  3575     0314                     	;# 
  3576     0314                     	;# 
  3577     0315                     	;# 
  3578     0316                     	;# 
  3579     0317                     	;# 
  3580     0318                     	;# 
  3581     0318                     	;# 
  3582     0319                     	;# 
  3583     031A                     	;# 
  3584     031B                     	;# 
  3585     031C                     	;# 
  3586     031C                     	;# 
  3587     031D                     	;# 
  3588     031E                     	;# 
  3589     031F                     	;# 
  3590     038C                     	;# 
  3591     038C                     	;# 
  3592     038D                     	;# 
  3593     038E                     	;# 
  3594     0390                     	;# 
  3595     0390                     	;# 
  3596     0391                     	;# 
  3597     0392                     	;# 
  3598     048C                     	;# 
  3599     048C                     	;# 
  3600     048D                     	;# 
  3601     048E                     	;# 
  3602     048F                     	;# 
  3603     048F                     	;# 
  3604     0490                     	;# 
  3605     0491                     	;# 
  3606     0492                     	;# 
  3607     0492                     	;# 
  3608     0493                     	;# 
  3609     0494                     	;# 
  3610     0495                     	;# 
  3611     0495                     	;# 
  3612     0496                     	;# 
  3613     0497                     	;# 
  3614     0498                     	;# 
  3615     0499                     	;# 
  3616     049A                     	;# 
  3617     049B                     	;# 
  3618     049C                     	;# 
  3619     049D                     	;# 
  3620     050C                     	;# 
  3621     050C                     	;# 
  3622     050D                     	;# 
  3623     050E                     	;# 
  3624     050F                     	;# 
  3625     050F                     	;# 
  3626     0510                     	;# 
  3627     0511                     	;# 
  3628     0512                     	;# 
  3629     0512                     	;# 
  3630     0513                     	;# 
  3631     0514                     	;# 
  3632     0515                     	;# 
  3633     0515                     	;# 
  3634     0516                     	;# 
  3635     0517                     	;# 
  3636     0518                     	;# 
  3637     0519                     	;# 
  3638     051A                     	;# 
  3639     051B                     	;# 
  3640     051C                     	;# 
  3641     051D                     	;# 
  3642     058C                     	;# 
  3643     058C                     	;# 
  3644     058D                     	;# 
  3645     058E                     	;# 
  3646     058F                     	;# 
  3647     058F                     	;# 
  3648     0590                     	;# 
  3649     0591                     	;# 
  3650     0592                     	;# 
  3651     0593                     	;# 
  3652     059C                     	;# 
  3653     059C                     	;# 
  3654     059D                     	;# 
  3655     059D                     	;# 
  3656     059E                     	;# 
  3657     059F                     	;# 
  3658     060C                     	;# 
  3659     060C                     	;# 
  3660     060D                     	;# 
  3661     060D                     	;# 
  3662     060E                     	;# 
  3663     060F                     	;# 
  3664     0610                     	;# 
  3665     0611                     	;# 
  3666     0612                     	;# 
  3667     0613                     	;# 
  3668     0614                     	;# 
  3669     0616                     	;# 
  3670     0616                     	;# 
  3671     0617                     	;# 
  3672     0617                     	;# 
  3673     0618                     	;# 
  3674     0619                     	;# 
  3675     061A                     	;# 
  3676     061B                     	;# 
  3677     061C                     	;# 
  3678     061D                     	;# 
  3679     061E                     	;# 
  3680     068C                     	;# 
  3681     068D                     	;# 
  3682     068E                     	;# 
  3683     068F                     	;# 
  3684     0690                     	;# 
  3685     0691                     	;# 
  3686     0692                     	;# 
  3687     0693                     	;# 
  3688     0694                     	;# 
  3689     070C                     	;# 
  3690     070D                     	;# 
  3691     070E                     	;# 
  3692     070F                     	;# 
  3693     0710                     	;# 
  3694     0711                     	;# 
  3695     0712                     	;# 
  3696     0713                     	;# 
  3697     0714                     	;# 
  3698     0716                     	;# 
  3699     0717                     	;# 
  3700     0718                     	;# 
  3701     0719                     	;# 
  3702     071A                     	;# 
  3703     071B                     	;# 
  3704     071C                     	;# 
  3705     071D                     	;# 
  3706     071E                     	;# 
  3707     0796                     	;# 
  3708     0797                     	;# 
  3709     0798                     	;# 
  3710     0799                     	;# 
  3711     079A                     	;# 
  3712     079B                     	;# 
  3713     079C                     	;# 
  3714     079D                     	;# 
  3715     080C                     	;# 
  3716     080D                     	;# 
  3717     080E                     	;# 
  3718     080F                     	;# 
  3719     0810                     	;# 
  3720     0811                     	;# 
  3721     0813                     	;# 
  3722     0814                     	;# 
  3723     081A                     	;# 
  3724     081A                     	;# 
  3725     081B                     	;# 
  3726     081C                     	;# 
  3727     081C                     	;# 
  3728     081D                     	;# 
  3729     081E                     	;# 
  3730     081F                     	;# 
  3731     088C                     	;# 
  3732     088D                     	;# 
  3733     088E                     	;# 
  3734     088F                     	;# 
  3735     0890                     	;# 
  3736     0891                     	;# 
  3737     0892                     	;# 
  3738     0893                     	;# 
  3739     0895                     	;# 
  3740     0896                     	;# 
  3741     0897                     	;# 
  3742     0898                     	;# 
  3743     0899                     	;# 
  3744     089A                     	;# 
  3745     089B                     	;# 
  3746     090C                     	;# 
  3747     090E                     	;# 
  3748     090F                     	;# 
  3749     091F                     	;# 
  3750     098F                     	;# 
  3751     098F                     	;# 
  3752     0990                     	;# 
  3753     0991                     	;# 
  3754     0992                     	;# 
  3755     0993                     	;# 
  3756     0994                     	;# 
  3757     0995                     	;# 
  3758     0996                     	;# 
  3759     0997                     	;# 
  3760     0A19                     	;# 
  3761     0A19                     	;# 
  3762     0A1A                     	;# 
  3763     0A1A                     	;# 
  3764     0A1B                     	;# 
  3765     0A1B                     	;# 
  3766     0A1B                     	;# 
  3767     0A1C                     	;# 
  3768     0A1C                     	;# 
  3769     0A1D                     	;# 
  3770     0A1D                     	;# 
  3771     0A1E                     	;# 
  3772     0A1E                     	;# 
  3773     0A1F                     	;# 
  3774     0A1F                     	;# 
  3775     0A1F                     	;# 
  3776     1E0F                     	;# 
  3777     1E10                     	;# 
  3778     1E11                     	;# 
  3779     1E12                     	;# 
  3780     1E13                     	;# 
  3781     1E14                     	;# 
  3782     1E15                     	;# 
  3783     1E16                     	;# 
  3784     1E17                     	;# 
  3785     1E18                     	;# 
  3786     1E19                     	;# 
  3787     1E1A                     	;# 
  3788     1E1B                     	;# 
  3789     1E1C                     	;# 
  3790     1E1D                     	;# 
  3791     1E1E                     	;# 
  3792     1E1F                     	;# 
  3793     1E20                     	;# 
  3794     1E21                     	;# 
  3795     1E22                     	;# 
  3796     1E23                     	;# 
  3797     1E24                     	;# 
  3798     1E25                     	;# 
  3799     1E26                     	;# 
  3800     1E27                     	;# 
  3801     1E28                     	;# 
  3802     1E29                     	;# 
  3803     1E2A                     	;# 
  3804     1E2B                     	;# 
  3805     1E2C                     	;# 
  3806     1E2D                     	;# 
  3807     1E2E                     	;# 
  3808     1E2F                     	;# 
  3809     1E30                     	;# 
  3810     1E31                     	;# 
  3811     1E32                     	;# 
  3812     1E33                     	;# 
  3813     1E34                     	;# 
  3814     1E35                     	;# 
  3815     1E36                     	;# 
  3816     1E37                     	;# 
  3817     1E8F                     	;# 
  3818     1E90                     	;# 
  3819     1E91                     	;# 
  3820     1E92                     	;# 
  3821     1E93                     	;# 
  3822     1E94                     	;# 
  3823     1E95                     	;# 
  3824     1E96                     	;# 
  3825     1E97                     	;# 
  3826     1E9C                     	;# 
  3827     1E9D                     	;# 
  3828     1E9E                     	;# 
  3829     1EA1                     	;# 
  3830     1EA2                     	;# 
  3831     1EA3                     	;# 
  3832     1EA4                     	;# 
  3833     1EA5                     	;# 
  3834     1EA9                     	;# 
  3835     1EAA                     	;# 
  3836     1EAB                     	;# 
  3837     1EAC                     	;# 
  3838     1EB1                     	;# 
  3839     1EB2                     	;# 
  3840     1EB3                     	;# 
  3841     1EB8                     	;# 
  3842     1EB9                     	;# 
  3843     1EBA                     	;# 
  3844     1EBB                     	;# 
  3845     1EBC                     	;# 
  3846     1EBD                     	;# 
  3847     1EBE                     	;# 
  3848     1EC3                     	;# 
  3849     1EC5                     	;# 
  3850     1EC6                     	;# 
  3851     1EC7                     	;# 
  3852     1EC8                     	;# 
  3853     1EC9                     	;# 
  3854     1ECA                     	;# 
  3855     1ECB                     	;# 
  3856     1ECC                     	;# 
  3857     1ECD                     	;# 
  3858     1ECE                     	;# 
  3859     1F10                     	;# 
  3860     1F11                     	;# 
  3861     1F12                     	;# 
  3862     1F13                     	;# 
  3863     1F14                     	;# 
  3864     1F15                     	;# 
  3865     1F16                     	;# 
  3866     1F17                     	;# 
  3867     1F18                     	;# 
  3868     1F19                     	;# 
  3869     1F1A                     	;# 
  3870     1F1B                     	;# 
  3871     1F1C                     	;# 
  3872     1F1D                     	;# 
  3873     1F1E                     	;# 
  3874     1F1F                     	;# 
  3875     1F20                     	;# 
  3876     1F21                     	;# 
  3877     1F22                     	;# 
  3878     1F23                     	;# 
  3879     1F24                     	;# 
  3880     1F25                     	;# 
  3881     1F26                     	;# 
  3882     1F27                     	;# 
  3883     1F38                     	;# 
  3884     1F39                     	;# 
  3885     1F3A                     	;# 
  3886     1F3B                     	;# 
  3887     1F3C                     	;# 
  3888     1F3D                     	;# 
  3889     1F3E                     	;# 
  3890     1F3F                     	;# 
  3891     1F43                     	;# 
  3892     1F44                     	;# 
  3893     1F45                     	;# 
  3894     1F46                     	;# 
  3895     1F47                     	;# 
  3896     1F48                     	;# 
  3897     1F49                     	;# 
  3898     1F4A                     	;# 
  3899     1F4E                     	;# 
  3900     1F4F                     	;# 
  3901     1F50                     	;# 
  3902     1F51                     	;# 
  3903     1F52                     	;# 
  3904     1F53                     	;# 
  3905     1F54                     	;# 
  3906     1F55                     	;# 
  3907     1F65                     	;# 
  3908     1F66                     	;# 
  3909     1F67                     	;# 
  3910     1F68                     	;# 
  3911     1F69                     	;# 
  3912     1F6A                     	;# 
  3913     1F6B                     	;# 
  3914     1FE4                     	;# 
  3915     1FE5                     	;# 
  3916     1FE6                     	;# 
  3917     1FE7                     	;# 
  3918     1FE8                     	;# 
  3919     1FE8                     	;# 
  3920     1FE9                     	;# 
  3921     1FEA                     	;# 
  3922     1FEB                     	;# 
  3923     1FED                     	;# 
  3924     1FEE                     	;# 
  3925     1FEF                     	;# 
  3926     0000                     	;# 
  3927     0001                     	;# 
  3928     0002                     	;# 
  3929     0003                     	;# 
  3930     0004                     	;# 
  3931     0005                     	;# 
  3932     0006                     	;# 
  3933     0007                     	;# 
  3934     0008                     	;# 
  3935     0009                     	;# 
  3936     000A                     	;# 
  3937     000B                     	;# 
  3938     000C                     	;# 
  3939     000D                     	;# 
  3940     000E                     	;# 
  3941     0010                     	;# 
  3942     0012                     	;# 
  3943     0013                     	;# 
  3944     0014                     	;# 
  3945     0016                     	;# 
  3946     0018                     	;# 
  3947     0019                     	;# 
  3948     001A                     	;# 
  3949     001C                     	;# 
  3950     008C                     	;# 
  3951     008C                     	;# 
  3952     008D                     	;# 
  3953     008E                     	;# 
  3954     008E                     	;# 
  3955     008F                     	;# 
  3956     0090                     	;# 
  3957     0090                     	;# 
  3958     0091                     	;# 
  3959     0092                     	;# 
  3960     0092                     	;# 
  3961     0093                     	;# 
  3962     0094                     	;# 
  3963     0094                     	;# 
  3964     0095                     	;# 
  3965     0096                     	;# 
  3966     0096                     	;# 
  3967     0097                     	;# 
  3968     0098                     	;# 
  3969     0099                     	;# 
  3970     009A                     	;# 
  3971     009B                     	;# 
  3972     009B                     	;# 
  3973     009C                     	;# 
  3974     009D                     	;# 
  3975     009D                     	;# 
  3976     009E                     	;# 
  3977     009F                     	;# 
  3978     010C                     	;# 
  3979     010C                     	;# 
  3980     010D                     	;# 
  3981     010E                     	;# 
  3982     010F                     	;# 
  3983     010F                     	;# 
  3984     0110                     	;# 
  3985     0111                     	;# 
  3986     0112                     	;# 
  3987     0113                     	;# 
  3988     0114                     	;# 
  3989     0115                     	;# 
  3990     0116                     	;# 
  3991     0117                     	;# 
  3992     0118                     	;# 
  3993     0119                     	;# 
  3994     0119                     	;# 
  3995     0119                     	;# 
  3996     011A                     	;# 
  3997     011A                     	;# 
  3998     011A                     	;# 
  3999     011B                     	;# 
  4000     011B                     	;# 
  4001     011B                     	;# 
  4002     011B                     	;# 
  4003     011B                     	;# 
  4004     011C                     	;# 
  4005     011C                     	;# 
  4006     011C                     	;# 
  4007     011D                     	;# 
  4008     011D                     	;# 
  4009     011D                     	;# 
  4010     011E                     	;# 
  4011     011E                     	;# 
  4012     011E                     	;# 
  4013     011F                     	;# 
  4014     011F                     	;# 
  4015     011F                     	;# 
  4016     011F                     	;# 
  4017     011F                     	;# 
  4018     018C                     	;# 
  4019     018D                     	;# 
  4020     018E                     	;# 
  4021     018F                     	;# 
  4022     0190                     	;# 
  4023     0191                     	;# 
  4024     0192                     	;# 
  4025     0196                     	;# 
  4026     0197                     	;# 
  4027     0198                     	;# 
  4028     0199                     	;# 
  4029     019A                     	;# 
  4030     019B                     	;# 
  4031     019C                     	;# 
  4032     020C                     	;# 
  4033     020D                     	;# 
  4034     020E                     	;# 
  4035     020E                     	;# 
  4036     020F                     	;# 
  4037     020F                     	;# 
  4038     0210                     	;# 
  4039     0210                     	;# 
  4040     0211                     	;# 
  4041     0211                     	;# 
  4042     0212                     	;# 
  4043     0213                     	;# 
  4044     0214                     	;# 
  4045     0214                     	;# 
  4046     0215                     	;# 
  4047     0215                     	;# 
  4048     0216                     	;# 
  4049     0216                     	;# 
  4050     0217                     	;# 
  4051     0217                     	;# 
  4052     0218                     	;# 
  4053     0219                     	;# 
  4054     021A                     	;# 
  4055     021A                     	;# 
  4056     021B                     	;# 
  4057     021B                     	;# 
  4058     021C                     	;# 
  4059     021C                     	;# 
  4060     021D                     	;# 
  4061     021D                     	;# 
  4062     021E                     	;# 
  4063     021F                     	;# 
  4064     028C                     	;# 
  4065     028C                     	;# 
  4066     028D                     	;# 
  4067     028D                     	;# 
  4068     028E                     	;# 
  4069     028F                     	;# 
  4070     0290                     	;# 
  4071     0291                     	;# 
  4072     0292                     	;# 
  4073     0292                     	;# 
  4074     0293                     	;# 
  4075     0293                     	;# 
  4076     0294                     	;# 
  4077     0295                     	;# 
  4078     0296                     	;# 
  4079     0297                     	;# 
  4080     0298                     	;# 
  4081     0298                     	;# 
  4082     0299                     	;# 
  4083     0299                     	;# 
  4084     029A                     	;# 
  4085     029B                     	;# 
  4086     029C                     	;# 
  4087     029D                     	;# 
  4088     029F                     	;# 
  4089     030C                     	;# 
  4090     030C                     	;# 
  4091     030D                     	;# 
  4092     030E                     	;# 
  4093     030F                     	;# 
  4094     0310                     	;# 
  4095     0310                     	;# 
  4096     0311                     	;# 
  4097     0312                     	;# 
  4098     0313                     	;# 
  4099     0314                     	;# 
  4100     0314                     	;# 
  4101     0315                     	;# 
  4102     0316                     	;# 
  4103     0317                     	;# 
  4104     0318                     	;# 
  4105     0318                     	;# 
  4106     0319                     	;# 
  4107     031A                     	;# 
  4108     031B                     	;# 
  4109     031C                     	;# 
  4110     031C                     	;# 
  4111     031D                     	;# 
  4112     031E                     	;# 
  4113     031F                     	;# 
  4114     038C                     	;# 
  4115     038C                     	;# 
  4116     038D                     	;# 
  4117     038E                     	;# 
  4118     0390                     	;# 
  4119     0390                     	;# 
  4120     0391                     	;# 
  4121     0392                     	;# 
  4122     048C                     	;# 
  4123     048C                     	;# 
  4124     048D                     	;# 
  4125     048E                     	;# 
  4126     048F                     	;# 
  4127     048F                     	;# 
  4128     0490                     	;# 
  4129     0491                     	;# 
  4130     0492                     	;# 
  4131     0492                     	;# 
  4132     0493                     	;# 
  4133     0494                     	;# 
  4134     0495                     	;# 
  4135     0495                     	;# 
  4136     0496                     	;# 
  4137     0497                     	;# 
  4138     0498                     	;# 
  4139     0499                     	;# 
  4140     049A                     	;# 
  4141     049B                     	;# 
  4142     049C                     	;# 
  4143     049D                     	;# 
  4144     050C                     	;# 
  4145     050C                     	;# 
  4146     050D                     	;# 
  4147     050E                     	;# 
  4148     050F                     	;# 
  4149     050F                     	;# 
  4150     0510                     	;# 
  4151     0511                     	;# 
  4152     0512                     	;# 
  4153     0512                     	;# 
  4154     0513                     	;# 
  4155     0514                     	;# 
  4156     0515                     	;# 
  4157     0515                     	;# 
  4158     0516                     	;# 
  4159     0517                     	;# 
  4160     0518                     	;# 
  4161     0519                     	;# 
  4162     051A                     	;# 
  4163     051B                     	;# 
  4164     051C                     	;# 
  4165     051D                     	;# 
  4166     058C                     	;# 
  4167     058C                     	;# 
  4168     058D                     	;# 
  4169     058E                     	;# 
  4170     058F                     	;# 
  4171     058F                     	;# 
  4172     0590                     	;# 
  4173     0591                     	;# 
  4174     0592                     	;# 
  4175     0593                     	;# 
  4176     059C                     	;# 
  4177     059C                     	;# 
  4178     059D                     	;# 
  4179     059D                     	;# 
  4180     059E                     	;# 
  4181     059F                     	;# 
  4182     060C                     	;# 
  4183     060C                     	;# 
  4184     060D                     	;# 
  4185     060D                     	;# 
  4186     060E                     	;# 
  4187     060F                     	;# 
  4188     0610                     	;# 
  4189     0611                     	;# 
  4190     0612                     	;# 
  4191     0613                     	;# 
  4192     0614                     	;# 
  4193     0616                     	;# 
  4194     0616                     	;# 
  4195     0617                     	;# 
  4196     0617                     	;# 
  4197     0618                     	;# 
  4198     0619                     	;# 
  4199     061A                     	;# 
  4200     061B                     	;# 
  4201     061C                     	;# 
  4202     061D                     	;# 
  4203     061E                     	;# 
  4204     068C                     	;# 
  4205     068D                     	;# 
  4206     068E                     	;# 
  4207     068F                     	;# 
  4208     0690                     	;# 
  4209     0691                     	;# 
  4210     0692                     	;# 
  4211     0693                     	;# 
  4212     0694                     	;# 
  4213     070C                     	;# 
  4214     070D                     	;# 
  4215     070E                     	;# 
  4216     070F                     	;# 
  4217     0710                     	;# 
  4218     0711                     	;# 
  4219     0712                     	;# 
  4220     0713                     	;# 
  4221     0714                     	;# 
  4222     0716                     	;# 
  4223     0717                     	;# 
  4224     0718                     	;# 
  4225     0719                     	;# 
  4226     071A                     	;# 
  4227     071B                     	;# 
  4228     071C                     	;# 
  4229     071D                     	;# 
  4230     071E                     	;# 
  4231     0796                     	;# 
  4232     0797                     	;# 
  4233     0798                     	;# 
  4234     0799                     	;# 
  4235     079A                     	;# 
  4236     079B                     	;# 
  4237     079C                     	;# 
  4238     079D                     	;# 
  4239     080C                     	;# 
  4240     080D                     	;# 
  4241     080E                     	;# 
  4242     080F                     	;# 
  4243     0810                     	;# 
  4244     0811                     	;# 
  4245     0813                     	;# 
  4246     0814                     	;# 
  4247     081A                     	;# 
  4248     081A                     	;# 
  4249     081B                     	;# 
  4250     081C                     	;# 
  4251     081C                     	;# 
  4252     081D                     	;# 
  4253     081E                     	;# 
  4254     081F                     	;# 
  4255     088C                     	;# 
  4256     088D                     	;# 
  4257     088E                     	;# 
  4258     088F                     	;# 
  4259     0890                     	;# 
  4260     0891                     	;# 
  4261     0892                     	;# 
  4262     0893                     	;# 
  4263     0895                     	;# 
  4264     0896                     	;# 
  4265     0897                     	;# 
  4266     0898                     	;# 
  4267     0899                     	;# 
  4268     089A                     	;# 
  4269     089B                     	;# 
  4270     090C                     	;# 
  4271     090E                     	;# 
  4272     090F                     	;# 
  4273     091F                     	;# 
  4274     098F                     	;# 
  4275     098F                     	;# 
  4276     0990                     	;# 
  4277     0991                     	;# 
  4278     0992                     	;# 
  4279     0993                     	;# 
  4280     0994                     	;# 
  4281     0995                     	;# 
  4282     0996                     	;# 
  4283     0997                     	;# 
  4284     0A19                     	;# 
  4285     0A19                     	;# 
  4286     0A1A                     	;# 
  4287     0A1A                     	;# 
  4288     0A1B                     	;# 
  4289     0A1B                     	;# 
  4290     0A1B                     	;# 
  4291     0A1C                     	;# 
  4292     0A1C                     	;# 
  4293     0A1D                     	;# 
  4294     0A1D                     	;# 
  4295     0A1E                     	;# 
  4296     0A1E                     	;# 
  4297     0A1F                     	;# 
  4298     0A1F                     	;# 
  4299     0A1F                     	;# 
  4300     1E0F                     	;# 
  4301     1E10                     	;# 
  4302     1E11                     	;# 
  4303     1E12                     	;# 
  4304     1E13                     	;# 
  4305     1E14                     	;# 
  4306     1E15                     	;# 
  4307     1E16                     	;# 
  4308     1E17                     	;# 
  4309     1E18                     	;# 
  4310     1E19                     	;# 
  4311     1E1A                     	;# 
  4312     1E1B                     	;# 
  4313     1E1C                     	;# 
  4314     1E1D                     	;# 
  4315     1E1E                     	;# 
  4316     1E1F                     	;# 
  4317     1E20                     	;# 
  4318     1E21                     	;# 
  4319     1E22                     	;# 
  4320     1E23                     	;# 
  4321     1E24                     	;# 
  4322     1E25                     	;# 
  4323     1E26                     	;# 
  4324     1E27                     	;# 
  4325     1E28                     	;# 
  4326     1E29                     	;# 
  4327     1E2A                     	;# 
  4328     1E2B                     	;# 
  4329     1E2C                     	;# 
  4330     1E2D                     	;# 
  4331     1E2E                     	;# 
  4332     1E2F                     	;# 
  4333     1E30                     	;# 
  4334     1E31                     	;# 
  4335     1E32                     	;# 
  4336     1E33                     	;# 
  4337     1E34                     	;# 
  4338     1E35                     	;# 
  4339     1E36                     	;# 
  4340     1E37                     	;# 
  4341     1E8F                     	;# 
  4342     1E90                     	;# 
  4343     1E91                     	;# 
  4344     1E92                     	;# 
  4345     1E93                     	;# 
  4346     1E94                     	;# 
  4347     1E95                     	;# 
  4348     1E96                     	;# 
  4349     1E97                     	;# 
  4350     1E9C                     	;# 
  4351     1E9D                     	;# 
  4352     1E9E                     	;# 
  4353     1EA1                     	;# 
  4354     1EA2                     	;# 
  4355     1EA3                     	;# 
  4356     1EA4                     	;# 
  4357     1EA5                     	;# 
  4358     1EA9                     	;# 
  4359     1EAA                     	;# 
  4360     1EAB                     	;# 
  4361     1EAC                     	;# 
  4362     1EB1                     	;# 
  4363     1EB2                     	;# 
  4364     1EB3                     	;# 
  4365     1EB8                     	;# 
  4366     1EB9                     	;# 
  4367     1EBA                     	;# 
  4368     1EBB                     	;# 
  4369     1EBC                     	;# 
  4370     1EBD                     	;# 
  4371     1EBE                     	;# 
  4372     1EC3                     	;# 
  4373     1EC5                     	;# 
  4374     1EC6                     	;# 
  4375     1EC7                     	;# 
  4376     1EC8                     	;# 
  4377     1EC9                     	;# 
  4378     1ECA                     	;# 
  4379     1ECB                     	;# 
  4380     1ECC                     	;# 
  4381     1ECD                     	;# 
  4382     1ECE                     	;# 
  4383     1F10                     	;# 
  4384     1F11                     	;# 
  4385     1F12                     	;# 
  4386     1F13                     	;# 
  4387     1F14                     	;# 
  4388     1F15                     	;# 
  4389     1F16                     	;# 
  4390     1F17                     	;# 
  4391     1F18                     	;# 
  4392     1F19                     	;# 
  4393     1F1A                     	;# 
  4394     1F1B                     	;# 
  4395     1F1C                     	;# 
  4396     1F1D                     	;# 
  4397     1F1E                     	;# 
  4398     1F1F                     	;# 
  4399     1F20                     	;# 
  4400     1F21                     	;# 
  4401     1F22                     	;# 
  4402     1F23                     	;# 
  4403     1F24                     	;# 
  4404     1F25                     	;# 
  4405     1F26                     	;# 
  4406     1F27                     	;# 
  4407     1F38                     	;# 
  4408     1F39                     	;# 
  4409     1F3A                     	;# 
  4410     1F3B                     	;# 
  4411     1F3C                     	;# 
  4412     1F3D                     	;# 
  4413     1F3E                     	;# 
  4414     1F3F                     	;# 
  4415     1F43                     	;# 
  4416     1F44                     	;# 
  4417     1F45                     	;# 
  4418     1F46                     	;# 
  4419     1F47                     	;# 
  4420     1F48                     	;# 
  4421     1F49                     	;# 
  4422     1F4A                     	;# 
  4423     1F4E                     	;# 
  4424     1F4F                     	;# 
  4425     1F50                     	;# 
  4426     1F51                     	;# 
  4427     1F52                     	;# 
  4428     1F53                     	;# 
  4429     1F54                     	;# 
  4430     1F55                     	;# 
  4431     1F65                     	;# 
  4432     1F66                     	;# 
  4433     1F67                     	;# 
  4434     1F68                     	;# 
  4435     1F69                     	;# 
  4436     1F6A                     	;# 
  4437     1F6B                     	;# 
  4438     1FE4                     	;# 
  4439     1FE5                     	;# 
  4440     1FE6                     	;# 
  4441     1FE7                     	;# 
  4442     1FE8                     	;# 
  4443     1FE8                     	;# 
  4444     1FE9                     	;# 
  4445     1FEA                     	;# 
  4446     1FEB                     	;# 
  4447     1FED                     	;# 
  4448     1FEE                     	;# 
  4449     1FEF                     	;# 
  4450     0000                     	;# 
  4451     0001                     	;# 
  4452     0002                     	;# 
  4453     0003                     	;# 
  4454     0004                     	;# 
  4455     0005                     	;# 
  4456     0006                     	;# 
  4457     0007                     	;# 
  4458     0008                     	;# 
  4459     0009                     	;# 
  4460     000A                     	;# 
  4461     000B                     	;# 
  4462     000C                     	;# 
  4463     000D                     	;# 
  4464     000E                     	;# 
  4465     0010                     	;# 
  4466     0012                     	;# 
  4467     0013                     	;# 
  4468     0014                     	;# 
  4469     0016                     	;# 
  4470     0018                     	;# 
  4471     0019                     	;# 
  4472     001A                     	;# 
  4473     001C                     	;# 
  4474     008C                     	;# 
  4475     008C                     	;# 
  4476     008D                     	;# 
  4477     008E                     	;# 
  4478     008E                     	;# 
  4479     008F                     	;# 
  4480     0090                     	;# 
  4481     0090                     	;# 
  4482     0091                     	;# 
  4483     0092                     	;# 
  4484     0092                     	;# 
  4485     0093                     	;# 
  4486     0094                     	;# 
  4487     0094                     	;# 
  4488     0095                     	;# 
  4489     0096                     	;# 
  4490     0096                     	;# 
  4491     0097                     	;# 
  4492     0098                     	;# 
  4493     0099                     	;# 
  4494     009A                     	;# 
  4495     009B                     	;# 
  4496     009B                     	;# 
  4497     009C                     	;# 
  4498     009D                     	;# 
  4499     009D                     	;# 
  4500     009E                     	;# 
  4501     009F                     	;# 
  4502     010C                     	;# 
  4503     010C                     	;# 
  4504     010D                     	;# 
  4505     010E                     	;# 
  4506     010F                     	;# 
  4507     010F                     	;# 
  4508     0110                     	;# 
  4509     0111                     	;# 
  4510     0112                     	;# 
  4511     0113                     	;# 
  4512     0114                     	;# 
  4513     0115                     	;# 
  4514     0116                     	;# 
  4515     0117                     	;# 
  4516     0118                     	;# 
  4517     0119                     	;# 
  4518     0119                     	;# 
  4519     0119                     	;# 
  4520     011A                     	;# 
  4521     011A                     	;# 
  4522     011A                     	;# 
  4523     011B                     	;# 
  4524     011B                     	;# 
  4525     011B                     	;# 
  4526     011B                     	;# 
  4527     011B                     	;# 
  4528     011C                     	;# 
  4529     011C                     	;# 
  4530     011C                     	;# 
  4531     011D                     	;# 
  4532     011D                     	;# 
  4533     011D                     	;# 
  4534     011E                     	;# 
  4535     011E                     	;# 
  4536     011E                     	;# 
  4537     011F                     	;# 
  4538     011F                     	;# 
  4539     011F                     	;# 
  4540     011F                     	;# 
  4541     011F                     	;# 
  4542     018C                     	;# 
  4543     018D                     	;# 
  4544     018E                     	;# 
  4545     018F                     	;# 
  4546     0190                     	;# 
  4547     0191                     	;# 
  4548     0192                     	;# 
  4549     0196                     	;# 
  4550     0197                     	;# 
  4551     0198                     	;# 
  4552     0199                     	;# 
  4553     019A                     	;# 
  4554     019B                     	;# 
  4555     019C                     	;# 
  4556     020C                     	;# 
  4557     020D                     	;# 
  4558     020E                     	;# 
  4559     020E                     	;# 
  4560     020F                     	;# 
  4561     020F                     	;# 
  4562     0210                     	;# 
  4563     0210                     	;# 
  4564     0211                     	;# 
  4565     0211                     	;# 
  4566     0212                     	;# 
  4567     0213                     	;# 
  4568     0214                     	;# 
  4569     0214                     	;# 
  4570     0215                     	;# 
  4571     0215                     	;# 
  4572     0216                     	;# 
  4573     0216                     	;# 
  4574     0217                     	;# 
  4575     0217                     	;# 
  4576     0218                     	;# 
  4577     0219                     	;# 
  4578     021A                     	;# 
  4579     021A                     	;# 
  4580     021B                     	;# 
  4581     021B                     	;# 
  4582     021C                     	;# 
  4583     021C                     	;# 
  4584     021D                     	;# 
  4585     021D                     	;# 
  4586     021E                     	;# 
  4587     021F                     	;# 
  4588     028C                     	;# 
  4589     028C                     	;# 
  4590     028D                     	;# 
  4591     028D                     	;# 
  4592     028E                     	;# 
  4593     028F                     	;# 
  4594     0290                     	;# 
  4595     0291                     	;# 
  4596     0292                     	;# 
  4597     0292                     	;# 
  4598     0293                     	;# 
  4599     0293                     	;# 
  4600     0294                     	;# 
  4601     0295                     	;# 
  4602     0296                     	;# 
  4603     0297                     	;# 
  4604     0298                     	;# 
  4605     0298                     	;# 
  4606     0299                     	;# 
  4607     0299                     	;# 
  4608     029A                     	;# 
  4609     029B                     	;# 
  4610     029C                     	;# 
  4611     029D                     	;# 
  4612     029F                     	;# 
  4613     030C                     	;# 
  4614     030C                     	;# 
  4615     030D                     	;# 
  4616     030E                     	;# 
  4617     030F                     	;# 
  4618     0310                     	;# 
  4619     0310                     	;# 
  4620     0311                     	;# 
  4621     0312                     	;# 
  4622     0313                     	;# 
  4623     0314                     	;# 
  4624     0314                     	;# 
  4625     0315                     	;# 
  4626     0316                     	;# 
  4627     0317                     	;# 
  4628     0318                     	;# 
  4629     0318                     	;# 
  4630     0319                     	;# 
  4631     031A                     	;# 
  4632     031B                     	;# 
  4633     031C                     	;# 
  4634     031C                     	;# 
  4635     031D                     	;# 
  4636     031E                     	;# 
  4637     031F                     	;# 
  4638     038C                     	;# 
  4639     038C                     	;# 
  4640     038D                     	;# 
  4641     038E                     	;# 
  4642     0390                     	;# 
  4643     0390                     	;# 
  4644     0391                     	;# 
  4645     0392                     	;# 
  4646     048C                     	;# 
  4647     048C                     	;# 
  4648     048D                     	;# 
  4649     048E                     	;# 
  4650     048F                     	;# 
  4651     048F                     	;# 
  4652     0490                     	;# 
  4653     0491                     	;# 
  4654     0492                     	;# 
  4655     0492                     	;# 
  4656     0493                     	;# 
  4657     0494                     	;# 
  4658     0495                     	;# 
  4659     0495                     	;# 
  4660     0496                     	;# 
  4661     0497                     	;# 
  4662     0498                     	;# 
  4663     0499                     	;# 
  4664     049A                     	;# 
  4665     049B                     	;# 
  4666     049C                     	;# 
  4667     049D                     	;# 
  4668     050C                     	;# 
  4669     050C                     	;# 
  4670     050D                     	;# 
  4671     050E                     	;# 
  4672     050F                     	;# 
  4673     050F                     	;# 
  4674     0510                     	;# 
  4675     0511                     	;# 
  4676     0512                     	;# 
  4677     0512                     	;# 
  4678     0513                     	;# 
  4679     0514                     	;# 
  4680     0515                     	;# 
  4681     0515                     	;# 
  4682     0516                     	;# 
  4683     0517                     	;# 
  4684     0518                     	;# 
  4685     0519                     	;# 
  4686     051A                     	;# 
  4687     051B                     	;# 
  4688     051C                     	;# 
  4689     051D                     	;# 
  4690     058C                     	;# 
  4691     058C                     	;# 
  4692     058D                     	;# 
  4693     058E                     	;# 
  4694     058F                     	;# 
  4695     058F                     	;# 
  4696     0590                     	;# 
  4697     0591                     	;# 
  4698     0592                     	;# 
  4699     0593                     	;# 
  4700     059C                     	;# 
  4701     059C                     	;# 
  4702     059D                     	;# 
  4703     059D                     	;# 
  4704     059E                     	;# 
  4705     059F                     	;# 
  4706     060C                     	;# 
  4707     060C                     	;# 
  4708     060D                     	;# 
  4709     060D                     	;# 
  4710     060E                     	;# 
  4711     060F                     	;# 
  4712     0610                     	;# 
  4713     0611                     	;# 
  4714     0612                     	;# 
  4715     0613                     	;# 
  4716     0614                     	;# 
  4717     0616                     	;# 
  4718     0616                     	;# 
  4719     0617                     	;# 
  4720     0617                     	;# 
  4721     0618                     	;# 
  4722     0619                     	;# 
  4723     061A                     	;# 
  4724     061B                     	;# 
  4725     061C                     	;# 
  4726     061D                     	;# 
  4727     061E                     	;# 
  4728     068C                     	;# 
  4729     068D                     	;# 
  4730     068E                     	;# 
  4731     068F                     	;# 
  4732     0690                     	;# 
  4733     0691                     	;# 
  4734     0692                     	;# 
  4735     0693                     	;# 
  4736     0694                     	;# 
  4737     070C                     	;# 
  4738     070D                     	;# 
  4739     070E                     	;# 
  4740     070F                     	;# 
  4741     0710                     	;# 
  4742     0711                     	;# 
  4743     0712                     	;# 
  4744     0713                     	;# 
  4745     0714                     	;# 
  4746     0716                     	;# 
  4747     0717                     	;# 
  4748     0718                     	;# 
  4749     0719                     	;# 
  4750     071A                     	;# 
  4751     071B                     	;# 
  4752     071C                     	;# 
  4753     071D                     	;# 
  4754     071E                     	;# 
  4755     0796                     	;# 
  4756     0797                     	;# 
  4757     0798                     	;# 
  4758     0799                     	;# 
  4759     079A                     	;# 
  4760     079B                     	;# 
  4761     079C                     	;# 
  4762     079D                     	;# 
  4763     080C                     	;# 
  4764     080D                     	;# 
  4765     080E                     	;# 
  4766     080F                     	;# 
  4767     0810                     	;# 
  4768     0811                     	;# 
  4769     0813                     	;# 
  4770     0814                     	;# 
  4771     081A                     	;# 
  4772     081A                     	;# 
  4773     081B                     	;# 
  4774     081C                     	;# 
  4775     081C                     	;# 
  4776     081D                     	;# 
  4777     081E                     	;# 
  4778     081F                     	;# 
  4779     088C                     	;# 
  4780     088D                     	;# 
  4781     088E                     	;# 
  4782     088F                     	;# 
  4783     0890                     	;# 
  4784     0891                     	;# 
  4785     0892                     	;# 
  4786     0893                     	;# 
  4787     0895                     	;# 
  4788     0896                     	;# 
  4789     0897                     	;# 
  4790     0898                     	;# 
  4791     0899                     	;# 
  4792     089A                     	;# 
  4793     089B                     	;# 
  4794     090C                     	;# 
  4795     090E                     	;# 
  4796     090F                     	;# 
  4797     091F                     	;# 
  4798     098F                     	;# 
  4799     098F                     	;# 
  4800     0990                     	;# 
  4801     0991                     	;# 
  4802     0992                     	;# 
  4803     0993                     	;# 
  4804     0994                     	;# 
  4805     0995                     	;# 
  4806     0996                     	;# 
  4807     0997                     	;# 
  4808     0A19                     	;# 
  4809     0A19                     	;# 
  4810     0A1A                     	;# 
  4811     0A1A                     	;# 
  4812     0A1B                     	;# 
  4813     0A1B                     	;# 
  4814     0A1B                     	;# 
  4815     0A1C                     	;# 
  4816     0A1C                     	;# 
  4817     0A1D                     	;# 
  4818     0A1D                     	;# 
  4819     0A1E                     	;# 
  4820     0A1E                     	;# 
  4821     0A1F                     	;# 
  4822     0A1F                     	;# 
  4823     0A1F                     	;# 
  4824     1E0F                     	;# 
  4825     1E10                     	;# 
  4826     1E11                     	;# 
  4827     1E12                     	;# 
  4828     1E13                     	;# 
  4829     1E14                     	;# 
  4830     1E15                     	;# 
  4831     1E16                     	;# 
  4832     1E17                     	;# 
  4833     1E18                     	;# 
  4834     1E19                     	;# 
  4835     1E1A                     	;# 
  4836     1E1B                     	;# 
  4837     1E1C                     	;# 
  4838     1E1D                     	;# 
  4839     1E1E                     	;# 
  4840     1E1F                     	;# 
  4841     1E20                     	;# 
  4842     1E21                     	;# 
  4843     1E22                     	;# 
  4844     1E23                     	;# 
  4845     1E24                     	;# 
  4846     1E25                     	;# 
  4847     1E26                     	;# 
  4848     1E27                     	;# 
  4849     1E28                     	;# 
  4850     1E29                     	;# 
  4851     1E2A                     	;# 
  4852     1E2B                     	;# 
  4853     1E2C                     	;# 
  4854     1E2D                     	;# 
  4855     1E2E                     	;# 
  4856     1E2F                     	;# 
  4857     1E30                     	;# 
  4858     1E31                     	;# 
  4859     1E32                     	;# 
  4860     1E33                     	;# 
  4861     1E34                     	;# 
  4862     1E35                     	;# 
  4863     1E36                     	;# 
  4864     1E37                     	;# 
  4865     1E8F                     	;# 
  4866     1E90                     	;# 
  4867     1E91                     	;# 
  4868     1E92                     	;# 
  4869     1E93                     	;# 
  4870     1E94                     	;# 
  4871     1E95                     	;# 
  4872     1E96                     	;# 
  4873     1E97                     	;# 
  4874     1E9C                     	;# 
  4875     1E9D                     	;# 
  4876     1E9E                     	;# 
  4877     1EA1                     	;# 
  4878     1EA2                     	;# 
  4879     1EA3                     	;# 
  4880     1EA4                     	;# 
  4881     1EA5                     	;# 
  4882     1EA9                     	;# 
  4883     1EAA                     	;# 
  4884     1EAB                     	;# 
  4885     1EAC                     	;# 
  4886     1EB1                     	;# 
  4887     1EB2                     	;# 
  4888     1EB3                     	;# 
  4889     1EB8                     	;# 
  4890     1EB9                     	;# 
  4891     1EBA                     	;# 
  4892     1EBB                     	;# 
  4893     1EBC                     	;# 
  4894     1EBD                     	;# 
  4895     1EBE                     	;# 
  4896     1EC3                     	;# 
  4897     1EC5                     	;# 
  4898     1EC6                     	;# 
  4899     1EC7                     	;# 
  4900     1EC8                     	;# 
  4901     1EC9                     	;# 
  4902     1ECA                     	;# 
  4903     1ECB                     	;# 
  4904     1ECC                     	;# 
  4905     1ECD                     	;# 
  4906     1ECE                     	;# 
  4907     1F10                     	;# 
  4908     1F11                     	;# 
  4909     1F12                     	;# 
  4910     1F13                     	;# 
  4911     1F14                     	;# 
  4912     1F15                     	;# 
  4913     1F16                     	;# 
  4914     1F17                     	;# 
  4915     1F18                     	;# 
  4916     1F19                     	;# 
  4917     1F1A                     	;# 
  4918     1F1B                     	;# 
  4919     1F1C                     	;# 
  4920     1F1D                     	;# 
  4921     1F1E                     	;# 
  4922     1F1F                     	;# 
  4923     1F20                     	;# 
  4924     1F21                     	;# 
  4925     1F22                     	;# 
  4926     1F23                     	;# 
  4927     1F24                     	;# 
  4928     1F25                     	;# 
  4929     1F26                     	;# 
  4930     1F27                     	;# 
  4931     1F38                     	;# 
  4932     1F39                     	;# 
  4933     1F3A                     	;# 
  4934     1F3B                     	;# 
  4935     1F3C                     	;# 
  4936     1F3D                     	;# 
  4937     1F3E                     	;# 
  4938     1F3F                     	;# 
  4939     1F43                     	;# 
  4940     1F44                     	;# 
  4941     1F45                     	;# 
  4942     1F46                     	;# 
  4943     1F47                     	;# 
  4944     1F48                     	;# 
  4945     1F49                     	;# 
  4946     1F4A                     	;# 
  4947     1F4E                     	;# 
  4948     1F4F                     	;# 
  4949     1F50                     	;# 
  4950     1F51                     	;# 
  4951     1F52                     	;# 
  4952     1F53                     	;# 
  4953     1F54                     	;# 
  4954     1F55                     	;# 
  4955     1F65                     	;# 
  4956     1F66                     	;# 
  4957     1F67                     	;# 
  4958     1F68                     	;# 
  4959     1F69                     	;# 
  4960     1F6A                     	;# 
  4961     1F6B                     	;# 
  4962     1FE4                     	;# 
  4963     1FE5                     	;# 
  4964     1FE6                     	;# 
  4965     1FE7                     	;# 
  4966     1FE8                     	;# 
  4967     1FE8                     	;# 
  4968     1FE9                     	;# 
  4969     1FEA                     	;# 
  4970     1FEB                     	;# 
  4971     1FED                     	;# 
  4972     1FEE                     	;# 
  4973     1FEF                     	;# 
  4974     0000                     	;# 
  4975     0001                     	;# 
  4976     0002                     	;# 
  4977     0003                     	;# 
  4978     0004                     	;# 
  4979     0005                     	;# 
  4980     0006                     	;# 
  4981     0007                     	;# 
  4982     0008                     	;# 
  4983     0009                     	;# 
  4984     000A                     	;# 
  4985     000B                     	;# 
  4986     000C                     	;# 
  4987     000D                     	;# 
  4988     000E                     	;# 
  4989     0010                     	;# 
  4990     0012                     	;# 
  4991     0013                     	;# 
  4992     0014                     	;# 
  4993     0016                     	;# 
  4994     0018                     	;# 
  4995     0019                     	;# 
  4996     001A                     	;# 
  4997     001C                     	;# 
  4998     008C                     	;# 
  4999     008C                     	;# 
  5000     008D                     	;# 
  5001     008E                     	;# 
  5002     008E                     	;# 
  5003     008F                     	;# 
  5004     0090                     	;# 
  5005     0090                     	;# 
  5006     0091                     	;# 
  5007     0092                     	;# 
  5008     0092                     	;# 
  5009     0093                     	;# 
  5010     0094                     	;# 
  5011     0094                     	;# 
  5012     0095                     	;# 
  5013     0096                     	;# 
  5014     0096                     	;# 
  5015     0097                     	;# 
  5016     0098                     	;# 
  5017     0099                     	;# 
  5018     009A                     	;# 
  5019     009B                     	;# 
  5020     009B                     	;# 
  5021     009C                     	;# 
  5022     009D                     	;# 
  5023     009D                     	;# 
  5024     009E                     	;# 
  5025     009F                     	;# 
  5026     010C                     	;# 
  5027     010C                     	;# 
  5028     010D                     	;# 
  5029     010E                     	;# 
  5030     010F                     	;# 
  5031     010F                     	;# 
  5032     0110                     	;# 
  5033     0111                     	;# 
  5034     0112                     	;# 
  5035     0113                     	;# 
  5036     0114                     	;# 
  5037     0115                     	;# 
  5038     0116                     	;# 
  5039     0117                     	;# 
  5040     0118                     	;# 
  5041     0119                     	;# 
  5042     0119                     	;# 
  5043     0119                     	;# 
  5044     011A                     	;# 
  5045     011A                     	;# 
  5046     011A                     	;# 
  5047     011B                     	;# 
  5048     011B                     	;# 
  5049     011B                     	;# 
  5050     011B                     	;# 
  5051     011B                     	;# 
  5052     011C                     	;# 
  5053     011C                     	;# 
  5054     011C                     	;# 
  5055     011D                     	;# 
  5056     011D                     	;# 
  5057     011D                     	;# 
  5058     011E                     	;# 
  5059     011E                     	;# 
  5060     011E                     	;# 
  5061     011F                     	;# 
  5062     011F                     	;# 
  5063     011F                     	;# 
  5064     011F                     	;# 
  5065     011F                     	;# 
  5066     018C                     	;# 
  5067     018D                     	;# 
  5068     018E                     	;# 
  5069     018F                     	;# 
  5070     0190                     	;# 
  5071     0191                     	;# 
  5072     0192                     	;# 
  5073     0196                     	;# 
  5074     0197                     	;# 
  5075     0198                     	;# 
  5076     0199                     	;# 
  5077     019A                     	;# 
  5078     019B                     	;# 
  5079     019C                     	;# 
  5080     020C                     	;# 
  5081     020D                     	;# 
  5082     020E                     	;# 
  5083     020E                     	;# 
  5084     020F                     	;# 
  5085     020F                     	;# 
  5086     0210                     	;# 
  5087     0210                     	;# 
  5088     0211                     	;# 
  5089     0211                     	;# 
  5090     0212                     	;# 
  5091     0213                     	;# 
  5092     0214                     	;# 
  5093     0214                     	;# 
  5094     0215                     	;# 
  5095     0215                     	;# 
  5096     0216                     	;# 
  5097     0216                     	;# 
  5098     0217                     	;# 
  5099     0217                     	;# 
  5100     0218                     	;# 
  5101     0219                     	;# 
  5102     021A                     	;# 
  5103     021A                     	;# 
  5104     021B                     	;# 
  5105     021B                     	;# 
  5106     021C                     	;# 
  5107     021C                     	;# 
  5108     021D                     	;# 
  5109     021D                     	;# 
  5110     021E                     	;# 
  5111     021F                     	;# 
  5112     028C                     	;# 
  5113     028C                     	;# 
  5114     028D                     	;# 
  5115     028D                     	;# 
  5116     028E                     	;# 
  5117     028F                     	;# 
  5118     0290                     	;# 
  5119     0291                     	;# 
  5120     0292                     	;# 
  5121     0292                     	;# 
  5122     0293                     	;# 
  5123     0293                     	;# 
  5124     0294                     	;# 
  5125     0295                     	;# 
  5126     0296                     	;# 
  5127     0297                     	;# 
  5128     0298                     	;# 
  5129     0298                     	;# 
  5130     0299                     	;# 
  5131     0299                     	;# 
  5132     029A                     	;# 
  5133     029B                     	;# 
  5134     029C                     	;# 
  5135     029D                     	;# 
  5136     029F                     	;# 
  5137     030C                     	;# 
  5138     030C                     	;# 
  5139     030D                     	;# 
  5140     030E                     	;# 
  5141     030F                     	;# 
  5142     0310                     	;# 
  5143     0310                     	;# 
  5144     0311                     	;# 
  5145     0312                     	;# 
  5146     0313                     	;# 
  5147     0314                     	;# 
  5148     0314                     	;# 
  5149     0315                     	;# 
  5150     0316                     	;# 
  5151     0317                     	;# 
  5152     0318                     	;# 
  5153     0318                     	;# 
  5154     0319                     	;# 
  5155     031A                     	;# 
  5156     031B                     	;# 
  5157     031C                     	;# 
  5158     031C                     	;# 
  5159     031D                     	;# 
  5160     031E                     	;# 
  5161     031F                     	;# 
  5162     038C                     	;# 
  5163     038C                     	;# 
  5164     038D                     	;# 
  5165     038E                     	;# 
  5166     0390                     	;# 
  5167     0390                     	;# 
  5168     0391                     	;# 
  5169     0392                     	;# 
  5170     048C                     	;# 
  5171     048C                     	;# 
  5172     048D                     	;# 
  5173     048E                     	;# 
  5174     048F                     	;# 
  5175     048F                     	;# 
  5176     0490                     	;# 
  5177     0491                     	;# 
  5178     0492                     	;# 
  5179     0492                     	;# 
  5180     0493                     	;# 
  5181     0494                     	;# 
  5182     0495                     	;# 
  5183     0495                     	;# 
  5184     0496                     	;# 
  5185     0497                     	;# 
  5186     0498                     	;# 
  5187     0499                     	;# 
  5188     049A                     	;# 
  5189     049B                     	;# 
  5190     049C                     	;# 
  5191     049D                     	;# 
  5192     050C                     	;# 
  5193     050C                     	;# 
  5194     050D                     	;# 
  5195     050E                     	;# 
  5196     050F                     	;# 
  5197     050F                     	;# 
  5198     0510                     	;# 
  5199     0511                     	;# 
  5200     0512                     	;# 
  5201     0512                     	;# 
  5202     0513                     	;# 
  5203     0514                     	;# 
  5204     0515                     	;# 
  5205     0515                     	;# 
  5206     0516                     	;# 
  5207     0517                     	;# 
  5208     0518                     	;# 
  5209     0519                     	;# 
  5210     051A                     	;# 
  5211     051B                     	;# 
  5212     051C                     	;# 
  5213     051D                     	;# 
  5214     058C                     	;# 
  5215     058C                     	;# 
  5216     058D                     	;# 
  5217     058E                     	;# 
  5218     058F                     	;# 
  5219     058F                     	;# 
  5220     0590                     	;# 
  5221     0591                     	;# 
  5222     0592                     	;# 
  5223     0593                     	;# 
  5224     059C                     	;# 
  5225     059C                     	;# 
  5226     059D                     	;# 
  5227     059D                     	;# 
  5228     059E                     	;# 
  5229     059F                     	;# 
  5230     060C                     	;# 
  5231     060C                     	;# 
  5232     060D                     	;# 
  5233     060D                     	;# 
  5234     060E                     	;# 
  5235     060F                     	;# 
  5236     0610                     	;# 
  5237     0611                     	;# 
  5238     0612                     	;# 
  5239     0613                     	;# 
  5240     0614                     	;# 
  5241     0616                     	;# 
  5242     0616                     	;# 
  5243     0617                     	;# 
  5244     0617                     	;# 
  5245     0618                     	;# 
  5246     0619                     	;# 
  5247     061A                     	;# 
  5248     061B                     	;# 
  5249     061C                     	;# 
  5250     061D                     	;# 
  5251     061E                     	;# 
  5252     068C                     	;# 
  5253     068D                     	;# 
  5254     068E                     	;# 
  5255     068F                     	;# 
  5256     0690                     	;# 
  5257     0691                     	;# 
  5258     0692                     	;# 
  5259     0693                     	;# 
  5260     0694                     	;# 
  5261     070C                     	;# 
  5262     070D                     	;# 
  5263     070E                     	;# 
  5264     070F                     	;# 
  5265     0710                     	;# 
  5266     0711                     	;# 
  5267     0712                     	;# 
  5268     0713                     	;# 
  5269     0714                     	;# 
  5270     0716                     	;# 
  5271     0717                     	;# 
  5272     0718                     	;# 
  5273     0719                     	;# 
  5274     071A                     	;# 
  5275     071B                     	;# 
  5276     071C                     	;# 
  5277     071D                     	;# 
  5278     071E                     	;# 
  5279     0796                     	;# 
  5280     0797                     	;# 
  5281     0798                     	;# 
  5282     0799                     	;# 
  5283     079A                     	;# 
  5284     079B                     	;# 
  5285     079C                     	;# 
  5286     079D                     	;# 
  5287     080C                     	;# 
  5288     080D                     	;# 
  5289     080E                     	;# 
  5290     080F                     	;# 
  5291     0810                     	;# 
  5292     0811                     	;# 
  5293     0813                     	;# 
  5294     0814                     	;# 
  5295     081A                     	;# 
  5296     081A                     	;# 
  5297     081B                     	;# 
  5298     081C                     	;# 
  5299     081C                     	;# 
  5300     081D                     	;# 
  5301     081E                     	;# 
  5302     081F                     	;# 
  5303     088C                     	;# 
  5304     088D                     	;# 
  5305     088E                     	;# 
  5306     088F                     	;# 
  5307     0890                     	;# 
  5308     0891                     	;# 
  5309     0892                     	;# 
  5310     0893                     	;# 
  5311     0895                     	;# 
  5312     0896                     	;# 
  5313     0897                     	;# 
  5314     0898                     	;# 
  5315     0899                     	;# 
  5316     089A                     	;# 
  5317     089B                     	;# 
  5318     090C                     	;# 
  5319     090E                     	;# 
  5320     090F                     	;# 
  5321     091F                     	;# 
  5322     098F                     	;# 
  5323     098F                     	;# 
  5324     0990                     	;# 
  5325     0991                     	;# 
  5326     0992                     	;# 
  5327     0993                     	;# 
  5328     0994                     	;# 
  5329     0995                     	;# 
  5330     0996                     	;# 
  5331     0997                     	;# 
  5332     0A19                     	;# 
  5333     0A19                     	;# 
  5334     0A1A                     	;# 
  5335     0A1A                     	;# 
  5336     0A1B                     	;# 
  5337     0A1B                     	;# 
  5338     0A1B                     	;# 
  5339     0A1C                     	;# 
  5340     0A1C                     	;# 
  5341     0A1D                     	;# 
  5342     0A1D                     	;# 
  5343     0A1E                     	;# 
  5344     0A1E                     	;# 
  5345     0A1F                     	;# 
  5346     0A1F                     	;# 
  5347     0A1F                     	;# 
  5348     1E0F                     	;# 
  5349     1E10                     	;# 
  5350     1E11                     	;# 
  5351     1E12                     	;# 
  5352     1E13                     	;# 
  5353     1E14                     	;# 
  5354     1E15                     	;# 
  5355     1E16                     	;# 
  5356     1E17                     	;# 
  5357     1E18                     	;# 
  5358     1E19                     	;# 
  5359     1E1A                     	;# 
  5360     1E1B                     	;# 
  5361     1E1C                     	;# 
  5362     1E1D                     	;# 
  5363     1E1E                     	;# 
  5364     1E1F                     	;# 
  5365     1E20                     	;# 
  5366     1E21                     	;# 
  5367     1E22                     	;# 
  5368     1E23                     	;# 
  5369     1E24                     	;# 
  5370     1E25                     	;# 
  5371     1E26                     	;# 
  5372     1E27                     	;# 
  5373     1E28                     	;# 
  5374     1E29                     	;# 
  5375     1E2A                     	;# 
  5376     1E2B                     	;# 
  5377     1E2C                     	;# 
  5378     1E2D                     	;# 
  5379     1E2E                     	;# 
  5380     1E2F                     	;# 
  5381     1E30                     	;# 
  5382     1E31                     	;# 
  5383     1E32                     	;# 
  5384     1E33                     	;# 
  5385     1E34                     	;# 
  5386     1E35                     	;# 
  5387     1E36                     	;# 
  5388     1E37                     	;# 
  5389     1E8F                     	;# 
  5390     1E90                     	;# 
  5391     1E91                     	;# 
  5392     1E92                     	;# 
  5393     1E93                     	;# 
  5394     1E94                     	;# 
  5395     1E95                     	;# 
  5396     1E96                     	;# 
  5397     1E97                     	;# 
  5398     1E9C                     	;# 
  5399     1E9D                     	;# 
  5400     1E9E                     	;# 
  5401     1EA1                     	;# 
  5402     1EA2                     	;# 
  5403     1EA3                     	;# 
  5404     1EA4                     	;# 
  5405     1EA5                     	;# 
  5406     1EA9                     	;# 
  5407     1EAA                     	;# 
  5408     1EAB                     	;# 
  5409     1EAC                     	;# 
  5410     1EB1                     	;# 
  5411     1EB2                     	;# 
  5412     1EB3                     	;# 
  5413     1EB8                     	;# 
  5414     1EB9                     	;# 
  5415     1EBA                     	;# 
  5416     1EBB                     	;# 
  5417     1EBC                     	;# 
  5418     1EBD                     	;# 
  5419     1EBE                     	;# 
  5420     1EC3                     	;# 
  5421     1EC5                     	;# 
  5422     1EC6                     	;# 
  5423     1EC7                     	;# 
  5424     1EC8                     	;# 
  5425     1EC9                     	;# 
  5426     1ECA                     	;# 
  5427     1ECB                     	;# 
  5428     1ECC                     	;# 
  5429     1ECD                     	;# 
  5430     1ECE                     	;# 
  5431     1F10                     	;# 
  5432     1F11                     	;# 
  5433     1F12                     	;# 
  5434     1F13                     	;# 
  5435     1F14                     	;# 
  5436     1F15                     	;# 
  5437     1F16                     	;# 
  5438     1F17                     	;# 
  5439     1F18                     	;# 
  5440     1F19                     	;# 
  5441     1F1A                     	;# 
  5442     1F1B                     	;# 
  5443     1F1C                     	;# 
  5444     1F1D                     	;# 
  5445     1F1E                     	;# 
  5446     1F1F                     	;# 
  5447     1F20                     	;# 
  5448     1F21                     	;# 
  5449     1F22                     	;# 
  5450     1F23                     	;# 
  5451     1F24                     	;# 
  5452     1F25                     	;# 
  5453     1F26                     	;# 
  5454     1F27                     	;# 
  5455     1F38                     	;# 
  5456     1F39                     	;# 
  5457     1F3A                     	;# 
  5458     1F3B                     	;# 
  5459     1F3C                     	;# 
  5460     1F3D                     	;# 
  5461     1F3E                     	;# 
  5462     1F3F                     	;# 
  5463     1F43                     	;# 
  5464     1F44                     	;# 
  5465     1F45                     	;# 
  5466     1F46                     	;# 
  5467     1F47                     	;# 
  5468     1F48                     	;# 
  5469     1F49                     	;# 
  5470     1F4A                     	;# 
  5471     1F4E                     	;# 
  5472     1F4F                     	;# 
  5473     1F50                     	;# 
  5474     1F51                     	;# 
  5475     1F52                     	;# 
  5476     1F53                     	;# 
  5477     1F54                     	;# 
  5478     1F55                     	;# 
  5479     1F65                     	;# 
  5480     1F66                     	;# 
  5481     1F67                     	;# 
  5482     1F68                     	;# 
  5483     1F69                     	;# 
  5484     1F6A                     	;# 
  5485     1F6B                     	;# 
  5486     1FE4                     	;# 
  5487     1FE5                     	;# 
  5488     1FE6                     	;# 
  5489     1FE7                     	;# 
  5490     1FE8                     	;# 
  5491     1FE8                     	;# 
  5492     1FE9                     	;# 
  5493     1FEA                     	;# 
  5494     1FEB                     	;# 
  5495     1FED                     	;# 
  5496     1FEE                     	;# 
  5497     1FEF                     	;# 
  5498     0000                     	;# 
  5499     0001                     	;# 
  5500     0002                     	;# 
  5501     0003                     	;# 
  5502     0004                     	;# 
  5503     0005                     	;# 
  5504     0006                     	;# 
  5505     0007                     	;# 
  5506     0008                     	;# 
  5507     0009                     	;# 
  5508     000A                     	;# 
  5509     000B                     	;# 
  5510     000C                     	;# 
  5511     000D                     	;# 
  5512     000E                     	;# 
  5513     0010                     	;# 
  5514     0012                     	;# 
  5515     0013                     	;# 
  5516     0014                     	;# 
  5517     0016                     	;# 
  5518     0018                     	;# 
  5519     0019                     	;# 
  5520     001A                     	;# 
  5521     001C                     	;# 
  5522     008C                     	;# 
  5523     008C                     	;# 
  5524     008D                     	;# 
  5525     008E                     	;# 
  5526     008E                     	;# 
  5527     008F                     	;# 
  5528     0090                     	;# 
  5529     0090                     	;# 
  5530     0091                     	;# 
  5531     0092                     	;# 
  5532     0092                     	;# 
  5533     0093                     	;# 
  5534     0094                     	;# 
  5535     0094                     	;# 
  5536     0095                     	;# 
  5537     0096                     	;# 
  5538     0096                     	;# 
  5539     0097                     	;# 
  5540     0098                     	;# 
  5541     0099                     	;# 
  5542     009A                     	;# 
  5543     009B                     	;# 
  5544     009B                     	;# 
  5545     009C                     	;# 
  5546     009D                     	;# 
  5547     009D                     	;# 
  5548     009E                     	;# 
  5549     009F                     	;# 
  5550     010C                     	;# 
  5551     010C                     	;# 
  5552     010D                     	;# 
  5553     010E                     	;# 
  5554     010F                     	;# 
  5555     010F                     	;# 
  5556     0110                     	;# 
  5557     0111                     	;# 
  5558     0112                     	;# 
  5559     0113                     	;# 
  5560     0114                     	;# 
  5561     0115                     	;# 
  5562     0116                     	;# 
  5563     0117                     	;# 
  5564     0118                     	;# 
  5565     0119                     	;# 
  5566     0119                     	;# 
  5567     0119                     	;# 
  5568     011A                     	;# 
  5569     011A                     	;# 
  5570     011A                     	;# 
  5571     011B                     	;# 
  5572     011B                     	;# 
  5573     011B                     	;# 
  5574     011B                     	;# 
  5575     011B                     	;# 
  5576     011C                     	;# 
  5577     011C                     	;# 
  5578     011C                     	;# 
  5579     011D                     	;# 
  5580     011D                     	;# 
  5581     011D                     	;# 
  5582     011E                     	;# 
  5583     011E                     	;# 
  5584     011E                     	;# 
  5585     011F                     	;# 
  5586     011F                     	;# 
  5587     011F                     	;# 
  5588     011F                     	;# 
  5589     011F                     	;# 
  5590     018C                     	;# 
  5591     018D                     	;# 
  5592     018E                     	;# 
  5593     018F                     	;# 
  5594     0190                     	;# 
  5595     0191                     	;# 
  5596     0192                     	;# 
  5597     0196                     	;# 
  5598     0197                     	;# 
  5599     0198                     	;# 
  5600     0199                     	;# 
  5601     019A                     	;# 
  5602     019B                     	;# 
  5603     019C                     	;# 
  5604     020C                     	;# 
  5605     020D                     	;# 
  5606     020E                     	;# 
  5607     020E                     	;# 
  5608     020F                     	;# 
  5609     020F                     	;# 
  5610     0210                     	;# 
  5611     0210                     	;# 
  5612     0211                     	;# 
  5613     0211                     	;# 
  5614     0212                     	;# 
  5615     0213                     	;# 
  5616     0214                     	;# 
  5617     0214                     	;# 
  5618     0215                     	;# 
  5619     0215                     	;# 
  5620     0216                     	;# 
  5621     0216                     	;# 
  5622     0217                     	;# 
  5623     0217                     	;# 
  5624     0218                     	;# 
  5625     0219                     	;# 
  5626     021A                     	;# 
  5627     021A                     	;# 
  5628     021B                     	;# 
  5629     021B                     	;# 
  5630     021C                     	;# 
  5631     021C                     	;# 
  5632     021D                     	;# 
  5633     021D                     	;# 
  5634     021E                     	;# 
  5635     021F                     	;# 
  5636     028C                     	;# 
  5637     028C                     	;# 
  5638     028D                     	;# 
  5639     028D                     	;# 
  5640     028E                     	;# 
  5641     028F                     	;# 
  5642     0290                     	;# 
  5643     0291                     	;# 
  5644     0292                     	;# 
  5645     0292                     	;# 
  5646     0293                     	;# 
  5647     0293                     	;# 
  5648     0294                     	;# 
  5649     0295                     	;# 
  5650     0296                     	;# 
  5651     0297                     	;# 
  5652     0298                     	;# 
  5653     0298                     	;# 
  5654     0299                     	;# 
  5655     0299                     	;# 
  5656     029A                     	;# 
  5657     029B                     	;# 
  5658     029C                     	;# 
  5659     029D                     	;# 
  5660     029F                     	;# 
  5661     030C                     	;# 
  5662     030C                     	;# 
  5663     030D                     	;# 
  5664     030E                     	;# 
  5665     030F                     	;# 
  5666     0310                     	;# 
  5667     0310                     	;# 
  5668     0311                     	;# 
  5669     0312                     	;# 
  5670     0313                     	;# 
  5671     0314                     	;# 
  5672     0314                     	;# 
  5673     0315                     	;# 
  5674     0316                     	;# 
  5675     0317                     	;# 
  5676     0318                     	;# 
  5677     0318                     	;# 
  5678     0319                     	;# 
  5679     031A                     	;# 
  5680     031B                     	;# 
  5681     031C                     	;# 
  5682     031C                     	;# 
  5683     031D                     	;# 
  5684     031E                     	;# 
  5685     031F                     	;# 
  5686     038C                     	;# 
  5687     038C                     	;# 
  5688     038D                     	;# 
  5689     038E                     	;# 
  5690     0390                     	;# 
  5691     0390                     	;# 
  5692     0391                     	;# 
  5693     0392                     	;# 
  5694     048C                     	;# 
  5695     048C                     	;# 
  5696     048D                     	;# 
  5697     048E                     	;# 
  5698     048F                     	;# 
  5699     048F                     	;# 
  5700     0490                     	;# 
  5701     0491                     	;# 
  5702     0492                     	;# 
  5703     0492                     	;# 
  5704     0493                     	;# 
  5705     0494                     	;# 
  5706     0495                     	;# 
  5707     0495                     	;# 
  5708     0496                     	;# 
  5709     0497                     	;# 
  5710     0498                     	;# 
  5711     0499                     	;# 
  5712     049A                     	;# 
  5713     049B                     	;# 
  5714     049C                     	;# 
  5715     049D                     	;# 
  5716     050C                     	;# 
  5717     050C                     	;# 
  5718     050D                     	;# 
  5719     050E                     	;# 
  5720     050F                     	;# 
  5721     050F                     	;# 
  5722     0510                     	;# 
  5723     0511                     	;# 
  5724     0512                     	;# 
  5725     0512                     	;# 
  5726     0513                     	;# 
  5727     0514                     	;# 
  5728     0515                     	;# 
  5729     0515                     	;# 
  5730     0516                     	;# 
  5731     0517                     	;# 
  5732     0518                     	;# 
  5733     0519                     	;# 
  5734     051A                     	;# 
  5735     051B                     	;# 
  5736     051C                     	;# 
  5737     051D                     	;# 
  5738     058C                     	;# 
  5739     058C                     	;# 
  5740     058D                     	;# 
  5741     058E                     	;# 
  5742     058F                     	;# 
  5743     058F                     	;# 
  5744     0590                     	;# 
  5745     0591                     	;# 
  5746     0592                     	;# 
  5747     0593                     	;# 
  5748     059C                     	;# 
  5749     059C                     	;# 
  5750     059D                     	;# 
  5751     059D                     	;# 
  5752     059E                     	;# 
  5753     059F                     	;# 
  5754     060C                     	;# 
  5755     060C                     	;# 
  5756     060D                     	;# 
  5757     060D                     	;# 
  5758     060E                     	;# 
  5759     060F                     	;# 
  5760     0610                     	;# 
  5761     0611                     	;# 
  5762     0612                     	;# 
  5763     0613                     	;# 
  5764     0614                     	;# 
  5765     0616                     	;# 
  5766     0616                     	;# 
  5767     0617                     	;# 
  5768     0617                     	;# 
  5769     0618                     	;# 
  5770     0619                     	;# 
  5771     061A                     	;# 
  5772     061B                     	;# 
  5773     061C                     	;# 
  5774     061D                     	;# 
  5775     061E                     	;# 
  5776     068C                     	;# 
  5777     068D                     	;# 
  5778     068E                     	;# 
  5779     068F                     	;# 
  5780     0690                     	;# 
  5781     0691                     	;# 
  5782     0692                     	;# 
  5783     0693                     	;# 
  5784     0694                     	;# 
  5785     070C                     	;# 
  5786     070D                     	;# 
  5787     070E                     	;# 
  5788     070F                     	;# 
  5789     0710                     	;# 
  5790     0711                     	;# 
  5791     0712                     	;# 
  5792     0713                     	;# 
  5793     0714                     	;# 
  5794     0716                     	;# 
  5795     0717                     	;# 
  5796     0718                     	;# 
  5797     0719                     	;# 
  5798     071A                     	;# 
  5799     071B                     	;# 
  5800     071C                     	;# 
  5801     071D                     	;# 
  5802     071E                     	;# 
  5803     0796                     	;# 
  5804     0797                     	;# 
  5805     0798                     	;# 
  5806     0799                     	;# 
  5807     079A                     	;# 
  5808     079B                     	;# 
  5809     079C                     	;# 
  5810     079D                     	;# 
  5811     080C                     	;# 
  5812     080D                     	;# 
  5813     080E                     	;# 
  5814     080F                     	;# 
  5815     0810                     	;# 
  5816     0811                     	;# 
  5817     0813                     	;# 
  5818     0814                     	;# 
  5819     081A                     	;# 
  5820     081A                     	;# 
  5821     081B                     	;# 
  5822     081C                     	;# 
  5823     081C                     	;# 
  5824     081D                     	;# 
  5825     081E                     	;# 
  5826     081F                     	;# 
  5827     088C                     	;# 
  5828     088D                     	;# 
  5829     088E                     	;# 
  5830     088F                     	;# 
  5831     0890                     	;# 
  5832     0891                     	;# 
  5833     0892                     	;# 
  5834     0893                     	;# 
  5835     0895                     	;# 
  5836     0896                     	;# 
  5837     0897                     	;# 
  5838     0898                     	;# 
  5839     0899                     	;# 
  5840     089A                     	;# 
  5841     089B                     	;# 
  5842     090C                     	;# 
  5843     090E                     	;# 
  5844     090F                     	;# 
  5845     091F                     	;# 
  5846     098F                     	;# 
  5847     098F                     	;# 
  5848     0990                     	;# 
  5849     0991                     	;# 
  5850     0992                     	;# 
  5851     0993                     	;# 
  5852     0994                     	;# 
  5853     0995                     	;# 
  5854     0996                     	;# 
  5855     0997                     	;# 
  5856     0A19                     	;# 
  5857     0A19                     	;# 
  5858     0A1A                     	;# 
  5859     0A1A                     	;# 
  5860     0A1B                     	;# 
  5861     0A1B                     	;# 
  5862     0A1B                     	;# 
  5863     0A1C                     	;# 
  5864     0A1C                     	;# 
  5865     0A1D                     	;# 
  5866     0A1D                     	;# 
  5867     0A1E                     	;# 
  5868     0A1E                     	;# 
  5869     0A1F                     	;# 
  5870     0A1F                     	;# 
  5871     0A1F                     	;# 
  5872     1E0F                     	;# 
  5873     1E10                     	;# 
  5874     1E11                     	;# 
  5875     1E12                     	;# 
  5876     1E13                     	;# 
  5877     1E14                     	;# 
  5878     1E15                     	;# 
  5879     1E16                     	;# 
  5880     1E17                     	;# 
  5881     1E18                     	;# 
  5882     1E19                     	;# 
  5883     1E1A                     	;# 
  5884     1E1B                     	;# 
  5885     1E1C                     	;# 
  5886     1E1D                     	;# 
  5887     1E1E                     	;# 
  5888     1E1F                     	;# 
  5889     1E20                     	;# 
  5890     1E21                     	;# 
  5891     1E22                     	;# 
  5892     1E23                     	;# 
  5893     1E24                     	;# 
  5894     1E25                     	;# 
  5895     1E26                     	;# 
  5896     1E27                     	;# 
  5897     1E28                     	;# 
  5898     1E29                     	;# 
  5899     1E2A                     	;# 
  5900     1E2B                     	;# 
  5901     1E2C                     	;# 
  5902     1E2D                     	;# 
  5903     1E2E                     	;# 
  5904     1E2F                     	;# 
  5905     1E30                     	;# 
  5906     1E31                     	;# 
  5907     1E32                     	;# 
  5908     1E33                     	;# 
  5909     1E34                     	;# 
  5910     1E35                     	;# 
  5911     1E36                     	;# 
  5912     1E37                     	;# 
  5913     1E8F                     	;# 
  5914     1E90                     	;# 
  5915     1E91                     	;# 
  5916     1E92                     	;# 
  5917     1E93                     	;# 
  5918     1E94                     	;# 
  5919     1E95                     	;# 
  5920     1E96                     	;# 
  5921     1E97                     	;# 
  5922     1E9C                     	;# 
  5923     1E9D                     	;# 
  5924     1E9E                     	;# 
  5925     1EA1                     	;# 
  5926     1EA2                     	;# 
  5927     1EA3                     	;# 
  5928     1EA4                     	;# 
  5929     1EA5                     	;# 
  5930     1EA9                     	;# 
  5931     1EAA                     	;# 
  5932     1EAB                     	;# 
  5933     1EAC                     	;# 
  5934     1EB1                     	;# 
  5935     1EB2                     	;# 
  5936     1EB3                     	;# 
  5937     1EB8                     	;# 
  5938     1EB9                     	;# 
  5939     1EBA                     	;# 
  5940     1EBB                     	;# 
  5941     1EBC                     	;# 
  5942     1EBD                     	;# 
  5943     1EBE                     	;# 
  5944     1EC3                     	;# 
  5945     1EC5                     	;# 
  5946     1EC6                     	;# 
  5947     1EC7                     	;# 
  5948     1EC8                     	;# 
  5949     1EC9                     	;# 
  5950     1ECA                     	;# 
  5951     1ECB                     	;# 
  5952     1ECC                     	;# 
  5953     1ECD                     	;# 
  5954     1ECE                     	;# 
  5955     1F10                     	;# 
  5956     1F11                     	;# 
  5957     1F12                     	;# 
  5958     1F13                     	;# 
  5959     1F14                     	;# 
  5960     1F15                     	;# 
  5961     1F16                     	;# 
  5962     1F17                     	;# 
  5963     1F18                     	;# 
  5964     1F19                     	;# 
  5965     1F1A                     	;# 
  5966     1F1B                     	;# 
  5967     1F1C                     	;# 
  5968     1F1D                     	;# 
  5969     1F1E                     	;# 
  5970     1F1F                     	;# 
  5971     1F20                     	;# 
  5972     1F21                     	;# 
  5973     1F22                     	;# 
  5974     1F23                     	;# 
  5975     1F24                     	;# 
  5976     1F25                     	;# 
  5977     1F26                     	;# 
  5978     1F27                     	;# 
  5979     1F38                     	;# 
  5980     1F39                     	;# 
  5981     1F3A                     	;# 
  5982     1F3B                     	;# 
  5983     1F3C                     	;# 
  5984     1F3D                     	;# 
  5985     1F3E                     	;# 
  5986     1F3F                     	;# 
  5987     1F43                     	;# 
  5988     1F44                     	;# 
  5989     1F45                     	;# 
  5990     1F46                     	;# 
  5991     1F47                     	;# 
  5992     1F48                     	;# 
  5993     1F49                     	;# 
  5994     1F4A                     	;# 
  5995     1F4E                     	;# 
  5996     1F4F                     	;# 
  5997     1F50                     	;# 
  5998     1F51                     	;# 
  5999     1F52                     	;# 
  6000     1F53                     	;# 
  6001     1F54                     	;# 
  6002     1F55                     	;# 
  6003     1F65                     	;# 
  6004     1F66                     	;# 
  6005     1F67                     	;# 
  6006     1F68                     	;# 
  6007     1F69                     	;# 
  6008     1F6A                     	;# 
  6009     1F6B                     	;# 
  6010     1FE4                     	;# 
  6011     1FE5                     	;# 
  6012     1FE6                     	;# 
  6013     1FE7                     	;# 
  6014     1FE8                     	;# 
  6015     1FE8                     	;# 
  6016     1FE9                     	;# 
  6017     1FEA                     	;# 
  6018     1FEB                     	;# 
  6019     1FED                     	;# 
  6020     1FEE                     	;# 
  6021     1FEF                     	;# 
  6022     0000                     	;# 
  6023     0001                     	;# 
  6024     0002                     	;# 
  6025     0003                     	;# 
  6026     0004                     	;# 
  6027     0005                     	;# 
  6028     0006                     	;# 
  6029     0007                     	;# 
  6030     0008                     	;# 
  6031     0009                     	;# 
  6032     000A                     	;# 
  6033     000B                     	;# 
  6034     000C                     	;# 
  6035     000D                     	;# 
  6036     000E                     	;# 
  6037     0010                     	;# 
  6038     0012                     	;# 
  6039     0013                     	;# 
  6040     0014                     	;# 
  6041     0016                     	;# 
  6042     0018                     	;# 
  6043     0019                     	;# 
  6044     001A                     	;# 
  6045     001C                     	;# 
  6046     008C                     	;# 
  6047     008C                     	;# 
  6048     008D                     	;# 
  6049     008E                     	;# 
  6050     008E                     	;# 
  6051     008F                     	;# 
  6052     0090                     	;# 
  6053     0090                     	;# 
  6054     0091                     	;# 
  6055     0092                     	;# 
  6056     0092                     	;# 
  6057     0093                     	;# 
  6058     0094                     	;# 
  6059     0094                     	;# 
  6060     0095                     	;# 
  6061     0096                     	;# 
  6062     0096                     	;# 
  6063     0097                     	;# 
  6064     0098                     	;# 
  6065     0099                     	;# 
  6066     009A                     	;# 
  6067     009B                     	;# 
  6068     009B                     	;# 
  6069     009C                     	;# 
  6070     009D                     	;# 
  6071     009D                     	;# 
  6072     009E                     	;# 
  6073     009F                     	;# 
  6074     010C                     	;# 
  6075     010C                     	;# 
  6076     010D                     	;# 
  6077     010E                     	;# 
  6078     010F                     	;# 
  6079     010F                     	;# 
  6080     0110                     	;# 
  6081     0111                     	;# 
  6082     0112                     	;# 
  6083     0113                     	;# 
  6084     0114                     	;# 
  6085     0115                     	;# 
  6086     0116                     	;# 
  6087     0117                     	;# 
  6088     0118                     	;# 
  6089     0119                     	;# 
  6090     0119                     	;# 
  6091     0119                     	;# 
  6092     011A                     	;# 
  6093     011A                     	;# 
  6094     011A                     	;# 
  6095     011B                     	;# 
  6096     011B                     	;# 
  6097     011B                     	;# 
  6098     011B                     	;# 
  6099     011B                     	;# 
  6100     011C                     	;# 
  6101     011C                     	;# 
  6102     011C                     	;# 
  6103     011D                     	;# 
  6104     011D                     	;# 
  6105     011D                     	;# 
  6106     011E                     	;# 
  6107     011E                     	;# 
  6108     011E                     	;# 
  6109     011F                     	;# 
  6110     011F                     	;# 
  6111     011F                     	;# 
  6112     011F                     	;# 
  6113     011F                     	;# 
  6114     018C                     	;# 
  6115     018D                     	;# 
  6116     018E                     	;# 
  6117     018F                     	;# 
  6118     0190                     	;# 
  6119     0191                     	;# 
  6120     0192                     	;# 
  6121     0196                     	;# 
  6122     0197                     	;# 
  6123     0198                     	;# 
  6124     0199                     	;# 
  6125     019A                     	;# 
  6126     019B                     	;# 
  6127     019C                     	;# 
  6128     020C                     	;# 
  6129     020D                     	;# 
  6130     020E                     	;# 
  6131     020E                     	;# 
  6132     020F                     	;# 
  6133     020F                     	;# 
  6134     0210                     	;# 
  6135     0210                     	;# 
  6136     0211                     	;# 
  6137     0211                     	;# 
  6138     0212                     	;# 
  6139     0213                     	;# 
  6140     0214                     	;# 
  6141     0214                     	;# 
  6142     0215                     	;# 
  6143     0215                     	;# 
  6144     0216                     	;# 
  6145     0216                     	;# 
  6146     0217                     	;# 
  6147     0217                     	;# 
  6148     0218                     	;# 
  6149     0219                     	;# 
  6150     021A                     	;# 
  6151     021A                     	;# 
  6152     021B                     	;# 
  6153     021B                     	;# 
  6154     021C                     	;# 
  6155     021C                     	;# 
  6156     021D                     	;# 
  6157     021D                     	;# 
  6158     021E                     	;# 
  6159     021F                     	;# 
  6160     028C                     	;# 
  6161     028C                     	;# 
  6162     028D                     	;# 
  6163     028D                     	;# 
  6164     028E                     	;# 
  6165     028F                     	;# 
  6166     0290                     	;# 
  6167     0291                     	;# 
  6168     0292                     	;# 
  6169     0292                     	;# 
  6170     0293                     	;# 
  6171     0293                     	;# 
  6172     0294                     	;# 
  6173     0295                     	;# 
  6174     0296                     	;# 
  6175     0297                     	;# 
  6176     0298                     	;# 
  6177     0298                     	;# 
  6178     0299                     	;# 
  6179     0299                     	;# 
  6180     029A                     	;# 
  6181     029B                     	;# 
  6182     029C                     	;# 
  6183     029D                     	;# 
  6184     029F                     	;# 
  6185     030C                     	;# 
  6186     030C                     	;# 
  6187     030D                     	;# 
  6188     030E                     	;# 
  6189     030F                     	;# 
  6190     0310                     	;# 
  6191     0310                     	;# 
  6192     0311                     	;# 
  6193     0312                     	;# 
  6194     0313                     	;# 
  6195     0314                     	;# 
  6196     0314                     	;# 
  6197     0315                     	;# 
  6198     0316                     	;# 
  6199     0317                     	;# 
  6200     0318                     	;# 
  6201     0318                     	;# 
  6202     0319                     	;# 
  6203     031A                     	;# 
  6204     031B                     	;# 
  6205     031C                     	;# 
  6206     031C                     	;# 
  6207     031D                     	;# 
  6208     031E                     	;# 
  6209     031F                     	;# 
  6210     038C                     	;# 
  6211     038C                     	;# 
  6212     038D                     	;# 
  6213     038E                     	;# 
  6214     0390                     	;# 
  6215     0390                     	;# 
  6216     0391                     	;# 
  6217     0392                     	;# 
  6218     048C                     	;# 
  6219     048C                     	;# 
  6220     048D                     	;# 
  6221     048E                     	;# 
  6222     048F                     	;# 
  6223     048F                     	;# 
  6224     0490                     	;# 
  6225     0491                     	;# 
  6226     0492                     	;# 
  6227     0492                     	;# 
  6228     0493                     	;# 
  6229     0494                     	;# 
  6230     0495                     	;# 
  6231     0495                     	;# 
  6232     0496                     	;# 
  6233     0497                     	;# 
  6234     0498                     	;# 
  6235     0499                     	;# 
  6236     049A                     	;# 
  6237     049B                     	;# 
  6238     049C                     	;# 
  6239     049D                     	;# 
  6240     050C                     	;# 
  6241     050C                     	;# 
  6242     050D                     	;# 
  6243     050E                     	;# 
  6244     050F                     	;# 
  6245     050F                     	;# 
  6246     0510                     	;# 
  6247     0511                     	;# 
  6248     0512                     	;# 
  6249     0512                     	;# 
  6250     0513                     	;# 
  6251     0514                     	;# 
  6252     0515                     	;# 
  6253     0515                     	;# 
  6254     0516                     	;# 
  6255     0517                     	;# 
  6256     0518                     	;# 
  6257     0519                     	;# 
  6258     051A                     	;# 
  6259     051B                     	;# 
  6260     051C                     	;# 
  6261     051D                     	;# 
  6262     058C                     	;# 
  6263     058C                     	;# 
  6264     058D                     	;# 
  6265     058E                     	;# 
  6266     058F                     	;# 
  6267     058F                     	;# 
  6268     0590                     	;# 
  6269     0591                     	;# 
  6270     0592                     	;# 
  6271     0593                     	;# 
  6272     059C                     	;# 
  6273     059C                     	;# 
  6274     059D                     	;# 
  6275     059D                     	;# 
  6276     059E                     	;# 
  6277     059F                     	;# 
  6278     060C                     	;# 
  6279     060C                     	;# 
  6280     060D                     	;# 
  6281     060D                     	;# 
  6282     060E                     	;# 
  6283     060F                     	;# 
  6284     0610                     	;# 
  6285     0611                     	;# 
  6286     0612                     	;# 
  6287     0613                     	;# 
  6288     0614                     	;# 
  6289     0616                     	;# 
  6290     0616                     	;# 
  6291     0617                     	;# 
  6292     0617                     	;# 
  6293     0618                     	;# 
  6294     0619                     	;# 
  6295     061A                     	;# 
  6296     061B                     	;# 
  6297     061C                     	;# 
  6298     061D                     	;# 
  6299     061E                     	;# 
  6300     068C                     	;# 
  6301     068D                     	;# 
  6302     068E                     	;# 
  6303     068F                     	;# 
  6304     0690                     	;# 
  6305     0691                     	;# 
  6306     0692                     	;# 
  6307     0693                     	;# 
  6308     0694                     	;# 
  6309     070C                     	;# 
  6310     070D                     	;# 
  6311     070E                     	;# 
  6312     070F                     	;# 
  6313     0710                     	;# 
  6314     0711                     	;# 
  6315     0712                     	;# 
  6316     0713                     	;# 
  6317     0714                     	;# 
  6318     0716                     	;# 
  6319     0717                     	;# 
  6320     0718                     	;# 
  6321     0719                     	;# 
  6322     071A                     	;# 
  6323     071B                     	;# 
  6324     071C                     	;# 
  6325     071D                     	;# 
  6326     071E                     	;# 
  6327     0796                     	;# 
  6328     0797                     	;# 
  6329     0798                     	;# 
  6330     0799                     	;# 
  6331     079A                     	;# 
  6332     079B                     	;# 
  6333     079C                     	;# 
  6334     079D                     	;# 
  6335     080C                     	;# 
  6336     080D                     	;# 
  6337     080E                     	;# 
  6338     080F                     	;# 
  6339     0810                     	;# 
  6340     0811                     	;# 
  6341     0813                     	;# 
  6342     0814                     	;# 
  6343     081A                     	;# 
  6344     081A                     	;# 
  6345     081B                     	;# 
  6346     081C                     	;# 
  6347     081C                     	;# 
  6348     081D                     	;# 
  6349     081E                     	;# 
  6350     081F                     	;# 
  6351     088C                     	;# 
  6352     088D                     	;# 
  6353     088E                     	;# 
  6354     088F                     	;# 
  6355     0890                     	;# 
  6356     0891                     	;# 
  6357     0892                     	;# 
  6358     0893                     	;# 
  6359     0895                     	;# 
  6360     0896                     	;# 
  6361     0897                     	;# 
  6362     0898                     	;# 
  6363     0899                     	;# 
  6364     089A                     	;# 
  6365     089B                     	;# 
  6366     090C                     	;# 
  6367     090E                     	;# 
  6368     090F                     	;# 
  6369     091F                     	;# 
  6370     098F                     	;# 
  6371     098F                     	;# 
  6372     0990                     	;# 
  6373     0991                     	;# 
  6374     0992                     	;# 
  6375     0993                     	;# 
  6376     0994                     	;# 
  6377     0995                     	;# 
  6378     0996                     	;# 
  6379     0997                     	;# 
  6380     0A19                     	;# 
  6381     0A19                     	;# 
  6382     0A1A                     	;# 
  6383     0A1A                     	;# 
  6384     0A1B                     	;# 
  6385     0A1B                     	;# 
  6386     0A1B                     	;# 
  6387     0A1C                     	;# 
  6388     0A1C                     	;# 
  6389     0A1D                     	;# 
  6390     0A1D                     	;# 
  6391     0A1E                     	;# 
  6392     0A1E                     	;# 
  6393     0A1F                     	;# 
  6394     0A1F                     	;# 
  6395     0A1F                     	;# 
  6396     1E0F                     	;# 
  6397     1E10                     	;# 
  6398     1E11                     	;# 
  6399     1E12                     	;# 
  6400     1E13                     	;# 
  6401     1E14                     	;# 
  6402     1E15                     	;# 
  6403     1E16                     	;# 
  6404     1E17                     	;# 
  6405     1E18                     	;# 
  6406     1E19                     	;# 
  6407     1E1A                     	;# 
  6408     1E1B                     	;# 
  6409     1E1C                     	;# 
  6410     1E1D                     	;# 
  6411     1E1E                     	;# 
  6412     1E1F                     	;# 
  6413     1E20                     	;# 
  6414     1E21                     	;# 
  6415     1E22                     	;# 
  6416     1E23                     	;# 
  6417     1E24                     	;# 
  6418     1E25                     	;# 
  6419     1E26                     	;# 
  6420     1E27                     	;# 
  6421     1E28                     	;# 
  6422     1E29                     	;# 
  6423     1E2A                     	;# 
  6424     1E2B                     	;# 
  6425     1E2C                     	;# 
  6426     1E2D                     	;# 
  6427     1E2E                     	;# 
  6428     1E2F                     	;# 
  6429     1E30                     	;# 
  6430     1E31                     	;# 
  6431     1E32                     	;# 
  6432     1E33                     	;# 
  6433     1E34                     	;# 
  6434     1E35                     	;# 
  6435     1E36                     	;# 
  6436     1E37                     	;# 
  6437     1E8F                     	;# 
  6438     1E90                     	;# 
  6439     1E91                     	;# 
  6440     1E92                     	;# 
  6441     1E93                     	;# 
  6442     1E94                     	;# 
  6443     1E95                     	;# 
  6444     1E96                     	;# 
  6445     1E97                     	;# 
  6446     1E9C                     	;# 
  6447     1E9D                     	;# 
  6448     1E9E                     	;# 
  6449     1EA1                     	;# 
  6450     1EA2                     	;# 
  6451     1EA3                     	;# 
  6452     1EA4                     	;# 
  6453     1EA5                     	;# 
  6454     1EA9                     	;# 
  6455     1EAA                     	;# 
  6456     1EAB                     	;# 
  6457     1EAC                     	;# 
  6458     1EB1                     	;# 
  6459     1EB2                     	;# 
  6460     1EB3                     	;# 
  6461     1EB8                     	;# 
  6462     1EB9                     	;# 
  6463     1EBA                     	;# 
  6464     1EBB                     	;# 
  6465     1EBC                     	;# 
  6466     1EBD                     	;# 
  6467     1EBE                     	;# 
  6468     1EC3                     	;# 
  6469     1EC5                     	;# 
  6470     1EC6                     	;# 
  6471     1EC7                     	;# 
  6472     1EC8                     	;# 
  6473     1EC9                     	;# 
  6474     1ECA                     	;# 
  6475     1ECB                     	;# 
  6476     1ECC                     	;# 
  6477     1ECD                     	;# 
  6478     1ECE                     	;# 
  6479     1F10                     	;# 
  6480     1F11                     	;# 
  6481     1F12                     	;# 
  6482     1F13                     	;# 
  6483     1F14                     	;# 
  6484     1F15                     	;# 
  6485     1F16                     	;# 
  6486     1F17                     	;# 
  6487     1F18                     	;# 
  6488     1F19                     	;# 
  6489     1F1A                     	;# 
  6490     1F1B                     	;# 
  6491     1F1C                     	;# 
  6492     1F1D                     	;# 
  6493     1F1E                     	;# 
  6494     1F1F                     	;# 
  6495     1F20                     	;# 
  6496     1F21                     	;# 
  6497     1F22                     	;# 
  6498     1F23                     	;# 
  6499     1F24                     	;# 
  6500     1F25                     	;# 
  6501     1F26                     	;# 
  6502     1F27                     	;# 
  6503     1F38                     	;# 
  6504     1F39                     	;# 
  6505     1F3A                     	;# 
  6506     1F3B                     	;# 
  6507     1F3C                     	;# 
  6508     1F3D                     	;# 
  6509     1F3E                     	;# 
  6510     1F3F                     	;# 
  6511     1F43                     	;# 
  6512     1F44                     	;# 
  6513     1F45                     	;# 
  6514     1F46                     	;# 
  6515     1F47                     	;# 
  6516     1F48                     	;# 
  6517     1F49                     	;# 
  6518     1F4A                     	;# 
  6519     1F4E                     	;# 
  6520     1F4F                     	;# 
  6521     1F50                     	;# 
  6522     1F51                     	;# 
  6523     1F52                     	;# 
  6524     1F53                     	;# 
  6525     1F54                     	;# 
  6526     1F55                     	;# 
  6527     1F65                     	;# 
  6528     1F66                     	;# 
  6529     1F67                     	;# 
  6530     1F68                     	;# 
  6531     1F69                     	;# 
  6532     1F6A                     	;# 
  6533     1F6B                     	;# 
  6534     1FE4                     	;# 
  6535     1FE5                     	;# 
  6536     1FE6                     	;# 
  6537     1FE7                     	;# 
  6538     1FE8                     	;# 
  6539     1FE8                     	;# 
  6540     1FE9                     	;# 
  6541     1FEA                     	;# 
  6542     1FEB                     	;# 
  6543     1FED                     	;# 
  6544     1FEE                     	;# 
  6545     1FEF                     	;# 
  6546     0000                     	;# 
  6547     0001                     	;# 
  6548     0002                     	;# 
  6549     0003                     	;# 
  6550     0004                     	;# 
  6551     0005                     	;# 
  6552     0006                     	;# 
  6553     0007                     	;# 
  6554     0008                     	;# 
  6555     0009                     	;# 
  6556     000A                     	;# 
  6557     000B                     	;# 
  6558     000C                     	;# 
  6559     000D                     	;# 
  6560     000E                     	;# 
  6561     0010                     	;# 
  6562     0012                     	;# 
  6563     0013                     	;# 
  6564     0014                     	;# 
  6565     0016                     	;# 
  6566     0018                     	;# 
  6567     0019                     	;# 
  6568     001A                     	;# 
  6569     001C                     	;# 
  6570     008C                     	;# 
  6571     008C                     	;# 
  6572     008D                     	;# 
  6573     008E                     	;# 
  6574     008E                     	;# 
  6575     008F                     	;# 
  6576     0090                     	;# 
  6577     0090                     	;# 
  6578     0091                     	;# 
  6579     0092                     	;# 
  6580     0092                     	;# 
  6581     0093                     	;# 
  6582     0094                     	;# 
  6583     0094                     	;# 
  6584     0095                     	;# 
  6585     0096                     	;# 
  6586     0096                     	;# 
  6587     0097                     	;# 
  6588     0098                     	;# 
  6589     0099                     	;# 
  6590     009A                     	;# 
  6591     009B                     	;# 
  6592     009B                     	;# 
  6593     009C                     	;# 
  6594     009D                     	;# 
  6595     009D                     	;# 
  6596     009E                     	;# 
  6597     009F                     	;# 
  6598     010C                     	;# 
  6599     010C                     	;# 
  6600     010D                     	;# 
  6601     010E                     	;# 
  6602     010F                     	;# 
  6603     010F                     	;# 
  6604     0110                     	;# 
  6605     0111                     	;# 
  6606     0112                     	;# 
  6607     0113                     	;# 
  6608     0114                     	;# 
  6609     0115                     	;# 
  6610     0116                     	;# 
  6611     0117                     	;# 
  6612     0118                     	;# 
  6613     0119                     	;# 
  6614     0119                     	;# 
  6615     0119                     	;# 
  6616     011A                     	;# 
  6617     011A                     	;# 
  6618     011A                     	;# 
  6619     011B                     	;# 
  6620     011B                     	;# 
  6621     011B                     	;# 
  6622     011B                     	;# 
  6623     011B                     	;# 
  6624     011C                     	;# 
  6625     011C                     	;# 
  6626     011C                     	;# 
  6627     011D                     	;# 
  6628     011D                     	;# 
  6629     011D                     	;# 
  6630     011E                     	;# 
  6631     011E                     	;# 
  6632     011E                     	;# 
  6633     011F                     	;# 
  6634     011F                     	;# 
  6635     011F                     	;# 
  6636     011F                     	;# 
  6637     011F                     	;# 
  6638     018C                     	;# 
  6639     018D                     	;# 
  6640     018E                     	;# 
  6641     018F                     	;# 
  6642     0190                     	;# 
  6643     0191                     	;# 
  6644     0192                     	;# 
  6645     0196                     	;# 
  6646     0197                     	;# 
  6647     0198                     	;# 
  6648     0199                     	;# 
  6649     019A                     	;# 
  6650     019B                     	;# 
  6651     019C                     	;# 
  6652     020C                     	;# 
  6653     020D                     	;# 
  6654     020E                     	;# 
  6655     020E                     	;# 
  6656     020F                     	;# 
  6657     020F                     	;# 
  6658     0210                     	;# 
  6659     0210                     	;# 
  6660     0211                     	;# 
  6661     0211                     	;# 
  6662     0212                     	;# 
  6663     0213                     	;# 
  6664     0214                     	;# 
  6665     0214                     	;# 
  6666     0215                     	;# 
  6667     0215                     	;# 
  6668     0216                     	;# 
  6669     0216                     	;# 
  6670     0217                     	;# 
  6671     0217                     	;# 
  6672     0218                     	;# 
  6673     0219                     	;# 
  6674     021A                     	;# 
  6675     021A                     	;# 
  6676     021B                     	;# 
  6677     021B                     	;# 
  6678     021C                     	;# 
  6679     021C                     	;# 
  6680     021D                     	;# 
  6681     021D                     	;# 
  6682     021E                     	;# 
  6683     021F                     	;# 
  6684     028C                     	;# 
  6685     028C                     	;# 
  6686     028D                     	;# 
  6687     028D                     	;# 
  6688     028E                     	;# 
  6689     028F                     	;# 
  6690     0290                     	;# 
  6691     0291                     	;# 
  6692     0292                     	;# 
  6693     0292                     	;# 
  6694     0293                     	;# 
  6695     0293                     	;# 
  6696     0294                     	;# 
  6697     0295                     	;# 
  6698     0296                     	;# 
  6699     0297                     	;# 
  6700     0298                     	;# 
  6701     0298                     	;# 
  6702     0299                     	;# 
  6703     0299                     	;# 
  6704     029A                     	;# 
  6705     029B                     	;# 
  6706     029C                     	;# 
  6707     029D                     	;# 
  6708     029F                     	;# 
  6709     030C                     	;# 
  6710     030C                     	;# 
  6711     030D                     	;# 
  6712     030E                     	;# 
  6713     030F                     	;# 
  6714     0310                     	;# 
  6715     0310                     	;# 
  6716     0311                     	;# 
  6717     0312                     	;# 
  6718     0313                     	;# 
  6719     0314                     	;# 
  6720     0314                     	;# 
  6721     0315                     	;# 
  6722     0316                     	;# 
  6723     0317                     	;# 
  6724     0318                     	;# 
  6725     0318                     	;# 
  6726     0319                     	;# 
  6727     031A                     	;# 
  6728     031B                     	;# 
  6729     031C                     	;# 
  6730     031C                     	;# 
  6731     031D                     	;# 
  6732     031E                     	;# 
  6733     031F                     	;# 
  6734     038C                     	;# 
  6735     038C                     	;# 
  6736     038D                     	;# 
  6737     038E                     	;# 
  6738     0390                     	;# 
  6739     0390                     	;# 
  6740     0391                     	;# 
  6741     0392                     	;# 
  6742     048C                     	;# 
  6743     048C                     	;# 
  6744     048D                     	;# 
  6745     048E                     	;# 
  6746     048F                     	;# 
  6747     048F                     	;# 
  6748     0490                     	;# 
  6749     0491                     	;# 
  6750     0492                     	;# 
  6751     0492                     	;# 
  6752     0493                     	;# 
  6753     0494                     	;# 
  6754     0495                     	;# 
  6755     0495                     	;# 
  6756     0496                     	;# 
  6757     0497                     	;# 
  6758     0498                     	;# 
  6759     0499                     	;# 
  6760     049A                     	;# 
  6761     049B                     	;# 
  6762     049C                     	;# 
  6763     049D                     	;# 
  6764     050C                     	;# 
  6765     050C                     	;# 
  6766     050D                     	;# 
  6767     050E                     	;# 
  6768     050F                     	;# 
  6769     050F                     	;# 
  6770     0510                     	;# 
  6771     0511                     	;# 
  6772     0512                     	;# 
  6773     0512                     	;# 
  6774     0513                     	;# 
  6775     0514                     	;# 
  6776     0515                     	;# 
  6777     0515                     	;# 
  6778     0516                     	;# 
  6779     0517                     	;# 
  6780     0518                     	;# 
  6781     0519                     	;# 
  6782     051A                     	;# 
  6783     051B                     	;# 
  6784     051C                     	;# 
  6785     051D                     	;# 
  6786     058C                     	;# 
  6787     058C                     	;# 
  6788     058D                     	;# 
  6789     058E                     	;# 
  6790     058F                     	;# 
  6791     058F                     	;# 
  6792     0590                     	;# 
  6793     0591                     	;# 
  6794     0592                     	;# 
  6795     0593                     	;# 
  6796     059C                     	;# 
  6797     059C                     	;# 
  6798     059D                     	;# 
  6799     059D                     	;# 
  6800     059E                     	;# 
  6801     059F                     	;# 
  6802     060C                     	;# 
  6803     060C                     	;# 
  6804     060D                     	;# 
  6805     060D                     	;# 
  6806     060E                     	;# 
  6807     060F                     	;# 
  6808     0610                     	;# 
  6809     0611                     	;# 
  6810     0612                     	;# 
  6811     0613                     	;# 
  6812     0614                     	;# 
  6813     0616                     	;# 
  6814     0616                     	;# 
  6815     0617                     	;# 
  6816     0617                     	;# 
  6817     0618                     	;# 
  6818     0619                     	;# 
  6819     061A                     	;# 
  6820     061B                     	;# 
  6821     061C                     	;# 
  6822     061D                     	;# 
  6823     061E                     	;# 
  6824     068C                     	;# 
  6825     068D                     	;# 
  6826     068E                     	;# 
  6827     068F                     	;# 
  6828     0690                     	;# 
  6829     0691                     	;# 
  6830     0692                     	;# 
  6831     0693                     	;# 
  6832     0694                     	;# 
  6833     070C                     	;# 
  6834     070D                     	;# 
  6835     070E                     	;# 
  6836     070F                     	;# 
  6837     0710                     	;# 
  6838     0711                     	;# 
  6839     0712                     	;# 
  6840     0713                     	;# 
  6841     0714                     	;# 
  6842     0716                     	;# 
  6843     0717                     	;# 
  6844     0718                     	;# 
  6845     0719                     	;# 
  6846     071A                     	;# 
  6847     071B                     	;# 
  6848     071C                     	;# 
  6849     071D                     	;# 
  6850     071E                     	;# 
  6851     0796                     	;# 
  6852     0797                     	;# 
  6853     0798                     	;# 
  6854     0799                     	;# 
  6855     079A                     	;# 
  6856     079B                     	;# 
  6857     079C                     	;# 
  6858     079D                     	;# 
  6859     080C                     	;# 
  6860     080D                     	;# 
  6861     080E                     	;# 
  6862     080F                     	;# 
  6863     0810                     	;# 
  6864     0811                     	;# 
  6865     0813                     	;# 
  6866     0814                     	;# 
  6867     081A                     	;# 
  6868     081A                     	;# 
  6869     081B                     	;# 
  6870     081C                     	;# 
  6871     081C                     	;# 
  6872     081D                     	;# 
  6873     081E                     	;# 
  6874     081F                     	;# 
  6875     088C                     	;# 
  6876     088D                     	;# 
  6877     088E                     	;# 
  6878     088F                     	;# 
  6879     0890                     	;# 
  6880     0891                     	;# 
  6881     0892                     	;# 
  6882     0893                     	;# 
  6883     0895                     	;# 
  6884     0896                     	;# 
  6885     0897                     	;# 
  6886     0898                     	;# 
  6887     0899                     	;# 
  6888     089A                     	;# 
  6889     089B                     	;# 
  6890     090C                     	;# 
  6891     090E                     	;# 
  6892     090F                     	;# 
  6893     091F                     	;# 
  6894     098F                     	;# 
  6895     098F                     	;# 
  6896     0990                     	;# 
  6897     0991                     	;# 
  6898     0992                     	;# 
  6899     0993                     	;# 
  6900     0994                     	;# 
  6901     0995                     	;# 
  6902     0996                     	;# 
  6903     0997                     	;# 
  6904     0A19                     	;# 
  6905     0A19                     	;# 
  6906     0A1A                     	;# 
  6907     0A1A                     	;# 
  6908     0A1B                     	;# 
  6909     0A1B                     	;# 
  6910     0A1B                     	;# 
  6911     0A1C                     	;# 
  6912     0A1C                     	;# 
  6913     0A1D                     	;# 
  6914     0A1D                     	;# 
  6915     0A1E                     	;# 
  6916     0A1E                     	;# 
  6917     0A1F                     	;# 
  6918     0A1F                     	;# 
  6919     0A1F                     	;# 
  6920     1E0F                     	;# 
  6921     1E10                     	;# 
  6922     1E11                     	;# 
  6923     1E12                     	;# 
  6924     1E13                     	;# 
  6925     1E14                     	;# 
  6926     1E15                     	;# 
  6927     1E16                     	;# 
  6928     1E17                     	;# 
  6929     1E18                     	;# 
  6930     1E19                     	;# 
  6931     1E1A                     	;# 
  6932     1E1B                     	;# 
  6933     1E1C                     	;# 
  6934     1E1D                     	;# 
  6935     1E1E                     	;# 
  6936     1E1F                     	;# 
  6937     1E20                     	;# 
  6938     1E21                     	;# 
  6939     1E22                     	;# 
  6940     1E23                     	;# 
  6941     1E24                     	;# 
  6942     1E25                     	;# 
  6943     1E26                     	;# 
  6944     1E27                     	;# 
  6945     1E28                     	;# 
  6946     1E29                     	;# 
  6947     1E2A                     	;# 
  6948     1E2B                     	;# 
  6949     1E2C                     	;# 
  6950     1E2D                     	;# 
  6951     1E2E                     	;# 
  6952     1E2F                     	;# 
  6953     1E30                     	;# 
  6954     1E31                     	;# 
  6955     1E32                     	;# 
  6956     1E33                     	;# 
  6957     1E34                     	;# 
  6958     1E35                     	;# 
  6959     1E36                     	;# 
  6960     1E37                     	;# 
  6961     1E8F                     	;# 
  6962     1E90                     	;# 
  6963     1E91                     	;# 
  6964     1E92                     	;# 
  6965     1E93                     	;# 
  6966     1E94                     	;# 
  6967     1E95                     	;# 
  6968     1E96                     	;# 
  6969     1E97                     	;# 
  6970     1E9C                     	;# 
  6971     1E9D                     	;# 
  6972     1E9E                     	;# 
  6973     1EA1                     	;# 
  6974     1EA2                     	;# 
  6975     1EA3                     	;# 
  6976     1EA4                     	;# 
  6977     1EA5                     	;# 
  6978     1EA9                     	;# 
  6979     1EAA                     	;# 
  6980     1EAB                     	;# 
  6981     1EAC                     	;# 
  6982     1EB1                     	;# 
  6983     1EB2                     	;# 
  6984     1EB3                     	;# 
  6985     1EB8                     	;# 
  6986     1EB9                     	;# 
  6987     1EBA                     	;# 
  6988     1EBB                     	;# 
  6989     1EBC                     	;# 
  6990     1EBD                     	;# 
  6991     1EBE                     	;# 
  6992     1EC3                     	;# 
  6993     1EC5                     	;# 
  6994     1EC6                     	;# 
  6995     1EC7                     	;# 
  6996     1EC8                     	;# 
  6997     1EC9                     	;# 
  6998     1ECA                     	;# 
  6999     1ECB                     	;# 
  7000     1ECC                     	;# 
  7001     1ECD                     	;# 
  7002     1ECE                     	;# 
  7003     1F10                     	;# 
  7004     1F11                     	;# 
  7005     1F12                     	;# 
  7006     1F13                     	;# 
  7007     1F14                     	;# 
  7008     1F15                     	;# 
  7009     1F16                     	;# 
  7010     1F17                     	;# 
  7011     1F18                     	;# 
  7012     1F19                     	;# 
  7013     1F1A                     	;# 
  7014     1F1B                     	;# 
  7015     1F1C                     	;# 
  7016     1F1D                     	;# 
  7017     1F1E                     	;# 
  7018     1F1F                     	;# 
  7019     1F20                     	;# 
  7020     1F21                     	;# 
  7021     1F22                     	;# 
  7022     1F23                     	;# 
  7023     1F24                     	;# 
  7024     1F25                     	;# 
  7025     1F26                     	;# 
  7026     1F27                     	;# 
  7027     1F38                     	;# 
  7028     1F39                     	;# 
  7029     1F3A                     	;# 
  7030     1F3B                     	;# 
  7031     1F3C                     	;# 
  7032     1F3D                     	;# 
  7033     1F3E                     	;# 
  7034     1F3F                     	;# 
  7035     1F43                     	;# 
  7036     1F44                     	;# 
  7037     1F45                     	;# 
  7038     1F46                     	;# 
  7039     1F47                     	;# 
  7040     1F48                     	;# 
  7041     1F49                     	;# 
  7042     1F4A                     	;# 
  7043     1F4E                     	;# 
  7044     1F4F                     	;# 
  7045     1F50                     	;# 
  7046     1F51                     	;# 
  7047     1F52                     	;# 
  7048     1F53                     	;# 
  7049     1F54                     	;# 
  7050     1F55                     	;# 
  7051     1F65                     	;# 
  7052     1F66                     	;# 
  7053     1F67                     	;# 
  7054     1F68                     	;# 
  7055     1F69                     	;# 
  7056     1F6A                     	;# 
  7057     1F6B                     	;# 
  7058     1FE4                     	;# 
  7059     1FE5                     	;# 
  7060     1FE6                     	;# 
  7061     1FE7                     	;# 
  7062     1FE8                     	;# 
  7063     1FE8                     	;# 
  7064     1FE9                     	;# 
  7065     1FEA                     	;# 
  7066     1FEB                     	;# 
  7067     1FED                     	;# 
  7068     1FEE                     	;# 
  7069     1FEF                     	;# 
  7070     0000                     	;# 
  7071     0001                     	;# 
  7072     0002                     	;# 
  7073     0003                     	;# 
  7074     0004                     	;# 
  7075     0005                     	;# 
  7076     0006                     	;# 
  7077     0007                     	;# 
  7078     0008                     	;# 
  7079     0009                     	;# 
  7080     000A                     	;# 
  7081     000B                     	;# 
  7082     000C                     	;# 
  7083     000D                     	;# 
  7084     000E                     	;# 
  7085     0010                     	;# 
  7086     0012                     	;# 
  7087     0013                     	;# 
  7088     0014                     	;# 
  7089     0016                     	;# 
  7090     0018                     	;# 
  7091     0019                     	;# 
  7092     001A                     	;# 
  7093     001C                     	;# 
  7094     008C                     	;# 
  7095     008C                     	;# 
  7096     008D                     	;# 
  7097     008E                     	;# 
  7098     008E                     	;# 
  7099     008F                     	;# 
  7100     0090                     	;# 
  7101     0090                     	;# 
  7102     0091                     	;# 
  7103     0092                     	;# 
  7104     0092                     	;# 
  7105     0093                     	;# 
  7106     0094                     	;# 
  7107     0094                     	;# 
  7108     0095                     	;# 
  7109     0096                     	;# 
  7110     0096                     	;# 
  7111     0097                     	;# 
  7112     0098                     	;# 
  7113     0099                     	;# 
  7114     009A                     	;# 
  7115     009B                     	;# 
  7116     009B                     	;# 
  7117     009C                     	;# 
  7118     009D                     	;# 
  7119     009D                     	;# 
  7120     009E                     	;# 
  7121     009F                     	;# 
  7122     010C                     	;# 
  7123     010C                     	;# 
  7124     010D                     	;# 
  7125     010E                     	;# 
  7126     010F                     	;# 
  7127     010F                     	;# 
  7128     0110                     	;# 
  7129     0111                     	;# 
  7130     0112                     	;# 
  7131     0113                     	;# 
  7132     0114                     	;# 
  7133     0115                     	;# 
  7134     0116                     	;# 
  7135     0117                     	;# 
  7136     0118                     	;# 
  7137     0119                     	;# 
  7138     0119                     	;# 
  7139     0119                     	;# 
  7140     011A                     	;# 
  7141     011A                     	;# 
  7142     011A                     	;# 
  7143     011B                     	;# 
  7144     011B                     	;# 
  7145     011B                     	;# 
  7146     011B                     	;# 
  7147     011B                     	;# 
  7148     011C                     	;# 
  7149     011C                     	;# 
  7150     011C                     	;# 
  7151     011D                     	;# 
  7152     011D                     	;# 
  7153     011D                     	;# 
  7154     011E                     	;# 
  7155     011E                     	;# 
  7156     011E                     	;# 
  7157     011F                     	;# 
  7158     011F                     	;# 
  7159     011F                     	;# 
  7160     011F                     	;# 
  7161     011F                     	;# 
  7162     018C                     	;# 
  7163     018D                     	;# 
  7164     018E                     	;# 
  7165     018F                     	;# 
  7166     0190                     	;# 
  7167     0191                     	;# 
  7168     0192                     	;# 
  7169     0196                     	;# 
  7170     0197                     	;# 
  7171     0198                     	;# 
  7172     0199                     	;# 
  7173     019A                     	;# 
  7174     019B                     	;# 
  7175     019C                     	;# 
  7176     020C                     	;# 
  7177     020D                     	;# 
  7178     020E                     	;# 
  7179     020E                     	;# 
  7180     020F                     	;# 
  7181     020F                     	;# 
  7182     0210                     	;# 
  7183     0210                     	;# 
  7184     0211                     	;# 
  7185     0211                     	;# 
  7186     0212                     	;# 
  7187     0213                     	;# 
  7188     0214                     	;# 
  7189     0214                     	;# 
  7190     0215                     	;# 
  7191     0215                     	;# 
  7192     0216                     	;# 
  7193     0216                     	;# 
  7194     0217                     	;# 
  7195     0217                     	;# 
  7196     0218                     	;# 
  7197     0219                     	;# 
  7198     021A                     	;# 
  7199     021A                     	;# 
  7200     021B                     	;# 
  7201     021B                     	;# 
  7202     021C                     	;# 
  7203     021C                     	;# 
  7204     021D                     	;# 
  7205     021D                     	;# 
  7206     021E                     	;# 
  7207     021F                     	;# 
  7208     028C                     	;# 
  7209     028C                     	;# 
  7210     028D                     	;# 
  7211     028D                     	;# 
  7212     028E                     	;# 
  7213     028F                     	;# 
  7214     0290                     	;# 
  7215     0291                     	;# 
  7216     0292                     	;# 
  7217     0292                     	;# 
  7218     0293                     	;# 
  7219     0293                     	;# 
  7220     0294                     	;# 
  7221     0295                     	;# 
  7222     0296                     	;# 
  7223     0297                     	;# 
  7224     0298                     	;# 
  7225     0298                     	;# 
  7226     0299                     	;# 
  7227     0299                     	;# 
  7228     029A                     	;# 
  7229     029B                     	;# 
  7230     029C                     	;# 
  7231     029D                     	;# 
  7232     029F                     	;# 
  7233     030C                     	;# 
  7234     030C                     	;# 
  7235     030D                     	;# 
  7236     030E                     	;# 
  7237     030F                     	;# 
  7238     0310                     	;# 
  7239     0310                     	;# 
  7240     0311                     	;# 
  7241     0312                     	;# 
  7242     0313                     	;# 
  7243     0314                     	;# 
  7244     0314                     	;# 
  7245     0315                     	;# 
  7246     0316                     	;# 
  7247     0317                     	;# 
  7248     0318                     	;# 
  7249     0318                     	;# 
  7250     0319                     	;# 
  7251     031A                     	;# 
  7252     031B                     	;# 
  7253     031C                     	;# 
  7254     031C                     	;# 
  7255     031D                     	;# 
  7256     031E                     	;# 
  7257     031F                     	;# 
  7258     038C                     	;# 
  7259     038C                     	;# 
  7260     038D                     	;# 
  7261     038E                     	;# 
  7262     0390                     	;# 
  7263     0390                     	;# 
  7264     0391                     	;# 
  7265     0392                     	;# 
  7266     048C                     	;# 
  7267     048C                     	;# 
  7268     048D                     	;# 
  7269     048E                     	;# 
  7270     048F                     	;# 
  7271     048F                     	;# 
  7272     0490                     	;# 
  7273     0491                     	;# 
  7274     0492                     	;# 
  7275     0492                     	;# 
  7276     0493                     	;# 
  7277     0494                     	;# 
  7278     0495                     	;# 
  7279     0495                     	;# 
  7280     0496                     	;# 
  7281     0497                     	;# 
  7282     0498                     	;# 
  7283     0499                     	;# 
  7284     049A                     	;# 
  7285     049B                     	;# 
  7286     049C                     	;# 
  7287     049D                     	;# 
  7288     050C                     	;# 
  7289     050C                     	;# 
  7290     050D                     	;# 
  7291     050E                     	;# 
  7292     050F                     	;# 
  7293     050F                     	;# 
  7294     0510                     	;# 
  7295     0511                     	;# 
  7296     0512                     	;# 
  7297     0512                     	;# 
  7298     0513                     	;# 
  7299     0514                     	;# 
  7300     0515                     	;# 
  7301     0515                     	;# 
  7302     0516                     	;# 
  7303     0517                     	;# 
  7304     0518                     	;# 
  7305     0519                     	;# 
  7306     051A                     	;# 
  7307     051B                     	;# 
  7308     051C                     	;# 
  7309     051D                     	;# 
  7310     058C                     	;# 
  7311     058C                     	;# 
  7312     058D                     	;# 
  7313     058E                     	;# 
  7314     058F                     	;# 
  7315     058F                     	;# 
  7316     0590                     	;# 
  7317     0591                     	;# 
  7318     0592                     	;# 
  7319     0593                     	;# 
  7320     059C                     	;# 
  7321     059C                     	;# 
  7322     059D                     	;# 
  7323     059D                     	;# 
  7324     059E                     	;# 
  7325     059F                     	;# 
  7326     060C                     	;# 
  7327     060C                     	;# 
  7328     060D                     	;# 
  7329     060D                     	;# 
  7330     060E                     	;# 
  7331     060F                     	;# 
  7332     0610                     	;# 
  7333     0611                     	;# 
  7334     0612                     	;# 
  7335     0613                     	;# 
  7336     0614                     	;# 
  7337     0616                     	;# 
  7338     0616                     	;# 
  7339     0617                     	;# 
  7340     0617                     	;# 
  7341     0618                     	;# 
  7342     0619                     	;# 
  7343     061A                     	;# 
  7344     061B                     	;# 
  7345     061C                     	;# 
  7346     061D                     	;# 
  7347     061E                     	;# 
  7348     068C                     	;# 
  7349     068D                     	;# 
  7350     068E                     	;# 
  7351     068F                     	;# 
  7352     0690                     	;# 
  7353     0691                     	;# 
  7354     0692                     	;# 
  7355     0693                     	;# 
  7356     0694                     	;# 
  7357     070C                     	;# 
  7358     070D                     	;# 
  7359     070E                     	;# 
  7360     070F                     	;# 
  7361     0710                     	;# 
  7362     0711                     	;# 
  7363     0712                     	;# 
  7364     0713                     	;# 
  7365     0714                     	;# 
  7366     0716                     	;# 
  7367     0717                     	;# 
  7368     0718                     	;# 
  7369     0719                     	;# 
  7370     071A                     	;# 
  7371     071B                     	;# 
  7372     071C                     	;# 
  7373     071D                     	;# 
  7374     071E                     	;# 
  7375     0796                     	;# 
  7376     0797                     	;# 
  7377     0798                     	;# 
  7378     0799                     	;# 
  7379     079A                     	;# 
  7380     079B                     	;# 
  7381     079C                     	;# 
  7382     079D                     	;# 
  7383     080C                     	;# 
  7384     080D                     	;# 
  7385     080E                     	;# 
  7386     080F                     	;# 
  7387     0810                     	;# 
  7388     0811                     	;# 
  7389     0813                     	;# 
  7390     0814                     	;# 
  7391     081A                     	;# 
  7392     081A                     	;# 
  7393     081B                     	;# 
  7394     081C                     	;# 
  7395     081C                     	;# 
  7396     081D                     	;# 
  7397     081E                     	;# 
  7398     081F                     	;# 
  7399     088C                     	;# 
  7400     088D                     	;# 
  7401     088E                     	;# 
  7402     088F                     	;# 
  7403     0890                     	;# 
  7404     0891                     	;# 
  7405     0892                     	;# 
  7406     0893                     	;# 
  7407     0895                     	;# 
  7408     0896                     	;# 
  7409     0897                     	;# 
  7410     0898                     	;# 
  7411     0899                     	;# 
  7412     089A                     	;# 
  7413     089B                     	;# 
  7414     090C                     	;# 
  7415     090E                     	;# 
  7416     090F                     	;# 
  7417     091F                     	;# 
  7418     098F                     	;# 
  7419     098F                     	;# 
  7420     0990                     	;# 
  7421     0991                     	;# 
  7422     0992                     	;# 
  7423     0993                     	;# 
  7424     0994                     	;# 
  7425     0995                     	;# 
  7426     0996                     	;# 
  7427     0997                     	;# 
  7428     0A19                     	;# 
  7429     0A19                     	;# 
  7430     0A1A                     	;# 
  7431     0A1A                     	;# 
  7432     0A1B                     	;# 
  7433     0A1B                     	;# 
  7434     0A1B                     	;# 
  7435     0A1C                     	;# 
  7436     0A1C                     	;# 
  7437     0A1D                     	;# 
  7438     0A1D                     	;# 
  7439     0A1E                     	;# 
  7440     0A1E                     	;# 
  7441     0A1F                     	;# 
  7442     0A1F                     	;# 
  7443     0A1F                     	;# 
  7444     1E0F                     	;# 
  7445     1E10                     	;# 
  7446     1E11                     	;# 
  7447     1E12                     	;# 
  7448     1E13                     	;# 
  7449     1E14                     	;# 
  7450     1E15                     	;# 
  7451     1E16                     	;# 
  7452     1E17                     	;# 
  7453     1E18                     	;# 
  7454     1E19                     	;# 
  7455     1E1A                     	;# 
  7456     1E1B                     	;# 
  7457     1E1C                     	;# 
  7458     1E1D                     	;# 
  7459     1E1E                     	;# 
  7460     1E1F                     	;# 
  7461     1E20                     	;# 
  7462     1E21                     	;# 
  7463     1E22                     	;# 
  7464     1E23                     	;# 
  7465     1E24                     	;# 
  7466     1E25                     	;# 
  7467     1E26                     	;# 
  7468     1E27                     	;# 
  7469     1E28                     	;# 
  7470     1E29                     	;# 
  7471     1E2A                     	;# 
  7472     1E2B                     	;# 
  7473     1E2C                     	;# 
  7474     1E2D                     	;# 
  7475     1E2E                     	;# 
  7476     1E2F                     	;# 
  7477     1E30                     	;# 
  7478     1E31                     	;# 
  7479     1E32                     	;# 
  7480     1E33                     	;# 
  7481     1E34                     	;# 
  7482     1E35                     	;# 
  7483     1E36                     	;# 
  7484     1E37                     	;# 
  7485     1E8F                     	;# 
  7486     1E90                     	;# 
  7487     1E91                     	;# 
  7488     1E92                     	;# 
  7489     1E93                     	;# 
  7490     1E94                     	;# 
  7491     1E95                     	;# 
  7492     1E96                     	;# 
  7493     1E97                     	;# 
  7494     1E9C                     	;# 
  7495     1E9D                     	;# 
  7496     1E9E                     	;# 
  7497     1EA1                     	;# 
  7498     1EA2                     	;# 
  7499     1EA3                     	;# 
  7500     1EA4                     	;# 
  7501     1EA5                     	;# 
  7502     1EA9                     	;# 
  7503     1EAA                     	;# 
  7504     1EAB                     	;# 
  7505     1EAC                     	;# 
  7506     1EB1                     	;# 
  7507     1EB2                     	;# 
  7508     1EB3                     	;# 
  7509     1EB8                     	;# 
  7510     1EB9                     	;# 
  7511     1EBA                     	;# 
  7512     1EBB                     	;# 
  7513     1EBC                     	;# 
  7514     1EBD                     	;# 
  7515     1EBE                     	;# 
  7516     1EC3                     	;# 
  7517     1EC5                     	;# 
  7518     1EC6                     	;# 
  7519     1EC7                     	;# 
  7520     1EC8                     	;# 
  7521     1EC9                     	;# 
  7522     1ECA                     	;# 
  7523     1ECB                     	;# 
  7524     1ECC                     	;# 
  7525     1ECD                     	;# 
  7526     1ECE                     	;# 
  7527     1F10                     	;# 
  7528     1F11                     	;# 
  7529     1F12                     	;# 
  7530     1F13                     	;# 
  7531     1F14                     	;# 
  7532     1F15                     	;# 
  7533     1F16                     	;# 
  7534     1F17                     	;# 
  7535     1F18                     	;# 
  7536     1F19                     	;# 
  7537     1F1A                     	;# 
  7538     1F1B                     	;# 
  7539     1F1C                     	;# 
  7540     1F1D                     	;# 
  7541     1F1E                     	;# 
  7542     1F1F                     	;# 
  7543     1F20                     	;# 
  7544     1F21                     	;# 
  7545     1F22                     	;# 
  7546     1F23                     	;# 
  7547     1F24                     	;# 
  7548     1F25                     	;# 
  7549     1F26                     	;# 
  7550     1F27                     	;# 
  7551     1F38                     	;# 
  7552     1F39                     	;# 
  7553     1F3A                     	;# 
  7554     1F3B                     	;# 
  7555     1F3C                     	;# 
  7556     1F3D                     	;# 
  7557     1F3E                     	;# 
  7558     1F3F                     	;# 
  7559     1F43                     	;# 
  7560     1F44                     	;# 
  7561     1F45                     	;# 
  7562     1F46                     	;# 
  7563     1F47                     	;# 
  7564     1F48                     	;# 
  7565     1F49                     	;# 
  7566     1F4A                     	;# 
  7567     1F4E                     	;# 
  7568     1F4F                     	;# 
  7569     1F50                     	;# 
  7570     1F51                     	;# 
  7571     1F52                     	;# 
  7572     1F53                     	;# 
  7573     1F54                     	;# 
  7574     1F55                     	;# 
  7575     1F65                     	;# 
  7576     1F66                     	;# 
  7577     1F67                     	;# 
  7578     1F68                     	;# 
  7579     1F69                     	;# 
  7580     1F6A                     	;# 
  7581     1F6B                     	;# 
  7582     1FE4                     	;# 
  7583     1FE5                     	;# 
  7584     1FE6                     	;# 
  7585     1FE7                     	;# 
  7586     1FE8                     	;# 
  7587     1FE8                     	;# 
  7588     1FE9                     	;# 
  7589     1FEA                     	;# 
  7590     1FEB                     	;# 
  7591     1FED                     	;# 
  7592     1FEE                     	;# 
  7593     1FEF                     	;# 
  7594     0000                     	;# 
  7595     0001                     	;# 
  7596     0002                     	;# 
  7597     0003                     	;# 
  7598     0004                     	;# 
  7599     0005                     	;# 
  7600     0006                     	;# 
  7601     0007                     	;# 
  7602     0008                     	;# 
  7603     0009                     	;# 
  7604     000A                     	;# 
  7605     000B                     	;# 
  7606     000C                     	;# 
  7607     000D                     	;# 
  7608     000E                     	;# 
  7609     0010                     	;# 
  7610     0012                     	;# 
  7611     0013                     	;# 
  7612     0014                     	;# 
  7613     0016                     	;# 
  7614     0018                     	;# 
  7615     0019                     	;# 
  7616     001A                     	;# 
  7617     001C                     	;# 
  7618     008C                     	;# 
  7619     008C                     	;# 
  7620     008D                     	;# 
  7621     008E                     	;# 
  7622     008E                     	;# 
  7623     008F                     	;# 
  7624     0090                     	;# 
  7625     0090                     	;# 
  7626     0091                     	;# 
  7627     0092                     	;# 
  7628     0092                     	;# 
  7629     0093                     	;# 
  7630     0094                     	;# 
  7631     0094                     	;# 
  7632     0095                     	;# 
  7633     0096                     	;# 
  7634     0096                     	;# 
  7635     0097                     	;# 
  7636     0098                     	;# 
  7637     0099                     	;# 
  7638     009A                     	;# 
  7639     009B                     	;# 
  7640     009B                     	;# 
  7641     009C                     	;# 
  7642     009D                     	;# 
  7643     009D                     	;# 
  7644     009E                     	;# 
  7645     009F                     	;# 
  7646     010C                     	;# 
  7647     010C                     	;# 
  7648     010D                     	;# 
  7649     010E                     	;# 
  7650     010F                     	;# 
  7651     010F                     	;# 
  7652     0110                     	;# 
  7653     0111                     	;# 
  7654     0112                     	;# 
  7655     0113                     	;# 
  7656     0114                     	;# 
  7657     0115                     	;# 
  7658     0116                     	;# 
  7659     0117                     	;# 
  7660     0118                     	;# 
  7661     0119                     	;# 
  7662     0119                     	;# 
  7663     0119                     	;# 
  7664     011A                     	;# 
  7665     011A                     	;# 
  7666     011A                     	;# 
  7667     011B                     	;# 
  7668     011B                     	;# 
  7669     011B                     	;# 
  7670     011B                     	;# 
  7671     011B                     	;# 
  7672     011C                     	;# 
  7673     011C                     	;# 
  7674     011C                     	;# 
  7675     011D                     	;# 
  7676     011D                     	;# 
  7677     011D                     	;# 
  7678     011E                     	;# 
  7679     011E                     	;# 
  7680     011E                     	;# 
  7681     011F                     	;# 
  7682     011F                     	;# 
  7683     011F                     	;# 
  7684     011F                     	;# 
  7685     011F                     	;# 
  7686     018C                     	;# 
  7687     018D                     	;# 
  7688     018E                     	;# 
  7689     018F                     	;# 
  7690     0190                     	;# 
  7691     0191                     	;# 
  7692     0192                     	;# 
  7693     0196                     	;# 
  7694     0197                     	;# 
  7695     0198                     	;# 
  7696     0199                     	;# 
  7697     019A                     	;# 
  7698     019B                     	;# 
  7699     019C                     	;# 
  7700     020C                     	;# 
  7701     020D                     	;# 
  7702     020E                     	;# 
  7703     020E                     	;# 
  7704     020F                     	;# 
  7705     020F                     	;# 
  7706     0210                     	;# 
  7707     0210                     	;# 
  7708     0211                     	;# 
  7709     0211                     	;# 
  7710     0212                     	;# 
  7711     0213                     	;# 
  7712     0214                     	;# 
  7713     0214                     	;# 
  7714     0215                     	;# 
  7715     0215                     	;# 
  7716     0216                     	;# 
  7717     0216                     	;# 
  7718     0217                     	;# 
  7719     0217                     	;# 
  7720     0218                     	;# 
  7721     0219                     	;# 
  7722     021A                     	;# 
  7723     021A                     	;# 
  7724     021B                     	;# 
  7725     021B                     	;# 
  7726     021C                     	;# 
  7727     021C                     	;# 
  7728     021D                     	;# 
  7729     021D                     	;# 
  7730     021E                     	;# 
  7731     021F                     	;# 
  7732     028C                     	;# 
  7733     028C                     	;# 
  7734     028D                     	;# 
  7735     028D                     	;# 
  7736     028E                     	;# 
  7737     028F                     	;# 
  7738     0290                     	;# 
  7739     0291                     	;# 
  7740     0292                     	;# 
  7741     0292                     	;# 
  7742     0293                     	;# 
  7743     0293                     	;# 
  7744     0294                     	;# 
  7745     0295                     	;# 
  7746     0296                     	;# 
  7747     0297                     	;# 
  7748     0298                     	;# 
  7749     0298                     	;# 
  7750     0299                     	;# 
  7751     0299                     	;# 
  7752     029A                     	;# 
  7753     029B                     	;# 
  7754     029C                     	;# 
  7755     029D                     	;# 
  7756     029F                     	;# 
  7757     030C                     	;# 
  7758     030C                     	;# 
  7759     030D                     	;# 
  7760     030E                     	;# 
  7761     030F                     	;# 
  7762     0310                     	;# 
  7763     0310                     	;# 
  7764     0311                     	;# 
  7765     0312                     	;# 
  7766     0313                     	;# 
  7767     0314                     	;# 
  7768     0314                     	;# 
  7769     0315                     	;# 
  7770     0316                     	;# 
  7771     0317                     	;# 
  7772     0318                     	;# 
  7773     0318                     	;# 
  7774     0319                     	;# 
  7775     031A                     	;# 
  7776     031B                     	;# 
  7777     031C                     	;# 
  7778     031C                     	;# 
  7779     031D                     	;# 
  7780     031E                     	;# 
  7781     031F                     	;# 
  7782     038C                     	;# 
  7783     038C                     	;# 
  7784     038D                     	;# 
  7785     038E                     	;# 
  7786     0390                     	;# 
  7787     0390                     	;# 
  7788     0391                     	;# 
  7789     0392                     	;# 
  7790     048C                     	;# 
  7791     048C                     	;# 
  7792     048D                     	;# 
  7793     048E                     	;# 
  7794     048F                     	;# 
  7795     048F                     	;# 
  7796     0490                     	;# 
  7797     0491                     	;# 
  7798     0492                     	;# 
  7799     0492                     	;# 
  7800     0493                     	;# 
  7801     0494                     	;# 
  7802     0495                     	;# 
  7803     0495                     	;# 
  7804     0496                     	;# 
  7805     0497                     	;# 
  7806     0498                     	;# 
  7807     0499                     	;# 
  7808     049A                     	;# 
  7809     049B                     	;# 
  7810     049C                     	;# 
  7811     049D                     	;# 
  7812     050C                     	;# 
  7813     050C                     	;# 
  7814     050D                     	;# 
  7815     050E                     	;# 
  7816     050F                     	;# 
  7817     050F                     	;# 
  7818     0510                     	;# 
  7819     0511                     	;# 
  7820     0512                     	;# 
  7821     0512                     	;# 
  7822     0513                     	;# 
  7823     0514                     	;# 
  7824     0515                     	;# 
  7825     0515                     	;# 
  7826     0516                     	;# 
  7827     0517                     	;# 
  7828     0518                     	;# 
  7829     0519                     	;# 
  7830     051A                     	;# 
  7831     051B                     	;# 
  7832     051C                     	;# 
  7833     051D                     	;# 
  7834     058C                     	;# 
  7835     058C                     	;# 
  7836     058D                     	;# 
  7837     058E                     	;# 
  7838     058F                     	;# 
  7839     058F                     	;# 
  7840     0590                     	;# 
  7841     0591                     	;# 
  7842     0592                     	;# 
  7843     0593                     	;# 
  7844     059C                     	;# 
  7845     059C                     	;# 
  7846     059D                     	;# 
  7847     059D                     	;# 
  7848     059E                     	;# 
  7849     059F                     	;# 
  7850     060C                     	;# 
  7851     060C                     	;# 
  7852     060D                     	;# 
  7853     060D                     	;# 
  7854     060E                     	;# 
  7855     060F                     	;# 
  7856     0610                     	;# 
  7857     0611                     	;# 
  7858     0612                     	;# 
  7859     0613                     	;# 
  7860     0614                     	;# 
  7861     0616                     	;# 
  7862     0616                     	;# 
  7863     0617                     	;# 
  7864     0617                     	;# 
  7865     0618                     	;# 
  7866     0619                     	;# 
  7867     061A                     	;# 
  7868     061B                     	;# 
  7869     061C                     	;# 
  7870     061D                     	;# 
  7871     061E                     	;# 
  7872     068C                     	;# 
  7873     068D                     	;# 
  7874     068E                     	;# 
  7875     068F                     	;# 
  7876     0690                     	;# 
  7877     0691                     	;# 
  7878     0692                     	;# 
  7879     0693                     	;# 
  7880     0694                     	;# 
  7881     070C                     	;# 
  7882     070D                     	;# 
  7883     070E                     	;# 
  7884     070F                     	;# 
  7885     0710                     	;# 
  7886     0711                     	;# 
  7887     0712                     	;# 
  7888     0713                     	;# 
  7889     0714                     	;# 
  7890     0716                     	;# 
  7891     0717                     	;# 
  7892     0718                     	;# 
  7893     0719                     	;# 
  7894     071A                     	;# 
  7895     071B                     	;# 
  7896     071C                     	;# 
  7897     071D                     	;# 
  7898     071E                     	;# 
  7899     0796                     	;# 
  7900     0797                     	;# 
  7901     0798                     	;# 
  7902     0799                     	;# 
  7903     079A                     	;# 
  7904     079B                     	;# 
  7905     079C                     	;# 
  7906     079D                     	;# 
  7907     080C                     	;# 
  7908     080D                     	;# 
  7909     080E                     	;# 
  7910     080F                     	;# 
  7911     0810                     	;# 
  7912     0811                     	;# 
  7913     0813                     	;# 
  7914     0814                     	;# 
  7915     081A                     	;# 
  7916     081A                     	;# 
  7917     081B                     	;# 
  7918     081C                     	;# 
  7919     081C                     	;# 
  7920     081D                     	;# 
  7921     081E                     	;# 
  7922     081F                     	;# 
  7923     088C                     	;# 
  7924     088D                     	;# 
  7925     088E                     	;# 
  7926     088F                     	;# 
  7927     0890                     	;# 
  7928     0891                     	;# 
  7929     0892                     	;# 
  7930     0893                     	;# 
  7931     0895                     	;# 
  7932     0896                     	;# 
  7933     0897                     	;# 
  7934     0898                     	;# 
  7935     0899                     	;# 
  7936     089A                     	;# 
  7937     089B                     	;# 
  7938     090C                     	;# 
  7939     090E                     	;# 
  7940     090F                     	;# 
  7941     091F                     	;# 
  7942     098F                     	;# 
  7943     098F                     	;# 
  7944     0990                     	;# 
  7945     0991                     	;# 
  7946     0992                     	;# 
  7947     0993                     	;# 
  7948     0994                     	;# 
  7949     0995                     	;# 
  7950     0996                     	;# 
  7951     0997                     	;# 
  7952     0A19                     	;# 
  7953     0A19                     	;# 
  7954     0A1A                     	;# 
  7955     0A1A                     	;# 
  7956     0A1B                     	;# 
  7957     0A1B                     	;# 
  7958     0A1B                     	;# 
  7959     0A1C                     	;# 
  7960     0A1C                     	;# 
  7961     0A1D                     	;# 
  7962     0A1D                     	;# 
  7963     0A1E                     	;# 
  7964     0A1E                     	;# 
  7965     0A1F                     	;# 
  7966     0A1F                     	;# 
  7967     0A1F                     	;# 
  7968     1E0F                     	;# 
  7969     1E10                     	;# 
  7970     1E11                     	;# 
  7971     1E12                     	;# 
  7972     1E13                     	;# 
  7973     1E14                     	;# 
  7974     1E15                     	;# 
  7975     1E16                     	;# 
  7976     1E17                     	;# 
  7977     1E18                     	;# 
  7978     1E19                     	;# 
  7979     1E1A                     	;# 
  7980     1E1B                     	;# 
  7981     1E1C                     	;# 
  7982     1E1D                     	;# 
  7983     1E1E                     	;# 
  7984     1E1F                     	;# 
  7985     1E20                     	;# 
  7986     1E21                     	;# 
  7987     1E22                     	;# 
  7988     1E23                     	;# 
  7989     1E24                     	;# 
  7990     1E25                     	;# 
  7991     1E26                     	;# 
  7992     1E27                     	;# 
  7993     1E28                     	;# 
  7994     1E29                     	;# 
  7995     1E2A                     	;# 
  7996     1E2B                     	;# 
  7997     1E2C                     	;# 
  7998     1E2D                     	;# 
  7999     1E2E                     	;# 
  8000     1E2F                     	;# 
  8001     1E30                     	;# 
  8002     1E31                     	;# 
  8003     1E32                     	;# 
  8004     1E33                     	;# 
  8005     1E34                     	;# 
  8006     1E35                     	;# 
  8007     1E36                     	;# 
  8008     1E37                     	;# 
  8009     1E8F                     	;# 
  8010     1E90                     	;# 
  8011     1E91                     	;# 
  8012     1E92                     	;# 
  8013     1E93                     	;# 
  8014     1E94                     	;# 
  8015     1E95                     	;# 
  8016     1E96                     	;# 
  8017     1E97                     	;# 
  8018     1E9C                     	;# 
  8019     1E9D                     	;# 
  8020     1E9E                     	;# 
  8021     1EA1                     	;# 
  8022     1EA2                     	;# 
  8023     1EA3                     	;# 
  8024     1EA4                     	;# 
  8025     1EA5                     	;# 
  8026     1EA9                     	;# 
  8027     1EAA                     	;# 
  8028     1EAB                     	;# 
  8029     1EAC                     	;# 
  8030     1EB1                     	;# 
  8031     1EB2                     	;# 
  8032     1EB3                     	;# 
  8033     1EB8                     	;# 
  8034     1EB9                     	;# 
  8035     1EBA                     	;# 
  8036     1EBB                     	;# 
  8037     1EBC                     	;# 
  8038     1EBD                     	;# 
  8039     1EBE                     	;# 
  8040     1EC3                     	;# 
  8041     1EC5                     	;# 
  8042     1EC6                     	;# 
  8043     1EC7                     	;# 
  8044     1EC8                     	;# 
  8045     1EC9                     	;# 
  8046     1ECA                     	;# 
  8047     1ECB                     	;# 
  8048     1ECC                     	;# 
  8049     1ECD                     	;# 
  8050     1ECE                     	;# 
  8051     1F10                     	;# 
  8052     1F11                     	;# 
  8053     1F12                     	;# 
  8054     1F13                     	;# 
  8055     1F14                     	;# 
  8056     1F15                     	;# 
  8057     1F16                     	;# 
  8058     1F17                     	;# 
  8059     1F18                     	;# 
  8060     1F19                     	;# 
  8061     1F1A                     	;# 
  8062     1F1B                     	;# 
  8063     1F1C                     	;# 
  8064     1F1D                     	;# 
  8065     1F1E                     	;# 
  8066     1F1F                     	;# 
  8067     1F20                     	;# 
  8068     1F21                     	;# 
  8069     1F22                     	;# 
  8070     1F23                     	;# 
  8071     1F24                     	;# 
  8072     1F25                     	;# 
  8073     1F26                     	;# 
  8074     1F27                     	;# 
  8075     1F38                     	;# 
  8076     1F39                     	;# 
  8077     1F3A                     	;# 
  8078     1F3B                     	;# 
  8079     1F3C                     	;# 
  8080     1F3D                     	;# 
  8081     1F3E                     	;# 
  8082     1F3F                     	;# 
  8083     1F43                     	;# 
  8084     1F44                     	;# 
  8085     1F45                     	;# 
  8086     1F46                     	;# 
  8087     1F47                     	;# 
  8088     1F48                     	;# 
  8089     1F49                     	;# 
  8090     1F4A                     	;# 
  8091     1F4E                     	;# 
  8092     1F4F                     	;# 
  8093     1F50                     	;# 
  8094     1F51                     	;# 
  8095     1F52                     	;# 
  8096     1F53                     	;# 
  8097     1F54                     	;# 
  8098     1F55                     	;# 
  8099     1F65                     	;# 
  8100     1F66                     	;# 
  8101     1F67                     	;# 
  8102     1F68                     	;# 
  8103     1F69                     	;# 
  8104     1F6A                     	;# 
  8105     1F6B                     	;# 
  8106     1FE4                     	;# 
  8107     1FE5                     	;# 
  8108     1FE6                     	;# 
  8109     1FE7                     	;# 
  8110     1FE8                     	;# 
  8111     1FE8                     	;# 
  8112     1FE9                     	;# 
  8113     1FEA                     	;# 
  8114     1FEB                     	;# 
  8115     1FED                     	;# 
  8116     1FEE                     	;# 
  8117     1FEF                     	;# 
  8118     0000                     	;# 
  8119     0001                     	;# 
  8120     0002                     	;# 
  8121     0003                     	;# 
  8122     0004                     	;# 
  8123     0005                     	;# 
  8124     0006                     	;# 
  8125     0007                     	;# 
  8126     0008                     	;# 
  8127     0009                     	;# 
  8128     000A                     	;# 
  8129     000B                     	;# 
  8130     000C                     	;# 
  8131     000D                     	;# 
  8132     000E                     	;# 
  8133     0010                     	;# 
  8134     0012                     	;# 
  8135     0013                     	;# 
  8136     0014                     	;# 
  8137     0016                     	;# 
  8138     0018                     	;# 
  8139     0019                     	;# 
  8140     001A                     	;# 
  8141     001C                     	;# 
  8142     008C                     	;# 
  8143     008C                     	;# 
  8144     008D                     	;# 
  8145     008E                     	;# 
  8146     008E                     	;# 
  8147     008F                     	;# 
  8148     0090                     	;# 
  8149     0090                     	;# 
  8150     0091                     	;# 
  8151     0092                     	;# 
  8152     0092                     	;# 
  8153     0093                     	;# 
  8154     0094                     	;# 
  8155     0094                     	;# 
  8156     0095                     	;# 
  8157     0096                     	;# 
  8158     0096                     	;# 
  8159     0097                     	;# 
  8160     0098                     	;# 
  8161     0099                     	;# 
  8162     009A                     	;# 
  8163     009B                     	;# 
  8164     009B                     	;# 
  8165     009C                     	;# 
  8166     009D                     	;# 
  8167     009D                     	;# 
  8168     009E                     	;# 
  8169     009F                     	;# 
  8170     010C                     	;# 
  8171     010C                     	;# 
  8172     010D                     	;# 
  8173     010E                     	;# 
  8174     010F                     	;# 
  8175     010F                     	;# 
  8176     0110                     	;# 
  8177     0111                     	;# 
  8178     0112                     	;# 
  8179     0113                     	;# 
  8180     0114                     	;# 
  8181     0115                     	;# 
  8182     0116                     	;# 
  8183     0117                     	;# 
  8184     0118                     	;# 
  8185     0119                     	;# 
  8186     0119                     	;# 
  8187     0119                     	;# 
  8188     011A                     	;# 
  8189     011A                     	;# 
  8190     011A                     	;# 
  8191     011B                     	;# 
  8192     011B                     	;# 
  8193     011B                     	;# 
  8194     011B                     	;# 
  8195     011B                     	;# 
  8196     011C                     	;# 
  8197     011C                     	;# 
  8198     011C                     	;# 
  8199     011D                     	;# 
  8200     011D                     	;# 
  8201     011D                     	;# 
  8202     011E                     	;# 
  8203     011E                     	;# 
  8204     011E                     	;# 
  8205     011F                     	;# 
  8206     011F                     	;# 
  8207     011F                     	;# 
  8208     011F                     	;# 
  8209     011F                     	;# 
  8210     018C                     	;# 
  8211     018D                     	;# 
  8212     018E                     	;# 
  8213     018F                     	;# 
  8214     0190                     	;# 
  8215     0191                     	;# 
  8216     0192                     	;# 
  8217     0196                     	;# 
  8218     0197                     	;# 
  8219     0198                     	;# 
  8220     0199                     	;# 
  8221     019A                     	;# 
  8222     019B                     	;# 
  8223     019C                     	;# 
  8224     020C                     	;# 
  8225     020D                     	;# 
  8226     020E                     	;# 
  8227     020E                     	;# 
  8228     020F                     	;# 
  8229     020F                     	;# 
  8230     0210                     	;# 
  8231     0210                     	;# 
  8232     0211                     	;# 
  8233     0211                     	;# 
  8234     0212                     	;# 
  8235     0213                     	;# 
  8236     0214                     	;# 
  8237     0214                     	;# 
  8238     0215                     	;# 
  8239     0215                     	;# 
  8240     0216                     	;# 
  8241     0216                     	;# 
  8242     0217                     	;# 
  8243     0217                     	;# 
  8244     0218                     	;# 
  8245     0219                     	;# 
  8246     021A                     	;# 
  8247     021A                     	;# 
  8248     021B                     	;# 
  8249     021B                     	;# 
  8250     021C                     	;# 
  8251     021C                     	;# 
  8252     021D                     	;# 
  8253     021D                     	;# 
  8254     021E                     	;# 
  8255     021F                     	;# 
  8256     028C                     	;# 
  8257     028C                     	;# 
  8258     028D                     	;# 
  8259     028D                     	;# 
  8260     028E                     	;# 
  8261     028F                     	;# 
  8262     0290                     	;# 
  8263     0291                     	;# 
  8264     0292                     	;# 
  8265     0292                     	;# 
  8266     0293                     	;# 
  8267     0293                     	;# 
  8268     0294                     	;# 
  8269     0295                     	;# 
  8270     0296                     	;# 
  8271     0297                     	;# 
  8272     0298                     	;# 
  8273     0298                     	;# 
  8274     0299                     	;# 
  8275     0299                     	;# 
  8276     029A                     	;# 
  8277     029B                     	;# 
  8278     029C                     	;# 
  8279     029D                     	;# 
  8280     029F                     	;# 
  8281     030C                     	;# 
  8282     030C                     	;# 
  8283     030D                     	;# 
  8284     030E                     	;# 
  8285     030F                     	;# 
  8286     0310                     	;# 
  8287     0310                     	;# 
  8288     0311                     	;# 
  8289     0312                     	;# 
  8290     0313                     	;# 
  8291     0314                     	;# 
  8292     0314                     	;# 
  8293     0315                     	;# 
  8294     0316                     	;# 
  8295     0317                     	;# 
  8296     0318                     	;# 
  8297     0318                     	;# 
  8298     0319                     	;# 
  8299     031A                     	;# 
  8300     031B                     	;# 
  8301     031C                     	;# 
  8302     031C                     	;# 
  8303     031D                     	;# 
  8304     031E                     	;# 
  8305     031F                     	;# 
  8306     038C                     	;# 
  8307     038C                     	;# 
  8308     038D                     	;# 
  8309     038E                     	;# 
  8310     0390                     	;# 
  8311     0390                     	;# 
  8312     0391                     	;# 
  8313     0392                     	;# 
  8314     048C                     	;# 
  8315     048C                     	;# 
  8316     048D                     	;# 
  8317     048E                     	;# 
  8318     048F                     	;# 
  8319     048F                     	;# 
  8320     0490                     	;# 
  8321     0491                     	;# 
  8322     0492                     	;# 
  8323     0492                     	;# 
  8324     0493                     	;# 
  8325     0494                     	;# 
  8326     0495                     	;# 
  8327     0495                     	;# 
  8328     0496                     	;# 
  8329     0497                     	;# 
  8330     0498                     	;# 
  8331     0499                     	;# 
  8332     049A                     	;# 
  8333     049B                     	;# 
  8334     049C                     	;# 
  8335     049D                     	;# 
  8336     050C                     	;# 
  8337     050C                     	;# 
  8338     050D                     	;# 
  8339     050E                     	;# 
  8340     050F                     	;# 
  8341     050F                     	;# 
  8342     0510                     	;# 
  8343     0511                     	;# 
  8344     0512                     	;# 
  8345     0512                     	;# 
  8346     0513                     	;# 
  8347     0514                     	;# 
  8348     0515                     	;# 
  8349     0515                     	;# 
  8350     0516                     	;# 
  8351     0517                     	;# 
  8352     0518                     	;# 
  8353     0519                     	;# 
  8354     051A                     	;# 
  8355     051B                     	;# 
  8356     051C                     	;# 
  8357     051D                     	;# 
  8358     058C                     	;# 
  8359     058C                     	;# 
  8360     058D                     	;# 
  8361     058E                     	;# 
  8362     058F                     	;# 
  8363     058F                     	;# 
  8364     0590                     	;# 
  8365     0591                     	;# 
  8366     0592                     	;# 
  8367     0593                     	;# 
  8368     059C                     	;# 
  8369     059C                     	;# 
  8370     059D                     	;# 
  8371     059D                     	;# 
  8372     059E                     	;# 
  8373     059F                     	;# 
  8374     060C                     	;# 
  8375     060C                     	;# 
  8376     060D                     	;# 
  8377     060D                     	;# 
  8378     060E                     	;# 
  8379     060F                     	;# 
  8380     0610                     	;# 
  8381     0611                     	;# 
  8382     0612                     	;# 
  8383     0613                     	;# 
  8384     0614                     	;# 
  8385     0616                     	;# 
  8386     0616                     	;# 
  8387     0617                     	;# 
  8388     0617                     	;# 
  8389     0618                     	;# 
  8390     0619                     	;# 
  8391     061A                     	;# 
  8392     061B                     	;# 
  8393     061C                     	;# 
  8394     061D                     	;# 
  8395     061E                     	;# 
  8396     068C                     	;# 
  8397     068D                     	;# 
  8398     068E                     	;# 
  8399     068F                     	;# 
  8400     0690                     	;# 
  8401     0691                     	;# 
  8402     0692                     	;# 
  8403     0693                     	;# 
  8404     0694                     	;# 
  8405     070C                     	;# 
  8406     070D                     	;# 
  8407     070E                     	;# 
  8408     070F                     	;# 
  8409     0710                     	;# 
  8410     0711                     	;# 
  8411     0712                     	;# 
  8412     0713                     	;# 
  8413     0714                     	;# 
  8414     0716                     	;# 
  8415     0717                     	;# 
  8416     0718                     	;# 
  8417     0719                     	;# 
  8418     071A                     	;# 
  8419     071B                     	;# 
  8420     071C                     	;# 
  8421     071D                     	;# 
  8422     071E                     	;# 
  8423     0796                     	;# 
  8424     0797                     	;# 
  8425     0798                     	;# 
  8426     0799                     	;# 
  8427     079A                     	;# 
  8428     079B                     	;# 
  8429     079C                     	;# 
  8430     079D                     	;# 
  8431     080C                     	;# 
  8432     080D                     	;# 
  8433     080E                     	;# 
  8434     080F                     	;# 
  8435     0810                     	;# 
  8436     0811                     	;# 
  8437     0813                     	;# 
  8438     0814                     	;# 
  8439     081A                     	;# 
  8440     081A                     	;# 
  8441     081B                     	;# 
  8442     081C                     	;# 
  8443     081C                     	;# 
  8444     081D                     	;# 
  8445     081E                     	;# 
  8446     081F                     	;# 
  8447     088C                     	;# 
  8448     088D                     	;# 
  8449     088E                     	;# 
  8450     088F                     	;# 
  8451     0890                     	;# 
  8452     0891                     	;# 
  8453     0892                     	;# 
  8454     0893                     	;# 
  8455     0895                     	;# 
  8456     0896                     	;# 
  8457     0897                     	;# 
  8458     0898                     	;# 
  8459     0899                     	;# 
  8460     089A                     	;# 
  8461     089B                     	;# 
  8462     090C                     	;# 
  8463     090E                     	;# 
  8464     090F                     	;# 
  8465     091F                     	;# 
  8466     098F                     	;# 
  8467     098F                     	;# 
  8468     0990                     	;# 
  8469     0991                     	;# 
  8470     0992                     	;# 
  8471     0993                     	;# 
  8472     0994                     	;# 
  8473     0995                     	;# 
  8474     0996                     	;# 
  8475     0997                     	;# 
  8476     0A19                     	;# 
  8477     0A19                     	;# 
  8478     0A1A                     	;# 
  8479     0A1A                     	;# 
  8480     0A1B                     	;# 
  8481     0A1B                     	;# 
  8482     0A1B                     	;# 
  8483     0A1C                     	;# 
  8484     0A1C                     	;# 
  8485     0A1D                     	;# 
  8486     0A1D                     	;# 
  8487     0A1E                     	;# 
  8488     0A1E                     	;# 
  8489     0A1F                     	;# 
  8490     0A1F                     	;# 
  8491     0A1F                     	;# 
  8492     1E0F                     	;# 
  8493     1E10                     	;# 
  8494     1E11                     	;# 
  8495     1E12                     	;# 
  8496     1E13                     	;# 
  8497     1E14                     	;# 
  8498     1E15                     	;# 
  8499     1E16                     	;# 
  8500     1E17                     	;# 
  8501     1E18                     	;# 
  8502     1E19                     	;# 
  8503     1E1A                     	;# 
  8504     1E1B                     	;# 
  8505     1E1C                     	;# 
  8506     1E1D                     	;# 
  8507     1E1E                     	;# 
  8508     1E1F                     	;# 
  8509     1E20                     	;# 
  8510     1E21                     	;# 
  8511     1E22                     	;# 
  8512     1E23                     	;# 
  8513     1E24                     	;# 
  8514     1E25                     	;# 
  8515     1E26                     	;# 
  8516     1E27                     	;# 
  8517     1E28                     	;# 
  8518     1E29                     	;# 
  8519     1E2A                     	;# 
  8520     1E2B                     	;# 
  8521     1E2C                     	;# 
  8522     1E2D                     	;# 
  8523     1E2E                     	;# 
  8524     1E2F                     	;# 
  8525     1E30                     	;# 
  8526     1E31                     	;# 
  8527     1E32                     	;# 
  8528     1E33                     	;# 
  8529     1E34                     	;# 
  8530     1E35                     	;# 
  8531     1E36                     	;# 
  8532     1E37                     	;# 
  8533     1E8F                     	;# 
  8534     1E90                     	;# 
  8535     1E91                     	;# 
  8536     1E92                     	;# 
  8537     1E93                     	;# 
  8538     1E94                     	;# 
  8539     1E95                     	;# 
  8540     1E96                     	;# 
  8541     1E97                     	;# 
  8542     1E9C                     	;# 
  8543     1E9D                     	;# 
  8544     1E9E                     	;# 
  8545     1EA1                     	;# 
  8546     1EA2                     	;# 
  8547     1EA3                     	;# 
  8548     1EA4                     	;# 
  8549     1EA5                     	;# 
  8550     1EA9                     	;# 
  8551     1EAA                     	;# 
  8552     1EAB                     	;# 
  8553     1EAC                     	;# 
  8554     1EB1                     	;# 
  8555     1EB2                     	;# 
  8556     1EB3                     	;# 
  8557     1EB8                     	;# 
  8558     1EB9                     	;# 
  8559     1EBA                     	;# 
  8560     1EBB                     	;# 
  8561     1EBC                     	;# 
  8562     1EBD                     	;# 
  8563     1EBE                     	;# 
  8564     1EC3                     	;# 
  8565     1EC5                     	;# 
  8566     1EC6                     	;# 
  8567     1EC7                     	;# 
  8568     1EC8                     	;# 
  8569     1EC9                     	;# 
  8570     1ECA                     	;# 
  8571     1ECB                     	;# 
  8572     1ECC                     	;# 
  8573     1ECD                     	;# 
  8574     1ECE                     	;# 
  8575     1F10                     	;# 
  8576     1F11                     	;# 
  8577     1F12                     	;# 
  8578     1F13                     	;# 
  8579     1F14                     	;# 
  8580     1F15                     	;# 
  8581     1F16                     	;# 
  8582     1F17                     	;# 
  8583     1F18                     	;# 
  8584     1F19                     	;# 
  8585     1F1A                     	;# 
  8586     1F1B                     	;# 
  8587     1F1C                     	;# 
  8588     1F1D                     	;# 
  8589     1F1E                     	;# 
  8590     1F1F                     	;# 
  8591     1F20                     	;# 
  8592     1F21                     	;# 
  8593     1F22                     	;# 
  8594     1F23                     	;# 
  8595     1F24                     	;# 
  8596     1F25                     	;# 
  8597     1F26                     	;# 
  8598     1F27                     	;# 
  8599     1F38                     	;# 
  8600     1F39                     	;# 
  8601     1F3A                     	;# 
  8602     1F3B                     	;# 
  8603     1F3C                     	;# 
  8604     1F3D                     	;# 
  8605     1F3E                     	;# 
  8606     1F3F                     	;# 
  8607     1F43                     	;# 
  8608     1F44                     	;# 
  8609     1F45                     	;# 
  8610     1F46                     	;# 
  8611     1F47                     	;# 
  8612     1F48                     	;# 
  8613     1F49                     	;# 
  8614     1F4A                     	;# 
  8615     1F4E                     	;# 
  8616     1F4F                     	;# 
  8617     1F50                     	;# 
  8618     1F51                     	;# 
  8619     1F52                     	;# 
  8620     1F53                     	;# 
  8621     1F54                     	;# 
  8622     1F55                     	;# 
  8623     1F65                     	;# 
  8624     1F66                     	;# 
  8625     1F67                     	;# 
  8626     1F68                     	;# 
  8627     1F69                     	;# 
  8628     1F6A                     	;# 
  8629     1F6B                     	;# 
  8630     1FE4                     	;# 
  8631     1FE5                     	;# 
  8632     1FE6                     	;# 
  8633     1FE7                     	;# 
  8634     1FE8                     	;# 
  8635     1FE8                     	;# 
  8636     1FE9                     	;# 
  8637     1FEA                     	;# 
  8638     1FEB                     	;# 
  8639     1FED                     	;# 
  8640     1FEE                     	;# 
  8641     1FEF                     	;# 
  8642     0000                     	;# 
  8643     0001                     	;# 
  8644     0002                     	;# 
  8645     0003                     	;# 
  8646     0004                     	;# 
  8647     0005                     	;# 
  8648     0006                     	;# 
  8649     0007                     	;# 
  8650     0008                     	;# 
  8651     0009                     	;# 
  8652     000A                     	;# 
  8653     000B                     	;# 
  8654     000C                     	;# 
  8655     000D                     	;# 
  8656     000E                     	;# 
  8657     0010                     	;# 
  8658     0012                     	;# 
  8659     0013                     	;# 
  8660     0014                     	;# 
  8661     0016                     	;# 
  8662     0018                     	;# 
  8663     0019                     	;# 
  8664     001A                     	;# 
  8665     001C                     	;# 
  8666     008C                     	;# 
  8667     008C                     	;# 
  8668     008D                     	;# 
  8669     008E                     	;# 
  8670     008E                     	;# 
  8671     008F                     	;# 
  8672     0090                     	;# 
  8673     0090                     	;# 
  8674     0091                     	;# 
  8675     0092                     	;# 
  8676     0092                     	;# 
  8677     0093                     	;# 
  8678     0094                     	;# 
  8679     0094                     	;# 
  8680     0095                     	;# 
  8681     0096                     	;# 
  8682     0096                     	;# 
  8683     0097                     	;# 
  8684     0098                     	;# 
  8685     0099                     	;# 
  8686     009A                     	;# 
  8687     009B                     	;# 
  8688     009B                     	;# 
  8689     009C                     	;# 
  8690     009D                     	;# 
  8691     009D                     	;# 
  8692     009E                     	;# 
  8693     009F                     	;# 
  8694     010C                     	;# 
  8695     010C                     	;# 
  8696     010D                     	;# 
  8697     010E                     	;# 
  8698     010F                     	;# 
  8699     010F                     	;# 
  8700     0110                     	;# 
  8701     0111                     	;# 
  8702     0112                     	;# 
  8703     0113                     	;# 
  8704     0114                     	;# 
  8705     0115                     	;# 
  8706     0116                     	;# 
  8707     0117                     	;# 
  8708     0118                     	;# 
  8709     0119                     	;# 
  8710     0119                     	;# 
  8711     0119                     	;# 
  8712     011A                     	;# 
  8713     011A                     	;# 
  8714     011A                     	;# 
  8715     011B                     	;# 
  8716     011B                     	;# 
  8717     011B                     	;# 
  8718     011B                     	;# 
  8719     011B                     	;# 
  8720     011C                     	;# 
  8721     011C                     	;# 
  8722     011C                     	;# 
  8723     011D                     	;# 
  8724     011D                     	;# 
  8725     011D                     	;# 
  8726     011E                     	;# 
  8727     011E                     	;# 
  8728     011E                     	;# 
  8729     011F                     	;# 
  8730     011F                     	;# 
  8731     011F                     	;# 
  8732     011F                     	;# 
  8733     011F                     	;# 
  8734     018C                     	;# 
  8735     018D                     	;# 
  8736     018E                     	;# 
  8737     018F                     	;# 
  8738     0190                     	;# 
  8739     0191                     	;# 
  8740     0192                     	;# 
  8741     0196                     	;# 
  8742     0197                     	;# 
  8743     0198                     	;# 
  8744     0199                     	;# 
  8745     019A                     	;# 
  8746     019B                     	;# 
  8747     019C                     	;# 
  8748     020C                     	;# 
  8749     020D                     	;# 
  8750     020E                     	;# 
  8751     020E                     	;# 
  8752     020F                     	;# 
  8753     020F                     	;# 
  8754     0210                     	;# 
  8755     0210                     	;# 
  8756     0211                     	;# 
  8757     0211                     	;# 
  8758     0212                     	;# 
  8759     0213                     	;# 
  8760     0214                     	;# 
  8761     0214                     	;# 
  8762     0215                     	;# 
  8763     0215                     	;# 
  8764     0216                     	;# 
  8765     0216                     	;# 
  8766     0217                     	;# 
  8767     0217                     	;# 
  8768     0218                     	;# 
  8769     0219                     	;# 
  8770     021A                     	;# 
  8771     021A                     	;# 
  8772     021B                     	;# 
  8773     021B                     	;# 
  8774     021C                     	;# 
  8775     021C                     	;# 
  8776     021D                     	;# 
  8777     021D                     	;# 
  8778     021E                     	;# 
  8779     021F                     	;# 
  8780     028C                     	;# 
  8781     028C                     	;# 
  8782     028D                     	;# 
  8783     028D                     	;# 
  8784     028E                     	;# 
  8785     028F                     	;# 
  8786     0290                     	;# 
  8787     0291                     	;# 
  8788     0292                     	;# 
  8789     0292                     	;# 
  8790     0293                     	;# 
  8791     0293                     	;# 
  8792     0294                     	;# 
  8793     0295                     	;# 
  8794     0296                     	;# 
  8795     0297                     	;# 
  8796     0298                     	;# 
  8797     0298                     	;# 
  8798     0299                     	;# 
  8799     0299                     	;# 
  8800     029A                     	;# 
  8801     029B                     	;# 
  8802     029C                     	;# 
  8803     029D                     	;# 
  8804     029F                     	;# 
  8805     030C                     	;# 
  8806     030C                     	;# 
  8807     030D                     	;# 
  8808     030E                     	;# 
  8809     030F                     	;# 
  8810     0310                     	;# 
  8811     0310                     	;# 
  8812     0311                     	;# 
  8813     0312                     	;# 
  8814     0313                     	;# 
  8815     0314                     	;# 
  8816     0314                     	;# 
  8817     0315                     	;# 
  8818     0316                     	;# 
  8819     0317                     	;# 
  8820     0318                     	;# 
  8821     0318                     	;# 
  8822     0319                     	;# 
  8823     031A                     	;# 
  8824     031B                     	;# 
  8825     031C                     	;# 
  8826     031C                     	;# 
  8827     031D                     	;# 
  8828     031E                     	;# 
  8829     031F                     	;# 
  8830     038C                     	;# 
  8831     038C                     	;# 
  8832     038D                     	;# 
  8833     038E                     	;# 
  8834     0390                     	;# 
  8835     0390                     	;# 
  8836     0391                     	;# 
  8837     0392                     	;# 
  8838     048C                     	;# 
  8839     048C                     	;# 
  8840     048D                     	;# 
  8841     048E                     	;# 
  8842     048F                     	;# 
  8843     048F                     	;# 
  8844     0490                     	;# 
  8845     0491                     	;# 
  8846     0492                     	;# 
  8847     0492                     	;# 
  8848     0493                     	;# 
  8849     0494                     	;# 
  8850     0495                     	;# 
  8851     0495                     	;# 
  8852     0496                     	;# 
  8853     0497                     	;# 
  8854     0498                     	;# 
  8855     0499                     	;# 
  8856     049A                     	;# 
  8857     049B                     	;# 
  8858     049C                     	;# 
  8859     049D                     	;# 
  8860     050C                     	;# 
  8861     050C                     	;# 
  8862     050D                     	;# 
  8863     050E                     	;# 
  8864     050F                     	;# 
  8865     050F                     	;# 
  8866     0510                     	;# 
  8867     0511                     	;# 
  8868     0512                     	;# 
  8869     0512                     	;# 
  8870     0513                     	;# 
  8871     0514                     	;# 
  8872     0515                     	;# 
  8873     0515                     	;# 
  8874     0516                     	;# 
  8875     0517                     	;# 
  8876     0518                     	;# 
  8877     0519                     	;# 
  8878     051A                     	;# 
  8879     051B                     	;# 
  8880     051C                     	;# 
  8881     051D                     	;# 
  8882     058C                     	;# 
  8883     058C                     	;# 
  8884     058D                     	;# 
  8885     058E                     	;# 
  8886     058F                     	;# 
  8887     058F                     	;# 
  8888     0590                     	;# 
  8889     0591                     	;# 
  8890     0592                     	;# 
  8891     0593                     	;# 
  8892     059C                     	;# 
  8893     059C                     	;# 
  8894     059D                     	;# 
  8895     059D                     	;# 
  8896     059E                     	;# 
  8897     059F                     	;# 
  8898     060C                     	;# 
  8899     060C                     	;# 
  8900     060D                     	;# 
  8901     060D                     	;# 
  8902     060E                     	;# 
  8903     060F                     	;# 
  8904     0610                     	;# 
  8905     0611                     	;# 
  8906     0612                     	;# 
  8907     0613                     	;# 
  8908     0614                     	;# 
  8909     0616                     	;# 
  8910     0616                     	;# 
  8911     0617                     	;# 
  8912     0617                     	;# 
  8913     0618                     	;# 
  8914     0619                     	;# 
  8915     061A                     	;# 
  8916     061B                     	;# 
  8917     061C                     	;# 
  8918     061D                     	;# 
  8919     061E                     	;# 
  8920     068C                     	;# 
  8921     068D                     	;# 
  8922     068E                     	;# 
  8923     068F                     	;# 
  8924     0690                     	;# 
  8925     0691                     	;# 
  8926     0692                     	;# 
  8927     0693                     	;# 
  8928     0694                     	;# 
  8929     070C                     	;# 
  8930     070D                     	;# 
  8931     070E                     	;# 
  8932     070F                     	;# 
  8933     0710                     	;# 
  8934     0711                     	;# 
  8935     0712                     	;# 
  8936     0713                     	;# 
  8937     0714                     	;# 
  8938     0716                     	;# 
  8939     0717                     	;# 
  8940     0718                     	;# 
  8941     0719                     	;# 
  8942     071A                     	;# 
  8943     071B                     	;# 
  8944     071C                     	;# 
  8945     071D                     	;# 
  8946     071E                     	;# 
  8947     0796                     	;# 
  8948     0797                     	;# 
  8949     0798                     	;# 
  8950     0799                     	;# 
  8951     079A                     	;# 
  8952     079B                     	;# 
  8953     079C                     	;# 
  8954     079D                     	;# 
  8955     080C                     	;# 
  8956     080D                     	;# 
  8957     080E                     	;# 
  8958     080F                     	;# 
  8959     0810                     	;# 
  8960     0811                     	;# 
  8961     0813                     	;# 
  8962     0814                     	;# 
  8963     081A                     	;# 
  8964     081A                     	;# 
  8965     081B                     	;# 
  8966     081C                     	;# 
  8967     081C                     	;# 
  8968     081D                     	;# 
  8969     081E                     	;# 
  8970     081F                     	;# 
  8971     088C                     	;# 
  8972     088D                     	;# 
  8973     088E                     	;# 
  8974     088F                     	;# 
  8975     0890                     	;# 
  8976     0891                     	;# 
  8977     0892                     	;# 
  8978     0893                     	;# 
  8979     0895                     	;# 
  8980     0896                     	;# 
  8981     0897                     	;# 
  8982     0898                     	;# 
  8983     0899                     	;# 
  8984     089A                     	;# 
  8985     089B                     	;# 
  8986     090C                     	;# 
  8987     090E                     	;# 
  8988     090F                     	;# 
  8989     091F                     	;# 
  8990     098F                     	;# 
  8991     098F                     	;# 
  8992     0990                     	;# 
  8993     0991                     	;# 
  8994     0992                     	;# 
  8995     0993                     	;# 
  8996     0994                     	;# 
  8997     0995                     	;# 
  8998     0996                     	;# 
  8999     0997                     	;# 
  9000     0A19                     	;# 
  9001     0A19                     	;# 
  9002     0A1A                     	;# 
  9003     0A1A                     	;# 
  9004     0A1B                     	;# 
  9005     0A1B                     	;# 
  9006     0A1B                     	;# 
  9007     0A1C                     	;# 
  9008     0A1C                     	;# 
  9009     0A1D                     	;# 
  9010     0A1D                     	;# 
  9011     0A1E                     	;# 
  9012     0A1E                     	;# 
  9013     0A1F                     	;# 
  9014     0A1F                     	;# 
  9015     0A1F                     	;# 
  9016     1E0F                     	;# 
  9017     1E10                     	;# 
  9018     1E11                     	;# 
  9019     1E12                     	;# 
  9020     1E13                     	;# 
  9021     1E14                     	;# 
  9022     1E15                     	;# 
  9023     1E16                     	;# 
  9024     1E17                     	;# 
  9025     1E18                     	;# 
  9026     1E19                     	;# 
  9027     1E1A                     	;# 
  9028     1E1B                     	;# 
  9029     1E1C                     	;# 
  9030     1E1D                     	;# 
  9031     1E1E                     	;# 
  9032     1E1F                     	;# 
  9033     1E20                     	;# 
  9034     1E21                     	;# 
  9035     1E22                     	;# 
  9036     1E23                     	;# 
  9037     1E24                     	;# 
  9038     1E25                     	;# 
  9039     1E26                     	;# 
  9040     1E27                     	;# 
  9041     1E28                     	;# 
  9042     1E29                     	;# 
  9043     1E2A                     	;# 
  9044     1E2B                     	;# 
  9045     1E2C                     	;# 
  9046     1E2D                     	;# 
  9047     1E2E                     	;# 
  9048     1E2F                     	;# 
  9049     1E30                     	;# 
  9050     1E31                     	;# 
  9051     1E32                     	;# 
  9052     1E33                     	;# 
  9053     1E34                     	;# 
  9054     1E35                     	;# 
  9055     1E36                     	;# 
  9056     1E37                     	;# 
  9057     1E8F                     	;# 
  9058     1E90                     	;# 
  9059     1E91                     	;# 
  9060     1E92                     	;# 
  9061     1E93                     	;# 
  9062     1E94                     	;# 
  9063     1E95                     	;# 
  9064     1E96                     	;# 
  9065     1E97                     	;# 
  9066     1E9C                     	;# 
  9067     1E9D                     	;# 
  9068     1E9E                     	;# 
  9069     1EA1                     	;# 
  9070     1EA2                     	;# 
  9071     1EA3                     	;# 
  9072     1EA4                     	;# 
  9073     1EA5                     	;# 
  9074     1EA9                     	;# 
  9075     1EAA                     	;# 
  9076     1EAB                     	;# 
  9077     1EAC                     	;# 
  9078     1EB1                     	;# 
  9079     1EB2                     	;# 
  9080     1EB3                     	;# 
  9081     1EB8                     	;# 
  9082     1EB9                     	;# 
  9083     1EBA                     	;# 
  9084     1EBB                     	;# 
  9085     1EBC                     	;# 
  9086     1EBD                     	;# 
  9087     1EBE                     	;# 
  9088     1EC3                     	;# 
  9089     1EC5                     	;# 
  9090     1EC6                     	;# 
  9091     1EC7                     	;# 
  9092     1EC8                     	;# 
  9093     1EC9                     	;# 
  9094     1ECA                     	;# 
  9095     1ECB                     	;# 
  9096     1ECC                     	;# 
  9097     1ECD                     	;# 
  9098     1ECE                     	;# 
  9099     1F10                     	;# 
  9100     1F11                     	;# 
  9101     1F12                     	;# 
  9102     1F13                     	;# 
  9103     1F14                     	;# 
  9104     1F15                     	;# 
  9105     1F16                     	;# 
  9106     1F17                     	;# 
  9107     1F18                     	;# 
  9108     1F19                     	;# 
  9109     1F1A                     	;# 
  9110     1F1B                     	;# 
  9111     1F1C                     	;# 
  9112     1F1D                     	;# 
  9113     1F1E                     	;# 
  9114     1F1F                     	;# 
  9115     1F20                     	;# 
  9116     1F21                     	;# 
  9117     1F22                     	;# 
  9118     1F23                     	;# 
  9119     1F24                     	;# 
  9120     1F25                     	;# 
  9121     1F26                     	;# 
  9122     1F27                     	;# 
  9123     1F38                     	;# 
  9124     1F39                     	;# 
  9125     1F3A                     	;# 
  9126     1F3B                     	;# 
  9127     1F3C                     	;# 
  9128     1F3D                     	;# 
  9129     1F3E                     	;# 
  9130     1F3F                     	;# 
  9131     1F43                     	;# 
  9132     1F44                     	;# 
  9133     1F45                     	;# 
  9134     1F46                     	;# 
  9135     1F47                     	;# 
  9136     1F48                     	;# 
  9137     1F49                     	;# 
  9138     1F4A                     	;# 
  9139     1F4E                     	;# 
  9140     1F4F                     	;# 
  9141     1F50                     	;# 
  9142     1F51                     	;# 
  9143     1F52                     	;# 
  9144     1F53                     	;# 
  9145     1F54                     	;# 
  9146     1F55                     	;# 
  9147     1F65                     	;# 
  9148     1F66                     	;# 
  9149     1F67                     	;# 
  9150     1F68                     	;# 
  9151     1F69                     	;# 
  9152     1F6A                     	;# 
  9153     1F6B                     	;# 
  9154     1FE4                     	;# 
  9155     1FE5                     	;# 
  9156     1FE6                     	;# 
  9157     1FE7                     	;# 
  9158     1FE8                     	;# 
  9159     1FE8                     	;# 
  9160     1FE9                     	;# 
  9161     1FEA                     	;# 
  9162     1FEB                     	;# 
  9163     1FED                     	;# 
  9164     1FEE                     	;# 
  9165     1FEF                     	;# 
  9166     0000                     	;# 
  9167     0001                     	;# 
  9168     0002                     	;# 
  9169     0003                     	;# 
  9170     0004                     	;# 
  9171     0005                     	;# 
  9172     0006                     	;# 
  9173     0007                     	;# 
  9174     0008                     	;# 
  9175     0009                     	;# 
  9176     000A                     	;# 
  9177     000B                     	;# 
  9178     000C                     	;# 
  9179     000D                     	;# 
  9180     000E                     	;# 
  9181     0010                     	;# 
  9182     0012                     	;# 
  9183     0013                     	;# 
  9184     0014                     	;# 
  9185     0016                     	;# 
  9186     0018                     	;# 
  9187     0019                     	;# 
  9188     001A                     	;# 
  9189     001C                     	;# 
  9190     008C                     	;# 
  9191     008C                     	;# 
  9192     008D                     	;# 
  9193     008E                     	;# 
  9194     008E                     	;# 
  9195     008F                     	;# 
  9196     0090                     	;# 
  9197     0090                     	;# 
  9198     0091                     	;# 
  9199     0092                     	;# 
  9200     0092                     	;# 
  9201     0093                     	;# 
  9202     0094                     	;# 
  9203     0094                     	;# 
  9204     0095                     	;# 
  9205     0096                     	;# 
  9206     0096                     	;# 
  9207     0097                     	;# 
  9208     0098                     	;# 
  9209     0099                     	;# 
  9210     009A                     	;# 
  9211     009B                     	;# 
  9212     009B                     	;# 
  9213     009C                     	;# 
  9214     009D                     	;# 
  9215     009D                     	;# 
  9216     009E                     	;# 
  9217     009F                     	;# 
  9218     010C                     	;# 
  9219     010C                     	;# 
  9220     010D                     	;# 
  9221     010E                     	;# 
  9222     010F                     	;# 
  9223     010F                     	;# 
  9224     0110                     	;# 
  9225     0111                     	;# 
  9226     0112                     	;# 
  9227     0113                     	;# 
  9228     0114                     	;# 
  9229     0115                     	;# 
  9230     0116                     	;# 
  9231     0117                     	;# 
  9232     0118                     	;# 
  9233     0119                     	;# 
  9234     0119                     	;# 
  9235     0119                     	;# 
  9236     011A                     	;# 
  9237     011A                     	;# 
  9238     011A                     	;# 
  9239     011B                     	;# 
  9240     011B                     	;# 
  9241     011B                     	;# 
  9242     011B                     	;# 
  9243     011B                     	;# 
  9244     011C                     	;# 
  9245     011C                     	;# 
  9246     011C                     	;# 
  9247     011D                     	;# 
  9248     011D                     	;# 
  9249     011D                     	;# 
  9250     011E                     	;# 
  9251     011E                     	;# 
  9252     011E                     	;# 
  9253     011F                     	;# 
  9254     011F                     	;# 
  9255     011F                     	;# 
  9256     011F                     	;# 
  9257     011F                     	;# 
  9258     018C                     	;# 
  9259     018D                     	;# 
  9260     018E                     	;# 
  9261     018F                     	;# 
  9262     0190                     	;# 
  9263     0191                     	;# 
  9264     0192                     	;# 
  9265     0196                     	;# 
  9266     0197                     	;# 
  9267     0198                     	;# 
  9268     0199                     	;# 
  9269     019A                     	;# 
  9270     019B                     	;# 
  9271     019C                     	;# 
  9272     020C                     	;# 
  9273     020D                     	;# 
  9274     020E                     	;# 
  9275     020E                     	;# 
  9276     020F                     	;# 
  9277     020F                     	;# 
  9278     0210                     	;# 
  9279     0210                     	;# 
  9280     0211                     	;# 
  9281     0211                     	;# 
  9282     0212                     	;# 
  9283     0213                     	;# 
  9284     0214                     	;# 
  9285     0214                     	;# 
  9286     0215                     	;# 
  9287     0215                     	;# 
  9288     0216                     	;# 
  9289     0216                     	;# 
  9290     0217                     	;# 
  9291     0217                     	;# 
  9292     0218                     	;# 
  9293     0219                     	;# 
  9294     021A                     	;# 
  9295     021A                     	;# 
  9296     021B                     	;# 
  9297     021B                     	;# 
  9298     021C                     	;# 
  9299     021C                     	;# 
  9300     021D                     	;# 
  9301     021D                     	;# 
  9302     021E                     	;# 
  9303     021F                     	;# 
  9304     028C                     	;# 
  9305     028C                     	;# 
  9306     028D                     	;# 
  9307     028D                     	;# 
  9308     028E                     	;# 
  9309     028F                     	;# 
  9310     0290                     	;# 
  9311     0291                     	;# 
  9312     0292                     	;# 
  9313     0292                     	;# 
  9314     0293                     	;# 
  9315     0293                     	;# 
  9316     0294                     	;# 
  9317     0295                     	;# 
  9318     0296                     	;# 
  9319     0297                     	;# 
  9320     0298                     	;# 
  9321     0298                     	;# 
  9322     0299                     	;# 
  9323     0299                     	;# 
  9324     029A                     	;# 
  9325     029B                     	;# 
  9326     029C                     	;# 
  9327     029D                     	;# 
  9328     029F                     	;# 
  9329     030C                     	;# 
  9330     030C                     	;# 
  9331     030D                     	;# 
  9332     030E                     	;# 
  9333     030F                     	;# 
  9334     0310                     	;# 
  9335     0310                     	;# 
  9336     0311                     	;# 
  9337     0312                     	;# 
  9338     0313                     	;# 
  9339     0314                     	;# 
  9340     0314                     	;# 
  9341     0315                     	;# 
  9342     0316                     	;# 
  9343     0317                     	;# 
  9344     0318                     	;# 
  9345     0318                     	;# 
  9346     0319                     	;# 
  9347     031A                     	;# 
  9348     031B                     	;# 
  9349     031C                     	;# 
  9350     031C                     	;# 
  9351     031D                     	;# 
  9352     031E                     	;# 
  9353     031F                     	;# 
  9354     038C                     	;# 
  9355     038C                     	;# 
  9356     038D                     	;# 
  9357     038E                     	;# 
  9358     0390                     	;# 
  9359     0390                     	;# 
  9360     0391                     	;# 
  9361     0392                     	;# 
  9362     048C                     	;# 
  9363     048C                     	;# 
  9364     048D                     	;# 
  9365     048E                     	;# 
  9366     048F                     	;# 
  9367     048F                     	;# 
  9368     0490                     	;# 
  9369     0491                     	;# 
  9370     0492                     	;# 
  9371     0492                     	;# 
  9372     0493                     	;# 
  9373     0494                     	;# 
  9374     0495                     	;# 
  9375     0495                     	;# 
  9376     0496                     	;# 
  9377     0497                     	;# 
  9378     0498                     	;# 
  9379     0499                     	;# 
  9380     049A                     	;# 
  9381     049B                     	;# 
  9382     049C                     	;# 
  9383     049D                     	;# 
  9384     050C                     	;# 
  9385     050C                     	;# 
  9386     050D                     	;# 
  9387     050E                     	;# 
  9388     050F                     	;# 
  9389     050F                     	;# 
  9390     0510                     	;# 
  9391     0511                     	;# 
  9392     0512                     	;# 
  9393     0512                     	;# 
  9394     0513                     	;# 
  9395     0514                     	;# 
  9396     0515                     	;# 
  9397     0515                     	;# 
  9398     0516                     	;# 
  9399     0517                     	;# 
  9400     0518                     	;# 
  9401     0519                     	;# 
  9402     051A                     	;# 
  9403     051B                     	;# 
  9404     051C                     	;# 
  9405     051D                     	;# 
  9406     058C                     	;# 
  9407     058C                     	;# 
  9408     058D                     	;# 
  9409     058E                     	;# 
  9410     058F                     	;# 
  9411     058F                     	;# 
  9412     0590                     	;# 
  9413     0591                     	;# 
  9414     0592                     	;# 
  9415     0593                     	;# 
  9416     059C                     	;# 
  9417     059C                     	;# 
  9418     059D                     	;# 
  9419     059D                     	;# 
  9420     059E                     	;# 
  9421     059F                     	;# 
  9422     060C                     	;# 
  9423     060C                     	;# 
  9424     060D                     	;# 
  9425     060D                     	;# 
  9426     060E                     	;# 
  9427     060F                     	;# 
  9428     0610                     	;# 
  9429     0611                     	;# 
  9430     0612                     	;# 
  9431     0613                     	;# 
  9432     0614                     	;# 
  9433     0616                     	;# 
  9434     0616                     	;# 
  9435     0617                     	;# 
  9436     0617                     	;# 
  9437     0618                     	;# 
  9438     0619                     	;# 
  9439     061A                     	;# 
  9440     061B                     	;# 
  9441     061C                     	;# 
  9442     061D                     	;# 
  9443     061E                     	;# 
  9444     068C                     	;# 
  9445     068D                     	;# 
  9446     068E                     	;# 
  9447     068F                     	;# 
  9448     0690                     	;# 
  9449     0691                     	;# 
  9450     0692                     	;# 
  9451     0693                     	;# 
  9452     0694                     	;# 
  9453     070C                     	;# 
  9454     070D                     	;# 
  9455     070E                     	;# 
  9456     070F                     	;# 
  9457     0710                     	;# 
  9458     0711                     	;# 
  9459     0712                     	;# 
  9460     0713                     	;# 
  9461     0714                     	;# 
  9462     0716                     	;# 
  9463     0717                     	;# 
  9464     0718                     	;# 
  9465     0719                     	;# 
  9466     071A                     	;# 
  9467     071B                     	;# 
  9468     071C                     	;# 
  9469     071D                     	;# 
  9470     071E                     	;# 
  9471     0796                     	;# 
  9472     0797                     	;# 
  9473     0798                     	;# 
  9474     0799                     	;# 
  9475     079A                     	;# 
  9476     079B                     	;# 
  9477     079C                     	;# 
  9478     079D                     	;# 
  9479     080C                     	;# 
  9480     080D                     	;# 
  9481     080E                     	;# 
  9482     080F                     	;# 
  9483     0810                     	;# 
  9484     0811                     	;# 
  9485     0813                     	;# 
  9486     0814                     	;# 
  9487     081A                     	;# 
  9488     081A                     	;# 
  9489     081B                     	;# 
  9490     081C                     	;# 
  9491     081C                     	;# 
  9492     081D                     	;# 
  9493     081E                     	;# 
  9494     081F                     	;# 
  9495     088C                     	;# 
  9496     088D                     	;# 
  9497     088E                     	;# 
  9498     088F                     	;# 
  9499     0890                     	;# 
  9500     0891                     	;# 
  9501     0892                     	;# 
  9502     0893                     	;# 
  9503     0895                     	;# 
  9504     0896                     	;# 
  9505     0897                     	;# 
  9506     0898                     	;# 
  9507     0899                     	;# 
  9508     089A                     	;# 
  9509     089B                     	;# 
  9510     090C                     	;# 
  9511     090E                     	;# 
  9512     090F                     	;# 
  9513     091F                     	;# 
  9514     098F                     	;# 
  9515     098F                     	;# 
  9516     0990                     	;# 
  9517     0991                     	;# 
  9518     0992                     	;# 
  9519     0993                     	;# 
  9520     0994                     	;# 
  9521     0995                     	;# 
  9522     0996                     	;# 
  9523     0997                     	;# 
  9524     0A19                     	;# 
  9525     0A19                     	;# 
  9526     0A1A                     	;# 
  9527     0A1A                     	;# 
  9528     0A1B                     	;# 
  9529     0A1B                     	;# 
  9530     0A1B                     	;# 
  9531     0A1C                     	;# 
  9532     0A1C                     	;# 
  9533     0A1D                     	;# 
  9534     0A1D                     	;# 
  9535     0A1E                     	;# 
  9536     0A1E                     	;# 
  9537     0A1F                     	;# 
  9538     0A1F                     	;# 
  9539     0A1F                     	;# 
  9540     1E0F                     	;# 
  9541     1E10                     	;# 
  9542     1E11                     	;# 
  9543     1E12                     	;# 
  9544     1E13                     	;# 
  9545     1E14                     	;# 
  9546     1E15                     	;# 
  9547     1E16                     	;# 
  9548     1E17                     	;# 
  9549     1E18                     	;# 
  9550     1E19                     	;# 
  9551     1E1A                     	;# 
  9552     1E1B                     	;# 
  9553     1E1C                     	;# 
  9554     1E1D                     	;# 
  9555     1E1E                     	;# 
  9556     1E1F                     	;# 
  9557     1E20                     	;# 
  9558     1E21                     	;# 
  9559     1E22                     	;# 
  9560     1E23                     	;# 
  9561     1E24                     	;# 
  9562     1E25                     	;# 
  9563     1E26                     	;# 
  9564     1E27                     	;# 
  9565     1E28                     	;# 
  9566     1E29                     	;# 
  9567     1E2A                     	;# 
  9568     1E2B                     	;# 
  9569     1E2C                     	;# 
  9570     1E2D                     	;# 
  9571     1E2E                     	;# 
  9572     1E2F                     	;# 
  9573     1E30                     	;# 
  9574     1E31                     	;# 
  9575     1E32                     	;# 
  9576     1E33                     	;# 
  9577     1E34                     	;# 
  9578     1E35                     	;# 
  9579     1E36                     	;# 
  9580     1E37                     	;# 
  9581     1E8F                     	;# 
  9582     1E90                     	;# 
  9583     1E91                     	;# 
  9584     1E92                     	;# 
  9585     1E93                     	;# 
  9586     1E94                     	;# 
  9587     1E95                     	;# 
  9588     1E96                     	;# 
  9589     1E97                     	;# 
  9590     1E9C                     	;# 
  9591     1E9D                     	;# 
  9592     1E9E                     	;# 
  9593     1EA1                     	;# 
  9594     1EA2                     	;# 
  9595     1EA3                     	;# 
  9596     1EA4                     	;# 
  9597     1EA5                     	;# 
  9598     1EA9                     	;# 
  9599     1EAA                     	;# 
  9600     1EAB                     	;# 
  9601     1EAC                     	;# 
  9602     1EB1                     	;# 
  9603     1EB2                     	;# 
  9604     1EB3                     	;# 
  9605     1EB8                     	;# 
  9606     1EB9                     	;# 
  9607     1EBA                     	;# 
  9608     1EBB                     	;# 
  9609     1EBC                     	;# 
  9610     1EBD                     	;# 
  9611     1EBE                     	;# 
  9612     1EC3                     	;# 
  9613     1EC5                     	;# 
  9614     1EC6                     	;# 
  9615     1EC7                     	;# 
  9616     1EC8                     	;# 
  9617     1EC9                     	;# 
  9618     1ECA                     	;# 
  9619     1ECB                     	;# 
  9620     1ECC                     	;# 
  9621     1ECD                     	;# 
  9622     1ECE                     	;# 
  9623     1F10                     	;# 
  9624     1F11                     	;# 
  9625     1F12                     	;# 
  9626     1F13                     	;# 
  9627     1F14                     	;# 
  9628     1F15                     	;# 
  9629     1F16                     	;# 
  9630     1F17                     	;# 
  9631     1F18                     	;# 
  9632     1F19                     	;# 
  9633     1F1A                     	;# 
  9634     1F1B                     	;# 
  9635     1F1C                     	;# 
  9636     1F1D                     	;# 
  9637     1F1E                     	;# 
  9638     1F1F                     	;# 
  9639     1F20                     	;# 
  9640     1F21                     	;# 
  9641     1F22                     	;# 
  9642     1F23                     	;# 
  9643     1F24                     	;# 
  9644     1F25                     	;# 
  9645     1F26                     	;# 
  9646     1F27                     	;# 
  9647     1F38                     	;# 
  9648     1F39                     	;# 
  9649     1F3A                     	;# 
  9650     1F3B                     	;# 
  9651     1F3C                     	;# 
  9652     1F3D                     	;# 
  9653     1F3E                     	;# 
  9654     1F3F                     	;# 
  9655     1F43                     	;# 
  9656     1F44                     	;# 
  9657     1F45                     	;# 
  9658     1F46                     	;# 
  9659     1F47                     	;# 
  9660     1F48                     	;# 
  9661     1F49                     	;# 
  9662     1F4A                     	;# 
  9663     1F4E                     	;# 
  9664     1F4F                     	;# 
  9665     1F50                     	;# 
  9666     1F51                     	;# 
  9667     1F52                     	;# 
  9668     1F53                     	;# 
  9669     1F54                     	;# 
  9670     1F55                     	;# 
  9671     1F65                     	;# 
  9672     1F66                     	;# 
  9673     1F67                     	;# 
  9674     1F68                     	;# 
  9675     1F69                     	;# 
  9676     1F6A                     	;# 
  9677     1F6B                     	;# 
  9678     1FE4                     	;# 
  9679     1FE5                     	;# 
  9680     1FE6                     	;# 
  9681     1FE7                     	;# 
  9682     1FE8                     	;# 
  9683     1FE8                     	;# 
  9684     1FE9                     	;# 
  9685     1FEA                     	;# 
  9686     1FEB                     	;# 
  9687     1FED                     	;# 
  9688     1FEE                     	;# 
  9689     1FEF                     	;# 
  9690     0000                     	;# 
  9691     0001                     	;# 
  9692     0002                     	;# 
  9693     0003                     	;# 
  9694     0004                     	;# 
  9695     0005                     	;# 
  9696     0006                     	;# 
  9697     0007                     	;# 
  9698     0008                     	;# 
  9699     0009                     	;# 
  9700     000A                     	;# 
  9701     000B                     	;# 
  9702     000C                     	;# 
  9703     000D                     	;# 
  9704     000E                     	;# 
  9705     0010                     	;# 
  9706     0012                     	;# 
  9707     0013                     	;# 
  9708     0014                     	;# 
  9709     0016                     	;# 
  9710     0018                     	;# 
  9711     0019                     	;# 
  9712     001A                     	;# 
  9713     001C                     	;# 
  9714     008C                     	;# 
  9715     008C                     	;# 
  9716     008D                     	;# 
  9717     008E                     	;# 
  9718     008E                     	;# 
  9719     008F                     	;# 
  9720     0090                     	;# 
  9721     0090                     	;# 
  9722     0091                     	;# 
  9723     0092                     	;# 
  9724     0092                     	;# 
  9725     0093                     	;# 
  9726     0094                     	;# 
  9727     0094                     	;# 
  9728     0095                     	;# 
  9729     0096                     	;# 
  9730     0096                     	;# 
  9731     0097                     	;# 
  9732     0098                     	;# 
  9733     0099                     	;# 
  9734     009A                     	;# 
  9735     009B                     	;# 
  9736     009B                     	;# 
  9737     009C                     	;# 
  9738     009D                     	;# 
  9739     009D                     	;# 
  9740     009E                     	;# 
  9741     009F                     	;# 
  9742     010C                     	;# 
  9743     010C                     	;# 
  9744     010D                     	;# 
  9745     010E                     	;# 
  9746     010F                     	;# 
  9747     010F                     	;# 
  9748     0110                     	;# 
  9749     0111                     	;# 
  9750     0112                     	;# 
  9751     0113                     	;# 
  9752     0114                     	;# 
  9753     0115                     	;# 
  9754     0116                     	;# 
  9755     0117                     	;# 
  9756     0118                     	;# 
  9757     0119                     	;# 
  9758     0119                     	;# 
  9759     0119                     	;# 
  9760     011A                     	;# 
  9761     011A                     	;# 
  9762     011A                     	;# 
  9763     011B                     	;# 
  9764     011B                     	;# 
  9765     011B                     	;# 
  9766     011B                     	;# 
  9767     011B                     	;# 
  9768     011C                     	;# 
  9769     011C                     	;# 
  9770     011C                     	;# 
  9771     011D                     	;# 
  9772     011D                     	;# 
  9773     011D                     	;# 
  9774     011E                     	;# 
  9775     011E                     	;# 
  9776     011E                     	;# 
  9777     011F                     	;# 
  9778     011F                     	;# 
  9779     011F                     	;# 
  9780     011F                     	;# 
  9781     011F                     	;# 
  9782     018C                     	;# 
  9783     018D                     	;# 
  9784     018E                     	;# 
  9785     018F                     	;# 
  9786     0190                     	;# 
  9787     0191                     	;# 
  9788     0192                     	;# 
  9789     0196                     	;# 
  9790     0197                     	;# 
  9791     0198                     	;# 
  9792     0199                     	;# 
  9793     019A                     	;# 
  9794     019B                     	;# 
  9795     019C                     	;# 
  9796     020C                     	;# 
  9797     020D                     	;# 
  9798     020E                     	;# 
  9799     020E                     	;# 
  9800     020F                     	;# 
  9801     020F                     	;# 
  9802     0210                     	;# 
  9803     0210                     	;# 
  9804     0211                     	;# 
  9805     0211                     	;# 
  9806     0212                     	;# 
  9807     0213                     	;# 
  9808     0214                     	;# 
  9809     0214                     	;# 
  9810     0215                     	;# 
  9811     0215                     	;# 
  9812     0216                     	;# 
  9813     0216                     	;# 
  9814     0217                     	;# 
  9815     0217                     	;# 
  9816     0218                     	;# 
  9817     0219                     	;# 
  9818     021A                     	;# 
  9819     021A                     	;# 
  9820     021B                     	;# 
  9821     021B                     	;# 
  9822     021C                     	;# 
  9823     021C                     	;# 
  9824     021D                     	;# 
  9825     021D                     	;# 
  9826     021E                     	;# 
  9827     021F                     	;# 
  9828     028C                     	;# 
  9829     028C                     	;# 
  9830     028D                     	;# 
  9831     028D                     	;# 
  9832     028E                     	;# 
  9833     028F                     	;# 
  9834     0290                     	;# 
  9835     0291                     	;# 
  9836     0292                     	;# 
  9837     0292                     	;# 
  9838     0293                     	;# 
  9839     0293                     	;# 
  9840     0294                     	;# 
  9841     0295                     	;# 
  9842     0296                     	;# 
  9843     0297                     	;# 
  9844     0298                     	;# 
  9845     0298                     	;# 
  9846     0299                     	;# 
  9847     0299                     	;# 
  9848     029A                     	;# 
  9849     029B                     	;# 
  9850     029C                     	;# 
  9851     029D                     	;# 
  9852     029F                     	;# 
  9853     030C                     	;# 
  9854     030C                     	;# 
  9855     030D                     	;# 
  9856     030E                     	;# 
  9857     030F                     	;# 
  9858     0310                     	;# 
  9859     0310                     	;# 
  9860     0311                     	;# 
  9861     0312                     	;# 
  9862     0313                     	;# 
  9863     0314                     	;# 
  9864     0314                     	;# 
  9865     0315                     	;# 
  9866     0316                     	;# 
  9867     0317                     	;# 
  9868     0318                     	;# 
  9869     0318                     	;# 
  9870     0319                     	;# 
  9871     031A                     	;# 
  9872     031B                     	;# 
  9873     031C                     	;# 
  9874     031C                     	;# 
  9875     031D                     	;# 
  9876     031E                     	;# 
  9877     031F                     	;# 
  9878     038C                     	;# 
  9879     038C                     	;# 
  9880     038D                     	;# 
  9881     038E                     	;# 
  9882     0390                     	;# 
  9883     0390                     	;# 
  9884     0391                     	;# 
  9885     0392                     	;# 
  9886     048C                     	;# 
  9887     048C                     	;# 
  9888     048D                     	;# 
  9889     048E                     	;# 
  9890     048F                     	;# 
  9891     048F                     	;# 
  9892     0490                     	;# 
  9893     0491                     	;# 
  9894     0492                     	;# 
  9895     0492                     	;# 
  9896     0493                     	;# 
  9897     0494                     	;# 
  9898     0495                     	;# 
  9899     0495                     	;# 
  9900     0496                     	;# 
  9901     0497                     	;# 
  9902     0498                     	;# 
  9903     0499                     	;# 
  9904     049A                     	;# 
  9905     049B                     	;# 
  9906     049C                     	;# 
  9907     049D                     	;# 
  9908     050C                     	;# 
  9909     050C                     	;# 
  9910     050D                     	;# 
  9911     050E                     	;# 
  9912     050F                     	;# 
  9913     050F                     	;# 
  9914     0510                     	;# 
  9915     0511                     	;# 
  9916     0512                     	;# 
  9917     0512                     	;# 
  9918     0513                     	;# 
  9919     0514                     	;# 
  9920     0515                     	;# 
  9921     0515                     	;# 
  9922     0516                     	;# 
  9923     0517                     	;# 
  9924     0518                     	;# 
  9925     0519                     	;# 
  9926     051A                     	;# 
  9927     051B                     	;# 
  9928     051C                     	;# 
  9929     051D                     	;# 
  9930     058C                     	;# 
  9931     058C                     	;# 
  9932     058D                     	;# 
  9933     058E                     	;# 
  9934     058F                     	;# 
  9935     058F                     	;# 
  9936     0590                     	;# 
  9937     0591                     	;# 
  9938     0592                     	;# 
  9939     0593                     	;# 
  9940     059C                     	;# 
  9941     059C                     	;# 
  9942     059D                     	;# 
  9943     059D                     	;# 
  9944     059E                     	;# 
  9945     059F                     	;# 
  9946     060C                     	;# 
  9947     060C                     	;# 
  9948     060D                     	;# 
  9949     060D                     	;# 
  9950     060E                     	;# 
  9951     060F                     	;# 
  9952     0610                     	;# 
  9953     0611                     	;# 
  9954     0612                     	;# 
  9955     0613                     	;# 
  9956     0614                     	;# 
  9957     0616                     	;# 
  9958     0616                     	;# 
  9959     0617                     	;# 
  9960     0617                     	;# 
  9961     0618                     	;# 
  9962     0619                     	;# 
  9963     061A                     	;# 
  9964     061B                     	;# 
  9965     061C                     	;# 
  9966     061D                     	;# 
  9967     061E                     	;# 
  9968     068C                     	;# 
  9969     068D                     	;# 
  9970     068E                     	;# 
  9971     068F                     	;# 
  9972     0690                     	;# 
  9973     0691                     	;# 
  9974     0692                     	;# 
  9975     0693                     	;# 
  9976     0694                     	;# 
  9977     070C                     	;# 
  9978     070D                     	;# 
  9979     070E                     	;# 
  9980     070F                     	;# 
  9981     0710                     	;# 
  9982     0711                     	;# 
  9983     0712                     	;# 
  9984     0713                     	;# 
  9985     0714                     	;# 
  9986     0716                     	;# 
  9987     0717                     	;# 
  9988     0718                     	;# 
  9989     0719                     	;# 
  9990     071A                     	;# 
  9991     071B                     	;# 
  9992     071C                     	;# 
  9993     071D                     	;# 
  9994     071E                     	;# 
  9995     0796                     	;# 
  9996     0797                     	;# 
  9997     0798                     	;# 
  9998     0799                     	;# 
  9999     079A                     	;# 
 10000     079B                     	;# 
 10001     079C                     	;# 
 10002     079D                     	;# 
 10003     080C                     	;# 
 10004     080D                     	;# 
 10005     080E                     	;# 
 10006     080F                     	;# 
 10007     0810                     	;# 
 10008     0811                     	;# 
 10009     0813                     	;# 
 10010     0814                     	;# 
 10011     081A                     	;# 
 10012     081A                     	;# 
 10013     081B                     	;# 
 10014     081C                     	;# 
 10015     081C                     	;# 
 10016     081D                     	;# 
 10017     081E                     	;# 
 10018     081F                     	;# 
 10019     088C                     	;# 
 10020     088D                     	;# 
 10021     088E                     	;# 
 10022     088F                     	;# 
 10023     0890                     	;# 
 10024     0891                     	;# 
 10025     0892                     	;# 
 10026     0893                     	;# 
 10027     0895                     	;# 
 10028     0896                     	;# 
 10029     0897                     	;# 
 10030     0898                     	;# 
 10031     0899                     	;# 
 10032     089A                     	;# 
 10033     089B                     	;# 
 10034     090C                     	;# 
 10035     090E                     	;# 
 10036     090F                     	;# 
 10037     091F                     	;# 
 10038     098F                     	;# 
 10039     098F                     	;# 
 10040     0990                     	;# 
 10041     0991                     	;# 
 10042     0992                     	;# 
 10043     0993                     	;# 
 10044     0994                     	;# 
 10045     0995                     	;# 
 10046     0996                     	;# 
 10047     0997                     	;# 
 10048     0A19                     	;# 
 10049     0A19                     	;# 
 10050     0A1A                     	;# 
 10051     0A1A                     	;# 
 10052     0A1B                     	;# 
 10053     0A1B                     	;# 
 10054     0A1B                     	;# 
 10055     0A1C                     	;# 
 10056     0A1C                     	;# 
 10057     0A1D                     	;# 
 10058     0A1D                     	;# 
 10059     0A1E                     	;# 
 10060     0A1E                     	;# 
 10061     0A1F                     	;# 
 10062     0A1F                     	;# 
 10063     0A1F                     	;# 
 10064     1E0F                     	;# 
 10065     1E10                     	;# 
 10066     1E11                     	;# 
 10067     1E12                     	;# 
 10068     1E13                     	;# 
 10069     1E14                     	;# 
 10070     1E15                     	;# 
 10071     1E16                     	;# 
 10072     1E17                     	;# 
 10073     1E18                     	;# 
 10074     1E19                     	;# 
 10075     1E1A                     	;# 
 10076     1E1B                     	;# 
 10077     1E1C                     	;# 
 10078     1E1D                     	;# 
 10079     1E1E                     	;# 
 10080     1E1F                     	;# 
 10081     1E20                     	;# 
 10082     1E21                     	;# 
 10083     1E22                     	;# 
 10084     1E23                     	;# 
 10085     1E24                     	;# 
 10086     1E25                     	;# 
 10087     1E26                     	;# 
 10088     1E27                     	;# 
 10089     1E28                     	;# 
 10090     1E29                     	;# 
 10091     1E2A                     	;# 
 10092     1E2B                     	;# 
 10093     1E2C                     	;# 
 10094     1E2D                     	;# 
 10095     1E2E                     	;# 
 10096     1E2F                     	;# 
 10097     1E30                     	;# 
 10098     1E31                     	;# 
 10099     1E32                     	;# 
 10100     1E33                     	;# 
 10101     1E34                     	;# 
 10102     1E35                     	;# 
 10103     1E36                     	;# 
 10104     1E37                     	;# 
 10105     1E8F                     	;# 
 10106     1E90                     	;# 
 10107     1E91                     	;# 
 10108     1E92                     	;# 
 10109     1E93                     	;# 
 10110     1E94                     	;# 
 10111     1E95                     	;# 
 10112     1E96                     	;# 
 10113     1E97                     	;# 
 10114     1E9C                     	;# 
 10115     1E9D                     	;# 
 10116     1E9E                     	;# 
 10117     1EA1                     	;# 
 10118     1EA2                     	;# 
 10119     1EA3                     	;# 
 10120     1EA4                     	;# 
 10121     1EA5                     	;# 
 10122     1EA9                     	;# 
 10123     1EAA                     	;# 
 10124     1EAB                     	;# 
 10125     1EAC                     	;# 
 10126     1EB1                     	;# 
 10127     1EB2                     	;# 
 10128     1EB3                     	;# 
 10129     1EB8                     	;# 
 10130     1EB9                     	;# 
 10131     1EBA                     	;# 
 10132     1EBB                     	;# 
 10133     1EBC                     	;# 
 10134     1EBD                     	;# 
 10135     1EBE                     	;# 
 10136     1EC3                     	;# 
 10137     1EC5                     	;# 
 10138     1EC6                     	;# 
 10139     1EC7                     	;# 
 10140     1EC8                     	;# 
 10141     1EC9                     	;# 
 10142     1ECA                     	;# 
 10143     1ECB                     	;# 
 10144     1ECC                     	;# 
 10145     1ECD                     	;# 
 10146     1ECE                     	;# 
 10147     1F10                     	;# 
 10148     1F11                     	;# 
 10149     1F12                     	;# 
 10150     1F13                     	;# 
 10151     1F14                     	;# 
 10152     1F15                     	;# 
 10153     1F16                     	;# 
 10154     1F17                     	;# 
 10155     1F18                     	;# 
 10156     1F19                     	;# 
 10157     1F1A                     	;# 
 10158     1F1B                     	;# 
 10159     1F1C                     	;# 
 10160     1F1D                     	;# 
 10161     1F1E                     	;# 
 10162     1F1F                     	;# 
 10163     1F20                     	;# 
 10164     1F21                     	;# 
 10165     1F22                     	;# 
 10166     1F23                     	;# 
 10167     1F24                     	;# 
 10168     1F25                     	;# 
 10169     1F26                     	;# 
 10170     1F27                     	;# 
 10171     1F38                     	;# 
 10172     1F39                     	;# 
 10173     1F3A                     	;# 
 10174     1F3B                     	;# 
 10175     1F3C                     	;# 
 10176     1F3D                     	;# 
 10177     1F3E                     	;# 
 10178     1F3F                     	;# 
 10179     1F43                     	;# 
 10180     1F44                     	;# 
 10181     1F45                     	;# 
 10182     1F46                     	;# 
 10183     1F47                     	;# 
 10184     1F48                     	;# 
 10185     1F49                     	;# 
 10186     1F4A                     	;# 
 10187     1F4E                     	;# 
 10188     1F4F                     	;# 
 10189     1F50                     	;# 
 10190     1F51                     	;# 
 10191     1F52                     	;# 
 10192     1F53                     	;# 
 10193     1F54                     	;# 
 10194     1F55                     	;# 
 10195     1F65                     	;# 
 10196     1F66                     	;# 
 10197     1F67                     	;# 
 10198     1F68                     	;# 
 10199     1F69                     	;# 
 10200     1F6A                     	;# 
 10201     1F6B                     	;# 
 10202     1FE4                     	;# 
 10203     1FE5                     	;# 
 10204     1FE6                     	;# 
 10205     1FE7                     	;# 
 10206     1FE8                     	;# 
 10207     1FE8                     	;# 
 10208     1FE9                     	;# 
 10209     1FEA                     	;# 
 10210     1FEB                     	;# 
 10211     1FED                     	;# 
 10212     1FEE                     	;# 
 10213     1FEF                     	;# 
 10214                           
 10215 ;; Function _do_I2C_RESET is unused but had its address taken
 10216     0000                     
 10217 ;; Function _do_I2C_IDLE is unused but had its address taken
 10218     0000                     
 10219 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10220     0000                     
 10221 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10222     0000                     
 10223 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10224     0000                     
 10225 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10226     0000                     
 10227 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10228     0000                     
 10229 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10230     0000                     
 10231 ;; Function _do_I2C_RCEN is unused but had its address taken
 10232     0000                     
 10233 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10234     0000                     
 10235 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10236     0000                     
 10237 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10238     0000                     
 10239 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10240     0000                     
 10241 ;; Function _do_I2C_TX is unused but had its address taken
 10242     0000                     
 10243 ;; Function _do_I2C_RX is unused but had its address taken
 10244     0000                     
 10245 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10246     0000                     
 10247 ;; Function _i2c_ISR is unused but had its address taken
 10248     0000                     
 10249 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10250     0000                     
 10251 ;; Function _returnStop is unused but had its address taken
 10252     0000                     
 10253 ;; Function _returnReset is unused but had its address taken
 10254     0000                     
 10255 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10256     0000                     
 10257 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10258     0000                     
 10259                           	psect	idataBANK1
 10260     0002                     __pidataBANK1:
 10261                           
 10262                           ;initializer for RN487X_GetInputsValues@F12901
 10263     0002  3430               	retlw	48
 10264     0003  3430               	retlw	48
 10265                           
 10266                           	psect	idataBANK3
 10267     1C3E                     __pidataBANK3:
 10268                           
 10269                           ;initializer for __hex
 10270     1C3E  3430               	retlw	48
 10271     1C3F  3431               	retlw	49
 10272     1C40  3432               	retlw	50
 10273     1C41  3433               	retlw	51
 10274     1C42  3434               	retlw	52
 10275     1C43  3435               	retlw	53
 10276     1C44  3436               	retlw	54
 10277     1C45  3437               	retlw	55
 10278     1C46  3438               	retlw	56
 10279     1C47  3439               	retlw	57
 10280     1C48  3441               	retlw	65
 10281     1C49  3442               	retlw	66
 10282     1C4A  3443               	retlw	67
 10283     1C4B  3444               	retlw	68
 10284     1C4C  3445               	retlw	69
 10285     1C4D  3446               	retlw	70
 10286     1C4E  3400               	retlw	0
 10287                           
 10288                           	psect	stringtext1
 10289     1800                     __pstringtext1:
 10290     1800                     _uart:
 10291     1800  3400               	retlw	low _EUSART1_Read
 10292     1801  3410               	retlw	high _EUSART1_Read
 10293     1802  34B0               	retlw	low _EUSART1_Write
 10294     1803  341F               	retlw	high _EUSART1_Write
 10295     1804  3400               	retlw	0
 10296     1805  3400               	retlw	0
 10297     1806  3481               	retlw	low _EUSART1_is_rx_ready
 10298     1807  341A               	retlw	high _EUSART1_is_rx_ready
 10299     1808  3412               	retlw	low _EUSART1_SetTxInterruptHandler
 10300     1809  341A               	retlw	high _EUSART1_SetTxInterruptHandler
 10301     180A  34C1               	retlw	low _EUSART1_Receive_ISR
 10302     180B  3414               	retlw	high _EUSART1_Receive_ISR
 10303     180C  340C               	retlw	low _EUSART1_SetRxInterruptHandler
 10304     180D  341A               	retlw	high _EUSART1_SetRxInterruptHandler
 10305     180E  3492               	retlw	low _EUSART1_is_tx_done
 10306     180F  3419               	retlw	high _EUSART1_is_tx_done
 10307     1810  34AC               	retlw	low _EUSART1_Transmit_ISR
 10308     1811  341E               	retlw	high _EUSART1_Transmit_ISR
 10309     1812  3406               	retlw	low _EUSART1_Initialize
 10310     1813  3414               	retlw	high _EUSART1_Initialize
 10311     1814  34D8               	retlw	low _EUSART2_Read
 10312     1815  341F               	retlw	high _EUSART2_Read
 10313     1816  3488               	retlw	low _EUSART2_Write
 10314     1817  341F               	retlw	high _EUSART2_Write
 10315     1818  3400               	retlw	0
 10316     1819  3400               	retlw	0
 10317     181A  3478               	retlw	low _EUSART2_is_rx_ready
 10318     181B  341A               	retlw	high _EUSART2_is_rx_ready
 10319     181C  3430               	retlw	low _EUSART2_SetTxInterruptHandler
 10320     181D  341A               	retlw	high _EUSART2_SetTxInterruptHandler
 10321     181E  344F               	retlw	low _EUSART2_Receive_ISR
 10322     181F  3413               	retlw	high _EUSART2_Receive_ISR
 10323     1820  342A               	retlw	low _EUSART2_SetRxInterruptHandler
 10324     1821  341A               	retlw	high _EUSART2_SetRxInterruptHandler
 10325     1822  348E               	retlw	low _EUSART2_is_tx_done
 10326     1823  3419               	retlw	high _EUSART2_is_tx_done
 10327     1824  3489               	retlw	low _EUSART2_Transmit_ISR
 10328     1825  341E               	retlw	high _EUSART2_Transmit_ISR
 10329     1826  3444               	retlw	low _EUSART2_Initialize
 10330     1827  3414               	retlw	high _EUSART2_Initialize
 10331     1828                     __end_of_uart:
 10332                           
 10333                           	psect	stringtext2
 10334     2000                     __pstringtext2:
 10335     2000                     _i2c1_fsmStateTable:
 10336     2000  349B               	retlw	low _I2C1_DO_IDLE
 10337     2001  3419               	retlw	high _I2C1_DO_IDLE
 10338     2002  346F               	retlw	low _I2C1_DO_SEND_ADR_READ
 10339     2003  341A               	retlw	high _I2C1_DO_SEND_ADR_READ
 10340     2004  3456               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10341     2005  341A               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10342     2006  345A               	retlw	low _I2C1_DO_TX
 10343     2007  3417               	retlw	high _I2C1_DO_TX
 10344     2008  3402               	retlw	low _I2C1_DO_RX
 10345     2009  3415               	retlw	high _I2C1_DO_RX
 10346     200A  3448               	retlw	low _I2C1_DO_RCEN
 10347     200B  341A               	retlw	high _I2C1_DO_RCEN
 10348     200C  3451               	retlw	low _I2C1_DO_TX_EMPTY
 10349     200D  3410               	retlw	high _I2C1_DO_TX_EMPTY
 10350     200E  34A0               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10351     200F  3419               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10352     2010  34A5               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10353     2011  3419               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10354     2012  34AA               	retlw	low _I2C1_DO_SEND_RESTART
 10355     2013  3419               	retlw	high _I2C1_DO_SEND_RESTART
 10356     2014  34AF               	retlw	low _I2C1_DO_SEND_STOP
 10357     2015  3419               	retlw	high _I2C1_DO_SEND_STOP
 10358     2016  34B4               	retlw	low _I2C1_DO_RX_ACK
 10359     2017  3419               	retlw	high _I2C1_DO_RX_ACK
 10360     2018  34B9               	retlw	low _I2C1_DO_RX_NACK_STOP
 10361     2019  3419               	retlw	high _I2C1_DO_RX_NACK_STOP
 10362     201A  34BE               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10363     201B  3419               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10364     201C  34C3               	retlw	low _I2C1_DO_RESET
 10365     201D  3419               	retlw	high _I2C1_DO_RESET
 10366     201E  3460               	retlw	low _I2C1_DO_ADDRESS_NACK
 10367     201F  341F               	retlw	high _I2C1_DO_ADDRESS_NACK
 10368     2020                     __end_of_i2c1_fsmStateTable:
 10369                           
 10370                           	psect	stringtext3
 10371     2020                     __pstringtext3:
 10372     2020                     _fsmStateTable:
 10373     2020  3400               	retlw	0
 10374     2021  3400               	retlw	0
 10375     2022  3400               	retlw	0
 10376     2023  3400               	retlw	0
 10377     2024  3400               	retlw	0
 10378     2025  3400               	retlw	0
 10379     2026  3400               	retlw	0
 10380     2027  3400               	retlw	0
 10381     2028  3400               	retlw	0
 10382     2029  3400               	retlw	0
 10383     202A  3400               	retlw	0
 10384     202B  3400               	retlw	0
 10385     202C  3400               	retlw	0
 10386     202D  3400               	retlw	0
 10387     202E  3400               	retlw	0
 10388     202F  3400               	retlw	0
 10389     2030  3400               	retlw	0
 10390     2031  3400               	retlw	0
 10391     2032  3400               	retlw	0
 10392     2033  3400               	retlw	0
 10393     2034  3400               	retlw	0
 10394     2035  3400               	retlw	0
 10395     2036  3400               	retlw	0
 10396     2037  3400               	retlw	0
 10397     2038  3400               	retlw	0
 10398     2039  3400               	retlw	0
 10399     203A  3400               	retlw	0
 10400     203B  3400               	retlw	0
 10401     203C  3400               	retlw	0
 10402     203D  3400               	retlw	0
 10403     203E  3400               	retlw	0
 10404     203F  3400               	retlw	0
 10405     2040                     __end_of_fsmStateTable:
 10406                           
 10407                           	psect	stringtext4
 10408     2040                     __pstringtext4:
 10409     2040                     _RN487X:
 10410     2040  3408               	retlw	low _RN487X_Write
 10411     2041  341B               	retlw	high _RN487X_Write
 10412     2042  3493               	retlw	low _RN487X_Read@rn487x_interface$F1379
 10413     2043  341A               	retlw	high _RN487X_Read@rn487x_interface$F1379
 10414     2044  349D               	retlw	low _RN487X_is_tx_done
 10415     2045  341A               	retlw	high _RN487X_is_tx_done
 10416     2046  34A7               	retlw	low _RN487X_is_rx_ready
 10417     2047  341A               	retlw	high _RN487X_is_rx_ready
 10418     2048  34DB               	retlw	low _RN487X_IndicateRx
 10419     2049  341A               	retlw	high _RN487X_IndicateRx
 10420     204A  34E6               	retlw	low _RN487X_Reset
 10421     204B  341A               	retlw	high _RN487X_Reset
 10422     204C  3414               	retlw	low _RN487X_SetSystemMode
 10423     204D  341B               	retlw	high _RN487X_SetSystemMode
 10424     204E  345E               	retlw	low _RN487X_Delay
 10425     204F  341A               	retlw	high _RN487X_Delay
 10426     2050  3416               	retlw	low _RN487X_MessageHandler
 10427     2051  3413               	retlw	high _RN487X_MessageHandler
 10428     2052                     __end_of_RN487X:
 10429                           
 10430                           	psect	stringtext5
 10431     2084                     __pstringtext5:
 10432     2084                     _rn487x_driver_version:
 10433     2084  3474               	retlw	low (STR_1| (0+32768))
 10434     2085  34A0               	retlw	high (STR_1| (0+32768))
 10435     2086                     __end_of_rn487x_driver_version:
 10436                           
 10437                           	psect	stringtext6
 10438     2086                     __pstringtext6:
 10439     2086                     _protocol_version_number:
 10440     2086  3474               	retlw	low (STR_1| (0+32768))
 10441     2087  34A0               	retlw	high (STR_1| (0+32768))
 10442     2088                     __end_of_protocol_version_number:
 10443                           
 10444                           	psect	stringtext7
 10445     205E                     __pstringtext7:
 10446     205E                     RN487X_RebootCmd@reboot:
 10447     205E  3452               	retlw	82
 10448     205F  3465               	retlw	101
 10449     2060  3462               	retlw	98
 10450     2061  346F               	retlw	111
 10451     2062  346F               	retlw	111
 10452     2063  3474               	retlw	116
 10453     2064  3469               	retlw	105
 10454     2065  346E               	retlw	110
 10455     2066  3467               	retlw	103
 10456     2067  340D               	retlw	13
 10457     2068  340A               	retlw	10
 10458     2069                     __end_ofRN487X_RebootCmd@reboot:
 10459                           
 10460                           	psect	stringtext8
 10461     207A                     __pstringtext8:
 10462     207A                     RN487X_EnterDataMode@cmdPrompt:
 10463     207A  3445               	retlw	69
 10464     207B  344E               	retlw	78
 10465     207C  3444               	retlw	68
 10466     207D  340D               	retlw	13
 10467     207E  340A               	retlw	10
 10468     207F                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10469                           
 10470                           	psect	stringtext9
 10471     207F                     __pstringtext9:
 10472     207F                     RN487X_EnterCmdMode@cmdPrompt:
 10473     207F  3443               	retlw	67
 10474     2080  344D               	retlw	77
 10475     2081  3444               	retlw	68
 10476     2082  343E               	retlw	62
 10477     2083  3420               	retlw	32
 10478     2084                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10479                           
 10480                           	psect	nvBANK1
 10481     00E6                     __pnvBANK1:
 10482     00E6                     _IOCAF6_InterruptHandler:
 10483     00E6                     	ds	2
 10484     00E8                     _EUSART2_TxDefaultInterruptHandler:
 10485     00E8                     	ds	2
 10486                           
 10487                           	psect	nvBANK2
 10488     016C                     __pnvBANK2:
 10489     016C                     _EUSART2_FramingErrorHandler:
 10490     016C                     	ds	2
 10491     016E                     _EUSART2_RxDefaultInterruptHandler:
 10492     016E                     	ds	2
 10493                           
 10494                           	psect	nvBANK3
 10495     01B1                     __pnvBANK3:
 10496     01B1                     _EUSART1_ErrorHandler:
 10497     01B1                     	ds	2
 10498     01B3                     _EUSART1_OverrunErrorHandler:
 10499     01B3                     	ds	2
 10500     01B5                     _EUSART1_FramingErrorHandler:
 10501     01B5                     	ds	2
 10502     01B7                     _EUSART1_RxDefaultInterruptHandler:
 10503     01B7                     	ds	2
 10504     01B9                     _EUSART1_TxDefaultInterruptHandler:
 10505     01B9                     	ds	2
 10506     01BB                     _EUSART2_ErrorHandler:
 10507     01BB                     	ds	2
 10508     01BD                     _EUSART2_OverrunErrorHandler:
 10509     01BD                     	ds	2
 10510     0014                     _TRISC	set	20
 10511     0013                     _TRISB	set	19
 10512     0012                     _TRISA	set	18
 10513     0016                     _TRISE	set	22
 10514     001A                     _LATC	set	26
 10515     0019                     _LATB	set	25
 10516     0018                     _LATA	set	24
 10517     001C                     _LATE	set	28
 10518     0012                     _TRISAbits	set	18
 10519     001A                     _LATCbits	set	26
 10520     000B                     _INTCONbits	set	11
 10521     0018                     _LATAbits	set	24
 10522     000C                     _PORTAbits	set	12
 10523     0119                     _RC1REG	set	281
 10524     011D                     _RC1STAbits	set	285
 10525     011A                     _TX1REG	set	282
 10526     011E                     _TX1STAbits	set	286
 10527     011C                     _SP1BRGH	set	284
 10528     011B                     _SP1BRGL	set	283
 10529     011E                     _TX1STA	set	286
 10530     011D                     _RC1STA	set	285
 10531     011F                     _BAUD1CON	set	287
 10532     018F                     _SSP1STATbits	set	399
 10533     018E                     _SSP1MSK	set	398
 10534     018C                     _SSP1BUF	set	396
 10535     0191                     _SSP1CON2bits	set	401
 10536     018D                     _SSP1ADD	set	397
 10537     0191                     _SSP1CON2	set	401
 10538     0190                     _SSP1CON1	set	400
 10539     018F                     _SSP1STAT	set	399
 10540     0190                     _SSP1CON1bits	set	400
 10541     059E                     _T0CON0bits	set	1438
 10542     059E                     _T0CON0	set	1438
 10543     059C                     _TMR0L	set	1436
 10544     059D                     _TMR0H	set	1437
 10545     059F                     _T0CON1	set	1439
 10546     070F                     _PIR3bits	set	1807
 10547     070C                     _PIR0bits	set	1804
 10548     0716                     _PIE0bits	set	1814
 10549     0719                     _PIE3bits	set	1817
 10550     079D                     _PMD7	set	1949
 10551     079C                     _PMD6	set	1948
 10552     079B                     _PMD5	set	1947
 10553     079A                     _PMD4	set	1946
 10554     0799                     _PMD3	set	1945
 10555     0798                     _PMD2	set	1944
 10556     0797                     _PMD1	set	1943
 10557     0796                     _PMD0	set	1942
 10558     0892                     _OSCTUNE	set	2194
 10559     0890                     _OSCSTAT	set	2192
 10560     0893                     _OSCFRQ	set	2195
 10561     0891                     _OSCEN	set	2193
 10562     088F                     _OSCCON3	set	2191
 10563     088D                     _OSCCON1	set	2189
 10564     0A19                     _RC2REG	set	2585
 10565     0A1D                     _RC2STAbits	set	2589
 10566     0A1A                     _TX2REG	set	2586
 10567     0A1E                     _TX2STAbits	set	2590
 10568     0A1C                     _SP2BRGH	set	2588
 10569     0A1B                     _SP2BRGL	set	2587
 10570     0A1E                     _TX2STA	set	2590
 10571     0A1D                     _RC2STA	set	2589
 10572     0A1F                     _BAUD2CON	set	2591
 10573     1ECB                     _RX1DTPPS	set	7883
 10574     1EC6                     _SSP1DATPPS	set	7878
 10575     1ECD                     _RX2DTPPS	set	7885
 10576     1EC5                     _SSP1CLKPPS	set	7877
 10577     1F1C                     _RB4PPS	set	7964
 10578     1F24                     _RC4PPS	set	7972
 10579     1F1A                     _RB2PPS	set	7962
 10580     1F19                     _RB1PPS	set	7961
 10581     1F3D                     _IOCAPbits	set	7997
 10582     1F3E                     _IOCANbits	set	7998
 10583     1F3F                     _IOCAFbits	set	7999
 10584     1F52                     _INLVLC	set	8018
 10585     1F47                     _INLVLB	set	8007
 10586     1F3C                     _INLVLA	set	7996
 10587     1F51                     _SLRCONC	set	8017
 10588     1F46                     _SLRCONB	set	8006
 10589     1F3B                     _SLRCONA	set	7995
 10590     1F50                     _ODCONC	set	8016
 10591     1F45                     _ODCONB	set	8005
 10592     1F3A                     _ODCONA	set	7994
 10593     1F66                     _ODCONE	set	8038
 10594     1F4F                     _WPUC	set	8015
 10595     1F39                     _WPUA	set	7993
 10596     1F44                     _WPUB	set	8004
 10597     1F65                     _WPUE	set	8037
 10598     1F38                     _ANSELA	set	7992
 10599     1F43                     _ANSELB	set	8003
 10600     1F4E                     _ANSELC	set	8014
 10601                           
 10602                           	psect	stringtext10
 10603     2052                     __pstringtext10:
 10604     2052                     STR_4:
 10605     2052  3453               	retlw	83	;'S'
 10606     2053  3454               	retlw	84	;'T'
 10607     2054  3452               	retlw	82	;'R'
 10608     2055  3445               	retlw	69	;'E'
 10609     2056  3441               	retlw	65	;'A'
 10610     2057  344D               	retlw	77	;'M'
 10611     2058  345F               	retlw	95	;'_'
 10612     2059  344F               	retlw	79	;'O'
 10613     205A  3450               	retlw	80	;'P'
 10614     205B  3445               	retlw	69	;'E'
 10615     205C  344E               	retlw	78	;'N'
 10616     205D  3400               	retlw	0
 10617                           
 10618                           	psect	stringtext11
 10619     2069                     __pstringtext11:
 10620     2069                     STR_2:
 10621     2069  3444               	retlw	68	;'D'
 10622     206A  3449               	retlw	73	;'I'
 10623     206B  3453               	retlw	83	;'S'
 10624     206C  3443               	retlw	67	;'C'
 10625     206D  344F               	retlw	79	;'O'
 10626     206E  344E               	retlw	78	;'N'
 10627     206F  344E               	retlw	78	;'N'
 10628     2070  3445               	retlw	69	;'E'
 10629     2071  3443               	retlw	67	;'C'
 10630     2072  3454               	retlw	84	;'T'
 10631     2073  3400               	retlw	0
 10632                           
 10633                           	psect	stringtext12
 10634     2074                     __pstringtext12:
 10635     2074                     STR_1:
 10636     2074  3431               	retlw	49	;'1'
 10637     2075  342E               	retlw	46	;'.'
 10638     2076  3431               	retlw	49	;'1'
 10639     2077  342E               	retlw	46	;'.'
 10640     2078  3430               	retlw	48	;'0'
 10641     2079  3400               	retlw	0
 10642                           
 10643                           	psect	stringtext13
 10644     0000                     __pstringtext13:
 10645     2074                     
 10646                           	psect	cinit
 10647     0057                     start_initialization:	
 10648                           ; #config settings
 10649                           
 10650     0057                     __initialization:
 10651                           
 10652                           ; Initialize objects allocated to BANK1
 10653     0057  0141               	movlb	1	; select bank1
 10654     0058  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
 10655     005B  00EA               	movwf	__pdataBANK1& (0+127)
 10656     005C  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10657     005F  00EB               	movwf	(__pdataBANK1+1)& (0+127)
 10658                           
 10659                           ; Initialize objects allocated to BANK3
 10660     0060  303E               	movlw	low __pidataBANK3
 10661     0061  0084               	movwf	4
 10662     0062  309C               	movlw	(high __pidataBANK3)| (0+128)
 10663     0063  0085               	movwf	5
 10664     0064  30A0               	movlw	low __pdataBANK3
 10665     0065  0086               	movwf	6
 10666     0066  3001               	movlw	high __pdataBANK3
 10667     0067  0087               	movwf	7
 10668     0068  3011               	movlw	17
 10669     0069  319A  2242  3180   	fcall	init_ram
 10670                           
 10671                           ; Clear objects allocated to COMMON
 10672     006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10673                           
 10674                           ; Clear objects allocated to BANK1
 10675     006D  30A0               	movlw	low __pbssBANK1
 10676     006E  0084               	movwf	4
 10677     006F  3000               	movlw	high __pbssBANK1
 10678     0070  0085               	movwf	5
 10679     0071  3041               	movlw	65
 10680     0072  319A  223C  3180   	fcall	clear_ram0
 10681                           
 10682                           ; Clear objects allocated to BANK2
 10683     0075  3020               	movlw	low __pbssBANK2
 10684     0076  0084               	movwf	4
 10685     0077  3001               	movlw	high __pbssBANK2
 10686     0078  0085               	movwf	5
 10687     0079  304C               	movlw	76
 10688     007A  319A  223C  3180   	fcall	clear_ram0
 10689                           
 10690                           ; Clear objects allocated to BANK3
 10691     007D  30BF               	movlw	low __pbssBANK3
 10692     007E  0084               	movwf	4
 10693     007F  3001               	movlw	high __pbssBANK3
 10694     0080  0085               	movwf	5
 10695     0081  3008               	movlw	8
 10696     0082  319A  223C  3180   	fcall	clear_ram0
 10697                           
 10698                           ; Clear objects allocated to BANK4
 10699     0085  3020               	movlw	low __pbssBANK4
 10700     0086  0084               	movwf	4
 10701     0087  3002               	movlw	high __pbssBANK4
 10702     0088  0085               	movwf	5
 10703     0089  3040               	movlw	64
 10704     008A  319A  223C  3180   	fcall	clear_ram0
 10705                           
 10706                           ; Clear objects allocated to BANK5
 10707     008D  30A0               	movlw	low __pbssBANK5
 10708     008E  0084               	movwf	4
 10709     008F  3002               	movlw	high __pbssBANK5
 10710     0090  0085               	movwf	5
 10711     0091  3050               	movlw	80
 10712     0092  319A  223C  3180   	fcall	clear_ram0
 10713                           
 10714                           ; Clear objects allocated to BANK6
 10715     0095  3020               	movlw	low __pbssBANK6
 10716     0096  0084               	movwf	4
 10717     0097  3003               	movlw	high __pbssBANK6
 10718     0098  0085               	movwf	5
 10719     0099  3050               	movlw	80
 10720     009A  319A  223C  3180   	fcall	clear_ram0
 10721                           
 10722                           ; Clear objects allocated to BANK7
 10723     009D  30A0               	movlw	low __pbssBANK7
 10724     009E  0084               	movwf	4
 10725     009F  3003               	movlw	high __pbssBANK7
 10726     00A0  0085               	movwf	5
 10727     00A1  3050               	movlw	80
 10728     00A2  319A  223C  3180   	fcall	clear_ram0
 10729     00A5                     end_of_initialization:	
 10730                           ;End of C runtime variable initialization code
 10731                           
 10732     00A5                     __end_of__initialization:
 10733     00A5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10734     00A6  0140               	movlb	0
 10735     00A7  3187  2F2A         	ljmp	_main	;jump to C main() function
 10736                           
 10737                           	psect	bssCOMMON
 10738     007C                     __pbssCOMMON:
 10739     007C                     _eusart2RxHead:
 10740     007C                     	ds	1
 10741                           
 10742                           	psect	bssBANK1
 10743     00A0                     __pbssBANK1:
 10744     00A0                     _I2C1_Status:
 10745     00A0                     	ds	29
 10746     00BD                     _timer0ReloadVal16bit:
 10747     00BD                     	ds	2
 10748     00BF                     _i2c1_driver_i2cISR:
 10749     00BF                     	ds	2
 10750     00C1                     _i2c1_driver_busCollisionISR:
 10751     00C1                     	ds	2
 10752     00C3                     LIGHTBLUE_ParseIncomingPacket@data:
 10753     00C3                     	ds	2
 10754     00C5                     _bitMap:
 10755     00C5                     	ds	2
 10756     00C7                     _serialIndex:
 10757     00C7                     	ds	1
 10758     00C8                     _eusart1RxLastError:
 10759     00C8                     	ds	1
 10760     00C9                     _eusart1RxCount:
 10761     00C9                     	ds	1
 10762     00CA                     _eusart1RxTail:
 10763     00CA                     	ds	1
 10764     00CB                     _eusart1RxHead:
 10765     00CB                     	ds	1
 10766     00CC                     _eusart1TxBufferRemaining:
 10767     00CC                     	ds	1
 10768     00CD                     _eusart1TxTail:
 10769     00CD                     	ds	1
 10770     00CE                     _eusart1TxHead:
 10771     00CE                     	ds	1
 10772     00CF                     _eusart2RxLastError:
 10773     00CF                     	ds	1
 10774     00D0                     _eusart2RxCount:
 10775     00D0                     	ds	1
 10776     00D1                     _eusart2RxTail:
 10777     00D1                     	ds	1
 10778     00D2                     _eusart2TxBufferRemaining:
 10779     00D2                     	ds	1
 10780     00D3                     _eusart2TxTail:
 10781     00D3                     	ds	1
 10782     00D4                     _eusart2TxHead:
 10783     00D4                     	ds	1
 10784     00D5                     RN487X_FilterData@asyncBuffering:
 10785     00D5                     	ds	1
 10786     00D6                     _dataReady:
 10787     00D6                     	ds	1
 10788     00D7                     _peek:
 10789     00D7                     	ds	1
 10790     00D8                     _pHead:
 10791     00D8                     	ds	1
 10792     00D9                     _asyncBufferSize:
 10793     00D9                     	ds	1
 10794     00DA                     _asyncBuffer:
 10795     00DA                     	ds	1
 10796     00DB                     _connected:
 10797     00DB                     	ds	1
 10798     00DC                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10799     00DC                     	ds	1
 10800     00DD                     LIGHTBLUE_ParseIncomingPacket@length:
 10801     00DD                     	ds	1
 10802     00DE                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10803     00DE                     	ds	1
 10804     00DF                     _sequenceNumber:
 10805     00DF                     	ds	1
 10806     00E0                     __deviceAddress:
 10807     00E0                     	ds	1
 10808                           
 10809                           	psect	dataBANK1
 10810     00EA                     __pdataBANK1:
 10811     00EA                     RN487X_GetInputsValues@F12901:
 10812     00EA                     	ds	2
 10813                           
 10814                           	psect	bssBANK2
 10815     0120                     __pbssBANK2:
 10816     0120                     _i2c_status:
 10817     0120                     	ds	36
 10818     0144                     _eusart1RxStatusBuffer:
 10819     0144                     	ds	8
 10820     014C                     _eusart1TxBuffer:
 10821     014C                     	ds	8
 10822     0154                     _eusart2RxStatusBuffer:
 10823     0154                     	ds	8
 10824     015C                     _eusart2RxBuffer:
 10825     015C                     	ds	8
 10826     0164                     _eusart2TxBuffer:
 10827     0164                     	ds	8
 10828                           
 10829                           	psect	bssBANK3
 10830     01BF                     __pbssBANK3:
 10831     01BF                     _eusart1RxBuffer:
 10832     01BF                     	ds	8
 10833                           
 10834                           	psect	dataBANK3
 10835     01A0                     __pdataBANK3:
 10836     01A0                     __hex:
 10837     01A0                     	ds	17
 10838                           
 10839                           	psect	bssBANK4
 10840     0220                     __pbssBANK4:
 10841     0220                     _cmdBuf:
 10842     0220                     	ds	64
 10843                           
 10844                           	psect	bssBANK5
 10845     02A0                     __pbssBANK5:
 10846     02A0                     _lightBlueSerial:
 10847     02A0                     	ds	80
 10848                           
 10849                           	psect	bssBANK6
 10850     0320                     __pbssBANK6:
 10851     0320                     _statusBuffer:
 10852     0320                     	ds	80
 10853                           
 10854                           	psect	bssBANK7
 10855     03A0                     __pbssBANK7:
 10856     03A0                     _statusBuffer@main$F3781:
 10857     03A0                     	ds	80
 10858                           
 10859                           	psect	inittext
 10860     1A42                     init_ram:
 10861     1A42  00FE               	movwf	btemp
 10862     1A43                     initloop:
 10863     1A43  0012               	moviw fsr0++
 10864     1A44  001E               	movwi fsr1++
 10865     1A45  0BFE               	decfsz	btemp,f
 10866     1A46  2A43               	goto	initloop
 10867     1A47  3400               	retlw	0
 10868                           
 10869                           	psect	clrtext
 10870     1A3C                     clear_ram0:	
 10871                           ;	Called with FSR0 containing the base address, and
 10872                           ;	WREG with the size to clear
 10873                           
 10874     1A3C  0064               	clrwdt	;clear the watchdog before getting into this loop
 10875     1A3D                     clrloop0:
 10876     1A3D  0180               	clrf	0	;clear RAM location pointed to by FSR
 10877     1A3E  3101               	addfsr 0,1
 10878     1A3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10879     1A40  2A3D               	goto	clrloop0	;have we reached the end yet?
 10880     1A41  3400               	retlw	0	;all done for this memory range, return
 10881                           
 10882                           	psect	cstackBANK3
 10883     01C7                     __pcstackBANK3:
 10884     01C7                     LIGHTBLUE_TemperatureSensor@payload:
 10885                           
 10886                           ; 5 bytes @ 0x0
 10887     01C7                     	ds	5
 10888     01CC                     LIGHTBLUE_TemperatureSensor@temperature:
 10889                           
 10890                           ; 2 bytes @ 0x5
 10891     01CC                     	ds	2
 10892                           
 10893                           	psect	cstackBANK1
 10894     00E1                     __pcstackBANK1:
 10895     00E1                     ??___fltol:
 10896                           
 10897                           ; 1 bytes @ 0x0
 10898     00E1                     	ds	4
 10899     00E5                     _main$5406:
 10900                           
 10901                           ; 1 bytes @ 0x4
 10902     00E5                     	ds	1
 10903                           
 10904                           	psect	cstackCOMMON
 10905     0070                     __pcstackCOMMON:
 10906     0070                     ?_BMA253_NewAccelDataRdyY:
 10907     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910     0070                     ?_readRegister:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925     0070                     ?_RN487X_EnterCmdMode:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928     0070                     ?_RN487X_EnterDataMode:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931     0070                     ?_EUSART1_Read:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934     0070                     ?_EUSART1_is_rx_ready:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937     0070                     ?_EUSART1_Receive_ISR:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940     0070                     ?_EUSART1_is_tx_done:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943     0070                     ?_EUSART1_Transmit_ISR:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946     0070                     ??_EUSART1_Transmit_ISR:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949     0070                     ?_EUSART1_Initialize:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952     0070                     ?_EUSART2_Read:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955     0070                     ?_EUSART2_is_rx_ready:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958     0070                     ?_EUSART2_Receive_ISR:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961     0070                     ?_EUSART2_is_tx_done:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964     0070                     ?_EUSART2_Transmit_ISR:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967     0070                     ??_EUSART2_Transmit_ISR:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970     0070                     ?_EUSART2_Initialize:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973     0070                     ?_I2C1_Open:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976     0070                     ?_I2C1_MasterWrite:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979     0070                     ?_I2C1_Close:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982     0070                     ?_I2C1_MasterRead:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985     0070                     ?_RN487X_IsConnected:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988     0070                     ?_RN487X_Read:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991     0070                     ?_RN487X_DataReady:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994     0070                     ?_RN487X_Read@rn487x_interface$F1380:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997     0070                     ?_RN487X_is_tx_done:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000     0070                     ?_RN487X_is_rx_ready:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003     0070                     ?_RN487X_FilterData:	
 11004                           ; 1 bytes @ 0x0
 11005                           
 11006     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11007                           ; 1 bytes @ 0x0
 11008                           
 11009     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11010                           ; 1 bytes @ 0x0
 11011                           
 11012     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11013                           ; 1 bytes @ 0x0
 11014                           
 11015     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11016                           ; 1 bytes @ 0x0
 11017                           
 11018     0070                     ?_EUSART2_DefaultErrorHandler:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021     0070                     ?_EUSART2_RxDataHandler:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024     0070                     ??_EUSART2_RxDataHandler:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11037                           ; 1 bytes @ 0x0
 11038                           
 11039     0070                     ?_EUSART1_DefaultErrorHandler:	
 11040                           ; 1 bytes @ 0x0
 11041                           
 11042     0070                     ?_EUSART1_RxDataHandler:	
 11043                           ; 1 bytes @ 0x0
 11044                           
 11045     0070                     ??_EUSART1_RxDataHandler:	
 11046                           ; 1 bytes @ 0x0
 11047                           
 11048     0070                     ?_PIN_MANAGER_IOC:	
 11049                           ; 1 bytes @ 0x0
 11050                           
 11051     0070                     ??_PIN_MANAGER_IOC:	
 11052                           ; 1 bytes @ 0x0
 11053                           
 11054     0070                     ?_PMD_Initialize:	
 11055                           ; 1 bytes @ 0x0
 11056                           
 11057     0070                     ?_I2C1_Initialize:	
 11058                           ; 1 bytes @ 0x0
 11059                           
 11060     0070                     ?_PIN_MANAGER_Initialize:	
 11061                           ; 1 bytes @ 0x0
 11062                           
 11063     0070                     ?_OSCILLATOR_Initialize:	
 11064                           ; 1 bytes @ 0x0
 11065                           
 11066     0070                     ?_TMR0_Initialize:	
 11067                           ; 1 bytes @ 0x0
 11068                           
 11069     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11070                           ; 1 bytes @ 0x0
 11071                           
 11072     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11073                           ; 1 bytes @ 0x0
 11074                           
 11075     0070                     ?_IOCAF6_ISR:	
 11076                           ; 1 bytes @ 0x0
 11077                           
 11078     0070                     ??_IOCAF6_ISR:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081     0070                     ?_I2C1_DO_IDLE:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090     0070                     ?_I2C1_DO_TX:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093     0070                     ?_I2C1_DO_RX:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096     0070                     ?_I2C1_DO_RCEN:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099     0070                     ?_I2C1_DO_TX_EMPTY:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108     0070                     ?_I2C1_DO_SEND_RESTART:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111     0070                     ?_I2C1_DO_SEND_STOP:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114     0070                     ?_I2C1_DO_RX_ACK:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123     0070                     ?_I2C1_DO_RESET:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129     0070                     ?_I2C1_MasterClearIrq:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132     0070                     ?_I2C1_MasterOpen:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135     0070                     ?_I2C1_MasterDisableIrq:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138     0070                     ?_I2C1_MasterClose:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141     0070                     ?_I2C1_MasterStart:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144     0070                     ?_I2C1_Poller:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147     0070                     ?_I2C1_MasterWaitForEvent:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150     0070                     ?_I2C1_MasterFsm:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153     0070                     ?_I2C1_MasterIsNack:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156     0070                     ?_I2C1_MasterSendTxData:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159     0070                     ?_I2C1_MasterGetRxData:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162     0070                     ?_I2C1_MasterSendAck:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165     0070                     ?_I2C1_MasterStartRx:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168     0070                     ?_I2C1_MasterSetIrq:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171     0070                     ?_I2C1_MasterEnableRestart:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174     0070                     ?_I2C1_MasterStop:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177     0070                     ?_I2C1_MasterSendNack:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180     0070                     ?_begin:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183     0070                     ?_isConnected:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186     0070                     ?_setMagneticChannel:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189     0070                     ?_setTemperatureEn:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192     0070                     ?_setOperatingMode:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195     0070                     ?_setXYAxisRange:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198     0070                     ?_setZAxisRange:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201     0070                     ?_getError:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204     0070                     ?_getLowPower:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207     0070                     ?_getOperatingMode:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210     0070                     ?_getMagneticChannel:	
 11211                           ; 1 bytes @ 0x0
 11212                           
 11213     0070                     ?_getTemperatureEN:	
 11214                           ; 1 bytes @ 0x0
 11215                           
 11216     0070                     ?_getAngleEn:	
 11217                           ; 1 bytes @ 0x0
 11218                           
 11219     0070                     ?_BMA253_GetAccelDataY:	
 11220                           ; 1 bytes @ 0x0
 11221                           
 11222     0070                     ?_BMA253_GetAccelDataZ:	
 11223                           ; 1 bytes @ 0x0
 11224                           
 11225     0070                     ?_BMA253_GetAccelDataXYZ:	
 11226                           ; 1 bytes @ 0x0
 11227                           
 11228     0070                     ?_LIGHTBLUE_Initialize:	
 11229                           ; 1 bytes @ 0x0
 11230                           
 11231     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11232                           ; 1 bytes @ 0x0
 11233                           
 11234     0070                     ?_LIGHTBLUE_AccelSensor:	
 11235                           ; 1 bytes @ 0x0
 11236                           
 11237     0070                     ?_LIGHTBLUE_PushButton:	
 11238                           ; 1 bytes @ 0x0
 11239                           
 11240     0070                     ?_LIGHTBLUE_LedState:	
 11241                           ; 1 bytes @ 0x0
 11242                           
 11243     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11244                           ; 1 bytes @ 0x0
 11245                           
 11246     0070                     ?_LIGHTBLUE_SendSerialData:	
 11247                           ; 1 bytes @ 0x0
 11248                           
 11249     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11250                           ; 1 bytes @ 0x0
 11251                           
 11252     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11253                           ; 1 bytes @ 0x0
 11254                           
 11255     0070                     ?_rn487x_PrintMessageStart:	
 11256                           ; 1 bytes @ 0x0
 11257                           
 11258     0070                     ?_rn487x_PrintMessageEnd:	
 11259                           ; 1 bytes @ 0x0
 11260                           
 11261     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11262                           ; 1 bytes @ 0x0
 11263                           
 11264     0070                     ?_rn487x_PrintMessage:	
 11265                           ; 1 bytes @ 0x0
 11266                           
 11267     0070                     ?_RN487X_Init:	
 11268                           ; 1 bytes @ 0x0
 11269                           
 11270     0070                     ?_RN487X_ReadDefaultResponse:	
 11271                           ; 1 bytes @ 0x0
 11272                           
 11273     0070                     ?_INTERRUPT_InterruptManager:	
 11274                           ; 1 bytes @ 0x0
 11275                           
 11276     0070                     ?_SYSTEM_Initialize:	
 11277                           ; 1 bytes @ 0x0
 11278                           
 11279     0070                     ?_TMR0_HasOverflowOccured:	
 11280                           ; 1 bytes @ 0x0
 11281                           
 11282     0070                     ?_I2C1_MasterOperation:	
 11283                           ; 1 bytes @ 0x0
 11284                           
 11285     0070                     ?_getDeviceStatus:	
 11286                           ; 1 bytes @ 0x0
 11287                           
 11288     0070                     ?_main:	
 11289                           ; 1 bytes @ 0x0
 11290                           
 11291                           
 11292                           ; 2 bytes @ 0x0
 11293     0070                     	ds	1
 11294     0071                     ??_LIGHTBLUE_GetButtonValue:
 11295     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11296                           ; 1 bytes @ 0x1
 11297                           
 11298     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11299                           ; 1 bytes @ 0x1
 11300                           
 11301     0071                     ??_EUSART1_Read:	
 11302                           ; 1 bytes @ 0x1
 11303                           
 11304     0071                     ?_EUSART1_Write:	
 11305                           ; 1 bytes @ 0x1
 11306                           
 11307     0071                     ??_EUSART1_is_rx_ready:	
 11308                           ; 1 bytes @ 0x1
 11309                           
 11310     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11311                           ; 1 bytes @ 0x1
 11312                           
 11313     0071                     ??_EUSART1_Receive_ISR:	
 11314                           ; 1 bytes @ 0x1
 11315                           
 11316     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11317                           ; 1 bytes @ 0x1
 11318                           
 11319     0071                     ??_EUSART1_is_tx_done:	
 11320                           ; 1 bytes @ 0x1
 11321                           
 11322     0071                     ??_EUSART2_Read:	
 11323                           ; 1 bytes @ 0x1
 11324                           
 11325     0071                     ?_EUSART2_Write:	
 11326                           ; 1 bytes @ 0x1
 11327                           
 11328     0071                     ??_EUSART2_is_rx_ready:	
 11329                           ; 1 bytes @ 0x1
 11330                           
 11331     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11332                           ; 1 bytes @ 0x1
 11333                           
 11334     0071                     ??_EUSART2_Receive_ISR:	
 11335                           ; 1 bytes @ 0x1
 11336                           
 11337     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11338                           ; 1 bytes @ 0x1
 11339                           
 11340     0071                     ??_EUSART2_is_tx_done:	
 11341                           ; 1 bytes @ 0x1
 11342                           
 11343     0071                     ?_I2C1_SetBuffer:	
 11344                           ; 1 bytes @ 0x1
 11345                           
 11346     0071                     ??_I2C1_Open:	
 11347                           ; 1 bytes @ 0x1
 11348                           
 11349     0071                     ??_I2C1_Close:	
 11350                           ; 1 bytes @ 0x1
 11351                           
 11352     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11353                           ; 1 bytes @ 0x1
 11354                           
 11355     0071                     ??_RN487X_IsConnected:	
 11356                           ; 1 bytes @ 0x1
 11357                           
 11358     0071                     ??_RN487X_is_tx_done:	
 11359                           ; 1 bytes @ 0x1
 11360                           
 11361     0071                     ??_RN487X_is_rx_ready:	
 11362                           ; 1 bytes @ 0x1
 11363                           
 11364     0071                     ?_RN487X_IndicateRx:	
 11365                           ; 1 bytes @ 0x1
 11366                           
 11367     0071                     ?_RN487X_Reset:	
 11368                           ; 1 bytes @ 0x1
 11369                           
 11370     0071                     ?_RN487X_SetSystemMode:	
 11371                           ; 1 bytes @ 0x1
 11372                           
 11373     0071                     ?_DELAY_milliseconds:	
 11374                           ; 1 bytes @ 0x1
 11375                           
 11376     0071                     ?_strcpy:	
 11377                           ; 1 bytes @ 0x1
 11378                           
 11379     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11380                           ; 1 bytes @ 0x1
 11381                           
 11382     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11383                           ; 1 bytes @ 0x1
 11384                           
 11385     0071                     ?_EUSART2_SetErrorHandler:	
 11386                           ; 1 bytes @ 0x1
 11387                           
 11388     0071                     ??_EUSART2_DefaultErrorHandler:	
 11389                           ; 1 bytes @ 0x1
 11390                           
 11391     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11392                           ; 1 bytes @ 0x1
 11393                           
 11394     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11395                           ; 1 bytes @ 0x1
 11396                           
 11397     0071                     ?_EUSART1_SetErrorHandler:	
 11398                           ; 1 bytes @ 0x1
 11399                           
 11400     0071                     ??_EUSART1_DefaultErrorHandler:	
 11401                           ; 1 bytes @ 0x1
 11402                           
 11403     0071                     ??_PMD_Initialize:	
 11404                           ; 1 bytes @ 0x1
 11405                           
 11406     0071                     ??_I2C1_Initialize:	
 11407                           ; 1 bytes @ 0x1
 11408                           
 11409     0071                     ??_OSCILLATOR_Initialize:	
 11410                           ; 1 bytes @ 0x1
 11411                           
 11412     0071                     ??_TMR0_Initialize:	
 11413                           ; 1 bytes @ 0x1
 11414                           
 11415     0071                     ?_IOCAF6_SetInterruptHandler:	
 11416                           ; 1 bytes @ 0x1
 11417                           
 11418     0071                     ??_I2C1_DO_IDLE:	
 11419                           ; 1 bytes @ 0x1
 11420                           
 11421     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11422                           ; 1 bytes @ 0x1
 11423                           
 11424     0071                     ??_I2C1_DO_RCEN:	
 11425                           ; 1 bytes @ 0x1
 11426                           
 11427     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11428                           ; 1 bytes @ 0x1
 11429                           
 11430     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11431                           ; 1 bytes @ 0x1
 11432                           
 11433     0071                     ??_I2C1_DO_SEND_RESTART:	
 11434                           ; 1 bytes @ 0x1
 11435                           
 11436     0071                     ??_I2C1_DO_SEND_STOP:	
 11437                           ; 1 bytes @ 0x1
 11438                           
 11439     0071                     ??_I2C1_DO_RX_ACK:	
 11440                           ; 1 bytes @ 0x1
 11441                           
 11442     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11443                           ; 1 bytes @ 0x1
 11444                           
 11445     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11446                           ; 1 bytes @ 0x1
 11447                           
 11448     0071                     ??_I2C1_DO_RESET:	
 11449                           ; 1 bytes @ 0x1
 11450                           
 11451     0071                     ??_I2C1_MasterClearIrq:	
 11452                           ; 1 bytes @ 0x1
 11453                           
 11454     0071                     ??_I2C1_MasterOpen:	
 11455                           ; 1 bytes @ 0x1
 11456                           
 11457     0071                     ??_I2C1_MasterDisableIrq:	
 11458                           ; 1 bytes @ 0x1
 11459                           
 11460     0071                     ??_I2C1_MasterClose:	
 11461                           ; 1 bytes @ 0x1
 11462                           
 11463     0071                     ??_I2C1_MasterStart:	
 11464                           ; 1 bytes @ 0x1
 11465                           
 11466     0071                     ?_I2C1_SetCallback:	
 11467                           ; 1 bytes @ 0x1
 11468                           
 11469     0071                     ??_I2C1_MasterWaitForEvent:	
 11470                           ; 1 bytes @ 0x1
 11471                           
 11472     0071                     ??_I2C1_MasterIsNack:	
 11473                           ; 1 bytes @ 0x1
 11474                           
 11475     0071                     ??_I2C1_MasterSendTxData:	
 11476                           ; 1 bytes @ 0x1
 11477                           
 11478     0071                     ??_I2C1_MasterGetRxData:	
 11479                           ; 1 bytes @ 0x1
 11480                           
 11481     0071                     ??_I2C1_MasterSendAck:	
 11482                           ; 1 bytes @ 0x1
 11483                           
 11484     0071                     ??_I2C1_MasterStartRx:	
 11485                           ; 1 bytes @ 0x1
 11486                           
 11487     0071                     ??_I2C1_MasterSetIrq:	
 11488                           ; 1 bytes @ 0x1
 11489                           
 11490     0071                     ??_I2C1_MasterEnableRestart:	
 11491                           ; 1 bytes @ 0x1
 11492                           
 11493     0071                     ??_I2C1_MasterStop:	
 11494                           ; 1 bytes @ 0x1
 11495                           
 11496     0071                     ??_I2C1_MasterSendNack:	
 11497                           ; 1 bytes @ 0x1
 11498                           
 11499     0071                     ?_bitWrite:	
 11500                           ; 1 bytes @ 0x1
 11501                           
 11502     0071                     ?_bitRead:	
 11503                           ; 1 bytes @ 0x1
 11504                           
 11505     0071                     ?_strchr:	
 11506                           ; 1 bytes @ 0x1
 11507                           
 11508     0071                     ??_LIGHTBLUE_Initialize:	
 11509                           ; 1 bytes @ 0x1
 11510                           
 11511     0071                     ??_INTERRUPT_InterruptManager:	
 11512                           ; 1 bytes @ 0x1
 11513                           
 11514     0071                     ??_TMR0_HasOverflowOccured:	
 11515                           ; 1 bytes @ 0x1
 11516                           
 11517     0071                     ?_strlen:	
 11518                           ; 1 bytes @ 0x1
 11519                           
 11520     0071                     ?_strncmp:	
 11521                           ; 2 bytes @ 0x1
 11522                           
 11523     0071                     ?___xxtofl:	
 11524                           ; 2 bytes @ 0x1
 11525                           
 11526     0071                     RN487X_Reset@value:	
 11527                           ; 4 bytes @ 0x1
 11528                           
 11529     0071                     RN487X_IndicateRx@value:	
 11530                           ; 1 bytes @ 0x1
 11531                           
 11532     0071                     RN487X_SetSystemMode@mode:	
 11533                           ; 1 bytes @ 0x1
 11534                           
 11535     0071                     RN487X_SetAsyncMessageHandler@len:	
 11536                           ; 1 bytes @ 0x1
 11537                           
 11538     0071                     EUSART2_Write@txData:	
 11539                           ; 1 bytes @ 0x1
 11540                           
 11541     0071                     EUSART1_Write@txData:	
 11542                           ; 1 bytes @ 0x1
 11543                           
 11544     0071                     I2C1_Open@address:	
 11545                           ; 1 bytes @ 0x1
 11546                           
 11547     0071                     I2C1_Close@returnValue:	
 11548                           ; 1 bytes @ 0x1
 11549                           
 11550     0071                     I2C1_MasterSendTxData@data:	
 11551                           ; 1 bytes @ 0x1
 11552                           
 11553     0071                     strcpy@src:	
 11554                           ; 1 bytes @ 0x1
 11555                           
 11556     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11557                           ; 1 bytes @ 0x1
 11558                           
 11559     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11560                           ; 2 bytes @ 0x1
 11561                           
 11562     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11563                           ; 2 bytes @ 0x1
 11564                           
 11565     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11566                           ; 2 bytes @ 0x1
 11567                           
 11568     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11569                           ; 2 bytes @ 0x1
 11570                           
 11571     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11572                           ; 2 bytes @ 0x1
 11573                           
 11574     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11575                           ; 2 bytes @ 0x1
 11576                           
 11577     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11578                           ; 2 bytes @ 0x1
 11579                           
 11580     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11581                           ; 2 bytes @ 0x1
 11582                           
 11583     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11584                           ; 2 bytes @ 0x1
 11585                           
 11586     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11587                           ; 2 bytes @ 0x1
 11588                           
 11589     0071                     I2C1_SetBuffer@bufferSize:	
 11590                           ; 2 bytes @ 0x1
 11591                           
 11592     0071                     I2C1_SetCallback@cb:	
 11593                           ; 2 bytes @ 0x1
 11594                           
 11595     0071                     DELAY_milliseconds@milliseconds:	
 11596                           ; 2 bytes @ 0x1
 11597                           
 11598     0071                     bitRead@reg:	
 11599                           ; 2 bytes @ 0x1
 11600                           
 11601     0071                     bitWrite@reg:	
 11602                           ; 2 bytes @ 0x1
 11603                           
 11604     0071                     strlen@s:	
 11605                           ; 2 bytes @ 0x1
 11606                           
 11607     0071                     strchr@c:	
 11608                           ; 2 bytes @ 0x1
 11609                           
 11610     0071                     strncmp@r:	
 11611                           ; 2 bytes @ 0x1
 11612                           
 11613     0071                     ___xxtofl@val:	
 11614                           ; 2 bytes @ 0x1
 11615                           
 11616                           
 11617                           ; 4 bytes @ 0x1
 11618     0071                     	ds	1
 11619     0072                     ??_EUSART1_Write:
 11620     0072                     ??_EUSART2_Write:	
 11621                           ; 1 bytes @ 0x2
 11622                           
 11623     0072                     ??_RN487X_SetAsyncMessageHandler:	
 11624                           ; 1 bytes @ 0x2
 11625                           
 11626     0072                     ??_RN487X_IndicateRx:	
 11627                           ; 1 bytes @ 0x2
 11628                           
 11629     0072                     ??_RN487X_Reset:	
 11630                           ; 1 bytes @ 0x2
 11631                           
 11632     0072                     ??_RN487X_SetSystemMode:	
 11633                           ; 1 bytes @ 0x2
 11634                           
 11635     0072                     ??_strcpy:	
 11636                           ; 1 bytes @ 0x2
 11637                           
 11638     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11639                           ; 1 bytes @ 0x2
 11640                           
 11641     0072                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11642                           ; 1 bytes @ 0x2
 11643                           
 11644     0072                     EUSART2_Read@readValue:	
 11645                           ; 1 bytes @ 0x2
 11646                           
 11647     0072                     EUSART1_Read@readValue:	
 11648                           ; 1 bytes @ 0x2
 11649                           
 11650     0072                     I2C1_Open@returnValue:	
 11651                           ; 1 bytes @ 0x2
 11652                           
 11653     0072                     strcpy@d:	
 11654                           ; 1 bytes @ 0x2
 11655                           
 11656                           
 11657                           ; 1 bytes @ 0x2
 11658     0072                     	ds	1
 11659     0073                     ??_strlen:
 11660     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11661                           ; 1 bytes @ 0x3
 11662                           
 11663     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11664                           ; 1 bytes @ 0x3
 11665                           
 11666     0073                     ??_EUSART1_Initialize:	
 11667                           ; 1 bytes @ 0x3
 11668                           
 11669     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11670                           ; 1 bytes @ 0x3
 11671                           
 11672     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11673                           ; 1 bytes @ 0x3
 11674                           
 11675     0073                     ??_EUSART2_Initialize:	
 11676                           ; 1 bytes @ 0x3
 11677                           
 11678     0073                     ??_I2C1_SetBuffer:	
 11679                           ; 1 bytes @ 0x3
 11680                           
 11681     0073                     ??_RN487X_Read@rn487x_interface$F1382:	
 11682                           ; 1 bytes @ 0x3
 11683                           
 11684     0073                     ??_DELAY_milliseconds:	
 11685                           ; 1 bytes @ 0x3
 11686                           
 11687     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11688                           ; 1 bytes @ 0x3
 11689                           
 11690     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11691                           ; 1 bytes @ 0x3
 11692                           
 11693     0073                     ??_EUSART2_SetErrorHandler:	
 11694                           ; 1 bytes @ 0x3
 11695                           
 11696     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11697                           ; 1 bytes @ 0x3
 11698                           
 11699     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11700                           ; 1 bytes @ 0x3
 11701                           
 11702     0073                     ??_EUSART1_SetErrorHandler:	
 11703                           ; 1 bytes @ 0x3
 11704                           
 11705     0073                     ??_PIN_MANAGER_Initialize:	
 11706                           ; 1 bytes @ 0x3
 11707                           
 11708     0073                     ??_IOCAF6_SetInterruptHandler:	
 11709                           ; 1 bytes @ 0x3
 11710                           
 11711     0073                     ??_strchr:	
 11712                           ; 1 bytes @ 0x3
 11713                           
 11714     0073                     ??_rn487x_PrintMessageStart:	
 11715                           ; 1 bytes @ 0x3
 11716                           
 11717     0073                     ??_rn487x_PrintMessageEnd:	
 11718                           ; 1 bytes @ 0x3
 11719                           
 11720     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11721                           ; 1 bytes @ 0x3
 11722                           
 11723     0073                     ?_RN487X_ReadMsg:	
 11724                           ; 1 bytes @ 0x3
 11725                           
 11726     0073                     ??_RN487X_ReadDefaultResponse:	
 11727                           ; 1 bytes @ 0x3
 11728                           
 11729     0073                     ??_SYSTEM_Initialize:	
 11730                           ; 1 bytes @ 0x3
 11731                           
 11732     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11733                           ; 1 bytes @ 0x3
 11734                           
 11735     0073                     I2C1_SetBuffer@buffer:	
 11736                           ; 1 bytes @ 0x3
 11737                           
 11738     0073                     I2C1_SetCallback@ptr:	
 11739                           ; 1 bytes @ 0x3
 11740                           
 11741     0073                     bitRead@position:	
 11742                           ; 1 bytes @ 0x3
 11743                           
 11744     0073                     bitWrite@position:	
 11745                           ; 1 bytes @ 0x3
 11746                           
 11747     0073                     strcpy@dest:	
 11748                           ; 1 bytes @ 0x3
 11749                           
 11750     0073                     strchr@s:	
 11751                           ; 1 bytes @ 0x3
 11752                           
 11753     0073                     RN487X_ReadMsg@expectedMsg:	
 11754                           ; 1 bytes @ 0x3
 11755                           
 11756     0073                     strncmp@n:	
 11757                           ; 2 bytes @ 0x3
 11758                           
 11759     0073                     RN487X_ReadDefaultResponse@resp:	
 11760                           ; 2 bytes @ 0x3
 11761                           
 11762                           
 11763                           ; 3 bytes @ 0x3
 11764     0073                     	ds	1
 11765     0074                     ?_RN487X_Delay:
 11766     0074                     ??_I2C1_SetCallback:	
 11767                           ; 1 bytes @ 0x4
 11768                           
 11769     0074                     ??_bitRead:	
 11770                           ; 1 bytes @ 0x4
 11771                           
 11772     0074                     I2C1_SetCallback@idx:	
 11773                           ; 1 bytes @ 0x4
 11774                           
 11775     0074                     bitWrite@value:	
 11776                           ; 1 bytes @ 0x4
 11777                           
 11778     0074                     RN487X_Delay@delayCount:	
 11779                           ; 1 bytes @ 0x4
 11780                           
 11781     0074                     strlen@a:	
 11782                           ; 2 bytes @ 0x4
 11783                           
 11784                           
 11785                           ; 2 bytes @ 0x4
 11786     0074                     	ds	1
 11787     0075                     ?_I2C1_SetDataCompleteCallback:
 11788     0075                     ?_I2C1_SetAddressNackCallback:	
 11789                           ; 1 bytes @ 0x5
 11790                           
 11791     0075                     ??_bitWrite:	
 11792                           ; 1 bytes @ 0x5
 11793                           
 11794     0075                     ??_strncmp:	
 11795                           ; 1 bytes @ 0x5
 11796                           
 11797     0075                     ??___xxtofl:	
 11798                           ; 1 bytes @ 0x5
 11799                           
 11800     0075                     RN487X_ReadMsg@msgLen:	
 11801                           ; 1 bytes @ 0x5
 11802                           
 11803     0075                     I2C1_SetDataCompleteCallback@cb:	
 11804                           ; 1 bytes @ 0x5
 11805                           
 11806     0075                     I2C1_SetAddressNackCallback@cb:	
 11807                           ; 2 bytes @ 0x5
 11808                           
 11809                           
 11810                           ; 2 bytes @ 0x5
 11811     0075                     	ds	1
 11812     0076                     ?_LIGHTBLUE_SplitByte:
 11813     0076                     ?_RN487X_Write:	
 11814                           ; 1 bytes @ 0x6
 11815                           
 11816     0076                     ??_RN487X_Delay:	
 11817                           ; 1 bytes @ 0x6
 11818                           
 11819     0076                     ??_rn487x_PrintMessage:	
 11820                           ; 1 bytes @ 0x6
 11821                           
 11822     0076                     ??_RN487X_Init:	
 11823                           ; 1 bytes @ 0x6
 11824                           
 11825     0076                     ??_RN487X_ReadMsg:	
 11826                           ; 1 bytes @ 0x6
 11827                           
 11828     0076                     RN487X_Write@txData:	
 11829                           ; 1 bytes @ 0x6
 11830                           
 11831     0076                     RN487X_ReadDefaultResponse@status:	
 11832                           ; 1 bytes @ 0x6
 11833                           
 11834     0076                     bitWrite@msb:	
 11835                           ; 1 bytes @ 0x6
 11836                           
 11837     0076                     strncmp@l:	
 11838                           ; 1 bytes @ 0x6
 11839                           
 11840     0076                     LIGHTBLUE_SplitByte@payload:	
 11841                           ; 1 bytes @ 0x6
 11842                           
 11843                           
 11844                           ; 2 bytes @ 0x6
 11845     0076                     	ds	1
 11846     0077                     ?_LIGHTBLUE_SendPacket:
 11847     0077                     ??_RN487X_Write:	
 11848                           ; 1 bytes @ 0x7
 11849                           
 11850     0077                     ?_strstr:	
 11851                           ; 1 bytes @ 0x7
 11852                           
 11853     0077                     ??_LIGHTBLUE_SendSerialData:	
 11854                           ; 1 bytes @ 0x7
 11855                           
 11856     0077                     ?_RN487X_SendCmd:	
 11857                           ; 1 bytes @ 0x7
 11858                           
 11859     0077                     RN487X_SendCmd@cmdLen:	
 11860                           ; 1 bytes @ 0x7
 11861                           
 11862     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11863                           ; 1 bytes @ 0x7
 11864                           
 11865     0077                     bitWrite@mask:	
 11866                           ; 1 bytes @ 0x7
 11867                           
 11868     0077                     LIGHTBLUE_SendPacket@payload:	
 11869                           ; 1 bytes @ 0x7
 11870                           
 11871     0077                     I2C1_SetAddressNackCallback@ptr:	
 11872                           ; 2 bytes @ 0x7
 11873                           
 11874     0077                     strstr@n:	
 11875                           ; 2 bytes @ 0x7
 11876                           
 11877                           
 11878                           ; 2 bytes @ 0x7
 11879     0077                     	ds	1
 11880     0078                     ??_I2C1_SetDataCompleteCallback:
 11881     0078                     ?_rd1RegCompleteHandler:	
 11882                           ; 1 bytes @ 0x8
 11883                           
 11884     0078                     ?_rd2RegCompleteHandler:	
 11885                           ; 1 bytes @ 0x8
 11886                           
 11887     0078                     ?_wr1RegCompleteHandler:	
 11888                           ; 1 bytes @ 0x8
 11889                           
 11890     0078                     ?_wr2RegCompleteHandler:	
 11891                           ; 1 bytes @ 0x8
 11892                           
 11893     0078                     ?_rdBlkRegCompleteHandler:	
 11894                           ; 1 bytes @ 0x8
 11895                           
 11896     0078                     ?_I2C1_CallbackReturnStop:	
 11897                           ; 1 bytes @ 0x8
 11898                           
 11899     0078                     ?_I2C1_CallbackReturnReset:	
 11900                           ; 1 bytes @ 0x8
 11901                           
 11902     0078                     ?_wr1RegCompleteHandler@strncmp$F4831:	
 11903                           ; 1 bytes @ 0x8
 11904                           
 11905     0078                     ?_rd1RegCompleteHandler@strncmp$F4837:	
 11906                           ; 1 bytes @ 0x8
 11907                           
 11908     0078                     ?_rd2RegCompleteHandler@strncmp$F4840:	
 11909                           ; 1 bytes @ 0x8
 11910                           
 11911     0078                     ?_wr2RegCompleteHandler@strncmp$F4843:	
 11912                           ; 1 bytes @ 0x8
 11913                           
 11914     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4849:	
 11915                           ; 1 bytes @ 0x8
 11916                           
 11917     0078                     ??_RN487X_SendCmd:	
 11918                           ; 1 bytes @ 0x8
 11919                           
 11920     0078                     LIGHTBLUE_SendSerialData@length:	
 11921                           ; 1 bytes @ 0x8
 11922                           
 11923     0078                     LIGHTBLUE_SplitByte@value:	
 11924                           ; 1 bytes @ 0x8
 11925                           
 11926     0078                     wr1RegCompleteHandler@p:	
 11927                           ; 1 bytes @ 0x8
 11928                           
 11929     0078                     rd1RegCompleteHandler@p:	
 11930                           ; 1 bytes @ 0x8
 11931                           
 11932     0078                     rd2RegCompleteHandler@p:	
 11933                           ; 1 bytes @ 0x8
 11934                           
 11935     0078                     wr2RegCompleteHandler@p:	
 11936                           ; 1 bytes @ 0x8
 11937                           
 11938     0078                     rdBlkRegCompleteHandler@p:	
 11939                           ; 1 bytes @ 0x8
 11940                           
 11941     0078                     rd1RegCompleteHandler@i2c1_master_example$F1237@ptr:	
 11942                           ; 1 bytes @ 0x8
 11943                           
 11944     0078                     rd2RegCompleteHandler@i2c1_master_example$F1248@ptr:	
 11945                           ; 1 bytes @ 0x8
 11946                           
 11947     0078                     wr1RegCompleteHandler@i2c1_master_example$F1254@ptr:	
 11948                           ; 1 bytes @ 0x8
 11949                           
 11950     0078                     wr2RegCompleteHandler@i2c1_master_example$F1260@ptr:	
 11951                           ; 1 bytes @ 0x8
 11952                           
 11953     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr:	
 11954                           ; 1 bytes @ 0x8
 11955                           
 11956     0078                     RN487X_ReadMsg@resp:	
 11957                           ; 1 bytes @ 0x8
 11958                           
 11959     0078                     I2C1_CallbackReturnStop@funPtr:	
 11960                           ; 1 bytes @ 0x8
 11961                           
 11962     0078                     I2C1_CallbackReturnReset@funPtr:	
 11963                           ; 1 bytes @ 0x8
 11964                           
 11965     0078                     bitWrite@lsb:	
 11966                           ; 1 bytes @ 0x8
 11967                           
 11968                           
 11969                           ; 1 bytes @ 0x8
 11970     0078                     	ds	1
 11971     0079                     ??_LIGHTBLUE_SendPacket:
 11972     0079                     ??_LIGHTBLUE_SplitByte:	
 11973                           ; 1 bytes @ 0x9
 11974                           
 11975     0079                     ??_I2C1_SetAddressNackCallback:	
 11976                           ; 1 bytes @ 0x9
 11977                           
 11978     0079                     ??_rd1RegCompleteHandler:	
 11979                           ; 1 bytes @ 0x9
 11980                           
 11981     0079                     ??_rd2RegCompleteHandler:	
 11982                           ; 1 bytes @ 0x9
 11983                           
 11984     0079                     ??_wr1RegCompleteHandler:	
 11985                           ; 1 bytes @ 0x9
 11986                           
 11987     0079                     ??_wr2RegCompleteHandler:	
 11988                           ; 1 bytes @ 0x9
 11989                           
 11990     0079                     ??_rdBlkRegCompleteHandler:	
 11991                           ; 1 bytes @ 0x9
 11992                           
 11993     0079                     ??_strstr:	
 11994                           ; 1 bytes @ 0x9
 11995                           
 11996     0079                     ??_I2C1_DO_TX:	
 11997                           ; 1 bytes @ 0x9
 11998                           
 11999     0079                     ??_I2C1_DO_RX:	
 12000                           ; 1 bytes @ 0x9
 12001                           
 12002     0079                     ??_I2C1_DO_TX_EMPTY:	
 12003                           ; 1 bytes @ 0x9
 12004                           
 12005     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 12006                           ; 1 bytes @ 0x9
 12007                           
 12008     0079                     ??_I2C1_CallbackReturnStop:	
 12009                           ; 1 bytes @ 0x9
 12010                           
 12011     0079                     ??_I2C1_CallbackReturnReset:	
 12012                           ; 1 bytes @ 0x9
 12013                           
 12014     0079                     ??_wr1RegCompleteHandler@strncmp$F4833:	
 12015                           ; 1 bytes @ 0x9
 12016                           
 12017     0079                     ??_rd1RegCompleteHandler@strncmp$F4839:	
 12018                           ; 1 bytes @ 0x9
 12019                           
 12020     0079                     ??_rd2RegCompleteHandler@strncmp$F4842:	
 12021                           ; 1 bytes @ 0x9
 12022                           
 12023     0079                     ??_wr2RegCompleteHandler@strncmp$F4845:	
 12024                           ; 1 bytes @ 0x9
 12025                           
 12026     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4851:	
 12027                           ; 1 bytes @ 0x9
 12028                           
 12029     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12030                           ; 1 bytes @ 0x9
 12031                           
 12032     0079                     RN487X_SendCmd@index:	
 12033                           ; 1 bytes @ 0x9
 12034                           
 12035     0079                     RN487X_ReadMsg@index:	
 12036                           ; 1 bytes @ 0x9
 12037                           
 12038                           
 12039                           ; 1 bytes @ 0x9
 12040     0079                     	ds	1
 12041     007A                     ??_LIGHTBLUE_SplitWord:
 12042     007A                     RN487X_SendCmd@cmd:	
 12043                           ; 1 bytes @ 0xA
 12044                           
 12045                           
 12046                           ; 1 bytes @ 0xA
 12047     007A                     	ds	1
 12048     007B                     ??_i2c_write1ByteRegister:
 12049     007B                     ??_i2c_read1ByteRegister:	
 12050                           ; 1 bytes @ 0xB
 12051                           
 12052     007B                     ??_BMA253_NewAccelDataRdyY:	
 12053                           ; 1 bytes @ 0xB
 12054                           
 12055     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12056                           ; 1 bytes @ 0xB
 12057                           
 12058     007B                     ??_readRegister:	
 12059                           ; 1 bytes @ 0xB
 12060                           
 12061     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12062                           ; 1 bytes @ 0xB
 12063                           
 12064     007B                     ??_RN487X_EnterCmdMode:	
 12065                           ; 1 bytes @ 0xB
 12066                           
 12067     007B                     ??_RN487X_SetOutputs:	
 12068                           ; 1 bytes @ 0xB
 12069                           
 12070     007B                     ??_RN487X_EnterDataMode:	
 12071                           ; 1 bytes @ 0xB
 12072                           
 12073     007B                     ??_I2C1_MasterWrite:	
 12074                           ; 1 bytes @ 0xB
 12075                           
 12076     007B                     ??_I2C1_MasterRead:	
 12077                           ; 1 bytes @ 0xB
 12078                           
 12079     007B                     ?_RN487X_MessageHandler:	
 12080                           ; 1 bytes @ 0xB
 12081                           
 12082     007B                     ??_I2C1_Poller:	
 12083                           ; 1 bytes @ 0xB
 12084                           
 12085     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12086                           ; 1 bytes @ 0xB
 12087                           
 12088     007B                     ??_i2c_readNBytes:	
 12089                           ; 1 bytes @ 0xB
 12090                           
 12091     007B                     ??_I2C1_MasterOperation:	
 12092                           ; 1 bytes @ 0xB
 12093                           
 12094     007B                     ??_getDeviceStatus:	
 12095                           ; 1 bytes @ 0xB
 12096                           
 12097     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12098                           ; 1 bytes @ 0xB
 12099                           
 12100     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12101                           ; 1 bytes @ 0xB
 12102                           
 12103     007B                     LIGHTBLUE_SendPacket@packetID:	
 12104                           ; 1 bytes @ 0xB
 12105                           
 12106     007B                     i2c_write1ByteRegister@address:	
 12107                           ; 1 bytes @ 0xB
 12108                           
 12109     007B                     i2c_readNBytes@address:	
 12110                           ; 1 bytes @ 0xB
 12111                           
 12112     007B                     RN487X_MessageHandler@message:	
 12113                           ; 1 bytes @ 0xB
 12114                           
 12115     007B                     getDeviceStatus@deviceStatusReg:	
 12116                           ; 1 bytes @ 0xB
 12117                           
 12118                           
 12119                           ; 1 bytes @ 0xB
 12120     007B                     	ds	1
 12121     007C                     ??_RN487X_Read:
 12122     007C                     ??_RN487X_DataReady:	
 12123                           ; 1 bytes @ 0xC
 12124                           
 12125     007C                     ??_RN487X_MessageHandler:	
 12126                           ; 1 bytes @ 0xC
 12127                           
 12128     007C                     ??_begin:	
 12129                           ; 1 bytes @ 0xC
 12130                           
 12131     007C                     ??_isConnected:	
 12132                           ; 1 bytes @ 0xC
 12133                           
 12134     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12135                           ; 1 bytes @ 0xC
 12136                           
 12137     007C                     ??_LIGHTBLUE_AccelSensor:	
 12138                           ; 1 bytes @ 0xC
 12139                           
 12140     007C                     ??_LIGHTBLUE_PushButton:	
 12141                           ; 1 bytes @ 0xC
 12142                           
 12143     007C                     ??_LIGHTBLUE_LedState:	
 12144                           ; 1 bytes @ 0xC
 12145                           
 12146     007C                     ??_writeRegister:	
 12147                           ; 1 bytes @ 0xC
 12148                           
 12149                           
 12150                           	psect	cstackBANK0
 12151     0020                     __pcstackBANK0:	
 12152                           ; 1 bytes @ 0xC
 12153                           
 12154     0020                     ?_LIGHTBLUE_SplitWord:
 12155     0020                     ?_RN487X_SetOutputs:	
 12156                           ; 1 bytes @ 0x0
 12157                           
 12158     0020                     ??_I2C1_MasterFsm:	
 12159                           ; 1 bytes @ 0x0
 12160                           
 12161     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12162                           ; 1 bytes @ 0x0
 12163                           
 12164     0020                     LIGHTBLUE_PushButton@button:	
 12165                           ; 1 bytes @ 0x0
 12166                           
 12167     0020                     ___xxtofl@sign:	
 12168                           ; 1 bytes @ 0x0
 12169                           
 12170     0020                     LIGHTBLUE_SplitWord@payload:	
 12171                           ; 1 bytes @ 0x0
 12172                           
 12173     0020                     RN487X_SetOutputs@bitMap:	
 12174                           ; 2 bytes @ 0x0
 12175                           
 12176     0020                     strstr@nl:	
 12177                           ; 2 bytes @ 0x0
 12178                           
 12179     0020                     LIGHTBLUE_LedState@payload:	
 12180                           ; 2 bytes @ 0x0
 12181                           
 12182     0020                     rn487x_PrintMessage@printCharacter:	
 12183                           ; 3 bytes @ 0x0
 12184                           
 12185                           
 12186                           ; 32 bytes @ 0x0
 12187     0020                     	ds	1
 12188     0021                     ___xxtofl@exp:
 12189     0021                     LIGHTBLUE_PushButton@payload:	
 12190                           ; 1 bytes @ 0x1
 12191                           
 12192                           
 12193                           ; 3 bytes @ 0x1
 12194     0021                     	ds	1
 12195     0022                     RN487X_SetOutputs@ioLowNibble:
 12196     0022                     I2C1_MasterOperation@read:	
 12197                           ; 1 bytes @ 0x2
 12198                           
 12199     0022                     strstr@h:	
 12200                           ; 1 bytes @ 0x2
 12201                           
 12202     0022                     LIGHTBLUE_SplitWord@value:	
 12203                           ; 1 bytes @ 0x2
 12204                           
 12205     0022                     ___xxtofl@arg:	
 12206                           ; 2 bytes @ 0x2
 12207                           
 12208     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12209                           ; 4 bytes @ 0x2
 12210                           
 12211                           
 12212                           ; 19 bytes @ 0x2
 12213     0022                     	ds	1
 12214     0023                     LIGHTBLUE_LedState@led:
 12215     0023                     RN487X_SetOutputs@stateLowNibble:	
 12216                           ; 1 bytes @ 0x3
 12217                           
 12218     0023                     I2C1_MasterOperation@returnValue:	
 12219                           ; 1 bytes @ 0x3
 12220                           
 12221                           
 12222                           ; 1 bytes @ 0x3
 12223     0023                     	ds	1
 12224     0024                     ?_i2c_write1ByteRegister:
 12225     0024                     ?_i2c_read1ByteRegister:	
 12226                           ; 1 bytes @ 0x4
 12227                           
 12228     0024                     ?_i2c_readNBytes:	
 12229                           ; 1 bytes @ 0x4
 12230                           
 12231     0024                     i2c_write1ByteRegister@reg:	
 12232                           ; 1 bytes @ 0x4
 12233                           
 12234     0024                     i2c_read1ByteRegister@reg:	
 12235                           ; 1 bytes @ 0x4
 12236                           
 12237     0024                     i2c_readNBytes@data:	
 12238                           ; 1 bytes @ 0x4
 12239                           
 12240     0024                     RN487X_SetOutputs@ioHighNibble:	
 12241                           ; 1 bytes @ 0x4
 12242                           
 12243                           
 12244                           ; 1 bytes @ 0x4
 12245     0024                     	ds	1
 12246     0025                     i2c_write1ByteRegister@data:
 12247     0025                     i2c_read1ByteRegister@address:	
 12248                           ; 1 bytes @ 0x5
 12249                           
 12250     0025                     RN487X_SetOutputs@stateHighNibble:	
 12251                           ; 1 bytes @ 0x5
 12252                           
 12253     0025                     i2c_readNBytes@len:	
 12254                           ; 1 bytes @ 0x5
 12255                           
 12256                           
 12257                           ; 2 bytes @ 0x5
 12258     0025                     	ds	1
 12259     0026                     ?_writeRegister:
 12260     0026                     ?___fladd:	
 12261                           ; 1 bytes @ 0x6
 12262                           
 12263     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12264                           ; 4 bytes @ 0x6
 12265                           
 12266     0026                     i2c_read1ByteRegister@e:	
 12267                           ; 1 bytes @ 0x6
 12268                           
 12269     0026                     writeRegister@data:	
 12270                           ; 1 bytes @ 0x6
 12271                           
 12272     0026                     ___fladd@b:	
 12273                           ; 1 bytes @ 0x6
 12274                           
 12275                           
 12276                           ; 4 bytes @ 0x6
 12277     0026                     	ds	1
 12278     0027                     ?_LIGHTBLUE_PerformAction:
 12279     0027                     ?_readRegisters:	
 12280                           ; 1 bytes @ 0x7
 12281                           
 12282     0027                     LIGHTBLUE_PerformAction@data:	
 12283                           ; 1 bytes @ 0x7
 12284                           
 12285     0027                     readRegisters@dataBuffer:	
 12286                           ; 1 bytes @ 0x7
 12287                           
 12288     0027                     writeRegister@regAddress:	
 12289                           ; 1 bytes @ 0x7
 12290                           
 12291     0027                     i2c_read1ByteRegister@x:	
 12292                           ; 1 bytes @ 0x7
 12293                           
 12294                           
 12295                           ; 2 bytes @ 0x7
 12296     0027                     	ds	1
 12297     0028                     ??_LIGHTBLUE_PerformAction:
 12298     0028                     readRegisters@numBytes:	
 12299                           ; 1 bytes @ 0x8
 12300                           
 12301                           
 12302                           ; 1 bytes @ 0x8
 12303     0028                     	ds	1
 12304     0029                     ??_readRegisters:
 12305     0029                     LIGHTBLUE_PerformAction@id:	
 12306                           ; 1 bytes @ 0x9
 12307                           
 12308     0029                     i2c_read1ByteRegister@d2:	
 12309                           ; 1 bytes @ 0x9
 12310                           
 12311                           
 12312                           ; 1 bytes @ 0x9
 12313     0029                     	ds	1
 12314     002A                     ??_BMA253_GetAccelDataY:
 12315     002A                     ??_BMA253_GetAccelDataZ:	
 12316                           ; 1 bytes @ 0xA
 12317                           
 12318     002A                     LIGHTBLUE_PerformAction@led:	
 12319                           ; 1 bytes @ 0xA
 12320                           
 12321     002A                     readRegister@regAddress:	
 12322                           ; 1 bytes @ 0xA
 12323                           
 12324     002A                     ___fladd@a:	
 12325                           ; 1 bytes @ 0xA
 12326                           
 12327                           
 12328                           ; 4 bytes @ 0xA
 12329     002A                     	ds	1
 12330     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12331     002B                     readRegisters@regAddress:	
 12332                           ; 1 bytes @ 0xB
 12333                           
 12334     002B                     readRegister@regVal:	
 12335                           ; 1 bytes @ 0xB
 12336                           
 12337                           
 12338                           ; 1 bytes @ 0xB
 12339     002B                     	ds	1
 12340     002C                     ??_getError:
 12341     002C                     ??_getLowPower:	
 12342                           ; 1 bytes @ 0xC
 12343                           
 12344     002C                     ??_getOperatingMode:	
 12345                           ; 1 bytes @ 0xC
 12346                           
 12347     002C                     ??_getMagneticChannel:	
 12348                           ; 1 bytes @ 0xC
 12349                           
 12350     002C                     ??_getTemperatureEN:	
 12351                           ; 1 bytes @ 0xC
 12352                           
 12353     002C                     ??_getAngleEn:	
 12354                           ; 1 bytes @ 0xC
 12355                           
 12356     002C                     ?_getManufacturerID:	
 12357                           ; 1 bytes @ 0xC
 12358                           
 12359                           
 12360                           ; 2 bytes @ 0xC
 12361     002C                     	ds	1
 12362     002D                     BMA253_GetAccelDataY@yAccelData:
 12363     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12364                           ; 1 bytes @ 0xD
 12365                           
 12366     002D                     _LIGHTBLUE_ParseIncomingPacket$461:	
 12367                           ; 1 bytes @ 0xD
 12368                           
 12369                           
 12370                           ; 2 bytes @ 0xD
 12371     002D                     	ds	1
 12372     002E                     ??_getManufacturerID:
 12373     002E                     ??___fladd:	
 12374                           ; 1 bytes @ 0xE
 12375                           
 12376     002E                     BMA253_GetAccelDataY@lsbData:	
 12377                           ; 1 bytes @ 0xE
 12378                           
 12379     002E                     BMA253_GetAccelDataZ@lsbData:	
 12380                           ; 1 bytes @ 0xE
 12381                           
 12382     002E                     getLowPower@lowPowerModeBit:	
 12383                           ; 1 bytes @ 0xE
 12384                           
 12385     002E                     getOperatingMode@opMode:	
 12386                           ; 1 bytes @ 0xE
 12387                           
 12388     002E                     getMagneticChannel@magChannel:	
 12389                           ; 1 bytes @ 0xE
 12390                           
 12391     002E                     getAngleEn@angleReg:	
 12392                           ; 1 bytes @ 0xE
 12393                           
 12394     002E                     getTemperatureEN@tempEN:	
 12395                           ; 1 bytes @ 0xE
 12396                           
 12397     002E                     getError@undervoltageError:	
 12398                           ; 1 bytes @ 0xE
 12399                           
 12400                           
 12401                           ; 1 bytes @ 0xE
 12402     002E                     	ds	1
 12403     002F                     BMA253_GetAccelDataY@msbData:
 12404     002F                     BMA253_GetAccelDataZ@msbData:	
 12405                           ; 1 bytes @ 0xF
 12406                           
 12407     002F                     getLowPower@lowPowerMode:	
 12408                           ; 1 bytes @ 0xF
 12409                           
 12410     002F                     getOperatingMode@opMode0:	
 12411                           ; 1 bytes @ 0xF
 12412                           
 12413     002F                     getMagneticChannel@magMode4:	
 12414                           ; 1 bytes @ 0xF
 12415                           
 12416     002F                     getAngleEn@angleDir2:	
 12417                           ; 1 bytes @ 0xF
 12418                           
 12419     002F                     getTemperatureEN@tempENreg:	
 12420                           ; 1 bytes @ 0xF
 12421                           
 12422     002F                     getError@otpCrcError:	
 12423                           ; 1 bytes @ 0xF
 12424                           
 12425     002F                     _LIGHTBLUE_ParseIncomingPacket$462:	
 12426                           ; 1 bytes @ 0xF
 12427                           
 12428                           
 12429                           ; 2 bytes @ 0xF
 12430     002F                     	ds	1
 12431     0030                     ??_BMA253_GetAccelDataXYZ:
 12432     0030                     getOperatingMode@opMode1:	
 12433                           ; 1 bytes @ 0x10
 12434                           
 12435     0030                     getMagneticChannel@magMode5:	
 12436                           ; 1 bytes @ 0x10
 12437                           
 12438     0030                     getAngleEn@angleDir3:	
 12439                           ; 1 bytes @ 0x10
 12440                           
 12441     0030                     getError@intPinError:	
 12442                           ; 1 bytes @ 0x10
 12443                           
 12444                           
 12445                           ; 1 bytes @ 0x10
 12446     0030                     	ds	1
 12447     0031                     BMA253_GetAccelDataXYZ@lSB:
 12448     0031                     getMagneticChannel@magMode6:	
 12449                           ; 1 bytes @ 0x11
 12450                           
 12451     0031                     getError@oscillatorError:	
 12452                           ; 1 bytes @ 0x11
 12453                           
 12454     0031                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12455                           ; 1 bytes @ 0x11
 12456                           
 12457                           
 12458                           ; 2 bytes @ 0x11
 12459     0031                     	ds	1
 12460     0032                     BMA253_GetAccelDataXYZ@mSB:
 12461     0032                     getMagneticChannel@magMode7:	
 12462                           ; 1 bytes @ 0x12
 12463                           
 12464     0032                     getError@statusReg:	
 12465                           ; 1 bytes @ 0x12
 12466                           
 12467                           
 12468                           ; 1 bytes @ 0x12
 12469     0032                     	ds	1
 12470     0033                     ??_setMagneticChannel:
 12471     0033                     ??_setTemperatureEn:	
 12472                           ; 1 bytes @ 0x13
 12473                           
 12474     0033                     ??_setOperatingMode:	
 12475                           ; 1 bytes @ 0x13
 12476                           
 12477     0033                     ??_setXYAxisRange:	
 12478                           ; 1 bytes @ 0x13
 12479                           
 12480     0033                     ??_setZAxisRange:	
 12481                           ; 1 bytes @ 0x13
 12482                           
 12483     0033                     BMA253_GetAccelDataXYZ@accelData:	
 12484                           ; 1 bytes @ 0x13
 12485                           
 12486     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12487                           ; 1 bytes @ 0x13
 12488                           
 12489     0033                     getManufacturerID@deviceIDReg:	
 12490                           ; 1 bytes @ 0x13
 12491                           
 12492                           
 12493                           ; 2 bytes @ 0x13
 12494     0033                     	ds	1
 12495     0034                     BMA253_GetAccelDataXYZ@sensorValue:
 12496                           
 12497                           ; 2 bytes @ 0x14
 12498     0034                     	ds	1
 12499     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12500     0035                     setOperatingMode@opMode:	
 12501                           ; 1 bytes @ 0x15
 12502                           
 12503     0035                     setMagneticChannel@channelMode:	
 12504                           ; 1 bytes @ 0x15
 12505                           
 12506     0035                     setXYAxisRange@xyAxisRange:	
 12507                           ; 1 bytes @ 0x15
 12508                           
 12509     0035                     setZAxisRange@zAxisRange:	
 12510                           ; 1 bytes @ 0x15
 12511                           
 12512     0035                     setTemperatureEn@temperatureEnable:	
 12513                           ; 1 bytes @ 0x15
 12514                           
 12515     0035                     getManufacturerID@databuffer:	
 12516                           ; 1 bytes @ 0x15
 12517                           
 12518                           
 12519                           ; 2 bytes @ 0x15
 12520     0035                     	ds	1
 12521     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 12522     0036                     ___fladd@signs:	
 12523                           ; 1 bytes @ 0x16
 12524                           
 12525     0036                     setOperatingMode@mode:	
 12526                           ; 1 bytes @ 0x16
 12527                           
 12528     0036                     setMagneticChannel@mode:	
 12529                           ; 2 bytes @ 0x16
 12530                           
 12531     0036                     setXYAxisRange@mode:	
 12532                           ; 2 bytes @ 0x16
 12533                           
 12534     0036                     setZAxisRange@mode:	
 12535                           ; 2 bytes @ 0x16
 12536                           
 12537     0036                     setTemperatureEn@mode:	
 12538                           ; 2 bytes @ 0x16
 12539                           
 12540     0036                     LIGHTBLUE_AccelSensor@payload:	
 12541                           ; 2 bytes @ 0x16
 12542                           
 12543                           
 12544                           ; 13 bytes @ 0x16
 12545     0036                     	ds	1
 12546     0037                     ___fladd@aexp:
 12547                           
 12548                           ; 1 bytes @ 0x17
 12549     0037                     	ds	1
 12550     0038                     ___fladd@bexp:
 12551                           
 12552                           ; 1 bytes @ 0x18
 12553     0038                     	ds	1
 12554     0039                     ___fladd@grs:
 12555                           
 12556                           ; 1 bytes @ 0x19
 12557     0039                     	ds	1
 12558     003A                     ?___fldiv:
 12559     003A                     ___fldiv@a:	
 12560                           ; 4 bytes @ 0x1A
 12561                           
 12562                           
 12563                           ; 4 bytes @ 0x1A
 12564     003A                     	ds	4
 12565     003E                     ___fldiv@b:
 12566                           
 12567                           ; 4 bytes @ 0x1E
 12568     003E                     	ds	2
 12569     0040                     rn487x_PrintMessage@passedMessage:
 12570                           
 12571                           ; 1 bytes @ 0x20
 12572     0040                     	ds	1
 12573     0041                     rn487x_PrintMessage@messageIndex:
 12574                           
 12575                           ; 1 bytes @ 0x21
 12576     0041                     	ds	1
 12577     0042                     ??___fldiv:
 12578     0042                     RN487X_MessageHandler@messageType:	
 12579                           ; 1 bytes @ 0x22
 12580                           
 12581                           
 12582                           ; 1 bytes @ 0x22
 12583     0042                     	ds	1
 12584     0043                     ??_RN487X_FilterData:
 12585     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12586                           ; 1 bytes @ 0x23
 12587                           
 12588                           
 12589                           ; 6 bytes @ 0x23
 12590     0043                     	ds	1
 12591     0044                     RN487X_FilterData@readChar:
 12592                           
 12593                           ; 1 bytes @ 0x24
 12594     0044                     	ds	3
 12595     0047                     ___fldiv@rem:
 12596                           
 12597                           ; 4 bytes @ 0x27
 12598     0047                     	ds	4
 12599     004B                     ___fldiv@sign:
 12600                           
 12601                           ; 1 bytes @ 0x2B
 12602     004B                     	ds	1
 12603     004C                     ___fldiv@new_exp:
 12604                           
 12605                           ; 2 bytes @ 0x2C
 12606     004C                     	ds	2
 12607     004E                     ___fldiv@grs:
 12608                           
 12609                           ; 4 bytes @ 0x2E
 12610     004E                     	ds	4
 12611     0052                     ___fldiv@bexp:
 12612                           
 12613                           ; 1 bytes @ 0x32
 12614     0052                     	ds	1
 12615     0053                     ___fldiv@aexp:
 12616                           
 12617                           ; 1 bytes @ 0x33
 12618     0053                     	ds	1
 12619     0054                     ?_getTemp:
 12620                           
 12621                           ; 4 bytes @ 0x34
 12622     0054                     	ds	4
 12623     0058                     ??_getTemp:
 12624                           
 12625                           ; 1 bytes @ 0x38
 12626     0058                     	ds	5
 12627     005D                     getTemp@tempOut:
 12628                           
 12629                           ; 4 bytes @ 0x3D
 12630     005D                     	ds	4
 12631     0061                     _getTemp$5396:
 12632                           
 12633                           ; 4 bytes @ 0x41
 12634     0061                     	ds	4
 12635     0065                     getTemp@temp:
 12636                           
 12637                           ; 2 bytes @ 0x45
 12638     0065                     	ds	2
 12639     0067                     getTemp@databuffer:
 12640                           
 12641                           ; 2 bytes @ 0x47
 12642     0067                     	ds	2
 12643     0069                     ?___fltol:
 12644     0069                     ___fltol@f1:	
 12645                           ; 4 bytes @ 0x49
 12646                           
 12647                           
 12648                           ; 4 bytes @ 0x49
 12649     0069                     	ds	4
 12650     006D                     ___fltol@sign1:
 12651                           
 12652                           ; 1 bytes @ 0x4D
 12653     006D                     	ds	1
 12654     006E                     ___fltol@exp1:
 12655                           
 12656                           ; 1 bytes @ 0x4E
 12657     006E                     	ds	1
 12658     006F                     ??_main:
 12659                           
 12660                           ; 1 bytes @ 0x4F
 12661     006F                     	ds	1
 12662                           
 12663                           	psect	maintext
 12664     072A                     __pmaintext:	
 12665 ;;
 12666 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12667 ;;
 12668 ;; *************** function _main *****************
 12669 ;; Defined at:
 12670 ;;		line 72 in file "main.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  2  2041[None  ] int 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : B3F/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        2 bytes
 12689 ;; Hardware stack levels required when called: 18
 12690 ;; This function calls:
 12691 ;;		_EUSART1_Read
 12692 ;;		_EUSART1_Write
 12693 ;;		_EUSART1_is_rx_ready
 12694 ;;		_EUSART2_Read
 12695 ;;		_EUSART2_Write
 12696 ;;		_EUSART2_is_rx_ready
 12697 ;;		_LIGHTBLUE_AccelSensor
 12698 ;;		_LIGHTBLUE_Initialize
 12699 ;;		_LIGHTBLUE_LedState
 12700 ;;		_LIGHTBLUE_ParseIncomingPacket
 12701 ;;		_LIGHTBLUE_PushButton
 12702 ;;		_LIGHTBLUE_SendProtocolVersion
 12703 ;;		_LIGHTBLUE_SendSerialData
 12704 ;;		_LIGHTBLUE_TemperatureSensor
 12705 ;;		_RN487X_DataReady
 12706 ;;		_RN487X_Init
 12707 ;;		_RN487X_IsConnected
 12708 ;;		_RN487X_Read
 12709 ;;		_RN487X_SetAsyncMessageHandler
 12710 ;;		_RN487X_Write
 12711 ;;		_SYSTEM_Initialize
 12712 ;;		_TMR0_HasOverflowOccured
 12713 ;;		_begin
 12714 ;; This function is called by:
 12715 ;;		Startup code after reset
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719     072A                     _main:	
 12720                           ;psect for function _main
 12721                           
 12722     072A                     l17355:	
 12723                           ;incstack = 0
 12724 ;; hardware stack exceeded
 12725                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12726                           
 12727                           
 12728                           ;main.c: 75:     SYSTEM_Initialize();
 12729     072A  319C  24CD  3187   	fcall	_SYSTEM_Initialize
 12730                           
 12731                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12732     072D  3050               	movlw	80
 12733     072E  00F1               	movwf	RN487X_SetAsyncMessageHandler@len
 12734     072F  30A0               	movlw	(low (_statusBuffer@main$F3781| (0+768)))& (0+255)
 12735     0730  319C  24B7  3187   	fcall	_RN487X_SetAsyncMessageHandler
 12736     0733                     l17357:
 12737                           
 12738                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12739     0733  178B               	bsf	11,7	;volatile
 12740     0734                     l17359:
 12741                           
 12742                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12743     0734  170B               	bsf	11,6	;volatile
 12744     0735                     l17361:
 12745                           
 12746                           ;main.c: 84:     RN487X_Init();
 12747     0735  3189  217D  3187   	fcall	_RN487X_Init
 12748     0738                     l17363:
 12749                           
 12750                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12751     0738  3199  21E8  3187   	fcall	_LIGHTBLUE_Initialize
 12752                           
 12753                           ;main.c: 86:     begin();
 12754     073B  3196  26BC  3187   	fcall	_begin
 12755     073E                     l17365:
 12756                           
 12757                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12758     073E  3199  2173  3187   	fcall	_RN487X_IsConnected
 12759     0741  3A01               	xorlw	1
 12760     0742  1D03               	skipz
 12761     0743  2F45               	goto	u16601
 12762     0744  2F46               	goto	u16600
 12763     0745                     u16601:
 12764     0745  2FD2               	goto	l2057
 12765     0746                     u16600:
 12766     0746                     l17367:
 12767                           
 12768                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12769     0746  3199  21D7  3187   	fcall	_TMR0_HasOverflowOccured
 12770     0749  3A01               	xorlw	1
 12771     074A  1D03               	skipz
 12772     074B  2F4D               	goto	u16611
 12773     074C  2F4E               	goto	u16610
 12774     074D                     u16611:
 12775     074D  2F66               	goto	l2046
 12776     074E                     u16610:
 12777     074E                     l17369:
 12778                           
 12779                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12780     074E  014E               	movlb	14	; select bank14
 12781     074F  128C               	bcf	12,5	;volatile
 12782     0750                     l17371:
 12783                           
 12784                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12785     0750  3191  2195  3187   	fcall	_LIGHTBLUE_TemperatureSensor
 12786                           
 12787                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12788     0753  3192  22A4  3187   	fcall	_LIGHTBLUE_AccelSensor
 12789                           
 12790                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12791     0756  319D  2558  3187   	fcall	_LIGHTBLUE_PushButton
 12792                           
 12793                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12794     0759  3191  2135  3187   	fcall	_LIGHTBLUE_LedState
 12795                           
 12796                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12797     075C  3192  22DD  3187   	fcall	_LIGHTBLUE_SendProtocolVersion
 12798                           
 12799                           ;main.c: 101:             }
 12800     075F  2F3E               	goto	l17365
 12801     0760                     l17373:
 12802                           
 12803                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12804     0760  319B  2320  3187   	fcall	_RN487X_Read
 12805     0763  318D  25DA  3187   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12806     0766                     l2046:	
 12807                           ;main.c: 107:                 }
 12808                           
 12809                           
 12810                           ;main.c: 104:                 while (RN487X_DataReady())
 12811     0766  319D  25F0  3187   	fcall	_RN487X_DataReady
 12812     0769  3A00               	xorlw	0
 12813     076A  1D03               	skipz
 12814     076B  2F6D               	goto	u16621
 12815     076C  2F6E               	goto	u16620
 12816     076D                     u16621:
 12817     076D  2F60               	goto	l17373
 12818     076E                     u16620:
 12819     076E  2FB3               	goto	l17391
 12820     076F                     l17375:
 12821                           
 12822                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12823     076F  3000               	movlw	low (_uart| (0+32768))
 12824     0770  0084               	movwf	4
 12825     0771  3098               	movlw	high (_uart| (0+32768))
 12826     0772  0085               	movwf	5
 12827     0773  3F01               	moviw [1]fsr0
 12828     0774  008A               	movwf	10
 12829     0775  3F00               	moviw [0]fsr0
 12830     0776  000A               	callw
 12831     0777  3187               	pagesel	$
 12832     0778  0140               	movlb	0	; select bank0
 12833     0779  00EF               	movwf	??_main
 12834     077A  0141               	movlb	1	; select bank1
 12835     077B  0847               	movf	_serialIndex^(0+128),w
 12836     077C  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12837     077D  0086               	movwf	6
 12838     077E  3002               	movlw	2	; select bank5/6
 12839     077F  0087               	movwf	7
 12840     0780  0140               	movlb	0	; select bank0
 12841     0781  086F               	movf	??_main,w
 12842     0782  0081               	movwf	1
 12843     0783                     l17377:
 12844                           
 12845                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12846     0783  0141               	movlb	1	; select bank1
 12847     0784  0847               	movf	_serialIndex^(0+128),w
 12848     0785  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12849     0786  0086               	movwf	6
 12850     0787  3002               	movlw	2	; select bank5/6
 12851     0788  0087               	movwf	7
 12852     0789  300D               	movlw	13
 12853     078A  0601               	xorwf	1,w
 12854     078B  1903               	btfsc	3,2
 12855     078C  2F8E               	goto	u16631
 12856     078D  2F8F               	goto	u16630
 12857     078E                     u16631:
 12858     078E  2FA0               	goto	l17383
 12859     078F                     u16630:
 12860     078F                     l17379:
 12861     078F  0847               	movf	_serialIndex^(0+128),w
 12862     0790  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12863     0791  0086               	movwf	6
 12864     0792  3002               	movlw	2	; select bank5/6
 12865     0793  0087               	movwf	7
 12866     0794  300A               	movlw	10
 12867     0795  0601               	xorwf	1,w
 12868     0796  1903               	btfsc	3,2
 12869     0797  2F99               	goto	u16641
 12870     0798  2F9A               	goto	u16640
 12871     0799                     u16641:
 12872     0799  2FA0               	goto	l17383
 12873     079A                     u16640:
 12874     079A                     l17381:
 12875     079A  304F               	movlw	79
 12876     079B  0647               	xorwf	_serialIndex^(0+128),w
 12877     079C  1D03               	btfss	3,2
 12878     079D  2F9F               	goto	u16651
 12879     079E  2FA0               	goto	u16650
 12880     079F                     u16651:
 12881     079F  2FAD               	goto	l17389
 12882     07A0                     u16650:
 12883     07A0                     l17383:
 12884                           
 12885                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12886     07A0  0847               	movf	_serialIndex^(0+128),w
 12887     07A1  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12888     07A2  0086               	movwf	6
 12889     07A3  3002               	movlw	2	; select bank5/6
 12890     07A4  0087               	movwf	7
 12891     07A5  0181               	clrf	1
 12892     07A6                     l17385:
 12893                           
 12894                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12895     07A6  30A0               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12896     07A7  318C  2485  3187   	fcall	_LIGHTBLUE_SendSerialData
 12897     07AA                     l17387:
 12898                           
 12899                           ;main.c: 117:                         serialIndex = 0;
 12900     07AA  0141               	movlb	1	; select bank1
 12901     07AB  01C7               	clrf	_serialIndex^(0+128)
 12902                           
 12903                           ;main.c: 118:                     }
 12904     07AC  2FB3               	goto	l17391
 12905     07AD                     l17389:
 12906                           
 12907                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12908     07AD  3001               	movlw	1
 12909     07AE  0140               	movlb	0	; select bank0
 12910     07AF  00EF               	movwf	??_main
 12911     07B0  086F               	movf	??_main,w
 12912     07B1  0141               	movlb	1	; select bank1
 12913     07B2  07C7               	addwf	_serialIndex^(0+128),f
 12914     07B3                     l17391:
 12915                           
 12916                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12917     07B3  3006               	movlw	low ((_uart+6)| (0+32768))
 12918     07B4  0084               	movwf	4
 12919     07B5  3098               	movlw	high ((_uart+6)| (0+32768))
 12920     07B6  0085               	movwf	5
 12921     07B7  3F01               	moviw [1]fsr0
 12922     07B8  008A               	movwf	10
 12923     07B9  3F00               	moviw [0]fsr0
 12924     07BA  000A               	callw
 12925     07BB  3187               	pagesel	$
 12926     07BC  3A00               	xorlw	0
 12927     07BD  1D03               	skipz
 12928     07BE  2FC0               	goto	u16661
 12929     07BF  2FC1               	goto	u16660
 12930     07C0                     u16661:
 12931     07C0  2F6F               	goto	l17375
 12932     07C1                     u16660:
 12933     07C1  2F3E               	goto	l17365
 12934     07C2                     l17393:
 12935                           
 12936                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12937     07C2  319B  2320  3187   	fcall	_RN487X_Read
 12938     07C5  0141               	movlb	1	; select bank1
 12939     07C6  00E5               	movwf	_main$5406^(0+128)
 12940                           
 12941                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12942     07C7  0865               	movf	_main$5406^(0+128),w
 12943     07C8  00F1               	movwf	EUSART2_Write@txData
 12944     07C9  3002               	movlw	low ((_uart+2)| (0+32768))
 12945     07CA  0084               	movwf	4
 12946     07CB  3098               	movlw	high ((_uart+2)| (0+32768))
 12947     07CC  0085               	movwf	5
 12948     07CD  3F01               	moviw [1]fsr0
 12949     07CE  008A               	movwf	10
 12950     07CF  3F00               	moviw [0]fsr0
 12951     07D0  000A               	callw
 12952     07D1  3187               	pagesel	$
 12953     07D2                     l2057:	
 12954                           ;main.c: 132:             }
 12955                           
 12956                           
 12957                           ;main.c: 129:             while(RN487X_DataReady())
 12958     07D2  319D  25F0  3187   	fcall	_RN487X_DataReady
 12959     07D5  3A00               	xorlw	0
 12960     07D6  1D03               	skipz
 12961     07D7  2FD9               	goto	u16671
 12962     07D8  2FDA               	goto	u16670
 12963     07D9                     u16671:
 12964     07D9  2FC2               	goto	l17393
 12965     07DA                     u16670:
 12966     07DA  2FEE               	goto	l17397
 12967     07DB                     l17395:
 12968                           
 12969                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12970     07DB  3000               	movlw	low (_uart| (0+32768))
 12971     07DC  0084               	movwf	4
 12972     07DD  3098               	movlw	high (_uart| (0+32768))
 12973     07DE  0085               	movwf	5
 12974     07DF  3F01               	moviw [1]fsr0
 12975     07E0  008A               	movwf	10
 12976     07E1  3F00               	moviw [0]fsr0
 12977     07E2  000A               	callw
 12978     07E3  3187               	pagesel	$
 12979     07E4  00F6               	movwf	RN487X_Write@txData
 12980     07E5  3040               	movlw	low (_RN487X| (0+32768))
 12981     07E6  0084               	movwf	4
 12982     07E7  30A0               	movlw	high (_RN487X| (0+32768))
 12983     07E8  0085               	movwf	5
 12984     07E9  3F01               	moviw [1]fsr0
 12985     07EA  008A               	movwf	10
 12986     07EB  3F00               	moviw [0]fsr0
 12987     07EC  000A               	callw
 12988     07ED  3187               	pagesel	$
 12989     07EE                     l17397:
 12990                           
 12991                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12992     07EE  3006               	movlw	low ((_uart+6)| (0+32768))
 12993     07EF  0084               	movwf	4
 12994     07F0  3098               	movlw	high ((_uart+6)| (0+32768))
 12995     07F1  0085               	movwf	5
 12996     07F2  3F01               	moviw [1]fsr0
 12997     07F3  008A               	movwf	10
 12998     07F4  3F00               	moviw [0]fsr0
 12999     07F5  000A               	callw
 13000     07F6  3187               	pagesel	$
 13001     07F7  3A00               	xorlw	0
 13002     07F8  1D03               	skipz
 13003     07F9  2FFB               	goto	u16681
 13004     07FA  2FFC               	goto	u16680
 13005     07FB                     u16681:
 13006     07FB  2FDB               	goto	l17395
 13007     07FC                     u16680:
 13008     07FC  2F3E               	goto	l17365
 13009     07FD  3180  2855         	ljmp	start
 13010     07FF                     __end_of_main:
 13011                           
 13012                           	psect	text1
 13013     16BC                     __ptext1:	
 13014 ;; *************** function _begin *****************
 13015 ;; Defined at:
 13016 ;;		line 29 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;		None
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      char 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;Total ram usage:        0 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 17
 13037 ;; This function calls:
 13038 ;;		_getAngleEn
 13039 ;;		_getError
 13040 ;;		_getLowPower
 13041 ;;		_getMagneticChannel
 13042 ;;		_getOperatingMode
 13043 ;;		_getTemperatureEN
 13044 ;;		_isConnected
 13045 ;;		_setMagneticChannel
 13046 ;;		_setOperatingMode
 13047 ;;		_setTemperatureEn
 13048 ;;		_setXYAxisRange
 13049 ;;		_setZAxisRange
 13050 ;; This function is called by:
 13051 ;;		_main
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055     16BC                     _begin:	
 13056                           ;psect for function _begin
 13057                           
 13058     16BC                     l15269:	
 13059                           ;incstack = 0
 13060 ;; hardware stack exceeded
 13061                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13062                           
 13063                           
 13064                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 35:     if (isConnecte
      +                          d() != 0) {
 13065     16BC  319C  242D  3196   	fcall	_isConnected
 13066     16BF  3A00               	xorlw	0
 13067     16C0  1903               	skipnz
 13068     16C1  2EC3               	goto	u14281
 13069     16C2  2EC4               	goto	u14280
 13070     16C3                     u14281:
 13071     16C3  2EC5               	goto	l15273
 13072     16C4                     u14280:
 13073     16C4  2F09               	goto	l2111
 13074     16C5                     l15273:
 13075                           
 13076                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 40:     setMagneticCha
      +                          nnel(0X7);
 13077     16C5  3007               	movlw	7
 13078     16C6  3180  20A9  3196   	fcall	_setMagneticChannel
 13079                           
 13080                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 41:     setTemperature
      +                          En(1);
 13081     16C9  3001               	movlw	1
 13082     16CA  3193  238C  3196   	fcall	_setTemperatureEn
 13083                           
 13084                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 42:     setOperatingMo
      +                          de(0X2);
 13085     16CD  3002               	movlw	2
 13086     16CE  318B  23EA  3196   	fcall	_setOperatingMode
 13087                           
 13088                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 45:     setXYAxisRange
      +                          (0X1);
 13089     16D1  3001               	movlw	1
 13090     16D2  3194  2482  3196   	fcall	_setXYAxisRange
 13091                           
 13092                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 46:     setZAxisRange(
      +                          0X1);
 13093     16D5  3001               	movlw	1
 13094     16D6  3193  23C9  3196   	fcall	_setZAxisRange
 13095                           
 13096                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     if (getError()
      +                           != 0) {
 13097     16D9  3188  20D2  3196   	fcall	_getError
 13098     16DC  3A00               	xorlw	0
 13099     16DD  1903               	skipnz
 13100     16DE  2EE0               	goto	u14291
 13101     16DF  2EE1               	goto	u14290
 13102     16E0                     u14291:
 13103     16E0  2EE2               	goto	l15277
 13104     16E1                     u14290:
 13105     16E1  2F09               	goto	l2111
 13106     16E2                     l15277:
 13107                           
 13108                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     if (getLowPowe
      +                          r() != 0X0) {
 13109     16E2  319C  24E3  3196   	fcall	_getLowPower
 13110     16E5  3A00               	xorlw	0
 13111     16E6  1903               	skipnz
 13112     16E7  2EE9               	goto	u14301
 13113     16E8  2EEA               	goto	u14300
 13114     16E9                     u14301:
 13115     16E9  2EEB               	goto	l15281
 13116     16EA                     u14300:
 13117     16EA  2F09               	goto	l2111
 13118     16EB                     l15281:
 13119                           
 13120                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 59:     if (getOperati
      +                          ngMode() != 0X2) {
 13121     16EB  3188  202B  3196   	fcall	_getOperatingMode
 13122     16EE  3A02               	xorlw	2
 13123     16EF  1903               	skipnz
 13124     16F0  2EF2               	goto	u14311
 13125     16F1  2EF3               	goto	u14310
 13126     16F2                     u14311:
 13127     16F2  2EF4               	goto	l15285
 13128     16F3                     u14310:
 13129     16F3  2F09               	goto	l2111
 13130     16F4                     l15285:
 13131                           
 13132                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 64:     if (getMagneti
      +                          cChannel() != 0X7) {
 13133     16F4  318E  26BA  3196   	fcall	_getMagneticChannel
 13134     16F7  3A07               	xorlw	7
 13135     16F8  1903               	skipnz
 13136     16F9  2EFB               	goto	u14321
 13137     16FA  2EFC               	goto	u14320
 13138     16FB                     u14321:
 13139     16FB  2EFD               	goto	l15289
 13140     16FC                     u14320:
 13141     16FC  2F09               	goto	l2111
 13142     16FD                     l15289:
 13143                           
 13144                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 69:     if (getTempera
      +                          tureEN() != 0X1) {
 13145     16FD  319C  248C  3196   	fcall	_getTemperatureEN
 13146     1700  3A01               	xorlw	1
 13147     1701  1903               	skipnz
 13148     1702  2F04               	goto	u14331
 13149     1703  2F05               	goto	u14330
 13150     1704                     u14331:
 13151     1704  2F06               	goto	l15293
 13152     1705                     u14330:
 13153     1705  2F09               	goto	l2111
 13154     1706                     l15293:
 13155                           
 13156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 74:     if (getAngleEn
      +                          () != 0X0) {
 13157     1706  3188  207E  3196   	fcall	_getAngleEn
 13158     1709                     l2111:
 13159     1709  0008               	return
 13160     170A                     __end_of_begin:
 13161                           
 13162                           	psect	text2
 13163     13C9                     __ptext2:	
 13164 ;; *************** function _setZAxisRange *****************
 13165 ;; Defined at:
 13166 ;;		line 1034 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  zAxisRange      1    wreg     unsigned char 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  zAxisRange      1   21[BANK0 ] unsigned char 
 13171 ;;  mode            2   22[BANK0 ] unsigned short 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      char 
 13174 ;; Registers used:
 13175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13185 ;;Total ram usage:        5 bytes
 13186 ;; Hardware stack levels used: 1
 13187 ;; Hardware stack levels required when called: 16
 13188 ;; This function calls:
 13189 ;;		_bitWrite
 13190 ;;		_getError
 13191 ;;		_readRegister
 13192 ;;		_writeRegister
 13193 ;; This function is called by:
 13194 ;;		_begin
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198     13C9                     _setZAxisRange:	
 13199                           ;psect for function _setZAxisRange
 13200                           
 13201                           
 13202                           ;incstack = 0
 13203 ;; hardware stack exceeded
 13204                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13205                           ;setZAxisRange@zAxisRange stored from wreg
 13206     13C9  0140               	movlb	0	; select bank0
 13207     13CA  00B5               	movwf	setZAxisRange@zAxisRange
 13208     13CB                     l14755:
 13209     13CB                     l14757:
 13210                           
 13211                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1036:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13212     13CB  3003               	movlw	3
 13213     13CC  319A  22FC  3193   	fcall	_readRegister
 13214     13CF  0140               	movlb	0	; select bank0
 13215     13D0  00B3               	movwf	??_setZAxisRange
 13216     13D1  01B4               	clrf	??_setZAxisRange+1
 13217     13D2  0833               	movf	??_setZAxisRange,w
 13218     13D3  00B6               	movwf	setZAxisRange@mode
 13219     13D4  0834               	movf	??_setZAxisRange+1,w
 13220     13D5  00B7               	movwf	setZAxisRange@mode+1
 13221     13D6                     l14759:
 13222                           
 13223                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1039:     if (zAxisRan
      +                          ge == 0X0)
 13224     13D6  0835               	movf	setZAxisRange@zAxisRange,w
 13225     13D7  1D03               	btfss	3,2
 13226     13D8  2BDA               	goto	u13391
 13227     13D9  2BDB               	goto	u13390
 13228     13DA                     u13391:
 13229     13DA  2BEC               	goto	l14765
 13230     13DB                     u13390:
 13231     13DB                     l14761:
 13232                           
 13233                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1040:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1042:         bitWrite(mode, 0, 0
      +                          );
 13234     13DB  0837               	movf	setZAxisRange@mode+1,w
 13235     13DC  00F2               	movwf	bitWrite@reg+1
 13236     13DD  0836               	movf	setZAxisRange@mode,w
 13237     13DE  00F1               	movwf	bitWrite@reg
 13238     13DF  01F3               	clrf	bitWrite@position
 13239     13E0  01F4               	clrf	bitWrite@value
 13240     13E1  319F  273A  3193   	fcall	_bitWrite
 13241     13E4                     l14763:
 13242                           
 13243                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1044:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13244     13E4  0140               	movlb	0	; select bank0
 13245     13E5  0836               	movf	setZAxisRange@mode,w
 13246     13E6  00A6               	movwf	writeRegister@data
 13247     13E7  3003               	movlw	3
 13248     13E8  319A  22F1  3193   	fcall	_writeRegister
 13249                           
 13250                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1045:     } else if (z
      +                          AxisRange == 0X1)
 13251     13EB  2C02               	goto	l14771
 13252     13EC                     l14765:
 13253     13EC  0335               	decf	setZAxisRange@zAxisRange,w
 13254     13ED  1D03               	btfss	3,2
 13255     13EE  2BF0               	goto	u13401
 13256     13EF  2BF1               	goto	u13400
 13257     13F0                     u13401:
 13258     13F0  2C02               	goto	l14771
 13259     13F1                     u13400:
 13260     13F1                     l14767:
 13261                           
 13262                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1047:         bitWrite(mode, 0, 1
      +                          );
 13263     13F1  0837               	movf	setZAxisRange@mode+1,w
 13264     13F2  00F2               	movwf	bitWrite@reg+1
 13265     13F3  0836               	movf	setZAxisRange@mode,w
 13266     13F4  00F1               	movwf	bitWrite@reg
 13267     13F5  01F3               	clrf	bitWrite@position
 13268     13F6  01F4               	clrf	bitWrite@value
 13269     13F7  0AF4               	incf	bitWrite@value,f
 13270     13F8  319F  273A  3193   	fcall	_bitWrite
 13271     13FB                     l14769:
 13272                           
 13273                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1048:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13274     13FB  0140               	movlb	0	; select bank0
 13275     13FC  0836               	movf	setZAxisRange@mode,w
 13276     13FD  00A6               	movwf	writeRegister@data
 13277     13FE  3003               	movlw	3
 13278     13FF  319A  22F1  3193   	fcall	_writeRegister
 13279     1402                     l14771:
 13280                           
 13281                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13282     1402  3188  20D2  3193   	fcall	_getError
 13283     1405                     l2326:
 13284     1405  0008               	return
 13285     1406                     __end_of_setZAxisRange:
 13286                           
 13287                           	psect	text3
 13288     1482                     __ptext3:	
 13289 ;; *************** function _setXYAxisRange *****************
 13290 ;; Defined at:
 13291 ;;		line 1007 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;  xyAxisRange     1    wreg     unsigned char 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  xyAxisRange     1   21[BANK0 ] unsigned char 
 13296 ;;  mode            2   22[BANK0 ] unsigned short 
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  1    wreg      char 
 13299 ;; Registers used:
 13300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 0/0
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13307 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13308 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13310 ;;Total ram usage:        5 bytes
 13311 ;; Hardware stack levels used: 1
 13312 ;; Hardware stack levels required when called: 16
 13313 ;; This function calls:
 13314 ;;		_bitWrite
 13315 ;;		_getError
 13316 ;;		_readRegister
 13317 ;;		_writeRegister
 13318 ;; This function is called by:
 13319 ;;		_begin
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323     1482                     _setXYAxisRange:	
 13324                           ;psect for function _setXYAxisRange
 13325                           
 13326                           
 13327                           ;incstack = 0
 13328 ;; hardware stack exceeded
 13329                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13330                           ;setXYAxisRange@xyAxisRange stored from wreg
 13331     1482  0140               	movlb	0	; select bank0
 13332     1483  00B5               	movwf	setXYAxisRange@xyAxisRange
 13333     1484                     l14735:
 13334     1484                     l14737:
 13335                           
 13336                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1009:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13337     1484  3003               	movlw	3
 13338     1485  319A  22FC  3194   	fcall	_readRegister
 13339     1488  0140               	movlb	0	; select bank0
 13340     1489  00B3               	movwf	??_setXYAxisRange
 13341     148A  01B4               	clrf	??_setXYAxisRange+1
 13342     148B  0833               	movf	??_setXYAxisRange,w
 13343     148C  00B6               	movwf	setXYAxisRange@mode
 13344     148D  0834               	movf	??_setXYAxisRange+1,w
 13345     148E  00B7               	movwf	setXYAxisRange@mode+1
 13346     148F                     l14739:
 13347                           
 13348                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1012:     if (xyAxisRa
      +                          nge == 0X0)
 13349     148F  0835               	movf	setXYAxisRange@xyAxisRange,w
 13350     1490  1D03               	btfss	3,2
 13351     1491  2C93               	goto	u13371
 13352     1492  2C94               	goto	u13370
 13353     1493                     u13371:
 13354     1493  2CA6               	goto	l14745
 13355     1494                     u13370:
 13356     1494                     l14741:
 13357                           
 13358                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1015:         bitWrite(mode, 1, 0
      +                          );
 13359     1494  0837               	movf	setXYAxisRange@mode+1,w
 13360     1495  00F2               	movwf	bitWrite@reg+1
 13361     1496  0836               	movf	setXYAxisRange@mode,w
 13362     1497  00F1               	movwf	bitWrite@reg
 13363     1498  01F3               	clrf	bitWrite@position
 13364     1499  0AF3               	incf	bitWrite@position,f
 13365     149A  01F4               	clrf	bitWrite@value
 13366     149B  319F  273A  3194   	fcall	_bitWrite
 13367     149E                     l14743:
 13368                           
 13369                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13370     149E  0140               	movlb	0	; select bank0
 13371     149F  0836               	movf	setXYAxisRange@mode,w
 13372     14A0  00A6               	movwf	writeRegister@data
 13373     14A1  3003               	movlw	3
 13374     14A2  319A  22F1  3194   	fcall	_writeRegister
 13375                           
 13376                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1018:     } else if (x
      +                          yAxisRange == 0X1)
 13377     14A5  2CBD               	goto	l14751
 13378     14A6                     l14745:
 13379     14A6  0335               	decf	setXYAxisRange@xyAxisRange,w
 13380     14A7  1D03               	btfss	3,2
 13381     14A8  2CAA               	goto	u13381
 13382     14A9  2CAB               	goto	u13380
 13383     14AA                     u13381:
 13384     14AA  2CBD               	goto	l14751
 13385     14AB                     u13380:
 13386     14AB                     l14747:
 13387                           
 13388                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1020:         bitWrite(mode, 1, 1
      +                          );
 13389     14AB  0837               	movf	setXYAxisRange@mode+1,w
 13390     14AC  00F2               	movwf	bitWrite@reg+1
 13391     14AD  0836               	movf	setXYAxisRange@mode,w
 13392     14AE  00F1               	movwf	bitWrite@reg
 13393     14AF  01F3               	clrf	bitWrite@position
 13394     14B0  0AF3               	incf	bitWrite@position,f
 13395     14B1  01F4               	clrf	bitWrite@value
 13396     14B2  0AF4               	incf	bitWrite@value,f
 13397     14B3  319F  273A  3194   	fcall	_bitWrite
 13398     14B6                     l14749:
 13399                           
 13400                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13401     14B6  0140               	movlb	0	; select bank0
 13402     14B7  0836               	movf	setXYAxisRange@mode,w
 13403     14B8  00A6               	movwf	writeRegister@data
 13404     14B9  3003               	movlw	3
 13405     14BA  319A  22F1  3194   	fcall	_writeRegister
 13406     14BD                     l14751:
 13407                           
 13408                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13409     14BD  3188  20D2  3194   	fcall	_getError
 13410     14C0                     l2320:
 13411     14C0  0008               	return
 13412     14C1                     __end_of_setXYAxisRange:
 13413                           
 13414                           	psect	text4
 13415     138C                     __ptext4:	
 13416 ;; *************** function _setTemperatureEn *****************
 13417 ;; Defined at:
 13418 ;;		line 1133 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  temperatureE    1    wreg     _Bool 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  temperatureE    1   21[BANK0 ] _Bool 
 13423 ;;  mode            2   22[BANK0 ] unsigned short 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1    wreg      char 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13436 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13437 ;;Total ram usage:        5 bytes
 13438 ;; Hardware stack levels used: 1
 13439 ;; Hardware stack levels required when called: 16
 13440 ;; This function calls:
 13441 ;;		_bitWrite
 13442 ;;		_getError
 13443 ;;		_readRegister
 13444 ;;		_writeRegister
 13445 ;; This function is called by:
 13446 ;;		_begin
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450     138C                     _setTemperatureEn:	
 13451                           ;psect for function _setTemperatureEn
 13452                           
 13453                           
 13454                           ;incstack = 0
 13455 ;; hardware stack exceeded
 13456                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13457                           ;setTemperatureEn@temperatureEnable stored from wreg
 13458     138C  0140               	movlb	0	; select bank0
 13459     138D  00B5               	movwf	setTemperatureEn@temperatureEnable
 13460     138E                     l14683:
 13461     138E                     l14685:
 13462                           
 13463                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1135:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13464     138E  3007               	movlw	7
 13465     138F  319A  22FC  3193   	fcall	_readRegister
 13466     1392  0140               	movlb	0	; select bank0
 13467     1393  00B3               	movwf	??_setTemperatureEn
 13468     1394  01B4               	clrf	??_setTemperatureEn+1
 13469     1395  0833               	movf	??_setTemperatureEn,w
 13470     1396  00B6               	movwf	setTemperatureEn@mode
 13471     1397  0834               	movf	??_setTemperatureEn+1,w
 13472     1398  00B7               	movwf	setTemperatureEn@mode+1
 13473     1399                     l14687:
 13474                           
 13475                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1138:     if (temperat
      +                          ureEnable == 0)
 13476     1399  0835               	movf	setTemperatureEn@temperatureEnable,w
 13477     139A  1D03               	btfss	3,2
 13478     139B  2B9D               	goto	u13311
 13479     139C  2B9E               	goto	u13310
 13480     139D                     u13311:
 13481     139D  2BAF               	goto	l14693
 13482     139E                     u13310:
 13483     139E                     l14689:
 13484                           
 13485                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1139:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1141:         bitWrite(mode, 0, 0
      +                          );
 13486     139E  0837               	movf	setTemperatureEn@mode+1,w
 13487     139F  00F2               	movwf	bitWrite@reg+1
 13488     13A0  0836               	movf	setTemperatureEn@mode,w
 13489     13A1  00F1               	movwf	bitWrite@reg
 13490     13A2  01F3               	clrf	bitWrite@position
 13491     13A3  01F4               	clrf	bitWrite@value
 13492     13A4  319F  273A  3193   	fcall	_bitWrite
 13493     13A7                     l14691:
 13494                           
 13495                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1143:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13496     13A7  0140               	movlb	0	; select bank0
 13497     13A8  0836               	movf	setTemperatureEn@mode,w
 13498     13A9  00A6               	movwf	writeRegister@data
 13499     13AA  3007               	movlw	7
 13500     13AB  319A  22F1  3193   	fcall	_writeRegister
 13501                           
 13502                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1144:     } else if (t
      +                          emperatureEnable == 1)
 13503     13AE  2BC5               	goto	l14699
 13504     13AF                     l14693:
 13505     13AF  0335               	decf	setTemperatureEn@temperatureEnable,w
 13506     13B0  1D03               	btfss	3,2
 13507     13B1  2BB3               	goto	u13321
 13508     13B2  2BB4               	goto	u13320
 13509     13B3                     u13321:
 13510     13B3  2BC5               	goto	l14699
 13511     13B4                     u13320:
 13512     13B4                     l14695:
 13513                           
 13514                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1146:         bitWrite(mode, 0, 1
      +                          );
 13515     13B4  0837               	movf	setTemperatureEn@mode+1,w
 13516     13B5  00F2               	movwf	bitWrite@reg+1
 13517     13B6  0836               	movf	setTemperatureEn@mode,w
 13518     13B7  00F1               	movwf	bitWrite@reg
 13519     13B8  01F3               	clrf	bitWrite@position
 13520     13B9  01F4               	clrf	bitWrite@value
 13521     13BA  0AF4               	incf	bitWrite@value,f
 13522     13BB  319F  273A  3193   	fcall	_bitWrite
 13523     13BE                     l14697:
 13524                           
 13525                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1147:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13526     13BE  0140               	movlb	0	; select bank0
 13527     13BF  0836               	movf	setTemperatureEn@mode,w
 13528     13C0  00A6               	movwf	writeRegister@data
 13529     13C1  3007               	movlw	7
 13530     13C2  319A  22F1  3193   	fcall	_writeRegister
 13531     13C5                     l14699:
 13532                           
 13533                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13534     13C5  3188  20D2  3193   	fcall	_getError
 13535     13C8                     l2344:
 13536     13C8  0008               	return
 13537     13C9                     __end_of_setTemperatureEn:
 13538                           
 13539                           	psect	text5
 13540     0BEA                     __ptext5:	
 13541 ;; *************** function _setOperatingMode *****************
 13542 ;; Defined at:
 13543 ;;		line 526 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  opMode          1    wreg     unsigned char 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  opMode          1   21[BANK0 ] unsigned char 
 13548 ;;  mode            2   22[BANK0 ] unsigned short 
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      char 
 13551 ;; Registers used:
 13552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13559 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13561 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13562 ;;Total ram usage:        5 bytes
 13563 ;; Hardware stack levels used: 1
 13564 ;; Hardware stack levels required when called: 16
 13565 ;; This function calls:
 13566 ;;		_bitWrite
 13567 ;;		_getError
 13568 ;;		_readRegister
 13569 ;;		_writeRegister
 13570 ;; This function is called by:
 13571 ;;		_begin
 13572 ;; This function uses a non-reentrant model
 13573 ;;
 13574                           
 13575     0BEA                     _setOperatingMode:	
 13576                           ;psect for function _setOperatingMode
 13577                           
 13578                           
 13579                           ;incstack = 0
 13580 ;; hardware stack exceeded
 13581                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13582                           ;setOperatingMode@opMode stored from wreg
 13583     0BEA  0140               	movlb	0	; select bank0
 13584     0BEB  00B5               	movwf	setOperatingMode@opMode
 13585     0BEC                     l14703:
 13586     0BEC                     l14705:
 13587                           
 13588                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 528:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13589     0BEC  3001               	movlw	1
 13590     0BED  319A  22FC  318B   	fcall	_readRegister
 13591     0BF0  0140               	movlb	0	; select bank0
 13592     0BF1  00B3               	movwf	??_setOperatingMode
 13593     0BF2  01B4               	clrf	??_setOperatingMode+1
 13594     0BF3  0833               	movf	??_setOperatingMode,w
 13595     0BF4  00B6               	movwf	setOperatingMode@mode
 13596     0BF5  0834               	movf	??_setOperatingMode+1,w
 13597     0BF6  00B7               	movwf	setOperatingMode@mode+1
 13598     0BF7                     l14707:
 13599                           
 13600                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 531:     if (opMode ==
      +                           0)
 13601     0BF7  0835               	movf	setOperatingMode@opMode,w
 13602     0BF8  1D03               	btfss	3,2
 13603     0BF9  2BFB               	goto	u13331
 13604     0BFA  2BFC               	goto	u13330
 13605     0BFB                     u13331:
 13606     0BFB  2C18               	goto	l14713
 13607     0BFC                     u13330:
 13608     0BFC                     l14709:
 13609                           
 13610                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 532:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 534:         bitWrite(mode, 0, 0);
 13611     0BFC  0837               	movf	setOperatingMode@mode+1,w
 13612     0BFD  00F2               	movwf	bitWrite@reg+1
 13613     0BFE  0836               	movf	setOperatingMode@mode,w
 13614     0BFF  00F1               	movwf	bitWrite@reg
 13615     0C00  01F3               	clrf	bitWrite@position
 13616     0C01  01F4               	clrf	bitWrite@value
 13617     0C02  319F  273A  318B   	fcall	_bitWrite
 13618                           
 13619                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 536:         bitWrite(
      +                          mode, 1, 0);
 13620     0C05  0140               	movlb	0	; select bank0
 13621     0C06  0837               	movf	setOperatingMode@mode+1,w
 13622     0C07  00F2               	movwf	bitWrite@reg+1
 13623     0C08  0836               	movf	setOperatingMode@mode,w
 13624     0C09  00F1               	movwf	bitWrite@reg
 13625     0C0A  01F3               	clrf	bitWrite@position
 13626     0C0B  0AF3               	incf	bitWrite@position,f
 13627     0C0C  01F4               	clrf	bitWrite@value
 13628     0C0D  319F  273A  318B   	fcall	_bitWrite
 13629     0C10                     l14711:
 13630                           
 13631                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 537:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13632     0C10  0140               	movlb	0	; select bank0
 13633     0C11  0836               	movf	setOperatingMode@mode,w
 13634     0C12  00A6               	movwf	writeRegister@data
 13635     0C13  3001               	movlw	1
 13636     0C14  319A  22F1  318B   	fcall	_writeRegister
 13637                           
 13638                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:     } else if (op
      +                          Mode == 0X1)
 13639     0C17  2C81               	goto	l14731
 13640     0C18                     l14713:
 13641     0C18  0335               	decf	setOperatingMode@opMode,w
 13642     0C19  1D03               	btfss	3,2
 13643     0C1A  2C1C               	goto	u13341
 13644     0C1B  2C1D               	goto	u13340
 13645     0C1C                     u13341:
 13646     0C1C  2C3A               	goto	l14719
 13647     0C1D                     u13340:
 13648     0C1D                     l14715:
 13649                           
 13650                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 539:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         bitWrite(mode, 0, 1);
 13651     0C1D  0837               	movf	setOperatingMode@mode+1,w
 13652     0C1E  00F2               	movwf	bitWrite@reg+1
 13653     0C1F  0836               	movf	setOperatingMode@mode,w
 13654     0C20  00F1               	movwf	bitWrite@reg
 13655     0C21  01F3               	clrf	bitWrite@position
 13656     0C22  01F4               	clrf	bitWrite@value
 13657     0C23  0AF4               	incf	bitWrite@value,f
 13658     0C24  319F  273A  318B   	fcall	_bitWrite
 13659                           
 13660                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:         bitWrite(
      +                          mode, 1, 0);
 13661     0C27  0140               	movlb	0	; select bank0
 13662     0C28  0837               	movf	setOperatingMode@mode+1,w
 13663     0C29  00F2               	movwf	bitWrite@reg+1
 13664     0C2A  0836               	movf	setOperatingMode@mode,w
 13665     0C2B  00F1               	movwf	bitWrite@reg
 13666     0C2C  01F3               	clrf	bitWrite@position
 13667     0C2D  0AF3               	incf	bitWrite@position,f
 13668     0C2E  01F4               	clrf	bitWrite@value
 13669     0C2F  319F  273A  318B   	fcall	_bitWrite
 13670     0C32                     l14717:
 13671                           
 13672                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13673     0C32  0140               	movlb	0	; select bank0
 13674     0C33  0836               	movf	setOperatingMode@mode,w
 13675     0C34  00A6               	movwf	writeRegister@data
 13676     0C35  3001               	movlw	1
 13677     0C36  319A  22F1  318B   	fcall	_writeRegister
 13678                           
 13679                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:     } else if (op
      +                          Mode == 0X2)
 13680     0C39  2C81               	goto	l14731
 13681     0C3A                     l14719:
 13682     0C3A  3002               	movlw	2
 13683     0C3B  0635               	xorwf	setOperatingMode@opMode,w
 13684     0C3C  1D03               	btfss	3,2
 13685     0C3D  2C3F               	goto	u13351
 13686     0C3E  2C40               	goto	u13350
 13687     0C3F                     u13351:
 13688     0C3F  2C5D               	goto	l14725
 13689     0C40                     u13350:
 13690     0C40                     l14721:
 13691                           
 13692                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         bitWrite(mode, 0, 0);
 13693     0C40  0837               	movf	setOperatingMode@mode+1,w
 13694     0C41  00F2               	movwf	bitWrite@reg+1
 13695     0C42  0836               	movf	setOperatingMode@mode,w
 13696     0C43  00F1               	movwf	bitWrite@reg
 13697     0C44  01F3               	clrf	bitWrite@position
 13698     0C45  01F4               	clrf	bitWrite@value
 13699     0C46  319F  273A  318B   	fcall	_bitWrite
 13700                           
 13701                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         bitWrite(
      +                          mode, 1, 1);
 13702     0C49  0140               	movlb	0	; select bank0
 13703     0C4A  0837               	movf	setOperatingMode@mode+1,w
 13704     0C4B  00F2               	movwf	bitWrite@reg+1
 13705     0C4C  0836               	movf	setOperatingMode@mode,w
 13706     0C4D  00F1               	movwf	bitWrite@reg
 13707     0C4E  01F3               	clrf	bitWrite@position
 13708     0C4F  0AF3               	incf	bitWrite@position,f
 13709     0C50  01F4               	clrf	bitWrite@value
 13710     0C51  0AF4               	incf	bitWrite@value,f
 13711     0C52  319F  273A  318B   	fcall	_bitWrite
 13712     0C55                     l14723:
 13713                           
 13714                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13715     0C55  0140               	movlb	0	; select bank0
 13716     0C56  0836               	movf	setOperatingMode@mode,w
 13717     0C57  00A6               	movwf	writeRegister@data
 13718     0C58  3001               	movlw	1
 13719     0C59  319A  22F1  318B   	fcall	_writeRegister
 13720                           
 13721                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:     } else if (op
      +                          Mode == 0X3)
 13722     0C5C  2C81               	goto	l14731
 13723     0C5D                     l14725:
 13724     0C5D  3003               	movlw	3
 13725     0C5E  0635               	xorwf	setOperatingMode@opMode,w
 13726     0C5F  1D03               	btfss	3,2
 13727     0C60  2C62               	goto	u13361
 13728     0C61  2C63               	goto	u13360
 13729     0C62                     u13361:
 13730     0C62  2C81               	goto	l2210
 13731     0C63                     u13360:
 13732     0C63                     l14727:
 13733                           
 13734                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:         bitWrite(mode, 0, 1);
 13735     0C63  0837               	movf	setOperatingMode@mode+1,w
 13736     0C64  00F2               	movwf	bitWrite@reg+1
 13737     0C65  0836               	movf	setOperatingMode@mode,w
 13738     0C66  00F1               	movwf	bitWrite@reg
 13739     0C67  01F3               	clrf	bitWrite@position
 13740     0C68  01F4               	clrf	bitWrite@value
 13741     0C69  0AF4               	incf	bitWrite@value,f
 13742     0C6A  319F  273A  318B   	fcall	_bitWrite
 13743                           
 13744                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:         bitWrite(
      +                          mode, 1, 1);
 13745     0C6D  0140               	movlb	0	; select bank0
 13746     0C6E  0837               	movf	setOperatingMode@mode+1,w
 13747     0C6F  00F2               	movwf	bitWrite@reg+1
 13748     0C70  0836               	movf	setOperatingMode@mode,w
 13749     0C71  00F1               	movwf	bitWrite@reg
 13750     0C72  01F3               	clrf	bitWrite@position
 13751     0C73  0AF3               	incf	bitWrite@position,f
 13752     0C74  01F4               	clrf	bitWrite@value
 13753     0C75  0AF4               	incf	bitWrite@value,f
 13754     0C76  319F  273A  318B   	fcall	_bitWrite
 13755     0C79                     l14729:
 13756                           
 13757                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13758     0C79  0140               	movlb	0	; select bank0
 13759     0C7A  0836               	movf	setOperatingMode@mode,w
 13760     0C7B  00A6               	movwf	writeRegister@data
 13761     0C7C  3001               	movlw	1
 13762     0C7D  319A  22F1  318B   	fcall	_writeRegister
 13763     0C80  2C81               	goto	l14731
 13764     0C81                     l2210:
 13765     0C81                     l14731:
 13766                           
 13767                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13768     0C81  3188  20D2  318B   	fcall	_getError
 13769     0C84                     l2214:
 13770     0C84  0008               	return
 13771     0C85                     __end_of_setOperatingMode:
 13772                           
 13773                           	psect	text6
 13774     00A9                     __ptext6:	
 13775 ;; *************** function _setMagneticChannel *****************
 13776 ;; Defined at:
 13777 ;;		line 578 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;  channelMode     1    wreg     unsigned char 
 13780 ;; Auto vars:     Size  Location     Type
 13781 ;;  channelMode     1   21[BANK0 ] unsigned char 
 13782 ;;  mode            2   22[BANK0 ] unsigned short 
 13783 ;; Return value:  Size  Location     Type
 13784 ;;                  1    wreg      char 
 13785 ;; Registers used:
 13786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13787 ;; Tracked objects:
 13788 ;;		On entry : 0/0
 13789 ;;		On exit  : 0/0
 13790 ;;		Unchanged: 0/0
 13791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13793 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13795 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13796 ;;Total ram usage:        5 bytes
 13797 ;; Hardware stack levels used: 1
 13798 ;; Hardware stack levels required when called: 16
 13799 ;; This function calls:
 13800 ;;		_bitWrite
 13801 ;;		_getError
 13802 ;;		_readRegister
 13803 ;;		_writeRegister
 13804 ;; This function is called by:
 13805 ;;		_begin
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809     00A9                     _setMagneticChannel:	
 13810                           ;psect for function _setMagneticChannel
 13811                           
 13812                           
 13813                           ;incstack = 0
 13814 ;; hardware stack exceeded
 13815                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13816                           ;setMagneticChannel@channelMode stored from wreg
 13817     00A9  0140               	movlb	0	; select bank0
 13818     00AA  00B5               	movwf	setMagneticChannel@channelMode
 13819     00AB                     l14603:
 13820     00AB                     l14605:
 13821                           
 13822                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 580:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13823     00AB  3002               	movlw	2
 13824     00AC  319A  22FC  3180   	fcall	_readRegister
 13825     00AF  0140               	movlb	0	; select bank0
 13826     00B0  00B3               	movwf	??_setMagneticChannel
 13827     00B1  01B4               	clrf	??_setMagneticChannel+1
 13828     00B2  0833               	movf	??_setMagneticChannel,w
 13829     00B3  00B6               	movwf	setMagneticChannel@mode
 13830     00B4  0834               	movf	??_setMagneticChannel+1,w
 13831     00B5  00B7               	movwf	setMagneticChannel@mode+1
 13832     00B6                     l14607:
 13833                           
 13834                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 583:     if (channelMo
      +                          de == 0X0)
 13835     00B6  0835               	movf	setMagneticChannel@channelMode,w
 13836     00B7  1D03               	btfss	3,2
 13837     00B8  28BA               	goto	u13191
 13838     00B9  28BB               	goto	u13190
 13839     00BA                     u13191:
 13840     00BA  28EE               	goto	l14613
 13841     00BB                     u13190:
 13842     00BB                     l14609:
 13843                           
 13844                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 586:         bitWrite(mode, 4, 0);
 13845     00BB  0837               	movf	setMagneticChannel@mode+1,w
 13846     00BC  00F2               	movwf	bitWrite@reg+1
 13847     00BD  0836               	movf	setMagneticChannel@mode,w
 13848     00BE  00F1               	movwf	bitWrite@reg
 13849     00BF  3004               	movlw	4
 13850     00C0  00F3               	movwf	bitWrite@position
 13851     00C1  01F4               	clrf	bitWrite@value
 13852     00C2  319F  273A  3180   	fcall	_bitWrite
 13853                           
 13854                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:         bitWrite(
      +                          mode, 5, 0);
 13855     00C5  0140               	movlb	0	; select bank0
 13856     00C6  0837               	movf	setMagneticChannel@mode+1,w
 13857     00C7  00F2               	movwf	bitWrite@reg+1
 13858     00C8  0836               	movf	setMagneticChannel@mode,w
 13859     00C9  00F1               	movwf	bitWrite@reg
 13860     00CA  3005               	movlw	5
 13861     00CB  00F3               	movwf	bitWrite@position
 13862     00CC  01F4               	clrf	bitWrite@value
 13863     00CD  319F  273A  3180   	fcall	_bitWrite
 13864                           
 13865                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite(
      +                          mode, 6, 0);
 13866     00D0  0140               	movlb	0	; select bank0
 13867     00D1  0837               	movf	setMagneticChannel@mode+1,w
 13868     00D2  00F2               	movwf	bitWrite@reg+1
 13869     00D3  0836               	movf	setMagneticChannel@mode,w
 13870     00D4  00F1               	movwf	bitWrite@reg
 13871     00D5  3006               	movlw	6
 13872     00D6  00F3               	movwf	bitWrite@position
 13873     00D7  01F4               	clrf	bitWrite@value
 13874     00D8  319F  273A  3180   	fcall	_bitWrite
 13875                           
 13876                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite(
      +                          mode, 7, 0);
 13877     00DB  0140               	movlb	0	; select bank0
 13878     00DC  0837               	movf	setMagneticChannel@mode+1,w
 13879     00DD  00F2               	movwf	bitWrite@reg+1
 13880     00DE  0836               	movf	setMagneticChannel@mode,w
 13881     00DF  00F1               	movwf	bitWrite@reg
 13882     00E0  3007               	movlw	7
 13883     00E1  00F3               	movwf	bitWrite@position
 13884     00E2  01F4               	clrf	bitWrite@value
 13885     00E3  319F  273A  3180   	fcall	_bitWrite
 13886     00E6                     l14611:
 13887                           
 13888                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13889     00E6  0140               	movlb	0	; select bank0
 13890     00E7  0836               	movf	setMagneticChannel@mode,w
 13891     00E8  00A6               	movwf	writeRegister@data
 13892     00E9  3002               	movlw	2
 13893     00EA  319A  22F1  3180   	fcall	_writeRegister
 13894                           
 13895                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:     } else if (ch
      +                          annelMode == 0X1)
 13896     00ED  2B74               	goto	l14679
 13897     00EE                     l14613:
 13898     00EE  0335               	decf	setMagneticChannel@channelMode,w
 13899     00EF  1D03               	btfss	3,2
 13900     00F0  28F2               	goto	u13201
 13901     00F1  28F3               	goto	u13200
 13902     00F2                     u13201:
 13903     00F2  2927               	goto	l14619
 13904     00F3                     u13200:
 13905     00F3                     l14615:
 13906                           
 13907                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         bitWrite(mode, 4, 1);
 13908     00F3  0837               	movf	setMagneticChannel@mode+1,w
 13909     00F4  00F2               	movwf	bitWrite@reg+1
 13910     00F5  0836               	movf	setMagneticChannel@mode,w
 13911     00F6  00F1               	movwf	bitWrite@reg
 13912     00F7  3004               	movlw	4
 13913     00F8  00F3               	movwf	bitWrite@position
 13914     00F9  01F4               	clrf	bitWrite@value
 13915     00FA  0AF4               	incf	bitWrite@value,f
 13916     00FB  319F  273A  3180   	fcall	_bitWrite
 13917                           
 13918                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite(
      +                          mode, 5, 0);
 13919     00FE  0140               	movlb	0	; select bank0
 13920     00FF  0837               	movf	setMagneticChannel@mode+1,w
 13921     0100  00F2               	movwf	bitWrite@reg+1
 13922     0101  0836               	movf	setMagneticChannel@mode,w
 13923     0102  00F1               	movwf	bitWrite@reg
 13924     0103  3005               	movlw	5
 13925     0104  00F3               	movwf	bitWrite@position
 13926     0105  01F4               	clrf	bitWrite@value
 13927     0106  319F  273A  3180   	fcall	_bitWrite
 13928                           
 13929                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:         bitWrite(
      +                          mode, 6, 0);
 13930     0109  0140               	movlb	0	; select bank0
 13931     010A  0837               	movf	setMagneticChannel@mode+1,w
 13932     010B  00F2               	movwf	bitWrite@reg+1
 13933     010C  0836               	movf	setMagneticChannel@mode,w
 13934     010D  00F1               	movwf	bitWrite@reg
 13935     010E  3006               	movlw	6
 13936     010F  00F3               	movwf	bitWrite@position
 13937     0110  01F4               	clrf	bitWrite@value
 13938     0111  319F  273A  3180   	fcall	_bitWrite
 13939                           
 13940                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:         bitWrite(
      +                          mode, 7, 0);
 13941     0114  0140               	movlb	0	; select bank0
 13942     0115  0837               	movf	setMagneticChannel@mode+1,w
 13943     0116  00F2               	movwf	bitWrite@reg+1
 13944     0117  0836               	movf	setMagneticChannel@mode,w
 13945     0118  00F1               	movwf	bitWrite@reg
 13946     0119  3007               	movlw	7
 13947     011A  00F3               	movwf	bitWrite@position
 13948     011B  01F4               	clrf	bitWrite@value
 13949     011C  319F  273A  3180   	fcall	_bitWrite
 13950     011F                     l14617:
 13951                           
 13952                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13953     011F  0140               	movlb	0	; select bank0
 13954     0120  0836               	movf	setMagneticChannel@mode,w
 13955     0121  00A6               	movwf	writeRegister@data
 13956     0122  3002               	movlw	2
 13957     0123  319A  22F1  3180   	fcall	_writeRegister
 13958                           
 13959                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:     } else if (ch
      +                          annelMode == 0X2)
 13960     0126  2B74               	goto	l14679
 13961     0127                     l14619:
 13962     0127  3002               	movlw	2
 13963     0128  0635               	xorwf	setMagneticChannel@channelMode,w
 13964     0129  1D03               	btfss	3,2
 13965     012A  292C               	goto	u13211
 13966     012B  292D               	goto	u13210
 13967     012C                     u13211:
 13968     012C  2961               	goto	l14625
 13969     012D                     u13210:
 13970     012D                     l14621:
 13971                           
 13972                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(mode, 4, 0);
 13973     012D  0837               	movf	setMagneticChannel@mode+1,w
 13974     012E  00F2               	movwf	bitWrite@reg+1
 13975     012F  0836               	movf	setMagneticChannel@mode,w
 13976     0130  00F1               	movwf	bitWrite@reg
 13977     0131  3004               	movlw	4
 13978     0132  00F3               	movwf	bitWrite@position
 13979     0133  01F4               	clrf	bitWrite@value
 13980     0134  319F  273A  3180   	fcall	_bitWrite
 13981                           
 13982                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite(
      +                          mode, 5, 1);
 13983     0137  0140               	movlb	0	; select bank0
 13984     0138  0837               	movf	setMagneticChannel@mode+1,w
 13985     0139  00F2               	movwf	bitWrite@reg+1
 13986     013A  0836               	movf	setMagneticChannel@mode,w
 13987     013B  00F1               	movwf	bitWrite@reg
 13988     013C  3005               	movlw	5
 13989     013D  00F3               	movwf	bitWrite@position
 13990     013E  01F4               	clrf	bitWrite@value
 13991     013F  0AF4               	incf	bitWrite@value,f
 13992     0140  319F  273A  3180   	fcall	_bitWrite
 13993                           
 13994                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         bitWrite(
      +                          mode, 6, 0);
 13995     0143  0140               	movlb	0	; select bank0
 13996     0144  0837               	movf	setMagneticChannel@mode+1,w
 13997     0145  00F2               	movwf	bitWrite@reg+1
 13998     0146  0836               	movf	setMagneticChannel@mode,w
 13999     0147  00F1               	movwf	bitWrite@reg
 14000     0148  3006               	movlw	6
 14001     0149  00F3               	movwf	bitWrite@position
 14002     014A  01F4               	clrf	bitWrite@value
 14003     014B  319F  273A  3180   	fcall	_bitWrite
 14004                           
 14005                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite(
      +                          mode, 7, 0);
 14006     014E  0140               	movlb	0	; select bank0
 14007     014F  0837               	movf	setMagneticChannel@mode+1,w
 14008     0150  00F2               	movwf	bitWrite@reg+1
 14009     0151  0836               	movf	setMagneticChannel@mode,w
 14010     0152  00F1               	movwf	bitWrite@reg
 14011     0153  3007               	movlw	7
 14012     0154  00F3               	movwf	bitWrite@position
 14013     0155  01F4               	clrf	bitWrite@value
 14014     0156  319F  273A  3180   	fcall	_bitWrite
 14015     0159                     l14623:
 14016                           
 14017                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14018     0159  0140               	movlb	0	; select bank0
 14019     015A  0836               	movf	setMagneticChannel@mode,w
 14020     015B  00A6               	movwf	writeRegister@data
 14021     015C  3002               	movlw	2
 14022     015D  319A  22F1  3180   	fcall	_writeRegister
 14023                           
 14024                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:     } else if (ch
      +                          annelMode == 0X3)
 14025     0160  2B74               	goto	l14679
 14026     0161                     l14625:
 14027     0161  3003               	movlw	3
 14028     0162  0635               	xorwf	setMagneticChannel@channelMode,w
 14029     0163  1D03               	btfss	3,2
 14030     0164  2966               	goto	u13221
 14031     0165  2967               	goto	u13220
 14032     0166                     u13221:
 14033     0166  299C               	goto	l14631
 14034     0167                     u13220:
 14035     0167                     l14627:
 14036                           
 14037                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(mode, 4, 1);
 14038     0167  0837               	movf	setMagneticChannel@mode+1,w
 14039     0168  00F2               	movwf	bitWrite@reg+1
 14040     0169  0836               	movf	setMagneticChannel@mode,w
 14041     016A  00F1               	movwf	bitWrite@reg
 14042     016B  3004               	movlw	4
 14043     016C  00F3               	movwf	bitWrite@position
 14044     016D  01F4               	clrf	bitWrite@value
 14045     016E  0AF4               	incf	bitWrite@value,f
 14046     016F  319F  273A  3180   	fcall	_bitWrite
 14047                           
 14048                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite(
      +                          mode, 5, 1);
 14049     0172  0140               	movlb	0	; select bank0
 14050     0173  0837               	movf	setMagneticChannel@mode+1,w
 14051     0174  00F2               	movwf	bitWrite@reg+1
 14052     0175  0836               	movf	setMagneticChannel@mode,w
 14053     0176  00F1               	movwf	bitWrite@reg
 14054     0177  3005               	movlw	5
 14055     0178  00F3               	movwf	bitWrite@position
 14056     0179  01F4               	clrf	bitWrite@value
 14057     017A  0AF4               	incf	bitWrite@value,f
 14058     017B  319F  273A  3180   	fcall	_bitWrite
 14059                           
 14060                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         bitWrite(
      +                          mode, 6, 0);
 14061     017E  0140               	movlb	0	; select bank0
 14062     017F  0837               	movf	setMagneticChannel@mode+1,w
 14063     0180  00F2               	movwf	bitWrite@reg+1
 14064     0181  0836               	movf	setMagneticChannel@mode,w
 14065     0182  00F1               	movwf	bitWrite@reg
 14066     0183  3006               	movlw	6
 14067     0184  00F3               	movwf	bitWrite@position
 14068     0185  01F4               	clrf	bitWrite@value
 14069     0186  319F  273A  3180   	fcall	_bitWrite
 14070                           
 14071                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite(
      +                          mode, 7, 0);
 14072     0189  0140               	movlb	0	; select bank0
 14073     018A  0837               	movf	setMagneticChannel@mode+1,w
 14074     018B  00F2               	movwf	bitWrite@reg+1
 14075     018C  0836               	movf	setMagneticChannel@mode,w
 14076     018D  00F1               	movwf	bitWrite@reg
 14077     018E  3007               	movlw	7
 14078     018F  00F3               	movwf	bitWrite@position
 14079     0190  01F4               	clrf	bitWrite@value
 14080     0191  319F  273A  3180   	fcall	_bitWrite
 14081     0194                     l14629:
 14082                           
 14083                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14084     0194  0140               	movlb	0	; select bank0
 14085     0195  0836               	movf	setMagneticChannel@mode,w
 14086     0196  00A6               	movwf	writeRegister@data
 14087     0197  3002               	movlw	2
 14088     0198  319A  22F1  3180   	fcall	_writeRegister
 14089                           
 14090                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:     } else if (ch
      +                          annelMode == 0X4)
 14091     019B  2B74               	goto	l14679
 14092     019C                     l14631:
 14093     019C  3004               	movlw	4
 14094     019D  0635               	xorwf	setMagneticChannel@channelMode,w
 14095     019E  1D03               	btfss	3,2
 14096     019F  29A1               	goto	u13231
 14097     01A0  29A2               	goto	u13230
 14098     01A1                     u13231:
 14099     01A1  29D6               	goto	l14637
 14100     01A2                     u13230:
 14101     01A2                     l14633:
 14102                           
 14103                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(mode, 4, 0);
 14104     01A2  0837               	movf	setMagneticChannel@mode+1,w
 14105     01A3  00F2               	movwf	bitWrite@reg+1
 14106     01A4  0836               	movf	setMagneticChannel@mode,w
 14107     01A5  00F1               	movwf	bitWrite@reg
 14108     01A6  3004               	movlw	4
 14109     01A7  00F3               	movwf	bitWrite@position
 14110     01A8  01F4               	clrf	bitWrite@value
 14111     01A9  319F  273A  3180   	fcall	_bitWrite
 14112                           
 14113                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite(
      +                          mode, 5, 0);
 14114     01AC  0140               	movlb	0	; select bank0
 14115     01AD  0837               	movf	setMagneticChannel@mode+1,w
 14116     01AE  00F2               	movwf	bitWrite@reg+1
 14117     01AF  0836               	movf	setMagneticChannel@mode,w
 14118     01B0  00F1               	movwf	bitWrite@reg
 14119     01B1  3005               	movlw	5
 14120     01B2  00F3               	movwf	bitWrite@position
 14121     01B3  01F4               	clrf	bitWrite@value
 14122     01B4  319F  273A  3180   	fcall	_bitWrite
 14123                           
 14124                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         bitWrite(
      +                          mode, 6, 1);
 14125     01B7  0140               	movlb	0	; select bank0
 14126     01B8  0837               	movf	setMagneticChannel@mode+1,w
 14127     01B9  00F2               	movwf	bitWrite@reg+1
 14128     01BA  0836               	movf	setMagneticChannel@mode,w
 14129     01BB  00F1               	movwf	bitWrite@reg
 14130     01BC  3006               	movlw	6
 14131     01BD  00F3               	movwf	bitWrite@position
 14132     01BE  01F4               	clrf	bitWrite@value
 14133     01BF  0AF4               	incf	bitWrite@value,f
 14134     01C0  319F  273A  3180   	fcall	_bitWrite
 14135                           
 14136                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite(
      +                          mode, 7, 0);
 14137     01C3  0140               	movlb	0	; select bank0
 14138     01C4  0837               	movf	setMagneticChannel@mode+1,w
 14139     01C5  00F2               	movwf	bitWrite@reg+1
 14140     01C6  0836               	movf	setMagneticChannel@mode,w
 14141     01C7  00F1               	movwf	bitWrite@reg
 14142     01C8  3007               	movlw	7
 14143     01C9  00F3               	movwf	bitWrite@position
 14144     01CA  01F4               	clrf	bitWrite@value
 14145     01CB  319F  273A  3180   	fcall	_bitWrite
 14146     01CE                     l14635:
 14147                           
 14148                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14149     01CE  0140               	movlb	0	; select bank0
 14150     01CF  0836               	movf	setMagneticChannel@mode,w
 14151     01D0  00A6               	movwf	writeRegister@data
 14152     01D1  3002               	movlw	2
 14153     01D2  319A  22F1  3180   	fcall	_writeRegister
 14154                           
 14155                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:     } else if (ch
      +                          annelMode == 0X5)
 14156     01D5  2B74               	goto	l14679
 14157     01D6                     l14637:
 14158     01D6  3005               	movlw	5
 14159     01D7  0635               	xorwf	setMagneticChannel@channelMode,w
 14160     01D8  1D03               	btfss	3,2
 14161     01D9  29DB               	goto	u13241
 14162     01DA  29DC               	goto	u13240
 14163     01DB                     u13241:
 14164     01DB  2A11               	goto	l14643
 14165     01DC                     u13240:
 14166     01DC                     l14639:
 14167                           
 14168                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(mode, 4, 1);
 14169     01DC  0837               	movf	setMagneticChannel@mode+1,w
 14170     01DD  00F2               	movwf	bitWrite@reg+1
 14171     01DE  0836               	movf	setMagneticChannel@mode,w
 14172     01DF  00F1               	movwf	bitWrite@reg
 14173     01E0  3004               	movlw	4
 14174     01E1  00F3               	movwf	bitWrite@position
 14175     01E2  01F4               	clrf	bitWrite@value
 14176     01E3  0AF4               	incf	bitWrite@value,f
 14177     01E4  319F  273A  3180   	fcall	_bitWrite
 14178                           
 14179                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite(
      +                          mode, 5, 0);
 14180     01E7  0140               	movlb	0	; select bank0
 14181     01E8  0837               	movf	setMagneticChannel@mode+1,w
 14182     01E9  00F2               	movwf	bitWrite@reg+1
 14183     01EA  0836               	movf	setMagneticChannel@mode,w
 14184     01EB  00F1               	movwf	bitWrite@reg
 14185     01EC  3005               	movlw	5
 14186     01ED  00F3               	movwf	bitWrite@position
 14187     01EE  01F4               	clrf	bitWrite@value
 14188     01EF  319F  273A  3180   	fcall	_bitWrite
 14189                           
 14190                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         bitWrite(
      +                          mode, 6, 1);
 14191     01F2  0140               	movlb	0	; select bank0
 14192     01F3  0837               	movf	setMagneticChannel@mode+1,w
 14193     01F4  00F2               	movwf	bitWrite@reg+1
 14194     01F5  0836               	movf	setMagneticChannel@mode,w
 14195     01F6  00F1               	movwf	bitWrite@reg
 14196     01F7  3006               	movlw	6
 14197     01F8  00F3               	movwf	bitWrite@position
 14198     01F9  01F4               	clrf	bitWrite@value
 14199     01FA  0AF4               	incf	bitWrite@value,f
 14200     01FB  319F  273A  3180   	fcall	_bitWrite
 14201                           
 14202                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite(
      +                          mode, 7, 0);
 14203     01FE  0140               	movlb	0	; select bank0
 14204     01FF  0837               	movf	setMagneticChannel@mode+1,w
 14205     0200  00F2               	movwf	bitWrite@reg+1
 14206     0201  0836               	movf	setMagneticChannel@mode,w
 14207     0202  00F1               	movwf	bitWrite@reg
 14208     0203  3007               	movlw	7
 14209     0204  00F3               	movwf	bitWrite@position
 14210     0205  01F4               	clrf	bitWrite@value
 14211     0206  319F  273A  3180   	fcall	_bitWrite
 14212     0209                     l14641:
 14213                           
 14214                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14215     0209  0140               	movlb	0	; select bank0
 14216     020A  0836               	movf	setMagneticChannel@mode,w
 14217     020B  00A6               	movwf	writeRegister@data
 14218     020C  3002               	movlw	2
 14219     020D  319A  22F1  3180   	fcall	_writeRegister
 14220                           
 14221                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:     } else if (ch
      +                          annelMode == 0X6)
 14222     0210  2B74               	goto	l14679
 14223     0211                     l14643:
 14224     0211  3006               	movlw	6
 14225     0212  0635               	xorwf	setMagneticChannel@channelMode,w
 14226     0213  1D03               	btfss	3,2
 14227     0214  2A16               	goto	u13251
 14228     0215  2A17               	goto	u13250
 14229     0216                     u13251:
 14230     0216  2A4C               	goto	l14649
 14231     0217                     u13250:
 14232     0217                     l14645:
 14233                           
 14234                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(mode, 4, 0);
 14235     0217  0837               	movf	setMagneticChannel@mode+1,w
 14236     0218  00F2               	movwf	bitWrite@reg+1
 14237     0219  0836               	movf	setMagneticChannel@mode,w
 14238     021A  00F1               	movwf	bitWrite@reg
 14239     021B  3004               	movlw	4
 14240     021C  00F3               	movwf	bitWrite@position
 14241     021D  01F4               	clrf	bitWrite@value
 14242     021E  319F  273A  3180   	fcall	_bitWrite
 14243                           
 14244                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite(
      +                          mode, 5, 1);
 14245     0221  0140               	movlb	0	; select bank0
 14246     0222  0837               	movf	setMagneticChannel@mode+1,w
 14247     0223  00F2               	movwf	bitWrite@reg+1
 14248     0224  0836               	movf	setMagneticChannel@mode,w
 14249     0225  00F1               	movwf	bitWrite@reg
 14250     0226  3005               	movlw	5
 14251     0227  00F3               	movwf	bitWrite@position
 14252     0228  01F4               	clrf	bitWrite@value
 14253     0229  0AF4               	incf	bitWrite@value,f
 14254     022A  319F  273A  3180   	fcall	_bitWrite
 14255                           
 14256                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         bitWrite(
      +                          mode, 6, 1);
 14257     022D  0140               	movlb	0	; select bank0
 14258     022E  0837               	movf	setMagneticChannel@mode+1,w
 14259     022F  00F2               	movwf	bitWrite@reg+1
 14260     0230  0836               	movf	setMagneticChannel@mode,w
 14261     0231  00F1               	movwf	bitWrite@reg
 14262     0232  3006               	movlw	6
 14263     0233  00F3               	movwf	bitWrite@position
 14264     0234  01F4               	clrf	bitWrite@value
 14265     0235  0AF4               	incf	bitWrite@value,f
 14266     0236  319F  273A  3180   	fcall	_bitWrite
 14267                           
 14268                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite(
      +                          mode, 7, 0);
 14269     0239  0140               	movlb	0	; select bank0
 14270     023A  0837               	movf	setMagneticChannel@mode+1,w
 14271     023B  00F2               	movwf	bitWrite@reg+1
 14272     023C  0836               	movf	setMagneticChannel@mode,w
 14273     023D  00F1               	movwf	bitWrite@reg
 14274     023E  3007               	movlw	7
 14275     023F  00F3               	movwf	bitWrite@position
 14276     0240  01F4               	clrf	bitWrite@value
 14277     0241  319F  273A  3180   	fcall	_bitWrite
 14278     0244                     l14647:
 14279                           
 14280                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14281     0244  0140               	movlb	0	; select bank0
 14282     0245  0836               	movf	setMagneticChannel@mode,w
 14283     0246  00A6               	movwf	writeRegister@data
 14284     0247  3002               	movlw	2
 14285     0248  319A  22F1  3180   	fcall	_writeRegister
 14286                           
 14287                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:     } else if (ch
      +                          annelMode == 0X7)
 14288     024B  2B74               	goto	l14679
 14289     024C                     l14649:
 14290     024C  3007               	movlw	7
 14291     024D  0635               	xorwf	setMagneticChannel@channelMode,w
 14292     024E  1D03               	btfss	3,2
 14293     024F  2A51               	goto	u13261
 14294     0250  2A52               	goto	u13260
 14295     0251                     u13261:
 14296     0251  2A88               	goto	l14655
 14297     0252                     u13260:
 14298     0252                     l14651:
 14299                           
 14300                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(mode, 4, 1);
 14301     0252  0837               	movf	setMagneticChannel@mode+1,w
 14302     0253  00F2               	movwf	bitWrite@reg+1
 14303     0254  0836               	movf	setMagneticChannel@mode,w
 14304     0255  00F1               	movwf	bitWrite@reg
 14305     0256  3004               	movlw	4
 14306     0257  00F3               	movwf	bitWrite@position
 14307     0258  01F4               	clrf	bitWrite@value
 14308     0259  0AF4               	incf	bitWrite@value,f
 14309     025A  319F  273A  3180   	fcall	_bitWrite
 14310                           
 14311                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite(
      +                          mode, 5, 1);
 14312     025D  0140               	movlb	0	; select bank0
 14313     025E  0837               	movf	setMagneticChannel@mode+1,w
 14314     025F  00F2               	movwf	bitWrite@reg+1
 14315     0260  0836               	movf	setMagneticChannel@mode,w
 14316     0261  00F1               	movwf	bitWrite@reg
 14317     0262  3005               	movlw	5
 14318     0263  00F3               	movwf	bitWrite@position
 14319     0264  01F4               	clrf	bitWrite@value
 14320     0265  0AF4               	incf	bitWrite@value,f
 14321     0266  319F  273A  3180   	fcall	_bitWrite
 14322                           
 14323                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         bitWrite(
      +                          mode, 6, 1);
 14324     0269  0140               	movlb	0	; select bank0
 14325     026A  0837               	movf	setMagneticChannel@mode+1,w
 14326     026B  00F2               	movwf	bitWrite@reg+1
 14327     026C  0836               	movf	setMagneticChannel@mode,w
 14328     026D  00F1               	movwf	bitWrite@reg
 14329     026E  3006               	movlw	6
 14330     026F  00F3               	movwf	bitWrite@position
 14331     0270  01F4               	clrf	bitWrite@value
 14332     0271  0AF4               	incf	bitWrite@value,f
 14333     0272  319F  273A  3180   	fcall	_bitWrite
 14334                           
 14335                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite(
      +                          mode, 7, 0);
 14336     0275  0140               	movlb	0	; select bank0
 14337     0276  0837               	movf	setMagneticChannel@mode+1,w
 14338     0277  00F2               	movwf	bitWrite@reg+1
 14339     0278  0836               	movf	setMagneticChannel@mode,w
 14340     0279  00F1               	movwf	bitWrite@reg
 14341     027A  3007               	movlw	7
 14342     027B  00F3               	movwf	bitWrite@position
 14343     027C  01F4               	clrf	bitWrite@value
 14344     027D  319F  273A  3180   	fcall	_bitWrite
 14345     0280                     l14653:
 14346                           
 14347                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14348     0280  0140               	movlb	0	; select bank0
 14349     0281  0836               	movf	setMagneticChannel@mode,w
 14350     0282  00A6               	movwf	writeRegister@data
 14351     0283  3002               	movlw	2
 14352     0284  319A  22F1  3180   	fcall	_writeRegister
 14353                           
 14354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:     } else if (ch
      +                          annelMode == 0X8)
 14355     0287  2B74               	goto	l14679
 14356     0288                     l14655:
 14357     0288  3008               	movlw	8
 14358     0289  0635               	xorwf	setMagneticChannel@channelMode,w
 14359     028A  1D03               	btfss	3,2
 14360     028B  2A8D               	goto	u13271
 14361     028C  2A8E               	goto	u13270
 14362     028D                     u13271:
 14363     028D  2AC2               	goto	l14661
 14364     028E                     u13270:
 14365     028E                     l14657:
 14366                           
 14367                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(mode, 4, 0);
 14368     028E  0837               	movf	setMagneticChannel@mode+1,w
 14369     028F  00F2               	movwf	bitWrite@reg+1
 14370     0290  0836               	movf	setMagneticChannel@mode,w
 14371     0291  00F1               	movwf	bitWrite@reg
 14372     0292  3004               	movlw	4
 14373     0293  00F3               	movwf	bitWrite@position
 14374     0294  01F4               	clrf	bitWrite@value
 14375     0295  319F  273A  3180   	fcall	_bitWrite
 14376                           
 14377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite(
      +                          mode, 5, 0);
 14378     0298  0140               	movlb	0	; select bank0
 14379     0299  0837               	movf	setMagneticChannel@mode+1,w
 14380     029A  00F2               	movwf	bitWrite@reg+1
 14381     029B  0836               	movf	setMagneticChannel@mode,w
 14382     029C  00F1               	movwf	bitWrite@reg
 14383     029D  3005               	movlw	5
 14384     029E  00F3               	movwf	bitWrite@position
 14385     029F  01F4               	clrf	bitWrite@value
 14386     02A0  319F  273A  3180   	fcall	_bitWrite
 14387                           
 14388                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         bitWrite(
      +                          mode, 6, 0);
 14389     02A3  0140               	movlb	0	; select bank0
 14390     02A4  0837               	movf	setMagneticChannel@mode+1,w
 14391     02A5  00F2               	movwf	bitWrite@reg+1
 14392     02A6  0836               	movf	setMagneticChannel@mode,w
 14393     02A7  00F1               	movwf	bitWrite@reg
 14394     02A8  3006               	movlw	6
 14395     02A9  00F3               	movwf	bitWrite@position
 14396     02AA  01F4               	clrf	bitWrite@value
 14397     02AB  319F  273A  3180   	fcall	_bitWrite
 14398                           
 14399                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite(
      +                          mode, 7, 1);
 14400     02AE  0140               	movlb	0	; select bank0
 14401     02AF  0837               	movf	setMagneticChannel@mode+1,w
 14402     02B0  00F2               	movwf	bitWrite@reg+1
 14403     02B1  0836               	movf	setMagneticChannel@mode,w
 14404     02B2  00F1               	movwf	bitWrite@reg
 14405     02B3  3007               	movlw	7
 14406     02B4  00F3               	movwf	bitWrite@position
 14407     02B5  01F4               	clrf	bitWrite@value
 14408     02B6  0AF4               	incf	bitWrite@value,f
 14409     02B7  319F  273A  3180   	fcall	_bitWrite
 14410     02BA                     l14659:
 14411                           
 14412                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14413     02BA  0140               	movlb	0	; select bank0
 14414     02BB  0836               	movf	setMagneticChannel@mode,w
 14415     02BC  00A6               	movwf	writeRegister@data
 14416     02BD  3002               	movlw	2
 14417     02BE  319A  22F1  3180   	fcall	_writeRegister
 14418                           
 14419                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     } else if (ch
      +                          annelMode == 0X9)
 14420     02C1  2B74               	goto	l14679
 14421     02C2                     l14661:
 14422     02C2  3009               	movlw	9
 14423     02C3  0635               	xorwf	setMagneticChannel@channelMode,w
 14424     02C4  1D03               	btfss	3,2
 14425     02C5  2AC7               	goto	u13281
 14426     02C6  2AC8               	goto	u13280
 14427     02C7                     u13281:
 14428     02C7  2AFD               	goto	l14667
 14429     02C8                     u13280:
 14430     02C8                     l14663:
 14431                           
 14432                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite(mode, 4, 1);
 14433     02C8  0837               	movf	setMagneticChannel@mode+1,w
 14434     02C9  00F2               	movwf	bitWrite@reg+1
 14435     02CA  0836               	movf	setMagneticChannel@mode,w
 14436     02CB  00F1               	movwf	bitWrite@reg
 14437     02CC  3004               	movlw	4
 14438     02CD  00F3               	movwf	bitWrite@position
 14439     02CE  01F4               	clrf	bitWrite@value
 14440     02CF  0AF4               	incf	bitWrite@value,f
 14441     02D0  319F  273A  3180   	fcall	_bitWrite
 14442                           
 14443                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         bitWrite(
      +                          mode, 5, 0);
 14444     02D3  0140               	movlb	0	; select bank0
 14445     02D4  0837               	movf	setMagneticChannel@mode+1,w
 14446     02D5  00F2               	movwf	bitWrite@reg+1
 14447     02D6  0836               	movf	setMagneticChannel@mode,w
 14448     02D7  00F1               	movwf	bitWrite@reg
 14449     02D8  3005               	movlw	5
 14450     02D9  00F3               	movwf	bitWrite@position
 14451     02DA  01F4               	clrf	bitWrite@value
 14452     02DB  319F  273A  3180   	fcall	_bitWrite
 14453                           
 14454                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:         bitWrite(
      +                          mode, 6, 0);
 14455     02DE  0140               	movlb	0	; select bank0
 14456     02DF  0837               	movf	setMagneticChannel@mode+1,w
 14457     02E0  00F2               	movwf	bitWrite@reg+1
 14458     02E1  0836               	movf	setMagneticChannel@mode,w
 14459     02E2  00F1               	movwf	bitWrite@reg
 14460     02E3  3006               	movlw	6
 14461     02E4  00F3               	movwf	bitWrite@position
 14462     02E5  01F4               	clrf	bitWrite@value
 14463     02E6  319F  273A  3180   	fcall	_bitWrite
 14464                           
 14465                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite(
      +                          mode, 7, 1);
 14466     02E9  0140               	movlb	0	; select bank0
 14467     02EA  0837               	movf	setMagneticChannel@mode+1,w
 14468     02EB  00F2               	movwf	bitWrite@reg+1
 14469     02EC  0836               	movf	setMagneticChannel@mode,w
 14470     02ED  00F1               	movwf	bitWrite@reg
 14471     02EE  3007               	movlw	7
 14472     02EF  00F3               	movwf	bitWrite@position
 14473     02F0  01F4               	clrf	bitWrite@value
 14474     02F1  0AF4               	incf	bitWrite@value,f
 14475     02F2  319F  273A  3180   	fcall	_bitWrite
 14476     02F5                     l14665:
 14477                           
 14478                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14479     02F5  0140               	movlb	0	; select bank0
 14480     02F6  0836               	movf	setMagneticChannel@mode,w
 14481     02F7  00A6               	movwf	writeRegister@data
 14482     02F8  3002               	movlw	2
 14483     02F9  319A  22F1  3180   	fcall	_writeRegister
 14484                           
 14485                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:     } else if (ch
      +                          annelMode == 0XA)
 14486     02FC  2B74               	goto	l14679
 14487     02FD                     l14667:
 14488     02FD  300A               	movlw	10
 14489     02FE  0635               	xorwf	setMagneticChannel@channelMode,w
 14490     02FF  1D03               	btfss	3,2
 14491     0300  2B02               	goto	u13291
 14492     0301  2B03               	goto	u13290
 14493     0302                     u13291:
 14494     0302  2B38               	goto	l14673
 14495     0303                     u13290:
 14496     0303                     l14669:
 14497                           
 14498                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite(mode, 4, 0);
 14499     0303  0837               	movf	setMagneticChannel@mode+1,w
 14500     0304  00F2               	movwf	bitWrite@reg+1
 14501     0305  0836               	movf	setMagneticChannel@mode,w
 14502     0306  00F1               	movwf	bitWrite@reg
 14503     0307  3004               	movlw	4
 14504     0308  00F3               	movwf	bitWrite@position
 14505     0309  01F4               	clrf	bitWrite@value
 14506     030A  319F  273A  3180   	fcall	_bitWrite
 14507                           
 14508                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         bitWrite(
      +                          mode, 5, 1);
 14509     030D  0140               	movlb	0	; select bank0
 14510     030E  0837               	movf	setMagneticChannel@mode+1,w
 14511     030F  00F2               	movwf	bitWrite@reg+1
 14512     0310  0836               	movf	setMagneticChannel@mode,w
 14513     0311  00F1               	movwf	bitWrite@reg
 14514     0312  3005               	movlw	5
 14515     0313  00F3               	movwf	bitWrite@position
 14516     0314  01F4               	clrf	bitWrite@value
 14517     0315  0AF4               	incf	bitWrite@value,f
 14518     0316  319F  273A  3180   	fcall	_bitWrite
 14519                           
 14520                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:         bitWrite(
      +                          mode, 6, 0);
 14521     0319  0140               	movlb	0	; select bank0
 14522     031A  0837               	movf	setMagneticChannel@mode+1,w
 14523     031B  00F2               	movwf	bitWrite@reg+1
 14524     031C  0836               	movf	setMagneticChannel@mode,w
 14525     031D  00F1               	movwf	bitWrite@reg
 14526     031E  3006               	movlw	6
 14527     031F  00F3               	movwf	bitWrite@position
 14528     0320  01F4               	clrf	bitWrite@value
 14529     0321  319F  273A  3180   	fcall	_bitWrite
 14530                           
 14531                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite(
      +                          mode, 7, 1);
 14532     0324  0140               	movlb	0	; select bank0
 14533     0325  0837               	movf	setMagneticChannel@mode+1,w
 14534     0326  00F2               	movwf	bitWrite@reg+1
 14535     0327  0836               	movf	setMagneticChannel@mode,w
 14536     0328  00F1               	movwf	bitWrite@reg
 14537     0329  3007               	movlw	7
 14538     032A  00F3               	movwf	bitWrite@position
 14539     032B  01F4               	clrf	bitWrite@value
 14540     032C  0AF4               	incf	bitWrite@value,f
 14541     032D  319F  273A  3180   	fcall	_bitWrite
 14542     0330                     l14671:
 14543                           
 14544                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14545     0330  0140               	movlb	0	; select bank0
 14546     0331  0836               	movf	setMagneticChannel@mode,w
 14547     0332  00A6               	movwf	writeRegister@data
 14548     0333  3002               	movlw	2
 14549     0334  319A  22F1  3180   	fcall	_writeRegister
 14550                           
 14551                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:     } else if (ch
      +                          annelMode == 0XB)
 14552     0337  2B74               	goto	l14679
 14553     0338                     l14673:
 14554     0338  300B               	movlw	11
 14555     0339  0635               	xorwf	setMagneticChannel@channelMode,w
 14556     033A  1D03               	btfss	3,2
 14557     033B  2B3D               	goto	u13301
 14558     033C  2B3E               	goto	u13300
 14559     033D                     u13301:
 14560     033D  2B74               	goto	l2234
 14561     033E                     u13300:
 14562     033E                     l14675:
 14563                           
 14564                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite(mode, 4, 1);
 14565     033E  0837               	movf	setMagneticChannel@mode+1,w
 14566     033F  00F2               	movwf	bitWrite@reg+1
 14567     0340  0836               	movf	setMagneticChannel@mode,w
 14568     0341  00F1               	movwf	bitWrite@reg
 14569     0342  3004               	movlw	4
 14570     0343  00F3               	movwf	bitWrite@position
 14571     0344  01F4               	clrf	bitWrite@value
 14572     0345  0AF4               	incf	bitWrite@value,f
 14573     0346  319F  273A  3180   	fcall	_bitWrite
 14574                           
 14575                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         bitWrite(
      +                          mode, 5, 1);
 14576     0349  0140               	movlb	0	; select bank0
 14577     034A  0837               	movf	setMagneticChannel@mode+1,w
 14578     034B  00F2               	movwf	bitWrite@reg+1
 14579     034C  0836               	movf	setMagneticChannel@mode,w
 14580     034D  00F1               	movwf	bitWrite@reg
 14581     034E  3005               	movlw	5
 14582     034F  00F3               	movwf	bitWrite@position
 14583     0350  01F4               	clrf	bitWrite@value
 14584     0351  0AF4               	incf	bitWrite@value,f
 14585     0352  319F  273A  3180   	fcall	_bitWrite
 14586                           
 14587                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:         bitWrite(
      +                          mode, 6, 0);
 14588     0355  0140               	movlb	0	; select bank0
 14589     0356  0837               	movf	setMagneticChannel@mode+1,w
 14590     0357  00F2               	movwf	bitWrite@reg+1
 14591     0358  0836               	movf	setMagneticChannel@mode,w
 14592     0359  00F1               	movwf	bitWrite@reg
 14593     035A  3006               	movlw	6
 14594     035B  00F3               	movwf	bitWrite@position
 14595     035C  01F4               	clrf	bitWrite@value
 14596     035D  319F  273A  3180   	fcall	_bitWrite
 14597                           
 14598                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite(
      +                          mode, 7, 1);
 14599     0360  0140               	movlb	0	; select bank0
 14600     0361  0837               	movf	setMagneticChannel@mode+1,w
 14601     0362  00F2               	movwf	bitWrite@reg+1
 14602     0363  0836               	movf	setMagneticChannel@mode,w
 14603     0364  00F1               	movwf	bitWrite@reg
 14604     0365  3007               	movlw	7
 14605     0366  00F3               	movwf	bitWrite@position
 14606     0367  01F4               	clrf	bitWrite@value
 14607     0368  0AF4               	incf	bitWrite@value,f
 14608     0369  319F  273A  3180   	fcall	_bitWrite
 14609     036C                     l14677:
 14610                           
 14611                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14612     036C  0140               	movlb	0	; select bank0
 14613     036D  0836               	movf	setMagneticChannel@mode,w
 14614     036E  00A6               	movwf	writeRegister@data
 14615     036F  3002               	movlw	2
 14616     0370  319A  22F1  3180   	fcall	_writeRegister
 14617     0373  2B74               	goto	l14679
 14618     0374                     l2234:
 14619     0374                     l14679:
 14620                           
 14621                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14622     0374  3188  20D2  3180   	fcall	_getError
 14623     0377                     l2240:
 14624     0377  0008               	return
 14625     0378                     __end_of_setMagneticChannel:
 14626                           
 14627                           	psect	text7
 14628     1AF1                     __ptext7:	
 14629 ;; *************** function _writeRegister *****************
 14630 ;; Defined at:
 14631 ;;		line 178 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;  regAddress      1    wreg     unsigned char 
 14634 ;;  data            1    6[BANK0 ] unsigned char 
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      unsigned char 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14646 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;Total ram usage:        2 bytes
 14651 ;; Hardware stack levels used: 1
 14652 ;; Hardware stack levels required when called: 13
 14653 ;; This function calls:
 14654 ;;		_i2c_write1ByteRegister
 14655 ;; This function is called by:
 14656 ;;		_setOperatingMode
 14657 ;;		_setMagneticChannel
 14658 ;;		_setXYAxisRange
 14659 ;;		_setZAxisRange
 14660 ;;		_setTemperatureEn
 14661 ;;		_setupWakeUpAndSleep
 14662 ;;		_setCRCMode
 14663 ;;		_setMagTemp
 14664 ;;		_setConvAvg
 14665 ;;		_setIntThreshold
 14666 ;;		_setLowPower
 14667 ;;		_setGlitchFilter
 14668 ;;		_setTriggerMode
 14669 ;;		_setSleeptime
 14670 ;;		_setMagDir
 14671 ;;		_setMagnitudeGain
 14672 ;;		_setMagneticGain
 14673 ;;		_setMagneticOffset1
 14674 ;;		_setMagneticOffset2
 14675 ;;		_setAngleEn
 14676 ;;		_setXThreshold
 14677 ;;		_setYThreshold
 14678 ;;		_setZThreshold
 14679 ;;		_setTemperatureThreshold
 14680 ;;		_setInterruptResult
 14681 ;;		_setThresholdEn
 14682 ;;		_setIntPinState
 14683 ;;		_setInterruptMode
 14684 ;;		_setMaskInterrupt
 14685 ;;		_setI2CAddress
 14686 ;;		_setI2CAddressEN
 14687 ;; This function uses a non-reentrant model
 14688 ;;
 14689                           
 14690     1AF1                     _writeRegister:	
 14691                           ;psect for function _writeRegister
 14692                           
 14693                           
 14694                           ;incstack = 0
 14695                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14696                           ;writeRegister@regAddress stored from wreg
 14697     1AF1  0140               	movlb	0	; select bank0
 14698     1AF2  00A7               	movwf	writeRegister@regAddress
 14699     1AF3                     l14113:
 14700                           
 14701                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 181:     i2c_write1Byt
      +                          eRegister( 0X22, regAddress, data);
 14702     1AF3  0827               	movf	writeRegister@regAddress,w
 14703     1AF4  00A4               	movwf	i2c_write1ByteRegister@reg
 14704     1AF5  0826               	movf	writeRegister@data,w
 14705     1AF6  00A5               	movwf	i2c_write1ByteRegister@data
 14706     1AF7  3022               	movlw	34
 14707     1AF8  3191  2165  319A   	fcall	_i2c_write1ByteRegister
 14708     1AFB                     l2133:
 14709     1AFB  0008               	return
 14710     1AFC                     __end_of_writeRegister:
 14711                           
 14712                           	psect	text8
 14713     1165                     __ptext8:	
 14714 ;; *************** function _i2c_write1ByteRegister *****************
 14715 ;; Defined at:
 14716 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14717 ;; Parameters:    Size  Location     Type
 14718 ;;  address         1    wreg     unsigned char 
 14719 ;;  reg             1    4[BANK0 ] unsigned char 
 14720 ;;  data            1    5[BANK0 ] unsigned char 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  address         1   11[COMMON] unsigned char 
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1    wreg      void 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/0
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14736 ;;Total ram usage:        3 bytes
 14737 ;; Hardware stack levels used: 1
 14738 ;; Hardware stack levels required when called: 12
 14739 ;; This function calls:
 14740 ;;		_I2C1_Close
 14741 ;;		_I2C1_MasterWrite
 14742 ;;		_I2C1_Open
 14743 ;;		_I2C1_SetAddressNackCallback
 14744 ;;		_I2C1_SetBuffer
 14745 ;;		_I2C1_SetDataCompleteCallback
 14746 ;; This function is called by:
 14747 ;;		_writeRegister
 14748 ;;		_BMA253_Initialize
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752     1165                     _i2c_write1ByteRegister:	
 14753                           ;psect for function _i2c_write1ByteRegister
 14754                           
 14755                           
 14756                           ;incstack = 0
 14757                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14758                           ;i2c_write1ByteRegister@address stored from wreg
 14759     1165  00FB               	movwf	i2c_write1ByteRegister@address
 14760     1166                     l13955:
 14761     1166                     l13957:	
 14762                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14763                           
 14764     1166  087B               	movf	i2c_write1ByteRegister@address,w
 14765     1167  3191  21C7  3191   	fcall	_I2C1_Open
 14766     116A  3A00               	xorlw	0
 14767     116B  1903               	skipnz
 14768     116C  296E               	goto	u12001
 14769     116D  296F               	goto	u12000
 14770     116E                     u12001:
 14771     116E  2966               	goto	l13957
 14772     116F                     u12000:
 14773     116F                     l13959:
 14774                           
 14775                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14776     116F  3094               	movlw	low _wr1RegCompleteHandler
 14777     1170  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14778     1171  301B               	movlw	high _wr1RegCompleteHandler
 14779     1172  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14780     1173  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14781     1174  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14782     1175  319A  22C5  3191   	fcall	_I2C1_SetDataCompleteCallback
 14783     1178                     l13961:
 14784                           
 14785                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14786     1178  3001               	movlw	1
 14787     1179  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14788     117A  3000               	movlw	0
 14789     117B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14790     117C  3024               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14791     117D  319B  2346  3191   	fcall	_I2C1_SetBuffer
 14792     1180                     l13963:
 14793                           
 14794                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14795     1180  3000               	movlw	0
 14796     1181  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14797     1182  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14798     1183  3000               	movlw	0
 14799     1184  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14800     1185  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14801     1186  319A  22D0  3191   	fcall	_I2C1_SetAddressNackCallback
 14802     1189                     l13965:
 14803                           
 14804                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14805     1189  3199  21C8  3191   	fcall	_I2C1_MasterWrite
 14806     118C                     l13967:	
 14807                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14808                           
 14809     118C  319D  2510  3191   	fcall	_I2C1_Close
 14810     118F  3A01               	xorlw	1
 14811     1190  1903               	skipnz
 14812     1191  2993               	goto	u12011
 14813     1192  2994               	goto	u12010
 14814     1193                     u12011:
 14815     1193  298C               	goto	l13967
 14816     1194                     u12010:
 14817     1194                     l510:
 14818     1194  0008               	return
 14819     1195                     __end_of_i2c_write1ByteRegister:
 14820                           
 14821                           	psect	text9
 14822     08D2                     __ptext9:	
 14823 ;; *************** function _getError *****************
 14824 ;; Defined at:
 14825 ;;		line 2310 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  statusReg       1   18[BANK0 ] unsigned char 
 14830 ;;  oscillatorEr    1   17[BANK0 ] unsigned char 
 14831 ;;  intPinError     1   16[BANK0 ] unsigned char 
 14832 ;;  otpCrcError     1   15[BANK0 ] unsigned char 
 14833 ;;  undervoltage    1   14[BANK0 ] unsigned char 
 14834 ;; Return value:  Size  Location     Type
 14835 ;;                  1    wreg      char 
 14836 ;; Registers used:
 14837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14838 ;; Tracked objects:
 14839 ;;		On entry : 0/0
 14840 ;;		On exit  : 0/0
 14841 ;;		Unchanged: 0/0
 14842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14844 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14847 ;;Total ram usage:        7 bytes
 14848 ;; Hardware stack levels used: 1
 14849 ;; Hardware stack levels required when called: 15
 14850 ;; This function calls:
 14851 ;;		_bitRead
 14852 ;;		_getDeviceStatus
 14853 ;; This function is called by:
 14854 ;;		_begin
 14855 ;;		_setOperatingMode
 14856 ;;		_setMagneticChannel
 14857 ;;		_setXYAxisRange
 14858 ;;		_setZAxisRange
 14859 ;;		_setTemperatureEn
 14860 ;;		_setupWakeUpAndSleep
 14861 ;;		_readWakeUpAndSleepData
 14862 ;;		_setCRCMode
 14863 ;;		_setMagTemp
 14864 ;;		_setConvAvg
 14865 ;;		_setReadMode
 14866 ;;		_setIntThreshold
 14867 ;;		_setLowPower
 14868 ;;		_setGlitchFilter
 14869 ;;		_setTriggerMode
 14870 ;;		_setSleeptime
 14871 ;;		_setMagDir
 14872 ;;		_setMagnitudeGain
 14873 ;;		_setMagneticGain
 14874 ;;		_setMagneticOffset1
 14875 ;;		_setMagneticOffset2
 14876 ;;		_setAngleEn
 14877 ;;		_setXThreshold
 14878 ;;		_setYThreshold
 14879 ;;		_setZThreshold
 14880 ;;		_setTemperatureThreshold
 14881 ;;		_setInterruptResult
 14882 ;;		_setThresholdEn
 14883 ;;		_setIntPinState
 14884 ;;		_setInterruptMode
 14885 ;;		_setMaskInterrupt
 14886 ;;		_setI2CAddress
 14887 ;;		_setI2CAddressEN
 14888 ;;		_setOscillatorError
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892     08D2                     _getError:	
 14893                           ;psect for function _getError
 14894                           
 14895     08D2                     l14075:	
 14896                           ;incstack = 0
 14897 ;; hardware stack exceeded
 14898                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14899                           
 14900                           
 14901                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2312:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14902     08D2  319A  224F  3188   	fcall	_getDeviceStatus
 14903     08D5  0140               	movlb	0	; select bank0
 14904     08D6  00B2               	movwf	getError@statusReg
 14905     08D7                     l14077:
 14906                           
 14907                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2313:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14908     08D7  0832               	movf	getError@statusReg,w
 14909     08D8  00AC               	movwf	??_getError
 14910     08D9  01AD               	clrf	??_getError+1
 14911     08DA  082C               	movf	??_getError,w
 14912     08DB  00F1               	movwf	bitRead@reg
 14913     08DC  082D               	movf	??_getError+1,w
 14914     08DD  00F2               	movwf	bitRead@reg+1
 14915     08DE  01F3               	clrf	bitRead@position
 14916     08DF  319F  2716  3188   	fcall	_bitRead
 14917     08E2  0140               	movlb	0	; select bank0
 14918     08E3  00AE               	movwf	getError@undervoltageError
 14919     08E4                     l14079:
 14920                           
 14921                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2314:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14922     08E4  0832               	movf	getError@statusReg,w
 14923     08E5  00AC               	movwf	??_getError
 14924     08E6  01AD               	clrf	??_getError+1
 14925     08E7  082C               	movf	??_getError,w
 14926     08E8  00F1               	movwf	bitRead@reg
 14927     08E9  082D               	movf	??_getError+1,w
 14928     08EA  00F2               	movwf	bitRead@reg+1
 14929     08EB  01F3               	clrf	bitRead@position
 14930     08EC  0AF3               	incf	bitRead@position,f
 14931     08ED  319F  2716  3188   	fcall	_bitRead
 14932     08F0  0140               	movlb	0	; select bank0
 14933     08F1  00AF               	movwf	getError@otpCrcError
 14934     08F2                     l14081:
 14935                           
 14936                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2315:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14937     08F2  0832               	movf	getError@statusReg,w
 14938     08F3  00AC               	movwf	??_getError
 14939     08F4  01AD               	clrf	??_getError+1
 14940     08F5  082C               	movf	??_getError,w
 14941     08F6  00F1               	movwf	bitRead@reg
 14942     08F7  082D               	movf	??_getError+1,w
 14943     08F8  00F2               	movwf	bitRead@reg+1
 14944     08F9  3002               	movlw	2
 14945     08FA  00F3               	movwf	bitRead@position
 14946     08FB  319F  2716  3188   	fcall	_bitRead
 14947     08FE  0140               	movlb	0	; select bank0
 14948     08FF  00B0               	movwf	getError@intPinError
 14949     0900                     l14083:
 14950                           
 14951                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2316:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14952     0900  0832               	movf	getError@statusReg,w
 14953     0901  00AC               	movwf	??_getError
 14954     0902  01AD               	clrf	??_getError+1
 14955     0903  082C               	movf	??_getError,w
 14956     0904  00F1               	movwf	bitRead@reg
 14957     0905  082D               	movf	??_getError+1,w
 14958     0906  00F2               	movwf	bitRead@reg+1
 14959     0907  3003               	movlw	3
 14960     0908  00F3               	movwf	bitRead@position
 14961     0909  319F  2716  3188   	fcall	_bitRead
 14962     090C  0140               	movlb	0	; select bank0
 14963     090D  00B1               	movwf	getError@oscillatorError
 14964     090E                     l14085:
 14965                           
 14966                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14967     090E  082E               	movf	getError@undervoltageError,w
 14968     090F  1903               	btfsc	3,2
 14969     0910  2912               	goto	u12161
 14970     0911  2913               	goto	u12160
 14971     0912                     u12161:
 14972     0912  2924               	goto	l14099
 14973     0913                     u12160:
 14974     0913                     l14087:
 14975     0913  082F               	movf	getError@otpCrcError,w
 14976     0914  1903               	btfsc	3,2
 14977     0915  2917               	goto	u12171
 14978     0916  2918               	goto	u12170
 14979     0917                     u12171:
 14980     0917  2924               	goto	l14099
 14981     0918                     u12170:
 14982     0918                     l14089:
 14983     0918  0830               	movf	getError@intPinError,w
 14984     0919  1903               	btfsc	3,2
 14985     091A  291C               	goto	u12181
 14986     091B  291D               	goto	u12180
 14987     091C                     u12181:
 14988     091C  2924               	goto	l14099
 14989     091D                     u12180:
 14990     091D                     l14091:
 14991     091D  0831               	movf	getError@oscillatorError,w
 14992     091E  1903               	btfsc	3,2
 14993     091F  2921               	goto	u12191
 14994     0920  2922               	goto	u12190
 14995     0921                     u12191:
 14996     0921  2924               	goto	l14099
 14997     0922                     u12190:
 14998     0922                     l14093:
 14999                           
 15000                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:         return -
      +                          1;
 15001     0922  30FF               	movlw	255
 15002     0923  2925               	goto	l2634
 15003     0924                     l14099:
 15004                           
 15005                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:         return 0
      +                          ;
 15006     0924  3000               	movlw	0
 15007     0925                     l2634:
 15008     0925  0008               	return
 15009     0926                     __end_of_getError:
 15010                           
 15011                           	psect	text10
 15012     1A4F                     __ptext10:	
 15013 ;; *************** function _getDeviceStatus *****************
 15014 ;; Defined at:
 15015 ;;		line 2296 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  deviceStatus    1   11[COMMON] unsigned char 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      unsigned char 
 15022 ;; Registers used:
 15023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15033 ;;Total ram usage:        1 bytes
 15034 ;; Hardware stack levels used: 1
 15035 ;; Hardware stack levels required when called: 14
 15036 ;; This function calls:
 15037 ;;		_readRegister
 15038 ;; This function is called by:
 15039 ;;		_getError
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043     1A4F                     _getDeviceStatus:	
 15044                           ;psect for function _getDeviceStatus
 15045                           
 15046     1A4F                     l14009:	
 15047                           ;incstack = 0
 15048 ;; hardware stack exceeded
 15049                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15050                           
 15051                           
 15052                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2298:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 15053     1A4F  301C               	movlw	28
 15054     1A50  319A  22FC  319A   	fcall	_readRegister
 15055     1A53  00FB               	movwf	getDeviceStatus@deviceStatusReg
 15056     1A54                     l14011:
 15057                           
 15058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2300:     return devic
      +                          eStatusReg;
 15059     1A54  087B               	movf	getDeviceStatus@deviceStatusReg,w
 15060     1A55                     l2630:
 15061     1A55  0008               	return
 15062     1A56                     __end_of_getDeviceStatus:
 15063                           
 15064                           	psect	text11
 15065     1F3A                     __ptext11:	
 15066 ;; *************** function _bitWrite *****************
 15067 ;; Defined at:
 15068 ;;		line 2507 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  reg             2    1[COMMON] PTR unsigned short 
 15071 ;;		 -> RAM(8192), 
 15072 ;;  position        1    3[COMMON] unsigned char 
 15073 ;;  value           1    4[COMMON] unsigned char 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;  lsb             1    8[COMMON] unsigned char 
 15076 ;;  mask            1    7[COMMON] unsigned char 
 15077 ;;  msb             1    6[COMMON] unsigned char 
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  1    wreg      void 
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15090 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15091 ;;Total ram usage:        8 bytes
 15092 ;; Hardware stack levels used: 1
 15093 ;; Hardware stack levels required when called: 4
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_setOperatingMode
 15098 ;;		_setMagneticChannel
 15099 ;;		_setXYAxisRange
 15100 ;;		_setZAxisRange
 15101 ;;		_setTemperatureEn
 15102 ;;		_setCRCMode
 15103 ;;		_setMagTemp
 15104 ;;		_setConvAvg
 15105 ;;		_setReadMode
 15106 ;;		_setIntThreshold
 15107 ;;		_setLowPower
 15108 ;;		_setGlitchFilter
 15109 ;;		_setTriggerMode
 15110 ;;		_setSleeptime
 15111 ;;		_setMagDir
 15112 ;;		_setMagnitudeGain
 15113 ;;		_setAngleEn
 15114 ;;		_setInterruptResult
 15115 ;;		_setThresholdEn
 15116 ;;		_setIntPinState
 15117 ;;		_setMaskInterrupt
 15118 ;;		_setI2CAddressEN
 15119 ;;		_setOscillatorError
 15120 ;; This function uses a non-reentrant model
 15121 ;;
 15122                           
 15123     1F3A                     _bitWrite:	
 15124                           ;psect for function _bitWrite
 15125                           
 15126     1F3A                     l9371:	
 15127                           ;incstack = 0
 15128                           ; Regs used in _bitWrite: [wreg+status,2+status,0]
 15129                           
 15130     1F3A                     l9373:
 15131                           
 15132                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2509:     uint8_t lsb 
      +                          = (uint8_t) reg | 0xff00;
 15133     1F3A  0871               	movf	bitWrite@reg,w
 15134     1F3B  00F8               	movwf	bitWrite@lsb
 15135     1F3C                     l9375:
 15136                           
 15137                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2510:     uint8_t msb 
      +                          = (uint8_t) reg << 8;
 15138     1F3C  01F6               	clrf	bitWrite@msb
 15139                           
 15140                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2511:     if (position
      +                           > 7) {
 15141     1F3D  3008               	movlw	8
 15142     1F3E  0273               	subwf	bitWrite@position,w
 15143     1F3F  1C03               	skipc
 15144     1F40  2F42               	goto	u6661
 15145     1F41  2F43               	goto	u6660
 15146     1F42                     u6661:
 15147     1F42  2F52               	goto	l9381
 15148     1F43                     u6660:
 15149     1F43                     l9377:
 15150                           
 15151                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2512:         mask = v
      +                          alue << position - 7;
 15152     1F43  0874               	movf	bitWrite@value,w
 15153     1F44  00F5               	movwf	??_bitWrite
 15154     1F45  0873               	movf	bitWrite@position,w
 15155     1F46  3EF9               	addlw	-7
 15156     1F47  0A89               	incf	9,f
 15157     1F48  2F4A               	goto	u6674
 15158     1F49                     u6675:
 15159     1F49  35F5               	lslf	??_bitWrite,f
 15160     1F4A                     u6674:
 15161     1F4A  0B89               	decfsz	9,f
 15162     1F4B  2F49               	goto	u6675
 15163     1F4C  0875               	movf	??_bitWrite,w
 15164     1F4D  00F7               	movwf	bitWrite@mask
 15165                           
 15166                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2513:         msb = ms
      +                          b | mask;
 15167     1F4E  0876               	movf	bitWrite@msb,w
 15168     1F4F  0477               	iorwf	bitWrite@mask,w
 15169     1F50  00F6               	movwf	bitWrite@msb
 15170     1F51                     l9379:
 15171                           
 15172                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2515:     } else {
 15173     1F51  2F5F               	goto	l2672
 15174     1F52                     l9381:
 15175                           
 15176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:             mask
      +                           = value << position;
 15177     1F52  0874               	movf	bitWrite@value,w
 15178     1F53  00F5               	movwf	??_bitWrite
 15179     1F54  0A73               	incf	bitWrite@position,w
 15180     1F55  2F57               	goto	u6684
 15181     1F56                     u6685:
 15182     1F56  35F5               	lslf	??_bitWrite,f
 15183     1F57                     u6684:
 15184     1F57  0B89               	decfsz	9,f
 15185     1F58  2F56               	goto	u6685
 15186     1F59  0875               	movf	??_bitWrite,w
 15187     1F5A  00F7               	movwf	bitWrite@mask
 15188                           
 15189                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2518:             lsb 
      +                          = lsb | mask;
 15190     1F5B  0878               	movf	bitWrite@lsb,w
 15191     1F5C  0477               	iorwf	bitWrite@mask,w
 15192     1F5D  00F8               	movwf	bitWrite@lsb
 15193     1F5E  2F51               	goto	l9379
 15194     1F5F                     l2672:
 15195     1F5F  0008               	return
 15196     1F60                     __end_of_bitWrite:
 15197                           
 15198                           	psect	text12
 15199     1C2D                     __ptext12:	
 15200 ;; *************** function _isConnected *****************
 15201 ;; Defined at:
 15202 ;;		line 87 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;		None
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;		None
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      char 
 15209 ;; Registers used:
 15210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15220 ;;Total ram usage:        0 bytes
 15221 ;; Hardware stack levels used: 1
 15222 ;; Hardware stack levels required when called: 15
 15223 ;; This function calls:
 15224 ;;		_getManufacturerID
 15225 ;; This function is called by:
 15226 ;;		_begin
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230     1C2D                     _isConnected:	
 15231                           ;psect for function _isConnected
 15232                           
 15233     1C2D                     l14593:	
 15234                           ;incstack = 0
 15235 ;; hardware stack exceeded
 15236                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15237                           
 15238                           
 15239                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 95:     if (getManufac
      +                          turerID() != 0x5449) {
 15240     1C2D  319E  260C  319C   	fcall	_getManufacturerID
 15241     1C30  3049               	movlw	73
 15242     1C31  0140               	movlb	0	; select bank0
 15243     1C32  062C               	xorwf	?_getManufacturerID,w
 15244     1C33  3054               	movlw	84
 15245     1C34  1903               	skipnz
 15246     1C35  062D               	xorwf	?_getManufacturerID+1,w
 15247     1C36  1903               	btfsc	3,2
 15248     1C37  2C39               	goto	u13181
 15249     1C38  2C3A               	goto	u13180
 15250     1C39                     u13181:
 15251     1C39  2C3C               	goto	l14599
 15252     1C3A                     u13180:
 15253     1C3A                     l14595:
 15254                           
 15255                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 96:         return -1;
 15256     1C3A  30FF               	movlw	255
 15257     1C3B  2C3D               	goto	l2121
 15258     1C3C                     l14599:
 15259                           
 15260                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 99:     return 0;
 15261     1C3C  3000               	movlw	0
 15262     1C3D                     l2121:
 15263     1C3D  0008               	return
 15264     1C3E                     __end_of_isConnected:
 15265                           
 15266                           	psect	text13
 15267     1E0C                     __ptext13:	
 15268 ;; *************** function _getManufacturerID *****************
 15269 ;; Defined at:
 15270 ;;		line 2261 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;		None
 15273 ;; Auto vars:     Size  Location     Type
 15274 ;;  databuffer      2   21[BANK0 ] unsigned char [2]
 15275 ;;  deviceIDReg     2   19[BANK0 ] unsigned short 
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  2   12[BANK0 ] unsigned short 
 15278 ;; Registers used:
 15279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15287 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15288 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15289 ;;Total ram usage:       11 bytes
 15290 ;; Hardware stack levels used: 1
 15291 ;; Hardware stack levels required when called: 14
 15292 ;; This function calls:
 15293 ;;		_readRegisters
 15294 ;; This function is called by:
 15295 ;;		_isConnected
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299     1E0C                     _getManufacturerID:	
 15300                           ;psect for function _getManufacturerID
 15301                           
 15302     1E0C                     l14103:	
 15303                           ;incstack = 0
 15304 ;; hardware stack exceeded
 15305                           ; Regs used in _getManufacturerID: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15306                           
 15307     1E0C                     l14105:
 15308                           
 15309                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2263:     uint8_t data
      +                          buffer[2];;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2265:     re
      +                          adRegisters(TMAG5273_REG_MANUFACTURER_ID_LSB, databuffer, 2);
 15310     1E0C  3035               	movlw	(low (getManufacturerID@databuffer| 0))& (0+255)
 15311     1E0D  0140               	movlb	0	; select bank0
 15312     1E0E  00A7               	movwf	readRegisters@dataBuffer
 15313     1E0F  3002               	movlw	2
 15314     1E10  00A8               	movwf	readRegisters@numBytes
 15315     1E11  300E               	movlw	14
 15316     1E12  319B  2373  319E   	fcall	_readRegisters
 15317     1E15                     l14107:
 15318                           
 15319                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2267:     deviceIDReg 
      +                          = (databuffer[1] << 8) | (databuffer[0]);
 15320     1E15  0140               	movlb	0	; select bank0
 15321     1E16  0835               	movf	getManufacturerID@databuffer,w
 15322     1E17  00AE               	movwf	??_getManufacturerID
 15323     1E18  01AF               	clrf	??_getManufacturerID+1
 15324     1E19  0836               	movf	getManufacturerID@databuffer+1,w
 15325     1E1A  00B0               	movwf	??_getManufacturerID+2
 15326     1E1B  01B1               	clrf	??_getManufacturerID+3
 15327     1E1C  0830               	movf	??_getManufacturerID+2,w
 15328     1E1D  00B1               	movwf	??_getManufacturerID+3
 15329     1E1E  01B0               	clrf	??_getManufacturerID+2
 15330     1E1F  082E               	movf	??_getManufacturerID,w
 15331     1E20  0430               	iorwf	??_getManufacturerID+2,w
 15332     1E21  00B3               	movwf	getManufacturerID@deviceIDReg
 15333     1E22  082F               	movf	??_getManufacturerID+1,w
 15334     1E23  0431               	iorwf	??_getManufacturerID+3,w
 15335     1E24  00B4               	movwf	getManufacturerID@deviceIDReg+1
 15336     1E25                     l14109:
 15337                           
 15338                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2269:     return devic
      +                          eIDReg;
 15339     1E25  0834               	movf	getManufacturerID@deviceIDReg+1,w
 15340     1E26  00AD               	movwf	?_getManufacturerID+1
 15341     1E27  0833               	movf	getManufacturerID@deviceIDReg,w
 15342     1E28  00AC               	movwf	?_getManufacturerID
 15343     1E29                     l2624:
 15344     1E29  0008               	return
 15345     1E2A                     __end_of_getManufacturerID:
 15346                           
 15347                           	psect	text14
 15348     1C8C                     __ptext14:	
 15349 ;; *************** function _getTemperatureEN *****************
 15350 ;; Defined at:
 15351 ;;		line 2029 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;  tempENreg       1   15[BANK0 ] unsigned char 
 15356 ;;  tempEN          1   14[BANK0 ] unsigned char 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      unsigned char 
 15359 ;; Registers used:
 15360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;Total ram usage:        4 bytes
 15371 ;; Hardware stack levels used: 1
 15372 ;; Hardware stack levels required when called: 14
 15373 ;; This function calls:
 15374 ;;		_bitRead
 15375 ;;		_readRegister
 15376 ;; This function is called by:
 15377 ;;		_begin
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381     1C8C                     _getTemperatureEN:	
 15382                           ;psect for function _getTemperatureEN
 15383                           
 15384     1C8C                     l15019:	
 15385                           ;incstack = 0
 15386                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15387                           
 15388     1C8C                     l15021:
 15389                           
 15390                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2031:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15391     1C8C  3007               	movlw	7
 15392     1C8D  319A  22FC  319C   	fcall	_readRegister
 15393     1C90  0140               	movlb	0	; select bank0
 15394     1C91  00AF               	movwf	getTemperatureEN@tempENreg
 15395     1C92                     l15023:
 15396                           
 15397                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2033:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15398     1C92  082F               	movf	getTemperatureEN@tempENreg,w
 15399     1C93  00AC               	movwf	??_getTemperatureEN
 15400     1C94  01AD               	clrf	??_getTemperatureEN+1
 15401     1C95  082C               	movf	??_getTemperatureEN,w
 15402     1C96  00F1               	movwf	bitRead@reg
 15403     1C97  082D               	movf	??_getTemperatureEN+1,w
 15404     1C98  00F2               	movwf	bitRead@reg+1
 15405     1C99  01F3               	clrf	bitRead@position
 15406     1C9A  319F  2716  319C   	fcall	_bitRead
 15407     1C9D  0140               	movlb	0	; select bank0
 15408     1C9E  00AE               	movwf	getTemperatureEN@tempEN
 15409     1C9F                     l15025:
 15410                           
 15411                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2035:     return tempE
      +                          N;
 15412     1C9F  082E               	movf	getTemperatureEN@tempEN,w
 15413     1CA0                     l2574:
 15414     1CA0  0008               	return
 15415     1CA1                     __end_of_getTemperatureEN:
 15416                           
 15417                           	psect	text15
 15418     082B                     __ptext15:	
 15419 ;; *************** function _getOperatingMode *****************
 15420 ;; Defined at:
 15421 ;;		line 1575 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  opMode1         1   16[BANK0 ] unsigned char 
 15426 ;;  opMode0         1   15[BANK0 ] unsigned char 
 15427 ;;  opMode          1   14[BANK0 ] unsigned char 
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      unsigned char 
 15430 ;; Registers used:
 15431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15438 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15440 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15441 ;;Total ram usage:        5 bytes
 15442 ;; Hardware stack levels used: 1
 15443 ;; Hardware stack levels required when called: 14
 15444 ;; This function calls:
 15445 ;;		_bitRead
 15446 ;;		_readRegister
 15447 ;; This function is called by:
 15448 ;;		_begin
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452     082B                     _getOperatingMode:	
 15453                           ;psect for function _getOperatingMode
 15454                           
 15455     082B                     l14785:	
 15456                           ;incstack = 0
 15457                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15458                           
 15459     082B                     l14787:
 15460                           
 15461                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1577:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15462     082B  3001               	movlw	1
 15463     082C  319A  22FC  3188   	fcall	_readRegister
 15464     082F  0140               	movlb	0	; select bank0
 15465     0830  00AE               	movwf	getOperatingMode@opMode
 15466     0831                     l14789:
 15467                           
 15468                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1579:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15469     0831  082E               	movf	getOperatingMode@opMode,w
 15470     0832  00AC               	movwf	??_getOperatingMode
 15471     0833  01AD               	clrf	??_getOperatingMode+1
 15472     0834  082C               	movf	??_getOperatingMode,w
 15473     0835  00F1               	movwf	bitRead@reg
 15474     0836  082D               	movf	??_getOperatingMode+1,w
 15475     0837  00F2               	movwf	bitRead@reg+1
 15476     0838  01F3               	clrf	bitRead@position
 15477     0839  319F  2716  3188   	fcall	_bitRead
 15478     083C  0140               	movlb	0	; select bank0
 15479     083D  00AF               	movwf	getOperatingMode@opMode0
 15480     083E                     l14791:
 15481                           
 15482                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1580:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15483     083E  082E               	movf	getOperatingMode@opMode,w
 15484     083F  00AC               	movwf	??_getOperatingMode
 15485     0840  01AD               	clrf	??_getOperatingMode+1
 15486     0841  082C               	movf	??_getOperatingMode,w
 15487     0842  00F1               	movwf	bitRead@reg
 15488     0843  082D               	movf	??_getOperatingMode+1,w
 15489     0844  00F2               	movwf	bitRead@reg+1
 15490     0845  01F3               	clrf	bitRead@position
 15491     0846  0AF3               	incf	bitRead@position,f
 15492     0847  319F  2716  3188   	fcall	_bitRead
 15493     084A  0140               	movlb	0	; select bank0
 15494     084B  00B0               	movwf	getOperatingMode@opMode1
 15495     084C                     l14793:
 15496                           
 15497                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1582:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15498     084C  082F               	movf	getOperatingMode@opMode0,w
 15499     084D  1D03               	btfss	3,2
 15500     084E  2850               	goto	u13411
 15501     084F  2851               	goto	u13410
 15502     0850                     u13411:
 15503     0850  2858               	goto	l14803
 15504     0851                     u13410:
 15505     0851                     l14795:
 15506     0851  0830               	movf	getOperatingMode@opMode1,w
 15507     0852  1D03               	btfss	3,2
 15508     0853  2855               	goto	u13421
 15509     0854  2856               	goto	u13420
 15510     0855                     u13421:
 15511     0855  2858               	goto	l14803
 15512     0856                     u13420:
 15513     0856                     l14797:
 15514                           
 15515                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1583:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1585:         return 0;
 15516     0856  3000               	movlw	0
 15517     0857  287D               	goto	l2446
 15518     0858                     l14803:
 15519     0858  032F               	decf	getOperatingMode@opMode0,w
 15520     0859  1D03               	btfss	3,2
 15521     085A  285C               	goto	u13431
 15522     085B  285D               	goto	u13430
 15523     085C                     u13431:
 15524     085C  2864               	goto	l14813
 15525     085D                     u13430:
 15526     085D                     l14805:
 15527     085D  0830               	movf	getOperatingMode@opMode1,w
 15528     085E  1D03               	btfss	3,2
 15529     085F  2861               	goto	u13441
 15530     0860  2862               	goto	u13440
 15531     0861                     u13441:
 15532     0861  2864               	goto	l14813
 15533     0862                     u13440:
 15534     0862                     l14807:
 15535                           
 15536                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:         return 1;
 15537     0862  3001               	movlw	1
 15538     0863  287D               	goto	l2446
 15539     0864                     l14813:
 15540     0864  082F               	movf	getOperatingMode@opMode0,w
 15541     0865  1D03               	btfss	3,2
 15542     0866  2868               	goto	u13451
 15543     0867  2869               	goto	u13450
 15544     0868                     u13451:
 15545     0868  2870               	goto	l14823
 15546     0869                     u13450:
 15547     0869                     l14815:
 15548     0869  0330               	decf	getOperatingMode@opMode1,w
 15549     086A  1D03               	btfss	3,2
 15550     086B  286D               	goto	u13461
 15551     086C  286E               	goto	u13460
 15552     086D                     u13461:
 15553     086D  2870               	goto	l14823
 15554     086E                     u13460:
 15555     086E                     l14817:
 15556                           
 15557                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1591:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1593:         return 2;
 15558     086E  3002               	movlw	2
 15559     086F  287D               	goto	l2446
 15560     0870                     l14823:
 15561     0870  032F               	decf	getOperatingMode@opMode0,w
 15562     0871  1D03               	btfss	3,2
 15563     0872  2874               	goto	u13471
 15564     0873  2875               	goto	u13470
 15565     0874                     u13471:
 15566     0874  287C               	goto	l2449
 15567     0875                     u13470:
 15568     0875                     l14825:
 15569     0875  0330               	decf	getOperatingMode@opMode1,w
 15570     0876  1D03               	btfss	3,2
 15571     0877  2879               	goto	u13481
 15572     0878  287A               	goto	u13480
 15573     0879                     u13481:
 15574     0879  287C               	goto	l2449
 15575     087A                     u13480:
 15576     087A                     l14827:
 15577                           
 15578                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1595:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1597:         return 3;
 15579     087A  3003               	movlw	3
 15580     087B  287D               	goto	l2446
 15581     087C                     l2449:
 15582     087C  2856               	goto	l14797
 15583     087D                     l2446:
 15584     087D  0008               	return
 15585     087E                     __end_of_getOperatingMode:
 15586                           
 15587                           	psect	text16
 15588     0EBA                     __ptext16:	
 15589 ;; *************** function _getMagneticChannel *****************
 15590 ;; Defined at:
 15591 ;;		line 1619 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;		None
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;  magMode7        1   18[BANK0 ] unsigned char 
 15596 ;;  magMode6        1   17[BANK0 ] unsigned char 
 15597 ;;  magMode5        1   16[BANK0 ] unsigned char 
 15598 ;;  magMode4        1   15[BANK0 ] unsigned char 
 15599 ;;  magChannel      1   14[BANK0 ] unsigned char 
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  1    wreg      unsigned char 
 15602 ;; Registers used:
 15603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15604 ;; Tracked objects:
 15605 ;;		On entry : 0/0
 15606 ;;		On exit  : 0/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15610 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15612 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15613 ;;Total ram usage:        7 bytes
 15614 ;; Hardware stack levels used: 1
 15615 ;; Hardware stack levels required when called: 14
 15616 ;; This function calls:
 15617 ;;		_bitRead
 15618 ;;		_readRegister
 15619 ;; This function is called by:
 15620 ;;		_begin
 15621 ;; This function uses a non-reentrant model
 15622 ;;
 15623                           
 15624     0EBA                     _getMagneticChannel:	
 15625                           ;psect for function _getMagneticChannel
 15626                           
 15627     0EBA                     l14835:	
 15628                           ;incstack = 0
 15629                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15630                           
 15631     0EBA                     l14837:
 15632                           
 15633                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1621:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15634     0EBA  3002               	movlw	2
 15635     0EBB  319A  22FC  318E   	fcall	_readRegister
 15636     0EBE  0140               	movlb	0	; select bank0
 15637     0EBF  00AE               	movwf	getMagneticChannel@magChannel
 15638     0EC0                     l14839:
 15639                           
 15640                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1623:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15641     0EC0  082E               	movf	getMagneticChannel@magChannel,w
 15642     0EC1  00AC               	movwf	??_getMagneticChannel
 15643     0EC2  01AD               	clrf	??_getMagneticChannel+1
 15644     0EC3  082C               	movf	??_getMagneticChannel,w
 15645     0EC4  00F1               	movwf	bitRead@reg
 15646     0EC5  082D               	movf	??_getMagneticChannel+1,w
 15647     0EC6  00F2               	movwf	bitRead@reg+1
 15648     0EC7  3004               	movlw	4
 15649     0EC8  00F3               	movwf	bitRead@position
 15650     0EC9  319F  2716  318E   	fcall	_bitRead
 15651     0ECC  0140               	movlb	0	; select bank0
 15652     0ECD  00AF               	movwf	getMagneticChannel@magMode4
 15653     0ECE                     l14841:
 15654                           
 15655                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1624:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15656     0ECE  082E               	movf	getMagneticChannel@magChannel,w
 15657     0ECF  00AC               	movwf	??_getMagneticChannel
 15658     0ED0  01AD               	clrf	??_getMagneticChannel+1
 15659     0ED1  082C               	movf	??_getMagneticChannel,w
 15660     0ED2  00F1               	movwf	bitRead@reg
 15661     0ED3  082D               	movf	??_getMagneticChannel+1,w
 15662     0ED4  00F2               	movwf	bitRead@reg+1
 15663     0ED5  3005               	movlw	5
 15664     0ED6  00F3               	movwf	bitRead@position
 15665     0ED7  319F  2716  318E   	fcall	_bitRead
 15666     0EDA  0140               	movlb	0	; select bank0
 15667     0EDB  00B0               	movwf	getMagneticChannel@magMode5
 15668     0EDC                     l14843:
 15669                           
 15670                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15671     0EDC  082E               	movf	getMagneticChannel@magChannel,w
 15672     0EDD  00AC               	movwf	??_getMagneticChannel
 15673     0EDE  01AD               	clrf	??_getMagneticChannel+1
 15674     0EDF  082C               	movf	??_getMagneticChannel,w
 15675     0EE0  00F1               	movwf	bitRead@reg
 15676     0EE1  082D               	movf	??_getMagneticChannel+1,w
 15677     0EE2  00F2               	movwf	bitRead@reg+1
 15678     0EE3  3006               	movlw	6
 15679     0EE4  00F3               	movwf	bitRead@position
 15680     0EE5  319F  2716  318E   	fcall	_bitRead
 15681     0EE8  0140               	movlb	0	; select bank0
 15682     0EE9  00B1               	movwf	getMagneticChannel@magMode6
 15683     0EEA                     l14845:
 15684                           
 15685                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1626:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15686     0EEA  082E               	movf	getMagneticChannel@magChannel,w
 15687     0EEB  00AC               	movwf	??_getMagneticChannel
 15688     0EEC  01AD               	clrf	??_getMagneticChannel+1
 15689     0EED  082C               	movf	??_getMagneticChannel,w
 15690     0EEE  00F1               	movwf	bitRead@reg
 15691     0EEF  082D               	movf	??_getMagneticChannel+1,w
 15692     0EF0  00F2               	movwf	bitRead@reg+1
 15693     0EF1  3007               	movlw	7
 15694     0EF2  00F3               	movwf	bitRead@position
 15695     0EF3  319F  2716  318E   	fcall	_bitRead
 15696     0EF6  0140               	movlb	0	; select bank0
 15697     0EF7  00B2               	movwf	getMagneticChannel@magMode7
 15698     0EF8                     l14847:
 15699                           
 15700                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15701     0EF8  082F               	movf	getMagneticChannel@magMode4,w
 15702     0EF9  1D03               	btfss	3,2
 15703     0EFA  2EFC               	goto	u13491
 15704     0EFB  2EFD               	goto	u13490
 15705     0EFC                     u13491:
 15706     0EFC  2F0E               	goto	l14861
 15707     0EFD                     u13490:
 15708     0EFD                     l14849:
 15709     0EFD  0830               	movf	getMagneticChannel@magMode5,w
 15710     0EFE  1D03               	btfss	3,2
 15711     0EFF  2F01               	goto	u13501
 15712     0F00  2F02               	goto	u13500
 15713     0F01                     u13501:
 15714     0F01  2F0E               	goto	l14861
 15715     0F02                     u13500:
 15716     0F02                     l14851:
 15717     0F02  0831               	movf	getMagneticChannel@magMode6,w
 15718     0F03  1D03               	btfss	3,2
 15719     0F04  2F06               	goto	u13511
 15720     0F05  2F07               	goto	u13510
 15721     0F06                     u13511:
 15722     0F06  2F0E               	goto	l14861
 15723     0F07                     u13510:
 15724     0F07                     l14853:
 15725     0F07  0832               	movf	getMagneticChannel@magMode7,w
 15726     0F08  1D03               	btfss	3,2
 15727     0F09  2F0B               	goto	u13521
 15728     0F0A  2F0C               	goto	u13520
 15729     0F0B                     u13521:
 15730     0F0B  2F0E               	goto	l14861
 15731     0F0C                     u13520:
 15732     0F0C                     l14855:
 15733                           
 15734                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1629:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:         return 0;
 15735     0F0C  3000               	movlw	0
 15736     0F0D  2FFF               	goto	l2456
 15737     0F0E                     l14861:
 15738     0F0E  032F               	decf	getMagneticChannel@magMode4,w
 15739     0F0F  1D03               	btfss	3,2
 15740     0F10  2F12               	goto	u13531
 15741     0F11  2F13               	goto	u13530
 15742     0F12                     u13531:
 15743     0F12  2F24               	goto	l14875
 15744     0F13                     u13530:
 15745     0F13                     l14863:
 15746     0F13  0830               	movf	getMagneticChannel@magMode5,w
 15747     0F14  1D03               	btfss	3,2
 15748     0F15  2F17               	goto	u13541
 15749     0F16  2F18               	goto	u13540
 15750     0F17                     u13541:
 15751     0F17  2F24               	goto	l14875
 15752     0F18                     u13540:
 15753     0F18                     l14865:
 15754     0F18  0831               	movf	getMagneticChannel@magMode6,w
 15755     0F19  1D03               	btfss	3,2
 15756     0F1A  2F1C               	goto	u13551
 15757     0F1B  2F1D               	goto	u13550
 15758     0F1C                     u13551:
 15759     0F1C  2F24               	goto	l14875
 15760     0F1D                     u13550:
 15761     0F1D                     l14867:
 15762     0F1D  0832               	movf	getMagneticChannel@magMode7,w
 15763     0F1E  1D03               	btfss	3,2
 15764     0F1F  2F21               	goto	u13561
 15765     0F20  2F22               	goto	u13560
 15766     0F21                     u13561:
 15767     0F21  2F24               	goto	l14875
 15768     0F22                     u13560:
 15769     0F22                     l14869:
 15770                           
 15771                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:         return 1;
 15772     0F22  3001               	movlw	1
 15773     0F23  2FFF               	goto	l2456
 15774     0F24                     l14875:
 15775     0F24  082F               	movf	getMagneticChannel@magMode4,w
 15776     0F25  1D03               	btfss	3,2
 15777     0F26  2F28               	goto	u13571
 15778     0F27  2F29               	goto	u13570
 15779     0F28                     u13571:
 15780     0F28  2F3A               	goto	l14889
 15781     0F29                     u13570:
 15782     0F29                     l14877:
 15783     0F29  0330               	decf	getMagneticChannel@magMode5,w
 15784     0F2A  1D03               	btfss	3,2
 15785     0F2B  2F2D               	goto	u13581
 15786     0F2C  2F2E               	goto	u13580
 15787     0F2D                     u13581:
 15788     0F2D  2F3A               	goto	l14889
 15789     0F2E                     u13580:
 15790     0F2E                     l14879:
 15791     0F2E  0831               	movf	getMagneticChannel@magMode6,w
 15792     0F2F  1D03               	btfss	3,2
 15793     0F30  2F32               	goto	u13591
 15794     0F31  2F33               	goto	u13590
 15795     0F32                     u13591:
 15796     0F32  2F3A               	goto	l14889
 15797     0F33                     u13590:
 15798     0F33                     l14881:
 15799     0F33  0832               	movf	getMagneticChannel@magMode7,w
 15800     0F34  1D03               	btfss	3,2
 15801     0F35  2F37               	goto	u13601
 15802     0F36  2F38               	goto	u13600
 15803     0F37                     u13601:
 15804     0F37  2F3A               	goto	l14889
 15805     0F38                     u13600:
 15806     0F38                     l14883:
 15807                           
 15808                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:         return 2;
 15809     0F38  3002               	movlw	2
 15810     0F39  2FFF               	goto	l2456
 15811     0F3A                     l14889:
 15812     0F3A  032F               	decf	getMagneticChannel@magMode4,w
 15813     0F3B  1D03               	btfss	3,2
 15814     0F3C  2F3E               	goto	u13611
 15815     0F3D  2F3F               	goto	u13610
 15816     0F3E                     u13611:
 15817     0F3E  2F50               	goto	l14903
 15818     0F3F                     u13610:
 15819     0F3F                     l14891:
 15820     0F3F  0330               	decf	getMagneticChannel@magMode5,w
 15821     0F40  1D03               	btfss	3,2
 15822     0F41  2F43               	goto	u13621
 15823     0F42  2F44               	goto	u13620
 15824     0F43                     u13621:
 15825     0F43  2F50               	goto	l14903
 15826     0F44                     u13620:
 15827     0F44                     l14893:
 15828     0F44  0831               	movf	getMagneticChannel@magMode6,w
 15829     0F45  1D03               	btfss	3,2
 15830     0F46  2F48               	goto	u13631
 15831     0F47  2F49               	goto	u13630
 15832     0F48                     u13631:
 15833     0F48  2F50               	goto	l14903
 15834     0F49                     u13630:
 15835     0F49                     l14895:
 15836     0F49  0832               	movf	getMagneticChannel@magMode7,w
 15837     0F4A  1D03               	btfss	3,2
 15838     0F4B  2F4D               	goto	u13641
 15839     0F4C  2F4E               	goto	u13640
 15840     0F4D                     u13641:
 15841     0F4D  2F50               	goto	l14903
 15842     0F4E                     u13640:
 15843     0F4E                     l14897:
 15844                           
 15845                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1638:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:         return 3;
 15846     0F4E  3003               	movlw	3
 15847     0F4F  2FFF               	goto	l2456
 15848     0F50                     l14903:
 15849     0F50  082F               	movf	getMagneticChannel@magMode4,w
 15850     0F51  1D03               	btfss	3,2
 15851     0F52  2F54               	goto	u13651
 15852     0F53  2F55               	goto	u13650
 15853     0F54                     u13651:
 15854     0F54  2F66               	goto	l14917
 15855     0F55                     u13650:
 15856     0F55                     l14905:
 15857     0F55  0830               	movf	getMagneticChannel@magMode5,w
 15858     0F56  1D03               	btfss	3,2
 15859     0F57  2F59               	goto	u13661
 15860     0F58  2F5A               	goto	u13660
 15861     0F59                     u13661:
 15862     0F59  2F66               	goto	l14917
 15863     0F5A                     u13660:
 15864     0F5A                     l14907:
 15865     0F5A  0331               	decf	getMagneticChannel@magMode6,w
 15866     0F5B  1D03               	btfss	3,2
 15867     0F5C  2F5E               	goto	u13671
 15868     0F5D  2F5F               	goto	u13670
 15869     0F5E                     u13671:
 15870     0F5E  2F66               	goto	l14917
 15871     0F5F                     u13670:
 15872     0F5F                     l14909:
 15873     0F5F  0832               	movf	getMagneticChannel@magMode7,w
 15874     0F60  1D03               	btfss	3,2
 15875     0F61  2F63               	goto	u13681
 15876     0F62  2F64               	goto	u13680
 15877     0F63                     u13681:
 15878     0F63  2F66               	goto	l14917
 15879     0F64                     u13680:
 15880     0F64                     l14911:
 15881                           
 15882                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1641:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:         return 4;
 15883     0F64  3004               	movlw	4
 15884     0F65  2FFF               	goto	l2456
 15885     0F66                     l14917:
 15886     0F66  032F               	decf	getMagneticChannel@magMode4,w
 15887     0F67  1D03               	btfss	3,2
 15888     0F68  2F6A               	goto	u13691
 15889     0F69  2F6B               	goto	u13690
 15890     0F6A                     u13691:
 15891     0F6A  2F7C               	goto	l14931
 15892     0F6B                     u13690:
 15893     0F6B                     l14919:
 15894     0F6B  0830               	movf	getMagneticChannel@magMode5,w
 15895     0F6C  1D03               	btfss	3,2
 15896     0F6D  2F6F               	goto	u13701
 15897     0F6E  2F70               	goto	u13700
 15898     0F6F                     u13701:
 15899     0F6F  2F7C               	goto	l14931
 15900     0F70                     u13700:
 15901     0F70                     l14921:
 15902     0F70  0331               	decf	getMagneticChannel@magMode6,w
 15903     0F71  1D03               	btfss	3,2
 15904     0F72  2F74               	goto	u13711
 15905     0F73  2F75               	goto	u13710
 15906     0F74                     u13711:
 15907     0F74  2F7C               	goto	l14931
 15908     0F75                     u13710:
 15909     0F75                     l14923:
 15910     0F75  0832               	movf	getMagneticChannel@magMode7,w
 15911     0F76  1D03               	btfss	3,2
 15912     0F77  2F79               	goto	u13721
 15913     0F78  2F7A               	goto	u13720
 15914     0F79                     u13721:
 15915     0F79  2F7C               	goto	l14931
 15916     0F7A                     u13720:
 15917     0F7A                     l14925:
 15918                           
 15919                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1644:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:         return 5;
 15920     0F7A  3005               	movlw	5
 15921     0F7B  2FFF               	goto	l2456
 15922     0F7C                     l14931:
 15923     0F7C  082F               	movf	getMagneticChannel@magMode4,w
 15924     0F7D  1D03               	btfss	3,2
 15925     0F7E  2F80               	goto	u13731
 15926     0F7F  2F81               	goto	u13730
 15927     0F80                     u13731:
 15928     0F80  2F92               	goto	l14945
 15929     0F81                     u13730:
 15930     0F81                     l14933:
 15931     0F81  0330               	decf	getMagneticChannel@magMode5,w
 15932     0F82  1D03               	btfss	3,2
 15933     0F83  2F85               	goto	u13741
 15934     0F84  2F86               	goto	u13740
 15935     0F85                     u13741:
 15936     0F85  2F92               	goto	l14945
 15937     0F86                     u13740:
 15938     0F86                     l14935:
 15939     0F86  0331               	decf	getMagneticChannel@magMode6,w
 15940     0F87  1D03               	btfss	3,2
 15941     0F88  2F8A               	goto	u13751
 15942     0F89  2F8B               	goto	u13750
 15943     0F8A                     u13751:
 15944     0F8A  2F92               	goto	l14945
 15945     0F8B                     u13750:
 15946     0F8B                     l14937:
 15947     0F8B  0832               	movf	getMagneticChannel@magMode7,w
 15948     0F8C  1D03               	btfss	3,2
 15949     0F8D  2F8F               	goto	u13761
 15950     0F8E  2F90               	goto	u13760
 15951     0F8F                     u13761:
 15952     0F8F  2F92               	goto	l14945
 15953     0F90                     u13760:
 15954     0F90                     l14939:
 15955                           
 15956                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1647:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:         return 6;
 15957     0F90  3006               	movlw	6
 15958     0F91  2FFF               	goto	l2456
 15959     0F92                     l14945:
 15960     0F92  032F               	decf	getMagneticChannel@magMode4,w
 15961     0F93  1D03               	btfss	3,2
 15962     0F94  2F96               	goto	u13771
 15963     0F95  2F97               	goto	u13770
 15964     0F96                     u13771:
 15965     0F96  2FA8               	goto	l14959
 15966     0F97                     u13770:
 15967     0F97                     l14947:
 15968     0F97  0330               	decf	getMagneticChannel@magMode5,w
 15969     0F98  1D03               	btfss	3,2
 15970     0F99  2F9B               	goto	u13781
 15971     0F9A  2F9C               	goto	u13780
 15972     0F9B                     u13781:
 15973     0F9B  2FA8               	goto	l14959
 15974     0F9C                     u13780:
 15975     0F9C                     l14949:
 15976     0F9C  0331               	decf	getMagneticChannel@magMode6,w
 15977     0F9D  1D03               	btfss	3,2
 15978     0F9E  2FA0               	goto	u13791
 15979     0F9F  2FA1               	goto	u13790
 15980     0FA0                     u13791:
 15981     0FA0  2FA8               	goto	l14959
 15982     0FA1                     u13790:
 15983     0FA1                     l14951:
 15984     0FA1  0832               	movf	getMagneticChannel@magMode7,w
 15985     0FA2  1D03               	btfss	3,2
 15986     0FA3  2FA5               	goto	u13801
 15987     0FA4  2FA6               	goto	u13800
 15988     0FA5                     u13801:
 15989     0FA5  2FA8               	goto	l14959
 15990     0FA6                     u13800:
 15991     0FA6                     l14953:
 15992                           
 15993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1650:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:         return 7;
 15994     0FA6  3007               	movlw	7
 15995     0FA7  2FFF               	goto	l2456
 15996     0FA8                     l14959:
 15997     0FA8  082F               	movf	getMagneticChannel@magMode4,w
 15998     0FA9  1D03               	btfss	3,2
 15999     0FAA  2FAC               	goto	u13811
 16000     0FAB  2FAD               	goto	u13810
 16001     0FAC                     u13811:
 16002     0FAC  2FBE               	goto	l14973
 16003     0FAD                     u13810:
 16004     0FAD                     l14961:
 16005     0FAD  0830               	movf	getMagneticChannel@magMode5,w
 16006     0FAE  1D03               	btfss	3,2
 16007     0FAF  2FB1               	goto	u13821
 16008     0FB0  2FB2               	goto	u13820
 16009     0FB1                     u13821:
 16010     0FB1  2FBE               	goto	l14973
 16011     0FB2                     u13820:
 16012     0FB2                     l14963:
 16013     0FB2  0831               	movf	getMagneticChannel@magMode6,w
 16014     0FB3  1D03               	btfss	3,2
 16015     0FB4  2FB6               	goto	u13831
 16016     0FB5  2FB7               	goto	u13830
 16017     0FB6                     u13831:
 16018     0FB6  2FBE               	goto	l14973
 16019     0FB7                     u13830:
 16020     0FB7                     l14965:
 16021     0FB7  0332               	decf	getMagneticChannel@magMode7,w
 16022     0FB8  1D03               	btfss	3,2
 16023     0FB9  2FBB               	goto	u13841
 16024     0FBA  2FBC               	goto	u13840
 16025     0FBB                     u13841:
 16026     0FBB  2FBE               	goto	l14973
 16027     0FBC                     u13840:
 16028     0FBC                     l14967:
 16029                           
 16030                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1653:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:         return 8;
 16031     0FBC  3008               	movlw	8
 16032     0FBD  2FFF               	goto	l2456
 16033     0FBE                     l14973:
 16034     0FBE  032F               	decf	getMagneticChannel@magMode4,w
 16035     0FBF  1D03               	btfss	3,2
 16036     0FC0  2FC2               	goto	u13851
 16037     0FC1  2FC3               	goto	u13850
 16038     0FC2                     u13851:
 16039     0FC2  2FD4               	goto	l14987
 16040     0FC3                     u13850:
 16041     0FC3                     l14975:
 16042     0FC3  0830               	movf	getMagneticChannel@magMode5,w
 16043     0FC4  1D03               	btfss	3,2
 16044     0FC5  2FC7               	goto	u13861
 16045     0FC6  2FC8               	goto	u13860
 16046     0FC7                     u13861:
 16047     0FC7  2FD4               	goto	l14987
 16048     0FC8                     u13860:
 16049     0FC8                     l14977:
 16050     0FC8  0831               	movf	getMagneticChannel@magMode6,w
 16051     0FC9  1D03               	btfss	3,2
 16052     0FCA  2FCC               	goto	u13871
 16053     0FCB  2FCD               	goto	u13870
 16054     0FCC                     u13871:
 16055     0FCC  2FD4               	goto	l14987
 16056     0FCD                     u13870:
 16057     0FCD                     l14979:
 16058     0FCD  0332               	decf	getMagneticChannel@magMode7,w
 16059     0FCE  1D03               	btfss	3,2
 16060     0FCF  2FD1               	goto	u13881
 16061     0FD0  2FD2               	goto	u13880
 16062     0FD1                     u13881:
 16063     0FD1  2FD4               	goto	l14987
 16064     0FD2                     u13880:
 16065     0FD2                     l14981:
 16066                           
 16067                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1656:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:         return 9;
 16068     0FD2  3009               	movlw	9
 16069     0FD3  2FFF               	goto	l2456
 16070     0FD4                     l14987:
 16071     0FD4  082F               	movf	getMagneticChannel@magMode4,w
 16072     0FD5  1D03               	btfss	3,2
 16073     0FD6  2FD8               	goto	u13891
 16074     0FD7  2FD9               	goto	u13890
 16075     0FD8                     u13891:
 16076     0FD8  2FEA               	goto	l15001
 16077     0FD9                     u13890:
 16078     0FD9                     l14989:
 16079     0FD9  0330               	decf	getMagneticChannel@magMode5,w
 16080     0FDA  1D03               	btfss	3,2
 16081     0FDB  2FDD               	goto	u13901
 16082     0FDC  2FDE               	goto	u13900
 16083     0FDD                     u13901:
 16084     0FDD  2FEA               	goto	l15001
 16085     0FDE                     u13900:
 16086     0FDE                     l14991:
 16087     0FDE  0831               	movf	getMagneticChannel@magMode6,w
 16088     0FDF  1D03               	btfss	3,2
 16089     0FE0  2FE2               	goto	u13911
 16090     0FE1  2FE3               	goto	u13910
 16091     0FE2                     u13911:
 16092     0FE2  2FEA               	goto	l15001
 16093     0FE3                     u13910:
 16094     0FE3                     l14993:
 16095     0FE3  0332               	decf	getMagneticChannel@magMode7,w
 16096     0FE4  1D03               	btfss	3,2
 16097     0FE5  2FE7               	goto	u13921
 16098     0FE6  2FE8               	goto	u13920
 16099     0FE7                     u13921:
 16100     0FE7  2FEA               	goto	l15001
 16101     0FE8                     u13920:
 16102     0FE8                     l14995:
 16103                           
 16104                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1659:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:         return 10;
 16105     0FE8  300A               	movlw	10
 16106     0FE9  2FFF               	goto	l2456
 16107     0FEA                     l15001:
 16108     0FEA  032F               	decf	getMagneticChannel@magMode4,w
 16109     0FEB  1D03               	btfss	3,2
 16110     0FEC  2FEE               	goto	u13931
 16111     0FED  2FEF               	goto	u13930
 16112     0FEE                     u13931:
 16113     0FEE  2F0C               	goto	l14855
 16114     0FEF                     u13930:
 16115     0FEF                     l15003:
 16116     0FEF  0330               	decf	getMagneticChannel@magMode5,w
 16117     0FF0  1D03               	btfss	3,2
 16118     0FF1  2FF3               	goto	u13941
 16119     0FF2  2FF4               	goto	u13940
 16120     0FF3                     u13941:
 16121     0FF3  2F0C               	goto	l14855
 16122     0FF4                     u13940:
 16123     0FF4                     l15005:
 16124     0FF4  0831               	movf	getMagneticChannel@magMode6,w
 16125     0FF5  1D03               	btfss	3,2
 16126     0FF6  2FF8               	goto	u13951
 16127     0FF7  2FF9               	goto	u13950
 16128     0FF8                     u13951:
 16129     0FF8  2F0C               	goto	l14855
 16130     0FF9                     u13950:
 16131     0FF9                     l15007:
 16132     0FF9  0332               	decf	getMagneticChannel@magMode7,w
 16133     0FFA  1D03               	btfss	3,2
 16134     0FFB  2FFD               	goto	u13961
 16135     0FFC  2FFE               	goto	u13960
 16136     0FFD                     u13961:
 16137     0FFD  2F0C               	goto	l14855
 16138     0FFE                     u13960:
 16139     0FFE                     l15009:
 16140                           
 16141                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1662:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:         return 11;
 16142     0FFE  300B               	movlw	11
 16143     0FFF                     l2456:
 16144     0FFF  0008               	return
 16145     1000                     __end_of_getMagneticChannel:
 16146                           
 16147                           	psect	text17
 16148     1CE3                     __ptext17:	
 16149 ;; *************** function _getLowPower *****************
 16150 ;; Defined at:
 16151 ;;		line 1524 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;		None
 16154 ;; Auto vars:     Size  Location     Type
 16155 ;;  lowPowerMode    1   15[BANK0 ] unsigned char 
 16156 ;;  lowPowerMode    1   14[BANK0 ] unsigned char 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      unsigned char 
 16159 ;; Registers used:
 16160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16170 ;;Total ram usage:        4 bytes
 16171 ;; Hardware stack levels used: 1
 16172 ;; Hardware stack levels required when called: 14
 16173 ;; This function calls:
 16174 ;;		_bitRead
 16175 ;;		_readRegister
 16176 ;; This function is called by:
 16177 ;;		_begin
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181     1CE3                     _getLowPower:	
 16182                           ;psect for function _getLowPower
 16183                           
 16184     1CE3                     l14775:	
 16185                           ;incstack = 0
 16186                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16187                           
 16188     1CE3                     l14777:
 16189                           
 16190                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1526:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16191     1CE3  3001               	movlw	1
 16192     1CE4  319A  22FC  319C   	fcall	_readRegister
 16193     1CE7  0140               	movlb	0	; select bank0
 16194     1CE8  00AF               	movwf	getLowPower@lowPowerMode
 16195     1CE9                     l14779:
 16196                           
 16197                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1528:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16198     1CE9  082F               	movf	getLowPower@lowPowerMode,w
 16199     1CEA  00AC               	movwf	??_getLowPower
 16200     1CEB  01AD               	clrf	??_getLowPower+1
 16201     1CEC  082C               	movf	??_getLowPower,w
 16202     1CED  00F1               	movwf	bitRead@reg
 16203     1CEE  082D               	movf	??_getLowPower+1,w
 16204     1CEF  00F2               	movwf	bitRead@reg+1
 16205     1CF0  3004               	movlw	4
 16206     1CF1  00F3               	movwf	bitRead@position
 16207     1CF2  319F  2716  319C   	fcall	_bitRead
 16208     1CF5  0140               	movlb	0	; select bank0
 16209     1CF6  00AE               	movwf	getLowPower@lowPowerModeBit
 16210     1CF7                     l14781:
 16211                           
 16212                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1530:     return lowPo
      +                          werModeBit;
 16213     1CF7  082E               	movf	getLowPower@lowPowerModeBit,w
 16214     1CF8                     l2436:
 16215     1CF8  0008               	return
 16216     1CF9                     __end_of_getLowPower:
 16217                           
 16218                           	psect	text18
 16219     087E                     __ptext18:	
 16220 ;; *************** function _getAngleEn *****************
 16221 ;; Defined at:
 16222 ;;		line 1880 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;		None
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  angleDir3       1   16[BANK0 ] unsigned char 
 16227 ;;  angleDir2       1   15[BANK0 ] unsigned char 
 16228 ;;  angleReg        1   14[BANK0 ] unsigned char 
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      unsigned char 
 16231 ;; Registers used:
 16232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16242 ;;Total ram usage:        5 bytes
 16243 ;; Hardware stack levels used: 1
 16244 ;; Hardware stack levels required when called: 14
 16245 ;; This function calls:
 16246 ;;		_bitRead
 16247 ;;		_readRegister
 16248 ;; This function is called by:
 16249 ;;		_begin
 16250 ;;		_setMagneticOffset2
 16251 ;;		_getMagneticOffset2
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255     087E                     _getAngleEn:	
 16256                           ;psect for function _getAngleEn
 16257                           
 16258     087E                     l15029:	
 16259                           ;incstack = 0
 16260                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16261                           
 16262     087E                     l15031:
 16263                           
 16264                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1882:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16265     087E  3003               	movlw	3
 16266     087F  319A  22FC  3188   	fcall	_readRegister
 16267     0882  0140               	movlb	0	; select bank0
 16268     0883  00AE               	movwf	getAngleEn@angleReg
 16269     0884                     l15033:
 16270                           
 16271                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1884:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16272     0884  082E               	movf	getAngleEn@angleReg,w
 16273     0885  00AC               	movwf	??_getAngleEn
 16274     0886  01AD               	clrf	??_getAngleEn+1
 16275     0887  082C               	movf	??_getAngleEn,w
 16276     0888  00F1               	movwf	bitRead@reg
 16277     0889  082D               	movf	??_getAngleEn+1,w
 16278     088A  00F2               	movwf	bitRead@reg+1
 16279     088B  3002               	movlw	2
 16280     088C  00F3               	movwf	bitRead@position
 16281     088D  319F  2716  3188   	fcall	_bitRead
 16282     0890  0140               	movlb	0	; select bank0
 16283     0891  00AF               	movwf	getAngleEn@angleDir2
 16284     0892                     l15035:
 16285                           
 16286                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1885:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16287     0892  082E               	movf	getAngleEn@angleReg,w
 16288     0893  00AC               	movwf	??_getAngleEn
 16289     0894  01AD               	clrf	??_getAngleEn+1
 16290     0895  082C               	movf	??_getAngleEn,w
 16291     0896  00F1               	movwf	bitRead@reg
 16292     0897  082D               	movf	??_getAngleEn+1,w
 16293     0898  00F2               	movwf	bitRead@reg+1
 16294     0899  3003               	movlw	3
 16295     089A  00F3               	movwf	bitRead@position
 16296     089B  319F  2716  3188   	fcall	_bitRead
 16297     089E  0140               	movlb	0	; select bank0
 16298     089F  00B0               	movwf	getAngleEn@angleDir3
 16299     08A0                     l15037:
 16300                           
 16301                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1887:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16302     08A0  082F               	movf	getAngleEn@angleDir2,w
 16303     08A1  1D03               	btfss	3,2
 16304     08A2  28A4               	goto	u13971
 16305     08A3  28A5               	goto	u13970
 16306     08A4                     u13971:
 16307     08A4  28AC               	goto	l15047
 16308     08A5                     u13970:
 16309     08A5                     l15039:
 16310     08A5  0830               	movf	getAngleEn@angleDir3,w
 16311     08A6  1D03               	btfss	3,2
 16312     08A7  28A9               	goto	u13981
 16313     08A8  28AA               	goto	u13980
 16314     08A9                     u13981:
 16315     08A9  28AC               	goto	l15047
 16316     08AA                     u13980:
 16317     08AA                     l15041:
 16318                           
 16319                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1888:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1890:         return 0;
 16320     08AA  3000               	movlw	0
 16321     08AB  28D1               	goto	l2541
 16322     08AC                     l15047:
 16323     08AC  032F               	decf	getAngleEn@angleDir2,w
 16324     08AD  1D03               	btfss	3,2
 16325     08AE  28B0               	goto	u13991
 16326     08AF  28B1               	goto	u13990
 16327     08B0                     u13991:
 16328     08B0  28B8               	goto	l15057
 16329     08B1                     u13990:
 16330     08B1                     l15049:
 16331     08B1  0830               	movf	getAngleEn@angleDir3,w
 16332     08B2  1D03               	btfss	3,2
 16333     08B3  28B5               	goto	u14001
 16334     08B4  28B6               	goto	u14000
 16335     08B5                     u14001:
 16336     08B5  28B8               	goto	l15057
 16337     08B6                     u14000:
 16338     08B6                     l15051:
 16339                           
 16340                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:         return 1;
 16341     08B6  3001               	movlw	1
 16342     08B7  28D1               	goto	l2541
 16343     08B8                     l15057:
 16344     08B8  082F               	movf	getAngleEn@angleDir2,w
 16345     08B9  1D03               	btfss	3,2
 16346     08BA  28BC               	goto	u14011
 16347     08BB  28BD               	goto	u14010
 16348     08BC                     u14011:
 16349     08BC  28C4               	goto	l15067
 16350     08BD                     u14010:
 16351     08BD                     l15059:
 16352     08BD  0330               	decf	getAngleEn@angleDir3,w
 16353     08BE  1D03               	btfss	3,2
 16354     08BF  28C1               	goto	u14021
 16355     08C0  28C2               	goto	u14020
 16356     08C1                     u14021:
 16357     08C1  28C4               	goto	l15067
 16358     08C2                     u14020:
 16359     08C2                     l15061:
 16360                           
 16361                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1896:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1898:         return 2;
 16362     08C2  3002               	movlw	2
 16363     08C3  28D1               	goto	l2541
 16364     08C4                     l15067:
 16365     08C4  032F               	decf	getAngleEn@angleDir2,w
 16366     08C5  1D03               	btfss	3,2
 16367     08C6  28C8               	goto	u14031
 16368     08C7  28C9               	goto	u14030
 16369     08C8                     u14031:
 16370     08C8  28D0               	goto	l2544
 16371     08C9                     u14030:
 16372     08C9                     l15069:
 16373     08C9  0330               	decf	getAngleEn@angleDir3,w
 16374     08CA  1D03               	btfss	3,2
 16375     08CB  28CD               	goto	u14041
 16376     08CC  28CE               	goto	u14040
 16377     08CD                     u14041:
 16378     08CD  28D0               	goto	l2544
 16379     08CE                     u14040:
 16380     08CE                     l15071:
 16381                           
 16382                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1900:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1902:         return 3;
 16383     08CE  3003               	movlw	3
 16384     08CF  28D1               	goto	l2541
 16385     08D0                     l2544:
 16386     08D0  28AA               	goto	l15041
 16387     08D1                     l2541:
 16388     08D1  0008               	return
 16389     08D2                     __end_of_getAngleEn:
 16390                           
 16391                           	psect	text19
 16392     1F16                     __ptext19:	
 16393 ;; *************** function _bitRead *****************
 16394 ;; Defined at:
 16395 ;;		line 2500 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16396 ;; Parameters:    Size  Location     Type
 16397 ;;  reg             2    1[COMMON] unsigned short 
 16398 ;;  position        1    3[COMMON] unsigned char 
 16399 ;; Auto vars:     Size  Location     Type
 16400 ;;		None
 16401 ;; Return value:  Size  Location     Type
 16402 ;;                  1    wreg      unsigned char 
 16403 ;; Registers used:
 16404 ;;		wreg, status,2, status,0
 16405 ;; Tracked objects:
 16406 ;;		On entry : 0/0
 16407 ;;		On exit  : 0/0
 16408 ;;		Unchanged: 0/0
 16409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16410 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16412 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16413 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16414 ;;Total ram usage:        9 bytes
 16415 ;; Hardware stack levels used: 1
 16416 ;; Hardware stack levels required when called: 4
 16417 ;; This function calls:
 16418 ;;		Nothing
 16419 ;; This function is called by:
 16420 ;;		_getLowPower
 16421 ;;		_getOperatingMode
 16422 ;;		_getMagneticChannel
 16423 ;;		_getAngleEn
 16424 ;;		_getTemperatureEN
 16425 ;;		_getError
 16426 ;;		_getCRCMode
 16427 ;;		_getMagTemp
 16428 ;;		_getConvAvg
 16429 ;;		_getReadMode
 16430 ;;		_getIntThreshold
 16431 ;;		_getGlitchFiler
 16432 ;;		_getTriggerMode
 16433 ;;		_getSleeptime
 16434 ;;		_getMagDir
 16435 ;;		_getMagnitudeChannelSelect
 16436 ;;		_getXYAxisRange
 16437 ;;		_getZAxisRange
 16438 ;;		_getInterruptResult
 16439 ;;		_getThresholdEn
 16440 ;;		_getIntPinState
 16441 ;;		_getInterruptMode
 16442 ;;		_getMaskInt
 16443 ;;		_getPOR
 16444 ;;		_getDiagStatus
 16445 ;;		_getResultStatus
 16446 ;;		_getDeviceID
 16447 ;;		_getInterruptPinStatus
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451     1F16                     _bitRead:	
 16452                           ;psect for function _bitRead
 16453                           
 16454     1F16                     l9207:	
 16455                           ;incstack = 0
 16456                           ; Regs used in _bitRead: [wreg+status,2+status,0]
 16457                           
 16458                           
 16459                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2501:     if (reg & (1
      +                           << position) == 0) {
 16460     1F16  3001               	movlw	1
 16461     1F17  00F4               	movwf	??_bitRead
 16462     1F18  3000               	movlw	0
 16463     1F19  00F5               	movwf	??_bitRead+1
 16464     1F1A  0A73               	incf	bitRead@position,w
 16465     1F1B  2F1E               	goto	u6484
 16466     1F1C                     u6485:
 16467     1F1C  35F4               	lslf	??_bitRead,f
 16468     1F1D  0DF5               	rlf	??_bitRead+1,f
 16469     1F1E                     u6484:
 16470     1F1E  0B89               	decfsz	9,f
 16471     1F1F  2F1C               	goto	u6485
 16472     1F20  0874               	movf	??_bitRead,w
 16473     1F21  0475               	iorwf	??_bitRead+1,w
 16474     1F22  1903               	btfsc	3,2
 16475     1F23  2F25               	goto	u6491
 16476     1F24  2F27               	goto	u6490
 16477     1F25                     u6491:
 16478     1F25  3001               	movlw	1
 16479     1F26  2F28               	goto	u6500
 16480     1F27                     u6490:
 16481     1F27  3000               	movlw	0
 16482     1F28                     u6500:
 16483     1F28  00F6               	movwf	??_bitRead+2
 16484     1F29  01F7               	clrf	??_bitRead+3
 16485     1F2A  0871               	movf	bitRead@reg,w
 16486     1F2B  0576               	andwf	??_bitRead+2,w
 16487     1F2C  00F8               	movwf	??_bitRead+4
 16488     1F2D  0872               	movf	bitRead@reg+1,w
 16489     1F2E  0577               	andwf	??_bitRead+3,w
 16490     1F2F  00F9               	movwf	??_bitRead+5
 16491     1F30  0878               	movf	??_bitRead+4,w
 16492     1F31  0479               	iorwf	??_bitRead+5,w
 16493     1F32  1903               	btfsc	3,2
 16494     1F33  2F35               	goto	u6511
 16495     1F34  2F36               	goto	u6510
 16496     1F35                     u6511:
 16497     1F35  2F38               	goto	l9213
 16498     1F36                     u6510:
 16499     1F36                     l9209:
 16500                           
 16501                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2502:         return 0
      +                          x0;
 16502     1F36  3000               	movlw	0
 16503     1F37  2F39               	goto	l2666
 16504     1F38                     l9213:
 16505                           
 16506                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2504:     return 0x01;
 16507     1F38  3001               	movlw	1
 16508     1F39                     l2666:
 16509     1F39  0008               	return
 16510     1F3A                     __end_of_bitRead:
 16511                           
 16512                           	psect	text20
 16513     19D7                     __ptext20:	
 16514 ;; *************** function _TMR0_HasOverflowOccured *****************
 16515 ;; Defined at:
 16516 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;		None
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      _Bool 
 16523 ;; Registers used:
 16524 ;;		wreg, status,2, status,0
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16534 ;;Total ram usage:        0 bytes
 16535 ;; Hardware stack levels used: 1
 16536 ;; Hardware stack levels required when called: 4
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_main
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544     19D7                     _TMR0_HasOverflowOccured:	
 16545                           ;psect for function _TMR0_HasOverflowOccured
 16546                           
 16547     19D7                     l11041:	
 16548                           ;incstack = 0
 16549                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16550                           
 16551                           
 16552                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16553     19D7  014E               	movlb	14	; select bank14
 16554     19D8  0E0C               	swapf	12,w	;volatile
 16555     19D9  0C89               	rrf	9,f
 16556     19DA  3901               	andlw	1
 16557     19DB                     l1492:
 16558     19DB  0008               	return
 16559     19DC                     __end_of_TMR0_HasOverflowOccured:
 16560                           
 16561                           	psect	text21
 16562     1CCD                     __ptext21:	
 16563 ;; *************** function _SYSTEM_Initialize *****************
 16564 ;; Defined at:
 16565 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16566 ;; Parameters:    Size  Location     Type
 16567 ;;		None
 16568 ;; Auto vars:     Size  Location     Type
 16569 ;;		None
 16570 ;; Return value:  Size  Location     Type
 16571 ;;                  1    wreg      void 
 16572 ;; Registers used:
 16573 ;;		wreg, status,2, status,0, pclath, cstack
 16574 ;; Tracked objects:
 16575 ;;		On entry : 0/0
 16576 ;;		On exit  : 0/0
 16577 ;;		Unchanged: 0/0
 16578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16583 ;;Total ram usage:        0 bytes
 16584 ;; Hardware stack levels used: 1
 16585 ;; Hardware stack levels required when called: 6
 16586 ;; This function calls:
 16587 ;;		_EUSART1_Initialize
 16588 ;;		_EUSART2_Initialize
 16589 ;;		_I2C1_Initialize
 16590 ;;		_OSCILLATOR_Initialize
 16591 ;;		_PIN_MANAGER_Initialize
 16592 ;;		_PMD_Initialize
 16593 ;;		_TMR0_Initialize
 16594 ;; This function is called by:
 16595 ;;		_main
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599     1CCD                     _SYSTEM_Initialize:	
 16600                           ;psect for function _SYSTEM_Initialize
 16601                           
 16602     1CCD                     l11027:	
 16603                           ;incstack = 0
 16604                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16605                           
 16606                           
 16607                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16608     1CCD  319A  22BB  319C   	fcall	_PMD_Initialize
 16609     1CD0                     l11029:
 16610                           
 16611                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16612     1CD0  319A  228A  319C   	fcall	_I2C1_Initialize
 16613     1CD3                     l11031:
 16614                           
 16615                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16616     1CD3  3195  258D  319C   	fcall	_PIN_MANAGER_Initialize
 16617     1CD6                     l11033:
 16618                           
 16619                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16620     1CD6  319A  22B1  319C   	fcall	_OSCILLATOR_Initialize
 16621     1CD9                     l11035:
 16622                           
 16623                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16624     1CD9  319C  2463  319C   	fcall	_TMR0_Initialize
 16625     1CDC                     l11037:
 16626                           
 16627                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16628     1CDC  3194  2406  319C   	fcall	_EUSART1_Initialize
 16629     1CDF                     l11039:
 16630                           
 16631                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16632     1CDF  3194  2444  319C   	fcall	_EUSART2_Initialize
 16633     1CE2                     l1352:
 16634     1CE2  0008               	return
 16635     1CE3                     __end_of_SYSTEM_Initialize:
 16636                           
 16637                           	psect	text22
 16638     1C63                     __ptext22:	
 16639 ;; *************** function _TMR0_Initialize *****************
 16640 ;; Defined at:
 16641 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;		None
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;		None
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      void 
 16648 ;; Registers used:
 16649 ;;		wreg
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used: 1
 16661 ;; Hardware stack levels required when called: 4
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_SYSTEM_Initialize
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669     1C63                     _TMR0_Initialize:	
 16670                           ;psect for function _TMR0_Initialize
 16671                           
 16672     1C63                     l10061:	
 16673                           ;incstack = 0
 16674                           ; Regs used in _TMR0_Initialize: [wreg]
 16675                           
 16676                           
 16677                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16678     1C63  3047               	movlw	71
 16679     1C64  014B               	movlb	11	; select bank11
 16680     1C65  009F               	movwf	31	;volatile
 16681                           
 16682                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16683     1C66  300B               	movlw	11
 16684     1C67  009D               	movwf	29	;volatile
 16685                           
 16686                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16687     1C68  30DC               	movlw	220
 16688     1C69  009C               	movwf	28	;volatile
 16689                           
 16690                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16691     1C6A  081D               	movf	29,w	;volatile
 16692     1C6B  0141               	movlb	1	; select bank1
 16693     1C6C  00BE               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
 16694     1C6D  014B               	movlb	11	; select bank11
 16695     1C6E  081C               	movf	28,w	;volatile
 16696     1C6F  0141               	movlb	1	; select bank1
 16697     1C70  00BD               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
 16698     1C71                     l10063:
 16699                           
 16700                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16701     1C71  014E               	movlb	14	; select bank14
 16702     1C72  128C               	bcf	12,5	;volatile
 16703                           
 16704                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16705     1C73  3090               	movlw	144
 16706     1C74  014B               	movlb	11	; select bank11
 16707     1C75  009E               	movwf	30	;volatile
 16708     1C76                     l1474:
 16709     1C76  0008               	return
 16710     1C77                     __end_of_TMR0_Initialize:
 16711                           
 16712                           	psect	text23
 16713     1ABB                     __ptext23:	
 16714 ;; *************** function _PMD_Initialize *****************
 16715 ;; Defined at:
 16716 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16717 ;; Parameters:    Size  Location     Type
 16718 ;;		None
 16719 ;; Auto vars:     Size  Location     Type
 16720 ;;		None
 16721 ;; Return value:  Size  Location     Type
 16722 ;;                  1    wreg      void 
 16723 ;; Registers used:
 16724 ;;		status,2
 16725 ;; Tracked objects:
 16726 ;;		On entry : 0/0
 16727 ;;		On exit  : 0/0
 16728 ;;		Unchanged: 0/0
 16729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;Total ram usage:        0 bytes
 16735 ;; Hardware stack levels used: 1
 16736 ;; Hardware stack levels required when called: 4
 16737 ;; This function calls:
 16738 ;;		Nothing
 16739 ;; This function is called by:
 16740 ;;		_SYSTEM_Initialize
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744     1ABB                     _PMD_Initialize:	
 16745                           ;psect for function _PMD_Initialize
 16746                           
 16747     1ABB                     l9975:	
 16748                           ;incstack = 0
 16749                           ; Regs used in _PMD_Initialize: [status,2]
 16750                           
 16751                           
 16752                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16753     1ABB  014F               	movlb	15	; select bank15
 16754     1ABC  0196               	clrf	22	;volatile
 16755                           
 16756                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16757     1ABD  0197               	clrf	23	;volatile
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16760     1ABE  0198               	clrf	24	;volatile
 16761                           
 16762                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16763     1ABF  0199               	clrf	25	;volatile
 16764                           
 16765                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16766     1AC0  019A               	clrf	26	;volatile
 16767                           
 16768                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16769     1AC1  019B               	clrf	27	;volatile
 16770                           
 16771                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16772     1AC2  019C               	clrf	28	;volatile
 16773                           
 16774                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16775     1AC3  019D               	clrf	29	;volatile
 16776     1AC4                     l1358:
 16777     1AC4  0008               	return
 16778     1AC5                     __end_of_PMD_Initialize:
 16779                           
 16780                           	psect	text24
 16781     158D                     __ptext24:	
 16782 ;; *************** function _PIN_MANAGER_Initialize *****************
 16783 ;; Defined at:
 16784 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;		None
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;		None
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1    wreg      void 
 16791 ;; Registers used:
 16792 ;;		wreg, status,2, status,0, pclath, cstack
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16802 ;;Total ram usage:        0 bytes
 16803 ;; Hardware stack levels used: 1
 16804 ;; Hardware stack levels required when called: 5
 16805 ;; This function calls:
 16806 ;;		_IOCAF6_SetInterruptHandler
 16807 ;; This function is called by:
 16808 ;;		_SYSTEM_Initialize
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812     158D                     _PIN_MANAGER_Initialize:	
 16813                           ;psect for function _PIN_MANAGER_Initialize
 16814                           
 16815     158D                     l9985:	
 16816                           ;incstack = 0
 16817                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16818                           
 16819                           
 16820                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16821     158D  0140               	movlb	0	; select bank0
 16822     158E  019C               	clrf	28	;volatile
 16823     158F                     l9987:
 16824                           
 16825                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16826     158F  3031               	movlw	49
 16827     1590  0098               	movwf	24	;volatile
 16828     1591                     l9989:
 16829                           
 16830                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16831     1591  0199               	clrf	25	;volatile
 16832                           
 16833                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16834     1592  30C1               	movlw	193
 16835     1593  009A               	movwf	26	;volatile
 16836                           
 16837                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16838     1594  3008               	movlw	8
 16839     1595  0096               	movwf	22	;volatile
 16840                           
 16841                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16842     1596  30DE               	movlw	222
 16843     1597  0092               	movwf	18	;volatile
 16844                           
 16845                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16846     1598  30EF               	movlw	239
 16847     1599  0093               	movwf	19	;volatile
 16848                           
 16849                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16850     159A  3025               	movlw	37
 16851     159B  0094               	movwf	20	;volatile
 16852     159C                     l9991:
 16853                           
 16854                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16855     159C  017E               	movlb	62	; select bank62
 16856     159D  01CE               	clrf	78	;volatile
 16857     159E                     l9993:
 16858                           
 16859                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16860     159E  30C9               	movlw	201
 16861     159F  00C3               	movwf	67	;volatile
 16862     15A0                     l9995:
 16863                           
 16864                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16865     15A0  300E               	movlw	14
 16866     15A1  00B8               	movwf	56	;volatile
 16867     15A2                     l9997:
 16868                           
 16869                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16870     15A2  01E5               	clrf	101	;volatile
 16871     15A3                     l9999:
 16872                           
 16873                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16874     15A3  01C4               	clrf	68	;volatile
 16875     15A4                     l10001:
 16876                           
 16877                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16878     15A4  01B9               	clrf	57	;volatile
 16879     15A5                     l10003:
 16880                           
 16881                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16882     15A5  01CF               	clrf	79	;volatile
 16883     15A6                     l10005:
 16884                           
 16885                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16886     15A6  01E6               	clrf	102	;volatile
 16887     15A7                     l10007:
 16888                           
 16889                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16890     15A7  01BA               	clrf	58	;volatile
 16891     15A8                     l10009:
 16892                           
 16893                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16894     15A8  01C5               	clrf	69	;volatile
 16895     15A9                     l10011:
 16896                           
 16897                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16898     15A9  01D0               	clrf	80	;volatile
 16899     15AA                     l10013:
 16900                           
 16901                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16902     15AA  30FF               	movlw	255
 16903     15AB  00BB               	movwf	59	;volatile
 16904     15AC                     l10015:
 16905                           
 16906                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16907     15AC  30FF               	movlw	255
 16908     15AD  00C6               	movwf	70	;volatile
 16909     15AE                     l10017:
 16910                           
 16911                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16912     15AE  30FF               	movlw	255
 16913     15AF  00D1               	movwf	81	;volatile
 16914     15B0                     l10019:
 16915                           
 16916                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16917     15B0  303F               	movlw	63
 16918     15B1  00BC               	movwf	60	;volatile
 16919     15B2                     l10021:
 16920                           
 16921                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16922     15B2  303F               	movlw	63
 16923     15B3  00C7               	movwf	71	;volatile
 16924     15B4                     l10023:
 16925                           
 16926                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16927     15B4  303F               	movlw	63
 16928     15B5  00D2               	movwf	82	;volatile
 16929     15B6                     l10025:
 16930                           
 16931                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16932     15B6  133F               	bcf	63,6	;volatile
 16933     15B7                     l10027:
 16934                           
 16935                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16936     15B7  133E               	bcf	62,6	;volatile
 16937     15B8                     l10029:
 16938                           
 16939                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16940     15B8  173D               	bsf	61,6	;volatile
 16941     15B9                     l10031:
 16942                           
 16943                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16944     15B9  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16945     15BA  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16946     15BB  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16947     15BC  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16948     15BD  319A  2236  3195   	fcall	_IOCAF6_SetInterruptHandler
 16949     15C0                     l10033:
 16950                           
 16951                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16952     15C0  014E               	movlb	14	; select bank14
 16953     15C1  1616               	bsf	22,4	;volatile
 16954     15C2                     l10035:
 16955                           
 16956                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16957     15C2  3009               	movlw	9
 16958     15C3  017D               	movlb	61	; select bank61
 16959     15C4  00C5               	movwf	69	;volatile
 16960     15C5                     l10037:
 16961                           
 16962                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16963     15C5  3013               	movlw	19
 16964     15C6  017E               	movlb	62	; select bank62
 16965     15C7  0099               	movwf	25	;volatile
 16966     15C8                     l10039:
 16967                           
 16968                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16969     15C8  3014               	movlw	20
 16970     15C9  009A               	movwf	26	;volatile
 16971     15CA                     l10041:
 16972                           
 16973                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16974     15CA  3025               	movlw	37
 16975     15CB  00A4               	movwf	36	;volatile
 16976     15CC                     l10043:
 16977                           
 16978                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16979     15CC  300F               	movlw	15
 16980     15CD  009C               	movwf	28	;volatile
 16981     15CE                     l10045:
 16982                           
 16983                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16984     15CE  3015               	movlw	21
 16985     15CF  017D               	movlb	61	; select bank61
 16986     15D0  00CD               	movwf	77	;volatile
 16987     15D1                     l10047:
 16988                           
 16989                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16990     15D1  300A               	movlw	10
 16991     15D2  00C6               	movwf	70	;volatile
 16992     15D3                     l10049:
 16993                           
 16994                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16995     15D3  300D               	movlw	13
 16996     15D4  00CB               	movwf	75	;volatile
 16997     15D5                     l1443:
 16998     15D5  0008               	return
 16999     15D6                     __end_of_PIN_MANAGER_Initialize:
 17000                           
 17001                           	psect	text25
 17002     1A36                     __ptext25:	
 17003 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 17004 ;; Defined at:
 17005 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 17006 ;; Parameters:    Size  Location     Type
 17007 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 17008 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;		None
 17011 ;; Return value:  Size  Location     Type
 17012 ;;                  1    wreg      void 
 17013 ;; Registers used:
 17014 ;;		wreg
 17015 ;; Tracked objects:
 17016 ;;		On entry : 0/0
 17017 ;;		On exit  : 0/0
 17018 ;;		Unchanged: 0/0
 17019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;Total ram usage:        2 bytes
 17025 ;; Hardware stack levels used: 1
 17026 ;; Hardware stack levels required when called: 4
 17027 ;; This function calls:
 17028 ;;		Nothing
 17029 ;; This function is called by:
 17030 ;;		_PIN_MANAGER_Initialize
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034     1A36                     _IOCAF6_SetInterruptHandler:	
 17035                           ;psect for function _IOCAF6_SetInterruptHandler
 17036                           
 17037     1A36                     l9327:	
 17038                           ;incstack = 0
 17039                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17040                           
 17041                           
 17042                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17043     1A36  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17044     1A37  0141               	movlb	1	; select bank1
 17045     1A38  00E7               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17046     1A39  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17047     1A3A  00E6               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17048     1A3B                     l1454:
 17049     1A3B  0008               	return
 17050     1A3C                     __end_of_IOCAF6_SetInterruptHandler:
 17051                           
 17052                           	psect	text26
 17053     1AB1                     __ptext26:	
 17054 ;; *************** function _OSCILLATOR_Initialize *****************
 17055 ;; Defined at:
 17056 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;		None
 17059 ;; Auto vars:     Size  Location     Type
 17060 ;;		None
 17061 ;; Return value:  Size  Location     Type
 17062 ;;                  1    wreg      void 
 17063 ;; Registers used:
 17064 ;;		wreg, status,2
 17065 ;; Tracked objects:
 17066 ;;		On entry : 0/0
 17067 ;;		On exit  : 0/0
 17068 ;;		Unchanged: 0/0
 17069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17074 ;;Total ram usage:        0 bytes
 17075 ;; Hardware stack levels used: 1
 17076 ;; Hardware stack levels required when called: 4
 17077 ;; This function calls:
 17078 ;;		Nothing
 17079 ;; This function is called by:
 17080 ;;		_SYSTEM_Initialize
 17081 ;; This function uses a non-reentrant model
 17082 ;;
 17083                           
 17084     1AB1                     _OSCILLATOR_Initialize:	
 17085                           ;psect for function _OSCILLATOR_Initialize
 17086                           
 17087     1AB1                     l10051:	
 17088                           ;incstack = 0
 17089                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17090                           
 17091                           
 17092                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17093     1AB1  3060               	movlw	96
 17094     1AB2  0151               	movlb	17	; select bank17
 17095     1AB3  008D               	movwf	13	;volatile
 17096     1AB4                     l10053:
 17097                           
 17098                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17099     1AB4  018F               	clrf	15	;volatile
 17100     1AB5                     l10055:
 17101                           
 17102                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17103     1AB5  0191               	clrf	17	;volatile
 17104                           
 17105                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17106     1AB6  3006               	movlw	6
 17107     1AB7  0093               	movwf	19	;volatile
 17108     1AB8                     l10057:
 17109                           
 17110                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17111     1AB8  0190               	clrf	16	;volatile
 17112     1AB9                     l10059:
 17113                           
 17114                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17115     1AB9  0192               	clrf	18	;volatile
 17116     1ABA                     l1355:
 17117     1ABA  0008               	return
 17118     1ABB                     __end_of_OSCILLATOR_Initialize:
 17119                           
 17120                           	psect	text27
 17121     1A8A                     __ptext27:	
 17122 ;; *************** function _I2C1_Initialize *****************
 17123 ;; Defined at:
 17124 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;		None
 17127 ;; Auto vars:     Size  Location     Type
 17128 ;;		None
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  1    wreg      void 
 17131 ;; Registers used:
 17132 ;;		wreg, status,2
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17142 ;;Total ram usage:        0 bytes
 17143 ;; Hardware stack levels used: 1
 17144 ;; Hardware stack levels required when called: 4
 17145 ;; This function calls:
 17146 ;;		Nothing
 17147 ;; This function is called by:
 17148 ;;		_SYSTEM_Initialize
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152     1A8A                     _I2C1_Initialize:	
 17153                           ;psect for function _I2C1_Initialize
 17154                           
 17155     1A8A                     l9977:	
 17156                           ;incstack = 0
 17157                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17158                           
 17159                           
 17160                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17161     1A8A  0143               	movlb	3	; select bank3
 17162     1A8B  018F               	clrf	15	;volatile
 17163     1A8C                     l9979:
 17164                           
 17165                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17166     1A8C  3008               	movlw	8
 17167     1A8D  0090               	movwf	16	;volatile
 17168     1A8E                     l9981:
 17169                           
 17170                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17171     1A8E  0191               	clrf	17	;volatile
 17172                           
 17173                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17174     1A8F  304F               	movlw	79
 17175     1A90  008D               	movwf	13	;volatile
 17176     1A91                     l9983:
 17177                           
 17178                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17179     1A91  1290               	bcf	16,5	;volatile
 17180     1A92                     l1742:
 17181     1A92  0008               	return
 17182     1A93                     __end_of_I2C1_Initialize:
 17183                           
 17184                           	psect	text28
 17185     1444                     __ptext28:	
 17186 ;; *************** function _EUSART2_Initialize *****************
 17187 ;; Defined at:
 17188 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17189 ;; Parameters:    Size  Location     Type
 17190 ;;		None
 17191 ;; Auto vars:     Size  Location     Type
 17192 ;;		None
 17193 ;; Return value:  Size  Location     Type
 17194 ;;                  1    wreg      void 
 17195 ;; Registers used:
 17196 ;;		wreg, status,2, status,0, pclath, cstack
 17197 ;; Tracked objects:
 17198 ;;		On entry : 0/0
 17199 ;;		On exit  : 0/0
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17206 ;;Total ram usage:        0 bytes
 17207 ;; Hardware stack levels used: 1
 17208 ;; Hardware stack levels required when called: 5
 17209 ;; This function calls:
 17210 ;;		_EUSART2_SetErrorHandler
 17211 ;;		_EUSART2_SetFramingErrorHandler
 17212 ;;		_EUSART2_SetOverrunErrorHandler
 17213 ;;		_EUSART2_SetRxInterruptHandler
 17214 ;;		_EUSART2_SetTxInterruptHandler
 17215 ;; This function is called by:
 17216 ;;		_SYSTEM_Initialize
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220     1444                     _EUSART2_Initialize:	
 17221                           ;psect for function _EUSART2_Initialize
 17222                           
 17223     1444                     l9903:	
 17224                           ;incstack = 0
 17225                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17226                           
 17227                           
 17228                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17229     1444  014E               	movlb	14	; select bank14
 17230     1445  1399               	bcf	25,7	;volatile
 17231     1446                     l9905:
 17232                           
 17233                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17234     1446  304F               	movlw	low _EUSART2_Receive_ISR
 17235     1447  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17236     1448  3013               	movlw	high _EUSART2_Receive_ISR
 17237     1449  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17238     144A  319A  222A  3194   	fcall	_EUSART2_SetRxInterruptHandler
 17239     144D                     l9907:
 17240                           
 17241                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17242     144D  014E               	movlb	14	; select bank14
 17243     144E  1319               	bcf	25,6	;volatile
 17244                           
 17245                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17246     144F  3089               	movlw	low _EUSART2_Transmit_ISR
 17247     1450  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17248     1451  301E               	movlw	high _EUSART2_Transmit_ISR
 17249     1452  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17250     1453  319A  2230  3194   	fcall	_EUSART2_SetTxInterruptHandler
 17251     1456                     l9909:
 17252                           
 17253                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17254     1456  3008               	movlw	8
 17255     1457  0154               	movlb	20	; select bank20
 17256     1458  009F               	movwf	31	;volatile
 17257     1459                     l9911:
 17258                           
 17259                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17260     1459  3090               	movlw	144
 17261     145A  009D               	movwf	29	;volatile
 17262     145B                     l9913:
 17263                           
 17264                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17265     145B  3024               	movlw	36
 17266     145C  009E               	movwf	30	;volatile
 17267     145D                     l9915:
 17268                           
 17269                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17270     145D  3040               	movlw	64
 17271     145E  009B               	movwf	27	;volatile
 17272     145F                     l9917:
 17273                           
 17274                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17275     145F  3003               	movlw	3
 17276     1460  009C               	movwf	28	;volatile
 17277     1461                     l9919:
 17278                           
 17279                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17280     1461  3053               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17281     1462  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17282     1463  3019               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17283     1464  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17284     1465  319A  221E  3194   	fcall	_EUSART2_SetFramingErrorHandler
 17285     1468                     l9921:
 17286                           
 17287                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17288     1468  3082               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17289     1469  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17290     146A  3019               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17291     146B  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17292     146C  319A  2224  3194   	fcall	_EUSART2_SetOverrunErrorHandler
 17293     146F                     l9923:
 17294                           
 17295                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17296     146F  307E               	movlw	low _EUSART2_DefaultErrorHandler
 17297     1470  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17298     1471  3019               	movlw	high _EUSART2_DefaultErrorHandler
 17299     1472  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17300     1473  319A  2218  3194   	fcall	_EUSART2_SetErrorHandler
 17301     1476                     l9925:
 17302                           
 17303                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17304     1476  0141               	movlb	1	; select bank1
 17305     1477  01CF               	clrf	_eusart2RxLastError^(0+128)	;volatile
 17306     1478                     l9927:
 17307                           
 17308                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17309     1478  01D4               	clrf	_eusart2TxHead^(0+128)	;volatile
 17310     1479                     l9929:
 17311                           
 17312                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17313     1479  01D3               	clrf	_eusart2TxTail^(0+128)	;volatile
 17314     147A                     l9931:
 17315                           
 17316                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17317     147A  3008               	movlw	8
 17318     147B  00D2               	movwf	_eusart2TxBufferRemaining^(0+128)	;volatile
 17319                           
 17320                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17321     147C  01FC               	clrf	_eusart2RxHead	;volatile
 17322                           
 17323                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17324     147D  01D1               	clrf	_eusart2RxTail^(0+128)	;volatile
 17325                           
 17326                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17327     147E  01D0               	clrf	_eusart2RxCount^(0+128)	;volatile
 17328     147F                     l9933:
 17329                           
 17330                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17331     147F  014E               	movlb	14	; select bank14
 17332     1480  1799               	bsf	25,7	;volatile
 17333     1481                     l1051:
 17334     1481  0008               	return
 17335     1482                     __end_of_EUSART2_Initialize:
 17336                           
 17337                           	psect	text29
 17338     1A30                     __ptext29:	
 17339 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17340 ;; Defined at:
 17341 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17342 ;; Parameters:    Size  Location     Type
 17343 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17344 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17345 ;; Auto vars:     Size  Location     Type
 17346 ;;		None
 17347 ;; Return value:  Size  Location     Type
 17348 ;;                  1    wreg      void 
 17349 ;; Registers used:
 17350 ;;		wreg
 17351 ;; Tracked objects:
 17352 ;;		On entry : 0/0
 17353 ;;		On exit  : 0/0
 17354 ;;		Unchanged: 0/0
 17355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17360 ;;Total ram usage:        2 bytes
 17361 ;; Hardware stack levels used: 1
 17362 ;; Hardware stack levels required when called: 4
 17363 ;; This function calls:
 17364 ;;		Nothing
 17365 ;; This function is called by:
 17366 ;;		_EUSART2_Initialize
 17367 ;; This function uses a non-reentrant model
 17368 ;;
 17369                           
 17370     1A30                     _EUSART2_SetTxInterruptHandler:	
 17371                           ;psect for function _EUSART2_SetTxInterruptHandler
 17372                           
 17373     1A30                     l9289:	
 17374                           ;incstack = 0
 17375                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17376                           
 17377                           
 17378                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17379     1A30  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17380     1A31  0141               	movlb	1	; select bank1
 17381     1A32  00E9               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17382     1A33  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17383     1A34  00E8               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17384     1A35                     l1117:
 17385     1A35  0008               	return
 17386     1A36                     __end_of_EUSART2_SetTxInterruptHandler:
 17387                           
 17388                           	psect	text30
 17389     1A2A                     __ptext30:	
 17390 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17391 ;; Defined at:
 17392 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17395 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;		None
 17398 ;; Return value:  Size  Location     Type
 17399 ;;                  1    wreg      void 
 17400 ;; Registers used:
 17401 ;;		wreg
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17411 ;;Total ram usage:        2 bytes
 17412 ;; Hardware stack levels used: 1
 17413 ;; Hardware stack levels required when called: 4
 17414 ;; This function calls:
 17415 ;;		Nothing
 17416 ;; This function is called by:
 17417 ;;		_EUSART2_Initialize
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421     1A2A                     _EUSART2_SetRxInterruptHandler:	
 17422                           ;psect for function _EUSART2_SetRxInterruptHandler
 17423                           
 17424     1A2A                     l9287:	
 17425                           ;incstack = 0
 17426                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17427                           
 17428                           
 17429                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17430     1A2A  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17431     1A2B  0142               	movlb	2	; select bank2
 17432     1A2C  00EF               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256)
 17433     1A2D  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17434     1A2E  00EE               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+256)
 17435     1A2F                     l1120:
 17436     1A2F  0008               	return
 17437     1A30                     __end_of_EUSART2_SetRxInterruptHandler:
 17438                           
 17439                           	psect	text31
 17440     1A24                     __ptext31:	
 17441 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17442 ;; Defined at:
 17443 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17446 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17447 ;; Auto vars:     Size  Location     Type
 17448 ;;		None
 17449 ;; Return value:  Size  Location     Type
 17450 ;;                  1    wreg      void 
 17451 ;; Registers used:
 17452 ;;		wreg
 17453 ;; Tracked objects:
 17454 ;;		On entry : 0/0
 17455 ;;		On exit  : 0/0
 17456 ;;		Unchanged: 0/0
 17457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17462 ;;Total ram usage:        2 bytes
 17463 ;; Hardware stack levels used: 1
 17464 ;; Hardware stack levels required when called: 4
 17465 ;; This function calls:
 17466 ;;		Nothing
 17467 ;; This function is called by:
 17468 ;;		_EUSART2_Initialize
 17469 ;; This function uses a non-reentrant model
 17470 ;;
 17471                           
 17472     1A24                     _EUSART2_SetOverrunErrorHandler:	
 17473                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17474                           
 17475     1A24                     l9293:	
 17476                           ;incstack = 0
 17477                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17478                           
 17479                           
 17480                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17481     1A24  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17482     1A25  0143               	movlb	3	; select bank3
 17483     1A26  00BE               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+384)
 17484     1A27  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17485     1A28  00BD               	movwf	_EUSART2_OverrunErrorHandler^(0+384)
 17486     1A29                     l1111:
 17487     1A29  0008               	return
 17488     1A2A                     __end_of_EUSART2_SetOverrunErrorHandler:
 17489                           
 17490                           	psect	text32
 17491     1A1E                     __ptext32:	
 17492 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17493 ;; Defined at:
 17494 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17497 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;		None
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      void 
 17502 ;; Registers used:
 17503 ;;		wreg
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17513 ;;Total ram usage:        2 bytes
 17514 ;; Hardware stack levels used: 1
 17515 ;; Hardware stack levels required when called: 4
 17516 ;; This function calls:
 17517 ;;		Nothing
 17518 ;; This function is called by:
 17519 ;;		_EUSART2_Initialize
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523     1A1E                     _EUSART2_SetFramingErrorHandler:	
 17524                           ;psect for function _EUSART2_SetFramingErrorHandler
 17525                           
 17526     1A1E                     l9291:	
 17527                           ;incstack = 0
 17528                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17529                           
 17530                           
 17531                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17532     1A1E  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17533     1A1F  0142               	movlb	2	; select bank2
 17534     1A20  00ED               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17535     1A21  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17536     1A22  00EC               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17537     1A23                     l1108:
 17538     1A23  0008               	return
 17539     1A24                     __end_of_EUSART2_SetFramingErrorHandler:
 17540                           
 17541                           	psect	text33
 17542     1A18                     __ptext33:	
 17543 ;; *************** function _EUSART2_SetErrorHandler *****************
 17544 ;; Defined at:
 17545 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17546 ;; Parameters:    Size  Location     Type
 17547 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17548 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;		None
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  1    wreg      void 
 17553 ;; Registers used:
 17554 ;;		wreg
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17564 ;;Total ram usage:        2 bytes
 17565 ;; Hardware stack levels used: 1
 17566 ;; Hardware stack levels required when called: 4
 17567 ;; This function calls:
 17568 ;;		Nothing
 17569 ;; This function is called by:
 17570 ;;		_EUSART2_Initialize
 17571 ;; This function uses a non-reentrant model
 17572 ;;
 17573                           
 17574     1A18                     _EUSART2_SetErrorHandler:	
 17575                           ;psect for function _EUSART2_SetErrorHandler
 17576                           
 17577     1A18                     l9295:	
 17578                           ;incstack = 0
 17579                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17580                           
 17581                           
 17582                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17583     1A18  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17584     1A19  0143               	movlb	3	; select bank3
 17585     1A1A  00BC               	movwf	(_EUSART2_ErrorHandler+1)^(0+384)
 17586     1A1B  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17587     1A1C  00BB               	movwf	_EUSART2_ErrorHandler^(0+384)
 17588     1A1D                     l1114:
 17589     1A1D  0008               	return
 17590     1A1E                     __end_of_EUSART2_SetErrorHandler:
 17591                           
 17592                           	psect	text34
 17593     1406                     __ptext34:	
 17594 ;; *************** function _EUSART1_Initialize *****************
 17595 ;; Defined at:
 17596 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17597 ;; Parameters:    Size  Location     Type
 17598 ;;		None
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;		None
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      void 
 17603 ;; Registers used:
 17604 ;;		wreg, status,2, status,0, pclath, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17614 ;;Total ram usage:        0 bytes
 17615 ;; Hardware stack levels used: 1
 17616 ;; Hardware stack levels required when called: 5
 17617 ;; This function calls:
 17618 ;;		_EUSART1_SetErrorHandler
 17619 ;;		_EUSART1_SetFramingErrorHandler
 17620 ;;		_EUSART1_SetOverrunErrorHandler
 17621 ;;		_EUSART1_SetRxInterruptHandler
 17622 ;;		_EUSART1_SetTxInterruptHandler
 17623 ;; This function is called by:
 17624 ;;		_SYSTEM_Initialize
 17625 ;; This function uses a non-reentrant model
 17626 ;;
 17627                           
 17628     1406                     _EUSART1_Initialize:	
 17629                           ;psect for function _EUSART1_Initialize
 17630                           
 17631     1406                     l9939:	
 17632                           ;incstack = 0
 17633                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17634                           
 17635                           
 17636                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17637     1406  014E               	movlb	14	; select bank14
 17638     1407  1299               	bcf	25,5	;volatile
 17639     1408                     l9941:
 17640                           
 17641                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17642     1408  30C1               	movlw	low _EUSART1_Receive_ISR
 17643     1409  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17644     140A  3014               	movlw	high _EUSART1_Receive_ISR
 17645     140B  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17646     140C  319A  220C  3194   	fcall	_EUSART1_SetRxInterruptHandler
 17647     140F                     l9943:
 17648                           
 17649                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17650     140F  014E               	movlb	14	; select bank14
 17651     1410  1219               	bcf	25,4	;volatile
 17652                           
 17653                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17654     1411  30AC               	movlw	low _EUSART1_Transmit_ISR
 17655     1412  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17656     1413  301E               	movlw	high _EUSART1_Transmit_ISR
 17657     1414  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17658     1415  319A  2212  3194   	fcall	_EUSART1_SetTxInterruptHandler
 17659     1418                     l9945:
 17660                           
 17661                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17662     1418  3008               	movlw	8
 17663     1419  0142               	movlb	2	; select bank2
 17664     141A  009F               	movwf	31	;volatile
 17665     141B                     l9947:
 17666                           
 17667                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17668     141B  3090               	movlw	144
 17669     141C  009D               	movwf	29	;volatile
 17670     141D                     l9949:
 17671                           
 17672                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17673     141D  3024               	movlw	36
 17674     141E  009E               	movwf	30	;volatile
 17675     141F                     l9951:
 17676                           
 17677                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17678     141F  3040               	movlw	64
 17679     1420  009B               	movwf	27	;volatile
 17680     1421                     l9953:
 17681                           
 17682                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17683     1421  3003               	movlw	3
 17684     1422  009C               	movwf	28	;volatile
 17685     1423                     l9955:
 17686                           
 17687                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17688     1423  3052               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17689     1424  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17690     1425  3019               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17691     1426  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17692     1427  319A  2200  3194   	fcall	_EUSART1_SetFramingErrorHandler
 17693     142A                     l9957:
 17694                           
 17695                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17696     142A  307A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17697     142B  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17698     142C  3019               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17699     142D  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17700     142E  319A  2206  3194   	fcall	_EUSART1_SetOverrunErrorHandler
 17701     1431                     l9959:
 17702                           
 17703                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17704     1431  3076               	movlw	low _EUSART1_DefaultErrorHandler
 17705     1432  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17706     1433  3019               	movlw	high _EUSART1_DefaultErrorHandler
 17707     1434  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17708     1435  3199  21FA  3194   	fcall	_EUSART1_SetErrorHandler
 17709     1438                     l9961:
 17710                           
 17711                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17712     1438  0141               	movlb	1	; select bank1
 17713     1439  01C8               	clrf	_eusart1RxLastError^(0+128)	;volatile
 17714     143A                     l9963:
 17715                           
 17716                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17717     143A  01CE               	clrf	_eusart1TxHead^(0+128)	;volatile
 17718     143B                     l9965:
 17719                           
 17720                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17721     143B  01CD               	clrf	_eusart1TxTail^(0+128)	;volatile
 17722     143C                     l9967:
 17723                           
 17724                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17725     143C  3008               	movlw	8
 17726     143D  00CC               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
 17727                           
 17728                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17729     143E  01CB               	clrf	_eusart1RxHead^(0+128)	;volatile
 17730                           
 17731                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17732     143F  01CA               	clrf	_eusart1RxTail^(0+128)	;volatile
 17733                           
 17734                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17735     1440  01C9               	clrf	_eusart1RxCount^(0+128)	;volatile
 17736     1441                     l9969:
 17737                           
 17738                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17739     1441  014E               	movlb	14	; select bank14
 17740     1442  1699               	bsf	25,5	;volatile
 17741     1443                     l1195:
 17742     1443  0008               	return
 17743     1444                     __end_of_EUSART1_Initialize:
 17744                           
 17745                           	psect	text35
 17746     1A12                     __ptext35:	
 17747 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17748 ;; Defined at:
 17749 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17750 ;; Parameters:    Size  Location     Type
 17751 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17752 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  1    wreg      void 
 17757 ;; Registers used:
 17758 ;;		wreg
 17759 ;; Tracked objects:
 17760 ;;		On entry : 0/0
 17761 ;;		On exit  : 0/0
 17762 ;;		Unchanged: 0/0
 17763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17768 ;;Total ram usage:        2 bytes
 17769 ;; Hardware stack levels used: 1
 17770 ;; Hardware stack levels required when called: 4
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_EUSART1_Initialize
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778     1A12                     _EUSART1_SetTxInterruptHandler:	
 17779                           ;psect for function _EUSART1_SetTxInterruptHandler
 17780                           
 17781     1A12                     l9309:	
 17782                           ;incstack = 0
 17783                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17784                           
 17785                           
 17786                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17787     1A12  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17788     1A13  0143               	movlb	3	; select bank3
 17789     1A14  00BA               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
 17790     1A15  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17791     1A16  00B9               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
 17792     1A17                     l1267:
 17793     1A17  0008               	return
 17794     1A18                     __end_of_EUSART1_SetTxInterruptHandler:
 17795                           
 17796                           	psect	text36
 17797     1A0C                     __ptext36:	
 17798 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17799 ;; Defined at:
 17800 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17801 ;; Parameters:    Size  Location     Type
 17802 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17803 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;		None
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  1    wreg      void 
 17808 ;; Registers used:
 17809 ;;		wreg
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17819 ;;Total ram usage:        2 bytes
 17820 ;; Hardware stack levels used: 1
 17821 ;; Hardware stack levels required when called: 4
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_EUSART1_Initialize
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829     1A0C                     _EUSART1_SetRxInterruptHandler:	
 17830                           ;psect for function _EUSART1_SetRxInterruptHandler
 17831                           
 17832     1A0C                     l9307:	
 17833                           ;incstack = 0
 17834                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17835                           
 17836                           
 17837                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17838     1A0C  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17839     1A0D  0143               	movlb	3	; select bank3
 17840     1A0E  00B8               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 17841     1A0F  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17842     1A10  00B7               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 17843     1A11                     l1270:
 17844     1A11  0008               	return
 17845     1A12                     __end_of_EUSART1_SetRxInterruptHandler:
 17846                           
 17847                           	psect	text37
 17848     1A06                     __ptext37:	
 17849 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17850 ;; Defined at:
 17851 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17854 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;		None
 17857 ;; Return value:  Size  Location     Type
 17858 ;;                  1    wreg      void 
 17859 ;; Registers used:
 17860 ;;		wreg
 17861 ;; Tracked objects:
 17862 ;;		On entry : 0/0
 17863 ;;		On exit  : 0/0
 17864 ;;		Unchanged: 0/0
 17865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17870 ;;Total ram usage:        2 bytes
 17871 ;; Hardware stack levels used: 1
 17872 ;; Hardware stack levels required when called: 4
 17873 ;; This function calls:
 17874 ;;		Nothing
 17875 ;; This function is called by:
 17876 ;;		_EUSART1_Initialize
 17877 ;; This function uses a non-reentrant model
 17878 ;;
 17879                           
 17880     1A06                     _EUSART1_SetOverrunErrorHandler:	
 17881                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17882                           
 17883     1A06                     l9313:	
 17884                           ;incstack = 0
 17885                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17886                           
 17887                           
 17888                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17889     1A06  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17890     1A07  0143               	movlb	3	; select bank3
 17891     1A08  00B4               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
 17892     1A09  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17893     1A0A  00B3               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
 17894     1A0B                     l1261:
 17895     1A0B  0008               	return
 17896     1A0C                     __end_of_EUSART1_SetOverrunErrorHandler:
 17897                           
 17898                           	psect	text38
 17899     1A00                     __ptext38:	
 17900 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17901 ;; Defined at:
 17902 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17905 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;		None
 17908 ;; Return value:  Size  Location     Type
 17909 ;;                  1    wreg      void 
 17910 ;; Registers used:
 17911 ;;		wreg
 17912 ;; Tracked objects:
 17913 ;;		On entry : 0/0
 17914 ;;		On exit  : 0/0
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17921 ;;Total ram usage:        2 bytes
 17922 ;; Hardware stack levels used: 1
 17923 ;; Hardware stack levels required when called: 4
 17924 ;; This function calls:
 17925 ;;		Nothing
 17926 ;; This function is called by:
 17927 ;;		_EUSART1_Initialize
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931     1A00                     _EUSART1_SetFramingErrorHandler:	
 17932                           ;psect for function _EUSART1_SetFramingErrorHandler
 17933                           
 17934     1A00                     l9311:	
 17935                           ;incstack = 0
 17936                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17937                           
 17938                           
 17939                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17940     1A00  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17941     1A01  0143               	movlb	3	; select bank3
 17942     1A02  00B6               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 17943     1A03  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17944     1A04  00B5               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 17945     1A05                     l1258:
 17946     1A05  0008               	return
 17947     1A06                     __end_of_EUSART1_SetFramingErrorHandler:
 17948                           
 17949                           	psect	text39
 17950     19FA                     __ptext39:	
 17951 ;; *************** function _EUSART1_SetErrorHandler *****************
 17952 ;; Defined at:
 17953 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17954 ;; Parameters:    Size  Location     Type
 17955 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17956 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17957 ;; Auto vars:     Size  Location     Type
 17958 ;;		None
 17959 ;; Return value:  Size  Location     Type
 17960 ;;                  1    wreg      void 
 17961 ;; Registers used:
 17962 ;;		wreg
 17963 ;; Tracked objects:
 17964 ;;		On entry : 0/0
 17965 ;;		On exit  : 0/0
 17966 ;;		Unchanged: 0/0
 17967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17972 ;;Total ram usage:        2 bytes
 17973 ;; Hardware stack levels used: 1
 17974 ;; Hardware stack levels required when called: 4
 17975 ;; This function calls:
 17976 ;;		Nothing
 17977 ;; This function is called by:
 17978 ;;		_EUSART1_Initialize
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982     19FA                     _EUSART1_SetErrorHandler:	
 17983                           ;psect for function _EUSART1_SetErrorHandler
 17984                           
 17985     19FA                     l9315:	
 17986                           ;incstack = 0
 17987                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17988                           
 17989                           
 17990                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17991     19FA  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17992     19FB  0143               	movlb	3	; select bank3
 17993     19FC  00B2               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
 17994     19FD  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17995     19FE  00B1               	movwf	_EUSART1_ErrorHandler^(0+384)
 17996     19FF                     l1264:
 17997     19FF  0008               	return
 17998     1A00                     __end_of_EUSART1_SetErrorHandler:
 17999                           
 18000                           	psect	text40
 18001     1CB7                     __ptext40:	
 18002 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 18003 ;; Defined at:
 18004 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;  pBuffer         1    wreg     PTR unsigned char 
 18007 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), 
 18008 ;;  len             1    1[COMMON] unsigned char 
 18009 ;; Auto vars:     Size  Location     Type
 18010 ;;  pBuffer         1    2[COMMON] PTR unsigned char 
 18011 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), 
 18012 ;; Return value:  Size  Location     Type
 18013 ;;                  1    wreg      _Bool 
 18014 ;; Registers used:
 18015 ;;		wreg, status,2, status,0
 18016 ;; Tracked objects:
 18017 ;;		On entry : 0/0
 18018 ;;		On exit  : 0/0
 18019 ;;		Unchanged: 0/0
 18020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18025 ;;Total ram usage:        2 bytes
 18026 ;; Hardware stack levels used: 1
 18027 ;; Hardware stack levels required when called: 4
 18028 ;; This function calls:
 18029 ;;		Nothing
 18030 ;; This function is called by:
 18031 ;;		_main
 18032 ;;		_RN487X_Example_Initialized
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036     1CB7                     _RN487X_SetAsyncMessageHandler:	
 18037                           ;psect for function _RN487X_SetAsyncMessageHandler
 18038                           
 18039                           
 18040                           ;incstack = 0
 18041                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18042                           ;RN487X_SetAsyncMessageHandler@pBuffer stored from wreg
 18043     1CB7  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 18044     1CB8                     l10921:
 18045                           
 18046                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18047     1CB8  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18048     1CB9  1903               	btfsc	3,2
 18049     1CBA  2CBC               	goto	u8861
 18050     1CBB  2CBD               	goto	u8860
 18051     1CBC                     u8861:
 18052     1CBC  2CCB               	goto	l10935
 18053     1CBD                     u8860:
 18054     1CBD                     l10923:
 18055     1CBD  3002               	movlw	2
 18056     1CBE  0271               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18057     1CBF  1C03               	skipc
 18058     1CC0  2CC2               	goto	u8871
 18059     1CC1  2CC3               	goto	u8870
 18060     1CC2                     u8871:
 18061     1CC2  2CCB               	goto	l10935
 18062     1CC3                     u8870:
 18063     1CC3                     l10925:
 18064                           
 18065                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18066     1CC3  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18067     1CC4  0141               	movlb	1	; select bank1
 18068     1CC5  00DA               	movwf	_asyncBuffer^(0+128)
 18069     1CC6                     l10927:
 18070                           
 18071                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18072     1CC6  0871               	movf	RN487X_SetAsyncMessageHandler@len,w
 18073     1CC7  3EFF               	addlw	255
 18074     1CC8  00D9               	movwf	_asyncBufferSize^(0+128)
 18075     1CC9                     l10929:
 18076                           
 18077                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18078     1CC9  3001               	movlw	1
 18079     1CCA  2CCC               	goto	l952
 18080     1CCB                     l10935:
 18081                           
 18082                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18083     1CCB  3000               	movlw	0
 18084     1CCC                     l952:
 18085     1CCC  0008               	return
 18086     1CCD                     __end_of_RN487X_SetAsyncMessageHandler:
 18087                           
 18088                           	psect	text41
 18089     1B20                     __ptext41:	
 18090 ;; *************** function _RN487X_Read *****************
 18091 ;; Defined at:
 18092 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18093 ;; Parameters:    Size  Location     Type
 18094 ;;		None
 18095 ;; Auto vars:     Size  Location     Type
 18096 ;;		None
 18097 ;; Return value:  Size  Location     Type
 18098 ;;                  1    wreg      unsigned char 
 18099 ;; Registers used:
 18100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18101 ;; Tracked objects:
 18102 ;;		On entry : 0/0
 18103 ;;		On exit  : 0/0
 18104 ;;		Unchanged: 0/0
 18105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18110 ;;Total ram usage:        0 bytes
 18111 ;; Hardware stack levels used: 1
 18112 ;; Hardware stack levels required when called: 9
 18113 ;; This function calls:
 18114 ;;		_RN487X_DataReady
 18115 ;; This function is called by:
 18116 ;;		_main
 18117 ;;		_RN487X_Example_TransparentUart
 18118 ;; This function uses a non-reentrant model
 18119 ;;
 18120                           
 18121     1B20                     _RN487X_Read:	
 18122                           ;psect for function _RN487X_Read
 18123                           
 18124     1B20                     l15259:	
 18125                           ;incstack = 0
 18126                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18127                           
 18128     1B20                     l15261:	
 18129                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18130                           
 18131     1B20  319D  25F0  319B   	fcall	_RN487X_DataReady
 18132     1B23  3A00               	xorlw	0
 18133     1B24  1903               	skipnz
 18134     1B25  2B27               	goto	u14271
 18135     1B26  2B28               	goto	u14270
 18136     1B27                     u14271:
 18137     1B27  2B20               	goto	l15261
 18138     1B28                     u14270:
 18139     1B28                     l15263:
 18140                           
 18141                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18142     1B28  0141               	movlb	1	; select bank1
 18143     1B29  01D6               	clrf	_dataReady^(0+128)
 18144     1B2A                     l15265:
 18145                           
 18146                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18147     1B2A  0857               	movf	_peek^(0+128),w
 18148     1B2B                     l964:
 18149     1B2B  0008               	return
 18150     1B2C                     __end_of_RN487X_Read:
 18151                           
 18152                           	psect	text42
 18153     1DF0                     __ptext42:	
 18154 ;; *************** function _RN487X_DataReady *****************
 18155 ;; Defined at:
 18156 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;		None
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;		None
 18161 ;; Return value:  Size  Location     Type
 18162 ;;                  1    wreg      _Bool 
 18163 ;; Registers used:
 18164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18165 ;; Tracked objects:
 18166 ;;		On entry : 0/0
 18167 ;;		On exit  : 0/0
 18168 ;;		Unchanged: 0/0
 18169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;Total ram usage:        0 bytes
 18175 ;; Hardware stack levels used: 1
 18176 ;; Hardware stack levels required when called: 8
 18177 ;; This function calls:
 18178 ;;		_RN487X_FilterData
 18179 ;;		_RN487X_is_rx_ready
 18180 ;; This function is called by:
 18181 ;;		_RN487X_Read
 18182 ;;		_main
 18183 ;;		_RN487X_Example_TransparentUart
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187     1DF0                     _RN487X_DataReady:	
 18188                           ;psect for function _RN487X_DataReady
 18189                           
 18190     1DF0                     l14577:	
 18191                           ;incstack = 0
 18192                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18193                           
 18194                           
 18195                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18196     1DF0  0141               	movlb	1	; select bank1
 18197     1DF1  0856               	movf	_dataReady^(0+128),w
 18198     1DF2  1903               	btfsc	3,2
 18199     1DF3  2DF5               	goto	u13161
 18200     1DF4  2DF6               	goto	u13160
 18201     1DF5                     u13161:
 18202     1DF5  2DF8               	goto	l14583
 18203     1DF6                     u13160:
 18204     1DF6                     l14579:
 18205                           
 18206                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18207     1DF6  3001               	movlw	1
 18208     1DF7  2E0B               	goto	l957
 18209     1DF8                     l14583:
 18210                           
 18211                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18212     1DF8  3046               	movlw	low ((_RN487X+6)| (0+32768))
 18213     1DF9  0084               	movwf	4
 18214     1DFA  30A0               	movlw	high ((_RN487X+6)| (0+32768))
 18215     1DFB  0085               	movwf	5
 18216     1DFC  3F01               	moviw [1]fsr0
 18217     1DFD  008A               	movwf	10
 18218     1DFE  3F00               	moviw [0]fsr0
 18219     1DFF  000A               	callw
 18220     1E00  319D               	pagesel	$
 18221     1E01  3A00               	xorlw	0
 18222     1E02  1903               	skipnz
 18223     1E03  2E05               	goto	u13171
 18224     1E04  2E06               	goto	u13170
 18225     1E05                     u13171:
 18226     1E05  2E0A               	goto	l14589
 18227     1E06                     u13170:
 18228     1E06                     l14585:
 18229                           
 18230                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18231     1E06  3189  2126  319D   	fcall	_RN487X_FilterData
 18232     1E09  2E0B               	goto	l957
 18233     1E0A                     l14589:
 18234                           
 18235                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18236     1E0A  3000               	movlw	0
 18237     1E0B                     l957:
 18238     1E0B  0008               	return
 18239     1E0C                     __end_of_RN487X_DataReady:
 18240                           
 18241                           	psect	text43
 18242     0926                     __ptext43:	
 18243 ;; *************** function _RN487X_FilterData *****************
 18244 ;; Defined at:
 18245 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;		None
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;  readChar        1   36[BANK0 ] unsigned char 
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  1    wreg      _Bool 
 18252 ;; Registers used:
 18253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 0/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18262 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18263 ;;Total ram usage:        2 bytes
 18264 ;; Hardware stack levels used: 1
 18265 ;; Hardware stack levels required when called: 7
 18266 ;; This function calls:
 18267 ;;		_RN487X_MessageHandler
 18268 ;;		_RN487X_Read@rn487x_interface$F1379
 18269 ;; This function is called by:
 18270 ;;		_RN487X_DataReady
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           
 18274     0926                     _RN487X_FilterData:	
 18275                           ;psect for function _RN487X_FilterData
 18276                           
 18277     0926                     l14047:	
 18278                           ;incstack = 0
 18279                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18280                           
 18281                           
 18282                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18283     0926  3042               	movlw	low ((_RN487X+2)| (0+32768))
 18284     0927  0084               	movwf	4
 18285     0928  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 18286     0929  0085               	movwf	5
 18287     092A  3F01               	moviw [1]fsr0
 18288     092B  008A               	movwf	10
 18289     092C  3F00               	moviw [0]fsr0
 18290     092D  000A               	callw
 18291     092E  3189               	pagesel	$
 18292     092F  0140               	movlb	0	; select bank0
 18293     0930  00C4               	movwf	RN487X_FilterData@readChar
 18294     0931                     l14049:
 18295                           
 18296                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18297     0931  0141               	movlb	1	; select bank1
 18298     0932  0355               	decf	RN487X_FilterData@asyncBuffering^(0+128),w
 18299     0933  1D03               	btfss	3,2
 18300     0934  2936               	goto	u12121
 18301     0935  2937               	goto	u12120
 18302     0936                     u12121:
 18303     0936  2966               	goto	l14065
 18304     0937                     u12120:
 18305     0937                     l14051:
 18306                           
 18307                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18308     0937  3025               	movlw	37
 18309     0938  0140               	movlb	0	; select bank0
 18310     0939  0644               	xorwf	RN487X_FilterData@readChar,w
 18311     093A  1D03               	btfss	3,2
 18312     093B  293D               	goto	u12131
 18313     093C  293E               	goto	u12130
 18314     093D                     u12131:
 18315     093D  2951               	goto	l14059
 18316     093E                     u12130:
 18317     093E                     l14053:
 18318                           
 18319                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18320     093E  0141               	movlb	1	; select bank1
 18321     093F  01D5               	clrf	RN487X_FilterData@asyncBuffering^(0+128)
 18322     0940                     l14055:
 18323                           
 18324                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18325     0940  0858               	movf	_pHead^(0+128),w
 18326     0941  0086               	movwf	6
 18327     0942  3003               	movlw	3	; select bank6/7
 18328     0943  0087               	movwf	7
 18329     0944  0181               	clrf	1
 18330     0945                     l14057:
 18331                           
 18332                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18333     0945  085A               	movf	_asyncBuffer^(0+128),w
 18334     0946  00FB               	movwf	RN487X_MessageHandler@message
 18335     0947  3050               	movlw	low ((_RN487X+16)| (0+32768))
 18336     0948  0084               	movwf	4
 18337     0949  30A0               	movlw	high ((_RN487X+16)| (0+32768))
 18338     094A  0085               	movwf	5
 18339     094B  3F01               	moviw [1]fsr0
 18340     094C  008A               	movwf	10
 18341     094D  3F00               	moviw [0]fsr0
 18342     094E  000A               	callw
 18343     094F  3189               	pagesel	$
 18344                           
 18345                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18346     0950  297A               	goto	l973
 18347     0951                     l14059:
 18348     0951  0141               	movlb	1	; select bank1
 18349     0952  085A               	movf	_asyncBuffer^(0+128),w
 18350     0953  0759               	addwf	_asyncBufferSize^(0+128),w
 18351     0954  0258               	subwf	_pHead^(0+128),w
 18352     0955  1803               	skipnc
 18353     0956  2958               	goto	u12141
 18354     0957  2959               	goto	u12140
 18355     0958                     u12141:
 18356     0958  297A               	goto	l973
 18357     0959                     u12140:
 18358     0959                     l14061:
 18359                           
 18360                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18361     0959  0858               	movf	_pHead^(0+128),w
 18362     095A  0086               	movwf	6
 18363     095B  3003               	movlw	3	; select bank6/7
 18364     095C  0087               	movwf	7
 18365     095D  0140               	movlb	0	; select bank0
 18366     095E  0844               	movf	RN487X_FilterData@readChar,w
 18367     095F  0081               	movwf	1
 18368     0960                     l14063:
 18369     0960  3001               	movlw	1
 18370     0961  00C3               	movwf	??_RN487X_FilterData
 18371     0962  0843               	movf	??_RN487X_FilterData,w
 18372     0963  0141               	movlb	1	; select bank1
 18373     0964  07D8               	addwf	_pHead^(0+128),f
 18374     0965  297A               	goto	l973
 18375     0966                     l14065:
 18376                           
 18377                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18378     0966  3025               	movlw	37
 18379     0967  0140               	movlb	0	; select bank0
 18380     0968  0644               	xorwf	RN487X_FilterData@readChar,w
 18381     0969  1D03               	btfss	3,2
 18382     096A  296C               	goto	u12151
 18383     096B  296D               	goto	u12150
 18384     096C                     u12151:
 18385     096C  2973               	goto	l974
 18386     096D                     u12150:
 18387     096D                     l14067:
 18388                           
 18389                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18390     096D  0141               	movlb	1	; select bank1
 18391     096E  01D5               	clrf	RN487X_FilterData@asyncBuffering^(0+128)
 18392     096F  0AD5               	incf	RN487X_FilterData@asyncBuffering^(0+128),f
 18393     0970                     l14069:
 18394                           
 18395                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18396     0970  085A               	movf	_asyncBuffer^(0+128),w
 18397     0971  00D8               	movwf	_pHead^(0+128)
 18398                           
 18399                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18400     0972  297A               	goto	l973
 18401     0973                     l974:	
 18402                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18403                           
 18404                           
 18405                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18406     0973  0141               	movlb	1	; select bank1
 18407     0974  01D6               	clrf	_dataReady^(0+128)
 18408     0975  0AD6               	incf	_dataReady^(0+128),f
 18409     0976                     l14071:
 18410                           
 18411                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18412     0976  0140               	movlb	0	; select bank0
 18413     0977  0844               	movf	RN487X_FilterData@readChar,w
 18414     0978  0141               	movlb	1	; select bank1
 18415     0979  00D7               	movwf	_peek^(0+128)
 18416     097A                     l973:	
 18417                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18418                           
 18419                           
 18420                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18421     097A  0141               	movlb	1	; select bank1
 18422     097B  0856               	movf	_dataReady^(0+128),w
 18423     097C                     l976:
 18424     097C  0008               	return
 18425     097D                     __end_of_RN487X_FilterData:
 18426                           
 18427                           	psect	text44
 18428     1316                     __ptext44:	
 18429 ;; *************** function _RN487X_MessageHandler *****************
 18430 ;; Defined at:
 18431 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18432 ;; Parameters:    Size  Location     Type
 18433 ;;  message         1   11[COMMON] PTR unsigned char 
 18434 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;  messageType     1   34[BANK0 ] enum E12962
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      void 
 18439 ;; Registers used:
 18440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18449 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18450 ;;Total ram usage:        2 bytes
 18451 ;; Hardware stack levels used: 1
 18452 ;; Hardware stack levels required when called: 6
 18453 ;; This function calls:
 18454 ;;		_rn487x_PrintIndicatorCharacters
 18455 ;;		_rn487x_PrintMessage
 18456 ;;		_rn487x_PrintMessageEnd
 18457 ;;		_rn487x_PrintMessageStart
 18458 ;;		_strstr
 18459 ;; This function is called by:
 18460 ;;		_RN487X_FilterData
 18461 ;; This function uses a non-reentrant model
 18462 ;;
 18463                           
 18464     1316                     _RN487X_MessageHandler:	
 18465                           ;psect for function _RN487X_MessageHandler
 18466                           
 18467     1316                     l13989:	
 18468                           ;incstack = 0
 18469                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18470                           
 18471                           
 18472                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18473     1316  3190  207E  3193   	fcall	_rn487x_PrintMessageStart
 18474                           
 18475                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18476     1319  3069               	movlw	low (STR_2| (0+32768))
 18477     131A  00F7               	movwf	strstr@n
 18478     131B  30A0               	movlw	high (STR_2| (0+32768))
 18479     131C  00F8               	movwf	strstr@n+1
 18480     131D  087B               	movf	RN487X_MessageHandler@message,w
 18481     131E  3196  2621  3193   	fcall	_strstr
 18482     1321  3A00               	xorlw	0
 18483     1322  1903               	skipnz
 18484     1323  2B25               	goto	u12061
 18485     1324  2B26               	goto	u12060
 18486     1325                     u12061:
 18487     1325  2B2B               	goto	l13993
 18488     1326                     u12060:
 18489     1326                     l13991:
 18490                           
 18491                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18492     1326  0140               	movlb	0	; select bank0
 18493     1327  01C2               	clrf	RN487X_MessageHandler@messageType
 18494                           
 18495                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18496     1328  0141               	movlb	1	; select bank1
 18497     1329  01DB               	clrf	_connected^(0+128)
 18498                           
 18499                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18500     132A  2B42               	goto	l13999
 18501     132B                     l13993:
 18502     132B  3052               	movlw	low (STR_4| (0+32768))
 18503     132C  00F7               	movwf	strstr@n
 18504     132D  30A0               	movlw	high (STR_4| (0+32768))
 18505     132E  00F8               	movwf	strstr@n+1
 18506     132F  087B               	movf	RN487X_MessageHandler@message,w
 18507     1330  3196  2621  3193   	fcall	_strstr
 18508     1333  3A00               	xorlw	0
 18509     1334  1903               	skipnz
 18510     1335  2B37               	goto	u12071
 18511     1336  2B38               	goto	u12070
 18512     1337                     u12071:
 18513     1337  2B3F               	goto	l13997
 18514     1338                     u12070:
 18515     1338                     l13995:
 18516                           
 18517                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18518     1338  0140               	movlb	0	; select bank0
 18519     1339  01C2               	clrf	RN487X_MessageHandler@messageType
 18520     133A  0AC2               	incf	RN487X_MessageHandler@messageType,f
 18521                           
 18522                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18523     133B  0141               	movlb	1	; select bank1
 18524     133C  01DB               	clrf	_connected^(0+128)
 18525     133D  0ADB               	incf	_connected^(0+128),f
 18526                           
 18527                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18528     133E  2B42               	goto	l13999
 18529     133F                     l13997:
 18530                           
 18531                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18532     133F  3002               	movlw	2
 18533     1340  0140               	movlb	0	; select bank0
 18534     1341  00C2               	movwf	RN487X_MessageHandler@messageType
 18535     1342                     l13999:
 18536                           
 18537                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18538     1342  087B               	movf	RN487X_MessageHandler@message,w
 18539     1343  3191  21FD  3193   	fcall	_rn487x_PrintMessage
 18540     1346                     l14001:
 18541                           
 18542                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18543     1346  3196  266E  3193   	fcall	_rn487x_PrintMessageEnd
 18544     1349                     l14003:
 18545                           
 18546                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18547     1349  0140               	movlb	0	; select bank0
 18548     134A  0842               	movf	RN487X_MessageHandler@messageType,w
 18549     134B  319E  26CF  3193   	fcall	_rn487x_PrintIndicatorCharacters
 18550     134E                     l855:
 18551     134E  0008               	return
 18552     134F                     __end_of_RN487X_MessageHandler:
 18553                           
 18554                           	psect	text45
 18555     1621                     __ptext45:	
 18556 ;; *************** function _strstr *****************
 18557 ;; Defined at:
 18558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  h               1    wreg     PTR const unsigned char 
 18561 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18562 ;;  n               2    7[COMMON] PTR const unsigned char 
 18563 ;;		 -> STR_5(12), STR_3(11), 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;  h               1    2[BANK0 ] PTR const unsigned char 
 18566 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18567 ;;  nl              2    0[BANK0 ] unsigned int 
 18568 ;; Return value:  Size  Location     Type
 18569 ;;                  1    wreg      PTR unsigned char 
 18570 ;; Registers used:
 18571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18572 ;; Tracked objects:
 18573 ;;		On entry : 0/0
 18574 ;;		On exit  : 0/0
 18575 ;;		Unchanged: 0/0
 18576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18578 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18580 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18581 ;;Total ram usage:        7 bytes
 18582 ;; Hardware stack levels used: 1
 18583 ;; Hardware stack levels required when called: 5
 18584 ;; This function calls:
 18585 ;;		_strchr
 18586 ;;		_strlen
 18587 ;;		_strncmp
 18588 ;; This function is called by:
 18589 ;;		_RN487X_MessageHandler
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593     1621                     _strstr:	
 18594                           ;psect for function _strstr
 18595                           
 18596                           
 18597                           ;incstack = 0
 18598                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18599                           ;strstr@h stored from wreg
 18600     1621  0140               	movlb	0	; select bank0
 18601     1622  00A2               	movwf	strstr@h
 18602     1623                     l13935:
 18603     1623  0877               	movf	strstr@n,w
 18604     1624  0478               	iorwf	strstr@n+1,w
 18605     1625  1903               	btfsc	3,2
 18606     1626  2E28               	goto	u11961
 18607     1627  2E29               	goto	u11960
 18608     1628                     u11961:
 18609     1628  2E6C               	goto	l13951
 18610     1629                     u11960:
 18611     1629                     l13937:
 18612     1629  0878               	movf	strstr@n+1,w
 18613     162A  00F2               	movwf	strlen@s+1
 18614     162B  0877               	movf	strstr@n,w
 18615     162C  00F1               	movwf	strlen@s
 18616     162D  319D  2589  3196   	fcall	_strlen
 18617     1630  0872               	movf	?_strlen+1,w
 18618     1631  0140               	movlb	0	; select bank0
 18619     1632  00A1               	movwf	strstr@nl+1
 18620     1633  0871               	movf	?_strlen,w
 18621     1634  00A0               	movwf	strstr@nl
 18622     1635  2E5E               	goto	l13947
 18623     1636                     l13939:
 18624     1636  0878               	movf	strstr@n+1,w
 18625     1637  00F2               	movwf	strncmp@r+1
 18626     1638  0877               	movf	strstr@n,w
 18627     1639  00F1               	movwf	strncmp@r
 18628     163A  0821               	movf	strstr@nl+1,w
 18629     163B  00F4               	movwf	strncmp@n+1
 18630     163C  0820               	movf	strstr@nl,w
 18631     163D  00F3               	movwf	strncmp@n
 18632     163E  0822               	movf	strstr@h,w
 18633     163F  3197  27AD  3196   	fcall	_strncmp
 18634     1642  0871               	movf	?_strncmp,w
 18635     1643  0472               	iorwf	?_strncmp+1,w
 18636     1644  1D03               	btfss	3,2
 18637     1645  2E47               	goto	u11971
 18638     1646  2E48               	goto	u11970
 18639     1647                     u11971:
 18640     1647  2E4B               	goto	l13945
 18641     1648                     u11970:
 18642     1648                     l13941:
 18643     1648  0140               	movlb	0	; select bank0
 18644     1649  0822               	movf	strstr@h,w
 18645     164A  2E6D               	goto	l3305
 18646     164B                     l13945:
 18647     164B  0877               	movf	strstr@n,w
 18648     164C  0084               	movwf	4
 18649     164D  0878               	movf	strstr@n+1,w
 18650     164E  0085               	movwf	5
 18651     164F  0800               	movf	0,w	;code access
 18652     1650  00F9               	movwf	??_strstr
 18653     1651  01FA               	clrf	??_strstr+1
 18654     1652  0879               	movf	??_strstr,w
 18655     1653  00F1               	movwf	strchr@c
 18656     1654  087A               	movf	??_strstr+1,w
 18657     1655  00F2               	movwf	strchr@c+1
 18658     1656  0140               	movlb	0	; select bank0
 18659     1657  0822               	movf	strstr@h,w
 18660     1658  3E01               	addlw	1
 18661     1659  319D  25A2  3196   	fcall	_strchr
 18662     165C  0140               	movlb	0	; select bank0
 18663     165D  00A2               	movwf	strstr@h
 18664     165E                     l13947:
 18665     165E  0822               	movf	strstr@h,w
 18666     165F  1903               	btfsc	3,2
 18667     1660  2E62               	goto	u11981
 18668     1661  2E63               	goto	u11980
 18669     1662                     u11981:
 18670     1662  2E6C               	goto	l13951
 18671     1663                     u11980:
 18672     1663                     l13949:
 18673     1663  0822               	movf	strstr@h,w
 18674     1664  0086               	movwf	6
 18675     1665  3003               	movlw	3	; select bank6/7
 18676     1666  0087               	movwf	7
 18677     1667  0801               	movf	1,w
 18678     1668  1D03               	btfss	3,2
 18679     1669  2E6B               	goto	u11991
 18680     166A  2E6C               	goto	u11990
 18681     166B                     u11991:
 18682     166B  2E36               	goto	l13939
 18683     166C                     u11990:
 18684     166C                     l13951:
 18685     166C  3000               	movlw	0
 18686     166D                     l3305:
 18687     166D  0008               	return
 18688     166E                     __end_of_strstr:
 18689                           
 18690                           	psect	text46
 18691     17AD                     __ptext46:	
 18692 ;; *************** function _strncmp *****************
 18693 ;; Defined at:
 18694 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18695 ;; Parameters:    Size  Location     Type
 18696 ;;  l               1    wreg     PTR const unsigned char 
 18697 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18698 ;;  r               2    1[COMMON] PTR const unsigned char 
 18699 ;;		 -> STR_5(12), STR_3(11), 
 18700 ;;  n               2    3[COMMON] unsigned int 
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;  l               1    6[COMMON] PTR const unsigned char 
 18703 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18704 ;; Return value:  Size  Location     Type
 18705 ;;                  2    1[COMMON] int 
 18706 ;; Registers used:
 18707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18708 ;; Tracked objects:
 18709 ;;		On entry : 0/0
 18710 ;;		On exit  : 0/0
 18711 ;;		Unchanged: 0/0
 18712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;Total ram usage:        6 bytes
 18718 ;; Hardware stack levels used: 1
 18719 ;; Hardware stack levels required when called: 4
 18720 ;; This function calls:
 18721 ;;		Nothing
 18722 ;; This function is called by:
 18723 ;;		_strstr
 18724 ;; This function uses a non-reentrant model
 18725 ;;
 18726                           
 18727     17AD                     _strncmp:	
 18728                           ;psect for function _strncmp
 18729                           
 18730                           
 18731                           ;incstack = 0
 18732                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18733                           ;strncmp@l stored from wreg
 18734     17AD  00F6               	movwf	strncmp@l
 18735     17AE                     l13799:
 18736     17AE  3001               	movlw	1
 18737     17AF  02F3               	subwf	strncmp@n,f
 18738     17B0  3000               	movlw	0
 18739     17B1  3BF4               	subwfb	strncmp@n+1,f
 18740     17B2  0A73               	incf	strncmp@n,w
 18741     17B3  1D03               	skipz
 18742     17B4  2FB9               	goto	u11821
 18743     17B5  0A74               	incf	strncmp@n+1,w
 18744     17B6  1D03               	btfss	3,2
 18745     17B7  2FB9               	goto	u11821
 18746     17B8  2FBA               	goto	u11820
 18747     17B9                     u11821:
 18748     17B9  2FC9               	goto	l13811
 18749     17BA                     u11820:
 18750     17BA                     l13801:
 18751     17BA  01F1               	clrf	?_strncmp
 18752     17BB  01F2               	clrf	?_strncmp+1
 18753     17BC  2FFF               	goto	l3318
 18754     17BD                     l13805:
 18755     17BD  3001               	movlw	1
 18756     17BE  00F5               	movwf	??_strncmp
 18757     17BF  0875               	movf	??_strncmp,w
 18758     17C0  07F6               	addwf	strncmp@l,f
 18759     17C1                     l13807:
 18760     17C1  3001               	movlw	1
 18761     17C2  07F1               	addwf	strncmp@r,f
 18762     17C3  3000               	movlw	0
 18763     17C4  3DF2               	addwfc	strncmp@r+1,f
 18764     17C5                     l13809:
 18765     17C5  3001               	movlw	1
 18766     17C6  02F3               	subwf	strncmp@n,f
 18767     17C7  3000               	movlw	0
 18768     17C8  3BF4               	subwfb	strncmp@n+1,f
 18769     17C9                     l13811:
 18770     17C9  0876               	movf	strncmp@l,w
 18771     17CA  0086               	movwf	6
 18772     17CB  3003               	movlw	3	; select bank6/7
 18773     17CC  0087               	movwf	7
 18774     17CD  0801               	movf	1,w
 18775     17CE  1903               	btfsc	3,2
 18776     17CF  2FD1               	goto	u11831
 18777     17D0  2FD2               	goto	u11830
 18778     17D1                     u11831:
 18779     17D1  2FF1               	goto	l13819
 18780     17D2                     u11830:
 18781     17D2                     l13813:
 18782     17D2  0871               	movf	strncmp@r,w
 18783     17D3  0084               	movwf	4
 18784     17D4  0872               	movf	strncmp@r+1,w
 18785     17D5  0085               	movwf	5
 18786     17D6  0012               	moviw fsr0++
 18787     17D7  1903               	btfsc	3,2
 18788     17D8  2FDA               	goto	u11841
 18789     17D9  2FDB               	goto	u11840
 18790     17DA                     u11841:
 18791     17DA  2FF1               	goto	l13819
 18792     17DB                     u11840:
 18793     17DB                     l13815:
 18794     17DB  0873               	movf	strncmp@n,w
 18795     17DC  0474               	iorwf	strncmp@n+1,w
 18796     17DD  1903               	btfsc	3,2
 18797     17DE  2FE0               	goto	u11851
 18798     17DF  2FE1               	goto	u11850
 18799     17E0                     u11851:
 18800     17E0  2FF1               	goto	l13819
 18801     17E1                     u11850:
 18802     17E1                     l13817:
 18803     17E1  0871               	movf	strncmp@r,w
 18804     17E2  0084               	movwf	4
 18805     17E3  0872               	movf	strncmp@r+1,w
 18806     17E4  0085               	movwf	5
 18807     17E5  0800               	movf	0,w	;code access
 18808     17E6  00F5               	movwf	??_strncmp
 18809     17E7  0876               	movf	strncmp@l,w
 18810     17E8  0086               	movwf	6
 18811     17E9  3003               	movlw	3	; select bank6/7
 18812     17EA  0087               	movwf	7
 18813     17EB  0801               	movf	1,w
 18814     17EC  0675               	xorwf	??_strncmp,w
 18815     17ED  1903               	skipnz
 18816     17EE  2FF0               	goto	u11861
 18817     17EF  2FF1               	goto	u11860
 18818     17F0                     u11861:
 18819     17F0  2FBD               	goto	l13805
 18820     17F1                     u11860:
 18821     17F1                     l13819:
 18822     17F1  0876               	movf	strncmp@l,w
 18823     17F2  0086               	movwf	6
 18824     17F3  3003               	movlw	3	; select bank6/7
 18825     17F4  0087               	movwf	7
 18826     17F5  0871               	movf	strncmp@r,w
 18827     17F6  0084               	movwf	4
 18828     17F7  0872               	movf	strncmp@r+1,w
 18829     17F8  0085               	movwf	5
 18830     17F9  0800               	movf	0,w	;code access
 18831     17FA  0201               	subwf	1,w
 18832     17FB  00F1               	movwf	?_strncmp
 18833     17FC  01F2               	clrf	?_strncmp+1
 18834     17FD  1C03               	skipc
 18835     17FE  03F2               	decf	?_strncmp+1,f
 18836     17FF                     l3318:
 18837     17FF  0008               	return
 18838     1800                     __end_of_strncmp:
 18839                           
 18840                           	psect	text47
 18841     1DA2                     __ptext47:	
 18842 ;; *************** function _strchr *****************
 18843 ;; Defined at:
 18844 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18845 ;; Parameters:    Size  Location     Type
 18846 ;;  s               1    wreg     PTR const unsigned char 
 18847 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18848 ;;  c               2    1[COMMON] int 
 18849 ;; Auto vars:     Size  Location     Type
 18850 ;;  s               1    3[COMMON] PTR const unsigned char 
 18851 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  1    wreg      PTR unsigned char 
 18854 ;; Registers used:
 18855 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18856 ;; Tracked objects:
 18857 ;;		On entry : 0/0
 18858 ;;		On exit  : 0/0
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18865 ;;Total ram usage:        3 bytes
 18866 ;; Hardware stack levels used: 1
 18867 ;; Hardware stack levels required when called: 4
 18868 ;; This function calls:
 18869 ;;		Nothing
 18870 ;; This function is called by:
 18871 ;;		_strstr
 18872 ;; This function uses a non-reentrant model
 18873 ;;
 18874                           
 18875     1DA2                     _strchr:	
 18876                           ;psect for function _strchr
 18877                           
 18878                           
 18879                           ;incstack = 0
 18880                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18881                           ;strchr@s stored from wreg
 18882     1DA2  00F3               	movwf	strchr@s
 18883     1DA3                     l3311:
 18884     1DA3                     l13823:
 18885     1DA3  0873               	movf	strchr@s,w
 18886     1DA4  0086               	movwf	6
 18887     1DA5  3003               	movlw	3	; select bank6/7
 18888     1DA6  0087               	movwf	7
 18889     1DA7  0801               	movf	1,w
 18890     1DA8  0671               	xorwf	strchr@c,w
 18891     1DA9  1D03               	skipz
 18892     1DAA  2DAC               	goto	u11871
 18893     1DAB  2DAD               	goto	u11870
 18894     1DAC                     u11871:
 18895     1DAC  2DAF               	goto	l13829
 18896     1DAD                     u11870:
 18897     1DAD                     l13825:
 18898     1DAD  0873               	movf	strchr@s,w
 18899     1DAE  2DBA               	goto	l3313
 18900     1DAF                     l13829:
 18901     1DAF  0873               	movf	strchr@s,w
 18902     1DB0  0086               	movwf	6
 18903     1DB1  3003               	movlw	3	; select bank6/7
 18904     1DB2  0087               	movwf	7
 18905     1DB3  0AF3               	incf	strchr@s,f
 18906     1DB4  0801               	movf	1,w
 18907     1DB5  1D03               	btfss	3,2
 18908     1DB6  2DB8               	goto	u11881
 18909     1DB7  2DB9               	goto	u11880
 18910     1DB8                     u11881:
 18911     1DB8  2DA3               	goto	l3311
 18912     1DB9                     u11880:
 18913     1DB9                     l13831:
 18914     1DB9  3000               	movlw	0
 18915     1DBA                     l3313:
 18916     1DBA  0008               	return
 18917     1DBB                     __end_of_strchr:
 18918                           
 18919                           	psect	text48
 18920     107E                     __ptext48:	
 18921 ;; *************** function _rn487x_PrintMessageStart *****************
 18922 ;; Defined at:
 18923 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  1    wreg      void 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used: 1
 18943 ;; Hardware stack levels required when called: 5
 18944 ;; This function calls:
 18945 ;;		_EUSART1_Write
 18946 ;;		_EUSART2_Write
 18947 ;; This function is called by:
 18948 ;;		_RN487X_MessageHandler
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952     107E                     _rn487x_PrintMessageStart:	
 18953                           ;psect for function _rn487x_PrintMessageStart
 18954                           
 18955     107E                     l13913:	
 18956                           ;incstack = 0
 18957                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18958                           
 18959                           
 18960                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18961     107E  303C               	movlw	60
 18962     107F  00F1               	movwf	EUSART2_Write@txData
 18963     1080  3002               	movlw	low ((_uart+2)| (0+32768))
 18964     1081  0084               	movwf	4
 18965     1082  3098               	movlw	high ((_uart+2)| (0+32768))
 18966     1083  0085               	movwf	5
 18967     1084  3F01               	moviw [1]fsr0
 18968     1085  008A               	movwf	10
 18969     1086  3F00               	moviw [0]fsr0
 18970     1087  000A               	callw
 18971     1088  3190               	pagesel	$
 18972                           
 18973                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18974     1089  303C               	movlw	60
 18975     108A  00F1               	movwf	EUSART2_Write@txData
 18976     108B  3002               	movlw	low ((_uart+2)| (0+32768))
 18977     108C  0084               	movwf	4
 18978     108D  3098               	movlw	high ((_uart+2)| (0+32768))
 18979     108E  0085               	movwf	5
 18980     108F  3F01               	moviw [1]fsr0
 18981     1090  008A               	movwf	10
 18982     1091  3F00               	moviw [0]fsr0
 18983     1092  000A               	callw
 18984     1093  3190               	pagesel	$
 18985                           
 18986                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18987     1094  303C               	movlw	60
 18988     1095  00F1               	movwf	EUSART2_Write@txData
 18989     1096  3002               	movlw	low ((_uart+2)| (0+32768))
 18990     1097  0084               	movwf	4
 18991     1098  3098               	movlw	high ((_uart+2)| (0+32768))
 18992     1099  0085               	movwf	5
 18993     109A  3F01               	moviw [1]fsr0
 18994     109B  008A               	movwf	10
 18995     109C  3F00               	moviw [0]fsr0
 18996     109D  000A               	callw
 18997     109E  3190               	pagesel	$
 18998                           
 18999                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19000     109F  3020               	movlw	32
 19001     10A0  00F1               	movwf	EUSART2_Write@txData
 19002     10A1  3002               	movlw	low ((_uart+2)| (0+32768))
 19003     10A2  0084               	movwf	4
 19004     10A3  3098               	movlw	high ((_uart+2)| (0+32768))
 19005     10A4  0085               	movwf	5
 19006     10A5  3F01               	moviw [1]fsr0
 19007     10A6  008A               	movwf	10
 19008     10A7  3F00               	moviw [0]fsr0
 19009     10A8  000A               	callw
 19010     10A9  3190               	pagesel	$
 19011     10AA                     l832:
 19012     10AA  0008               	return
 19013     10AB                     __end_of_rn487x_PrintMessageStart:
 19014                           
 19015                           	psect	text49
 19016     166E                     __ptext49:	
 19017 ;; *************** function _rn487x_PrintMessageEnd *****************
 19018 ;; Defined at:
 19019 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19020 ;; Parameters:    Size  Location     Type
 19021 ;;		None
 19022 ;; Auto vars:     Size  Location     Type
 19023 ;;		None
 19024 ;; Return value:  Size  Location     Type
 19025 ;;                  1    wreg      void 
 19026 ;; Registers used:
 19027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19028 ;; Tracked objects:
 19029 ;;		On entry : 0/0
 19030 ;;		On exit  : 0/0
 19031 ;;		Unchanged: 0/0
 19032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19037 ;;Total ram usage:        0 bytes
 19038 ;; Hardware stack levels used: 1
 19039 ;; Hardware stack levels required when called: 5
 19040 ;; This function calls:
 19041 ;;		_EUSART1_Write
 19042 ;;		_EUSART2_Write
 19043 ;; This function is called by:
 19044 ;;		_RN487X_MessageHandler
 19045 ;; This function uses a non-reentrant model
 19046 ;;
 19047                           
 19048     166E                     _rn487x_PrintMessageEnd:	
 19049                           ;psect for function _rn487x_PrintMessageEnd
 19050                           
 19051     166E                     l13915:	
 19052                           ;incstack = 0
 19053                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19054                           
 19055                           
 19056                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19057     166E  3020               	movlw	32
 19058     166F  00F1               	movwf	EUSART2_Write@txData
 19059     1670  3002               	movlw	low ((_uart+2)| (0+32768))
 19060     1671  0084               	movwf	4
 19061     1672  3098               	movlw	high ((_uart+2)| (0+32768))
 19062     1673  0085               	movwf	5
 19063     1674  3F01               	moviw [1]fsr0
 19064     1675  008A               	movwf	10
 19065     1676  3F00               	moviw [0]fsr0
 19066     1677  000A               	callw
 19067     1678  3196               	pagesel	$
 19068                           
 19069                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19070     1679  303E               	movlw	62
 19071     167A  00F1               	movwf	EUSART2_Write@txData
 19072     167B  3002               	movlw	low ((_uart+2)| (0+32768))
 19073     167C  0084               	movwf	4
 19074     167D  3098               	movlw	high ((_uart+2)| (0+32768))
 19075     167E  0085               	movwf	5
 19076     167F  3F01               	moviw [1]fsr0
 19077     1680  008A               	movwf	10
 19078     1681  3F00               	moviw [0]fsr0
 19079     1682  000A               	callw
 19080     1683  3196               	pagesel	$
 19081                           
 19082                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19083     1684  303E               	movlw	62
 19084     1685  00F1               	movwf	EUSART2_Write@txData
 19085     1686  3002               	movlw	low ((_uart+2)| (0+32768))
 19086     1687  0084               	movwf	4
 19087     1688  3098               	movlw	high ((_uart+2)| (0+32768))
 19088     1689  0085               	movwf	5
 19089     168A  3F01               	moviw [1]fsr0
 19090     168B  008A               	movwf	10
 19091     168C  3F00               	moviw [0]fsr0
 19092     168D  000A               	callw
 19093     168E  3196               	pagesel	$
 19094                           
 19095                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19096     168F  303E               	movlw	62
 19097     1690  00F1               	movwf	EUSART2_Write@txData
 19098     1691  3002               	movlw	low ((_uart+2)| (0+32768))
 19099     1692  0084               	movwf	4
 19100     1693  3098               	movlw	high ((_uart+2)| (0+32768))
 19101     1694  0085               	movwf	5
 19102     1695  3F01               	moviw [1]fsr0
 19103     1696  008A               	movwf	10
 19104     1697  3F00               	moviw [0]fsr0
 19105     1698  000A               	callw
 19106     1699  3196               	pagesel	$
 19107                           
 19108                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19109     169A  3020               	movlw	32
 19110     169B  00F1               	movwf	EUSART2_Write@txData
 19111     169C  3002               	movlw	low ((_uart+2)| (0+32768))
 19112     169D  0084               	movwf	4
 19113     169E  3098               	movlw	high ((_uart+2)| (0+32768))
 19114     169F  0085               	movwf	5
 19115     16A0  3F01               	moviw [1]fsr0
 19116     16A1  008A               	movwf	10
 19117     16A2  3F00               	moviw [0]fsr0
 19118     16A3  000A               	callw
 19119     16A4  3196               	pagesel	$
 19120                           
 19121                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19122     16A5  300D               	movlw	13
 19123     16A6  00F1               	movwf	EUSART2_Write@txData
 19124     16A7  3002               	movlw	low ((_uart+2)| (0+32768))
 19125     16A8  0084               	movwf	4
 19126     16A9  3098               	movlw	high ((_uart+2)| (0+32768))
 19127     16AA  0085               	movwf	5
 19128     16AB  3F01               	moviw [1]fsr0
 19129     16AC  008A               	movwf	10
 19130     16AD  3F00               	moviw [0]fsr0
 19131     16AE  000A               	callw
 19132     16AF  3196               	pagesel	$
 19133                           
 19134                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19135     16B0  300A               	movlw	10
 19136     16B1  00F1               	movwf	EUSART2_Write@txData
 19137     16B2  3002               	movlw	low ((_uart+2)| (0+32768))
 19138     16B3  0084               	movwf	4
 19139     16B4  3098               	movlw	high ((_uart+2)| (0+32768))
 19140     16B5  0085               	movwf	5
 19141     16B6  3F01               	moviw [1]fsr0
 19142     16B7  008A               	movwf	10
 19143     16B8  3F00               	moviw [0]fsr0
 19144     16B9  000A               	callw
 19145     16BA  3196               	pagesel	$
 19146     16BB                     l835:
 19147     16BB  0008               	return
 19148     16BC                     __end_of_rn487x_PrintMessageEnd:
 19149                           
 19150                           	psect	text50
 19151     11FD                     __ptext50:	
 19152 ;; *************** function _rn487x_PrintMessage *****************
 19153 ;; Defined at:
 19154 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19155 ;; Parameters:    Size  Location     Type
 19156 ;;  passedMessag    1    wreg     PTR unsigned char 
 19157 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 19158 ;; Auto vars:     Size  Location     Type
 19159 ;;  passedMessag    1   32[BANK0 ] PTR unsigned char 
 19160 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 19161 ;;  messageIndex    1   33[BANK0 ] unsigned char 
 19162 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      void 
 19165 ;; Registers used:
 19166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19167 ;; Tracked objects:
 19168 ;;		On entry : 0/0
 19169 ;;		On exit  : 0/0
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:       36 bytes
 19177 ;; Hardware stack levels used: 1
 19178 ;; Hardware stack levels required when called: 5
 19179 ;; This function calls:
 19180 ;;		_EUSART1_Write
 19181 ;;		_EUSART2_Write
 19182 ;;		_strcpy
 19183 ;;		_strlen
 19184 ;; This function is called by:
 19185 ;;		_RN487X_MessageHandler
 19186 ;; This function uses a non-reentrant model
 19187 ;;
 19188                           
 19189     11FD                     _rn487x_PrintMessage:	
 19190                           ;psect for function _rn487x_PrintMessage
 19191                           
 19192                           
 19193                           ;incstack = 0
 19194                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19195                           ;rn487x_PrintMessage@passedMessage stored from wreg
 19196     11FD  0140               	movlb	0	; select bank0
 19197     11FE  00C0               	movwf	rn487x_PrintMessage@passedMessage
 19198     11FF                     l13925:
 19199                           
 19200                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19201     11FF  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19202     1200  00F1               	movwf	strcpy@src
 19203     1201  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19204     1202  319C  244F  3191   	fcall	_strcpy
 19205     1205                     l13927:
 19206                           
 19207                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19208     1205  0140               	movlb	0	; select bank0
 19209     1206  01C1               	clrf	rn487x_PrintMessage@messageIndex
 19210     1207  2A1C               	goto	l13933
 19211     1208                     l13929:
 19212                           
 19213                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19214     1208  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19215     1209  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19216     120A  0086               	movwf	6
 19217     120B  0187               	clrf	7
 19218     120C  0801               	movf	1,w
 19219     120D  00F1               	movwf	EUSART2_Write@txData
 19220     120E  3002               	movlw	low ((_uart+2)| (0+32768))
 19221     120F  0084               	movwf	4
 19222     1210  3098               	movlw	high ((_uart+2)| (0+32768))
 19223     1211  0085               	movwf	5
 19224     1212  3F01               	moviw [1]fsr0
 19225     1213  008A               	movwf	10
 19226     1214  3F00               	moviw [0]fsr0
 19227     1215  000A               	callw
 19228     1216  3191               	pagesel	$
 19229     1217                     l13931:
 19230                           
 19231                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19232     1217  3001               	movlw	1
 19233     1218  00F6               	movwf	??_rn487x_PrintMessage
 19234     1219  0876               	movf	??_rn487x_PrintMessage,w
 19235     121A  0140               	movlb	0	; select bank0
 19236     121B  07C1               	addwf	rn487x_PrintMessage@messageIndex,f
 19237     121C                     l13933:
 19238     121C  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19239     121D  00F1               	movwf	strlen@s
 19240     121E  39FF               	andlw	255
 19241     121F  1D03               	skipz
 19242     1220  3003               	movlw	3
 19243     1221  00F2               	movwf	strlen@s+1
 19244     1222  319D  2589  3191   	fcall	_strlen
 19245     1225  0140               	movlb	0	; select bank0
 19246     1226  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19247     1227  00F6               	movwf	??_rn487x_PrintMessage
 19248     1228  01F7               	clrf	??_rn487x_PrintMessage+1
 19249     1229  0872               	movf	?_strlen+1,w
 19250     122A  0277               	subwf	??_rn487x_PrintMessage+1,w
 19251     122B  1D03               	skipz
 19252     122C  2A2F               	goto	u11955
 19253     122D  0871               	movf	?_strlen,w
 19254     122E  0276               	subwf	??_rn487x_PrintMessage,w
 19255     122F                     u11955:
 19256     122F  1C03               	skipc
 19257     1230  2A32               	goto	u11951
 19258     1231  2A33               	goto	u11950
 19259     1232                     u11951:
 19260     1232  2A08               	goto	l13929
 19261     1233                     u11950:
 19262     1233                     l848:
 19263     1233  0008               	return
 19264     1234                     __end_of_rn487x_PrintMessage:
 19265                           
 19266                           	psect	text51
 19267     1C4F                     __ptext51:	
 19268 ;; *************** function _strcpy *****************
 19269 ;; Defined at:
 19270 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;  dest            1    wreg     PTR unsigned char 
 19273 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19274 ;;  src             1    1[COMMON] PTR const unsigned char 
 19275 ;;		 -> statusBuffer@main$F3781(80), statusBuffer(80), NULL(0), 
 19276 ;; Auto vars:     Size  Location     Type
 19277 ;;  dest            1    3[COMMON] PTR unsigned char 
 19278 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19279 ;;  d               1    2[COMMON] PTR unsigned char 
 19280 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      PTR unsigned char 
 19283 ;; Registers used:
 19284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;Total ram usage:        3 bytes
 19295 ;; Hardware stack levels used: 1
 19296 ;; Hardware stack levels required when called: 4
 19297 ;; This function calls:
 19298 ;;		Nothing
 19299 ;; This function is called by:
 19300 ;;		_rn487x_PrintMessage
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304     1C4F                     _strcpy:	
 19305                           ;psect for function _strcpy
 19306                           
 19307                           
 19308                           ;incstack = 0
 19309                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19310                           ;strcpy@dest stored from wreg
 19311     1C4F  00F3               	movwf	strcpy@dest
 19312     1C50                     l13785:
 19313     1C50  0873               	movf	strcpy@dest,w
 19314     1C51  00F2               	movwf	strcpy@d
 19315     1C52                     l13787:
 19316     1C52  0872               	movf	strcpy@d,w
 19317     1C53  0086               	movwf	6
 19318     1C54  0187               	clrf	7
 19319     1C55  0AF2               	incf	strcpy@d,f
 19320     1C56  0871               	movf	strcpy@src,w
 19321     1C57  0084               	movwf	4
 19322     1C58  3003               	movlw	3	; select bank6/7
 19323     1C59  0085               	movwf	5
 19324     1C5A  0AF1               	incf	strcpy@src,f
 19325     1C5B  0800               	movf	0,w
 19326     1C5C  3FC0               	movwi [0]fsr1
 19327     1C5D  0889               	movf	9,f
 19328     1C5E  1D03               	btfss	3,2
 19329     1C5F  2C61               	goto	u11791
 19330     1C60  2C62               	goto	u11790
 19331     1C61                     u11791:
 19332     1C61  2C52               	goto	l13787
 19333     1C62                     u11790:
 19334     1C62                     l3286:
 19335     1C62  0008               	return
 19336     1C63                     __end_of_strcpy:
 19337                           
 19338                           	psect	text52
 19339     1ECF                     __ptext52:	
 19340 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19341 ;; Defined at:
 19342 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  messageType     1    wreg     enum E12962
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;  messageType     1    3[COMMON] enum E12962
 19347 ;; Return value:  Size  Location     Type
 19348 ;;                  1    wreg      void 
 19349 ;; Registers used:
 19350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19351 ;; Tracked objects:
 19352 ;;		On entry : 0/0
 19353 ;;		On exit  : 0/0
 19354 ;;		Unchanged: 0/0
 19355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19360 ;;Total ram usage:        1 bytes
 19361 ;; Hardware stack levels used: 1
 19362 ;; Hardware stack levels required when called: 5
 19363 ;; This function calls:
 19364 ;;		_EUSART1_Write
 19365 ;;		_EUSART2_Write
 19366 ;; This function is called by:
 19367 ;;		_RN487X_MessageHandler
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371     1ECF                     _rn487x_PrintIndicatorCharacters:	
 19372                           ;psect for function _rn487x_PrintIndicatorCharacters
 19373                           
 19374                           
 19375                           ;incstack = 0
 19376                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19377                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19378     1ECF  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19379     1ED0                     l13917:
 19380                           
 19381                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19382     1ED0  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19383     1ED1  1D03               	btfss	3,2
 19384     1ED2  2ED4               	goto	u11931
 19385     1ED3  2ED5               	goto	u11930
 19386     1ED4                     u11931:
 19387     1ED4  2EE1               	goto	l13921
 19388     1ED5                     u11930:
 19389     1ED5                     l13919:
 19390                           
 19391                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19392     1ED5  305B               	movlw	91
 19393     1ED6  00F1               	movwf	EUSART2_Write@txData
 19394     1ED7  3002               	movlw	low ((_uart+2)| (0+32768))
 19395     1ED8  0084               	movwf	4
 19396     1ED9  3098               	movlw	high ((_uart+2)| (0+32768))
 19397     1EDA  0085               	movwf	5
 19398     1EDB  3F01               	moviw [1]fsr0
 19399     1EDC  008A               	movwf	10
 19400     1EDD  3F00               	moviw [0]fsr0
 19401     1EDE  000A               	callw
 19402     1EDF  319E               	pagesel	$
 19403                           
 19404                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19405     1EE0  2EF1               	goto	l842
 19406     1EE1                     l13921:
 19407     1EE1  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19408     1EE2  1D03               	btfss	3,2
 19409     1EE3  2EE5               	goto	u11941
 19410     1EE4  2EE6               	goto	u11940
 19411     1EE5                     u11941:
 19412     1EE5  2EF1               	goto	l842
 19413     1EE6                     u11940:
 19414     1EE6                     l13923:
 19415                           
 19416                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19417     1EE6  305D               	movlw	93
 19418     1EE7  00F1               	movwf	EUSART2_Write@txData
 19419     1EE8  3002               	movlw	low ((_uart+2)| (0+32768))
 19420     1EE9  0084               	movwf	4
 19421     1EEA  3098               	movlw	high ((_uart+2)| (0+32768))
 19422     1EEB  0085               	movwf	5
 19423     1EEC  3F01               	moviw [1]fsr0
 19424     1EED  008A               	movwf	10
 19425     1EEE  3F00               	moviw [0]fsr0
 19426     1EEF  000A               	callw
 19427     1EF0  319E               	pagesel	$
 19428     1EF1                     l842:	
 19429                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19430                           
 19431     1EF1  0008               	return
 19432     1EF2                     __end_of_rn487x_PrintIndicatorCharacters:
 19433                           
 19434                           	psect	text53
 19435     1973                     __ptext53:	
 19436 ;; *************** function _RN487X_IsConnected *****************
 19437 ;; Defined at:
 19438 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19439 ;; Parameters:    Size  Location     Type
 19440 ;;		None
 19441 ;; Auto vars:     Size  Location     Type
 19442 ;;		None
 19443 ;; Return value:  Size  Location     Type
 19444 ;;                  1    wreg      _Bool 
 19445 ;; Registers used:
 19446 ;;		wreg
 19447 ;; Tracked objects:
 19448 ;;		On entry : 0/0
 19449 ;;		On exit  : 0/0
 19450 ;;		Unchanged: 0/0
 19451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19456 ;;Total ram usage:        0 bytes
 19457 ;; Hardware stack levels used: 1
 19458 ;; Hardware stack levels required when called: 4
 19459 ;; This function calls:
 19460 ;;		Nothing
 19461 ;; This function is called by:
 19462 ;;		_main
 19463 ;;		_RN487X_Example_TransparentUart
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467     1973                     _RN487X_IsConnected:	
 19468                           ;psect for function _RN487X_IsConnected
 19469                           
 19470     1973                     l10939:	
 19471                           ;incstack = 0
 19472                           ; Regs used in _RN487X_IsConnected: [wreg]
 19473                           
 19474                           
 19475                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19476     1973  0141               	movlb	1	; select bank1
 19477     1974  085B               	movf	_connected^(0+128),w
 19478     1975                     l783:
 19479     1975  0008               	return
 19480     1976                     __end_of_RN487X_IsConnected:
 19481                           
 19482                           	psect	text54
 19483     097D                     __ptext54:	
 19484 ;; *************** function _RN487X_Init *****************
 19485 ;; Defined at:
 19486 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19487 ;; Parameters:    Size  Location     Type
 19488 ;;		None
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;		None
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  1    wreg      _Bool 
 19493 ;; Registers used:
 19494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19495 ;; Tracked objects:
 19496 ;;		On entry : 0/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19504 ;;Total ram usage:        0 bytes
 19505 ;; Hardware stack levels used: 1
 19506 ;; Hardware stack levels required when called: 6
 19507 ;; This function calls:
 19508 ;;		_RN487X_Delay
 19509 ;;		_RN487X_IndicateRx
 19510 ;;		_RN487X_Read@rn487x_interface$F1379
 19511 ;;		_RN487X_Reset
 19512 ;;		_RN487X_SetSystemMode
 19513 ;;		_RN487X_is_rx_ready
 19514 ;; This function is called by:
 19515 ;;		_main
 19516 ;; This function uses a non-reentrant model
 19517 ;;
 19518                           
 19519     097D                     _RN487X_Init:	
 19520                           ;psect for function _RN487X_Init
 19521                           
 19522     097D                     l10953:	
 19523                           ;incstack = 0
 19524                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19525                           
 19526                           
 19527                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19528     097D  01F1               	clrf	RN487X_SetSystemMode@mode
 19529     097E  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19530     097F  304C               	movlw	low ((_RN487X+12)| (0+32768))
 19531     0980  0084               	movwf	4
 19532     0981  30A0               	movlw	high ((_RN487X+12)| (0+32768))
 19533     0982  0085               	movwf	5
 19534     0983  3F01               	moviw [1]fsr0
 19535     0984  008A               	movwf	10
 19536     0985  3F00               	moviw [0]fsr0
 19537     0986  000A               	callw
 19538     0987  3189               	pagesel	$
 19539                           
 19540                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19541     0988  01F1               	clrf	RN487X_Reset@value
 19542     0989  0AF1               	incf	RN487X_Reset@value,f
 19543     098A  304A               	movlw	low ((_RN487X+10)| (0+32768))
 19544     098B  0084               	movwf	4
 19545     098C  30A0               	movlw	high ((_RN487X+10)| (0+32768))
 19546     098D  0085               	movwf	5
 19547     098E  3F01               	moviw [1]fsr0
 19548     098F  008A               	movwf	10
 19549     0990  3F00               	moviw [0]fsr0
 19550     0991  000A               	callw
 19551     0992  3189               	pagesel	$
 19552                           
 19553                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19554     0993  3001               	movlw	1
 19555     0994  00F4               	movwf	RN487X_Delay@delayCount
 19556     0995  3000               	movlw	0
 19557     0996  00F5               	movwf	RN487X_Delay@delayCount+1
 19558     0997  304E               	movlw	low ((_RN487X+14)| (0+32768))
 19559     0998  0084               	movwf	4
 19560     0999  30A0               	movlw	high ((_RN487X+14)| (0+32768))
 19561     099A  0085               	movwf	5
 19562     099B  3F01               	moviw [1]fsr0
 19563     099C  008A               	movwf	10
 19564     099D  3F00               	moviw [0]fsr0
 19565     099E  000A               	callw
 19566     099F  3189               	pagesel	$
 19567                           
 19568                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19569     09A0  01F1               	clrf	RN487X_Reset@value
 19570     09A1  304A               	movlw	low ((_RN487X+10)| (0+32768))
 19571     09A2  0084               	movwf	4
 19572     09A3  30A0               	movlw	high ((_RN487X+10)| (0+32768))
 19573     09A4  0085               	movwf	5
 19574     09A5  3F01               	moviw [1]fsr0
 19575     09A6  008A               	movwf	10
 19576     09A7  3F00               	moviw [0]fsr0
 19577     09A8  000A               	callw
 19578     09A9  3189               	pagesel	$
 19579                           
 19580                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19581     09AA  01F1               	clrf	RN487X_IndicateRx@value
 19582     09AB  0AF1               	incf	RN487X_IndicateRx@value,f
 19583     09AC  3048               	movlw	low ((_RN487X+8)| (0+32768))
 19584     09AD  0084               	movwf	4
 19585     09AE  30A0               	movlw	high ((_RN487X+8)| (0+32768))
 19586     09AF  0085               	movwf	5
 19587     09B0  3F01               	moviw [1]fsr0
 19588     09B1  008A               	movwf	10
 19589     09B2  3F00               	moviw [0]fsr0
 19590     09B3  000A               	callw
 19591     09B4  3189               	pagesel	$
 19592                           
 19593                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19594     09B5  30C8               	movlw	200
 19595     09B6  00F4               	movwf	RN487X_Delay@delayCount
 19596     09B7  3000               	movlw	0
 19597     09B8  00F5               	movwf	RN487X_Delay@delayCount+1
 19598     09B9  304E               	movlw	low ((_RN487X+14)| (0+32768))
 19599     09BA  0084               	movwf	4
 19600     09BB  30A0               	movlw	high ((_RN487X+14)| (0+32768))
 19601     09BC  0085               	movwf	5
 19602     09BD  3F01               	moviw [1]fsr0
 19603     09BE  008A               	movwf	10
 19604     09BF  3F00               	moviw [0]fsr0
 19605     09C0  000A               	callw
 19606     09C1  3189               	pagesel	$
 19607                           
 19608                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19609     09C2  29CC               	goto	l10957
 19610     09C3                     l10955:
 19611                           
 19612                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19613     09C3  3042               	movlw	low ((_RN487X+2)| (0+32768))
 19614     09C4  0084               	movwf	4
 19615     09C5  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 19616     09C6  0085               	movwf	5
 19617     09C7  3F01               	moviw [1]fsr0
 19618     09C8  008A               	movwf	10
 19619     09C9  3F00               	moviw [0]fsr0
 19620     09CA  000A               	callw
 19621     09CB  3189               	pagesel	$
 19622     09CC                     l10957:
 19623                           
 19624                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19625     09CC  3046               	movlw	low ((_RN487X+6)| (0+32768))
 19626     09CD  0084               	movwf	4
 19627     09CE  30A0               	movlw	high ((_RN487X+6)| (0+32768))
 19628     09CF  0085               	movwf	5
 19629     09D0  3F01               	moviw [1]fsr0
 19630     09D1  008A               	movwf	10
 19631     09D2  3F00               	moviw [0]fsr0
 19632     09D3  000A               	callw
 19633     09D4  3189               	pagesel	$
 19634     09D5  3A00               	xorlw	0
 19635     09D6  1D03               	skipz
 19636     09D7  29D9               	goto	u8891
 19637     09D8  29DA               	goto	u8890
 19638     09D9                     u8891:
 19639     09D9  29C3               	goto	l10955
 19640     09DA                     u8890:
 19641     09DA                     l879:
 19642     09DA  0008               	return
 19643     09DB                     __end_of_RN487X_Init:
 19644                           
 19645                           	psect	text55
 19646     1AA7                     __ptext55:	
 19647 ;; *************** function _RN487X_is_rx_ready *****************
 19648 ;; Defined at:
 19649 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;		None
 19652 ;; Auto vars:     Size  Location     Type
 19653 ;;		None
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1    wreg      _Bool 
 19656 ;; Registers used:
 19657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/0
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19667 ;;Total ram usage:        0 bytes
 19668 ;; Hardware stack levels used: 1
 19669 ;; Hardware stack levels required when called: 5
 19670 ;; This function calls:
 19671 ;;		_EUSART1_is_rx_ready
 19672 ;;		_EUSART2_is_rx_ready
 19673 ;; This function is called by:
 19674 ;;		_RN487X_DataReady
 19675 ;;		_RN487X_Init
 19676 ;; This function uses a non-reentrant model
 19677 ;;
 19678                           
 19679     1AA7                     _RN487X_is_rx_ready:	
 19680                           ;psect for function _RN487X_is_rx_ready
 19681                           
 19682     1AA7                     l9255:	
 19683                           ;incstack = 0
 19684                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19685                           
 19686                           
 19687                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19688     1AA7  301A               	movlw	low ((_uart+26)| (0+32768))
 19689     1AA8  0084               	movwf	4
 19690     1AA9  3098               	movlw	high ((_uart+26)| (0+32768))
 19691     1AAA  0085               	movwf	5
 19692     1AAB  3F01               	moviw [1]fsr0
 19693     1AAC  008A               	movwf	10
 19694     1AAD  3F00               	moviw [0]fsr0
 19695     1AAE  000A               	callw
 19696     1AAF  319A               	pagesel	$
 19697     1AB0                     l795:
 19698     1AB0  0008               	return
 19699     1AB1                     __end_of_RN487X_is_rx_ready:
 19700                           
 19701                           	psect	text56
 19702     1A81                     __ptext56:	
 19703 ;; *************** function _EUSART1_is_rx_ready *****************
 19704 ;; Defined at:
 19705 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;		None
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;		None
 19710 ;; Return value:  Size  Location     Type
 19711 ;;                  1    wreg      _Bool 
 19712 ;; Registers used:
 19713 ;;		wreg, status,2, status,0
 19714 ;; Tracked objects:
 19715 ;;		On entry : 0/0
 19716 ;;		On exit  : 0/0
 19717 ;;		Unchanged: 0/0
 19718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;Total ram usage:        0 bytes
 19724 ;; Hardware stack levels used: 1
 19725 ;; Hardware stack levels required when called: 4
 19726 ;; This function calls:
 19727 ;;		Nothing
 19728 ;; This function is called by:
 19729 ;;		_RN487X_is_rx_ready
 19730 ;;		_RN487X_Example_TransparentUart
 19731 ;;		_main
 19732 ;; This function uses a non-reentrant model
 19733 ;;
 19734                           
 19735     1A81                     _EUSART1_is_rx_ready:	
 19736                           ;psect for function _EUSART1_is_rx_ready
 19737                           
 19738     1A81                     l9199:	
 19739                           ;incstack = 0
 19740                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19741                           
 19742                           
 19743                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19744     1A81  0141               	movlb	1	; select bank1
 19745     1A82  0849               	movf	_eusart1RxCount^(0+128),w	;volatile
 19746     1A83  1D03               	btfss	3,2
 19747     1A84  2A86               	goto	u6461
 19748     1A85  2A88               	goto	u6460
 19749     1A86                     u6461:
 19750     1A86  3001               	movlw	1
 19751     1A87  2A89               	goto	u6470
 19752     1A88                     u6460:
 19753     1A88  3000               	movlw	0
 19754     1A89                     u6470:
 19755     1A89                     l1201:
 19756     1A89  0008               	return
 19757     1A8A                     __end_of_EUSART1_is_rx_ready:
 19758                           
 19759                           	psect	text57
 19760     1A78                     __ptext57:	
 19761 ;; *************** function _EUSART2_is_rx_ready *****************
 19762 ;; Defined at:
 19763 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;		None
 19766 ;; Auto vars:     Size  Location     Type
 19767 ;;		None
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  1    wreg      _Bool 
 19770 ;; Registers used:
 19771 ;;		wreg, status,2, status,0
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/0
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19781 ;;Total ram usage:        0 bytes
 19782 ;; Hardware stack levels used: 1
 19783 ;; Hardware stack levels required when called: 4
 19784 ;; This function calls:
 19785 ;;		Nothing
 19786 ;; This function is called by:
 19787 ;;		_RN487X_is_rx_ready
 19788 ;;		_RN487X_Example_TransparentUart
 19789 ;;		_main
 19790 ;; This function uses a non-reentrant model
 19791 ;;
 19792                           
 19793     1A78                     _EUSART2_is_rx_ready:	
 19794                           ;psect for function _EUSART2_is_rx_ready
 19795                           
 19796     1A78                     l9195:	
 19797                           ;incstack = 0
 19798                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19799                           
 19800                           
 19801                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19802     1A78  0141               	movlb	1	; select bank1
 19803     1A79  0850               	movf	_eusart2RxCount^(0+128),w	;volatile
 19804     1A7A  1D03               	btfss	3,2
 19805     1A7B  2A7D               	goto	u6441
 19806     1A7C  2A7F               	goto	u6440
 19807     1A7D                     u6441:
 19808     1A7D  3001               	movlw	1
 19809     1A7E  2A80               	goto	u6450
 19810     1A7F                     u6440:
 19811     1A7F  3000               	movlw	0
 19812     1A80                     u6450:
 19813     1A80                     l1057:
 19814     1A80  0008               	return
 19815     1A81                     __end_of_EUSART2_is_rx_ready:
 19816                           
 19817                           	psect	text58
 19818     1B14                     __ptext58:	
 19819 ;; *************** function _RN487X_SetSystemMode *****************
 19820 ;; Defined at:
 19821 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;  mode            1    1[COMMON] enum E204
 19824 ;; Auto vars:     Size  Location     Type
 19825 ;;		None
 19826 ;; Return value:  Size  Location     Type
 19827 ;;                  1    wreg      void 
 19828 ;; Registers used:
 19829 ;;		wreg, status,2, status,0
 19830 ;; Tracked objects:
 19831 ;;		On entry : 0/0
 19832 ;;		On exit  : 0/0
 19833 ;;		Unchanged: 0/0
 19834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19835 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;Total ram usage:        1 bytes
 19840 ;; Hardware stack levels used: 1
 19841 ;; Hardware stack levels required when called: 4
 19842 ;; This function calls:
 19843 ;;		Nothing
 19844 ;; This function is called by:
 19845 ;;		_RN487X_Init
 19846 ;; This function uses a non-reentrant model
 19847 ;;
 19848                           
 19849     1B14                     _RN487X_SetSystemMode:	
 19850                           ;psect for function _RN487X_SetSystemMode
 19851                           
 19852     1B14                     l819:	
 19853                           ;incstack = 0
 19854                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19855                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19856                           
 19857     1B14  0140               	movlb	0	; select bank0
 19858     1B15  1392               	bcf	18,7	;volatile
 19859     1B16                     l9901:
 19860                           
 19861                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19862     1B16  0371               	decf	RN487X_SetSystemMode@mode,w
 19863     1B17  1D03               	btfss	3,2
 19864     1B18  2B1A               	goto	u7691
 19865     1B19  2B1B               	goto	u7690
 19866     1B1A                     u7691:
 19867     1B1A  2B1D               	goto	l825
 19868     1B1B                     u7690:
 19869     1B1B                     l822:	
 19870                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19871                           
 19872     1B1B  1798               	bsf	24,7	;volatile
 19873     1B1C  2B1E               	goto	l827
 19874     1B1D                     l825:	
 19875                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19876                           
 19877     1B1D  1398               	bcf	24,7	;volatile
 19878     1B1E                     l827:	
 19879                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19880                           
 19881     1B1E  1792               	bsf	18,7	;volatile
 19882     1B1F                     l829:
 19883     1B1F  0008               	return
 19884     1B20                     __end_of_RN487X_SetSystemMode:
 19885                           
 19886                           	psect	text59
 19887     1AE6                     __ptext59:	
 19888 ;; *************** function _RN487X_Reset *****************
 19889 ;; Defined at:
 19890 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  value           1    1[COMMON] _Bool 
 19893 ;; Auto vars:     Size  Location     Type
 19894 ;;		None
 19895 ;; Return value:  Size  Location     Type
 19896 ;;                  1    wreg      void 
 19897 ;; Registers used:
 19898 ;;		wreg, status,2, status,0
 19899 ;; Tracked objects:
 19900 ;;		On entry : 0/0
 19901 ;;		On exit  : 0/0
 19902 ;;		Unchanged: 0/0
 19903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19908 ;;Total ram usage:        1 bytes
 19909 ;; Hardware stack levels used: 1
 19910 ;; Hardware stack levels required when called: 4
 19911 ;; This function calls:
 19912 ;;		Nothing
 19913 ;; This function is called by:
 19914 ;;		_RN487X_Init
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918     1AE6                     _RN487X_Reset:	
 19919                           ;psect for function _RN487X_Reset
 19920                           
 19921     1AE6                     l9897:	
 19922                           ;incstack = 0
 19923                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19924                           
 19925                           
 19926                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19927     1AE6  0371               	decf	RN487X_Reset@value,w
 19928     1AE7  1D03               	btfss	3,2
 19929     1AE8  2AEA               	goto	u7671
 19930     1AE9  2AEB               	goto	u7670
 19931     1AEA                     u7671:
 19932     1AEA  2AEE               	goto	l805
 19933     1AEB                     u7670:
 19934     1AEB                     l802:	
 19935                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19936                           
 19937     1AEB  0140               	movlb	0	; select bank0
 19938     1AEC  1018               	bcf	24,0	;volatile
 19939     1AED  2AF0               	goto	l807
 19940     1AEE                     l805:	
 19941                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19942                           
 19943     1AEE  0140               	movlb	0	; select bank0
 19944     1AEF  1418               	bsf	24,0	;volatile
 19945     1AF0                     l807:
 19946     1AF0  0008               	return
 19947     1AF1                     __end_of_RN487X_Reset:
 19948                           
 19949                           	psect	text60
 19950     1ADB                     __ptext60:	
 19951 ;; *************** function _RN487X_IndicateRx *****************
 19952 ;; Defined at:
 19953 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;  value           1    1[COMMON] _Bool 
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;		None
 19958 ;; Return value:  Size  Location     Type
 19959 ;;                  1    wreg      void 
 19960 ;; Registers used:
 19961 ;;		wreg, status,2, status,0
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19967 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19971 ;;Total ram usage:        1 bytes
 19972 ;; Hardware stack levels used: 1
 19973 ;; Hardware stack levels required when called: 4
 19974 ;; This function calls:
 19975 ;;		Nothing
 19976 ;; This function is called by:
 19977 ;;		_RN487X_Init
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981     1ADB                     _RN487X_IndicateRx:	
 19982                           ;psect for function _RN487X_IndicateRx
 19983                           
 19984     1ADB                     l9899:	
 19985                           ;incstack = 0
 19986                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19987                           
 19988                           
 19989                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 19990     1ADB  0371               	decf	RN487X_IndicateRx@value,w
 19991     1ADC  1D03               	btfss	3,2
 19992     1ADD  2ADF               	goto	u7681
 19993     1ADE  2AE0               	goto	u7680
 19994     1ADF                     u7681:
 19995     1ADF  2AE3               	goto	l814
 19996     1AE0                     u7680:
 19997     1AE0                     l811:	
 19998                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 19999                           
 20000     1AE0  0140               	movlb	0	; select bank0
 20001     1AE1  131A               	bcf	26,6	;volatile
 20002     1AE2  2AE5               	goto	l816
 20003     1AE3                     l814:	
 20004                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20005                           
 20006     1AE3  0140               	movlb	0	; select bank0
 20007     1AE4  171A               	bsf	26,6	;volatile
 20008     1AE5                     l816:
 20009     1AE5  0008               	return
 20010     1AE6                     __end_of_RN487X_IndicateRx:
 20011                           
 20012                           	psect	text61
 20013     1195                     __ptext61:	
 20014 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20015 ;; Defined at:
 20016 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20017 ;; Parameters:    Size  Location     Type
 20018 ;;		None
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;  payload         5    0[BANK3 ] unsigned char [5]
 20021 ;;  temperature     2    5[BANK3 ] short 
 20022 ;; Return value:  Size  Location     Type
 20023 ;;                  1    wreg      void 
 20024 ;; Registers used:
 20025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20026 ;; Tracked objects:
 20027 ;;		On entry : 0/0
 20028 ;;		On exit  : 0/0
 20029 ;;		Unchanged: 0/0
 20030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20034 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20035 ;;Total ram usage:        7 bytes
 20036 ;; Hardware stack levels used: 1
 20037 ;; Hardware stack levels required when called: 15
 20038 ;; This function calls:
 20039 ;;		_LIGHTBLUE_SendPacket
 20040 ;;		_LIGHTBLUE_SplitWord
 20041 ;;		___fltol
 20042 ;;		_getTemp
 20043 ;; This function is called by:
 20044 ;;		_main
 20045 ;; This function uses a non-reentrant model
 20046 ;;
 20047                           
 20048     1195                     _LIGHTBLUE_TemperatureSensor:	
 20049                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20050                           
 20051     1195                     l17301:	
 20052                           ;incstack = 0
 20053                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20054                           
 20055                           
 20056                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 315:     *payload = '\0';
 20057     1195  0143               	movlb	3	; select bank3
 20058     1196  01C7               	clrf	LIGHTBLUE_TemperatureSensor@payload^(0+384)
 20059     1197                     l17303:
 20060                           
 20061                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     temperature= getTemp();
 20062     1197  318A  2256  3191   	fcall	_getTemp
 20063     119A  0140               	movlb	0	; select bank0
 20064     119B  0857               	movf	?_getTemp+3,w
 20065     119C  00EC               	movwf	___fltol@f1+3
 20066     119D  0856               	movf	?_getTemp+2,w
 20067     119E  00EB               	movwf	___fltol@f1+2
 20068     119F  0855               	movf	?_getTemp+1,w
 20069     11A0  00EA               	movwf	___fltol@f1+1
 20070     11A1  0854               	movf	?_getTemp,w
 20071     11A2  00E9               	movwf	___fltol@f1
 20072     11A3  3189  21DB  3191   	fcall	___fltol
 20073     11A6  0140               	movlb	0	; select bank0
 20074     11A7  086A               	movf	?___fltol+1,w
 20075     11A8  0143               	movlb	3	; select bank3
 20076     11A9  00CD               	movwf	(LIGHTBLUE_TemperatureSensor@temperature+1)^(0+384)
 20077     11AA  0140               	movlb	0	; select bank0
 20078     11AB  0869               	movf	?___fltol,w
 20079     11AC  0143               	movlb	3	; select bank3
 20080     11AD  00CC               	movwf	LIGHTBLUE_TemperatureSensor@temperature^(0+384)
 20081     11AE                     l17305:
 20082                           
 20083                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 320:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20084     11AE  30C7               	movlw	low LIGHTBLUE_TemperatureSensor@payload
 20085     11AF  0140               	movlb	0	; select bank0
 20086     11B0  00A0               	movwf	LIGHTBLUE_SplitWord@payload
 20087     11B1  3001               	movlw	high LIGHTBLUE_TemperatureSensor@payload
 20088     11B2  00A1               	movwf	LIGHTBLUE_SplitWord@payload+1
 20089     11B3  0143               	movlb	3	; select bank3
 20090     11B4  084D               	movf	(LIGHTBLUE_TemperatureSensor@temperature+1)^(0+384),w
 20091     11B5  0140               	movlb	0	; select bank0
 20092     11B6  00A3               	movwf	LIGHTBLUE_SplitWord@value+1
 20093     11B7  0143               	movlb	3	; select bank3
 20094     11B8  084C               	movf	LIGHTBLUE_TemperatureSensor@temperature^(0+384),w
 20095     11B9  0140               	movlb	0	; select bank0
 20096     11BA  00A2               	movwf	LIGHTBLUE_SplitWord@value
 20097     11BB  319C  2477  3191   	fcall	_LIGHTBLUE_SplitWord
 20098     11BE                     l17307:
 20099                           
 20100                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 322:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20101     11BE  30C7               	movlw	low LIGHTBLUE_TemperatureSensor@payload
 20102     11BF  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20103     11C0  3001               	movlw	high LIGHTBLUE_TemperatureSensor@payload
 20104     11C1  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 20105     11C2  3054               	movlw	84
 20106     11C3  318B  235A  3191   	fcall	_LIGHTBLUE_SendPacket
 20107     11C6                     l124:
 20108     11C6  0008               	return
 20109     11C7                     __end_of_LIGHTBLUE_TemperatureSensor:
 20110                           
 20111                           	psect	text62
 20112     0A56                     __ptext62:	
 20113 ;; *************** function _getTemp *****************
 20114 ;; Defined at:
 20115 ;;		line 2335 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20116 ;; Parameters:    Size  Location     Type
 20117 ;;		None
 20118 ;; Auto vars:     Size  Location     Type
 20119 ;;  tempOut         4   61[BANK0 ] float 
 20120 ;;  databuffer      2   71[BANK0 ] unsigned char [2]
 20121 ;;  temp            2   69[BANK0 ] short 
 20122 ;; Return value:  Size  Location     Type
 20123 ;;                  4   52[BANK0 ] float 
 20124 ;; Registers used:
 20125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20126 ;; Tracked objects:
 20127 ;;		On entry : 0/0
 20128 ;;		On exit  : 0/0
 20129 ;;		Unchanged: 0/0
 20130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20132 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20133 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20134 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20135 ;;Total ram usage:       21 bytes
 20136 ;; Hardware stack levels used: 1
 20137 ;; Hardware stack levels required when called: 14
 20138 ;; This function calls:
 20139 ;;		___fladd
 20140 ;;		___fldiv
 20141 ;;		___xxtofl
 20142 ;;		_readRegisters
 20143 ;; This function is called by:
 20144 ;;		_LIGHTBLUE_TemperatureSensor
 20145 ;; This function uses a non-reentrant model
 20146 ;;
 20147                           
 20148     0A56                     _getTemp:	
 20149                           ;psect for function _getTemp
 20150                           
 20151     0A56                     l14517:	
 20152                           ;incstack = 0
 20153                           ; Regs used in _getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20154                           
 20155     0A56                     l14519:
 20156                           
 20157                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2338:     uint8_t data
      +                          buffer[2];;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2340:     re
      +                          adRegisters(TMAG5273_REG_T_MSB_RESULT, databuffer, 2);
 20158     0A56  3067               	movlw	(low (getTemp@databuffer| 0))& (0+255)
 20159     0A57  0140               	movlb	0	; select bank0
 20160     0A58  00A7               	movwf	readRegisters@dataBuffer
 20161     0A59  3002               	movlw	2
 20162     0A5A  00A8               	movwf	readRegisters@numBytes
 20163     0A5B  3010               	movlw	16
 20164     0A5C  319B  2373  318A   	fcall	_readRegisters
 20165     0A5F                     l14521:
 20166                           
 20167                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2342:     temp = (data
      +                          buffer[0] << 8) | (databuffer[1]);
 20168     0A5F  0140               	movlb	0	; select bank0
 20169     0A60  0868               	movf	getTemp@databuffer+1,w
 20170     0A61  00D8               	movwf	??_getTemp
 20171     0A62  01D9               	clrf	??_getTemp+1
 20172     0A63  0867               	movf	getTemp@databuffer,w
 20173     0A64  00DA               	movwf	??_getTemp+2
 20174     0A65  01DB               	clrf	??_getTemp+3
 20175     0A66  085A               	movf	??_getTemp+2,w
 20176     0A67  00DB               	movwf	??_getTemp+3
 20177     0A68  01DA               	clrf	??_getTemp+2
 20178     0A69  0858               	movf	??_getTemp,w
 20179     0A6A  045A               	iorwf	??_getTemp+2,w
 20180     0A6B  00E5               	movwf	getTemp@temp
 20181     0A6C  0859               	movf	??_getTemp+1,w
 20182     0A6D  045B               	iorwf	??_getTemp+3,w
 20183     0A6E  00E6               	movwf	getTemp@temp+1
 20184     0A6F                     l14523:
 20185                           
 20186                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2344:     float tempOu
      +                          t = 25 + (((float) temp - 17508) / (60.1));
 20187     0A6F  3042               	movlw	66
 20188     0A70  00BD               	movwf	___fldiv@a+3
 20189     0A71  3070               	movlw	112
 20190     0A72  00BC               	movwf	___fldiv@a+2
 20191     0A73  3066               	movlw	102
 20192     0A74  00BB               	movwf	___fldiv@a+1
 20193     0A75  3066               	movlw	102
 20194     0A76  00BA               	movwf	___fldiv@a
 20195     0A77  30C6               	movlw	198
 20196     0A78  00A9               	movwf	___fladd@b+3
 20197     0A79  3088               	movlw	136
 20198     0A7A  00A8               	movwf	___fladd@b+2
 20199     0A7B  30C8               	movlw	200
 20200     0A7C  00A7               	movwf	___fladd@b+1
 20201     0A7D  3000               	movlw	0
 20202     0A7E  00A6               	movwf	___fladd@b
 20203     0A7F  0865               	movf	getTemp@temp,w
 20204     0A80  00F1               	movwf	___xxtofl@val
 20205     0A81  0866               	movf	getTemp@temp+1,w
 20206     0A82  00F2               	movwf	___xxtofl@val+1
 20207     0A83  0D89               	rlf	9,f
 20208     0A84  3B89               	subwfb	9,f
 20209     0A85  0989               	comf	9,f
 20210     0A86  00F3               	movwf	___xxtofl@val+2
 20211     0A87  00F4               	movwf	___xxtofl@val+3
 20212     0A88  3001               	movlw	1
 20213     0A89  318D  252F  318A   	fcall	___xxtofl
 20214     0A8C  0874               	movf	?___xxtofl+3,w
 20215     0A8D  0140               	movlb	0	; select bank0
 20216     0A8E  00AD               	movwf	___fladd@a+3
 20217     0A8F  0873               	movf	?___xxtofl+2,w
 20218     0A90  00AC               	movwf	___fladd@a+2
 20219     0A91  0872               	movf	?___xxtofl+1,w
 20220     0A92  00AB               	movwf	___fladd@a+1
 20221     0A93  0871               	movf	?___xxtofl,w
 20222     0A94  00AA               	movwf	___fladd@a
 20223     0A95  3183  2378  318A   	fcall	___fladd
 20224     0A98  0140               	movlb	0	; select bank0
 20225     0A99  0829               	movf	?___fladd+3,w
 20226     0A9A  00C1               	movwf	___fldiv@b+3
 20227     0A9B  0828               	movf	?___fladd+2,w
 20228     0A9C  00C0               	movwf	___fldiv@b+2
 20229     0A9D  0827               	movf	?___fladd+1,w
 20230     0A9E  00BF               	movwf	___fldiv@b+1
 20231     0A9F  0826               	movf	?___fladd,w
 20232     0AA0  00BE               	movwf	___fldiv@b
 20233     0AA1  3185  2580  318A   	fcall	___fldiv
 20234     0AA4  0140               	movlb	0	; select bank0
 20235     0AA5  083D               	movf	?___fldiv+3,w
 20236     0AA6  00E4               	movwf	_getTemp$5396+3
 20237     0AA7  083C               	movf	?___fldiv+2,w
 20238     0AA8  00E3               	movwf	_getTemp$5396+2
 20239     0AA9  083B               	movf	?___fldiv+1,w
 20240     0AAA  00E2               	movwf	_getTemp$5396+1
 20241     0AAB  083A               	movf	?___fldiv,w
 20242     0AAC  00E1               	movwf	_getTemp$5396
 20243     0AAD                     l14525:
 20244                           
 20245                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2344:     float tempOu
      +                          t = 25 + (((float) temp - 17508) / (60.1));
 20246     0AAD  3041               	movlw	65
 20247     0AAE  00A9               	movwf	___fladd@b+3
 20248     0AAF  30C8               	movlw	200
 20249     0AB0  00A8               	movwf	___fladd@b+2
 20250     0AB1  3000               	movlw	0
 20251     0AB2  00A7               	movwf	___fladd@b+1
 20252     0AB3  3000               	movlw	0
 20253     0AB4  00A6               	movwf	___fladd@b
 20254     0AB5  0864               	movf	_getTemp$5396+3,w
 20255     0AB6  00AD               	movwf	___fladd@a+3
 20256     0AB7  0863               	movf	_getTemp$5396+2,w
 20257     0AB8  00AC               	movwf	___fladd@a+2
 20258     0AB9  0862               	movf	_getTemp$5396+1,w
 20259     0ABA  00AB               	movwf	___fladd@a+1
 20260     0ABB  0861               	movf	_getTemp$5396,w
 20261     0ABC  00AA               	movwf	___fladd@a
 20262     0ABD  3183  2378  318A   	fcall	___fladd
 20263     0AC0  0140               	movlb	0	; select bank0
 20264     0AC1  0829               	movf	?___fladd+3,w
 20265     0AC2  00E0               	movwf	getTemp@tempOut+3
 20266     0AC3  0828               	movf	?___fladd+2,w
 20267     0AC4  00DF               	movwf	getTemp@tempOut+2
 20268     0AC5  0827               	movf	?___fladd+1,w
 20269     0AC6  00DE               	movwf	getTemp@tempOut+1
 20270     0AC7  0826               	movf	?___fladd,w
 20271     0AC8  00DD               	movwf	getTemp@tempOut
 20272     0AC9                     l14527:
 20273                           
 20274                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2346:     return tempO
      +                          ut;
 20275     0AC9  0860               	movf	getTemp@tempOut+3,w
 20276     0ACA  00D7               	movwf	?_getTemp+3
 20277     0ACB  085F               	movf	getTemp@tempOut+2,w
 20278     0ACC  00D6               	movwf	?_getTemp+2
 20279     0ACD  085E               	movf	getTemp@tempOut+1,w
 20280     0ACE  00D5               	movwf	?_getTemp+1
 20281     0ACF  085D               	movf	getTemp@tempOut,w
 20282     0AD0  00D4               	movwf	?_getTemp
 20283     0AD1                     l2638:
 20284     0AD1  0008               	return
 20285     0AD2                     __end_of_getTemp:
 20286                           
 20287                           	psect	text63
 20288     1B73                     __ptext63:	
 20289 ;; *************** function _readRegisters *****************
 20290 ;; Defined at:
 20291 ;;		line 109 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;  regAddress      1    wreg     unsigned char 
 20294 ;;  dataBuffer      1    7[BANK0 ] PTR unsigned char 
 20295 ;;		 -> getTemp@databuffer(2), getManufacturerID@databuffer(2), readWakeUpAndSleepData@wakeupRegisterRead(8), 
 20296 ;;  numBytes        1    8[BANK0 ] unsigned char 
 20297 ;; Auto vars:     Size  Location     Type
 20298 ;;  regAddress      1   11[BANK0 ] unsigned char 
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      char 
 20301 ;; Registers used:
 20302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20303 ;; Tracked objects:
 20304 ;;		On entry : 0/0
 20305 ;;		On exit  : 0/0
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20310 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20311 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20312 ;;Total ram usage:        5 bytes
 20313 ;; Hardware stack levels used: 1
 20314 ;; Hardware stack levels required when called: 13
 20315 ;; This function calls:
 20316 ;;		_i2c_readNBytes
 20317 ;; This function is called by:
 20318 ;;		_getManufacturerID
 20319 ;;		_getTemp
 20320 ;;		_readWakeUpAndSleepData
 20321 ;; This function uses a non-reentrant model
 20322 ;;
 20323                           
 20324     1B73                     _readRegisters:	
 20325                           ;psect for function _readRegisters
 20326                           
 20327                           
 20328                           ;incstack = 0
 20329 ;; hardware stack exceeded
 20330                           ; Regs used in _readRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20331                           ;readRegisters@regAddress stored from wreg
 20332     1B73  0140               	movlb	0	; select bank0
 20333     1B74  00AB               	movwf	readRegisters@regAddress
 20334     1B75                     l14005:
 20335                           
 20336                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 128:     i2c_readNByte
      +                          s(regAddress,&dataBuffer,numBytes);
 20337     1B75  3027               	movlw	(low (readRegisters@dataBuffer| 0))& (0+255)
 20338     1B76  00A4               	movwf	i2c_readNBytes@data
 20339     1B77  0828               	movf	readRegisters@numBytes,w
 20340     1B78  00A9               	movwf	??_readRegisters
 20341     1B79  01AA               	clrf	??_readRegisters+1
 20342     1B7A  0829               	movf	??_readRegisters,w
 20343     1B7B  00A5               	movwf	i2c_readNBytes@len
 20344     1B7C  082A               	movf	??_readRegisters+1,w
 20345     1B7D  00A6               	movwf	i2c_readNBytes@len+1
 20346     1B7E  082B               	movf	readRegisters@regAddress,w
 20347     1B7F  319E  2649  319B   	fcall	_i2c_readNBytes
 20348     1B82                     l2124:
 20349     1B82  0008               	return
 20350     1B83                     __end_of_readRegisters:
 20351                           
 20352                           	psect	text64
 20353     1E49                     __ptext64:	
 20354 ;; *************** function _i2c_readNBytes *****************
 20355 ;; Defined at:
 20356 ;;		line 228 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20357 ;; Parameters:    Size  Location     Type
 20358 ;;  address         1    wreg     unsigned char 
 20359 ;;  data            1    4[BANK0 ] PTR void 
 20360 ;;		 -> readRegisters@dataBuffer(1), 
 20361 ;;  len             2    5[BANK0 ] unsigned int 
 20362 ;; Auto vars:     Size  Location     Type
 20363 ;;  address         1   11[COMMON] unsigned char 
 20364 ;; Return value:  Size  Location     Type
 20365 ;;                  1    wreg      void 
 20366 ;; Registers used:
 20367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20368 ;; Tracked objects:
 20369 ;;		On entry : 0/0
 20370 ;;		On exit  : 0/0
 20371 ;;		Unchanged: 0/0
 20372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20373 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20376 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20377 ;;Total ram usage:        4 bytes
 20378 ;; Hardware stack levels used: 1
 20379 ;; Hardware stack levels required when called: 12
 20380 ;; This function calls:
 20381 ;;		_I2C1_Close
 20382 ;;		_I2C1_MasterRead
 20383 ;;		_I2C1_Open
 20384 ;;		_I2C1_SetBuffer
 20385 ;; This function is called by:
 20386 ;;		_readRegisters
 20387 ;; This function uses a non-reentrant model
 20388 ;;
 20389                           
 20390     1E49                     _i2c_readNBytes:	
 20391                           ;psect for function _i2c_readNBytes
 20392                           
 20393                           
 20394                           ;incstack = 0
 20395 ;; hardware stack exceeded
 20396                           ; Regs used in _i2c_readNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20397                           ;i2c_readNBytes@address stored from wreg
 20398     1E49  00FB               	movwf	i2c_readNBytes@address
 20399     1E4A                     l13903:
 20400     1E4A                     l13905:	
 20401                           ;mcc_generated_files/drivers/i2c_simple_master.c: 228: void i2c_readNBytes(i2c1_address_
      +                          t address, void *data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 229:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 230:     while(!I2C1_Open(address));
 20402                           
 20403     1E4A  087B               	movf	i2c_readNBytes@address,w
 20404     1E4B  3191  21C7  319E   	fcall	_I2C1_Open
 20405     1E4E  3A00               	xorlw	0
 20406     1E4F  1903               	skipnz
 20407     1E50  2E52               	goto	u11911
 20408     1E51  2E53               	goto	u11910
 20409     1E52                     u11911:
 20410     1E52  2E4A               	goto	l13905
 20411     1E53                     u11910:
 20412     1E53                     l13907:
 20413                           
 20414                           ;mcc_generated_files/drivers/i2c_simple_master.c: 231:     I2C1_SetBuffer(data,len);
 20415     1E53  0140               	movlb	0	; select bank0
 20416     1E54  0826               	movf	i2c_readNBytes@len+1,w
 20417     1E55  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20418     1E56  0825               	movf	i2c_readNBytes@len,w
 20419     1E57  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20420     1E58  0824               	movf	i2c_readNBytes@data,w
 20421     1E59  319B  2346  319E   	fcall	_I2C1_SetBuffer
 20422     1E5C                     l13909:
 20423                           
 20424                           ;mcc_generated_files/drivers/i2c_simple_master.c: 232:     I2C1_MasterRead();
 20425     1E5C  3199  21D2  319E   	fcall	_I2C1_MasterRead
 20426     1E5F                     l13911:	
 20427                           ;mcc_generated_files/drivers/i2c_simple_master.c: 233:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20428                           
 20429     1E5F  319D  2510  319E   	fcall	_I2C1_Close
 20430     1E62  3A01               	xorlw	1
 20431     1E63  1903               	skipnz
 20432     1E64  2E66               	goto	u11921
 20433     1E65  2E67               	goto	u11920
 20434     1E66                     u11921:
 20435     1E66  2E5F               	goto	l13911
 20436     1E67                     u11920:
 20437     1E67                     l579:
 20438     1E67  0008               	return
 20439     1E68                     __end_of_i2c_readNBytes:
 20440                           
 20441                           	psect	text65
 20442     19D2                     __ptext65:	
 20443 ;; *************** function _I2C1_MasterRead *****************
 20444 ;; Defined at:
 20445 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;		None
 20448 ;; Auto vars:     Size  Location     Type
 20449 ;;		None
 20450 ;; Return value:  Size  Location     Type
 20451 ;;                  1    wreg      enum E358
 20452 ;; Registers used:
 20453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20454 ;; Tracked objects:
 20455 ;;		On entry : 0/0
 20456 ;;		On exit  : 0/0
 20457 ;;		Unchanged: 0/0
 20458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20463 ;;Total ram usage:        0 bytes
 20464 ;; Hardware stack levels used: 1
 20465 ;; Hardware stack levels required when called: 11
 20466 ;; This function calls:
 20467 ;;		_I2C1_MasterOperation
 20468 ;; This function is called by:
 20469 ;;		_i2c_readNBytes
 20470 ;;		_I2C1_ReadNBytes
 20471 ;; This function uses a non-reentrant model
 20472 ;;
 20473                           
 20474     19D2                     _I2C1_MasterRead:	
 20475                           ;psect for function _I2C1_MasterRead
 20476                           
 20477     19D2                     l13781:	
 20478                           ;incstack = 0
 20479 ;; hardware stack exceeded
 20480                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20481                           
 20482                           
 20483                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 20484     19D2  3001               	movlw	1
 20485     19D3  319E  2668  3199   	fcall	_I2C1_MasterOperation
 20486     19D6                     l1759:
 20487     19D6  0008               	return
 20488     19D7                     __end_of_I2C1_MasterRead:
 20489                           
 20490                           	psect	text66
 20491     0D2F                     __ptext66:	
 20492 ;; *************** function ___xxtofl *****************
 20493 ;; Defined at:
 20494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 20495 ;; Parameters:    Size  Location     Type
 20496 ;;  sign            1    wreg     unsigned char 
 20497 ;;  val             4    1[COMMON] long 
 20498 ;; Auto vars:     Size  Location     Type
 20499 ;;  sign            1    0[BANK0 ] unsigned char 
 20500 ;;  arg             4    2[BANK0 ] unsigned long 
 20501 ;;  exp             1    1[BANK0 ] unsigned char 
 20502 ;; Return value:  Size  Location     Type
 20503 ;;                  4    1[COMMON] unsigned char 
 20504 ;; Registers used:
 20505 ;;		wreg, status,2, status,0
 20506 ;; Tracked objects:
 20507 ;;		On entry : 0/0
 20508 ;;		On exit  : 0/0
 20509 ;;		Unchanged: 0/0
 20510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20512 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20514 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20515 ;;Total ram usage:       14 bytes
 20516 ;; Hardware stack levels used: 1
 20517 ;; Hardware stack levels required when called: 4
 20518 ;; This function calls:
 20519 ;;		Nothing
 20520 ;; This function is called by:
 20521 ;;		_getTemp
 20522 ;;		_readWakeUpAndSleepData
 20523 ;;		_setMagneticOffset1
 20524 ;;		_setMagneticOffset2
 20525 ;;		_setXThreshold
 20526 ;;		_setYThreshold
 20527 ;;		_setZThreshold
 20528 ;;		_getMagneticGain
 20529 ;;		_getMagneticOffset1
 20530 ;;		_getMagneticOffset2
 20531 ;;		_getXThreshold
 20532 ;;		_getYThreshold
 20533 ;;		_getZThreshold
 20534 ;;		_getTemperatureThreshold
 20535 ;;		_getXData
 20536 ;;		_getYData
 20537 ;;		_getZData
 20538 ;;		_getAngleResult
 20539 ;;		_getMagnitudeResult
 20540 ;; This function uses a non-reentrant model
 20541 ;;
 20542                           
 20543     0D2F                     ___xxtofl:	
 20544                           ;psect for function ___xxtofl
 20545                           
 20546                           
 20547                           ;incstack = 0
 20548                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 20549                           ;___xxtofl@sign stored from wreg
 20550     0D2F  0140               	movlb	0	; select bank0
 20551     0D30  00A0               	movwf	___xxtofl@sign
 20552     0D31                     l14451:
 20553     0D31  0820               	movf	___xxtofl@sign,w
 20554     0D32  1903               	btfsc	3,2
 20555     0D33  2D35               	goto	u12921
 20556     0D34  2D36               	goto	u12920
 20557     0D35                     u12921:
 20558     0D35  2D4A               	goto	l14457
 20559     0D36                     u12920:
 20560     0D36                     l14453:
 20561     0D36  1FF4               	btfss	___xxtofl@val+3,7
 20562     0D37  2D39               	goto	u12931
 20563     0D38  2D3A               	goto	u12930
 20564     0D39                     u12931:
 20565     0D39  2D4A               	goto	l14457
 20566     0D3A                     u12930:
 20567     0D3A                     l14455:
 20568     0D3A  0971               	comf	___xxtofl@val,w
 20569     0D3B  00A2               	movwf	___xxtofl@arg
 20570     0D3C  0972               	comf	___xxtofl@val+1,w
 20571     0D3D  00A3               	movwf	___xxtofl@arg+1
 20572     0D3E  0973               	comf	___xxtofl@val+2,w
 20573     0D3F  00A4               	movwf	___xxtofl@arg+2
 20574     0D40  0974               	comf	___xxtofl@val+3,w
 20575     0D41  00A5               	movwf	___xxtofl@arg+3
 20576     0D42  0AA2               	incf	___xxtofl@arg,f
 20577     0D43  1903               	skipnz
 20578     0D44  0AA3               	incf	___xxtofl@arg+1,f
 20579     0D45  1903               	skipnz
 20580     0D46  0AA4               	incf	___xxtofl@arg+2,f
 20581     0D47  1903               	skipnz
 20582     0D48  0AA5               	incf	___xxtofl@arg+3,f
 20583     0D49  2D52               	goto	l3265
 20584     0D4A                     l14457:
 20585     0D4A  0874               	movf	___xxtofl@val+3,w
 20586     0D4B  00A5               	movwf	___xxtofl@arg+3
 20587     0D4C  0873               	movf	___xxtofl@val+2,w
 20588     0D4D  00A4               	movwf	___xxtofl@arg+2
 20589     0D4E  0872               	movf	___xxtofl@val+1,w
 20590     0D4F  00A3               	movwf	___xxtofl@arg+1
 20591     0D50  0871               	movf	___xxtofl@val,w
 20592     0D51  00A2               	movwf	___xxtofl@arg
 20593     0D52                     l3265:
 20594     0D52  0874               	movf	___xxtofl@val+3,w
 20595     0D53  0473               	iorwf	___xxtofl@val+2,w
 20596     0D54  0472               	iorwf	___xxtofl@val+1,w
 20597     0D55  0471               	iorwf	___xxtofl@val,w
 20598     0D56  1D03               	skipz
 20599     0D57  2D59               	goto	u12941
 20600     0D58  2D5A               	goto	u12940
 20601     0D59                     u12941:
 20602     0D59  2D63               	goto	l14463
 20603     0D5A                     u12940:
 20604     0D5A                     l14459:
 20605     0D5A  3000               	movlw	0
 20606     0D5B  00F4               	movwf	?___xxtofl+3
 20607     0D5C  3000               	movlw	0
 20608     0D5D  00F3               	movwf	?___xxtofl+2
 20609     0D5E  3000               	movlw	0
 20610     0D5F  00F2               	movwf	?___xxtofl+1
 20611     0D60  3000               	movlw	0
 20612     0D61  00F1               	movwf	?___xxtofl
 20613     0D62  2DD9               	goto	l3267
 20614     0D63                     l14463:
 20615     0D63  3096               	movlw	150
 20616     0D64  00A1               	movwf	___xxtofl@exp
 20617     0D65  2D71               	goto	l14467
 20618     0D66                     l14465:
 20619     0D66  3001               	movlw	1
 20620     0D67  00F5               	movwf	??___xxtofl
 20621     0D68  0875               	movf	??___xxtofl,w
 20622     0D69  07A1               	addwf	___xxtofl@exp,f
 20623     0D6A  3001               	movlw	1
 20624     0D6B                     u12955:
 20625     0D6B  36A5               	lsrf	___xxtofl@arg+3,f
 20626     0D6C  0CA4               	rrf	___xxtofl@arg+2,f
 20627     0D6D  0CA3               	rrf	___xxtofl@arg+1,f
 20628     0D6E  0CA2               	rrf	___xxtofl@arg,f
 20629     0D6F  0B89               	decfsz	9,f
 20630     0D70  2D6B               	goto	u12955
 20631     0D71                     l14467:
 20632     0D71  30FE               	movlw	254
 20633     0D72  0525               	andwf	___xxtofl@arg+3,w
 20634     0D73  1D03               	btfss	3,2
 20635     0D74  2D76               	goto	u12961
 20636     0D75  2D77               	goto	u12960
 20637     0D76                     u12961:
 20638     0D76  2D66               	goto	l14465
 20639     0D77                     u12960:
 20640     0D77  2D8B               	goto	l3271
 20641     0D78                     l14469:
 20642     0D78  3001               	movlw	1
 20643     0D79  00F5               	movwf	??___xxtofl
 20644     0D7A  0875               	movf	??___xxtofl,w
 20645     0D7B  07A1               	addwf	___xxtofl@exp,f
 20646     0D7C                     l14471:
 20647     0D7C  3001               	movlw	1
 20648     0D7D  07A2               	addwf	___xxtofl@arg,f
 20649     0D7E  3000               	movlw	0
 20650     0D7F  3DA3               	addwfc	___xxtofl@arg+1,f
 20651     0D80  3000               	movlw	0
 20652     0D81  3DA4               	addwfc	___xxtofl@arg+2,f
 20653     0D82  3000               	movlw	0
 20654     0D83  3DA5               	addwfc	___xxtofl@arg+3,f
 20655     0D84                     l14473:
 20656     0D84  3001               	movlw	1
 20657     0D85                     u12975:
 20658     0D85  36A5               	lsrf	___xxtofl@arg+3,f
 20659     0D86  0CA4               	rrf	___xxtofl@arg+2,f
 20660     0D87  0CA3               	rrf	___xxtofl@arg+1,f
 20661     0D88  0CA2               	rrf	___xxtofl@arg,f
 20662     0D89  0B89               	decfsz	9,f
 20663     0D8A  2D85               	goto	u12975
 20664     0D8B                     l3271:
 20665     0D8B  30FF               	movlw	255
 20666     0D8C  0525               	andwf	___xxtofl@arg+3,w
 20667     0D8D  1D03               	btfss	3,2
 20668     0D8E  2D90               	goto	u12981
 20669     0D8F  2D91               	goto	u12980
 20670     0D90                     u12981:
 20671     0D90  2D78               	goto	l14469
 20672     0D91                     u12980:
 20673     0D91  2D9B               	goto	l14477
 20674     0D92                     l14475:
 20675     0D92  3001               	movlw	1
 20676     0D93  02A1               	subwf	___xxtofl@exp,f
 20677     0D94  3001               	movlw	1
 20678     0D95                     u12995:
 20679     0D95  35A2               	lslf	___xxtofl@arg,f
 20680     0D96  0DA3               	rlf	___xxtofl@arg+1,f
 20681     0D97  0DA4               	rlf	___xxtofl@arg+2,f
 20682     0D98  0DA5               	rlf	___xxtofl@arg+3,f
 20683     0D99  0B89               	decfsz	9,f
 20684     0D9A  2D95               	goto	u12995
 20685     0D9B                     l14477:
 20686     0D9B  1BA4               	btfsc	___xxtofl@arg+2,7
 20687     0D9C  2D9E               	goto	u13001
 20688     0D9D  2D9F               	goto	u13000
 20689     0D9E                     u13001:
 20690     0D9E  2DA5               	goto	l3278
 20691     0D9F                     u13000:
 20692     0D9F                     l14479:
 20693     0D9F  3002               	movlw	2
 20694     0DA0  0221               	subwf	___xxtofl@exp,w
 20695     0DA1  1803               	skipnc
 20696     0DA2  2DA4               	goto	u13011
 20697     0DA3  2DA5               	goto	u13010
 20698     0DA4                     u13011:
 20699     0DA4  2D92               	goto	l14475
 20700     0DA5                     u13010:
 20701     0DA5                     l3278:
 20702     0DA5  1821               	btfsc	___xxtofl@exp,0
 20703     0DA6  2DA8               	goto	u13021
 20704     0DA7  2DA9               	goto	u13020
 20705     0DA8                     u13021:
 20706     0DA8  2DB1               	goto	l3279
 20707     0DA9                     u13020:
 20708     0DA9                     l14481:
 20709     0DA9  30FF               	movlw	255
 20710     0DAA  05A2               	andwf	___xxtofl@arg,f
 20711     0DAB  30FF               	movlw	255
 20712     0DAC  05A3               	andwf	___xxtofl@arg+1,f
 20713     0DAD  307F               	movlw	127
 20714     0DAE  05A4               	andwf	___xxtofl@arg+2,f
 20715     0DAF  30FF               	movlw	255
 20716     0DB0  05A5               	andwf	___xxtofl@arg+3,f
 20717     0DB1                     l3279:
 20718     0DB1  1003               	clrc
 20719     0DB2  0CA1               	rrf	___xxtofl@exp,f
 20720     0DB3                     l14483:
 20721     0DB3  0821               	movf	___xxtofl@exp,w
 20722     0DB4  00F5               	movwf	??___xxtofl
 20723     0DB5  01F6               	clrf	??___xxtofl+1
 20724     0DB6  01F7               	clrf	??___xxtofl+2
 20725     0DB7  01F8               	clrf	??___xxtofl+3
 20726     0DB8  3018               	movlw	24
 20727     0DB9                     u13035:
 20728     0DB9  35F5               	lslf	??___xxtofl,f
 20729     0DBA  0DF6               	rlf	??___xxtofl+1,f
 20730     0DBB  0DF7               	rlf	??___xxtofl+2,f
 20731     0DBC  0DF8               	rlf	??___xxtofl+3,f
 20732     0DBD                     u13030:
 20733     0DBD  0B89               	decfsz	9,f
 20734     0DBE  2DB9               	goto	u13035
 20735     0DBF  0875               	movf	??___xxtofl,w
 20736     0DC0  04A2               	iorwf	___xxtofl@arg,f
 20737     0DC1  0876               	movf	??___xxtofl+1,w
 20738     0DC2  04A3               	iorwf	___xxtofl@arg+1,f
 20739     0DC3  0877               	movf	??___xxtofl+2,w
 20740     0DC4  04A4               	iorwf	___xxtofl@arg+2,f
 20741     0DC5  0878               	movf	??___xxtofl+3,w
 20742     0DC6  04A5               	iorwf	___xxtofl@arg+3,f
 20743     0DC7                     l14485:
 20744     0DC7  0820               	movf	___xxtofl@sign,w
 20745     0DC8  1903               	btfsc	3,2
 20746     0DC9  2DCB               	goto	u13041
 20747     0DCA  2DCC               	goto	u13040
 20748     0DCB                     u13041:
 20749     0DCB  2DD1               	goto	l14491
 20750     0DCC                     u13040:
 20751     0DCC                     l14487:
 20752     0DCC  1FF4               	btfss	___xxtofl@val+3,7
 20753     0DCD  2DCF               	goto	u13051
 20754     0DCE  2DD0               	goto	u13050
 20755     0DCF                     u13051:
 20756     0DCF  2DD1               	goto	l14491
 20757     0DD0                     u13050:
 20758     0DD0                     l14489:
 20759     0DD0  17A5               	bsf	___xxtofl@arg+3,7
 20760     0DD1                     l14491:
 20761     0DD1  0825               	movf	___xxtofl@arg+3,w
 20762     0DD2  00F4               	movwf	?___xxtofl+3
 20763     0DD3  0824               	movf	___xxtofl@arg+2,w
 20764     0DD4  00F3               	movwf	?___xxtofl+2
 20765     0DD5  0823               	movf	___xxtofl@arg+1,w
 20766     0DD6  00F2               	movwf	?___xxtofl+1
 20767     0DD7  0822               	movf	___xxtofl@arg,w
 20768     0DD8  00F1               	movwf	?___xxtofl
 20769     0DD9                     l3267:
 20770     0DD9  0008               	return
 20771     0DDA                     __end_of___xxtofl:
 20772                           
 20773                           	psect	text67
 20774     0580                     __ptext67:	
 20775 ;; *************** function ___fldiv *****************
 20776 ;; Defined at:
 20777 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 20778 ;; Parameters:    Size  Location     Type
 20779 ;;  a               4   26[BANK0 ] unsigned char 
 20780 ;;  b               4   30[BANK0 ] unsigned char 
 20781 ;; Auto vars:     Size  Location     Type
 20782 ;;  grs             4   46[BANK0 ] unsigned long 
 20783 ;;  rem             4   39[BANK0 ] unsigned long 
 20784 ;;  new_exp         2   44[BANK0 ] short 
 20785 ;;  aexp            1   51[BANK0 ] unsigned char 
 20786 ;;  bexp            1   50[BANK0 ] unsigned char 
 20787 ;;  sign            1   43[BANK0 ] unsigned char 
 20788 ;; Return value:  Size  Location     Type
 20789 ;;                  4   26[BANK0 ] unsigned char 
 20790 ;; Registers used:
 20791 ;;		wreg, status,2, status,0
 20792 ;; Tracked objects:
 20793 ;;		On entry : 0/0
 20794 ;;		On exit  : 0/0
 20795 ;;		Unchanged: 0/0
 20796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20798 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20799 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20800 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20801 ;;Total ram usage:       26 bytes
 20802 ;; Hardware stack levels used: 1
 20803 ;; Hardware stack levels required when called: 4
 20804 ;; This function calls:
 20805 ;;		Nothing
 20806 ;; This function is called by:
 20807 ;;		_getTemp
 20808 ;;		_readWakeUpAndSleepData
 20809 ;;		_setMagneticGain
 20810 ;;		_setMagneticOffset1
 20811 ;;		_setMagneticOffset2
 20812 ;;		_setXThreshold
 20813 ;;		_setYThreshold
 20814 ;;		_setZThreshold
 20815 ;;		_getXThreshold
 20816 ;;		_getYThreshold
 20817 ;;		_getZThreshold
 20818 ;;		_getXData
 20819 ;;		_getYData
 20820 ;;		_getZData
 20821 ;;		_getAngleResult
 20822 ;; This function uses a non-reentrant model
 20823 ;;
 20824                           
 20825     0580                     ___fldiv:	
 20826                           ;psect for function ___fldiv
 20827                           
 20828     0580                     l14311:	
 20829                           ;incstack = 0
 20830                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20831                           
 20832     0580  0140               	movlb	0	; select bank0
 20833     0581  0841               	movf	___fldiv@b+3,w
 20834     0582  3980               	andlw	128
 20835     0583  00CB               	movwf	___fldiv@sign
 20836     0584                     l14313:
 20837     0584  3541               	lslf	___fldiv@b+3,w
 20838     0585  00D2               	movwf	___fldiv@bexp
 20839     0586                     l14315:
 20840     0586  1FC0               	btfss	___fldiv@b+2,7
 20841     0587  2D89               	goto	u12631
 20842     0588  2D8A               	goto	u12630
 20843     0589                     u12631:
 20844     0589  2D8B               	goto	l14319
 20845     058A                     u12630:
 20846     058A                     l14317:
 20847     058A  1452               	bsf	___fldiv@bexp,0
 20848     058B                     l14319:
 20849     058B  0852               	movf	___fldiv@bexp,w
 20850     058C  1903               	btfsc	3,2
 20851     058D  2D8F               	goto	u12641
 20852     058E  2D90               	goto	u12640
 20853     058F                     u12641:
 20854     058F  2DA0               	goto	l14329
 20855     0590                     u12640:
 20856     0590                     l14321:
 20857     0590  0A52               	incf	___fldiv@bexp,w
 20858     0591  1D03               	btfss	3,2
 20859     0592  2D94               	goto	u12651
 20860     0593  2D95               	goto	u12650
 20861     0594                     u12651:
 20862     0594  2D9D               	goto	l14325
 20863     0595                     u12650:
 20864     0595                     l14323:
 20865     0595  3000               	movlw	0
 20866     0596  00C1               	movwf	___fldiv@b+3
 20867     0597  3000               	movlw	0
 20868     0598  00C0               	movwf	___fldiv@b+2
 20869     0599  3000               	movlw	0
 20870     059A  00BF               	movwf	___fldiv@b+1
 20871     059B  3000               	movlw	0
 20872     059C  00BE               	movwf	___fldiv@b
 20873     059D                     l14325:
 20874     059D  17C0               	bsf	___fldiv@b+2,7
 20875     059E                     l14327:
 20876     059E  01C1               	clrf	___fldiv@b+3
 20877     059F  2DA8               	goto	l14331
 20878     05A0                     l14329:
 20879     05A0  3000               	movlw	0
 20880     05A1  00C1               	movwf	___fldiv@b+3
 20881     05A2  3000               	movlw	0
 20882     05A3  00C0               	movwf	___fldiv@b+2
 20883     05A4  3000               	movlw	0
 20884     05A5  00BF               	movwf	___fldiv@b+1
 20885     05A6  3000               	movlw	0
 20886     05A7  00BE               	movwf	___fldiv@b
 20887     05A8                     l14331:
 20888     05A8  083D               	movf	___fldiv@a+3,w
 20889     05A9  3980               	andlw	128
 20890     05AA  00C2               	movwf	??___fldiv
 20891     05AB  0842               	movf	??___fldiv,w
 20892     05AC  06CB               	xorwf	___fldiv@sign,f
 20893     05AD                     l14333:
 20894     05AD  353D               	lslf	___fldiv@a+3,w
 20895     05AE  00D3               	movwf	___fldiv@aexp
 20896     05AF                     l14335:
 20897     05AF  1FBC               	btfss	___fldiv@a+2,7
 20898     05B0  2DB2               	goto	u12661
 20899     05B1  2DB3               	goto	u12660
 20900     05B2                     u12661:
 20901     05B2  2DB4               	goto	l14339
 20902     05B3                     u12660:
 20903     05B3                     l14337:
 20904     05B3  1453               	bsf	___fldiv@aexp,0
 20905     05B4                     l14339:
 20906     05B4  0853               	movf	___fldiv@aexp,w
 20907     05B5  1903               	btfsc	3,2
 20908     05B6  2DB8               	goto	u12671
 20909     05B7  2DB9               	goto	u12670
 20910     05B8                     u12671:
 20911     05B8  2DC9               	goto	l14349
 20912     05B9                     u12670:
 20913     05B9                     l14341:
 20914     05B9  0A53               	incf	___fldiv@aexp,w
 20915     05BA  1D03               	btfss	3,2
 20916     05BB  2DBD               	goto	u12681
 20917     05BC  2DBE               	goto	u12680
 20918     05BD                     u12681:
 20919     05BD  2DC6               	goto	l14345
 20920     05BE                     u12680:
 20921     05BE                     l14343:
 20922     05BE  3000               	movlw	0
 20923     05BF  00BD               	movwf	___fldiv@a+3
 20924     05C0  3000               	movlw	0
 20925     05C1  00BC               	movwf	___fldiv@a+2
 20926     05C2  3000               	movlw	0
 20927     05C3  00BB               	movwf	___fldiv@a+1
 20928     05C4  3000               	movlw	0
 20929     05C5  00BA               	movwf	___fldiv@a
 20930     05C6                     l14345:
 20931     05C6  17BC               	bsf	___fldiv@a+2,7
 20932     05C7                     l14347:
 20933     05C7  01BD               	clrf	___fldiv@a+3
 20934     05C8  2DD1               	goto	l3181
 20935     05C9                     l14349:
 20936     05C9  3000               	movlw	0
 20937     05CA  00BD               	movwf	___fldiv@a+3
 20938     05CB  3000               	movlw	0
 20939     05CC  00BC               	movwf	___fldiv@a+2
 20940     05CD  3000               	movlw	0
 20941     05CE  00BB               	movwf	___fldiv@a+1
 20942     05CF  3000               	movlw	0
 20943     05D0  00BA               	movwf	___fldiv@a
 20944     05D1                     l3181:
 20945     05D1  083D               	movf	___fldiv@a+3,w
 20946     05D2  043C               	iorwf	___fldiv@a+2,w
 20947     05D3  043B               	iorwf	___fldiv@a+1,w
 20948     05D4  043A               	iorwf	___fldiv@a,w
 20949     05D5  1D03               	skipz
 20950     05D6  2DD8               	goto	u12691
 20951     05D7  2DD9               	goto	u12690
 20952     05D8                     u12691:
 20953     05D8  2DF2               	goto	l14359
 20954     05D9                     u12690:
 20955     05D9                     l14351:
 20956     05D9  3000               	movlw	0
 20957     05DA  00C1               	movwf	___fldiv@b+3
 20958     05DB  3000               	movlw	0
 20959     05DC  00C0               	movwf	___fldiv@b+2
 20960     05DD  3000               	movlw	0
 20961     05DE  00BF               	movwf	___fldiv@b+1
 20962     05DF  3000               	movlw	0
 20963     05E0  00BE               	movwf	___fldiv@b
 20964     05E1  3080               	movlw	128
 20965     05E2  04C0               	iorwf	___fldiv@b+2,f
 20966     05E3  307F               	movlw	127
 20967     05E4  04C1               	iorwf	___fldiv@b+3,f
 20968     05E5                     l14353:
 20969     05E5  084B               	movf	___fldiv@sign,w
 20970     05E6  00C2               	movwf	??___fldiv
 20971     05E7  0842               	movf	??___fldiv,w
 20972     05E8  04C1               	iorwf	___fldiv@b+3,f
 20973     05E9                     l14355:
 20974     05E9  0841               	movf	___fldiv@b+3,w
 20975     05EA  00BD               	movwf	?___fldiv+3
 20976     05EB  0840               	movf	___fldiv@b+2,w
 20977     05EC  00BC               	movwf	?___fldiv+2
 20978     05ED  083F               	movf	___fldiv@b+1,w
 20979     05EE  00BB               	movwf	?___fldiv+1
 20980     05EF  083E               	movf	___fldiv@b,w
 20981     05F0  00BA               	movwf	?___fldiv
 20982     05F1  2F29               	goto	l3183
 20983     05F2                     l14359:
 20984     05F2  0852               	movf	___fldiv@bexp,w
 20985     05F3  1D03               	btfss	3,2
 20986     05F4  2DF6               	goto	u12701
 20987     05F5  2DF7               	goto	u12700
 20988     05F6                     u12701:
 20989     05F6  2E00               	goto	l14365
 20990     05F7                     u12700:
 20991     05F7                     l14361:
 20992     05F7  3000               	movlw	0
 20993     05F8  00BD               	movwf	?___fldiv+3
 20994     05F9  3000               	movlw	0
 20995     05FA  00BC               	movwf	?___fldiv+2
 20996     05FB  3000               	movlw	0
 20997     05FC  00BB               	movwf	?___fldiv+1
 20998     05FD  3000               	movlw	0
 20999     05FE  00BA               	movwf	?___fldiv
 21000     05FF  2F29               	goto	l3183
 21001     0600                     l14365:
 21002     0600  0852               	movf	___fldiv@bexp,w
 21003     0601  00C2               	movwf	??___fldiv
 21004     0602  01C3               	clrf	??___fldiv+1
 21005     0603  0843               	movf	??___fldiv+1,w
 21006     0604  00C5               	movwf	??___fldiv+3
 21007     0605  0853               	movf	___fldiv@aexp,w
 21008     0606  0242               	subwf	??___fldiv,w
 21009     0607  00C4               	movwf	??___fldiv+2
 21010     0608  1C03               	skipc
 21011     0609  03C5               	decf	??___fldiv+3,f
 21012     060A  0844               	movf	??___fldiv+2,w
 21013     060B  3E7F               	addlw	127
 21014     060C  00CC               	movwf	___fldiv@new_exp
 21015     060D  3000               	movlw	0
 21016     060E  3D45               	addwfc	??___fldiv+3,w
 21017     060F  00CD               	movwf	___fldiv@new_exp+1
 21018     0610                     l14367:
 21019     0610  0841               	movf	___fldiv@b+3,w
 21020     0611  00CA               	movwf	___fldiv@rem+3
 21021     0612  0840               	movf	___fldiv@b+2,w
 21022     0613  00C9               	movwf	___fldiv@rem+2
 21023     0614  083F               	movf	___fldiv@b+1,w
 21024     0615  00C8               	movwf	___fldiv@rem+1
 21025     0616  083E               	movf	___fldiv@b,w
 21026     0617  00C7               	movwf	___fldiv@rem
 21027     0618                     l14369:
 21028     0618  3000               	movlw	0
 21029     0619  00C1               	movwf	___fldiv@b+3
 21030     061A  3000               	movlw	0
 21031     061B  00C0               	movwf	___fldiv@b+2
 21032     061C  3000               	movlw	0
 21033     061D  00BF               	movwf	___fldiv@b+1
 21034     061E  3000               	movlw	0
 21035     061F  00BE               	movwf	___fldiv@b
 21036     0620                     l14371:
 21037     0620  3000               	movlw	0
 21038     0621  00D1               	movwf	___fldiv@grs+3
 21039     0622  3000               	movlw	0
 21040     0623  00D0               	movwf	___fldiv@grs+2
 21041     0624  3000               	movlw	0
 21042     0625  00CF               	movwf	___fldiv@grs+1
 21043     0626  3000               	movlw	0
 21044     0627  00CE               	movwf	___fldiv@grs
 21045     0628                     l14373:
 21046     0628  01D3               	clrf	___fldiv@aexp
 21047     0629  2E68               	goto	l14393
 21048     062A                     l14375:
 21049     062A  0853               	movf	___fldiv@aexp,w
 21050     062B  1903               	btfsc	3,2
 21051     062C  2E2E               	goto	u12711
 21052     062D  2E2F               	goto	u12710
 21053     062E                     u12711:
 21054     062E  2E49               	goto	l14385
 21055     062F                     u12710:
 21056     062F                     l14377:
 21057     062F  3001               	movlw	1
 21058     0630                     u12725:
 21059     0630  35C7               	lslf	___fldiv@rem,f
 21060     0631  0DC8               	rlf	___fldiv@rem+1,f
 21061     0632  0DC9               	rlf	___fldiv@rem+2,f
 21062     0633  0DCA               	rlf	___fldiv@rem+3,f
 21063     0634  0B89               	decfsz	9,f
 21064     0635  2E30               	goto	u12725
 21065     0636  3001               	movlw	1
 21066     0637                     u12735:
 21067     0637  35BE               	lslf	___fldiv@b,f
 21068     0638  0DBF               	rlf	___fldiv@b+1,f
 21069     0639  0DC0               	rlf	___fldiv@b+2,f
 21070     063A  0DC1               	rlf	___fldiv@b+3,f
 21071     063B  0B89               	decfsz	9,f
 21072     063C  2E37               	goto	u12735
 21073     063D                     l14379:
 21074     063D  1FD1               	btfss	___fldiv@grs+3,7
 21075     063E  2E40               	goto	u12741
 21076     063F  2E41               	goto	u12740
 21077     0640                     u12741:
 21078     0640  2E42               	goto	l14383
 21079     0641                     u12740:
 21080     0641                     l14381:
 21081     0641  143E               	bsf	___fldiv@b,0
 21082     0642                     l14383:
 21083     0642  3001               	movlw	1
 21084     0643                     u12755:
 21085     0643  35CE               	lslf	___fldiv@grs,f
 21086     0644  0DCF               	rlf	___fldiv@grs+1,f
 21087     0645  0DD0               	rlf	___fldiv@grs+2,f
 21088     0646  0DD1               	rlf	___fldiv@grs+3,f
 21089     0647  0B89               	decfsz	9,f
 21090     0648  2E43               	goto	u12755
 21091     0649                     l14385:
 21092     0649  083D               	movf	___fldiv@a+3,w
 21093     064A  024A               	subwf	___fldiv@rem+3,w
 21094     064B  1D03               	skipz
 21095     064C  2E57               	goto	u12765
 21096     064D  083C               	movf	___fldiv@a+2,w
 21097     064E  0249               	subwf	___fldiv@rem+2,w
 21098     064F  1D03               	skipz
 21099     0650  2E57               	goto	u12765
 21100     0651  083B               	movf	___fldiv@a+1,w
 21101     0652  0248               	subwf	___fldiv@rem+1,w
 21102     0653  1D03               	skipz
 21103     0654  2E57               	goto	u12765
 21104     0655  083A               	movf	___fldiv@a,w
 21105     0656  0247               	subwf	___fldiv@rem,w
 21106     0657                     u12765:
 21107     0657  1C03               	skipc
 21108     0658  2E5A               	goto	u12761
 21109     0659  2E5B               	goto	u12760
 21110     065A                     u12761:
 21111     065A  2E64               	goto	l14391
 21112     065B                     u12760:
 21113     065B                     l14387:
 21114     065B  1751               	bsf	___fldiv@grs+3,6
 21115     065C                     l14389:
 21116     065C  083A               	movf	___fldiv@a,w
 21117     065D  02C7               	subwf	___fldiv@rem,f
 21118     065E  083B               	movf	___fldiv@a+1,w
 21119     065F  3BC8               	subwfb	___fldiv@rem+1,f
 21120     0660  083C               	movf	___fldiv@a+2,w
 21121     0661  3BC9               	subwfb	___fldiv@rem+2,f
 21122     0662  083D               	movf	___fldiv@a+3,w
 21123     0663  3BCA               	subwfb	___fldiv@rem+3,f
 21124     0664                     l14391:
 21125     0664  3001               	movlw	1
 21126     0665  00C2               	movwf	??___fldiv
 21127     0666  0842               	movf	??___fldiv,w
 21128     0667  07D3               	addwf	___fldiv@aexp,f
 21129     0668                     l14393:
 21130     0668  301A               	movlw	26
 21131     0669  0253               	subwf	___fldiv@aexp,w
 21132     066A  1C03               	skipc
 21133     066B  2E6D               	goto	u12771
 21134     066C  2E6E               	goto	u12770
 21135     066D                     u12771:
 21136     066D  2E2A               	goto	l14375
 21137     066E                     u12770:
 21138     066E                     l14395:
 21139     066E  084A               	movf	___fldiv@rem+3,w
 21140     066F  0449               	iorwf	___fldiv@rem+2,w
 21141     0670  0448               	iorwf	___fldiv@rem+1,w
 21142     0671  0447               	iorwf	___fldiv@rem,w
 21143     0672  1903               	skipnz
 21144     0673  2E75               	goto	u12781
 21145     0674  2E76               	goto	u12780
 21146     0675                     u12781:
 21147     0675  2E8F               	goto	l14409
 21148     0676                     u12780:
 21149     0676                     l14397:
 21150     0676  144E               	bsf	___fldiv@grs,0
 21151     0677  2E8F               	goto	l14409
 21152     0678                     l14399:
 21153     0678  3001               	movlw	1
 21154     0679                     u12795:
 21155     0679  35BE               	lslf	___fldiv@b,f
 21156     067A  0DBF               	rlf	___fldiv@b+1,f
 21157     067B  0DC0               	rlf	___fldiv@b+2,f
 21158     067C  0DC1               	rlf	___fldiv@b+3,f
 21159     067D  0B89               	decfsz	9,f
 21160     067E  2E79               	goto	u12795
 21161     067F                     l14401:
 21162     067F  1FD1               	btfss	___fldiv@grs+3,7
 21163     0680  2E82               	goto	u12801
 21164     0681  2E83               	goto	u12800
 21165     0682                     u12801:
 21166     0682  2E84               	goto	l14405
 21167     0683                     u12800:
 21168     0683                     l14403:
 21169     0683  143E               	bsf	___fldiv@b,0
 21170     0684                     l14405:
 21171     0684  3001               	movlw	1
 21172     0685                     u12815:
 21173     0685  35CE               	lslf	___fldiv@grs,f
 21174     0686  0DCF               	rlf	___fldiv@grs+1,f
 21175     0687  0DD0               	rlf	___fldiv@grs+2,f
 21176     0688  0DD1               	rlf	___fldiv@grs+3,f
 21177     0689  0B89               	decfsz	9,f
 21178     068A  2E85               	goto	u12815
 21179     068B                     l14407:
 21180     068B  30FF               	movlw	255
 21181     068C  07CC               	addwf	___fldiv@new_exp,f
 21182     068D  30FF               	movlw	255
 21183     068E  3DCD               	addwfc	___fldiv@new_exp+1,f
 21184     068F                     l14409:
 21185     068F  1FC0               	btfss	___fldiv@b+2,7
 21186     0690  2E92               	goto	u12821
 21187     0691  2E93               	goto	u12820
 21188     0692                     u12821:
 21189     0692  2E78               	goto	l14399
 21190     0693                     u12820:
 21191     0693                     l14411:
 21192     0693  01D3               	clrf	___fldiv@aexp
 21193     0694                     l14413:
 21194     0694  1FD1               	btfss	___fldiv@grs+3,7
 21195     0695  2E97               	goto	u12831
 21196     0696  2E98               	goto	u12830
 21197     0697                     u12831:
 21198     0697  2EB4               	goto	l14421
 21199     0698                     u12830:
 21200     0698                     l14415:
 21201     0698  30FF               	movlw	255
 21202     0699  054E               	andwf	___fldiv@grs,w
 21203     069A  00C2               	movwf	??___fldiv
 21204     069B  30FF               	movlw	255
 21205     069C  054F               	andwf	___fldiv@grs+1,w
 21206     069D  00C3               	movwf	??___fldiv+1
 21207     069E  30FF               	movlw	255
 21208     069F  0550               	andwf	___fldiv@grs+2,w
 21209     06A0  00C4               	movwf	??___fldiv+2
 21210     06A1  307F               	movlw	127
 21211     06A2  0551               	andwf	___fldiv@grs+3,w
 21212     06A3  00C5               	movwf	??___fldiv+3
 21213     06A4  0845               	movf	??___fldiv+3,w
 21214     06A5  0444               	iorwf	??___fldiv+2,w
 21215     06A6  0443               	iorwf	??___fldiv+1,w
 21216     06A7  0442               	iorwf	??___fldiv,w
 21217     06A8  1903               	skipnz
 21218     06A9  2EAB               	goto	u12841
 21219     06AA  2EAC               	goto	u12840
 21220     06AB                     u12841:
 21221     06AB  2EAF               	goto	l3197
 21222     06AC                     u12840:
 21223     06AC                     l14417:
 21224     06AC  01D3               	clrf	___fldiv@aexp
 21225     06AD  0AD3               	incf	___fldiv@aexp,f
 21226     06AE  2EB4               	goto	l14421
 21227     06AF                     l3197:
 21228     06AF  1C3E               	btfss	___fldiv@b,0
 21229     06B0  2EB2               	goto	u12851
 21230     06B1  2EB3               	goto	u12850
 21231     06B2                     u12851:
 21232     06B2  2EB4               	goto	l14421
 21233     06B3                     u12850:
 21234     06B3  2EAC               	goto	l14417
 21235     06B4                     l14421:
 21236     06B4  0853               	movf	___fldiv@aexp,w
 21237     06B5  1903               	btfsc	3,2
 21238     06B6  2EB8               	goto	u12861
 21239     06B7  2EB9               	goto	u12860
 21240     06B8                     u12861:
 21241     06B8  2EE1               	goto	l14431
 21242     06B9                     u12860:
 21243     06B9                     l14423:
 21244     06B9  3001               	movlw	1
 21245     06BA  07BE               	addwf	___fldiv@b,f
 21246     06BB  3000               	movlw	0
 21247     06BC  3DBF               	addwfc	___fldiv@b+1,f
 21248     06BD  3000               	movlw	0
 21249     06BE  3DC0               	addwfc	___fldiv@b+2,f
 21250     06BF  3000               	movlw	0
 21251     06C0  3DC1               	addwfc	___fldiv@b+3,f
 21252     06C1                     l14425:
 21253     06C1  1C41               	btfss	___fldiv@b+3,0
 21254     06C2  2EC4               	goto	u12871
 21255     06C3  2EC5               	goto	u12870
 21256     06C4                     u12871:
 21257     06C4  2EE1               	goto	l14431
 21258     06C5                     u12870:
 21259     06C5                     l14427:
 21260     06C5  083E               	movf	___fldiv@b,w
 21261     06C6  00C2               	movwf	??___fldiv
 21262     06C7  083F               	movf	___fldiv@b+1,w
 21263     06C8  00C3               	movwf	??___fldiv+1
 21264     06C9  0840               	movf	___fldiv@b+2,w
 21265     06CA  00C4               	movwf	??___fldiv+2
 21266     06CB  0841               	movf	___fldiv@b+3,w
 21267     06CC  00C5               	movwf	??___fldiv+3
 21268     06CD  3001               	movlw	1
 21269     06CE  00C6               	movwf	??___fldiv+4
 21270     06CF                     u12885:
 21271     06CF  37C5               	asrf	??___fldiv+3,f
 21272     06D0  0CC4               	rrf	??___fldiv+2,f
 21273     06D1  0CC3               	rrf	??___fldiv+1,f
 21274     06D2  0CC2               	rrf	??___fldiv,f
 21275     06D3                     u12880:
 21276     06D3  0BC6               	decfsz	??___fldiv+4,f
 21277     06D4  2ECF               	goto	u12885
 21278     06D5  0845               	movf	??___fldiv+3,w
 21279     06D6  00C1               	movwf	___fldiv@b+3
 21280     06D7  0844               	movf	??___fldiv+2,w
 21281     06D8  00C0               	movwf	___fldiv@b+2
 21282     06D9  0843               	movf	??___fldiv+1,w
 21283     06DA  00BF               	movwf	___fldiv@b+1
 21284     06DB  0842               	movf	??___fldiv,w
 21285     06DC  00BE               	movwf	___fldiv@b
 21286     06DD                     l14429:
 21287     06DD  3001               	movlw	1
 21288     06DE  07CC               	addwf	___fldiv@new_exp,f
 21289     06DF  3000               	movlw	0
 21290     06E0  3DCD               	addwfc	___fldiv@new_exp+1,f
 21291     06E1                     l14431:
 21292     06E1  084D               	movf	___fldiv@new_exp+1,w
 21293     06E2  3A80               	xorlw	128
 21294     06E3  00C2               	movwf	??___fldiv
 21295     06E4  3080               	movlw	128
 21296     06E5  0242               	subwf	??___fldiv,w
 21297     06E6  1D03               	skipz
 21298     06E7  2EEA               	goto	u12895
 21299     06E8  30FF               	movlw	255
 21300     06E9  024C               	subwf	___fldiv@new_exp,w
 21301     06EA                     u12895:
 21302     06EA  1C03               	skipc
 21303     06EB  2EED               	goto	u12891
 21304     06EC  2EEE               	goto	u12890
 21305     06ED                     u12891:
 21306     06ED  2EFB               	goto	l3202
 21307     06EE                     u12890:
 21308     06EE                     l14433:
 21309     06EE  30FF               	movlw	255
 21310     06EF  0140               	movlb	0	; select bank0
 21311     06F0  00CC               	movwf	___fldiv@new_exp
 21312     06F1  3000               	movlw	0
 21313     06F2  00CD               	movwf	___fldiv@new_exp+1
 21314     06F3  3000               	movlw	0
 21315     06F4  00C1               	movwf	___fldiv@b+3
 21316     06F5  3000               	movlw	0
 21317     06F6  00C0               	movwf	___fldiv@b+2
 21318     06F7  3000               	movlw	0
 21319     06F8  00BF               	movwf	___fldiv@b+1
 21320     06F9  3000               	movlw	0
 21321     06FA  00BE               	movwf	___fldiv@b
 21322     06FB                     l3202:
 21323     06FB  0140               	movlb	0	; select bank0
 21324     06FC  084D               	movf	___fldiv@new_exp+1,w
 21325     06FD  3A80               	xorlw	128
 21326     06FE  00C2               	movwf	??___fldiv
 21327     06FF  3080               	movlw	128
 21328     0700  0242               	subwf	??___fldiv,w
 21329     0701  1D03               	skipz
 21330     0702  2F05               	goto	u12905
 21331     0703  3001               	movlw	1
 21332     0704  024C               	subwf	___fldiv@new_exp,w
 21333     0705                     u12905:
 21334     0705  1803               	skipnc
 21335     0706  2F08               	goto	u12901
 21336     0707  2F09               	goto	u12900
 21337     0708                     u12901:
 21338     0708  2F15               	goto	l3203
 21339     0709                     u12900:
 21340     0709                     l14435:
 21341     0709  0140               	movlb	0	; select bank0
 21342     070A  01CC               	clrf	___fldiv@new_exp
 21343     070B  01CD               	clrf	___fldiv@new_exp+1
 21344     070C                     l14437:
 21345     070C  3000               	movlw	0
 21346     070D  00C1               	movwf	___fldiv@b+3
 21347     070E  3000               	movlw	0
 21348     070F  00C0               	movwf	___fldiv@b+2
 21349     0710  3000               	movlw	0
 21350     0711  00BF               	movwf	___fldiv@b+1
 21351     0712  3000               	movlw	0
 21352     0713  00BE               	movwf	___fldiv@b
 21353     0714                     l14439:
 21354     0714  01CB               	clrf	___fldiv@sign
 21355     0715                     l3203:
 21356     0715  0140               	movlb	0	; select bank0
 21357     0716  084C               	movf	___fldiv@new_exp,w
 21358     0717  00D2               	movwf	___fldiv@bexp
 21359     0718                     l14441:
 21360     0718  1C52               	btfss	___fldiv@bexp,0
 21361     0719  2F1B               	goto	u12911
 21362     071A  2F1C               	goto	u12910
 21363     071B                     u12911:
 21364     071B  2F1E               	goto	l14445
 21365     071C                     u12910:
 21366     071C                     l14443:
 21367     071C  17C0               	bsf	___fldiv@b+2,7
 21368     071D  2F22               	goto	l3205
 21369     071E                     l14445:
 21370     071E  307F               	movlw	127
 21371     071F  00C2               	movwf	??___fldiv
 21372     0720  0842               	movf	??___fldiv,w
 21373     0721  05C0               	andwf	___fldiv@b+2,f
 21374     0722                     l3205:
 21375     0722  3652               	lsrf	___fldiv@bexp,w
 21376     0723  00C1               	movwf	___fldiv@b+3
 21377     0724  084B               	movf	___fldiv@sign,w
 21378     0725  00C2               	movwf	??___fldiv
 21379     0726  0842               	movf	??___fldiv,w
 21380     0727  04C1               	iorwf	___fldiv@b+3,f
 21381     0728  2DE9               	goto	l14355
 21382     0729                     l3183:
 21383     0729  0008               	return
 21384     072A                     __end_of___fldiv:
 21385                           
 21386                           	psect	text68
 21387     0378                     __ptext68:	
 21388 ;; *************** function ___fladd *****************
 21389 ;; Defined at:
 21390 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 21391 ;; Parameters:    Size  Location     Type
 21392 ;;  b               4    6[BANK0 ] unsigned char 
 21393 ;;  a               4   10[BANK0 ] unsigned char 
 21394 ;; Auto vars:     Size  Location     Type
 21395 ;;  grs             1   25[BANK0 ] unsigned char 
 21396 ;;  bexp            1   24[BANK0 ] unsigned char 
 21397 ;;  aexp            1   23[BANK0 ] unsigned char 
 21398 ;;  signs           1   22[BANK0 ] unsigned char 
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  4    6[BANK0 ] unsigned char 
 21401 ;; Registers used:
 21402 ;;		wreg, status,2, status,0
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21408 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21409 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21410 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21411 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21412 ;;Total ram usage:       20 bytes
 21413 ;; Hardware stack levels used: 1
 21414 ;; Hardware stack levels required when called: 4
 21415 ;; This function calls:
 21416 ;;		Nothing
 21417 ;; This function is called by:
 21418 ;;		_getTemp
 21419 ;;		_readWakeUpAndSleepData
 21420 ;;		_getAngleResult
 21421 ;; This function uses a non-reentrant model
 21422 ;;
 21423                           
 21424     0378                     ___fladd:	
 21425                           ;psect for function ___fladd
 21426                           
 21427     0378                     l14117:	
 21428                           ;incstack = 0
 21429                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 21430                           
 21431     0378  0140               	movlb	0	; select bank0
 21432     0379  0829               	movf	___fladd@b+3,w
 21433     037A  3980               	andlw	128
 21434     037B  00B6               	movwf	___fladd@signs
 21435     037C                     l14119:
 21436     037C  3529               	lslf	___fladd@b+3,w
 21437     037D  00B8               	movwf	___fladd@bexp
 21438     037E                     l14121:
 21439     037E  1FA8               	btfss	___fladd@b+2,7
 21440     037F  2B81               	goto	u12201
 21441     0380  2B82               	goto	u12200
 21442     0381                     u12201:
 21443     0381  2B83               	goto	l14125
 21444     0382                     u12200:
 21445     0382                     l14123:
 21446     0382  1438               	bsf	___fladd@bexp,0
 21447     0383                     l14125:
 21448     0383  0838               	movf	___fladd@bexp,w
 21449     0384  1903               	btfsc	3,2
 21450     0385  2B87               	goto	u12211
 21451     0386  2B88               	goto	u12210
 21452     0387                     u12211:
 21453     0387  2B98               	goto	l14135
 21454     0388                     u12210:
 21455     0388                     l14127:
 21456     0388  0A38               	incf	___fladd@bexp,w
 21457     0389  1D03               	btfss	3,2
 21458     038A  2B8C               	goto	u12221
 21459     038B  2B8D               	goto	u12220
 21460     038C                     u12221:
 21461     038C  2B95               	goto	l14131
 21462     038D                     u12220:
 21463     038D                     l14129:
 21464     038D  3000               	movlw	0
 21465     038E  00A9               	movwf	___fladd@b+3
 21466     038F  3000               	movlw	0
 21467     0390  00A8               	movwf	___fladd@b+2
 21468     0391  3000               	movlw	0
 21469     0392  00A7               	movwf	___fladd@b+1
 21470     0393  3000               	movlw	0
 21471     0394  00A6               	movwf	___fladd@b
 21472     0395                     l14131:
 21473     0395  17A8               	bsf	___fladd@b+2,7
 21474     0396                     l14133:
 21475     0396  01A9               	clrf	___fladd@b+3
 21476     0397  2BA0               	goto	l14137
 21477     0398                     l14135:
 21478     0398  3000               	movlw	0
 21479     0399  00A9               	movwf	___fladd@b+3
 21480     039A  3000               	movlw	0
 21481     039B  00A8               	movwf	___fladd@b+2
 21482     039C  3000               	movlw	0
 21483     039D  00A7               	movwf	___fladd@b+1
 21484     039E  3000               	movlw	0
 21485     039F  00A6               	movwf	___fladd@b
 21486     03A0                     l14137:
 21487     03A0  082D               	movf	___fladd@a+3,w
 21488     03A1  3980               	andlw	128
 21489     03A2  00B7               	movwf	___fladd@aexp
 21490     03A3                     l14139:
 21491     03A3  0837               	movf	___fladd@aexp,w
 21492     03A4  0636               	xorwf	___fladd@signs,w
 21493     03A5  1903               	skipnz
 21494     03A6  2BA8               	goto	u12231
 21495     03A7  2BA9               	goto	u12230
 21496     03A8                     u12231:
 21497     03A8  2BAA               	goto	l14143
 21498     03A9                     u12230:
 21499     03A9                     l14141:
 21500     03A9  1736               	bsf	___fladd@signs,6
 21501     03AA                     l14143:
 21502     03AA  352D               	lslf	___fladd@a+3,w
 21503     03AB  00B7               	movwf	___fladd@aexp
 21504     03AC                     l14145:
 21505     03AC  1FAC               	btfss	___fladd@a+2,7
 21506     03AD  2BAF               	goto	u12241
 21507     03AE  2BB0               	goto	u12240
 21508     03AF                     u12241:
 21509     03AF  2BB1               	goto	l14149
 21510     03B0                     u12240:
 21511     03B0                     l14147:
 21512     03B0  1437               	bsf	___fladd@aexp,0
 21513     03B1                     l14149:
 21514     03B1  0837               	movf	___fladd@aexp,w
 21515     03B2  1903               	btfsc	3,2
 21516     03B3  2BB5               	goto	u12251
 21517     03B4  2BB6               	goto	u12250
 21518     03B5                     u12251:
 21519     03B5  2BC6               	goto	l14159
 21520     03B6                     u12250:
 21521     03B6                     l14151:
 21522     03B6  0A37               	incf	___fladd@aexp,w
 21523     03B7  1D03               	btfss	3,2
 21524     03B8  2BBA               	goto	u12261
 21525     03B9  2BBB               	goto	u12260
 21526     03BA                     u12261:
 21527     03BA  2BC3               	goto	l14155
 21528     03BB                     u12260:
 21529     03BB                     l14153:
 21530     03BB  3000               	movlw	0
 21531     03BC  00AD               	movwf	___fladd@a+3
 21532     03BD  3000               	movlw	0
 21533     03BE  00AC               	movwf	___fladd@a+2
 21534     03BF  3000               	movlw	0
 21535     03C0  00AB               	movwf	___fladd@a+1
 21536     03C1  3000               	movlw	0
 21537     03C2  00AA               	movwf	___fladd@a
 21538     03C3                     l14155:
 21539     03C3  17AC               	bsf	___fladd@a+2,7
 21540     03C4                     l14157:
 21541     03C4  01AD               	clrf	___fladd@a+3
 21542     03C5  2BCE               	goto	l3125
 21543     03C6                     l14159:
 21544     03C6  3000               	movlw	0
 21545     03C7  00AD               	movwf	___fladd@a+3
 21546     03C8  3000               	movlw	0
 21547     03C9  00AC               	movwf	___fladd@a+2
 21548     03CA  3000               	movlw	0
 21549     03CB  00AB               	movwf	___fladd@a+1
 21550     03CC  3000               	movlw	0
 21551     03CD  00AA               	movwf	___fladd@a
 21552     03CE                     l3125:
 21553     03CE  0838               	movf	___fladd@bexp,w
 21554     03CF  0237               	subwf	___fladd@aexp,w
 21555     03D0  1803               	skipnc
 21556     03D1  2BD3               	goto	u12271
 21557     03D2  2BD4               	goto	u12270
 21558     03D3                     u12271:
 21559     03D3  2BFA               	goto	l14195
 21560     03D4                     u12270:
 21561     03D4                     l14161:
 21562     03D4  1F36               	btfss	___fladd@signs,6
 21563     03D5  2BD7               	goto	u12281
 21564     03D6  2BD8               	goto	u12280
 21565     03D7                     u12281:
 21566     03D7  2BDC               	goto	l14165
 21567     03D8                     u12280:
 21568     03D8                     l14163:
 21569     03D8  3080               	movlw	128
 21570     03D9  00AE               	movwf	??___fladd
 21571     03DA  082E               	movf	??___fladd,w
 21572     03DB  06B6               	xorwf	___fladd@signs,f
 21573     03DC                     l14165:
 21574     03DC  0838               	movf	___fladd@bexp,w
 21575     03DD  00B9               	movwf	___fladd@grs
 21576     03DE                     l14167:
 21577     03DE  0837               	movf	___fladd@aexp,w
 21578     03DF  00B8               	movwf	___fladd@bexp
 21579     03E0                     l14169:
 21580     03E0  0839               	movf	___fladd@grs,w
 21581     03E1  00B7               	movwf	___fladd@aexp
 21582     03E2                     l14171:
 21583     03E2  0826               	movf	___fladd@b,w
 21584     03E3  00B9               	movwf	___fladd@grs
 21585     03E4                     l14173:
 21586     03E4  082A               	movf	___fladd@a,w
 21587     03E5  00A6               	movwf	___fladd@b
 21588     03E6                     l14175:
 21589     03E6  0839               	movf	___fladd@grs,w
 21590     03E7  00AA               	movwf	___fladd@a
 21591     03E8                     l14177:
 21592     03E8  0827               	movf	___fladd@b+1,w
 21593     03E9  00B9               	movwf	___fladd@grs
 21594     03EA                     l14179:
 21595     03EA  082B               	movf	___fladd@a+1,w
 21596     03EB  00A7               	movwf	___fladd@b+1
 21597     03EC                     l14181:
 21598     03EC  0839               	movf	___fladd@grs,w
 21599     03ED  00AB               	movwf	___fladd@a+1
 21600     03EE                     l14183:
 21601     03EE  0828               	movf	___fladd@b+2,w
 21602     03EF  00B9               	movwf	___fladd@grs
 21603     03F0                     l14185:
 21604     03F0  082C               	movf	___fladd@a+2,w
 21605     03F1  00A8               	movwf	___fladd@b+2
 21606     03F2                     l14187:
 21607     03F2  0839               	movf	___fladd@grs,w
 21608     03F3  00AC               	movwf	___fladd@a+2
 21609     03F4                     l14189:
 21610     03F4  0829               	movf	___fladd@b+3,w
 21611     03F5  00B9               	movwf	___fladd@grs
 21612     03F6                     l14191:
 21613     03F6  082D               	movf	___fladd@a+3,w
 21614     03F7  00A9               	movwf	___fladd@b+3
 21615     03F8                     l14193:
 21616     03F8  0839               	movf	___fladd@grs,w
 21617     03F9  00AD               	movwf	___fladd@a+3
 21618     03FA                     l14195:
 21619     03FA  01B9               	clrf	___fladd@grs
 21620     03FB                     l14197:
 21621     03FB  0837               	movf	___fladd@aexp,w
 21622     03FC  00AE               	movwf	??___fladd
 21623     03FD  01AF               	clrf	??___fladd+1
 21624     03FE  082F               	movf	??___fladd+1,w
 21625     03FF  00B1               	movwf	??___fladd+3
 21626     0400  0838               	movf	___fladd@bexp,w
 21627     0401  022E               	subwf	??___fladd,w
 21628     0402  00B0               	movwf	??___fladd+2
 21629     0403  1C03               	skipc
 21630     0404  03B1               	decf	??___fladd+3,f
 21631     0405  0831               	movf	??___fladd+3,w
 21632     0406  3A80               	xorlw	128
 21633     0407  00B2               	movwf	??___fladd+4
 21634     0408  3080               	movlw	128
 21635     0409  0232               	subwf	??___fladd+4,w
 21636     040A  1D03               	skipz
 21637     040B  2C0E               	goto	u12295
 21638     040C  301A               	movlw	26
 21639     040D  0230               	subwf	??___fladd+2,w
 21640     040E                     u12295:
 21641     040E  1C03               	skipc
 21642     040F  2C11               	goto	u12291
 21643     0410  2C12               	goto	u12290
 21644     0411                     u12291:
 21645     0411  2C44               	goto	l14213
 21646     0412                     u12290:
 21647     0412                     l14199:
 21648     0412  0140               	movlb	0	; select bank0
 21649     0413  0829               	movf	___fladd@b+3,w
 21650     0414  0428               	iorwf	___fladd@b+2,w
 21651     0415  0427               	iorwf	___fladd@b+1,w
 21652     0416  0426               	iorwf	___fladd@b,w
 21653     0417  1D03               	skipz
 21654     0418  2C1A               	goto	u12301
 21655     0419  2C1C               	goto	u12300
 21656     041A                     u12301:
 21657     041A  3001               	movlw	1
 21658     041B  2C1D               	goto	u12310
 21659     041C                     u12300:
 21660     041C  3000               	movlw	0
 21661     041D                     u12310:
 21662     041D  00B9               	movwf	___fladd@grs
 21663     041E  3000               	movlw	0
 21664     041F  00A9               	movwf	___fladd@b+3
 21665     0420  3000               	movlw	0
 21666     0421  00A8               	movwf	___fladd@b+2
 21667     0422  3000               	movlw	0
 21668     0423  00A7               	movwf	___fladd@b+1
 21669     0424  3000               	movlw	0
 21670     0425  00A6               	movwf	___fladd@b
 21671     0426  0837               	movf	___fladd@aexp,w
 21672     0427  00B8               	movwf	___fladd@bexp
 21673     0428  2C4B               	goto	l3129
 21674     0429                     l3131:
 21675     0429  1C39               	btfss	___fladd@grs,0
 21676     042A  2C2C               	goto	u12321
 21677     042B  2C2D               	goto	u12320
 21678     042C                     u12321:
 21679     042C  2C31               	goto	l14203
 21680     042D                     u12320:
 21681     042D                     l14201:
 21682     042D  3639               	lsrf	___fladd@grs,w
 21683     042E  3801               	iorlw	1
 21684     042F  00B9               	movwf	___fladd@grs
 21685     0430  2C33               	goto	l14205
 21686     0431                     l14203:
 21687     0431  1003               	clrc
 21688     0432  0CB9               	rrf	___fladd@grs,f
 21689     0433                     l14205:
 21690     0433  1C26               	btfss	___fladd@b,0
 21691     0434  2C36               	goto	u12331
 21692     0435  2C37               	goto	u12330
 21693     0436                     u12331:
 21694     0436  2C38               	goto	l14209
 21695     0437                     u12330:
 21696     0437                     l14207:
 21697     0437  17B9               	bsf	___fladd@grs,7
 21698     0438                     l14209:
 21699     0438  3001               	movlw	1
 21700     0439  00AE               	movwf	??___fladd
 21701     043A                     u12345:
 21702     043A  37A9               	asrf	___fladd@b+3,f
 21703     043B  0CA8               	rrf	___fladd@b+2,f
 21704     043C  0CA7               	rrf	___fladd@b+1,f
 21705     043D  0CA6               	rrf	___fladd@b,f
 21706     043E  0BAE               	decfsz	??___fladd& (0+127),f
 21707     043F  2C3A               	goto	u12345
 21708     0440                     l14211:
 21709     0440  3001               	movlw	1
 21710     0441  00AE               	movwf	??___fladd
 21711     0442  082E               	movf	??___fladd,w
 21712     0443  07B8               	addwf	___fladd@bexp,f
 21713     0444                     l14213:
 21714     0444  0140               	movlb	0	; select bank0
 21715     0445  0837               	movf	___fladd@aexp,w
 21716     0446  0238               	subwf	___fladd@bexp,w
 21717     0447  1C03               	skipc
 21718     0448  2C4A               	goto	u12351
 21719     0449  2C4B               	goto	u12350
 21720     044A                     u12351:
 21721     044A  2C29               	goto	l3131
 21722     044B                     u12350:
 21723     044B                     l3129:
 21724     044B  1B36               	btfsc	___fladd@signs,6
 21725     044C  2C4E               	goto	u12361
 21726     044D  2C4F               	goto	u12360
 21727     044E                     u12361:
 21728     044E  2C85               	goto	l14239
 21729     044F                     u12360:
 21730     044F                     l14215:
 21731     044F  0838               	movf	___fladd@bexp,w
 21732     0450  1D03               	btfss	3,2
 21733     0451  2C53               	goto	u12371
 21734     0452  2C54               	goto	u12370
 21735     0453                     u12371:
 21736     0453  2C5D               	goto	l14221
 21737     0454                     u12370:
 21738     0454                     l14217:
 21739     0454  3000               	movlw	0
 21740     0455  00A9               	movwf	?___fladd+3
 21741     0456  3000               	movlw	0
 21742     0457  00A8               	movwf	?___fladd+2
 21743     0458  3000               	movlw	0
 21744     0459  00A7               	movwf	?___fladd+1
 21745     045A  3000               	movlw	0
 21746     045B  00A6               	movwf	?___fladd
 21747     045C  2D7F               	goto	l3138
 21748     045D                     l14221:
 21749     045D  082A               	movf	___fladd@a,w
 21750     045E  07A6               	addwf	___fladd@b,f
 21751     045F  082B               	movf	___fladd@a+1,w
 21752     0460  3DA7               	addwfc	___fladd@b+1,f
 21753     0461  082C               	movf	___fladd@a+2,w
 21754     0462  3DA8               	addwfc	___fladd@b+2,f
 21755     0463  082D               	movf	___fladd@a+3,w
 21756     0464  3DA9               	addwfc	___fladd@b+3,f
 21757     0465                     l14223:
 21758     0465  1C29               	btfss	___fladd@b+3,0
 21759     0466  2C68               	goto	u12381
 21760     0467  2C69               	goto	u12380
 21761     0468                     u12381:
 21762     0468  2D11               	goto	l14273
 21763     0469                     u12380:
 21764     0469                     l14225:
 21765     0469  1C39               	btfss	___fladd@grs,0
 21766     046A  2C6C               	goto	u12391
 21767     046B  2C6D               	goto	u12390
 21768     046C                     u12391:
 21769     046C  2C71               	goto	l14229
 21770     046D                     u12390:
 21771     046D                     l14227:
 21772     046D  3639               	lsrf	___fladd@grs,w
 21773     046E  3801               	iorlw	1
 21774     046F  00B9               	movwf	___fladd@grs
 21775     0470  2C73               	goto	l14231
 21776     0471                     l14229:
 21777     0471  1003               	clrc
 21778     0472  0CB9               	rrf	___fladd@grs,f
 21779     0473                     l14231:
 21780     0473  1C26               	btfss	___fladd@b,0
 21781     0474  2C76               	goto	u12401
 21782     0475  2C77               	goto	u12400
 21783     0476                     u12401:
 21784     0476  2C78               	goto	l14235
 21785     0477                     u12400:
 21786     0477                     l14233:
 21787     0477  17B9               	bsf	___fladd@grs,7
 21788     0478                     l14235:
 21789     0478  3001               	movlw	1
 21790     0479  00AE               	movwf	??___fladd
 21791     047A                     u12415:
 21792     047A  37A9               	asrf	___fladd@b+3,f
 21793     047B  0CA8               	rrf	___fladd@b+2,f
 21794     047C  0CA7               	rrf	___fladd@b+1,f
 21795     047D  0CA6               	rrf	___fladd@b,f
 21796     047E  0BAE               	decfsz	??___fladd& (0+127),f
 21797     047F  2C7A               	goto	u12415
 21798     0480                     l14237:
 21799     0480  3001               	movlw	1
 21800     0481  00AE               	movwf	??___fladd
 21801     0482  082E               	movf	??___fladd,w
 21802     0483  07B8               	addwf	___fladd@bexp,f
 21803     0484  2D11               	goto	l14273
 21804     0485                     l14239:
 21805     0485  0829               	movf	___fladd@b+3,w
 21806     0486  3A80               	xorlw	128
 21807     0487  00AE               	movwf	??___fladd
 21808     0488  082D               	movf	___fladd@a+3,w
 21809     0489  3A80               	xorlw	128
 21810     048A  022E               	subwf	??___fladd,w
 21811     048B  1D03               	skipz
 21812     048C  2C97               	goto	u12423
 21813     048D  082C               	movf	___fladd@a+2,w
 21814     048E  0228               	subwf	___fladd@b+2,w
 21815     048F  1D03               	skipz
 21816     0490  2C97               	goto	u12423
 21817     0491  082B               	movf	___fladd@a+1,w
 21818     0492  0227               	subwf	___fladd@b+1,w
 21819     0493  1D03               	skipz
 21820     0494  2C97               	goto	u12423
 21821     0495  082A               	movf	___fladd@a,w
 21822     0496  0226               	subwf	___fladd@b,w
 21823     0497                     u12423:
 21824     0497  1803               	skipnc
 21825     0498  2C9A               	goto	u12421
 21826     0499  2C9B               	goto	u12420
 21827     049A                     u12421:
 21828     049A  2CD3               	goto	l14249
 21829     049B                     u12420:
 21830     049B                     l14241:
 21831     049B  30FF               	movlw	255
 21832     049C  00AE               	movwf	??___fladd
 21833     049D  30FF               	movlw	255
 21834     049E  00AF               	movwf	??___fladd+1
 21835     049F  30FF               	movlw	255
 21836     04A0  00B0               	movwf	??___fladd+2
 21837     04A1  30FF               	movlw	255
 21838     04A2  00B1               	movwf	??___fladd+3
 21839     04A3  0826               	movf	___fladd@b,w
 21840     04A4  022A               	subwf	___fladd@a,w
 21841     04A5  00B2               	movwf	??___fladd+4
 21842     04A6  0827               	movf	___fladd@b+1,w
 21843     04A7  3B2B               	subwfb	___fladd@a+1,w
 21844     04A8  00B3               	movwf	??___fladd+5
 21845     04A9  0828               	movf	___fladd@b+2,w
 21846     04AA  3B2C               	subwfb	___fladd@a+2,w
 21847     04AB  00B4               	movwf	??___fladd+6
 21848     04AC  0829               	movf	___fladd@b+3,w
 21849     04AD  3B2D               	subwfb	___fladd@a+3,w
 21850     04AE  00B5               	movwf	??___fladd+7
 21851     04AF  0832               	movf	??___fladd+4,w
 21852     04B0  07AE               	addwf	??___fladd,f
 21853     04B1  0833               	movf	??___fladd+5,w
 21854     04B2  3DAF               	addwfc	??___fladd+1,f
 21855     04B3  0834               	movf	??___fladd+6,w
 21856     04B4  3DB0               	addwfc	??___fladd+2,f
 21857     04B5  0835               	movf	??___fladd+7,w
 21858     04B6  3DB1               	addwfc	??___fladd+3,f
 21859     04B7  0831               	movf	??___fladd+3,w
 21860     04B8  00A9               	movwf	___fladd@b+3
 21861     04B9  0830               	movf	??___fladd+2,w
 21862     04BA  00A8               	movwf	___fladd@b+2
 21863     04BB  082F               	movf	??___fladd+1,w
 21864     04BC  00A7               	movwf	___fladd@b+1
 21865     04BD  082E               	movf	??___fladd,w
 21866     04BE  00A6               	movwf	___fladd@b
 21867     04BF                     l14243:
 21868     04BF  3080               	movlw	128
 21869     04C0  00AE               	movwf	??___fladd
 21870     04C1  082E               	movf	??___fladd,w
 21871     04C2  06B6               	xorwf	___fladd@signs,f
 21872     04C3  09B9               	comf	___fladd@grs,f
 21873     04C4  0AB9               	incf	___fladd@grs,f
 21874     04C5                     l14245:
 21875     04C5  0839               	movf	___fladd@grs,w
 21876     04C6  1D03               	btfss	3,2
 21877     04C7  2CC9               	goto	u12431
 21878     04C8  2CCA               	goto	u12430
 21879     04C9                     u12431:
 21880     04C9  2CDB               	goto	l3146
 21881     04CA                     u12430:
 21882     04CA                     l14247:
 21883     04CA  3001               	movlw	1
 21884     04CB  07A6               	addwf	___fladd@b,f
 21885     04CC  3000               	movlw	0
 21886     04CD  3DA7               	addwfc	___fladd@b+1,f
 21887     04CE  3000               	movlw	0
 21888     04CF  3DA8               	addwfc	___fladd@b+2,f
 21889     04D0  3000               	movlw	0
 21890     04D1  3DA9               	addwfc	___fladd@b+3,f
 21891     04D2  2CDB               	goto	l3146
 21892     04D3                     l14249:
 21893     04D3  082A               	movf	___fladd@a,w
 21894     04D4  02A6               	subwf	___fladd@b,f
 21895     04D5  082B               	movf	___fladd@a+1,w
 21896     04D6  3BA7               	subwfb	___fladd@b+1,f
 21897     04D7  082C               	movf	___fladd@a+2,w
 21898     04D8  3BA8               	subwfb	___fladd@b+2,f
 21899     04D9  082D               	movf	___fladd@a+3,w
 21900     04DA  3BA9               	subwfb	___fladd@b+3,f
 21901     04DB                     l3146:
 21902     04DB  0829               	movf	___fladd@b+3,w
 21903     04DC  0428               	iorwf	___fladd@b+2,w
 21904     04DD  0427               	iorwf	___fladd@b+1,w
 21905     04DE  0426               	iorwf	___fladd@b,w
 21906     04DF  1D03               	skipz
 21907     04E0  2CE2               	goto	u12441
 21908     04E1  2CE3               	goto	u12440
 21909     04E2                     u12441:
 21910     04E2  2D0D               	goto	l14271
 21911     04E3                     u12440:
 21912     04E3                     l14251:
 21913     04E3  0839               	movf	___fladd@grs,w
 21914     04E4  1D03               	btfss	3,2
 21915     04E5  2CE7               	goto	u12451
 21916     04E6  2CE8               	goto	u12450
 21917     04E7                     u12451:
 21918     04E7  2D0D               	goto	l14271
 21919     04E8                     u12450:
 21920     04E8                     l14253:
 21921     04E8  3000               	movlw	0
 21922     04E9  00A9               	movwf	?___fladd+3
 21923     04EA  3000               	movlw	0
 21924     04EB  00A8               	movwf	?___fladd+2
 21925     04EC  3000               	movlw	0
 21926     04ED  00A7               	movwf	?___fladd+1
 21927     04EE  3000               	movlw	0
 21928     04EF  00A6               	movwf	?___fladd
 21929     04F0  2D7F               	goto	l3138
 21930     04F1                     l14257:
 21931     04F1  3001               	movlw	1
 21932     04F2                     u12465:
 21933     04F2  35A6               	lslf	___fladd@b,f
 21934     04F3  0DA7               	rlf	___fladd@b+1,f
 21935     04F4  0DA8               	rlf	___fladd@b+2,f
 21936     04F5  0DA9               	rlf	___fladd@b+3,f
 21937     04F6  0B89               	decfsz	9,f
 21938     04F7  2CF2               	goto	u12465
 21939     04F8                     l14259:
 21940     04F8  1FB9               	btfss	___fladd@grs,7
 21941     04F9  2CFB               	goto	u12471
 21942     04FA  2CFC               	goto	u12470
 21943     04FB                     u12471:
 21944     04FB  2CFD               	goto	l3150
 21945     04FC                     u12470:
 21946     04FC                     l14261:
 21947     04FC  1426               	bsf	___fladd@b,0
 21948     04FD                     l3150:
 21949     04FD  1C39               	btfss	___fladd@grs,0
 21950     04FE  2D00               	goto	u12481
 21951     04FF  2D01               	goto	u12480
 21952     0500                     u12481:
 21953     0500  2D04               	goto	l14265
 21954     0501                     u12480:
 21955     0501                     l14263:
 21956     0501  1403               	setc
 21957     0502  0DB9               	rlf	___fladd@grs,f
 21958     0503  2D06               	goto	l14267
 21959     0504                     l14265:
 21960     0504  1003               	clrc
 21961     0505  0DB9               	rlf	___fladd@grs,f
 21962     0506                     l14267:
 21963     0506  0838               	movf	___fladd@bexp,w
 21964     0507  1903               	btfsc	3,2
 21965     0508  2D0A               	goto	u12491
 21966     0509  2D0B               	goto	u12490
 21967     050A                     u12491:
 21968     050A  2D0D               	goto	l14271
 21969     050B                     u12490:
 21970     050B                     l14269:
 21971     050B  3001               	movlw	1
 21972     050C  02B8               	subwf	___fladd@bexp,f
 21973     050D                     l14271:
 21974     050D  1FA8               	btfss	___fladd@b+2,7
 21975     050E  2D10               	goto	u12501
 21976     050F  2D11               	goto	u12500
 21977     0510                     u12501:
 21978     0510  2CF1               	goto	l14257
 21979     0511                     u12500:
 21980     0511                     l14273:
 21981     0511  01B7               	clrf	___fladd@aexp
 21982     0512                     l14275:
 21983     0512  1FB9               	btfss	___fladd@grs,7
 21984     0513  2D15               	goto	u12511
 21985     0514  2D16               	goto	u12510
 21986     0515                     u12511:
 21987     0515  2D24               	goto	l14283
 21988     0516                     u12510:
 21989     0516                     l14277:
 21990     0516  0839               	movf	___fladd@grs,w
 21991     0517  397F               	andlw	127
 21992     0518  1903               	btfsc	3,2
 21993     0519  2D1B               	goto	u12521
 21994     051A  2D1C               	goto	u12520
 21995     051B                     u12521:
 21996     051B  2D1F               	goto	l3156
 21997     051C                     u12520:
 21998     051C                     l14279:
 21999     051C  01B7               	clrf	___fladd@aexp
 22000     051D  0AB7               	incf	___fladd@aexp,f
 22001     051E  2D24               	goto	l14283
 22002     051F                     l3156:
 22003     051F  1C26               	btfss	___fladd@b,0
 22004     0520  2D22               	goto	u12531
 22005     0521  2D23               	goto	u12530
 22006     0522                     u12531:
 22007     0522  2D24               	goto	l14283
 22008     0523                     u12530:
 22009     0523  2D1C               	goto	l14279
 22010     0524                     l14283:
 22011     0524  0837               	movf	___fladd@aexp,w
 22012     0525  1903               	btfsc	3,2
 22013     0526  2D28               	goto	u12541
 22014     0527  2D29               	goto	u12540
 22015     0528                     u12541:
 22016     0528  2D56               	goto	l3159
 22017     0529                     u12540:
 22018     0529                     l14285:
 22019     0529  3001               	movlw	1
 22020     052A  07A6               	addwf	___fladd@b,f
 22021     052B  3000               	movlw	0
 22022     052C  3DA7               	addwfc	___fladd@b+1,f
 22023     052D  3000               	movlw	0
 22024     052E  3DA8               	addwfc	___fladd@b+2,f
 22025     052F  3000               	movlw	0
 22026     0530  3DA9               	addwfc	___fladd@b+3,f
 22027     0531                     l14287:
 22028     0531  1C29               	btfss	___fladd@b+3,0
 22029     0532  2D34               	goto	u12551
 22030     0533  2D35               	goto	u12550
 22031     0534                     u12551:
 22032     0534  2D56               	goto	l3159
 22033     0535                     u12550:
 22034     0535                     l14289:
 22035     0535  0826               	movf	___fladd@b,w
 22036     0536  00AE               	movwf	??___fladd
 22037     0537  0827               	movf	___fladd@b+1,w
 22038     0538  00AF               	movwf	??___fladd+1
 22039     0539  0828               	movf	___fladd@b+2,w
 22040     053A  00B0               	movwf	??___fladd+2
 22041     053B  0829               	movf	___fladd@b+3,w
 22042     053C  00B1               	movwf	??___fladd+3
 22043     053D  3001               	movlw	1
 22044     053E  00B2               	movwf	??___fladd+4
 22045     053F                     u12565:
 22046     053F  37B1               	asrf	??___fladd+3,f
 22047     0540  0CB0               	rrf	??___fladd+2,f
 22048     0541  0CAF               	rrf	??___fladd+1,f
 22049     0542  0CAE               	rrf	??___fladd,f
 22050     0543                     u12560:
 22051     0543  0BB2               	decfsz	??___fladd+4,f
 22052     0544  2D3F               	goto	u12565
 22053     0545  0831               	movf	??___fladd+3,w
 22054     0546  00A9               	movwf	___fladd@b+3
 22055     0547  0830               	movf	??___fladd+2,w
 22056     0548  00A8               	movwf	___fladd@b+2
 22057     0549  082F               	movf	??___fladd+1,w
 22058     054A  00A7               	movwf	___fladd@b+1
 22059     054B  082E               	movf	??___fladd,w
 22060     054C  00A6               	movwf	___fladd@b
 22061     054D  0A38               	incf	___fladd@bexp,w
 22062     054E  1903               	btfsc	3,2
 22063     054F  2D51               	goto	u12571
 22064     0550  2D52               	goto	u12570
 22065     0551                     u12571:
 22066     0551  2D56               	goto	l3159
 22067     0552                     u12570:
 22068     0552                     l14291:
 22069     0552  3001               	movlw	1
 22070     0553  00AE               	movwf	??___fladd
 22071     0554  082E               	movf	??___fladd,w
 22072     0555  07B8               	addwf	___fladd@bexp,f
 22073     0556                     l3159:
 22074     0556  0A38               	incf	___fladd@bexp,w
 22075     0557  1903               	btfsc	3,2
 22076     0558  2D5A               	goto	u12581
 22077     0559  2D5B               	goto	u12580
 22078     055A                     u12581:
 22079     055A  2D60               	goto	l14295
 22080     055B                     u12580:
 22081     055B                     l14293:
 22082     055B  0838               	movf	___fladd@bexp,w
 22083     055C  1D03               	btfss	3,2
 22084     055D  2D5F               	goto	u12591
 22085     055E  2D60               	goto	u12590
 22086     055F                     u12591:
 22087     055F  2D6E               	goto	l14301
 22088     0560                     u12590:
 22089     0560                     l14295:
 22090     0560  3000               	movlw	0
 22091     0561  00A9               	movwf	___fladd@b+3
 22092     0562  3000               	movlw	0
 22093     0563  00A8               	movwf	___fladd@b+2
 22094     0564  3000               	movlw	0
 22095     0565  00A7               	movwf	___fladd@b+1
 22096     0566  3000               	movlw	0
 22097     0567  00A6               	movwf	___fladd@b
 22098     0568                     l14297:
 22099     0568  0838               	movf	___fladd@bexp,w
 22100     0569  1D03               	btfss	3,2
 22101     056A  2D6C               	goto	u12601
 22102     056B  2D6D               	goto	u12600
 22103     056C                     u12601:
 22104     056C  2D6E               	goto	l14301
 22105     056D                     u12600:
 22106     056D                     l14299:
 22107     056D  01B6               	clrf	___fladd@signs
 22108     056E                     l14301:
 22109     056E  1C38               	btfss	___fladd@bexp,0
 22110     056F  2D71               	goto	u12611
 22111     0570  2D72               	goto	u12610
 22112     0571                     u12611:
 22113     0571  2D74               	goto	l14305
 22114     0572                     u12610:
 22115     0572                     l14303:
 22116     0572  17A8               	bsf	___fladd@b+2,7
 22117     0573  2D78               	goto	l3167
 22118     0574                     l14305:
 22119     0574  307F               	movlw	127
 22120     0575  00AE               	movwf	??___fladd
 22121     0576  082E               	movf	??___fladd,w
 22122     0577  05A8               	andwf	___fladd@b+2,f
 22123     0578                     l3167:
 22124     0578  3638               	lsrf	___fladd@bexp,w
 22125     0579  00A9               	movwf	___fladd@b+3
 22126     057A                     l14307:
 22127     057A  1FB6               	btfss	___fladd@signs,7
 22128     057B  2D7D               	goto	u12621
 22129     057C  2D7E               	goto	u12620
 22130     057D                     u12621:
 22131     057D  2D7F               	goto	l3168
 22132     057E                     u12620:
 22133     057E                     l14309:
 22134     057E  17A9               	bsf	___fladd@b+3,7
 22135     057F                     l3168:
 22136     057F                     l3138:
 22137     057F  0008               	return
 22138     0580                     __end_of___fladd:
 22139                           
 22140                           	psect	text69
 22141     09DB                     __ptext69:	
 22142 ;; *************** function ___fltol *****************
 22143 ;; Defined at:
 22144 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;  f1              4   73[BANK0 ] unsigned char 
 22147 ;; Auto vars:     Size  Location     Type
 22148 ;;  exp1            1   78[BANK0 ] unsigned char 
 22149 ;;  sign1           1   77[BANK0 ] unsigned char 
 22150 ;; Return value:  Size  Location     Type
 22151 ;;                  4   73[BANK0 ] long 
 22152 ;; Registers used:
 22153 ;;		wreg, status,2, status,0
 22154 ;; Tracked objects:
 22155 ;;		On entry : 0/0
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22162 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;Total ram usage:       10 bytes
 22164 ;; Hardware stack levels used: 1
 22165 ;; Hardware stack levels required when called: 4
 22166 ;; This function calls:
 22167 ;;		Nothing
 22168 ;; This function is called by:
 22169 ;;		_LIGHTBLUE_TemperatureSensor
 22170 ;;		_setMagneticGain
 22171 ;;		_setMagneticOffset1
 22172 ;;		_setMagneticOffset2
 22173 ;;		_setXThreshold
 22174 ;;		_setYThreshold
 22175 ;;		_setZThreshold
 22176 ;;		_getMagneticGain
 22177 ;;		_getMagneticOffset1
 22178 ;;		_getMagneticOffset2
 22179 ;; This function uses a non-reentrant model
 22180 ;;
 22181                           
 22182     09DB                     ___fltol:	
 22183                           ;psect for function ___fltol
 22184                           
 22185     09DB                     l15079:	
 22186                           ;incstack = 0
 22187                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 22188                           
 22189     09DB  1003               	clrc
 22190     09DC  0140               	movlb	0	; select bank0
 22191     09DD  0D6B               	rlf	___fltol@f1+2,w
 22192     09DE  0D6C               	rlf	___fltol@f1+3,w
 22193     09DF  00EE               	movwf	___fltol@exp1
 22194     09E0  086E               	movf	___fltol@exp1,w
 22195     09E1  1D03               	btfss	3,2
 22196     09E2  29E4               	goto	u14051
 22197     09E3  29E5               	goto	u14050
 22198     09E4                     u14051:
 22199     09E4  29EE               	goto	l15085
 22200     09E5                     u14050:
 22201     09E5                     l15081:
 22202     09E5  3000               	movlw	0
 22203     09E6  00EC               	movwf	?___fltol+3
 22204     09E7  3000               	movlw	0
 22205     09E8  00EB               	movwf	?___fltol+2
 22206     09E9  3000               	movlw	0
 22207     09EA  00EA               	movwf	?___fltol+1
 22208     09EB  3000               	movlw	0
 22209     09EC  00E9               	movwf	?___fltol
 22210     09ED  2A55               	goto	l3018
 22211     09EE                     l15085:
 22212     09EE  0869               	movf	___fltol@f1,w
 22213     09EF  0141               	movlb	1	; select bank1
 22214     09F0  00E1               	movwf	??___fltol^(0+128)
 22215     09F1  0140               	movlb	0	; select bank0
 22216     09F2  086A               	movf	___fltol@f1+1,w
 22217     09F3  0141               	movlb	1	; select bank1
 22218     09F4  00E2               	movwf	(??___fltol^(0+128)+1)
 22219     09F5  0140               	movlb	0	; select bank0
 22220     09F6  086B               	movf	___fltol@f1+2,w
 22221     09F7  0141               	movlb	1	; select bank1
 22222     09F8  00E3               	movwf	(??___fltol^(0+128)+2)
 22223     09F9  0140               	movlb	0	; select bank0
 22224     09FA  086C               	movf	___fltol@f1+3,w
 22225     09FB  0141               	movlb	1	; select bank1
 22226     09FC  00E4               	movwf	(??___fltol^(0+128)+3)
 22227     09FD  301F               	movlw	31
 22228     09FE                     u14065:
 22229     09FE  36E4               	lsrf	(??___fltol^(0+128)+3),f
 22230     09FF  0CE3               	rrf	(??___fltol^(0+128)+2),f
 22231     0A00  0CE2               	rrf	(??___fltol^(0+128)+1),f
 22232     0A01  0CE1               	rrf	??___fltol^(0+128),f
 22233     0A02                     u14060:
 22234     0A02  0B89               	decfsz	9,f
 22235     0A03  29FE               	goto	u14065
 22236     0A04  0861               	movf	??___fltol^(0+128),w
 22237     0A05  0140               	movlb	0	; select bank0
 22238     0A06  00ED               	movwf	___fltol@sign1
 22239     0A07                     l15087:
 22240     0A07  17EB               	bsf	___fltol@f1+2,7
 22241     0A08                     l15089:
 22242     0A08  30FF               	movlw	255
 22243     0A09  05E9               	andwf	___fltol@f1,f
 22244     0A0A  30FF               	movlw	255
 22245     0A0B  05EA               	andwf	___fltol@f1+1,f
 22246     0A0C  30FF               	movlw	255
 22247     0A0D  05EB               	andwf	___fltol@f1+2,f
 22248     0A0E  3000               	movlw	0
 22249     0A0F  05EC               	andwf	___fltol@f1+3,f
 22250     0A10                     l15091:
 22251     0A10  3096               	movlw	150
 22252     0A11  02EE               	subwf	___fltol@exp1,f
 22253     0A12                     l15093:
 22254     0A12  1FEE               	btfss	___fltol@exp1,7
 22255     0A13  2A15               	goto	u14071
 22256     0A14  2A16               	goto	u14070
 22257     0A15                     u14071:
 22258     0A15  2A30               	goto	l15103
 22259     0A16                     u14070:
 22260     0A16                     l15095:
 22261     0A16  086E               	movf	___fltol@exp1,w
 22262     0A17  3A80               	xorlw	128
 22263     0A18  3E97               	addlw	151
 22264     0A19  1803               	skipnc
 22265     0A1A  2A1C               	goto	u14081
 22266     0A1B  2A1D               	goto	u14080
 22267     0A1C                     u14081:
 22268     0A1C  2A1E               	goto	l15101
 22269     0A1D                     u14080:
 22270     0A1D  29E5               	goto	l15081
 22271     0A1E                     l15101:
 22272     0A1E  3001               	movlw	1
 22273     0A1F                     u14095:
 22274     0A1F  36EC               	lsrf	___fltol@f1+3,f
 22275     0A20  0CEB               	rrf	___fltol@f1+2,f
 22276     0A21  0CEA               	rrf	___fltol@f1+1,f
 22277     0A22  0CE9               	rrf	___fltol@f1,f
 22278     0A23  0B89               	decfsz	9,f
 22279     0A24  2A1F               	goto	u14095
 22280     0A25  3001               	movlw	1
 22281     0A26  0141               	movlb	1	; select bank1
 22282     0A27  00E1               	movwf	??___fltol^(0+128)
 22283     0A28  0861               	movf	??___fltol^(0+128),w
 22284     0A29  0140               	movlb	0	; select bank0
 22285     0A2A  07EE               	addwf	___fltol@exp1,f
 22286     0A2B  1D03               	btfss	3,2
 22287     0A2C  2A2E               	goto	u14101
 22288     0A2D  2A2F               	goto	u14100
 22289     0A2E                     u14101:
 22290     0A2E  2A1E               	goto	l15101
 22291     0A2F                     u14100:
 22292     0A2F  2A45               	goto	l15111
 22293     0A30                     l15103:
 22294     0A30  3020               	movlw	32
 22295     0A31  026E               	subwf	___fltol@exp1,w
 22296     0A32  1C03               	skipc
 22297     0A33  2A35               	goto	u14111
 22298     0A34  2A36               	goto	u14110
 22299     0A35                     u14111:
 22300     0A35  2A40               	goto	l3025
 22301     0A36                     u14110:
 22302     0A36  29E5               	goto	l15081
 22303     0A37                     l15109:
 22304     0A37  3001               	movlw	1
 22305     0A38                     u14125:
 22306     0A38  35E9               	lslf	___fltol@f1,f
 22307     0A39  0DEA               	rlf	___fltol@f1+1,f
 22308     0A3A  0DEB               	rlf	___fltol@f1+2,f
 22309     0A3B  0DEC               	rlf	___fltol@f1+3,f
 22310     0A3C  0B89               	decfsz	9,f
 22311     0A3D  2A38               	goto	u14125
 22312     0A3E  3001               	movlw	1
 22313     0A3F  02EE               	subwf	___fltol@exp1,f
 22314     0A40                     l3025:
 22315     0A40  086E               	movf	___fltol@exp1,w
 22316     0A41  1D03               	btfss	3,2
 22317     0A42  2A44               	goto	u14131
 22318     0A43  2A45               	goto	u14130
 22319     0A44                     u14131:
 22320     0A44  2A37               	goto	l15109
 22321     0A45                     u14130:
 22322     0A45                     l15111:
 22323     0A45  086D               	movf	___fltol@sign1,w
 22324     0A46  1903               	btfsc	3,2
 22325     0A47  2A49               	goto	u14141
 22326     0A48  2A4A               	goto	u14140
 22327     0A49                     u14141:
 22328     0A49  2A55               	goto	l3028
 22329     0A4A                     u14140:
 22330     0A4A                     l15113:
 22331     0A4A  09E9               	comf	___fltol@f1,f
 22332     0A4B  09EA               	comf	___fltol@f1+1,f
 22333     0A4C  09EB               	comf	___fltol@f1+2,f
 22334     0A4D  09EC               	comf	___fltol@f1+3,f
 22335     0A4E  0AE9               	incf	___fltol@f1,f
 22336     0A4F  1903               	skipnz
 22337     0A50  0AEA               	incf	___fltol@f1+1,f
 22338     0A51  1903               	skipnz
 22339     0A52  0AEB               	incf	___fltol@f1+2,f
 22340     0A53  1903               	skipnz
 22341     0A54  0AEC               	incf	___fltol@f1+3,f
 22342     0A55                     l3028:
 22343     0A55                     l3018:
 22344     0A55  0008               	return
 22345     0A56                     __end_of___fltol:
 22346                           
 22347                           	psect	text70
 22348     0C85                     __ptext70:	
 22349 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 22350 ;; Defined at:
 22351 ;;		line 384 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22352 ;; Parameters:    Size  Location     Type
 22353 ;;  serialData      1    wreg     PTR unsigned char 
 22354 ;;		 -> lightBlueSerial(80), 
 22355 ;; Auto vars:     Size  Location     Type
 22356 ;;  serialData      1    9[COMMON] PTR unsigned char 
 22357 ;;		 -> lightBlueSerial(80), 
 22358 ;;  length          1    8[COMMON] unsigned char 
 22359 ;; Return value:  Size  Location     Type
 22360 ;;                  1    wreg      void 
 22361 ;; Registers used:
 22362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22363 ;; Tracked objects:
 22364 ;;		On entry : 0/0
 22365 ;;		On exit  : 0/0
 22366 ;;		Unchanged: 0/0
 22367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22372 ;;Total ram usage:        3 bytes
 22373 ;; Hardware stack levels used: 1
 22374 ;; Hardware stack levels required when called: 6
 22375 ;; This function calls:
 22376 ;;		_RN487X_Write
 22377 ;;		_strlen
 22378 ;; This function is called by:
 22379 ;;		_main
 22380 ;; This function uses a non-reentrant model
 22381 ;;
 22382                           
 22383     0C85                     _LIGHTBLUE_SendSerialData:	
 22384                           ;psect for function _LIGHTBLUE_SendSerialData
 22385                           
 22386                           
 22387                           ;incstack = 0
 22388                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22389                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 22390     0C85  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 22391     0C86                     l15169:
 22392                           
 22393                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 385:     uint8_t length = strlen(s
      +                          erialData) * 2;
 22394     0C86  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 22395     0C87  00F1               	movwf	strlen@s
 22396     0C88  3002               	movlw	2
 22397     0C89  00F2               	movwf	strlen@s+1
 22398     0C8A  319D  2589  318C   	fcall	_strlen
 22399     0C8D  0871               	movf	?_strlen,w
 22400     0C8E  0709               	addwf	9,w
 22401     0C8F  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 22402     0C90                     l15171:
 22403                           
 22404                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 387:     RN487X.Write(('['));
 22405     0C90  305B               	movlw	91
 22406     0C91  00F6               	movwf	RN487X_Write@txData
 22407     0C92  3040               	movlw	low (_RN487X| (0+32768))
 22408     0C93  0084               	movwf	4
 22409     0C94  30A0               	movlw	high (_RN487X| (0+32768))
 22410     0C95  0085               	movwf	5
 22411     0C96  3F01               	moviw [1]fsr0
 22412     0C97  008A               	movwf	10
 22413     0C98  3F00               	moviw [0]fsr0
 22414     0C99  000A               	callw
 22415     0C9A  318C               	pagesel	$
 22416     0C9B                     l15173:
 22417                           
 22418                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 22419     0C9B  0141               	movlb	1	; select bank1
 22420     0C9C  085F               	movf	_sequenceNumber^(0+128),w
 22421     0C9D  390F               	andlw	15
 22422     0C9E  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22423     0C9F  0086               	movwf	6
 22424     0CA0  3001               	movlw	1	; select bank3/4
 22425     0CA1  0087               	movwf	7
 22426     0CA2  0801               	movf	1,w
 22427     0CA3  00F6               	movwf	RN487X_Write@txData
 22428     0CA4  3040               	movlw	low (_RN487X| (0+32768))
 22429     0CA5  0084               	movwf	4
 22430     0CA6  30A0               	movlw	high (_RN487X| (0+32768))
 22431     0CA7  0085               	movwf	5
 22432     0CA8  3F01               	moviw [1]fsr0
 22433     0CA9  008A               	movwf	10
 22434     0CAA  3F00               	moviw [0]fsr0
 22435     0CAB  000A               	callw
 22436     0CAC  318C               	pagesel	$
 22437     0CAD                     l15175:
 22438     0CAD  3001               	movlw	1
 22439     0CAE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 22440     0CAF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 22441     0CB0  0141               	movlb	1	; select bank1
 22442     0CB1  07DF               	addwf	_sequenceNumber^(0+128),f
 22443     0CB2                     l15177:
 22444                           
 22445                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 22446     0CB2  3053               	movlw	83
 22447     0CB3  00F6               	movwf	RN487X_Write@txData
 22448     0CB4  3040               	movlw	low (_RN487X| (0+32768))
 22449     0CB5  0084               	movwf	4
 22450     0CB6  30A0               	movlw	high (_RN487X| (0+32768))
 22451     0CB7  0085               	movwf	5
 22452     0CB8  3F01               	moviw [1]fsr0
 22453     0CB9  008A               	movwf	10
 22454     0CBA  3F00               	moviw [0]fsr0
 22455     0CBB  000A               	callw
 22456     0CBC  318C               	pagesel	$
 22457     0CBD                     l15179:
 22458                           
 22459                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 22460     0CBD  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 22461     0CBE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 22462     0CBF  3004               	movlw	4
 22463     0CC0                     u14165:
 22464     0CC0  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 22465     0CC1  0B89               	decfsz	9,f
 22466     0CC2  2CC0               	goto	u14165
 22467     0CC3  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 22468     0CC4  390F               	andlw	15
 22469     0CC5  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22470     0CC6  0086               	movwf	6
 22471     0CC7  3001               	movlw	1	; select bank3/4
 22472     0CC8  0087               	movwf	7
 22473     0CC9  0801               	movf	1,w
 22474     0CCA  00F6               	movwf	RN487X_Write@txData
 22475     0CCB  3040               	movlw	low (_RN487X| (0+32768))
 22476     0CCC  0084               	movwf	4
 22477     0CCD  30A0               	movlw	high (_RN487X| (0+32768))
 22478     0CCE  0085               	movwf	5
 22479     0CCF  3F01               	moviw [1]fsr0
 22480     0CD0  008A               	movwf	10
 22481     0CD1  3F00               	moviw [0]fsr0
 22482     0CD2  000A               	callw
 22483     0CD3  318C               	pagesel	$
 22484     0CD4                     l15181:
 22485                           
 22486                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 22487     0CD4  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 22488     0CD5  390F               	andlw	15
 22489     0CD6  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22490     0CD7  0086               	movwf	6
 22491     0CD8  3001               	movlw	1	; select bank3/4
 22492     0CD9  0087               	movwf	7
 22493     0CDA  0801               	movf	1,w
 22494     0CDB  00F6               	movwf	RN487X_Write@txData
 22495     0CDC  3040               	movlw	low (_RN487X| (0+32768))
 22496     0CDD  0084               	movwf	4
 22497     0CDE  30A0               	movlw	high (_RN487X| (0+32768))
 22498     0CDF  0085               	movwf	5
 22499     0CE0  3F01               	moviw [1]fsr0
 22500     0CE1  008A               	movwf	10
 22501     0CE2  3F00               	moviw [0]fsr0
 22502     0CE3  000A               	callw
 22503     0CE4  318C               	pagesel	$
 22504                           
 22505                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     while (*serialData) {
 22506     0CE5  2D1A               	goto	l15187
 22507     0CE6                     l15183:
 22508                           
 22509                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 22510     0CE6  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 22511     0CE7  0086               	movwf	6
 22512     0CE8  3002               	movlw	2	; select bank4/5
 22513     0CE9  0087               	movwf	7
 22514     0CEA  0801               	movf	1,w
 22515     0CEB  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 22516     0CEC  3004               	movlw	4
 22517     0CED                     u14175:
 22518     0CED  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 22519     0CEE  0B89               	decfsz	9,f
 22520     0CEF  2CED               	goto	u14175
 22521     0CF0  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 22522     0CF1  390F               	andlw	15
 22523     0CF2  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22524     0CF3  0086               	movwf	6
 22525     0CF4  3001               	movlw	1	; select bank3/4
 22526     0CF5  0087               	movwf	7
 22527     0CF6  0801               	movf	1,w
 22528     0CF7  00F6               	movwf	RN487X_Write@txData
 22529     0CF8  3040               	movlw	low (_RN487X| (0+32768))
 22530     0CF9  0084               	movwf	4
 22531     0CFA  30A0               	movlw	high (_RN487X| (0+32768))
 22532     0CFB  0085               	movwf	5
 22533     0CFC  3F01               	moviw [1]fsr0
 22534     0CFD  008A               	movwf	10
 22535     0CFE  3F00               	moviw [0]fsr0
 22536     0CFF  000A               	callw
 22537     0D00  318C               	pagesel	$
 22538                           
 22539                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 22540     0D01  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 22541     0D02  0086               	movwf	6
 22542     0D03  3002               	movlw	2	; select bank4/5
 22543     0D04  0087               	movwf	7
 22544     0D05  0801               	movf	1,w
 22545     0D06  390F               	andlw	15
 22546     0D07  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 22547     0D08  0086               	movwf	6
 22548     0D09  3001               	movlw	1	; select bank3/4
 22549     0D0A  0087               	movwf	7
 22550     0D0B  0801               	movf	1,w
 22551     0D0C  00F6               	movwf	RN487X_Write@txData
 22552     0D0D  3040               	movlw	low (_RN487X| (0+32768))
 22553     0D0E  0084               	movwf	4
 22554     0D0F  30A0               	movlw	high (_RN487X| (0+32768))
 22555     0D10  0085               	movwf	5
 22556     0D11  3F01               	moviw [1]fsr0
 22557     0D12  008A               	movwf	10
 22558     0D13  3F00               	moviw [0]fsr0
 22559     0D14  000A               	callw
 22560     0D15  318C               	pagesel	$
 22561     0D16                     l15185:
 22562     0D16  3001               	movlw	1
 22563     0D17  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 22564     0D18  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 22565     0D19  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 22566     0D1A                     l15187:
 22567                           
 22568                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     while (*serialData) {
 22569     0D1A  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 22570     0D1B  0086               	movwf	6
 22571     0D1C  3002               	movlw	2	; select bank4/5
 22572     0D1D  0087               	movwf	7
 22573     0D1E  0801               	movf	1,w
 22574     0D1F  1D03               	btfss	3,2
 22575     0D20  2D22               	goto	u14181
 22576     0D21  2D23               	goto	u14180
 22577     0D22                     u14181:
 22578     0D22  2CE6               	goto	l15183
 22579     0D23                     u14180:
 22580     0D23                     l15189:
 22581                           
 22582                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     RN487X.Write((']'));
 22583     0D23  305D               	movlw	93
 22584     0D24  00F6               	movwf	RN487X_Write@txData
 22585     0D25  3040               	movlw	low (_RN487X| (0+32768))
 22586     0D26  0084               	movwf	4
 22587     0D27  30A0               	movlw	high (_RN487X| (0+32768))
 22588     0D28  0085               	movwf	5
 22589     0D29  3F01               	moviw [1]fsr0
 22590     0D2A  008A               	movwf	10
 22591     0D2B  3F00               	moviw [0]fsr0
 22592     0D2C  000A               	callw
 22593     0D2D  318C               	pagesel	$
 22594     0D2E                     l145:
 22595     0D2E  0008               	return
 22596     0D2F                     __end_of_LIGHTBLUE_SendSerialData:
 22597                           
 22598                           	psect	text71
 22599     12DD                     __ptext71:	
 22600 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 22601 ;; Defined at:
 22602 ;;		line 369 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22603 ;; Parameters:    Size  Location     Type
 22604 ;;		None
 22605 ;; Auto vars:     Size  Location     Type
 22606 ;;  payload        19    2[BANK0 ] unsigned char [19]
 22607 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 22608 ;;  value           1   21[BANK0 ] unsigned char 
 22609 ;; Return value:  Size  Location     Type
 22610 ;;                  1    wreg      void 
 22611 ;; Registers used:
 22612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22613 ;; Tracked objects:
 22614 ;;		On entry : 0/0
 22615 ;;		On exit  : 0/0
 22616 ;;		Unchanged: 0/0
 22617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22619 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22620 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22621 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22622 ;;Total ram usage:       23 bytes
 22623 ;; Hardware stack levels used: 1
 22624 ;; Hardware stack levels required when called: 7
 22625 ;; This function calls:
 22626 ;;		_LIGHTBLUE_SendPacket
 22627 ;;		_LIGHTBLUE_SplitByte
 22628 ;;		_strlen
 22629 ;; This function is called by:
 22630 ;;		_main
 22631 ;; This function uses a non-reentrant model
 22632 ;;
 22633                           
 22634     12DD                     _LIGHTBLUE_SendProtocolVersion:	
 22635                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 22636                           
 22637     12DD                     l17343:	
 22638                           ;incstack = 0
 22639                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22640                           
 22641                           
 22642                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 370:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 371:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 372:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 374:     *payload = '\0';
 22643     12DD  0140               	movlb	0	; select bank0
 22644     12DE  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 22645                           
 22646                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 376:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 22647     12DF  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 22648     12E0  2AF8               	goto	l17351
 22649     12E1                     l17345:
 22650                           
 22651                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:         value = protocol_vers
      +                          ion_number[dataIndex];
 22652     12E1  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 22653     12E2  3E74               	addlw	low (STR_1| (0+32768))
 22654     12E3  0084               	movwf	4
 22655     12E4  30A0               	movlw	high (STR_1| (0+32768))
 22656     12E5  1803               	skipnc
 22657     12E6  3E01               	addlw	1
 22658     12E7  0085               	movwf	5
 22659     12E8  0800               	movf	0,w	;code access
 22660     12E9  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 22661     12EA                     l17347:
 22662                           
 22663                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 22664     12EA  3022               	movlw	low LIGHTBLUE_SendProtocolVersion@payload
 22665     12EB  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 22666     12EC  3000               	movlw	high LIGHTBLUE_SendProtocolVersion@payload
 22667     12ED  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 22668     12EE  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 22669     12EF  00F8               	movwf	LIGHTBLUE_SplitByte@value
 22670     12F0  3192  2234  3192   	fcall	_LIGHTBLUE_SplitByte
 22671     12F3                     l17349:
 22672                           
 22673                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:     }
 22674     12F3  3001               	movlw	1
 22675     12F4  0140               	movlb	0	; select bank0
 22676     12F5  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 22677     12F6  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 22678     12F7  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 22679     12F8                     l17351:
 22680     12F8  3074               	movlw	low (STR_1| (0+32768))
 22681     12F9  00F1               	movwf	strlen@s
 22682     12FA  30A0               	movlw	high (STR_1| (0+32768))
 22683     12FB  00F2               	movwf	strlen@s+1
 22684     12FC  319D  2589  3192   	fcall	_strlen
 22685     12FF  0140               	movlb	0	; select bank0
 22686     1300  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 22687     1301  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 22688     1302  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 22689     1303  0872               	movf	?_strlen+1,w
 22690     1304  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 22691     1305  1D03               	skipz
 22692     1306  2B09               	goto	u16595
 22693     1307  0871               	movf	?_strlen,w
 22694     1308  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 22695     1309                     u16595:
 22696     1309  1C03               	skipc
 22697     130A  2B0C               	goto	u16591
 22698     130B  2B0D               	goto	u16590
 22699     130C                     u16591:
 22700     130C  2AE1               	goto	l17345
 22701     130D                     u16590:
 22702     130D                     l17353:
 22703                           
 22704                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 22705     130D  3022               	movlw	low LIGHTBLUE_SendProtocolVersion@payload
 22706     130E  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22707     130F  3000               	movlw	high LIGHTBLUE_SendProtocolVersion@payload
 22708     1310  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 22709     1311  3056               	movlw	86
 22710     1312  318B  235A  3192   	fcall	_LIGHTBLUE_SendPacket
 22711     1315                     l139:
 22712     1315  0008               	return
 22713     1316                     __end_of_LIGHTBLUE_SendProtocolVersion:
 22714                           
 22715                           	psect	text72
 22716     1D58                     __ptext72:	
 22717 ;; *************** function _LIGHTBLUE_PushButton *****************
 22718 ;; Defined at:
 22719 ;;		line 341 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;		None
 22722 ;; Auto vars:     Size  Location     Type
 22723 ;;  payload         3    1[BANK0 ] unsigned char [3]
 22724 ;;  button          1    0[BANK0 ] unsigned char 
 22725 ;; Return value:  Size  Location     Type
 22726 ;;                  1    wreg      void 
 22727 ;; Registers used:
 22728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22729 ;; Tracked objects:
 22730 ;;		On entry : 0/0
 22731 ;;		On exit  : 0/0
 22732 ;;		Unchanged: 0/0
 22733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22737 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22738 ;;Total ram usage:        4 bytes
 22739 ;; Hardware stack levels used: 1
 22740 ;; Hardware stack levels required when called: 7
 22741 ;; This function calls:
 22742 ;;		_LIGHTBLUE_GetButtonValue
 22743 ;;		_LIGHTBLUE_SendPacket
 22744 ;;		_LIGHTBLUE_SplitByte
 22745 ;; This function is called by:
 22746 ;;		_main
 22747 ;; This function uses a non-reentrant model
 22748 ;;
 22749                           
 22750     1D58                     _LIGHTBLUE_PushButton:	
 22751                           ;psect for function _LIGHTBLUE_PushButton
 22752                           
 22753     1D58                     l17321:	
 22754                           ;incstack = 0
 22755                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22756                           
 22757                           
 22758                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 343:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 22759     1D58  3199  21F4  319D   	fcall	_LIGHTBLUE_GetButtonValue
 22760     1D5B  0140               	movlb	0	; select bank0
 22761     1D5C  00A0               	movwf	LIGHTBLUE_PushButton@button
 22762     1D5D                     l17323:
 22763                           
 22764                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 345:     *payload = '\0';
 22765     1D5D  01A1               	clrf	LIGHTBLUE_PushButton@payload
 22766     1D5E                     l17325:
 22767                           
 22768                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 22769     1D5E  3021               	movlw	low LIGHTBLUE_PushButton@payload
 22770     1D5F  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 22771     1D60  3000               	movlw	high LIGHTBLUE_PushButton@payload
 22772     1D61  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 22773     1D62  0820               	movf	LIGHTBLUE_PushButton@button,w
 22774     1D63  00F8               	movwf	LIGHTBLUE_SplitByte@value
 22775     1D64  3192  2234  319D   	fcall	_LIGHTBLUE_SplitByte
 22776     1D67                     l17327:
 22777                           
 22778                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 348:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 22779     1D67  3021               	movlw	low LIGHTBLUE_PushButton@payload
 22780     1D68  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22781     1D69  3000               	movlw	high LIGHTBLUE_PushButton@payload
 22782     1D6A  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 22783     1D6B  3050               	movlw	80
 22784     1D6C  318B  235A  319D   	fcall	_LIGHTBLUE_SendPacket
 22785     1D6F                     l130:
 22786     1D6F  0008               	return
 22787     1D70                     __end_of_LIGHTBLUE_PushButton:
 22788                           
 22789                           	psect	text73
 22790     19F4                     __ptext73:	
 22791 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 22792 ;; Defined at:
 22793 ;;		line 474 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22794 ;; Parameters:    Size  Location     Type
 22795 ;;		None
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;		None
 22798 ;; Return value:  Size  Location     Type
 22799 ;;                  1    wreg      unsigned char 
 22800 ;; Registers used:
 22801 ;;		wreg, status,2, status,0
 22802 ;; Tracked objects:
 22803 ;;		On entry : 0/0
 22804 ;;		On exit  : 0/0
 22805 ;;		Unchanged: 0/0
 22806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22811 ;;Total ram usage:        0 bytes
 22812 ;; Hardware stack levels used: 1
 22813 ;; Hardware stack levels required when called: 4
 22814 ;; This function calls:
 22815 ;;		Nothing
 22816 ;; This function is called by:
 22817 ;;		_LIGHTBLUE_PushButton
 22818 ;; This function uses a non-reentrant model
 22819 ;;
 22820                           
 22821     19F4                     _LIGHTBLUE_GetButtonValue:	
 22822                           ;psect for function _LIGHTBLUE_GetButtonValue
 22823                           
 22824     19F4                     l14551:	
 22825                           ;incstack = 0
 22826                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 22827                           
 22828                           
 22829                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 475:     return (0x01) - PORTAbits
      +                          .RA7;
 22830     19F4  0140               	movlb	0	; select bank0
 22831     19F5  0D0C               	rlf	12,w	;volatile
 22832     19F6  0D0C               	rlf	12,w	;volatile
 22833     19F7  3901               	andlw	1
 22834     19F8  3C01               	sublw	1
 22835     19F9                     l202:
 22836     19F9  0008               	return
 22837     19FA                     __end_of_LIGHTBLUE_GetButtonValue:
 22838                           
 22839                           	psect	text74
 22840     0DDA                     __ptext74:	
 22841 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 22842 ;; Defined at:
 22843 ;;		line 399 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;  receivedByte    1    wreg     unsigned char 
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 22848 ;; Return value:  Size  Location     Type
 22849 ;;                  1    wreg      void 
 22850 ;; Registers used:
 22851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22852 ;; Tracked objects:
 22853 ;;		On entry : 0/0
 22854 ;;		On exit  : 0/0
 22855 ;;		Unchanged: 0/0
 22856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22858 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22860 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22861 ;;Total ram usage:        9 bytes
 22862 ;; Hardware stack levels used: 1
 22863 ;; Hardware stack levels required when called: 11
 22864 ;; This function calls:
 22865 ;;		_LIGHTBLUE_PerformAction
 22866 ;; This function is called by:
 22867 ;;		_main
 22868 ;; This function uses a non-reentrant model
 22869 ;;
 22870                           
 22871     0DDA                     _LIGHTBLUE_ParseIncomingPacket:	
 22872                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 22873                           
 22874                           
 22875                           ;incstack = 0
 22876                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22877                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 22878     0DDA  0140               	movlb	0	; select bank0
 22879     0DDB  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 22880     0DDC                     l15191:
 22881                           
 22882                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 400:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 405:   
      +                            switch (parserState) {
 22883     0DDC  2E98               	goto	l15251
 22884     0DDD                     l15193:
 22885                           
 22886                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 408:             parserState = PAC
      +                          KET_ID;
 22887     0DDD  3002               	movlw	2
 22888     0DDE  0141               	movlb	1	; select bank1
 22889     0DDF  00DE               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 22890                           
 22891                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             break;
 22892     0DE0  2EB9               	goto	l187
 22893     0DE1                     l15195:
 22894                           
 22895                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:             packetID = receiv
      +                          edByte;
 22896     0DE1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22897     0DE2  0141               	movlb	1	; select bank1
 22898     0DE3  00DC               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID^(0+128)
 22899                           
 22900                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             parserState = PAY
      +                          LOAD_SIZE_0;
 22901     0DE4  3003               	movlw	3
 22902     0DE5  00DE               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 22903                           
 22904                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             break;
 22905     0DE6  2EB9               	goto	l187
 22906     0DE7                     l15197:
 22907                           
 22908                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 415:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 22909     0DE7  303A               	movlw	58
 22910     0DE8  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22911     0DE9  1C03               	skipc
 22912     0DEA  2DEC               	goto	u14191
 22913     0DEB  2DED               	goto	u14190
 22914     0DEC                     u14191:
 22915     0DEC  2DF6               	goto	l15201
 22916     0DED                     u14190:
 22917     0DED                     l15199:
 22918     0DED  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22919     0DEE  395F               	andlw	95
 22920     0DEF  3EC9               	addlw	201
 22921     0DF0  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$461
 22922     0DF1  30FF               	movlw	255
 22923     0DF2  1803               	skipnc
 22924     0DF3  3000               	movlw	0
 22925     0DF4  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$461+1
 22926     0DF5  2DFD               	goto	l164
 22927     0DF6                     l15201:
 22928     0DF6  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22929     0DF7  3ED0               	addlw	208
 22930     0DF8  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$461
 22931     0DF9  30FF               	movlw	255
 22932     0DFA  1803               	skipnc
 22933     0DFB  3000               	movlw	0
 22934     0DFC  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$461+1
 22935     0DFD                     l164:
 22936     0DFD  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$461,w
 22937     0DFE  0141               	movlb	1	; select bank1
 22938     0DFF  00DD               	movwf	LIGHTBLUE_ParseIncomingPacket@length^(0+128)
 22939                           
 22940                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             parserState = PAY
      +                          LOAD_SIZE_1;
 22941     0E00  3004               	movlw	4
 22942     0E01  00DE               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 22943                           
 22944                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             break;
 22945     0E02  2EB9               	goto	l187
 22946     0E03                     l15203:
 22947                           
 22948                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 419:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 22949     0E03  303A               	movlw	58
 22950     0E04  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22951     0E05  1C03               	skipc
 22952     0E06  2E08               	goto	u14201
 22953     0E07  2E09               	goto	u14200
 22954     0E08                     u14201:
 22955     0E08  2E12               	goto	l15207
 22956     0E09                     u14200:
 22957     0E09                     l15205:
 22958     0E09  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22959     0E0A  395F               	andlw	95
 22960     0E0B  3EC9               	addlw	201
 22961     0E0C  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$462
 22962     0E0D  30FF               	movlw	255
 22963     0E0E  1803               	skipnc
 22964     0E0F  3000               	movlw	0
 22965     0E10  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$462+1
 22966     0E11  2E19               	goto	l15209
 22967     0E12                     l15207:
 22968     0E12  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 22969     0E13  3ED0               	addlw	208
 22970     0E14  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$462
 22971     0E15  30FF               	movlw	255
 22972     0E16  1803               	skipnc
 22973     0E17  3000               	movlw	0
 22974     0E18  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$462+1
 22975     0E19                     l15209:
 22976     0E19  0141               	movlb	1	; select bank1
 22977     0E1A  085D               	movf	LIGHTBLUE_ParseIncomingPacket@length^(0+128),w
 22978     0E1B  0140               	movlb	0	; select bank0
 22979     0E1C  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 22980     0E1D  3003               	movlw	3
 22981     0E1E                     u14215:
 22982     0E1E  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 22983     0E1F  3EFF               	addlw	-1
 22984     0E20  1D03               	skipz
 22985     0E21  2E1E               	goto	u14215
 22986     0E22  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 22987     0E23  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$462,w
 22988     0E24  0141               	movlb	1	; select bank1
 22989     0E25  00DD               	movwf	LIGHTBLUE_ParseIncomingPacket@length^(0+128)
 22990     0E26                     l15211:
 22991                           
 22992                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             parserState = PAY
      +                          LOAD_0;
 22993     0E26  3005               	movlw	5
 22994     0E27  00DE               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 22995                           
 22996                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             break;
 22997     0E28  2EB9               	goto	l187
 22998     0E29                     l15213:
 22999                           
 23000                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 423:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 23001     0E29  303A               	movlw	58
 23002     0E2A  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23003     0E2B  1C03               	skipc
 23004     0E2C  2E2E               	goto	u14221
 23005     0E2D  2E2F               	goto	u14220
 23006     0E2E                     u14221:
 23007     0E2E  2E39               	goto	l15217
 23008     0E2F                     u14220:
 23009     0E2F                     l15215:
 23010     0E2F  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23011     0E30  395F               	andlw	95
 23012     0E31  3EC9               	addlw	201
 23013     0E32  0141               	movlb	1	; select bank1
 23014     0E33  00C3               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 23015     0E34  30FF               	movlw	255
 23016     0E35  1803               	skipnc
 23017     0E36  3000               	movlw	0
 23018     0E37  00C4               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 23019     0E38  2E41               	goto	l15219
 23020     0E39                     l15217:
 23021     0E39  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23022     0E3A  3ED0               	addlw	208
 23023     0E3B  0141               	movlb	1	; select bank1
 23024     0E3C  00C3               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 23025     0E3D  30FF               	movlw	255
 23026     0E3E  1803               	skipnc
 23027     0E3F  3000               	movlw	0
 23028     0E40  00C4               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 23029     0E41                     l15219:
 23030                           
 23031                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             length--;
 23032     0E41  3001               	movlw	1
 23033     0E42  02DD               	subwf	LIGHTBLUE_ParseIncomingPacket@length^(0+128),f
 23034     0E43                     l15221:
 23035                           
 23036                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             if (length == 0) 
      +                          {
 23037     0E43  085D               	movf	LIGHTBLUE_ParseIncomingPacket@length^(0+128),w
 23038     0E44  1D03               	btfss	3,2
 23039     0E45  2E47               	goto	u14231
 23040     0E46  2E48               	goto	u14230
 23041     0E47                     u14231:
 23042     0E47  2E4A               	goto	l15225
 23043     0E48                     u14230:
 23044     0E48                     l15223:
 23045                           
 23046                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:                 parserState =
      +                           IDLE;
 23047     0E48  01DE               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 23048                           
 23049                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:             } else {
 23050     0E49  2EB9               	goto	l187
 23051     0E4A                     l15225:
 23052                           
 23053                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:                 parserState =
      +                           PAYLOAD_1;
 23054     0E4A  3006               	movlw	6
 23055     0E4B  00DE               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 23056     0E4C  2EB9               	goto	l187
 23057     0E4D                     l15227:
 23058                           
 23059                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 432:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 23060     0E4D  303A               	movlw	58
 23061     0E4E  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23062     0E4F  1C03               	skipc
 23063     0E50  2E52               	goto	u14241
 23064     0E51  2E53               	goto	u14240
 23065     0E52                     u14241:
 23066     0E52  2E5C               	goto	l15231
 23067     0E53                     u14240:
 23068     0E53                     l15229:
 23069     0E53  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23070     0E54  395F               	andlw	95
 23071     0E55  3EC9               	addlw	201
 23072     0E56  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 23073     0E57  30FF               	movlw	255
 23074     0E58  1803               	skipnc
 23075     0E59  3000               	movlw	0
 23076     0E5A  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 23077     0E5B  2E63               	goto	l15233
 23078     0E5C                     l15231:
 23079     0E5C  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23080     0E5D  3ED0               	addlw	208
 23081     0E5E  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 23082     0E5F  30FF               	movlw	255
 23083     0E60  1803               	skipnc
 23084     0E61  3000               	movlw	0
 23085     0E62  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 23086     0E63                     l15233:
 23087     0E63  0141               	movlb	1	; select bank1
 23088     0E64  0844               	movf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128),w
 23089     0E65  0140               	movlb	0	; select bank0
 23090     0E66  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 23091     0E67  0141               	movlb	1	; select bank1
 23092     0E68  0843               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 23093     0E69  0140               	movlb	0	; select bank0
 23094     0E6A  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 23095     0E6B  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 23096     0E6C  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 23097     0E6D  30F0               	movlw	240
 23098     0E6E  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 23099     0E6F  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 23100     0E70  390F               	andlw	15
 23101     0E71  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 23102     0E72  30F0               	movlw	240
 23103     0E73  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 23104     0E74  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 23105     0E75  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 23106     0E76  0141               	movlb	1	; select bank1
 23107     0E77  00C3               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 23108     0E78  0140               	movlb	0	; select bank0
 23109     0E79  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$463+1,w
 23110     0E7A  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 23111     0E7B  0141               	movlb	1	; select bank1
 23112     0E7C  00C4               	movwf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128)
 23113     0E7D                     l15235:
 23114                           
 23115                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 23116     0E7D  0843               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 23117     0E7E  0140               	movlb	0	; select bank0
 23118     0E7F  00A7               	movwf	LIGHTBLUE_PerformAction@data
 23119     0E80  0141               	movlb	1	; select bank1
 23120     0E81  085C               	movf	LIGHTBLUE_ParseIncomingPacket@packetID^(0+128),w
 23121     0E82  3192  226C  318D   	fcall	_LIGHTBLUE_PerformAction
 23122     0E85                     l15237:
 23123                           
 23124                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             length--;
 23125     0E85  3001               	movlw	1
 23126     0E86  0141               	movlb	1	; select bank1
 23127     0E87  02DD               	subwf	LIGHTBLUE_ParseIncomingPacket@length^(0+128),f
 23128     0E88                     l15239:
 23129                           
 23130                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             if (length == 0) 
      +                          {
 23131     0E88  085D               	movf	LIGHTBLUE_ParseIncomingPacket@length^(0+128),w
 23132     0E89  1D03               	btfss	3,2
 23133     0E8A  2E8C               	goto	u14251
 23134     0E8B  2E8D               	goto	u14250
 23135     0E8C                     u14251:
 23136     0E8C  2E26               	goto	l15211
 23137     0E8D                     u14250:
 23138     0E8D  2E48               	goto	l15223
 23139     0E8E                     l15245:
 23140                           
 23141                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 443:             if (receivedByte 
      +                          == ('[')) {
 23142     0E8E  305B               	movlw	91
 23143     0E8F  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 23144     0E90  1D03               	btfss	3,2
 23145     0E91  2E93               	goto	u14261
 23146     0E92  2E94               	goto	u14260
 23147     0E93                     u14261:
 23148     0E93  2EB9               	goto	l187
 23149     0E94                     u14260:
 23150     0E94                     l15247:
 23151                           
 23152                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:                 parserState =
      +                           SEQUENCE_NUMBER;
 23153     0E94  0141               	movlb	1	; select bank1
 23154     0E95  01DE               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128)
 23155     0E96  0ADE               	incf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128),f
 23156     0E97  2EB9               	goto	l187
 23157     0E98                     l15251:
 23158     0E98  0141               	movlb	1	; select bank1
 23159     0E99  085E               	movf	LIGHTBLUE_ParseIncomingPacket@parserState^(0+128),w
 23160     0E9A  0140               	movlb	0	; select bank0
 23161     0E9B  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 23162     0E9C  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 23163                           
 23164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23165                           ; Switch size 1, requested type "simple"
 23166                           ; Number of cases is 1, Range of values is 0 to 0
 23167                           ; switch strategies available:
 23168                           ; Name         Instructions Cycles
 23169                           ; simple_byte            4     3 (average)
 23170                           ; direct_byte            8     6 (fixed)
 23171                           ; jumptable            260     6 (fixed)
 23172                           ;	Chosen strategy is simple_byte
 23173     0E9D  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 23174     0E9E  3A00               	xorlw	0	; case 0
 23175     0E9F  1903               	skipnz
 23176     0EA0  2EA2               	goto	l17539
 23177     0EA1  2E8E               	goto	l15245
 23178     0EA2                     l17539:
 23179                           
 23180                           ; Switch size 1, requested type "simple"
 23181                           ; Number of cases is 7, Range of values is 0 to 6
 23182                           ; switch strategies available:
 23183                           ; Name         Instructions Cycles
 23184                           ; direct_byte           20     6 (fixed)
 23185                           ; simple_byte           22    12 (average)
 23186                           ; jumptable            260     6 (fixed)
 23187                           ;	Chosen strategy is simple_byte
 23188     0EA2  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 23189     0EA3  3A00               	xorlw	0	; case 0
 23190     0EA4  1903               	skipnz
 23191     0EA5  2E8E               	goto	l15245
 23192     0EA6  3A01               	xorlw	1	; case 1
 23193     0EA7  1903               	skipnz
 23194     0EA8  2DDD               	goto	l15193
 23195     0EA9  3A03               	xorlw	3	; case 2
 23196     0EAA  1903               	skipnz
 23197     0EAB  2DE1               	goto	l15195
 23198     0EAC  3A01               	xorlw	1	; case 3
 23199     0EAD  1903               	skipnz
 23200     0EAE  2DE7               	goto	l15197
 23201     0EAF  3A07               	xorlw	7	; case 4
 23202     0EB0  1903               	skipnz
 23203     0EB1  2E03               	goto	l15203
 23204     0EB2  3A01               	xorlw	1	; case 5
 23205     0EB3  1903               	skipnz
 23206     0EB4  2E29               	goto	l15213
 23207     0EB5  3A03               	xorlw	3	; case 6
 23208     0EB6  1903               	skipnz
 23209     0EB7  2E4D               	goto	l15227
 23210     0EB8  2E8E               	goto	l15245
 23211     0EB9                     l187:
 23212     0EB9  0008               	return
 23213     0EBA                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 23214                           
 23215                           	psect	text75
 23216     126C                     __ptext75:	
 23217 ;; *************** function _LIGHTBLUE_PerformAction *****************
 23218 ;; Defined at:
 23219 ;;		line 498 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23220 ;; Parameters:    Size  Location     Type
 23221 ;;  id              1    wreg     unsigned char 
 23222 ;;  data            1    7[BANK0 ] unsigned char 
 23223 ;; Auto vars:     Size  Location     Type
 23224 ;;  id              1    9[BANK0 ] unsigned char 
 23225 ;;  led             1   10[BANK0 ] unsigned char 
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1    wreg      void 
 23228 ;; Registers used:
 23229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23239 ;;Total ram usage:        4 bytes
 23240 ;; Hardware stack levels used: 1
 23241 ;; Hardware stack levels required when called: 10
 23242 ;; This function calls:
 23243 ;;		_EUSART1_Write
 23244 ;;		_EUSART2_Write
 23245 ;;		_LIGHTBLUE_SetErrorLedValue
 23246 ;; This function is called by:
 23247 ;;		_LIGHTBLUE_ParseIncomingPacket
 23248 ;; This function uses a non-reentrant model
 23249 ;;
 23250                           
 23251     126C                     _LIGHTBLUE_PerformAction:	
 23252                           ;psect for function _LIGHTBLUE_PerformAction
 23253                           
 23254                           
 23255                           ;incstack = 0
 23256                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23257                           ;LIGHTBLUE_PerformAction@id stored from wreg
 23258     126C  0140               	movlb	0	; select bank0
 23259     126D  00A9               	movwf	LIGHTBLUE_PerformAction@id
 23260     126E                     l14563:
 23261                           
 23262                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 499:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 501:     switch (id) {
 23263     126E  2A9B               	goto	l14575
 23264     126F                     l14565:
 23265                           
 23266                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 503:             led = (data >> 4)
      +                           & (0x01);
 23267     126F  0827               	movf	LIGHTBLUE_PerformAction@data,w
 23268     1270  00A8               	movwf	??_LIGHTBLUE_PerformAction
 23269     1271  3004               	movlw	4
 23270     1272                     u13115:
 23271     1272  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 23272     1273  0B89               	decfsz	9,f
 23273     1274  2A72               	goto	u13115
 23274     1275  0828               	movf	??_LIGHTBLUE_PerformAction,w
 23275     1276  3901               	andlw	1
 23276     1277  00AA               	movwf	LIGHTBLUE_PerformAction@led
 23277                           
 23278                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             if (led == (0x00)
      +                          ) {
 23279     1278  082A               	movf	LIGHTBLUE_PerformAction@led,w
 23280     1279  1D03               	btfss	3,2
 23281     127A  2A7C               	goto	u13121
 23282     127B  2A7D               	goto	u13120
 23283     127C                     u13121:
 23284     127C  2A85               	goto	l14569
 23285     127D                     u13120:
 23286     127D                     l14567:
 23287                           
 23288                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:                 if ((data & (
      +                          0x01)) == (0x00)) {
 23289     127D  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 23290     127E  2A80               	goto	u13131
 23291     127F  2A81               	goto	u13130
 23292     1280                     u13131:
 23293     1280  2A83               	goto	l224
 23294     1281                     u13130:
 23295     1281                     l221:	
 23296                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 23297                           
 23298     1281  1698               	bsf	24,5	;volatile
 23299     1282  2AA3               	goto	l230
 23300     1283                     l224:	
 23301                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 508:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 23302                           
 23303     1283  1298               	bcf	24,5	;volatile
 23304     1284  2AA3               	goto	l230
 23305     1285                     l14569:
 23306                           
 23307                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 23308     1285  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 23309     1286  2A88               	goto	u13141
 23310     1287  2A8A               	goto	u13140
 23311     1288                     u13141:
 23312     1288  3001               	movlw	1
 23313     1289  2A8B               	goto	u13150
 23314     128A                     u13140:
 23315     128A  3000               	movlw	0
 23316     128B                     u13150:
 23317     128B  319B  2363  3192   	fcall	_LIGHTBLUE_SetErrorLedValue
 23318     128E  2AA3               	goto	l230
 23319     128F                     l14571:
 23320                           
 23321                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 515:             uart[UART_CDC].Wr
      +                          ite(data);
 23322     128F  0827               	movf	LIGHTBLUE_PerformAction@data,w
 23323     1290  00F1               	movwf	EUSART2_Write@txData
 23324     1291  3002               	movlw	low ((_uart+2)| (0+32768))
 23325     1292  0084               	movwf	4
 23326     1293  3098               	movlw	high ((_uart+2)| (0+32768))
 23327     1294  0085               	movwf	5
 23328     1295  3F01               	moviw [1]fsr0
 23329     1296  008A               	movwf	10
 23330     1297  3F00               	moviw [0]fsr0
 23331     1298  000A               	callw
 23332     1299  3192               	pagesel	$
 23333                           
 23334                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             break;
 23335     129A  2AA3               	goto	l230
 23336     129B                     l14575:
 23337     129B  0829               	movf	LIGHTBLUE_PerformAction@id,w
 23338                           
 23339                           ; Switch size 1, requested type "simple"
 23340                           ; Number of cases is 2, Range of values is 76 to 83
 23341                           ; switch strategies available:
 23342                           ; Name         Instructions Cycles
 23343                           ; simple_byte            7     4 (average)
 23344                           ; direct_byte           25     9 (fixed)
 23345                           ; jumptable            263     9 (fixed)
 23346                           ;	Chosen strategy is simple_byte
 23347     129C  3A4C               	xorlw	76	; case 76
 23348     129D  1903               	skipnz
 23349     129E  2A6F               	goto	l14565
 23350     129F  3A1F               	xorlw	31	; case 83
 23351     12A0  1903               	skipnz
 23352     12A1  2A8F               	goto	l14571
 23353     12A2  2AA3               	goto	l230
 23354     12A3                     l230:
 23355     12A3  0008               	return
 23356     12A4                     __end_of_LIGHTBLUE_PerformAction:
 23357                           
 23358                           	psect	text76
 23359     1B63                     __ptext76:	
 23360 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 23361 ;; Defined at:
 23362 ;;		line 486 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;  value           1    wreg     _Bool 
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;  value           1    6[BANK0 ] _Bool 
 23367 ;; Return value:  Size  Location     Type
 23368 ;;                  1    wreg      void 
 23369 ;; Registers used:
 23370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23379 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23380 ;;Total ram usage:        2 bytes
 23381 ;; Hardware stack levels used: 1
 23382 ;; Hardware stack levels required when called: 9
 23383 ;; This function calls:
 23384 ;;		_LIGHTBLUE_UpdateErrorLed
 23385 ;; This function is called by:
 23386 ;;		_LIGHTBLUE_PerformAction
 23387 ;; This function uses a non-reentrant model
 23388 ;;
 23389                           
 23390     1B63                     _LIGHTBLUE_SetErrorLedValue:	
 23391                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 23392                           
 23393                           
 23394                           ;incstack = 0
 23395                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23396                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 23397     1B63  0140               	movlb	0	; select bank0
 23398     1B64  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 23399     1B65                     l14043:
 23400                           
 23401                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 487:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 23402     1B65  3001               	movlw	1
 23403     1B66  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 23404     1B67  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 23405     1B68  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 23406     1B69  0141               	movlb	1	; select bank1
 23407     1B6A  0846               	movf	(_bitMap^(0+128)+1),w	;volatile
 23408     1B6B  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 23409     1B6C  39FE               	andlw	-2
 23410     1B6D  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 23411     1B6E  00C6               	movwf	(_bitMap^(0+128)+1)	;volatile
 23412     1B6F                     l14045:
 23413                           
 23414                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 23415     1B6F  319E  262A  319B   	fcall	_LIGHTBLUE_UpdateErrorLed
 23416     1B72                     l211:
 23417     1B72  0008               	return
 23418     1B73                     __end_of_LIGHTBLUE_SetErrorLedValue:
 23419                           
 23420                           	psect	text77
 23421     1E2A                     __ptext77:	
 23422 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 23423 ;; Defined at:
 23424 ;;		line 491 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23425 ;; Parameters:    Size  Location     Type
 23426 ;;		None
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;		None
 23429 ;; Return value:  Size  Location     Type
 23430 ;;                  1    wreg      void 
 23431 ;; Registers used:
 23432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23433 ;; Tracked objects:
 23434 ;;		On entry : 0/0
 23435 ;;		On exit  : 0/0
 23436 ;;		Unchanged: 0/0
 23437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;Total ram usage:        0 bytes
 23443 ;; Hardware stack levels used: 1
 23444 ;; Hardware stack levels required when called: 8
 23445 ;; This function calls:
 23446 ;;		_RN487X_Delay
 23447 ;;		_RN487X_EnterCmdMode
 23448 ;;		_RN487X_EnterDataMode
 23449 ;;		_RN487X_SetOutputs
 23450 ;; This function is called by:
 23451 ;;		_LIGHTBLUE_SetErrorLedValue
 23452 ;; This function uses a non-reentrant model
 23453 ;;
 23454                           
 23455     1E2A                     _LIGHTBLUE_UpdateErrorLed:	
 23456                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 23457                           
 23458     1E2A                     l13981:	
 23459                           ;incstack = 0
 23460                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23461                           
 23462                           
 23463                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 492:     RN487X_EnterCmdMode();
 23464     1E2A  319C  24F9  319E   	fcall	_RN487X_EnterCmdMode
 23465     1E2D                     l13983:
 23466                           
 23467                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X.DelayMs((20));
 23468     1E2D  3014               	movlw	20
 23469     1E2E  00F4               	movwf	RN487X_Delay@delayCount
 23470     1E2F  3000               	movlw	0
 23471     1E30  00F5               	movwf	RN487X_Delay@delayCount+1
 23472     1E31  304E               	movlw	low ((_RN487X+14)| (0+32768))
 23473     1E32  0084               	movwf	4
 23474     1E33  30A0               	movlw	high ((_RN487X+14)| (0+32768))
 23475     1E34  0085               	movwf	5
 23476     1E35  3F01               	moviw [1]fsr0
 23477     1E36  008A               	movwf	10
 23478     1E37  3F00               	moviw [0]fsr0
 23479     1E38  000A               	callw
 23480     1E39  319E               	pagesel	$
 23481     1E3A                     l13985:
 23482                           
 23483                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X_SetOutputs(bitMap)
      +                          ;
 23484     1E3A  0141               	movlb	1	; select bank1
 23485     1E3B  0846               	movf	(_bitMap+1)^(0+128),w	;volatile
 23486     1E3C  0140               	movlb	0	; select bank0
 23487     1E3D  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 23488     1E3E  0141               	movlb	1	; select bank1
 23489     1E3F  0845               	movf	_bitMap^(0+128),w	;volatile
 23490     1E40  0140               	movlb	0	; select bank0
 23491     1E41  00A0               	movwf	RN487X_SetOutputs@bitMap
 23492     1E42  3195  2545  319E   	fcall	_RN487X_SetOutputs
 23493     1E45                     l13987:
 23494                           
 23495                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_EnterDataMode();
 23496     1E45  319D  25D5  319E   	fcall	_RN487X_EnterDataMode
 23497     1E48                     l214:
 23498     1E48  0008               	return
 23499     1E49                     __end_of_LIGHTBLUE_UpdateErrorLed:
 23500                           
 23501                           	psect	text78
 23502     1545                     __ptext78:	
 23503 ;; *************** function _RN487X_SetOutputs *****************
 23504 ;; Defined at:
 23505 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 23506 ;; Parameters:    Size  Location     Type
 23507 ;;  bitMap          2    0[BANK0 ] struct .
 23508 ;; Auto vars:     Size  Location     Type
 23509 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 23510 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 23511 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 23512 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 23513 ;; Return value:  Size  Location     Type
 23514 ;;                  1    wreg      _Bool 
 23515 ;; Registers used:
 23516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23517 ;; Tracked objects:
 23518 ;;		On entry : 0/0
 23519 ;;		On exit  : 0/0
 23520 ;;		Unchanged: 0/0
 23521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23522 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23523 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23525 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23526 ;;Total ram usage:        6 bytes
 23527 ;; Hardware stack levels used: 1
 23528 ;; Hardware stack levels required when called: 7
 23529 ;; This function calls:
 23530 ;;		_RN487X_ReadDefaultResponse
 23531 ;;		_RN487X_SendCmd
 23532 ;; This function is called by:
 23533 ;;		_LIGHTBLUE_UpdateErrorLed
 23534 ;; This function uses a non-reentrant model
 23535 ;;
 23536                           
 23537     1545                     _RN487X_SetOutputs:	
 23538                           ;psect for function _RN487X_SetOutputs
 23539                           
 23540     1545                     l13851:	
 23541                           ;incstack = 0
 23542                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23543                           
 23544                           
 23545                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 23546     1545  3030               	movlw	48
 23547     1546  0140               	movlb	0	; select bank0
 23548     1547  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 23549                           
 23550                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 23551     1548  3030               	movlw	48
 23552     1549  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 23553                           
 23554                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 23555     154A  3030               	movlw	48
 23556     154B  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 23557     154C                     l13853:
 23558                           
 23559                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 23560     154C  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 23561     154D  2D4F               	goto	u11891
 23562     154E  2D50               	goto	u11890
 23563     154F                     u11891:
 23564     154F  2D53               	goto	l13857
 23565     1550                     u11890:
 23566     1550                     l13855:
 23567                           
 23568                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 23569     1550  3031               	movlw	49
 23570     1551  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 23571                           
 23572                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 23573     1552  2D55               	goto	l13859
 23574     1553                     l13857:
 23575                           
 23576                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 23577     1553  3030               	movlw	48
 23578     1554  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 23579     1555                     l13859:
 23580                           
 23581                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 23582     1555  0820               	movf	RN487X_SetOutputs@bitMap,w
 23583     1556  390F               	andlw	15
 23584     1557  3E30               	addlw	48
 23585     1558  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 23586     1559                     l13861:
 23587                           
 23588                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 23589     1559  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 23590     155A  2D5C               	goto	u11901
 23591     155B  2D5D               	goto	u11900
 23592     155C                     u11901:
 23593     155C  2D60               	goto	l13865
 23594     155D                     u11900:
 23595     155D                     l13863:
 23596                           
 23597                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 23598     155D  3031               	movlw	49
 23599     155E  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 23600                           
 23601                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 23602     155F  2D62               	goto	l13867
 23603     1560                     l13865:
 23604                           
 23605                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 23606     1560  3030               	movlw	48
 23607     1561  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 23608     1562                     l13867:
 23609                           
 23610                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 23611     1562  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 23612     1563  390F               	andlw	15
 23613     1564  3E30               	addlw	48
 23614     1565  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 23615     1566                     l13869:
 23616                           
 23617                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 23618     1566  307C               	movlw	124
 23619     1567  0144               	movlb	4	; select bank4
 23620     1568  00A0               	movwf	_cmdBuf^(0+512)
 23621     1569                     l13871:
 23622                           
 23623                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 23624     1569  304F               	movlw	79
 23625     156A  00A1               	movwf	(_cmdBuf^(0+512)+1)
 23626     156B                     l13873:
 23627                           
 23628                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 23629     156B  302C               	movlw	44
 23630     156C  00A2               	movwf	(_cmdBuf^(0+512)+2)
 23631     156D                     l13875:
 23632                           
 23633                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 23634     156D  0140               	movlb	0	; select bank0
 23635     156E  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 23636     156F  0144               	movlb	4	; select bank4
 23637     1570  00A3               	movwf	(_cmdBuf^(0+512)+3)
 23638     1571                     l13877:
 23639                           
 23640                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 23641     1571  0140               	movlb	0	; select bank0
 23642     1572  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 23643     1573  0144               	movlb	4	; select bank4
 23644     1574  00A4               	movwf	(_cmdBuf^(0+512)+4)
 23645     1575                     l13879:
 23646                           
 23647                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 23648     1575  302C               	movlw	44
 23649     1576  00A5               	movwf	(_cmdBuf^(0+512)+5)
 23650     1577                     l13881:
 23651                           
 23652                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 23653     1577  0140               	movlb	0	; select bank0
 23654     1578  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 23655     1579  0144               	movlb	4	; select bank4
 23656     157A  00A6               	movwf	(_cmdBuf^(0+512)+6)
 23657     157B                     l13883:
 23658                           
 23659                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 23660     157B  0140               	movlb	0	; select bank0
 23661     157C  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 23662     157D  0144               	movlb	4	; select bank4
 23663     157E  00A7               	movwf	(_cmdBuf^(0+512)+7)
 23664     157F                     l13885:
 23665                           
 23666                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 23667     157F  300D               	movlw	13
 23668     1580  00A8               	movwf	(_cmdBuf^(0+512)+8)
 23669     1581                     l13887:
 23670                           
 23671                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 23672     1581  300A               	movlw	10
 23673     1582  00A9               	movwf	(_cmdBuf^(0+512)+9)
 23674     1583                     l13889:
 23675                           
 23676                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 23677     1583  300A               	movlw	10
 23678     1584  00F7               	movwf	RN487X_SendCmd@cmdLen
 23679     1585  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 23680     1586  3191  2107  3195   	fcall	_RN487X_SendCmd
 23681     1589                     l13891:
 23682                           
 23683                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 23684     1589  318A  22D2  3195   	fcall	_RN487X_ReadDefaultResponse
 23685     158C                     l933:
 23686     158C  0008               	return
 23687     158D                     __end_of_RN487X_SetOutputs:
 23688                           
 23689                           	psect	text79
 23690     0AD2                     __ptext79:	
 23691 ;; *************** function _RN487X_ReadDefaultResponse *****************
 23692 ;; Defined at:
 23693 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 23694 ;; Parameters:    Size  Location     Type
 23695 ;;		None
 23696 ;; Auto vars:     Size  Location     Type
 23697 ;;  resp            3    3[COMMON] unsigned char [3]
 23698 ;;  status          1    6[COMMON] _Bool 
 23699 ;; Return value:  Size  Location     Type
 23700 ;;                  1    wreg      _Bool 
 23701 ;; Registers used:
 23702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23703 ;; Tracked objects:
 23704 ;;		On entry : 0/0
 23705 ;;		On exit  : 0/0
 23706 ;;		Unchanged: 0/0
 23707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23712 ;;Total ram usage:        4 bytes
 23713 ;; Hardware stack levels used: 1
 23714 ;; Hardware stack levels required when called: 6
 23715 ;; This function calls:
 23716 ;;		_RN487X_Read@rn487x_interface$F1379
 23717 ;; This function is called by:
 23718 ;;		_RN487X_SetOutputs
 23719 ;;		_RN487X_Disconnect
 23720 ;; This function uses a non-reentrant model
 23721 ;;
 23722                           
 23723     0AD2                     _RN487X_ReadDefaultResponse:	
 23724                           ;psect for function _RN487X_ReadDefaultResponse
 23725                           
 23726     0AD2                     l8951:	
 23727                           ;incstack = 0
 23728                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23729                           
 23730                           
 23731                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 23732     0AD2  01F6               	clrf	RN487X_ReadDefaultResponse@status
 23733     0AD3                     l8953:
 23734                           
 23735                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 23736     0AD3  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23737     0AD4  0084               	movwf	4
 23738     0AD5  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23739     0AD6  0085               	movwf	5
 23740     0AD7  3F01               	moviw [1]fsr0
 23741     0AD8  008A               	movwf	10
 23742     0AD9  3F00               	moviw [0]fsr0
 23743     0ADA  000A               	callw
 23744     0ADB  318A               	pagesel	$
 23745     0ADC  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 23746     0ADD                     l8955:
 23747                           
 23748                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 23749     0ADD  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23750     0ADE  0084               	movwf	4
 23751     0ADF  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23752     0AE0  0085               	movwf	5
 23753     0AE1  3F01               	moviw [1]fsr0
 23754     0AE2  008A               	movwf	10
 23755     0AE3  3F00               	moviw [0]fsr0
 23756     0AE4  000A               	callw
 23757     0AE5  318A               	pagesel	$
 23758     0AE6  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 23759     0AE7                     l8957:
 23760                           
 23761                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 23762     0AE7  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23763     0AE8  0084               	movwf	4
 23764     0AE9  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23765     0AEA  0085               	movwf	5
 23766     0AEB  3F01               	moviw [1]fsr0
 23767     0AEC  008A               	movwf	10
 23768     0AED  3F00               	moviw [0]fsr0
 23769     0AEE  000A               	callw
 23770     0AEF  318A               	pagesel	$
 23771     0AF0  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 23772                           
 23773                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 23774     0AF1  2B11               	goto	l8977
 23775     0AF2                     l8959:
 23776                           
 23777                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 23778     0AF2  304F               	movlw	79
 23779     0AF3  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 23780     0AF4  1D03               	btfss	3,2
 23781     0AF5  2AF7               	goto	u6141
 23782     0AF6  2AF8               	goto	u6140
 23783     0AF7                     u6141:
 23784     0AF7  2B19               	goto	l8979
 23785     0AF8                     u6140:
 23786     0AF8                     l8961:
 23787     0AF8  304B               	movlw	75
 23788     0AF9  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 23789     0AFA  1D03               	btfss	3,2
 23790     0AFB  2AFD               	goto	u6151
 23791     0AFC  2AFE               	goto	u6150
 23792     0AFD                     u6151:
 23793     0AFD  2B19               	goto	l8979
 23794     0AFE                     u6150:
 23795     0AFE                     l8963:
 23796                           
 23797                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 23798     0AFE  01F6               	clrf	RN487X_ReadDefaultResponse@status
 23799     0AFF  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 23800     0B00  2B19               	goto	l8979
 23801     0B01                     l8965:
 23802                           
 23803                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 23804     0B01  3072               	movlw	114
 23805     0B02  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 23806     0B03  1D03               	btfss	3,2
 23807     0B04  2B06               	goto	u6161
 23808     0B05  2B07               	goto	u6160
 23809     0B06                     u6161:
 23810     0B06  2B19               	goto	l8979
 23811     0B07                     u6160:
 23812     0B07                     l8967:
 23813     0B07  3072               	movlw	114
 23814     0B08  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 23815     0B09  1D03               	btfss	3,2
 23816     0B0A  2B0C               	goto	u6171
 23817     0B0B  2B0D               	goto	u6170
 23818     0B0C                     u6171:
 23819     0B0C  2B19               	goto	l8979
 23820     0B0D                     u6170:
 23821     0B0D                     l8969:
 23822                           
 23823                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 23824     0B0D  01F6               	clrf	RN487X_ReadDefaultResponse@status
 23825     0B0E  2B19               	goto	l8979
 23826     0B0F                     l8971:
 23827                           
 23828                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 23829     0B0F  3000               	movlw	0
 23830     0B10  2B59               	goto	l908
 23831     0B11                     l8977:
 23832     0B11  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 23833                           
 23834                           ; Switch size 1, requested type "simple"
 23835                           ; Number of cases is 2, Range of values is 65 to 69
 23836                           ; switch strategies available:
 23837                           ; Name         Instructions Cycles
 23838                           ; simple_byte            7     4 (average)
 23839                           ; direct_byte           19     9 (fixed)
 23840                           ; jumptable            263     9 (fixed)
 23841                           ;	Chosen strategy is simple_byte
 23842     0B12  3A41               	xorlw	65	; case 65
 23843     0B13  1903               	skipnz
 23844     0B14  2AF2               	goto	l8959
 23845     0B15  3A04               	xorlw	4	; case 69
 23846     0B16  1903               	skipnz
 23847     0B17  2B01               	goto	l8965
 23848     0B18  2B0F               	goto	l8971
 23849     0B19                     l8979:
 23850                           
 23851                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 23852     0B19  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23853     0B1A  0084               	movwf	4
 23854     0B1B  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23855     0B1C  0085               	movwf	5
 23856     0B1D  3F01               	moviw [1]fsr0
 23857     0B1E  008A               	movwf	10
 23858     0B1F  3F00               	moviw [0]fsr0
 23859     0B20  000A               	callw
 23860     0B21  318A               	pagesel	$
 23861                           
 23862                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 23863     0B22  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23864     0B23  0084               	movwf	4
 23865     0B24  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23866     0B25  0085               	movwf	5
 23867     0B26  3F01               	moviw [1]fsr0
 23868     0B27  008A               	movwf	10
 23869     0B28  3F00               	moviw [0]fsr0
 23870     0B29  000A               	callw
 23871     0B2A  318A               	pagesel	$
 23872                           
 23873                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 23874     0B2B  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23875     0B2C  0084               	movwf	4
 23876     0B2D  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23877     0B2E  0085               	movwf	5
 23878     0B2F  3F01               	moviw [1]fsr0
 23879     0B30  008A               	movwf	10
 23880     0B31  3F00               	moviw [0]fsr0
 23881     0B32  000A               	callw
 23882     0B33  318A               	pagesel	$
 23883                           
 23884                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 23885     0B34  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23886     0B35  0084               	movwf	4
 23887     0B36  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23888     0B37  0085               	movwf	5
 23889     0B38  3F01               	moviw [1]fsr0
 23890     0B39  008A               	movwf	10
 23891     0B3A  3F00               	moviw [0]fsr0
 23892     0B3B  000A               	callw
 23893     0B3C  318A               	pagesel	$
 23894                           
 23895                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 23896     0B3D  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23897     0B3E  0084               	movwf	4
 23898     0B3F  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23899     0B40  0085               	movwf	5
 23900     0B41  3F01               	moviw [1]fsr0
 23901     0B42  008A               	movwf	10
 23902     0B43  3F00               	moviw [0]fsr0
 23903     0B44  000A               	callw
 23904     0B45  318A               	pagesel	$
 23905                           
 23906                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 23907     0B46  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23908     0B47  0084               	movwf	4
 23909     0B48  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23910     0B49  0085               	movwf	5
 23911     0B4A  3F01               	moviw [1]fsr0
 23912     0B4B  008A               	movwf	10
 23913     0B4C  3F00               	moviw [0]fsr0
 23914     0B4D  000A               	callw
 23915     0B4E  318A               	pagesel	$
 23916                           
 23917                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 23918     0B4F  3042               	movlw	low ((_RN487X+2)| (0+32768))
 23919     0B50  0084               	movwf	4
 23920     0B51  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 23921     0B52  0085               	movwf	5
 23922     0B53  3F01               	moviw [1]fsr0
 23923     0B54  008A               	movwf	10
 23924     0B55  3F00               	moviw [0]fsr0
 23925     0B56  000A               	callw
 23926     0B57  318A               	pagesel	$
 23927     0B58                     l8981:
 23928                           
 23929                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 23930     0B58  0876               	movf	RN487X_ReadDefaultResponse@status,w
 23931     0B59                     l908:
 23932     0B59  0008               	return
 23933     0B5A                     __end_of_RN487X_ReadDefaultResponse:
 23934                           
 23935                           	psect	text80
 23936     1DD5                     __ptext80:	
 23937 ;; *************** function _RN487X_EnterDataMode *****************
 23938 ;; Defined at:
 23939 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 23940 ;; Parameters:    Size  Location     Type
 23941 ;;		None
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;		None
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  1    wreg      _Bool 
 23946 ;; Registers used:
 23947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23948 ;; Tracked objects:
 23949 ;;		On entry : 0/0
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23957 ;;Total ram usage:        0 bytes
 23958 ;; Hardware stack levels used: 1
 23959 ;; Hardware stack levels required when called: 7
 23960 ;; This function calls:
 23961 ;;		_RN487X_ReadMsg
 23962 ;;		_RN487X_SendCmd
 23963 ;; This function is called by:
 23964 ;;		_LIGHTBLUE_UpdateErrorLed
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968     1DD5                     _RN487X_EnterDataMode:	
 23969                           ;psect for function _RN487X_EnterDataMode
 23970                           
 23971     1DD5                     l13895:	
 23972                           ;incstack = 0
 23973                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23974                           
 23975                           
 23976                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 23977     1DD5  302D               	movlw	45
 23978     1DD6  0144               	movlb	4	; select bank4
 23979     1DD7  00A0               	movwf	_cmdBuf^(0+512)
 23980                           
 23981                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 23982     1DD8  302D               	movlw	45
 23983     1DD9  00A1               	movwf	(_cmdBuf^(0+512)+1)
 23984                           
 23985                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 23986     1DDA  302D               	movlw	45
 23987     1DDB  00A2               	movwf	(_cmdBuf^(0+512)+2)
 23988                           
 23989                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 23990     1DDC  300D               	movlw	13
 23991     1DDD  00A3               	movwf	(_cmdBuf^(0+512)+3)
 23992                           
 23993                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 23994     1DDE  300A               	movlw	10
 23995     1DDF  00A4               	movwf	(_cmdBuf^(0+512)+4)
 23996     1DE0                     l13897:
 23997                           
 23998                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 23999     1DE0  3005               	movlw	5
 24000     1DE1  00F7               	movwf	RN487X_SendCmd@cmdLen
 24001     1DE2  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 24002     1DE3  3191  2107  319D   	fcall	_RN487X_SendCmd
 24003     1DE6                     l13899:
 24004                           
 24005                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 24006     1DE6  307A               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 24007     1DE7  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 24008     1DE8  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 24009     1DE9  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 24010     1DEA  3005               	movlw	5
 24011     1DEB  00F5               	movwf	RN487X_ReadMsg@msgLen
 24012     1DEC  3188  2000  319D   	fcall	_RN487X_ReadMsg
 24013     1DEF                     l926:
 24014     1DEF  0008               	return
 24015     1DF0                     __end_of_RN487X_EnterDataMode:
 24016                           
 24017                           	psect	text81
 24018     1CF9                     __ptext81:	
 24019 ;; *************** function _RN487X_EnterCmdMode *****************
 24020 ;; Defined at:
 24021 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 24022 ;; Parameters:    Size  Location     Type
 24023 ;;		None
 24024 ;; Auto vars:     Size  Location     Type
 24025 ;;		None
 24026 ;; Return value:  Size  Location     Type
 24027 ;;                  1    wreg      _Bool 
 24028 ;; Registers used:
 24029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24030 ;; Tracked objects:
 24031 ;;		On entry : 0/0
 24032 ;;		On exit  : 0/0
 24033 ;;		Unchanged: 0/0
 24034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24039 ;;Total ram usage:        0 bytes
 24040 ;; Hardware stack levels used: 1
 24041 ;; Hardware stack levels required when called: 7
 24042 ;; This function calls:
 24043 ;;		_RN487X_ReadMsg
 24044 ;;		_RN487X_SendCmd
 24045 ;; This function is called by:
 24046 ;;		_LIGHTBLUE_UpdateErrorLed
 24047 ;; This function uses a non-reentrant model
 24048 ;;
 24049                           
 24050     1CF9                     _RN487X_EnterCmdMode:	
 24051                           ;psect for function _RN487X_EnterCmdMode
 24052                           
 24053     1CF9                     l13843:	
 24054                           ;incstack = 0
 24055                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24056                           
 24057                           
 24058                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 24059     1CF9  3024               	movlw	36
 24060     1CFA  0144               	movlb	4	; select bank4
 24061     1CFB  00A0               	movwf	_cmdBuf^(0+512)
 24062                           
 24063                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 24064     1CFC  3024               	movlw	36
 24065     1CFD  00A1               	movwf	(_cmdBuf^(0+512)+1)
 24066                           
 24067                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 24068     1CFE  3024               	movlw	36
 24069     1CFF  00A2               	movwf	(_cmdBuf^(0+512)+2)
 24070     1D00                     l13845:
 24071                           
 24072                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 24073     1D00  3003               	movlw	3
 24074     1D01  00F7               	movwf	RN487X_SendCmd@cmdLen
 24075     1D02  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 24076     1D03  3191  2107  319C   	fcall	_RN487X_SendCmd
 24077     1D06                     l13847:
 24078                           
 24079                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 24080     1D06  307F               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 24081     1D07  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 24082     1D08  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 24083     1D09  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 24084     1D0A  3005               	movlw	5
 24085     1D0B  00F5               	movwf	RN487X_ReadMsg@msgLen
 24086     1D0C  3188  2000  319C   	fcall	_RN487X_ReadMsg
 24087     1D0F                     l921:
 24088     1D0F  0008               	return
 24089     1D10                     __end_of_RN487X_EnterCmdMode:
 24090                           
 24091                           	psect	text82
 24092     1107                     __ptext82:	
 24093 ;; *************** function _RN487X_SendCmd *****************
 24094 ;; Defined at:
 24095 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 24096 ;; Parameters:    Size  Location     Type
 24097 ;;  cmd             1    wreg     PTR const unsigned char 
 24098 ;;		 -> cmdBuf(64), 
 24099 ;;  cmdLen          1    7[COMMON] unsigned char 
 24100 ;; Auto vars:     Size  Location     Type
 24101 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 24102 ;;		 -> cmdBuf(64), 
 24103 ;;  index           1    9[COMMON] unsigned char 
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      void 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24117 ;;Total ram usage:        4 bytes
 24118 ;; Hardware stack levels used: 1
 24119 ;; Hardware stack levels required when called: 6
 24120 ;; This function calls:
 24121 ;;		_RN487X_Write
 24122 ;;		_RN487X_is_tx_done
 24123 ;; This function is called by:
 24124 ;;		_RN487X_EnterCmdMode
 24125 ;;		_RN487X_EnterDataMode
 24126 ;;		_RN487X_SetOutputs
 24127 ;;		_RN487X_GetCmd
 24128 ;;		_RN487X_GetInputsValues
 24129 ;;		_RN487X_RebootCmd
 24130 ;;		_RN487X_Disconnect
 24131 ;; This function uses a non-reentrant model
 24132 ;;
 24133                           
 24134     1107                     _RN487X_SendCmd:	
 24135                           ;psect for function _RN487X_SendCmd
 24136                           
 24137                           
 24138                           ;incstack = 0
 24139                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24140                           ;RN487X_SendCmd@cmd stored from wreg
 24141     1107  00FA               	movwf	RN487X_SendCmd@cmd
 24142     1108                     l13789:
 24143                           
 24144                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 24145     1108  01F9               	clrf	RN487X_SendCmd@index
 24146                           
 24147                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 24148     1109  292E               	goto	l13797
 24149     110A                     l13791:
 24150                           
 24151                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 24152     110A  3044               	movlw	low ((_RN487X+4)| (0+32768))
 24153     110B  0084               	movwf	4
 24154     110C  30A0               	movlw	high ((_RN487X+4)| (0+32768))
 24155     110D  0085               	movwf	5
 24156     110E  3F01               	moviw [1]fsr0
 24157     110F  008A               	movwf	10
 24158     1110  3F00               	moviw [0]fsr0
 24159     1111  000A               	callw
 24160     1112  3191               	pagesel	$
 24161     1113  3A00               	xorlw	0
 24162     1114  1903               	skipnz
 24163     1115  2917               	goto	u11801
 24164     1116  2918               	goto	u11800
 24165     1117                     u11801:
 24166     1117  292E               	goto	l13797
 24167     1118                     u11800:
 24168     1118                     l13793:
 24169                           
 24170                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 24171     1118  0879               	movf	RN487X_SendCmd@index,w
 24172     1119  077A               	addwf	RN487X_SendCmd@cmd,w
 24173     111A  00F8               	movwf	??_RN487X_SendCmd
 24174     111B  0878               	movf	??_RN487X_SendCmd,w
 24175     111C  0086               	movwf	6
 24176     111D  3002               	movlw	2	; select bank4/5
 24177     111E  0087               	movwf	7
 24178     111F  0801               	movf	1,w
 24179     1120  00F6               	movwf	RN487X_Write@txData
 24180     1121  3040               	movlw	low (_RN487X| (0+32768))
 24181     1122  0084               	movwf	4
 24182     1123  30A0               	movlw	high (_RN487X| (0+32768))
 24183     1124  0085               	movwf	5
 24184     1125  3F01               	moviw [1]fsr0
 24185     1126  008A               	movwf	10
 24186     1127  3F00               	moviw [0]fsr0
 24187     1128  000A               	callw
 24188     1129  3191               	pagesel	$
 24189     112A                     l13795:
 24190                           
 24191                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 24192     112A  3001               	movlw	1
 24193     112B  00F8               	movwf	??_RN487X_SendCmd
 24194     112C  0878               	movf	??_RN487X_SendCmd,w
 24195     112D  07F9               	addwf	RN487X_SendCmd@index,f
 24196     112E                     l13797:
 24197                           
 24198                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 24199     112E  0877               	movf	RN487X_SendCmd@cmdLen,w
 24200     112F  0279               	subwf	RN487X_SendCmd@index,w
 24201     1130  1C03               	skipc
 24202     1131  2933               	goto	u11811
 24203     1132  2934               	goto	u11810
 24204     1133                     u11811:
 24205     1133  290A               	goto	l13791
 24206     1134                     u11810:
 24207     1134                     l886:
 24208     1134  0008               	return
 24209     1135                     __end_of_RN487X_SendCmd:
 24210                           
 24211                           	psect	text83
 24212     1A9D                     __ptext83:	
 24213 ;; *************** function _RN487X_is_tx_done *****************
 24214 ;; Defined at:
 24215 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 24216 ;; Parameters:    Size  Location     Type
 24217 ;;		None
 24218 ;; Auto vars:     Size  Location     Type
 24219 ;;		None
 24220 ;; Return value:  Size  Location     Type
 24221 ;;                  1    wreg      _Bool 
 24222 ;; Registers used:
 24223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 24224 ;; Tracked objects:
 24225 ;;		On entry : 0/0
 24226 ;;		On exit  : 0/0
 24227 ;;		Unchanged: 0/0
 24228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24233 ;;Total ram usage:        0 bytes
 24234 ;; Hardware stack levels used: 1
 24235 ;; Hardware stack levels required when called: 5
 24236 ;; This function calls:
 24237 ;;		_EUSART1_is_tx_done
 24238 ;;		_EUSART2_is_tx_done
 24239 ;; This function is called by:
 24240 ;;		_RN487X_SendCmd
 24241 ;; This function uses a non-reentrant model
 24242 ;;
 24243                           
 24244     1A9D                     _RN487X_is_tx_done:	
 24245                           ;psect for function _RN487X_is_tx_done
 24246                           
 24247     1A9D                     l8865:	
 24248                           ;incstack = 0
 24249                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 24250                           
 24251                           
 24252                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 24253     1A9D  3022               	movlw	low ((_uart+34)| (0+32768))
 24254     1A9E  0084               	movwf	4
 24255     1A9F  3098               	movlw	high ((_uart+34)| (0+32768))
 24256     1AA0  0085               	movwf	5
 24257     1AA1  3F01               	moviw [1]fsr0
 24258     1AA2  008A               	movwf	10
 24259     1AA3  3F00               	moviw [0]fsr0
 24260     1AA4  000A               	callw
 24261     1AA5  319A               	pagesel	$
 24262     1AA6                     l792:
 24263     1AA6  0008               	return
 24264     1AA7                     __end_of_RN487X_is_tx_done:
 24265                           
 24266                           	psect	text84
 24267     1992                     __ptext84:	
 24268 ;; *************** function _EUSART1_is_tx_done *****************
 24269 ;; Defined at:
 24270 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 24271 ;; Parameters:    Size  Location     Type
 24272 ;;		None
 24273 ;; Auto vars:     Size  Location     Type
 24274 ;;		None
 24275 ;; Return value:  Size  Location     Type
 24276 ;;                  1    wreg      _Bool 
 24277 ;; Registers used:
 24278 ;;		wreg, status,2, status,0
 24279 ;; Tracked objects:
 24280 ;;		On entry : 0/0
 24281 ;;		On exit  : 0/0
 24282 ;;		Unchanged: 0/0
 24283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24288 ;;Total ram usage:        0 bytes
 24289 ;; Hardware stack levels used: 1
 24290 ;; Hardware stack levels required when called: 4
 24291 ;; This function calls:
 24292 ;;		Nothing
 24293 ;; This function is called by:
 24294 ;;		_RN487X_is_tx_done
 24295 ;; This function uses a non-reentrant model
 24296 ;;
 24297                           
 24298     1992                     _EUSART1_is_tx_done:	
 24299                           ;psect for function _EUSART1_is_tx_done
 24300                           
 24301     1992                     l8723:	
 24302                           ;incstack = 0
 24303                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 24304                           
 24305                           
 24306                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 24307     1992  0142               	movlb	2	; select bank2
 24308     1993  0C1E               	rrf	30,w	;volatile
 24309     1994  3901               	andlw	1
 24310     1995                     l1204:
 24311     1995  0008               	return
 24312     1996                     __end_of_EUSART1_is_tx_done:
 24313                           
 24314                           	psect	text85
 24315     198E                     __ptext85:	
 24316 ;; *************** function _EUSART2_is_tx_done *****************
 24317 ;; Defined at:
 24318 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 24319 ;; Parameters:    Size  Location     Type
 24320 ;;		None
 24321 ;; Auto vars:     Size  Location     Type
 24322 ;;		None
 24323 ;; Return value:  Size  Location     Type
 24324 ;;                  1    wreg      _Bool 
 24325 ;; Registers used:
 24326 ;;		wreg, status,2, status,0
 24327 ;; Tracked objects:
 24328 ;;		On entry : 0/0
 24329 ;;		On exit  : 0/0
 24330 ;;		Unchanged: 0/0
 24331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24336 ;;Total ram usage:        0 bytes
 24337 ;; Hardware stack levels used: 1
 24338 ;; Hardware stack levels required when called: 4
 24339 ;; This function calls:
 24340 ;;		Nothing
 24341 ;; This function is called by:
 24342 ;;		_RN487X_is_tx_done
 24343 ;; This function uses a non-reentrant model
 24344 ;;
 24345                           
 24346     198E                     _EUSART2_is_tx_done:	
 24347                           ;psect for function _EUSART2_is_tx_done
 24348                           
 24349     198E                     l8679:	
 24350                           ;incstack = 0
 24351                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 24352                           
 24353                           
 24354                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 24355     198E  0154               	movlb	20	; select bank20
 24356     198F  0C1E               	rrf	30,w	;volatile
 24357     1990  3901               	andlw	1
 24358     1991                     l1060:
 24359     1991  0008               	return
 24360     1992                     __end_of_EUSART2_is_tx_done:
 24361                           
 24362                           	psect	text86
 24363     0800                     __ptext86:	
 24364 ;; *************** function _RN487X_ReadMsg *****************
 24365 ;; Defined at:
 24366 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 24369 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 24370 ;;  msgLen          1    5[COMMON] unsigned char 
 24371 ;; Auto vars:     Size  Location     Type
 24372 ;;  index           1    9[COMMON] unsigned char 
 24373 ;;  resp            1    8[COMMON] unsigned char 
 24374 ;; Return value:  Size  Location     Type
 24375 ;;                  1    wreg      _Bool 
 24376 ;; Registers used:
 24377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24378 ;; Tracked objects:
 24379 ;;		On entry : 0/0
 24380 ;;		On exit  : 0/0
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24387 ;;Total ram usage:        7 bytes
 24388 ;; Hardware stack levels used: 1
 24389 ;; Hardware stack levels required when called: 6
 24390 ;; This function calls:
 24391 ;;		_RN487X_Read@rn487x_interface$F1379
 24392 ;; This function is called by:
 24393 ;;		_RN487X_EnterCmdMode
 24394 ;;		_RN487X_EnterDataMode
 24395 ;;		_RN487X_GetInputsValues
 24396 ;;		_RN487X_RebootCmd
 24397 ;; This function uses a non-reentrant model
 24398 ;;
 24399                           
 24400     0800                     _RN487X_ReadMsg:	
 24401                           ;psect for function _RN487X_ReadMsg
 24402                           
 24403     0800                     l8933:	
 24404                           ;incstack = 0
 24405                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24406                           
 24407                           
 24408                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 24409     0800  01F9               	clrf	RN487X_ReadMsg@index
 24410     0801  2823               	goto	l8945
 24411     0802                     l8935:
 24412                           
 24413                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 24414     0802  3042               	movlw	low ((_RN487X+2)| (0+32768))
 24415     0803  0084               	movwf	4
 24416     0804  30A0               	movlw	high ((_RN487X+2)| (0+32768))
 24417     0805  0085               	movwf	5
 24418     0806  3F01               	moviw [1]fsr0
 24419     0807  008A               	movwf	10
 24420     0808  3F00               	moviw [0]fsr0
 24421     0809  000A               	callw
 24422     080A  3188               	pagesel	$
 24423     080B  00F8               	movwf	RN487X_ReadMsg@resp
 24424     080C                     l8937:
 24425                           
 24426                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 24427     080C  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 24428     080D  00F7               	movwf	??_RN487X_ReadMsg+1
 24429     080E  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 24430     080F  00F6               	movwf	??_RN487X_ReadMsg
 24431     0810  0879               	movf	RN487X_ReadMsg@index,w
 24432     0811  0776               	addwf	??_RN487X_ReadMsg,w
 24433     0812  0084               	movwf	4
 24434     0813  0877               	movf	??_RN487X_ReadMsg+1,w
 24435     0814  1803               	skipnc
 24436     0815  0A77               	incf	??_RN487X_ReadMsg+1,w
 24437     0816  0085               	movwf	5
 24438     0817  0800               	movf	0,w	;code access
 24439     0818  0678               	xorwf	RN487X_ReadMsg@resp,w
 24440     0819  1903               	skipnz
 24441     081A  281C               	goto	u6121
 24442     081B  281D               	goto	u6120
 24443     081C                     u6121:
 24444     081C  281F               	goto	l8943
 24445     081D                     u6120:
 24446     081D                     l8939:
 24447                           
 24448                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 24449     081D  3000               	movlw	0
 24450     081E  282A               	goto	l897
 24451     081F                     l8943:
 24452                           
 24453                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 24454     081F  3001               	movlw	1
 24455     0820  00F6               	movwf	??_RN487X_ReadMsg
 24456     0821  0876               	movf	??_RN487X_ReadMsg,w
 24457     0822  07F9               	addwf	RN487X_ReadMsg@index,f
 24458     0823                     l8945:
 24459     0823  0875               	movf	RN487X_ReadMsg@msgLen,w
 24460     0824  0279               	subwf	RN487X_ReadMsg@index,w
 24461     0825  1C03               	skipc
 24462     0826  2828               	goto	u6131
 24463     0827  2829               	goto	u6130
 24464     0828                     u6131:
 24465     0828  2802               	goto	l8935
 24466     0829                     u6130:
 24467     0829                     l8947:
 24468                           
 24469                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 24470     0829  3001               	movlw	1
 24471     082A                     l897:
 24472     082A  0008               	return
 24473     082B                     __end_of_RN487X_ReadMsg:
 24474                           
 24475                           	psect	text87
 24476     1A93                     __ptext87:	
 24477 ;; *************** function _RN487X_Read@rn487x_interface$F1379 *****************
 24478 ;; Defined at:
 24479 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 24480 ;; Parameters:    Size  Location     Type
 24481 ;;		None
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;		None
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  1    wreg      unsigned char 
 24486 ;; Registers used:
 24487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/0
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24497 ;;Total ram usage:        0 bytes
 24498 ;; Hardware stack levels used: 1
 24499 ;; Hardware stack levels required when called: 5
 24500 ;; This function calls:
 24501 ;;		_EUSART1_Read
 24502 ;;		_EUSART2_Read
 24503 ;; This function is called by:
 24504 ;;		_RN487X_ReadMsg
 24505 ;;		_RN487X_ReadDefaultResponse
 24506 ;;		_RN487X_FilterData
 24507 ;;		_RN487X_Init
 24508 ;;		_RN487X_GetCmd
 24509 ;;		_RN487X_WaitForMsg
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513     1A93                     _RN487X_Read@rn487x_interface$F1379:	
 24514                           ;psect for function _RN487X_Read@rn487x_interface$F1379
 24515                           
 24516     1A93                     l8861:	
 24517                           ;incstack = 0
 24518                           ; Regs used in _RN487X_Read@rn487x_interface$F1379: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 24519                           
 24520                           
 24521                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 24522     1A93  3014               	movlw	low ((_uart+20)| (0+32768))
 24523     1A94  0084               	movwf	4
 24524     1A95  3098               	movlw	high ((_uart+20)| (0+32768))
 24525     1A96  0085               	movwf	5
 24526     1A97  3F01               	moviw [1]fsr0
 24527     1A98  008A               	movwf	10
 24528     1A99  3F00               	moviw [0]fsr0
 24529     1A9A  000A               	callw
 24530     1A9B  319A               	pagesel	$
 24531     1A9C                     l789:
 24532     1A9C  0008               	return
 24533     1A9D                     __end_of_RN487X_Read@rn487x_interface$F1379:
 24534                           
 24535                           	psect	text88
 24536     1000                     __ptext88:	
 24537 ;; *************** function _EUSART1_Read *****************
 24538 ;; Defined at:
 24539 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 24540 ;; Parameters:    Size  Location     Type
 24541 ;;		None
 24542 ;; Auto vars:     Size  Location     Type
 24543 ;;  readValue       1    2[COMMON] unsigned char 
 24544 ;; Return value:  Size  Location     Type
 24545 ;;                  1    wreg      unsigned char 
 24546 ;; Registers used:
 24547 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24548 ;; Tracked objects:
 24549 ;;		On entry : 0/0
 24550 ;;		On exit  : 0/0
 24551 ;;		Unchanged: 0/0
 24552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24557 ;;Total ram usage:        2 bytes
 24558 ;; Hardware stack levels used: 1
 24559 ;; Hardware stack levels required when called: 4
 24560 ;; This function calls:
 24561 ;;		Nothing
 24562 ;; This function is called by:
 24563 ;;		_getch
 24564 ;;		_RN487X_Read@rn487x_interface$F1379
 24565 ;;		_RN487X_Example_TransparentUart
 24566 ;;		_main
 24567 ;; This function uses a non-reentrant model
 24568 ;;
 24569                           
 24570     1000                     _EUSART1_Read:	
 24571                           ;psect for function _EUSART1_Read
 24572                           
 24573     1000                     l8727:	
 24574                           ;incstack = 0
 24575                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 24576                           
 24577     1000                     l8729:	
 24578                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 24579                           
 24580                           
 24581                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 24582     1000  0141               	movlb	1	; select bank1
 24583     1001  0849               	movf	_eusart1RxCount^(0+128),w	;volatile
 24584     1002  1903               	btfsc	3,2
 24585     1003  2805               	goto	u5931
 24586     1004  2806               	goto	u5930
 24587     1005                     u5931:
 24588     1005  2800               	goto	l8729
 24589     1006                     u5930:
 24590     1006                     l8731:
 24591                           
 24592                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 24593     1006  084A               	movf	_eusart1RxTail^(0+128),w	;volatile
 24594     1007  3E44               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24595     1008  0086               	movwf	6
 24596     1009  3001               	movlw	1	; select bank2/3
 24597     100A  0087               	movwf	7
 24598     100B  0801               	movf	1,w
 24599     100C  00C8               	movwf	_eusart1RxLastError^(0+128)	;volatile
 24600                           
 24601                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 24602     100D  084A               	movf	_eusart1RxTail^(0+128),w
 24603     100E  3EBF               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 24604     100F  0086               	movwf	6
 24605     1010  3001               	movlw	1	; select bank3/4
 24606     1011  0087               	movwf	7
 24607     1012  0801               	movf	1,w
 24608     1013  00F2               	movwf	EUSART1_Read@readValue
 24609     1014                     l8733:
 24610     1014  3001               	movlw	1
 24611     1015  00F1               	movwf	??_EUSART1_Read
 24612     1016  0871               	movf	??_EUSART1_Read,w
 24613     1017  07CA               	addwf	_eusart1RxTail^(0+128),f	;volatile
 24614     1018                     l8735:
 24615                           
 24616                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 24617     1018  3008               	movlw	8
 24618     1019  024A               	subwf	_eusart1RxTail^(0+128),w	;volatile
 24619     101A  1C03               	skipc
 24620     101B  281D               	goto	u5941
 24621     101C  281E               	goto	u5940
 24622     101D                     u5941:
 24623     101D  281F               	goto	l8739
 24624     101E                     u5940:
 24625     101E                     l8737:
 24626                           
 24627                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 24628     101E  01CA               	clrf	_eusart1RxTail^(0+128)	;volatile
 24629     101F                     l8739:
 24630                           
 24631                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 24632     101F  014E               	movlb	14	; select bank14
 24633     1020  1299               	bcf	25,5	;volatile
 24634     1021                     l8741:
 24635                           
 24636                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 24637     1021  3001               	movlw	1
 24638     1022  0141               	movlb	1	; select bank1
 24639     1023  02C9               	subwf	_eusart1RxCount^(0+128),f	;volatile
 24640     1024                     l8743:
 24641                           
 24642                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 24643     1024  014E               	movlb	14	; select bank14
 24644     1025  1699               	bsf	25,5	;volatile
 24645     1026                     l8745:
 24646                           
 24647                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 24648     1026  0872               	movf	EUSART1_Read@readValue,w
 24649     1027                     l1214:
 24650     1027  0008               	return
 24651     1028                     __end_of_EUSART1_Read:
 24652                           
 24653                           	psect	text89
 24654     1FD8                     __ptext89:	
 24655 ;; *************** function _EUSART2_Read *****************
 24656 ;; Defined at:
 24657 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 24658 ;; Parameters:    Size  Location     Type
 24659 ;;		None
 24660 ;; Auto vars:     Size  Location     Type
 24661 ;;  readValue       1    2[COMMON] unsigned char 
 24662 ;; Return value:  Size  Location     Type
 24663 ;;                  1    wreg      unsigned char 
 24664 ;; Registers used:
 24665 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24666 ;; Tracked objects:
 24667 ;;		On entry : 0/0
 24668 ;;		On exit  : 0/0
 24669 ;;		Unchanged: 0/0
 24670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24675 ;;Total ram usage:        2 bytes
 24676 ;; Hardware stack levels used: 1
 24677 ;; Hardware stack levels required when called: 4
 24678 ;; This function calls:
 24679 ;;		Nothing
 24680 ;; This function is called by:
 24681 ;;		_RN487X_Read@rn487x_interface$F1379
 24682 ;;		_RN487X_Example_TransparentUart
 24683 ;;		_main
 24684 ;; This function uses a non-reentrant model
 24685 ;;
 24686                           
 24687     1FD8                     _EUSART2_Read:	
 24688                           ;psect for function _EUSART2_Read
 24689                           
 24690     1FD8                     l8683:	
 24691                           ;incstack = 0
 24692                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 24693                           
 24694     1FD8                     l8685:	
 24695                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 24696                           
 24697                           
 24698                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 24699     1FD8  0141               	movlb	1	; select bank1
 24700     1FD9  0850               	movf	_eusart2RxCount^(0+128),w	;volatile
 24701     1FDA  1903               	btfsc	3,2
 24702     1FDB  2FDD               	goto	u5881
 24703     1FDC  2FDE               	goto	u5880
 24704     1FDD                     u5881:
 24705     1FDD  2FD8               	goto	l8685
 24706     1FDE                     u5880:
 24707     1FDE                     l8687:
 24708                           
 24709                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 24710     1FDE  0851               	movf	_eusart2RxTail^(0+128),w	;volatile
 24711     1FDF  3E54               	addlw	(low (_eusart2RxStatusBuffer| (0+256)))& (0+255)
 24712     1FE0  0086               	movwf	6
 24713     1FE1  3001               	movlw	1	; select bank2/3
 24714     1FE2  0087               	movwf	7
 24715     1FE3  0801               	movf	1,w
 24716     1FE4  00CF               	movwf	_eusart2RxLastError^(0+128)	;volatile
 24717                           
 24718                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 24719     1FE5  0851               	movf	_eusart2RxTail^(0+128),w
 24720     1FE6  3E5C               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 24721     1FE7  0086               	movwf	6
 24722     1FE8  3001               	movlw	1	; select bank2/3
 24723     1FE9  0087               	movwf	7
 24724     1FEA  0801               	movf	1,w
 24725     1FEB  00F2               	movwf	EUSART2_Read@readValue
 24726     1FEC                     l8689:
 24727     1FEC  3001               	movlw	1
 24728     1FED  00F1               	movwf	??_EUSART2_Read
 24729     1FEE  0871               	movf	??_EUSART2_Read,w
 24730     1FEF  07D1               	addwf	_eusart2RxTail^(0+128),f	;volatile
 24731     1FF0                     l8691:
 24732                           
 24733                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 24734     1FF0  3008               	movlw	8
 24735     1FF1  0251               	subwf	_eusart2RxTail^(0+128),w	;volatile
 24736     1FF2  1C03               	skipc
 24737     1FF3  2FF5               	goto	u5891
 24738     1FF4  2FF6               	goto	u5890
 24739     1FF5                     u5891:
 24740     1FF5  2FF7               	goto	l8695
 24741     1FF6                     u5890:
 24742     1FF6                     l8693:
 24743                           
 24744                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 24745     1FF6  01D1               	clrf	_eusart2RxTail^(0+128)	;volatile
 24746     1FF7                     l8695:
 24747                           
 24748                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 24749     1FF7  014E               	movlb	14	; select bank14
 24750     1FF8  1399               	bcf	25,7	;volatile
 24751     1FF9                     l8697:
 24752                           
 24753                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 24754     1FF9  3001               	movlw	1
 24755     1FFA  0141               	movlb	1	; select bank1
 24756     1FFB  02D0               	subwf	_eusart2RxCount^(0+128),f	;volatile
 24757     1FFC                     l8699:
 24758                           
 24759                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 24760     1FFC  014E               	movlb	14	; select bank14
 24761     1FFD  1799               	bsf	25,7	;volatile
 24762     1FFE                     l8701:
 24763                           
 24764                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 24765     1FFE  0872               	movf	EUSART2_Read@readValue,w
 24766     1FFF                     l1070:
 24767     1FFF  0008               	return
 24768     2000                     __end_of_EUSART2_Read:
 24769                           
 24770                           	psect	text90
 24771     1A5E                     __ptext90:	
 24772 ;; *************** function _RN487X_Delay *****************
 24773 ;; Defined at:
 24774 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 24775 ;; Parameters:    Size  Location     Type
 24776 ;;  delayCount      2    4[COMMON] unsigned short 
 24777 ;; Auto vars:     Size  Location     Type
 24778 ;;		None
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  1    wreg      void 
 24781 ;; Registers used:
 24782 ;;		wreg, status,2, status,0, pclath, cstack
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24792 ;;Total ram usage:        2 bytes
 24793 ;; Hardware stack levels used: 1
 24794 ;; Hardware stack levels required when called: 5
 24795 ;; This function calls:
 24796 ;;		_DELAY_milliseconds
 24797 ;; This function is called by:
 24798 ;;		_LIGHTBLUE_UpdateErrorLed
 24799 ;;		_RN487X_Init
 24800 ;; This function uses a non-reentrant model
 24801 ;;
 24802                           
 24803     1A5E                     _RN487X_Delay:	
 24804                           ;psect for function _RN487X_Delay
 24805                           
 24806     1A5E                     l9099:	
 24807                           ;incstack = 0
 24808                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 24809                           
 24810                           
 24811                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 24812     1A5E  0875               	movf	RN487X_Delay@delayCount+1,w
 24813     1A5F  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 24814     1A60  0874               	movf	RN487X_Delay@delayCount,w
 24815     1A61  00F1               	movwf	DELAY_milliseconds@milliseconds
 24816     1A62  319C  24A1  319A   	fcall	_DELAY_milliseconds
 24817     1A65                     l798:
 24818     1A65  0008               	return
 24819     1A66                     __end_of_RN487X_Delay:
 24820                           
 24821                           	psect	text91
 24822     1CA1                     __ptext91:	
 24823 ;; *************** function _DELAY_milliseconds *****************
 24824 ;; Defined at:
 24825 ;;		line 38 in file "mcc_generated_files/delay.c"
 24826 ;; Parameters:    Size  Location     Type
 24827 ;;  milliseconds    2    1[COMMON] unsigned short 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;		None
 24830 ;; Return value:  Size  Location     Type
 24831 ;;                  1    wreg      void 
 24832 ;; Registers used:
 24833 ;;		wreg, status,2, status,0
 24834 ;; Tracked objects:
 24835 ;;		On entry : 0/0
 24836 ;;		On exit  : 0/0
 24837 ;;		Unchanged: 0/0
 24838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24843 ;;Total ram usage:        3 bytes
 24844 ;; Hardware stack levels used: 1
 24845 ;; Hardware stack levels required when called: 4
 24846 ;; This function calls:
 24847 ;;		Nothing
 24848 ;; This function is called by:
 24849 ;;		_RN487X_Delay
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853     1CA1                     _DELAY_milliseconds:	
 24854                           ;psect for function _DELAY_milliseconds
 24855                           
 24856     1CA1                     l8913:	
 24857                           ;incstack = 0
 24858                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 24859                           
 24860                           
 24861                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 24862     1CA1  2CAA               	goto	l8917
 24863     1CA2                     l8915:
 24864                           
 24865                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 24866     1CA2  300B               	movlw	11
 24867     1CA3  00F3               	movwf	??_DELAY_milliseconds
 24868     1CA4  3062               	movlw	98
 24869     1CA5                     u16697:
 24870     1CA5  0B89               	decfsz	9,f
 24871     1CA6  2CA5               	goto	u16697
 24872     1CA7  0BF3               	decfsz	??_DELAY_milliseconds,f
 24873     1CA8  2CA5               	goto	u16697
 24874     1CA9  3200               	nop2
 24875     1CAA                     l8917:
 24876                           
 24877                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 24878     1CAA  3001               	movlw	1
 24879     1CAB  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 24880     1CAC  3000               	movlw	0
 24881     1CAD  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 24882     1CAE  0A71               	incf	DELAY_milliseconds@milliseconds,w
 24883     1CAF  1D03               	skipz
 24884     1CB0  2CB5               	goto	u6081
 24885     1CB1  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 24886     1CB2  1D03               	btfss	3,2
 24887     1CB3  2CB5               	goto	u6081
 24888     1CB4  2CB6               	goto	u6080
 24889     1CB5                     u6081:
 24890     1CB5  2CA2               	goto	l8915
 24891     1CB6                     u6080:
 24892     1CB6                     l1980:
 24893     1CB6  0008               	return
 24894     1CB7                     __end_of_DELAY_milliseconds:
 24895                           
 24896                           	psect	text92
 24897     1135                     __ptext92:	
 24898 ;; *************** function _LIGHTBLUE_LedState *****************
 24899 ;; Defined at:
 24900 ;;		line 351 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 24901 ;; Parameters:    Size  Location     Type
 24902 ;;		None
 24903 ;; Auto vars:     Size  Location     Type
 24904 ;;  payload         3    0[BANK0 ] unsigned char [3]
 24905 ;;  led             1    3[BANK0 ] unsigned char 
 24906 ;; Return value:  Size  Location     Type
 24907 ;;                  1    wreg      void 
 24908 ;; Registers used:
 24909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24910 ;; Tracked objects:
 24911 ;;		On entry : 0/0
 24912 ;;		On exit  : 0/0
 24913 ;;		Unchanged: 0/0
 24914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24916 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24918 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24919 ;;Total ram usage:        4 bytes
 24920 ;; Hardware stack levels used: 1
 24921 ;; Hardware stack levels required when called: 7
 24922 ;; This function calls:
 24923 ;;		_LIGHTBLUE_GetDataLedValue
 24924 ;;		_LIGHTBLUE_GetErrorLedValue
 24925 ;;		_LIGHTBLUE_SendPacket
 24926 ;;		_LIGHTBLUE_SplitByte
 24927 ;; This function is called by:
 24928 ;;		_main
 24929 ;; This function uses a non-reentrant model
 24930 ;;
 24931                           
 24932     1135                     _LIGHTBLUE_LedState:	
 24933                           ;psect for function _LIGHTBLUE_LedState
 24934                           
 24935     1135                     l17329:	
 24936                           ;incstack = 0
 24937                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24938                           
 24939                           
 24940                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 352:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 353:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 355:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 24941     1135  3199  21EE  3191   	fcall	_LIGHTBLUE_GetDataLedValue
 24942     1138  0140               	movlb	0	; select bank0
 24943     1139  00A3               	movwf	LIGHTBLUE_LedState@led
 24944     113A                     l17331:
 24945                           
 24946                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 357:     *payload = '\0';
 24947     113A  01A0               	clrf	LIGHTBLUE_LedState@payload
 24948     113B                     l17333:
 24949                           
 24950                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 24951     113B  3020               	movlw	low LIGHTBLUE_LedState@payload
 24952     113C  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 24953     113D  3000               	movlw	high LIGHTBLUE_LedState@payload
 24954     113E  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 24955     113F  0823               	movf	LIGHTBLUE_LedState@led,w
 24956     1140  00F8               	movwf	LIGHTBLUE_SplitByte@value
 24957     1141  3192  2234  3191   	fcall	_LIGHTBLUE_SplitByte
 24958     1144                     l17335:
 24959                           
 24960                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 360:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 24961     1144  3020               	movlw	low LIGHTBLUE_LedState@payload
 24962     1145  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 24963     1146  3000               	movlw	high LIGHTBLUE_LedState@payload
 24964     1147  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 24965     1148  304C               	movlw	76
 24966     1149  318B  235A  3191   	fcall	_LIGHTBLUE_SendPacket
 24967     114C                     l17337:
 24968                           
 24969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 362:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 24970     114C  3199  21CD  3191   	fcall	_LIGHTBLUE_GetErrorLedValue
 24971     114F  3E10               	addlw	16
 24972     1150  0140               	movlb	0	; select bank0
 24973     1151  00A3               	movwf	LIGHTBLUE_LedState@led
 24974                           
 24975                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     *payload = '\0';
 24976     1152  01A0               	clrf	LIGHTBLUE_LedState@payload
 24977     1153                     l17339:
 24978                           
 24979                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 24980     1153  3020               	movlw	low LIGHTBLUE_LedState@payload
 24981     1154  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 24982     1155  3000               	movlw	high LIGHTBLUE_LedState@payload
 24983     1156  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 24984     1157  0823               	movf	LIGHTBLUE_LedState@led,w
 24985     1158  00F8               	movwf	LIGHTBLUE_SplitByte@value
 24986     1159  3192  2234  3191   	fcall	_LIGHTBLUE_SplitByte
 24987     115C                     l17341:
 24988                           
 24989                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 366:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 24990     115C  3020               	movlw	low LIGHTBLUE_LedState@payload
 24991     115D  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 24992     115E  3000               	movlw	high LIGHTBLUE_LedState@payload
 24993     115F  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 24994     1160  304C               	movlw	76
 24995     1161  318B  235A  3191   	fcall	_LIGHTBLUE_SendPacket
 24996     1164                     l133:
 24997     1164  0008               	return
 24998     1165                     __end_of_LIGHTBLUE_LedState:
 24999                           
 25000                           	psect	text93
 25001     19CD                     __ptext93:	
 25002 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 25003 ;; Defined at:
 25004 ;;		line 482 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25005 ;; Parameters:    Size  Location     Type
 25006 ;;		None
 25007 ;; Auto vars:     Size  Location     Type
 25008 ;;		None
 25009 ;; Return value:  Size  Location     Type
 25010 ;;                  1    wreg      unsigned char 
 25011 ;; Registers used:
 25012 ;;		wreg, status,2, status,0
 25013 ;; Tracked objects:
 25014 ;;		On entry : 0/0
 25015 ;;		On exit  : 0/0
 25016 ;;		Unchanged: 0/0
 25017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25022 ;;Total ram usage:        0 bytes
 25023 ;; Hardware stack levels used: 1
 25024 ;; Hardware stack levels required when called: 4
 25025 ;; This function calls:
 25026 ;;		Nothing
 25027 ;; This function is called by:
 25028 ;;		_LIGHTBLUE_LedState
 25029 ;; This function uses a non-reentrant model
 25030 ;;
 25031                           
 25032     19CD                     _LIGHTBLUE_GetErrorLedValue:	
 25033                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 25034                           
 25035     19CD                     l14559:	
 25036                           ;incstack = 0
 25037                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 25038                           
 25039                           
 25040                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 25041     19CD  0141               	movlb	1	; select bank1
 25042     19CE  0846               	movf	(_bitMap^(0+128)+1),w	;volatile
 25043     19CF  3901               	andlw	1
 25044     19D0  3C01               	sublw	1
 25045     19D1                     l208:
 25046     19D1  0008               	return
 25047     19D2                     __end_of_LIGHTBLUE_GetErrorLedValue:
 25048                           
 25049                           	psect	text94
 25050     19EE                     __ptext94:	
 25051 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 25052 ;; Defined at:
 25053 ;;		line 478 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25054 ;; Parameters:    Size  Location     Type
 25055 ;;		None
 25056 ;; Auto vars:     Size  Location     Type
 25057 ;;		None
 25058 ;; Return value:  Size  Location     Type
 25059 ;;                  1    wreg      unsigned char 
 25060 ;; Registers used:
 25061 ;;		wreg, status,2, status,0
 25062 ;; Tracked objects:
 25063 ;;		On entry : 0/0
 25064 ;;		On exit  : 0/0
 25065 ;;		Unchanged: 0/0
 25066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25071 ;;Total ram usage:        0 bytes
 25072 ;; Hardware stack levels used: 1
 25073 ;; Hardware stack levels required when called: 4
 25074 ;; This function calls:
 25075 ;;		Nothing
 25076 ;; This function is called by:
 25077 ;;		_LIGHTBLUE_LedState
 25078 ;; This function uses a non-reentrant model
 25079 ;;
 25080                           
 25081     19EE                     _LIGHTBLUE_GetDataLedValue:	
 25082                           ;psect for function _LIGHTBLUE_GetDataLedValue
 25083                           
 25084     19EE                     l14555:	
 25085                           ;incstack = 0
 25086                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 25087                           
 25088                           
 25089                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 479:     return (0x01) - PORTAbits
      +                          .RA5;
 25090     19EE  0140               	movlb	0	; select bank0
 25091     19EF  0E0C               	swapf	12,w	;volatile
 25092     19F0  0C89               	rrf	9,f
 25093     19F1  3901               	andlw	1
 25094     19F2  3C01               	sublw	1
 25095     19F3                     l205:
 25096     19F3  0008               	return
 25097     19F4                     __end_of_LIGHTBLUE_GetDataLedValue:
 25098                           
 25099                           	psect	text95
 25100     19E8                     __ptext95:	
 25101 ;; *************** function _LIGHTBLUE_Initialize *****************
 25102 ;; Defined at:
 25103 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25104 ;; Parameters:    Size  Location     Type
 25105 ;;		None
 25106 ;; Auto vars:     Size  Location     Type
 25107 ;;		None
 25108 ;; Return value:  Size  Location     Type
 25109 ;;                  1    wreg      void 
 25110 ;; Registers used:
 25111 ;;		wreg
 25112 ;; Tracked objects:
 25113 ;;		On entry : 0/0
 25114 ;;		On exit  : 0/0
 25115 ;;		Unchanged: 0/0
 25116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25121 ;;Total ram usage:        0 bytes
 25122 ;; Hardware stack levels used: 1
 25123 ;; Hardware stack levels required when called: 4
 25124 ;; This function calls:
 25125 ;;		Nothing
 25126 ;; This function is called by:
 25127 ;;		_main
 25128 ;; This function uses a non-reentrant model
 25129 ;;
 25130                           
 25131     19E8                     _LIGHTBLUE_Initialize:	
 25132                           ;psect for function _LIGHTBLUE_Initialize
 25133                           
 25134     19E8                     l10593:	
 25135                           ;incstack = 0
 25136                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 25137                           
 25138                           
 25139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 25140     19E8  3001               	movlw	1
 25141     19E9  0141               	movlb	1	; select bank1
 25142     19EA  00C5               	movwf	_bitMap^(0+128)	;volatile
 25143                           
 25144                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 25145     19EB  3001               	movlw	1
 25146     19EC  00C6               	movwf	(_bitMap^(0+128)+1)	;volatile
 25147     19ED                     l121:
 25148     19ED  0008               	return
 25149     19EE                     __end_of_LIGHTBLUE_Initialize:
 25150                           
 25151                           	psect	text96
 25152     12A4                     __ptext96:	
 25153 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 25154 ;; Defined at:
 25155 ;;		line 325 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25156 ;; Parameters:    Size  Location     Type
 25157 ;;		None
 25158 ;; Auto vars:     Size  Location     Type
 25159 ;;  payload        13   22[BANK0 ] unsigned char [13]
 25160 ;;  accelData       6   35[BANK0 ] struct .
 25161 ;; Return value:  Size  Location     Type
 25162 ;;                  1    wreg      void 
 25163 ;; Registers used:
 25164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25165 ;; Tracked objects:
 25166 ;;		On entry : 0/0
 25167 ;;		On exit  : 0/0
 25168 ;;		Unchanged: 0/0
 25169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25171 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25173 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25174 ;;Total ram usage:       19 bytes
 25175 ;; Hardware stack levels used: 1
 25176 ;; Hardware stack levels required when called: 16
 25177 ;; This function calls:
 25178 ;;		_BMA253_GetAccelDataXYZ
 25179 ;;		_LIGHTBLUE_SendPacket
 25180 ;;		_LIGHTBLUE_SplitWord
 25181 ;; This function is called by:
 25182 ;;		_main
 25183 ;; This function uses a non-reentrant model
 25184 ;;
 25185                           
 25186     12A4                     _LIGHTBLUE_AccelSensor:	
 25187                           ;psect for function _LIGHTBLUE_AccelSensor
 25188                           
 25189     12A4                     l17309:	
 25190                           ;incstack = 0
 25191 ;; hardware stack exceeded
 25192                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25193                           
 25194                           
 25195                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 326:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 327:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 330:     *payload = '\0';
 25196     12A4  0140               	movlb	0	; select bank0
 25197     12A5  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 25198     12A6                     l17311:
 25199                           
 25200                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 331:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 25201     12A6  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 25202     12A7  3197  270A  3192   	fcall	_BMA253_GetAccelDataXYZ
 25203     12AA                     l17313:
 25204                           
 25205                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 334:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 25206     12AA  3036               	movlw	low LIGHTBLUE_AccelSensor@payload
 25207     12AB  0140               	movlb	0	; select bank0
 25208     12AC  00A0               	movwf	LIGHTBLUE_SplitWord@payload
 25209     12AD  3000               	movlw	high LIGHTBLUE_AccelSensor@payload
 25210     12AE  00A1               	movwf	LIGHTBLUE_SplitWord@payload+1
 25211     12AF  30FF               	movlw	255
 25212     12B0  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 25213     12B1  00A2               	movwf	LIGHTBLUE_SplitWord@value
 25214     12B2  300F               	movlw	15
 25215     12B3  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 25216     12B4  00A3               	movwf	LIGHTBLUE_SplitWord@value+1
 25217     12B5  319C  2477  3192   	fcall	_LIGHTBLUE_SplitWord
 25218     12B8                     l17315:
 25219                           
 25220                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 25221     12B8  3036               	movlw	low LIGHTBLUE_AccelSensor@payload
 25222     12B9  0140               	movlb	0	; select bank0
 25223     12BA  00A0               	movwf	LIGHTBLUE_SplitWord@payload
 25224     12BB  3000               	movlw	high LIGHTBLUE_AccelSensor@payload
 25225     12BC  00A1               	movwf	LIGHTBLUE_SplitWord@payload+1
 25226     12BD  30FF               	movlw	255
 25227     12BE  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 25228     12BF  00A2               	movwf	LIGHTBLUE_SplitWord@value
 25229     12C0  300F               	movlw	15
 25230     12C1  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 25231     12C2  00A3               	movwf	LIGHTBLUE_SplitWord@value+1
 25232     12C3  319C  2477  3192   	fcall	_LIGHTBLUE_SplitWord
 25233     12C6                     l17317:
 25234                           
 25235                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 25236     12C6  3036               	movlw	low LIGHTBLUE_AccelSensor@payload
 25237     12C7  0140               	movlb	0	; select bank0
 25238     12C8  00A0               	movwf	LIGHTBLUE_SplitWord@payload
 25239     12C9  3000               	movlw	high LIGHTBLUE_AccelSensor@payload
 25240     12CA  00A1               	movwf	LIGHTBLUE_SplitWord@payload+1
 25241     12CB  30FF               	movlw	255
 25242     12CC  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 25243     12CD  00A2               	movwf	LIGHTBLUE_SplitWord@value
 25244     12CE  300F               	movlw	15
 25245     12CF  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 25246     12D0  00A3               	movwf	LIGHTBLUE_SplitWord@value+1
 25247     12D1  319C  2477  3192   	fcall	_LIGHTBLUE_SplitWord
 25248     12D4                     l17319:
 25249                           
 25250                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 25251     12D4  3036               	movlw	low LIGHTBLUE_AccelSensor@payload
 25252     12D5  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 25253     12D6  3000               	movlw	high LIGHTBLUE_AccelSensor@payload
 25254     12D7  00F8               	movwf	LIGHTBLUE_SendPacket@payload+1
 25255     12D8  3058               	movlw	88
 25256     12D9  318B  235A  3192   	fcall	_LIGHTBLUE_SendPacket
 25257     12DC                     l127:
 25258     12DC  0008               	return
 25259     12DD                     __end_of_LIGHTBLUE_AccelSensor:
 25260                           
 25261                           	psect	text97
 25262     1C77                     __ptext97:	
 25263 ;; *************** function _LIGHTBLUE_SplitWord *****************
 25264 ;; Defined at:
 25265 ;;		line 462 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25266 ;; Parameters:    Size  Location     Type
 25267 ;;  payload         2    0[BANK0 ] PTR unsigned char 
 25268 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 25269 ;;  value           2    2[BANK0 ] short 
 25270 ;; Auto vars:     Size  Location     Type
 25271 ;;		None
 25272 ;; Return value:  Size  Location     Type
 25273 ;;                  1    wreg      void 
 25274 ;; Registers used:
 25275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25276 ;; Tracked objects:
 25277 ;;		On entry : 0/0
 25278 ;;		On exit  : 0/0
 25279 ;;		Unchanged: 0/0
 25280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25284 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25285 ;;Total ram usage:        4 bytes
 25286 ;; Hardware stack levels used: 1
 25287 ;; Hardware stack levels required when called: 6
 25288 ;; This function calls:
 25289 ;;		_LIGHTBLUE_SplitByte
 25290 ;; This function is called by:
 25291 ;;		_LIGHTBLUE_TemperatureSensor
 25292 ;;		_LIGHTBLUE_AccelSensor
 25293 ;; This function uses a non-reentrant model
 25294 ;;
 25295                           
 25296     1C77                     _LIGHTBLUE_SplitWord:	
 25297                           ;psect for function _LIGHTBLUE_SplitWord
 25298                           
 25299     1C77                     l17281:	
 25300                           ;incstack = 0
 25301                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25302                           
 25303                           
 25304                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 463:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 25305     1C77  0140               	movlb	0	; select bank0
 25306     1C78  0821               	movf	LIGHTBLUE_SplitWord@payload+1,w
 25307     1C79  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 25308     1C7A  0820               	movf	LIGHTBLUE_SplitWord@payload,w
 25309     1C7B  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 25310     1C7C  0822               	movf	LIGHTBLUE_SplitWord@value,w
 25311     1C7D  00F8               	movwf	LIGHTBLUE_SplitByte@value
 25312     1C7E  3192  2234  319C   	fcall	_LIGHTBLUE_SplitByte
 25313                           
 25314                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 25315     1C81  0140               	movlb	0	; select bank0
 25316     1C82  0821               	movf	LIGHTBLUE_SplitWord@payload+1,w
 25317     1C83  00F7               	movwf	LIGHTBLUE_SplitByte@payload+1
 25318     1C84  0820               	movf	LIGHTBLUE_SplitWord@payload,w
 25319     1C85  00F6               	movwf	LIGHTBLUE_SplitByte@payload
 25320     1C86  0823               	movf	LIGHTBLUE_SplitWord@value+1,w
 25321     1C87  00F8               	movwf	LIGHTBLUE_SplitByte@value
 25322     1C88  3192  2234  319C   	fcall	_LIGHTBLUE_SplitByte
 25323     1C8B                     l196:
 25324     1C8B  0008               	return
 25325     1C8C                     __end_of_LIGHTBLUE_SplitWord:
 25326                           
 25327                           	psect	text98
 25328     1234                     __ptext98:	
 25329 ;; *************** function _LIGHTBLUE_SplitByte *****************
 25330 ;; Defined at:
 25331 ;;		line 467 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25332 ;; Parameters:    Size  Location     Type
 25333 ;;  payload         2    6[COMMON] PTR unsigned char 
 25334 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 25335 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 25336 ;;  value           1    8[COMMON] char 
 25337 ;; Auto vars:     Size  Location     Type
 25338 ;;		None
 25339 ;; Return value:  Size  Location     Type
 25340 ;;                  1    wreg      void 
 25341 ;; Registers used:
 25342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25343 ;; Tracked objects:
 25344 ;;		On entry : 0/0
 25345 ;;		On exit  : 0/0
 25346 ;;		Unchanged: 0/0
 25347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25348 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25352 ;;Total ram usage:        4 bytes
 25353 ;; Hardware stack levels used: 1
 25354 ;; Hardware stack levels required when called: 5
 25355 ;; This function calls:
 25356 ;;		_strlen
 25357 ;; This function is called by:
 25358 ;;		_LIGHTBLUE_PushButton
 25359 ;;		_LIGHTBLUE_LedState
 25360 ;;		_LIGHTBLUE_SendProtocolVersion
 25361 ;;		_LIGHTBLUE_SplitWord
 25362 ;; This function uses a non-reentrant model
 25363 ;;
 25364                           
 25365     1234                     _LIGHTBLUE_SplitByte:	
 25366                           ;psect for function _LIGHTBLUE_SplitByte
 25367                           
 25368     1234                     l17269:	
 25369                           ;incstack = 0
 25370                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25371                           
 25372                           
 25373                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 468:     payload += strlen(payload
      +                          );
 25374     1234  0877               	movf	LIGHTBLUE_SplitByte@payload+1,w
 25375     1235  00F2               	movwf	strlen@s+1
 25376     1236  0876               	movf	LIGHTBLUE_SplitByte@payload,w
 25377     1237  00F1               	movwf	strlen@s
 25378     1238  319D  2589  3192   	fcall	_strlen
 25379     123B  0871               	movf	?_strlen,w
 25380     123C  07F6               	addwf	LIGHTBLUE_SplitByte@payload,f
 25381     123D  0872               	movf	?_strlen+1,w
 25382     123E  3DF7               	addwfc	LIGHTBLUE_SplitByte@payload+1,f
 25383     123F                     l17271:
 25384                           
 25385                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 25386     123F  0E78               	swapf	LIGHTBLUE_SplitByte@value,w
 25387     1240  390F               	andlw	15
 25388     1241  1989               	btfsc	9,3
 25389     1242  38F0               	iorlw	240
 25390     1243  390F               	andlw	15
 25391     1244  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 25392     1245  0086               	movwf	6
 25393     1246  3001               	movlw	1	; select bank3/4
 25394     1247  0087               	movwf	7
 25395     1248  0801               	movf	1,w
 25396     1249  00F9               	movwf	??_LIGHTBLUE_SplitByte
 25397     124A  0876               	movf	LIGHTBLUE_SplitByte@payload,w
 25398     124B  0086               	movwf	6
 25399     124C  0877               	movf	LIGHTBLUE_SplitByte@payload+1,w
 25400     124D  0087               	movwf	7
 25401     124E  0879               	movf	??_LIGHTBLUE_SplitByte,w
 25402     124F  0081               	movwf	1
 25403     1250                     l17273:
 25404     1250  3001               	movlw	1
 25405     1251  07F6               	addwf	LIGHTBLUE_SplitByte@payload,f
 25406     1252  3000               	movlw	0
 25407     1253  3DF7               	addwfc	LIGHTBLUE_SplitByte@payload+1,f
 25408     1254                     l17275:
 25409                           
 25410                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 25411     1254  0878               	movf	LIGHTBLUE_SplitByte@value,w
 25412     1255  390F               	andlw	15
 25413     1256  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 25414     1257  0086               	movwf	6
 25415     1258  3001               	movlw	1	; select bank3/4
 25416     1259  0087               	movwf	7
 25417     125A  0801               	movf	1,w
 25418     125B  00F9               	movwf	??_LIGHTBLUE_SplitByte
 25419     125C  0876               	movf	LIGHTBLUE_SplitByte@payload,w
 25420     125D  0086               	movwf	6
 25421     125E  0877               	movf	LIGHTBLUE_SplitByte@payload+1,w
 25422     125F  0087               	movwf	7
 25423     1260  0879               	movf	??_LIGHTBLUE_SplitByte,w
 25424     1261  0081               	movwf	1
 25425     1262                     l17277:
 25426     1262  3001               	movlw	1
 25427     1263  07F6               	addwf	LIGHTBLUE_SplitByte@payload,f
 25428     1264  3000               	movlw	0
 25429     1265  3DF7               	addwfc	LIGHTBLUE_SplitByte@payload+1,f
 25430     1266                     l17279:
 25431                           
 25432                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload = '\0';
 25433     1266  0876               	movf	LIGHTBLUE_SplitByte@payload,w
 25434     1267  0086               	movwf	6
 25435     1268  0877               	movf	LIGHTBLUE_SplitByte@payload+1,w
 25436     1269  0087               	movwf	7
 25437     126A  0181               	clrf	1
 25438     126B                     l199:
 25439     126B  0008               	return
 25440     126C                     __end_of_LIGHTBLUE_SplitByte:
 25441                           
 25442                           	psect	text99
 25443     0B5A                     __ptext99:	
 25444 ;; *************** function _LIGHTBLUE_SendPacket *****************
 25445 ;; Defined at:
 25446 ;;		line 450 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 25447 ;; Parameters:    Size  Location     Type
 25448 ;;  packetID        1    wreg     unsigned char 
 25449 ;;  payload         2    7[COMMON] PTR unsigned char 
 25450 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 25451 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 25452 ;; Auto vars:     Size  Location     Type
 25453 ;;  packetID        1   11[COMMON] unsigned char 
 25454 ;; Return value:  Size  Location     Type
 25455 ;;                  1    wreg      void 
 25456 ;; Registers used:
 25457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25458 ;; Tracked objects:
 25459 ;;		On entry : 0/0
 25460 ;;		On exit  : 0/0
 25461 ;;		Unchanged: 0/0
 25462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25466 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25467 ;;Total ram usage:        5 bytes
 25468 ;; Hardware stack levels used: 1
 25469 ;; Hardware stack levels required when called: 6
 25470 ;; This function calls:
 25471 ;;		_RN487X_Write
 25472 ;;		_strlen
 25473 ;; This function is called by:
 25474 ;;		_LIGHTBLUE_TemperatureSensor
 25475 ;;		_LIGHTBLUE_AccelSensor
 25476 ;;		_LIGHTBLUE_PushButton
 25477 ;;		_LIGHTBLUE_LedState
 25478 ;;		_LIGHTBLUE_SendProtocolVersion
 25479 ;; This function uses a non-reentrant model
 25480 ;;
 25481                           
 25482     0B5A                     _LIGHTBLUE_SendPacket:	
 25483                           ;psect for function _LIGHTBLUE_SendPacket
 25484                           
 25485                           
 25486                           ;incstack = 0
 25487                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25488                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 25489     0B5A  00FB               	movwf	LIGHTBLUE_SendPacket@packetID
 25490     0B5B                     l17283:
 25491                           
 25492                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 451:     RN487X.Write(('['));
 25493     0B5B  305B               	movlw	91
 25494     0B5C  00F6               	movwf	RN487X_Write@txData
 25495     0B5D  3040               	movlw	low (_RN487X| (0+32768))
 25496     0B5E  0084               	movwf	4
 25497     0B5F  30A0               	movlw	high (_RN487X| (0+32768))
 25498     0B60  0085               	movwf	5
 25499     0B61  3F01               	moviw [1]fsr0
 25500     0B62  008A               	movwf	10
 25501     0B63  3F00               	moviw [0]fsr0
 25502     0B64  000A               	callw
 25503     0B65  318B               	pagesel	$
 25504                           
 25505                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 25506     0B66  0141               	movlb	1	; select bank1
 25507     0B67  085F               	movf	_sequenceNumber^(0+128),w
 25508     0B68  390F               	andlw	15
 25509     0B69  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 25510     0B6A  0086               	movwf	6
 25511     0B6B  3001               	movlw	1	; select bank3/4
 25512     0B6C  0087               	movwf	7
 25513     0B6D  0801               	movf	1,w
 25514     0B6E  00F6               	movwf	RN487X_Write@txData
 25515     0B6F  3040               	movlw	low (_RN487X| (0+32768))
 25516     0B70  0084               	movwf	4
 25517     0B71  30A0               	movlw	high (_RN487X| (0+32768))
 25518     0B72  0085               	movwf	5
 25519     0B73  3F01               	moviw [1]fsr0
 25520     0B74  008A               	movwf	10
 25521     0B75  3F00               	moviw [0]fsr0
 25522     0B76  000A               	callw
 25523     0B77  318B               	pagesel	$
 25524     0B78                     l17285:
 25525     0B78  3001               	movlw	1
 25526     0B79  00F9               	movwf	??_LIGHTBLUE_SendPacket
 25527     0B7A  0879               	movf	??_LIGHTBLUE_SendPacket,w
 25528     0B7B  0141               	movlb	1	; select bank1
 25529     0B7C  07DF               	addwf	_sequenceNumber^(0+128),f
 25530     0B7D                     l17287:
 25531                           
 25532                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write(packetID);
 25533     0B7D  087B               	movf	LIGHTBLUE_SendPacket@packetID,w
 25534     0B7E  00F6               	movwf	RN487X_Write@txData
 25535     0B7F  3040               	movlw	low (_RN487X| (0+32768))
 25536     0B80  0084               	movwf	4
 25537     0B81  30A0               	movlw	high (_RN487X| (0+32768))
 25538     0B82  0085               	movwf	5
 25539     0B83  3F01               	moviw [1]fsr0
 25540     0B84  008A               	movwf	10
 25541     0B85  3F00               	moviw [0]fsr0
 25542     0B86  000A               	callw
 25543     0B87  318B               	pagesel	$
 25544     0B88                     l17289:
 25545                           
 25546                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 25547     0B88  0878               	movf	LIGHTBLUE_SendPacket@payload+1,w
 25548     0B89  00F2               	movwf	strlen@s+1
 25549     0B8A  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 25550     0B8B  00F1               	movwf	strlen@s
 25551     0B8C  319D  2589  318B   	fcall	_strlen
 25552     0B8F  0871               	movf	?_strlen,w
 25553     0B90  00F9               	movwf	??_LIGHTBLUE_SendPacket
 25554     0B91  0872               	movf	?_strlen+1,w
 25555     0B92  00FA               	movwf	??_LIGHTBLUE_SendPacket+1
 25556     0B93  3004               	movlw	4
 25557     0B94                     u16575:
 25558     0B94  36FA               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 25559     0B95  0CF9               	rrf	??_LIGHTBLUE_SendPacket,f
 25560     0B96  0B89               	decfsz	9,f
 25561     0B97  2B94               	goto	u16575
 25562     0B98  0879               	movf	??_LIGHTBLUE_SendPacket,w
 25563     0B99  390F               	andlw	15
 25564     0B9A  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 25565     0B9B  0086               	movwf	6
 25566     0B9C  3001               	movlw	1	; select bank3/4
 25567     0B9D  0087               	movwf	7
 25568     0B9E  0801               	movf	1,w
 25569     0B9F  00F6               	movwf	RN487X_Write@txData
 25570     0BA0  3040               	movlw	low (_RN487X| (0+32768))
 25571     0BA1  0084               	movwf	4
 25572     0BA2  30A0               	movlw	high (_RN487X| (0+32768))
 25573     0BA3  0085               	movwf	5
 25574     0BA4  3F01               	moviw [1]fsr0
 25575     0BA5  008A               	movwf	10
 25576     0BA6  3F00               	moviw [0]fsr0
 25577     0BA7  000A               	callw
 25578     0BA8  318B               	pagesel	$
 25579     0BA9                     l17291:
 25580                           
 25581                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 25582     0BA9  0878               	movf	LIGHTBLUE_SendPacket@payload+1,w
 25583     0BAA  00F2               	movwf	strlen@s+1
 25584     0BAB  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 25585     0BAC  00F1               	movwf	strlen@s
 25586     0BAD  319D  2589  318B   	fcall	_strlen
 25587     0BB0  0871               	movf	?_strlen,w
 25588     0BB1  390F               	andlw	15
 25589     0BB2  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 25590     0BB3  0086               	movwf	6
 25591     0BB4  3001               	movlw	1	; select bank3/4
 25592     0BB5  0087               	movwf	7
 25593     0BB6  0801               	movf	1,w
 25594     0BB7  00F6               	movwf	RN487X_Write@txData
 25595     0BB8  3040               	movlw	low (_RN487X| (0+32768))
 25596     0BB9  0084               	movwf	4
 25597     0BBA  30A0               	movlw	high (_RN487X| (0+32768))
 25598     0BBB  0085               	movwf	5
 25599     0BBC  3F01               	moviw [1]fsr0
 25600     0BBD  008A               	movwf	10
 25601     0BBE  3F00               	moviw [0]fsr0
 25602     0BBF  000A               	callw
 25603     0BC0  318B               	pagesel	$
 25604                           
 25605                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     while (*payload) {
 25606     0BC1  2BD5               	goto	l17297
 25607     0BC2                     l17293:
 25608                           
 25609                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 25610     0BC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 25611     0BC3  0086               	movwf	6
 25612     0BC4  0878               	movf	LIGHTBLUE_SendPacket@payload+1,w
 25613     0BC5  0087               	movwf	7
 25614     0BC6  0801               	movf	1,w
 25615     0BC7  00F6               	movwf	RN487X_Write@txData
 25616     0BC8  3040               	movlw	low (_RN487X| (0+32768))
 25617     0BC9  0084               	movwf	4
 25618     0BCA  30A0               	movlw	high (_RN487X| (0+32768))
 25619     0BCB  0085               	movwf	5
 25620     0BCC  3F01               	moviw [1]fsr0
 25621     0BCD  008A               	movwf	10
 25622     0BCE  3F00               	moviw [0]fsr0
 25623     0BCF  000A               	callw
 25624     0BD0  318B               	pagesel	$
 25625     0BD1                     l17295:
 25626     0BD1  3001               	movlw	1
 25627     0BD2  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 25628     0BD3  3000               	movlw	0
 25629     0BD4  3DF8               	addwfc	LIGHTBLUE_SendPacket@payload+1,f
 25630     0BD5                     l17297:
 25631                           
 25632                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     while (*payload) {
 25633     0BD5  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 25634     0BD6  0086               	movwf	6
 25635     0BD7  0878               	movf	LIGHTBLUE_SendPacket@payload+1,w
 25636     0BD8  0087               	movwf	7
 25637     0BD9  0801               	movf	1,w
 25638     0BDA  1D03               	btfss	3,2
 25639     0BDB  2BDD               	goto	u16581
 25640     0BDC  2BDE               	goto	u16580
 25641     0BDD                     u16581:
 25642     0BDD  2BC2               	goto	l17293
 25643     0BDE                     u16580:
 25644     0BDE                     l17299:
 25645                           
 25646                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:     RN487X.Write((']'));
 25647     0BDE  305D               	movlw	93
 25648     0BDF  00F6               	movwf	RN487X_Write@txData
 25649     0BE0  3040               	movlw	low (_RN487X| (0+32768))
 25650     0BE1  0084               	movwf	4
 25651     0BE2  30A0               	movlw	high (_RN487X| (0+32768))
 25652     0BE3  0085               	movwf	5
 25653     0BE4  3F01               	moviw [1]fsr0
 25654     0BE5  008A               	movwf	10
 25655     0BE6  3F00               	moviw [0]fsr0
 25656     0BE7  000A               	callw
 25657     0BE8  318B               	pagesel	$
 25658     0BE9                     l193:
 25659     0BE9  0008               	return
 25660     0BEA                     __end_of_LIGHTBLUE_SendPacket:
 25661                           
 25662                           	psect	text100
 25663     1D89                     __ptext100:	
 25664 ;; *************** function _strlen *****************
 25665 ;; Defined at:
 25666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 25667 ;; Parameters:    Size  Location     Type
 25668 ;;  s               2    1[COMMON] PTR const unsigned char 
 25669 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3781(80), STR_5(12), STR_3(11), 
 25670 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 25671 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 25672 ;; Auto vars:     Size  Location     Type
 25673 ;;  a               2    4[COMMON] PTR const unsigned char 
 25674 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3781(80), STR_5(12), STR_3(11), 
 25675 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 25676 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 25677 ;; Return value:  Size  Location     Type
 25678 ;;                  2    1[COMMON] unsigned int 
 25679 ;; Registers used:
 25680 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/0
 25683 ;;		On exit  : 0/0
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25690 ;;Total ram usage:        5 bytes
 25691 ;; Hardware stack levels used: 1
 25692 ;; Hardware stack levels required when called: 4
 25693 ;; This function calls:
 25694 ;;		Nothing
 25695 ;; This function is called by:
 25696 ;;		_LIGHTBLUE_SendProtocolVersion
 25697 ;;		_LIGHTBLUE_SendSerialData
 25698 ;;		_LIGHTBLUE_SendPacket
 25699 ;;		_LIGHTBLUE_SplitByte
 25700 ;;		_rn487x_PrintMessage
 25701 ;;		_strstr
 25702 ;; This function uses a non-reentrant model
 25703 ;;
 25704                           
 25705     1D89                     _strlen:	
 25706                           ;psect for function _strlen
 25707                           
 25708     1D89                     l13771:	
 25709                           ;incstack = 0
 25710                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 25711                           
 25712     1D89  0872               	movf	strlen@s+1,w
 25713     1D8A  00F5               	movwf	strlen@a+1
 25714     1D8B  0871               	movf	strlen@s,w
 25715     1D8C  00F4               	movwf	strlen@a
 25716     1D8D  2D92               	goto	l13775
 25717     1D8E                     l13773:
 25718     1D8E  3001               	movlw	1
 25719     1D8F  07F1               	addwf	strlen@s,f
 25720     1D90  3000               	movlw	0
 25721     1D91  3DF2               	addwfc	strlen@s+1,f
 25722     1D92                     l13775:
 25723     1D92  0871               	movf	strlen@s,w
 25724     1D93  0084               	movwf	4
 25725     1D94  0872               	movf	strlen@s+1,w
 25726     1D95  0085               	movwf	5
 25727     1D96  0012               	moviw fsr0++
 25728     1D97  1D03               	btfss	3,2
 25729     1D98  2D9A               	goto	u11781
 25730     1D99  2D9B               	goto	u11780
 25731     1D9A                     u11781:
 25732     1D9A  2D8E               	goto	l13773
 25733     1D9B                     u11780:
 25734     1D9B                     l13777:
 25735     1D9B  0874               	movf	strlen@a,w
 25736     1D9C  0271               	subwf	strlen@s,w
 25737     1D9D  00F1               	movwf	?_strlen
 25738     1D9E  0875               	movf	strlen@a+1,w
 25739     1D9F  3B72               	subwfb	strlen@s+1,w
 25740     1DA0  00F2               	movwf	?_strlen+1
 25741     1DA1                     l3292:
 25742     1DA1  0008               	return
 25743     1DA2                     __end_of_strlen:
 25744                           
 25745                           	psect	text101
 25746     1B08                     __ptext101:	
 25747 ;; *************** function _RN487X_Write *****************
 25748 ;; Defined at:
 25749 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 25750 ;; Parameters:    Size  Location     Type
 25751 ;;  txData          1    6[COMMON] unsigned char 
 25752 ;; Auto vars:     Size  Location     Type
 25753 ;;		None
 25754 ;; Return value:  Size  Location     Type
 25755 ;;                  1    wreg      void 
 25756 ;; Registers used:
 25757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25758 ;; Tracked objects:
 25759 ;;		On entry : 0/0
 25760 ;;		On exit  : 0/0
 25761 ;;		Unchanged: 0/0
 25762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25763 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25767 ;;Total ram usage:        1 bytes
 25768 ;; Hardware stack levels used: 1
 25769 ;; Hardware stack levels required when called: 5
 25770 ;; This function calls:
 25771 ;;		_EUSART1_Write
 25772 ;;		_EUSART2_Write
 25773 ;; This function is called by:
 25774 ;;		_RN487X_SendCmd
 25775 ;;		_LIGHTBLUE_SendPacket
 25776 ;;		_LIGHTBLUE_SendSerialData
 25777 ;;		_RN487X_Example_TransparentUart
 25778 ;;		_main
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782     1B08                     _RN487X_Write:	
 25783                           ;psect for function _RN487X_Write
 25784                           
 25785     1B08                     l13739:	
 25786                           ;incstack = 0
 25787                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25788                           
 25789                           
 25790                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 25791     1B08  0876               	movf	RN487X_Write@txData,w
 25792     1B09  00F1               	movwf	EUSART2_Write@txData
 25793     1B0A  3016               	movlw	low ((_uart+22)| (0+32768))
 25794     1B0B  0084               	movwf	4
 25795     1B0C  3098               	movlw	high ((_uart+22)| (0+32768))
 25796     1B0D  0085               	movwf	5
 25797     1B0E  3F01               	moviw [1]fsr0
 25798     1B0F  008A               	movwf	10
 25799     1B10  3F00               	moviw [0]fsr0
 25800     1B11  000A               	callw
 25801     1B12  319B               	pagesel	$
 25802     1B13                     l786:
 25803     1B13  0008               	return
 25804     1B14                     __end_of_RN487X_Write:
 25805                           
 25806                           	psect	text102
 25807     1FB0                     __ptext102:	
 25808 ;; *************** function _EUSART1_Write *****************
 25809 ;; Defined at:
 25810 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 25811 ;; Parameters:    Size  Location     Type
 25812 ;;  txData          1    1[COMMON] unsigned char 
 25813 ;; Auto vars:     Size  Location     Type
 25814 ;;		None
 25815 ;; Return value:  Size  Location     Type
 25816 ;;                  1    wreg      void 
 25817 ;; Registers used:
 25818 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25819 ;; Tracked objects:
 25820 ;;		On entry : 0/0
 25821 ;;		On exit  : 0/0
 25822 ;;		Unchanged: 0/0
 25823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25828 ;;Total ram usage:        2 bytes
 25829 ;; Hardware stack levels used: 1
 25830 ;; Hardware stack levels required when called: 4
 25831 ;; This function calls:
 25832 ;;		Nothing
 25833 ;; This function is called by:
 25834 ;;		_putch
 25835 ;;		_RN487X_Write
 25836 ;;		_rn487x_PrintMessageStart
 25837 ;;		_rn487x_PrintMessageEnd
 25838 ;;		_rn487x_PrintIndicatorCharacters
 25839 ;;		_rn487x_PrintMessage
 25840 ;;		_LIGHTBLUE_PerformAction
 25841 ;;		_RN487X_Example_TransparentUart
 25842 ;;		_main
 25843 ;; This function uses a non-reentrant model
 25844 ;;
 25845                           
 25846     1FB0                     _EUSART1_Write:	
 25847                           ;psect for function _EUSART1_Write
 25848                           
 25849     1FB0                     l13629:	
 25850                           ;incstack = 0
 25851                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 25852                           
 25853     1FB0                     l13631:	
 25854                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 25855                           
 25856                           
 25857                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 25858     1FB0  0141               	movlb	1	; select bank1
 25859     1FB1  084C               	movf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 25860     1FB2  1903               	btfsc	3,2
 25861     1FB3  2FB5               	goto	u11661
 25862     1FB4  2FB6               	goto	u11660
 25863     1FB5                     u11661:
 25864     1FB5  2FB0               	goto	l13631
 25865     1FB6                     u11660:
 25866     1FB6                     l1219:
 25867                           
 25868                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 25869     1FB6  014E               	movlb	14	; select bank14
 25870     1FB7  1A19               	btfsc	25,4	;volatile
 25871     1FB8  2FBA               	goto	u11671
 25872     1FB9  2FBB               	goto	u11670
 25873     1FBA                     u11671:
 25874     1FBA  2FBF               	goto	l1220
 25875     1FBB                     u11670:
 25876     1FBB                     l13633:
 25877                           
 25878                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 25879     1FBB  0871               	movf	EUSART1_Write@txData,w
 25880     1FBC  0142               	movlb	2	; select bank2
 25881     1FBD  009A               	movwf	26	;volatile
 25882                           
 25883                           ;mcc_generated_files/eusart1.c: 182:     }
 25884     1FBE  2FD5               	goto	l13645
 25885     1FBF                     l1220:	
 25886                           ;mcc_generated_files/eusart1.c: 183:     else
 25887                           
 25888                           
 25889                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 25890     1FBF  1219               	bcf	25,4	;volatile
 25891     1FC0                     l13635:
 25892                           
 25893                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 25894     1FC0  0141               	movlb	1	; select bank1
 25895     1FC1  084E               	movf	_eusart1TxHead^(0+128),w
 25896     1FC2  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 25897     1FC3  0086               	movwf	6
 25898     1FC4  3001               	movlw	1	; select bank2/3
 25899     1FC5  0087               	movwf	7
 25900     1FC6  0871               	movf	EUSART1_Write@txData,w
 25901     1FC7  0081               	movwf	1
 25902     1FC8                     l13637:
 25903     1FC8  3001               	movlw	1
 25904     1FC9  00F2               	movwf	??_EUSART1_Write
 25905     1FCA  0872               	movf	??_EUSART1_Write,w
 25906     1FCB  07CE               	addwf	_eusart1TxHead^(0+128),f	;volatile
 25907     1FCC                     l13639:
 25908                           
 25909                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 25910     1FCC  3008               	movlw	8
 25911     1FCD  024E               	subwf	_eusart1TxHead^(0+128),w	;volatile
 25912     1FCE  1C03               	skipc
 25913     1FCF  2FD1               	goto	u11681
 25914     1FD0  2FD2               	goto	u11680
 25915     1FD1                     u11681:
 25916     1FD1  2FD3               	goto	l13643
 25917     1FD2                     u11680:
 25918     1FD2                     l13641:
 25919                           
 25920                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 25921     1FD2  01CE               	clrf	_eusart1TxHead^(0+128)	;volatile
 25922     1FD3                     l13643:
 25923                           
 25924                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 25925     1FD3  3001               	movlw	1
 25926     1FD4  02CC               	subwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 25927     1FD5                     l13645:
 25928                           
 25929                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 25930     1FD5  014E               	movlb	14	; select bank14
 25931     1FD6  1619               	bsf	25,4	;volatile
 25932     1FD7                     l1223:
 25933     1FD7  0008               	return
 25934     1FD8                     __end_of_EUSART1_Write:
 25935                           
 25936                           	psect	text103
 25937     1F88                     __ptext103:	
 25938 ;; *************** function _EUSART2_Write *****************
 25939 ;; Defined at:
 25940 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 25941 ;; Parameters:    Size  Location     Type
 25942 ;;  txData          1    1[COMMON] unsigned char 
 25943 ;; Auto vars:     Size  Location     Type
 25944 ;;		None
 25945 ;; Return value:  Size  Location     Type
 25946 ;;                  1    wreg      void 
 25947 ;; Registers used:
 25948 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25949 ;; Tracked objects:
 25950 ;;		On entry : 0/0
 25951 ;;		On exit  : 0/0
 25952 ;;		Unchanged: 0/0
 25953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25958 ;;Total ram usage:        2 bytes
 25959 ;; Hardware stack levels used: 1
 25960 ;; Hardware stack levels required when called: 4
 25961 ;; This function calls:
 25962 ;;		Nothing
 25963 ;; This function is called by:
 25964 ;;		_RN487X_Write
 25965 ;;		_rn487x_PrintMessageStart
 25966 ;;		_rn487x_PrintMessageEnd
 25967 ;;		_rn487x_PrintIndicatorCharacters
 25968 ;;		_rn487x_PrintMessage
 25969 ;;		_LIGHTBLUE_PerformAction
 25970 ;;		_RN487X_Example_TransparentUart
 25971 ;;		_main
 25972 ;; This function uses a non-reentrant model
 25973 ;;
 25974                           
 25975     1F88                     _EUSART2_Write:	
 25976                           ;psect for function _EUSART2_Write
 25977                           
 25978     1F88                     l13611:	
 25979                           ;incstack = 0
 25980                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 25981                           
 25982     1F88                     l13613:	
 25983                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 25984                           
 25985                           
 25986                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 25987     1F88  0141               	movlb	1	; select bank1
 25988     1F89  0852               	movf	_eusart2TxBufferRemaining^(0+128),w	;volatile
 25989     1F8A  1903               	btfsc	3,2
 25990     1F8B  2F8D               	goto	u11631
 25991     1F8C  2F8E               	goto	u11630
 25992     1F8D                     u11631:
 25993     1F8D  2F88               	goto	l13613
 25994     1F8E                     u11630:
 25995     1F8E                     l1075:
 25996                           
 25997                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 25998     1F8E  014E               	movlb	14	; select bank14
 25999     1F8F  1B19               	btfsc	25,6	;volatile
 26000     1F90  2F92               	goto	u11641
 26001     1F91  2F93               	goto	u11640
 26002     1F92                     u11641:
 26003     1F92  2F97               	goto	l1076
 26004     1F93                     u11640:
 26005     1F93                     l13615:
 26006                           
 26007                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 26008     1F93  0871               	movf	EUSART2_Write@txData,w
 26009     1F94  0154               	movlb	20	; select bank20
 26010     1F95  009A               	movwf	26	;volatile
 26011                           
 26012                           ;mcc_generated_files/eusart2.c: 182:     }
 26013     1F96  2FAD               	goto	l13627
 26014     1F97                     l1076:	
 26015                           ;mcc_generated_files/eusart2.c: 183:     else
 26016                           
 26017                           
 26018                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 26019     1F97  1319               	bcf	25,6	;volatile
 26020     1F98                     l13617:
 26021                           
 26022                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 26023     1F98  0141               	movlb	1	; select bank1
 26024     1F99  0854               	movf	_eusart2TxHead^(0+128),w
 26025     1F9A  3E64               	addlw	(low (_eusart2TxBuffer| (0+256)))& (0+255)
 26026     1F9B  0086               	movwf	6
 26027     1F9C  3001               	movlw	1	; select bank2/3
 26028     1F9D  0087               	movwf	7
 26029     1F9E  0871               	movf	EUSART2_Write@txData,w
 26030     1F9F  0081               	movwf	1
 26031     1FA0                     l13619:
 26032     1FA0  3001               	movlw	1
 26033     1FA1  00F2               	movwf	??_EUSART2_Write
 26034     1FA2  0872               	movf	??_EUSART2_Write,w
 26035     1FA3  07D4               	addwf	_eusart2TxHead^(0+128),f	;volatile
 26036     1FA4                     l13621:
 26037                           
 26038                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 26039     1FA4  3008               	movlw	8
 26040     1FA5  0254               	subwf	_eusart2TxHead^(0+128),w	;volatile
 26041     1FA6  1C03               	skipc
 26042     1FA7  2FA9               	goto	u11651
 26043     1FA8  2FAA               	goto	u11650
 26044     1FA9                     u11651:
 26045     1FA9  2FAB               	goto	l13625
 26046     1FAA                     u11650:
 26047     1FAA                     l13623:
 26048                           
 26049                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 26050     1FAA  01D4               	clrf	_eusart2TxHead^(0+128)	;volatile
 26051     1FAB                     l13625:
 26052                           
 26053                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 26054     1FAB  3001               	movlw	1
 26055     1FAC  02D2               	subwf	_eusart2TxBufferRemaining^(0+128),f	;volatile
 26056     1FAD                     l13627:
 26057                           
 26058                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 26059     1FAD  014E               	movlb	14	; select bank14
 26060     1FAE  1719               	bsf	25,6	;volatile
 26061     1FAF                     l1079:
 26062     1FAF  0008               	return
 26063     1FB0                     __end_of_EUSART2_Write:
 26064                           
 26065                           	psect	text104
 26066     170A                     __ptext104:	
 26067 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 26068 ;; Defined at:
 26069 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 26070 ;; Parameters:    Size  Location     Type
 26071 ;;  accelData       1    wreg     PTR struct .
 26072 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 26073 ;; Auto vars:     Size  Location     Type
 26074 ;;  accelData       1   19[BANK0 ] PTR struct .
 26075 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 26076 ;;  sensorValue     2   20[BANK0 ] short 
 26077 ;;  mSB             1   18[BANK0 ] char 
 26078 ;;  lSB             1   17[BANK0 ] char 
 26079 ;; Return value:  Size  Location     Type
 26080 ;;                  1    wreg      void 
 26081 ;; Registers used:
 26082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26083 ;; Tracked objects:
 26084 ;;		On entry : 0/0
 26085 ;;		On exit  : 0/0
 26086 ;;		Unchanged: 0/0
 26087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26089 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26091 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26092 ;;Total ram usage:        6 bytes
 26093 ;; Hardware stack levels used: 1
 26094 ;; Hardware stack levels required when called: 15
 26095 ;; This function calls:
 26096 ;;		_BMA253_GetAccelDataY
 26097 ;;		_BMA253_GetAccelDataZ
 26098 ;;		_BMA253_NewAccelDataRdyY
 26099 ;;		_BMA253_NewAccelDataRdyZ
 26100 ;;		_readRegister
 26101 ;; This function is called by:
 26102 ;;		_LIGHTBLUE_AccelSensor
 26103 ;; This function uses a non-reentrant model
 26104 ;;
 26105                           
 26106     170A                     _BMA253_GetAccelDataXYZ:	
 26107                           ;psect for function _BMA253_GetAccelDataXYZ
 26108                           
 26109                           
 26110                           ;incstack = 0
 26111 ;; hardware stack exceeded
 26112                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26113                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 26114     170A  0140               	movlb	0	; select bank0
 26115     170B  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 26116     170C                     l14495:
 26117                           
 26118                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 26119     170C  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 26120     170D                     l14497:
 26121                           
 26122                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 26123     170D  3013               	movlw	19
 26124     170E  319A  22FC  3197   	fcall	_readRegister
 26125     1711  0140               	movlb	0	; select bank0
 26126     1712  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 26127     1713                     l14499:
 26128                           
 26129                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 26130     1713  3012               	movlw	18
 26131     1714  319A  22FC  3197   	fcall	_readRegister
 26132     1717  0140               	movlb	0	; select bank0
 26133     1718  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 26134     1719                     l14501:
 26135                           
 26136                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 26137     1719  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 26138     171A  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 26139     171B  3008               	movlw	8
 26140     171C                     u13065:
 26141     171C  1003               	clrc
 26142     171D  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 26143     171E  1403               	setc
 26144     171F  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 26145     1720  0B89               	decfsz	9,f
 26146     1721  2F1C               	goto	u13065
 26147     1722  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 26148     1723  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 26149     1724  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 26150     1725  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 26151     1726  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 26152     1727  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 26153     1728                     l14503:
 26154                           
 26155                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 26156     1728  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 26157     1729  0086               	movwf	6
 26158     172A  0187               	clrf	7
 26159     172B  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 26160     172C  3FC0               	movwi [0]fsr1
 26161     172D  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 26162     172E  3FC1               	movwi [1]fsr1
 26163     172F                     l14505:	
 26164                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 26165                           
 26166                           
 26167                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 26168     172F  319C  240B  3197   	fcall	_BMA253_NewAccelDataRdyY
 26169     1732  3A00               	xorlw	0
 26170     1733  1903               	skipnz
 26171     1734  2F36               	goto	u13071
 26172     1735  2F37               	goto	u13070
 26173     1736                     u13071:
 26174     1736  2F2F               	goto	l14505
 26175     1737                     u13070:
 26176     1737                     l14507:
 26177                           
 26178                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 26179     1737  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 26180     1738  3190  20AB  3197   	fcall	_BMA253_GetAccelDataY
 26181     173B                     l14509:
 26182                           
 26183                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 26184     173B  0140               	movlb	0	; select bank0
 26185     173C  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 26186     173D  3E02               	addlw	2
 26187     173E  0086               	movwf	6
 26188     173F  0187               	clrf	7
 26189     1740  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 26190     1741  3FC0               	movwi [0]fsr1
 26191     1742  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 26192     1743  3FC1               	movwi [1]fsr1
 26193     1744                     l14511:	
 26194                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 26195                           
 26196                           
 26197                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 26198     1744  319C  241C  3197   	fcall	_BMA253_NewAccelDataRdyZ
 26199     1747  3A00               	xorlw	0
 26200     1748  1903               	skipnz
 26201     1749  2F4B               	goto	u13081
 26202     174A  2F4C               	goto	u13080
 26203     174B                     u13081:
 26204     174B  2F44               	goto	l14511
 26205     174C                     u13080:
 26206     174C                     l14513:
 26207                           
 26208                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 26209     174C  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 26210     174D  3190  20D9  3197   	fcall	_BMA253_GetAccelDataZ
 26211     1750                     l14515:
 26212                           
 26213                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 26214     1750  0140               	movlb	0	; select bank0
 26215     1751  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 26216     1752  3E04               	addlw	4
 26217     1753  0086               	movwf	6
 26218     1754  0187               	clrf	7
 26219     1755  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 26220     1756  3FC0               	movwi [0]fsr1
 26221     1757  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 26222     1758  3FC1               	movwi [1]fsr1
 26223     1759                     l44:
 26224     1759  0008               	return
 26225     175A                     __end_of_BMA253_GetAccelDataXYZ:
 26226                           
 26227                           	psect	text105
 26228     1AFC                     __ptext105:	
 26229 ;; *************** function _readRegister *****************
 26230 ;; Defined at:
 26231 ;;		line 165 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;  regAddress      1    wreg     unsigned char 
 26234 ;; Auto vars:     Size  Location     Type
 26235 ;;  regAddress      1   10[BANK0 ] unsigned char 
 26236 ;;  regVal          1   11[BANK0 ] unsigned char 
 26237 ;; Return value:  Size  Location     Type
 26238 ;;                  1    wreg      unsigned char 
 26239 ;; Registers used:
 26240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26241 ;; Tracked objects:
 26242 ;;		On entry : 0/0
 26243 ;;		On exit  : 0/0
 26244 ;;		Unchanged: 0/0
 26245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26249 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26250 ;;Total ram usage:        2 bytes
 26251 ;; Hardware stack levels used: 1
 26252 ;; Hardware stack levels required when called: 13
 26253 ;; This function calls:
 26254 ;;		_i2c_read1ByteRegister
 26255 ;; This function is called by:
 26256 ;;		_BMA253_GetAccelDataXYZ
 26257 ;;		_setOperatingMode
 26258 ;;		_setMagneticChannel
 26259 ;;		_setXYAxisRange
 26260 ;;		_setZAxisRange
 26261 ;;		_setTemperatureEn
 26262 ;;		_getLowPower
 26263 ;;		_getOperatingMode
 26264 ;;		_getMagneticChannel
 26265 ;;		_getAngleEn
 26266 ;;		_getTemperatureEN
 26267 ;;		_getDeviceStatus
 26268 ;;		_setCRCMode
 26269 ;;		_setMagTemp
 26270 ;;		_setConvAvg
 26271 ;;		_setReadMode
 26272 ;;		_setIntThreshold
 26273 ;;		_setLowPower
 26274 ;;		_setGlitchFilter
 26275 ;;		_setTriggerMode
 26276 ;;		_setSleeptime
 26277 ;;		_setMagDir
 26278 ;;		_setMagnitudeGain
 26279 ;;		_setAngleEn
 26280 ;;		_setInterruptResult
 26281 ;;		_setThresholdEn
 26282 ;;		_setIntPinState
 26283 ;;		_setInterruptMode
 26284 ;;		_setMaskInterrupt
 26285 ;;		_setI2CAddressEN
 26286 ;;		_setOscillatorError
 26287 ;;		_getCRCMode
 26288 ;;		_getMagTemp
 26289 ;;		_getConvAvg
 26290 ;;		_getReadMode
 26291 ;;		_getIntThreshold
 26292 ;;		_getGlitchFiler
 26293 ;;		_getTriggerMode
 26294 ;;		_getSleeptime
 26295 ;;		_getMagDir
 26296 ;;		_getMagnitudeChannelSelect
 26297 ;;		_getMagneticGain
 26298 ;;		_getMagneticOffset1
 26299 ;;		_getMagneticOffset2
 26300 ;;		_getXYAxisRange
 26301 ;;		_getZAxisRange
 26302 ;;		_getXThreshold
 26303 ;;		_getYThreshold
 26304 ;;		_getZThreshold
 26305 ;;		_getTemperatureThreshold
 26306 ;;		_getInterruptResult
 26307 ;;		_getThresholdEn
 26308 ;;		_getIntPinState
 26309 ;;		_getInterruptMode
 26310 ;;		_getMaskInt
 26311 ;;		_getSetCount
 26312 ;;		_getPOR
 26313 ;;		_getDiagStatus
 26314 ;;		_getResultStatus
 26315 ;;		_getI2CAddress
 26316 ;;		_getDeviceID
 26317 ;;		_getInterruptPinStatus
 26318 ;;		_getXData
 26319 ;;		_getYData
 26320 ;;		_getZData
 26321 ;;		_getAngleResult
 26322 ;;		_getMagnitudeResult
 26323 ;; This function uses a non-reentrant model
 26324 ;;
 26325                           
 26326     1AFC                     _readRegister:	
 26327                           ;psect for function _readRegister
 26328                           
 26329                           
 26330                           ;incstack = 0
 26331                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26332                           ;readRegister@regAddress stored from wreg
 26333     1AFC  0140               	movlb	0	; select bank0
 26334     1AFD  00AA               	movwf	readRegister@regAddress
 26335     1AFE                     l13835:
 26336                           
 26337                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 166:     uint8_t regVa
      +                          l = 0;
 26338     1AFE  01AB               	clrf	readRegister@regVal
 26339     1AFF                     l13837:
 26340                           
 26341                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 168:     i2c_read1Byte
      +                          Register(regAddress, &regVal);
 26342     1AFF  302B               	movlw	(low readRegister@regVal)& (0+255)
 26343     1B00  00A4               	movwf	i2c_read1ByteRegister@reg
 26344     1B01  082A               	movf	readRegister@regAddress,w
 26345     1B02  3195  25D6  319A   	fcall	_i2c_read1ByteRegister
 26346     1B05                     l13839:
 26347                           
 26348                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 170:     return regVal
      +                          ;
 26349     1B05  0140               	movlb	0	; select bank0
 26350     1B06  082B               	movf	readRegister@regVal,w
 26351     1B07                     l2130:
 26352     1B07  0008               	return
 26353     1B08                     __end_of_readRegister:
 26354                           
 26355                           	psect	text106
 26356     10D9                     __ptext106:	
 26357 ;; *************** function _BMA253_GetAccelDataZ *****************
 26358 ;; Defined at:
 26359 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 26360 ;; Parameters:    Size  Location     Type
 26361 ;;  zAccelData      1    wreg     PTR short 
 26362 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 26363 ;; Auto vars:     Size  Location     Type
 26364 ;;  zAccelData      1   13[BANK0 ] PTR short 
 26365 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 26366 ;;  msbData         1   15[BANK0 ] unsigned char 
 26367 ;;  lsbData         1   14[BANK0 ] unsigned char 
 26368 ;; Return value:  Size  Location     Type
 26369 ;;                  1    wreg      void 
 26370 ;; Registers used:
 26371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26372 ;; Tracked objects:
 26373 ;;		On entry : 0/0
 26374 ;;		On exit  : 0/0
 26375 ;;		Unchanged: 0/0
 26376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26378 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26379 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26380 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26381 ;;Total ram usage:        6 bytes
 26382 ;; Hardware stack levels used: 1
 26383 ;; Hardware stack levels required when called: 14
 26384 ;; This function calls:
 26385 ;;		_BMA253_NewAccelDataRdyZ
 26386 ;;		_i2c_read1ByteRegister
 26387 ;; This function is called by:
 26388 ;;		_BMA253_GetAccelDataXYZ
 26389 ;; This function uses a non-reentrant model
 26390 ;;
 26391                           
 26392     10D9                     _BMA253_GetAccelDataZ:	
 26393                           ;psect for function _BMA253_GetAccelDataZ
 26394                           
 26395                           
 26396                           ;incstack = 0
 26397 ;; hardware stack exceeded
 26398                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26399                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 26400     10D9  0140               	movlb	0	; select bank0
 26401     10DA  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 26402     10DB                     l14023:
 26403     10DB                     l14025:	
 26404                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 26405                           
 26406                           
 26407                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 26408     10DB  319C  241C  3190   	fcall	_BMA253_NewAccelDataRdyZ
 26409     10DE  3A00               	xorlw	0
 26410     10DF  1903               	skipnz
 26411     10E0  28E2               	goto	u12101
 26412     10E1  28E3               	goto	u12100
 26413     10E2                     u12101:
 26414     10E2  28DB               	goto	l14025
 26415     10E3                     u12100:
 26416     10E3                     l14027:
 26417                           
 26418                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 26419     10E3  3006               	movlw	6
 26420     10E4  0140               	movlb	0	; select bank0
 26421     10E5  00A4               	movwf	i2c_read1ByteRegister@reg
 26422     10E6  3019               	movlw	25
 26423     10E7  3195  25D6  3190   	fcall	_i2c_read1ByteRegister
 26424     10EA  0140               	movlb	0	; select bank0
 26425     10EB  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 26426                           
 26427                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 26428     10EC  3007               	movlw	7
 26429     10ED  00A4               	movwf	i2c_read1ByteRegister@reg
 26430     10EE  3019               	movlw	25
 26431     10EF  3195  25D6  3190   	fcall	_i2c_read1ByteRegister
 26432     10F2  0140               	movlb	0	; select bank0
 26433     10F3  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 26434     10F4                     l14029:
 26435                           
 26436                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 26437     10F4  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 26438     10F5  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 26439     10F6  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 26440     10F7  00AA               	movwf	??_BMA253_GetAccelDataZ
 26441     10F8  3004               	movlw	4
 26442     10F9  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 26443     10FA                     u12115:
 26444     10FA  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 26445     10FB  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 26446     10FC  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 26447     10FD  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 26448     10FE  28FA               	goto	u12115
 26449     10FF  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 26450     1100  0086               	movwf	6
 26451     1101  0187               	clrf	7
 26452     1102  082A               	movf	??_BMA253_GetAccelDataZ,w
 26453     1103  3FC0               	movwi [0]fsr1
 26454     1104  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 26455     1105  3FC1               	movwi [1]fsr1
 26456     1106                     l35:
 26457     1106  0008               	return
 26458     1107                     __end_of_BMA253_GetAccelDataZ:
 26459                           
 26460                           	psect	text107
 26461     1C1C                     __ptext107:	
 26462 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 26463 ;; Defined at:
 26464 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;		None
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;  zNewData        1   11[COMMON] _Bool 
 26469 ;; Return value:  Size  Location     Type
 26470 ;;                  1    wreg      _Bool 
 26471 ;; Registers used:
 26472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26473 ;; Tracked objects:
 26474 ;;		On entry : 0/0
 26475 ;;		On exit  : 0/0
 26476 ;;		Unchanged: 0/0
 26477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26482 ;;Total ram usage:        1 bytes
 26483 ;; Hardware stack levels used: 1
 26484 ;; Hardware stack levels required when called: 13
 26485 ;; This function calls:
 26486 ;;		_i2c_read1ByteRegister
 26487 ;; This function is called by:
 26488 ;;		_BMA253_GetAccelDataZ
 26489 ;;		_BMA253_GetAccelDataXYZ
 26490 ;; This function uses a non-reentrant model
 26491 ;;
 26492                           
 26493     1C1C                     _BMA253_NewAccelDataRdyZ:	
 26494                           ;psect for function _BMA253_NewAccelDataRdyZ
 26495                           
 26496     1C1C                     l13975:	
 26497                           ;incstack = 0
 26498                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26499                           
 26500                           
 26501                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 26502     1C1C  3006               	movlw	6
 26503     1C1D  0140               	movlb	0	; select bank0
 26504     1C1E  00A4               	movwf	i2c_read1ByteRegister@reg
 26505     1C1F  3019               	movlw	25
 26506     1C20  3195  25D6  319C   	fcall	_i2c_read1ByteRegister
 26507     1C23  3901               	andlw	1
 26508     1C24  1D03               	btfss	3,2
 26509     1C25  2C27               	goto	u12041
 26510     1C26  2C29               	goto	u12040
 26511     1C27                     u12041:
 26512     1C27  3001               	movlw	1
 26513     1C28  2C2A               	goto	u12050
 26514     1C29                     u12040:
 26515     1C29  3000               	movlw	0
 26516     1C2A                     u12050:
 26517     1C2A  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 26518     1C2B                     l13977:
 26519                           
 26520                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 26521     1C2B  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 26522     1C2C                     l56:
 26523     1C2C  0008               	return
 26524     1C2D                     __end_of_BMA253_NewAccelDataRdyZ:
 26525                           
 26526                           	psect	text108
 26527     10AB                     __ptext108:	
 26528 ;; *************** function _BMA253_GetAccelDataY *****************
 26529 ;; Defined at:
 26530 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;  yAccelData      1    wreg     PTR short 
 26533 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 26534 ;; Auto vars:     Size  Location     Type
 26535 ;;  yAccelData      1   13[BANK0 ] PTR short 
 26536 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 26537 ;;  msbData         1   15[BANK0 ] unsigned char 
 26538 ;;  lsbData         1   14[BANK0 ] unsigned char 
 26539 ;; Return value:  Size  Location     Type
 26540 ;;                  1    wreg      void 
 26541 ;; Registers used:
 26542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26543 ;; Tracked objects:
 26544 ;;		On entry : 0/0
 26545 ;;		On exit  : 0/0
 26546 ;;		Unchanged: 0/0
 26547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26550 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26552 ;;Total ram usage:        6 bytes
 26553 ;; Hardware stack levels used: 1
 26554 ;; Hardware stack levels required when called: 14
 26555 ;; This function calls:
 26556 ;;		_BMA253_NewAccelDataRdyY
 26557 ;;		_i2c_read1ByteRegister
 26558 ;; This function is called by:
 26559 ;;		_BMA253_GetAccelDataXYZ
 26560 ;; This function uses a non-reentrant model
 26561 ;;
 26562                           
 26563     10AB                     _BMA253_GetAccelDataY:	
 26564                           ;psect for function _BMA253_GetAccelDataY
 26565                           
 26566                           
 26567                           ;incstack = 0
 26568 ;; hardware stack exceeded
 26569                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26570                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 26571     10AB  0140               	movlb	0	; select bank0
 26572     10AC  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 26573     10AD                     l14015:
 26574     10AD                     l14017:	
 26575                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 26576                           
 26577                           
 26578                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 26579     10AD  319C  240B  3190   	fcall	_BMA253_NewAccelDataRdyY
 26580     10B0  3A00               	xorlw	0
 26581     10B1  1903               	skipnz
 26582     10B2  28B4               	goto	u12081
 26583     10B3  28B5               	goto	u12080
 26584     10B4                     u12081:
 26585     10B4  28AD               	goto	l14017
 26586     10B5                     u12080:
 26587     10B5                     l14019:
 26588                           
 26589                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 26590     10B5  3004               	movlw	4
 26591     10B6  0140               	movlb	0	; select bank0
 26592     10B7  00A4               	movwf	i2c_read1ByteRegister@reg
 26593     10B8  3019               	movlw	25
 26594     10B9  3195  25D6  3190   	fcall	_i2c_read1ByteRegister
 26595     10BC  0140               	movlb	0	; select bank0
 26596     10BD  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 26597                           
 26598                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 26599     10BE  3005               	movlw	5
 26600     10BF  00A4               	movwf	i2c_read1ByteRegister@reg
 26601     10C0  3019               	movlw	25
 26602     10C1  3195  25D6  3190   	fcall	_i2c_read1ByteRegister
 26603     10C4  0140               	movlb	0	; select bank0
 26604     10C5  00AF               	movwf	BMA253_GetAccelDataY@msbData
 26605     10C6                     l14021:
 26606                           
 26607                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 26608     10C6  082F               	movf	BMA253_GetAccelDataY@msbData,w
 26609     10C7  00AB               	movwf	??_BMA253_GetAccelDataY+1
 26610     10C8  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 26611     10C9  00AA               	movwf	??_BMA253_GetAccelDataY
 26612     10CA  3004               	movlw	4
 26613     10CB  00AC               	movwf	??_BMA253_GetAccelDataY+2
 26614     10CC                     u12095:
 26615     10CC  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 26616     10CD  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 26617     10CE  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 26618     10CF  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 26619     10D0  28CC               	goto	u12095
 26620     10D1  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 26621     10D2  0086               	movwf	6
 26622     10D3  0187               	clrf	7
 26623     10D4  082A               	movf	??_BMA253_GetAccelDataY,w
 26624     10D5  3FC0               	movwi [0]fsr1
 26625     10D6  082B               	movf	??_BMA253_GetAccelDataY+1,w
 26626     10D7  3FC1               	movwi [1]fsr1
 26627     10D8                     l29:
 26628     10D8  0008               	return
 26629     10D9                     __end_of_BMA253_GetAccelDataY:
 26630                           
 26631                           	psect	text109
 26632     1C0B                     __ptext109:	
 26633 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 26634 ;; Defined at:
 26635 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 26636 ;; Parameters:    Size  Location     Type
 26637 ;;		None
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;  yNewData        1   11[COMMON] _Bool 
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1    wreg      _Bool 
 26642 ;; Registers used:
 26643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26653 ;;Total ram usage:        1 bytes
 26654 ;; Hardware stack levels used: 1
 26655 ;; Hardware stack levels required when called: 13
 26656 ;; This function calls:
 26657 ;;		_i2c_read1ByteRegister
 26658 ;; This function is called by:
 26659 ;;		_BMA253_GetAccelDataY
 26660 ;;		_BMA253_GetAccelDataXYZ
 26661 ;; This function uses a non-reentrant model
 26662 ;;
 26663                           
 26664     1C0B                     _BMA253_NewAccelDataRdyY:	
 26665                           ;psect for function _BMA253_NewAccelDataRdyY
 26666                           
 26667     1C0B                     l13969:	
 26668                           ;incstack = 0
 26669                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26670                           
 26671                           
 26672                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 26673     1C0B  3004               	movlw	4
 26674     1C0C  0140               	movlb	0	; select bank0
 26675     1C0D  00A4               	movwf	i2c_read1ByteRegister@reg
 26676     1C0E  3019               	movlw	25
 26677     1C0F  3195  25D6  319C   	fcall	_i2c_read1ByteRegister
 26678     1C12  3901               	andlw	1
 26679     1C13  1D03               	btfss	3,2
 26680     1C14  2C16               	goto	u12021
 26681     1C15  2C18               	goto	u12020
 26682     1C16                     u12021:
 26683     1C16  3001               	movlw	1
 26684     1C17  2C19               	goto	u12030
 26685     1C18                     u12020:
 26686     1C18  3000               	movlw	0
 26687     1C19                     u12030:
 26688     1C19  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 26689     1C1A                     l13971:
 26690                           
 26691                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 26692     1C1A  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 26693     1C1B                     l53:
 26694     1C1B  0008               	return
 26695     1C1C                     __end_of_BMA253_NewAccelDataRdyY:
 26696                           
 26697                           	psect	text110
 26698     15D6                     __ptext110:	
 26699 ;; *************** function _i2c_read1ByteRegister *****************
 26700 ;; Defined at:
 26701 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 26702 ;; Parameters:    Size  Location     Type
 26703 ;;  address         1    wreg     unsigned char 
 26704 ;;  reg             1    4[BANK0 ] unsigned char 
 26705 ;; Auto vars:     Size  Location     Type
 26706 ;;  address         1    5[BANK0 ] unsigned char 
 26707 ;;  x               2    7[BANK0 ] int 
 26708 ;;  d2              1    9[BANK0 ] unsigned char 
 26709 ;;  e               1    6[BANK0 ] enum E358
 26710 ;; Return value:  Size  Location     Type
 26711 ;;                  1    wreg      unsigned char 
 26712 ;; Registers used:
 26713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26714 ;; Tracked objects:
 26715 ;;		On entry : 0/0
 26716 ;;		On exit  : 0/0
 26717 ;;		Unchanged: 0/0
 26718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26719 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26720 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26723 ;;Total ram usage:        6 bytes
 26724 ;; Hardware stack levels used: 1
 26725 ;; Hardware stack levels required when called: 12
 26726 ;; This function calls:
 26727 ;;		_I2C1_Close
 26728 ;;		_I2C1_MasterWrite
 26729 ;;		_I2C1_Open
 26730 ;;		_I2C1_SetAddressNackCallback
 26731 ;;		_I2C1_SetBuffer
 26732 ;;		_I2C1_SetDataCompleteCallback
 26733 ;; This function is called by:
 26734 ;;		_BMA253_GetAccelDataY
 26735 ;;		_BMA253_GetAccelDataZ
 26736 ;;		_BMA253_NewAccelDataRdyY
 26737 ;;		_BMA253_NewAccelDataRdyZ
 26738 ;;		_readRegister
 26739 ;;		_BMA253_GetAccelDataX
 26740 ;;		_BMA253_GetAccelChipId
 26741 ;;		_BMA253_NewAccelDataRdyX
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745     15D6                     _i2c_read1ByteRegister:	
 26746                           ;psect for function _i2c_read1ByteRegister
 26747                           
 26748                           
 26749                           ;incstack = 0
 26750                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26751                           ;i2c_read1ByteRegister@address stored from wreg
 26752     15D6  0140               	movlb	0	; select bank0
 26753     15D7  00A5               	movwf	i2c_read1ByteRegister@address
 26754     15D8                     l13741:
 26755                           
 26756                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 26757     15D8  302A               	movlw	42
 26758     15D9  00A9               	movwf	i2c_read1ByteRegister@d2
 26759                           
 26760                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 26761     15DA  3002               	movlw	2
 26762     15DB  00A7               	movwf	i2c_read1ByteRegister@x
 26763     15DC  3000               	movlw	0
 26764     15DD  00A8               	movwf	i2c_read1ByteRegister@x+1
 26765     15DE                     l13747:
 26766     15DE  0140               	movlb	0	; select bank0
 26767     15DF  0825               	movf	i2c_read1ByteRegister@address,w
 26768     15E0  3191  21C7  3195   	fcall	_I2C1_Open
 26769     15E3  3A00               	xorlw	0
 26770     15E4  1903               	skipnz
 26771     15E5  2DE7               	goto	u11741
 26772     15E6  2DE8               	goto	u11740
 26773     15E7                     u11741:
 26774     15E7  2DDE               	goto	l13747
 26775     15E8                     u11740:
 26776     15E8                     l13749:
 26777                           
 26778                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 26779     15E8  30A5               	movlw	low _rd1RegCompleteHandler
 26780     15E9  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 26781     15EA  301B               	movlw	high _rd1RegCompleteHandler
 26782     15EB  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 26783     15EC  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 26784     15ED  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 26785     15EE  319A  22C5  3195   	fcall	_I2C1_SetDataCompleteCallback
 26786     15F1                     l13751:
 26787                           
 26788                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 26789     15F1  3001               	movlw	1
 26790     15F2  00F1               	movwf	I2C1_SetBuffer@bufferSize
 26791     15F3  3000               	movlw	0
 26792     15F4  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 26793     15F5  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 26794     15F6  319B  2346  3195   	fcall	_I2C1_SetBuffer
 26795     15F9                     l13753:
 26796                           
 26797                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 26798     15F9  3000               	movlw	0
 26799     15FA  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 26800     15FB  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 26801     15FC  3000               	movlw	0
 26802     15FD  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 26803     15FE  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 26804     15FF  319A  22D0  3195   	fcall	_I2C1_SetAddressNackCallback
 26805     1602                     l13755:
 26806                           
 26807                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 26808     1602  3199  21C8  3195   	fcall	_I2C1_MasterWrite
 26809     1605                     l13757:	
 26810                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 26811                           
 26812     1605  319D  2510  3195   	fcall	_I2C1_Close
 26813     1608  0140               	movlb	0	; select bank0
 26814     1609  00A6               	movwf	i2c_read1ByteRegister@e
 26815     160A  0326               	decf	i2c_read1ByteRegister@e,w
 26816     160B  1903               	btfsc	3,2
 26817     160C  2E0E               	goto	u11751
 26818     160D  2E0F               	goto	u11750
 26819     160E                     u11751:
 26820     160E  2E05               	goto	l13757
 26821     160F                     u11750:
 26822     160F                     l13759:
 26823                           
 26824                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 26825     160F  0826               	movf	i2c_read1ByteRegister@e,w
 26826     1610  1D03               	btfss	3,2
 26827     1611  2E13               	goto	u11761
 26828     1612  2E14               	goto	u11760
 26829     1613                     u11761:
 26830     1613  2E15               	goto	l13763
 26831     1614                     u11760:
 26832     1614  2E1F               	goto	l13767
 26833     1615                     l13763:
 26834                           
 26835                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 26836     1615  30FF               	movlw	255
 26837     1616  07A7               	addwf	i2c_read1ByteRegister@x,f
 26838     1617  30FF               	movlw	255
 26839     1618  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 26840     1619                     l13765:
 26841     1619  0827               	movf	i2c_read1ByteRegister@x,w
 26842     161A  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 26843     161B  1D03               	btfss	3,2
 26844     161C  2E1E               	goto	u11771
 26845     161D  2E1F               	goto	u11770
 26846     161E                     u11771:
 26847     161E  2DDE               	goto	l13747
 26848     161F                     u11770:
 26849     161F                     l13767:
 26850                           
 26851                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 26852     161F  0829               	movf	i2c_read1ByteRegister@d2,w
 26853     1620                     l534:
 26854     1620  0008               	return
 26855     1621                     __end_of_i2c_read1ByteRegister:
 26856                           
 26857                           	psect	text111
 26858     1AD0                     __ptext111:	
 26859 ;; *************** function _I2C1_SetAddressNackCallback *****************
 26860 ;; Defined at:
 26861 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 26864 ;;		 -> NULL(1), 
 26865 ;;  ptr             2    7[COMMON] PTR void 
 26866 ;;		 -> NULL(0), 
 26867 ;; Auto vars:     Size  Location     Type
 26868 ;;		None
 26869 ;; Return value:  Size  Location     Type
 26870 ;;                  1    wreg      void 
 26871 ;; Registers used:
 26872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26873 ;; Tracked objects:
 26874 ;;		On entry : 0/0
 26875 ;;		On exit  : 0/0
 26876 ;;		Unchanged: 0/0
 26877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26882 ;;Total ram usage:        4 bytes
 26883 ;; Hardware stack levels used: 1
 26884 ;; Hardware stack levels required when called: 5
 26885 ;; This function calls:
 26886 ;;		_I2C1_SetCallback
 26887 ;; This function is called by:
 26888 ;;		_i2c_write1ByteRegister
 26889 ;;		_i2c_read1ByteRegister
 26890 ;;		_i2c_writeNBytes
 26891 ;;		_i2c_read2ByteRegister
 26892 ;;		_i2c_write2ByteRegister
 26893 ;;		_i2c_readDataBlock
 26894 ;;		_I2C1_Read1ByteRegister
 26895 ;;		_I2C1_Read2ByteRegister
 26896 ;;		_I2C1_Write1ByteRegister
 26897 ;;		_I2C1_Write2ByteRegister
 26898 ;;		_I2C1_WriteNBytes
 26899 ;;		_I2C1_ReadDataBlock
 26900 ;; This function uses a non-reentrant model
 26901 ;;
 26902                           
 26903     1AD0                     _I2C1_SetAddressNackCallback:	
 26904                           ;psect for function _I2C1_SetAddressNackCallback
 26905                           
 26906     1AD0                     l13715:	
 26907                           ;incstack = 0
 26908                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 26909                           
 26910                           
 26911                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 26912     1AD0  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 26913     1AD1  00F2               	movwf	I2C1_SetCallback@cb+1
 26914     1AD2  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 26915     1AD3  00F1               	movwf	I2C1_SetCallback@cb
 26916     1AD4  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 26917     1AD5  00F3               	movwf	I2C1_SetCallback@ptr
 26918     1AD6  3002               	movlw	2
 26919     1AD7  319E  26F2  319A   	fcall	_I2C1_SetCallback
 26920     1ADA                     l1778:
 26921     1ADA  0008               	return
 26922     1ADB                     __end_of_I2C1_SetAddressNackCallback:
 26923                           
 26924                           	psect	text112
 26925     11C7                     __ptext112:	
 26926 ;; *************** function _I2C1_Open *****************
 26927 ;; Defined at:
 26928 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 26929 ;; Parameters:    Size  Location     Type
 26930 ;;  address         1    wreg     unsigned char 
 26931 ;; Auto vars:     Size  Location     Type
 26932 ;;  address         1    1[COMMON] unsigned char 
 26933 ;;  returnValue     1    2[COMMON] enum E358
 26934 ;; Return value:  Size  Location     Type
 26935 ;;                  1    wreg      enum E358
 26936 ;; Registers used:
 26937 ;;		wreg, status,2, status,0, pclath, cstack
 26938 ;; Tracked objects:
 26939 ;;		On entry : 0/0
 26940 ;;		On exit  : 0/0
 26941 ;;		Unchanged: 0/0
 26942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26947 ;;Total ram usage:        2 bytes
 26948 ;; Hardware stack levels used: 1
 26949 ;; Hardware stack levels required when called: 5
 26950 ;; This function calls:
 26951 ;;		_I2C1_MasterClearIrq
 26952 ;;		_I2C1_MasterOpen
 26953 ;; This function is called by:
 26954 ;;		_i2c_write1ByteRegister
 26955 ;;		_i2c_read1ByteRegister
 26956 ;;		_i2c_readNBytes
 26957 ;;		_i2c_writeNBytes
 26958 ;;		_i2c_read2ByteRegister
 26959 ;;		_i2c_write2ByteRegister
 26960 ;;		_i2c_readDataBlock
 26961 ;;		_I2C1_Read1ByteRegister
 26962 ;;		_I2C1_Read2ByteRegister
 26963 ;;		_I2C1_Write1ByteRegister
 26964 ;;		_I2C1_Write2ByteRegister
 26965 ;;		_I2C1_WriteNBytes
 26966 ;;		_I2C1_ReadNBytes
 26967 ;;		_I2C1_ReadDataBlock
 26968 ;; This function uses a non-reentrant model
 26969 ;;
 26970                           
 26971     11C7                     _I2C1_Open:	
 26972                           ;psect for function _I2C1_Open
 26973                           
 26974                           
 26975                           ;incstack = 0
 26976                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 26977                           ;I2C1_Open@address stored from wreg
 26978     11C7  00F1               	movwf	I2C1_Open@address
 26979     11C8                     l13683:
 26980                           
 26981                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 26982     11C8  01F2               	clrf	I2C1_Open@returnValue
 26983     11C9  0AF2               	incf	I2C1_Open@returnValue,f
 26984                           
 26985                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 26986     11CA  0141               	movlb	1	; select bank1
 26987     11CB  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 26988     11CC  29CE               	goto	u11721
 26989     11CD  29CF               	goto	u11720
 26990     11CE                     u11721:
 26991     11CE  29FB               	goto	l1745
 26992     11CF                     u11720:
 26993     11CF                     l13685:
 26994                           
 26995                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 26996     11CF  0871               	movf	I2C1_Open@address,w
 26997     11D0  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 26998     11D1                     l13687:
 26999                           
 27000                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 27001     11D1  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 27002     11D2                     l13689:
 27003                           
 27004                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 27005     11D2  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 27006     11D3                     l13691:
 27007                           
 27008                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 27009     11D3  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 27010                           
 27011                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 27012     11D4  300E               	movlw	14
 27013     11D5  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 27014                           
 27015                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 27016     11D6  30F4               	movlw	244
 27017     11D7  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 27018     11D8  3001               	movlw	1
 27019     11D9  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 27020     11DA                     l13693:
 27021                           
 27022                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 27023     11DA  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 27024                           
 27025                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 27026     11DB  3054               	movlw	low _I2C1_CallbackReturnStop
 27027     11DC  00A0               	movwf	_I2C1_Status^(0+128)
 27028     11DD  3019               	movlw	high _I2C1_CallbackReturnStop
 27029     11DE  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 27030     11DF                     l13695:
 27031                           
 27032                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 27033     11DF  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 27034     11E0                     l13697:
 27035                           
 27036                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 27037     11E0  3054               	movlw	low _I2C1_CallbackReturnStop
 27038     11E1  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 27039     11E2  3019               	movlw	high _I2C1_CallbackReturnStop
 27040     11E3  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 27041                           
 27042                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 27043     11E4  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 27044     11E5                     l13699:
 27045                           
 27046                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 27047     11E5  3054               	movlw	low _I2C1_CallbackReturnStop
 27048     11E6  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 27049     11E7  3019               	movlw	high _I2C1_CallbackReturnStop
 27050     11E8  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 27051     11E9                     l13701:
 27052                           
 27053                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 27054     11E9  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 27055                           
 27056                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 27057     11EA  3054               	movlw	low _I2C1_CallbackReturnStop
 27058     11EB  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 27059     11EC  3019               	movlw	high _I2C1_CallbackReturnStop
 27060     11ED  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 27061     11EE                     l13703:
 27062                           
 27063                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 27064     11EE  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 27065     11EF                     l13705:
 27066                           
 27067                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 27068     11EF  3056               	movlw	low _I2C1_CallbackReturnReset
 27069     11F0  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 27070     11F1  3019               	movlw	high _I2C1_CallbackReturnReset
 27071     11F2  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 27072                           
 27073                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 27074     11F3  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 27075     11F4                     l13707:
 27076                           
 27077                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 27078     11F4  3199  2158  3191   	fcall	_I2C1_MasterClearIrq
 27079     11F7                     l13709:
 27080                           
 27081                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 27082     11F7  319B  2339  3191   	fcall	_I2C1_MasterOpen
 27083     11FA                     l13711:
 27084                           
 27085                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 27086     11FA  01F2               	clrf	I2C1_Open@returnValue
 27087     11FB                     l1745:	
 27088                           ;mcc_generated_files/i2c1_master.c: 205:     }
 27089                           
 27090                           
 27091                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 27092     11FB  0872               	movf	I2C1_Open@returnValue,w
 27093     11FC                     l1746:
 27094     11FC  0008               	return
 27095     11FD                     __end_of_I2C1_Open:
 27096                           
 27097                           	psect	text113
 27098     1B39                     __ptext113:	
 27099 ;; *************** function _I2C1_MasterOpen *****************
 27100 ;; Defined at:
 27101 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 27102 ;; Parameters:    Size  Location     Type
 27103 ;;		None
 27104 ;; Auto vars:     Size  Location     Type
 27105 ;;		None
 27106 ;; Return value:  Size  Location     Type
 27107 ;;                  1    wreg      _Bool 
 27108 ;; Registers used:
 27109 ;;		wreg, status,2
 27110 ;; Tracked objects:
 27111 ;;		On entry : 0/0
 27112 ;;		On exit  : 0/0
 27113 ;;		Unchanged: 0/0
 27114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27119 ;;Total ram usage:        0 bytes
 27120 ;; Hardware stack levels used: 1
 27121 ;; Hardware stack levels required when called: 4
 27122 ;; This function calls:
 27123 ;;		Nothing
 27124 ;; This function is called by:
 27125 ;;		_I2C1_Open
 27126 ;; This function uses a non-reentrant model
 27127 ;;
 27128                           
 27129     1B39                     _I2C1_MasterOpen:	
 27130                           ;psect for function _I2C1_MasterOpen
 27131                           
 27132     1B39                     l13647:	
 27133                           ;incstack = 0
 27134                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 27135                           
 27136                           
 27137                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 27138     1B39  0143               	movlb	3	; select bank3
 27139     1B3A  1A90               	btfsc	16,5	;volatile
 27140     1B3B  2B3D               	goto	u11691
 27141     1B3C  2B3E               	goto	u11690
 27142     1B3D                     u11691:
 27143     1B3D  2B45               	goto	l1911
 27144     1B3E                     u11690:
 27145     1B3E                     l13649:
 27146                           
 27147                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 27148     1B3E  018F               	clrf	15	;volatile
 27149     1B3F                     l13651:
 27150                           
 27151                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 27152     1B3F  3008               	movlw	8
 27153     1B40  0090               	movwf	16	;volatile
 27154     1B41                     l13653:
 27155                           
 27156                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 27157     1B41  0191               	clrf	17	;volatile
 27158                           
 27159                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 27160     1B42  304F               	movlw	79
 27161     1B43  008D               	movwf	13	;volatile
 27162     1B44                     l13655:
 27163                           
 27164                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 27165     1B44  1690               	bsf	16,5	;volatile
 27166     1B45                     l1911:
 27167     1B45  0008               	return
 27168     1B46                     __end_of_I2C1_MasterOpen:
 27169                           
 27170                           	psect	text114
 27171     19C8                     __ptext114:	
 27172 ;; *************** function _I2C1_MasterWrite *****************
 27173 ;; Defined at:
 27174 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 27175 ;; Parameters:    Size  Location     Type
 27176 ;;		None
 27177 ;; Auto vars:     Size  Location     Type
 27178 ;;		None
 27179 ;; Return value:  Size  Location     Type
 27180 ;;                  1    wreg      enum E358
 27181 ;; Registers used:
 27182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27183 ;; Tracked objects:
 27184 ;;		On entry : 0/0
 27185 ;;		On exit  : 0/0
 27186 ;;		Unchanged: 0/0
 27187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27192 ;;Total ram usage:        0 bytes
 27193 ;; Hardware stack levels used: 1
 27194 ;; Hardware stack levels required when called: 11
 27195 ;; This function calls:
 27196 ;;		_I2C1_MasterOperation
 27197 ;; This function is called by:
 27198 ;;		_i2c_write1ByteRegister
 27199 ;;		_i2c_read1ByteRegister
 27200 ;;		_i2c_writeNBytes
 27201 ;;		_i2c_read2ByteRegister
 27202 ;;		_i2c_write2ByteRegister
 27203 ;;		_i2c_readDataBlock
 27204 ;;		_I2C1_Read1ByteRegister
 27205 ;;		_I2C1_Read2ByteRegister
 27206 ;;		_I2C1_Write1ByteRegister
 27207 ;;		_I2C1_Write2ByteRegister
 27208 ;;		_I2C1_WriteNBytes
 27209 ;;		_I2C1_ReadDataBlock
 27210 ;; This function uses a non-reentrant model
 27211 ;;
 27212                           
 27213     19C8                     _I2C1_MasterWrite:	
 27214                           ;psect for function _I2C1_MasterWrite
 27215                           
 27216     19C8                     l13717:	
 27217                           ;incstack = 0
 27218                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27219                           
 27220                           
 27221                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 27222     19C8  3000               	movlw	0
 27223     19C9  319E  2668  3199   	fcall	_I2C1_MasterOperation
 27224     19CC                     l1762:
 27225     19CC  0008               	return
 27226     19CD                     __end_of_I2C1_MasterWrite:
 27227                           
 27228                           	psect	text115
 27229     1E68                     __ptext115:	
 27230 ;; *************** function _I2C1_MasterOperation *****************
 27231 ;; Defined at:
 27232 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 27233 ;; Parameters:    Size  Location     Type
 27234 ;;  read            1    wreg     _Bool 
 27235 ;; Auto vars:     Size  Location     Type
 27236 ;;  read            1    2[BANK0 ] _Bool 
 27237 ;;  returnValue     1    3[BANK0 ] enum E358
 27238 ;; Return value:  Size  Location     Type
 27239 ;;                  1    wreg      enum E358
 27240 ;; Registers used:
 27241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27242 ;; Tracked objects:
 27243 ;;		On entry : 0/0
 27244 ;;		On exit  : 0/0
 27245 ;;		Unchanged: 0/0
 27246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27251 ;;Total ram usage:        2 bytes
 27252 ;; Hardware stack levels used: 1
 27253 ;; Hardware stack levels required when called: 10
 27254 ;; This function calls:
 27255 ;;		_I2C1_MasterStart
 27256 ;;		_I2C1_Poller
 27257 ;; This function is called by:
 27258 ;;		_I2C1_MasterRead
 27259 ;;		_I2C1_MasterWrite
 27260 ;; This function uses a non-reentrant model
 27261 ;;
 27262                           
 27263     1E68                     _I2C1_MasterOperation:	
 27264                           ;psect for function _I2C1_MasterOperation
 27265                           
 27266                           
 27267                           ;incstack = 0
 27268                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27269                           ;I2C1_MasterOperation@read stored from wreg
 27270     1E68  0140               	movlb	0	; select bank0
 27271     1E69  00A2               	movwf	I2C1_MasterOperation@read
 27272     1E6A                     l13663:
 27273                           
 27274                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 27275     1E6A  01A3               	clrf	I2C1_MasterOperation@returnValue
 27276     1E6B  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 27277                           
 27278                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 27279     1E6C  0141               	movlb	1	; select bank1
 27280     1E6D  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 27281     1E6E  2E70               	goto	u11701
 27282     1E6F  2E71               	goto	u11700
 27283     1E70                     u11701:
 27284     1E70  2E86               	goto	l13679
 27285     1E71                     u11700:
 27286     1E71                     l13665:
 27287                           
 27288                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 27289     1E71  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 27290     1E72                     l13667:
 27291                           
 27292                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 27293     1E72  0140               	movlb	0	; select bank0
 27294     1E73  01A3               	clrf	I2C1_MasterOperation@returnValue
 27295     1E74                     l13669:
 27296                           
 27297                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 27298     1E74  0822               	movf	I2C1_MasterOperation@read,w
 27299     1E75  1903               	btfsc	3,2
 27300     1E76  2E78               	goto	u11711
 27301     1E77  2E79               	goto	u11710
 27302     1E78                     u11711:
 27303     1E78  2E7D               	goto	l13673
 27304     1E79                     u11710:
 27305     1E79                     l13671:
 27306                           
 27307                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 27308     1E79  0141               	movlb	1	; select bank1
 27309     1E7A  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 27310     1E7B  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 27311                           
 27312                           ;mcc_generated_files/i2c1_master.c: 235:         }
 27313     1E7C  2E80               	goto	l13675
 27314     1E7D                     l13673:
 27315                           
 27316                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 27317     1E7D  3002               	movlw	2
 27318     1E7E  0141               	movlb	1	; select bank1
 27319     1E7F  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 27320     1E80                     l13675:
 27321                           
 27322                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 27323     1E80  3199  2161  319E   	fcall	_I2C1_MasterStart
 27324     1E83                     l13677:
 27325                           
 27326                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 27327     1E83  319B  232C  319E   	fcall	_I2C1_Poller
 27328     1E86                     l13679:
 27329                           
 27330                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 27331     1E86  0140               	movlb	0	; select bank0
 27332     1E87  0823               	movf	I2C1_MasterOperation@returnValue,w
 27333     1E88                     l1756:
 27334     1E88  0008               	return
 27335     1E89                     __end_of_I2C1_MasterOperation:
 27336                           
 27337                           	psect	text116
 27338     1B2C                     __ptext116:	
 27339 ;; *************** function _I2C1_Poller *****************
 27340 ;; Defined at:
 27341 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 27342 ;; Parameters:    Size  Location     Type
 27343 ;;		None
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;		None
 27346 ;; Return value:  Size  Location     Type
 27347 ;;                  1    wreg      void 
 27348 ;; Registers used:
 27349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27350 ;; Tracked objects:
 27351 ;;		On entry : 0/0
 27352 ;;		On exit  : 0/0
 27353 ;;		Unchanged: 0/0
 27354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27359 ;;Total ram usage:        0 bytes
 27360 ;; Hardware stack levels used: 1
 27361 ;; Hardware stack levels required when called: 9
 27362 ;; This function calls:
 27363 ;;		_I2C1_MasterFsm
 27364 ;;		_I2C1_MasterWaitForEvent
 27365 ;; This function is called by:
 27366 ;;		_I2C1_MasterOperation
 27367 ;; This function uses a non-reentrant model
 27368 ;;
 27369                           
 27370     1B2C                     _I2C1_Poller:	
 27371                           ;psect for function _I2C1_Poller
 27372                           
 27373     1B2C                     l13603:	
 27374                           ;incstack = 0
 27375                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27376                           
 27377                           
 27378                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 27379     1B2C  2B33               	goto	l13609
 27380     1B2D                     l13605:
 27381                           
 27382                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 27383     1B2D  3199  21E2  319B   	fcall	_I2C1_MasterWaitForEvent
 27384     1B30                     l13607:
 27385                           
 27386                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 27387     1B30  3190  2028  319B   	fcall	_I2C1_MasterFsm
 27388     1B33                     l13609:
 27389                           
 27390                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 27391     1B33  0141               	movlb	1	; select bank1
 27392     1B34  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 27393     1B35  2B37               	goto	u11621
 27394     1B36  2B38               	goto	u11620
 27395     1B37                     u11621:
 27396     1B37  2B2D               	goto	l13605
 27397     1B38                     u11620:
 27398     1B38                     l1795:
 27399     1B38  0008               	return
 27400     1B39                     __end_of_I2C1_Poller:
 27401                           
 27402                           	psect	text117
 27403     19E2                     __ptext117:	
 27404 ;; *************** function _I2C1_MasterWaitForEvent *****************
 27405 ;; Defined at:
 27406 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 27407 ;; Parameters:    Size  Location     Type
 27408 ;;		None
 27409 ;; Auto vars:     Size  Location     Type
 27410 ;;		None
 27411 ;; Return value:  Size  Location     Type
 27412 ;;                  1    wreg      void 
 27413 ;; Registers used:
 27414 ;;		None
 27415 ;; Tracked objects:
 27416 ;;		On entry : 0/0
 27417 ;;		On exit  : 0/0
 27418 ;;		Unchanged: 0/0
 27419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27424 ;;Total ram usage:        0 bytes
 27425 ;; Hardware stack levels used: 1
 27426 ;; Hardware stack levels required when called: 4
 27427 ;; This function calls:
 27428 ;;		Nothing
 27429 ;; This function is called by:
 27430 ;;		_I2C1_Poller
 27431 ;; This function uses a non-reentrant model
 27432 ;;
 27433                           
 27434     19E2                     _I2C1_MasterWaitForEvent:	
 27435                           ;psect for function _I2C1_MasterWaitForEvent
 27436                           
 27437     19E2                     l1968:	
 27438                           ;incstack = 0
 27439                           ; Regs used in _I2C1_MasterWaitForEvent: []
 27440                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 27441                           
 27442                           
 27443                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 27444     19E2  014E               	movlb	14	; select bank14
 27445     19E3  1C0F               	btfss	15,0	;volatile
 27446     19E4  29E6               	goto	u11591
 27447     19E5  29E7               	goto	u11590
 27448     19E6                     u11591:
 27449     19E6  29E2               	goto	l1968
 27450     19E7                     u11590:
 27451     19E7                     l1972:
 27452     19E7  0008               	return
 27453     19E8                     __end_of_I2C1_MasterWaitForEvent:
 27454                           
 27455                           	psect	text118
 27456     1028                     __ptext118:	
 27457 ;; *************** function _I2C1_MasterFsm *****************
 27458 ;; Defined at:
 27459 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 27460 ;; Parameters:    Size  Location     Type
 27461 ;;		None
 27462 ;; Auto vars:     Size  Location     Type
 27463 ;;		None
 27464 ;; Return value:  Size  Location     Type
 27465 ;;                  1    wreg      void 
 27466 ;; Registers used:
 27467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27468 ;; Tracked objects:
 27469 ;;		On entry : 0/0
 27470 ;;		On exit  : 0/0
 27471 ;;		Unchanged: 0/0
 27472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27477 ;;Total ram usage:        2 bytes
 27478 ;; Hardware stack levels used: 1
 27479 ;; Hardware stack levels required when called: 8
 27480 ;; This function calls:
 27481 ;;		_I2C1_DO_ADDRESS_NACK
 27482 ;;		_I2C1_DO_IDLE
 27483 ;;		_I2C1_DO_RCEN
 27484 ;;		_I2C1_DO_RESET
 27485 ;;		_I2C1_DO_RX
 27486 ;;		_I2C1_DO_RX_ACK
 27487 ;;		_I2C1_DO_RX_NACK_RESTART
 27488 ;;		_I2C1_DO_RX_NACK_STOP
 27489 ;;		_I2C1_DO_SEND_ADR_READ
 27490 ;;		_I2C1_DO_SEND_ADR_WRITE
 27491 ;;		_I2C1_DO_SEND_RESTART
 27492 ;;		_I2C1_DO_SEND_RESTART_READ
 27493 ;;		_I2C1_DO_SEND_RESTART_WRITE
 27494 ;;		_I2C1_DO_SEND_STOP
 27495 ;;		_I2C1_DO_TX
 27496 ;;		_I2C1_DO_TX_EMPTY
 27497 ;;		_I2C1_MasterClearIrq
 27498 ;;		_I2C1_MasterIsNack
 27499 ;; This function is called by:
 27500 ;;		_I2C1_Poller
 27501 ;; This function uses a non-reentrant model
 27502 ;;
 27503                           
 27504     1028                     _I2C1_MasterFsm:	
 27505                           ;psect for function _I2C1_MasterFsm
 27506                           
 27507     1028                     l13591:	
 27508                           ;incstack = 0
 27509                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27510                           
 27511                           
 27512                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 27513     1028  3199  2158  3190   	fcall	_I2C1_MasterClearIrq
 27514     102B                     l13593:
 27515                           
 27516                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 27517     102B  0141               	movlb	1	; select bank1
 27518     102C  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 27519     102D  282F               	goto	u11601
 27520     102E  2830               	goto	u11600
 27521     102F                     u11601:
 27522     102F  283B               	goto	l13599
 27523     1030                     u11600:
 27524     1030                     l13595:
 27525     1030  3199  21DC  3190   	fcall	_I2C1_MasterIsNack
 27526     1033  3A00               	xorlw	0
 27527     1034  1903               	skipnz
 27528     1035  2837               	goto	u11611
 27529     1036  2838               	goto	u11610
 27530     1037                     u11611:
 27531     1037  283B               	goto	l13599
 27532     1038                     u11610:
 27533     1038                     l13597:
 27534                           
 27535                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 27536     1038  300F               	movlw	15
 27537     1039  0141               	movlb	1	; select bank1
 27538     103A  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 27539     103B                     l13599:
 27540                           
 27541                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 27542     103B  0141               	movlb	1	; select bank1
 27543     103C  083A               	movf	(_I2C1_Status^(0+128)+26),w
 27544     103D  0140               	movlb	0	; select bank0
 27545     103E  00A0               	movwf	??_I2C1_MasterFsm
 27546     103F  01A1               	clrf	??_I2C1_MasterFsm+1
 27547     1040  35A0               	lslf	??_I2C1_MasterFsm,f
 27548     1041  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 27549     1042  3000               	movlw	low _i2c1_fsmStateTable
 27550     1043  0720               	addwf	??_I2C1_MasterFsm,w
 27551     1044  0084               	movwf	4
 27552     1045  3020               	movlw	high _i2c1_fsmStateTable
 27553     1046  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 27554     1047  3880               	iorlw	128
 27555     1048  0085               	movwf	5
 27556     1049  3F01               	moviw [1]fsr0
 27557     104A  008A               	movwf	10
 27558     104B  3F00               	moviw [0]fsr0
 27559     104C  000A               	callw
 27560     104D  3190               	pagesel	$
 27561     104E  0141               	movlb	1	; select bank1
 27562     104F  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 27563     1050                     l1799:
 27564     1050  0008               	return
 27565     1051                     __end_of_I2C1_MasterFsm:
 27566                           
 27567                           	psect	text119
 27568     1F60                     __ptext119:	
 27569 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 27570 ;; Defined at:
 27571 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 27572 ;; Parameters:    Size  Location     Type
 27573 ;;		None
 27574 ;; Auto vars:     Size  Location     Type
 27575 ;;		None
 27576 ;; Return value:  Size  Location     Type
 27577 ;;                  1    wreg      enum E12565
 27578 ;; Registers used:
 27579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27580 ;; Tracked objects:
 27581 ;;		On entry : 0/0
 27582 ;;		On exit  : 0/0
 27583 ;;		Unchanged: 0/0
 27584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27589 ;;Total ram usage:        2 bytes
 27590 ;; Hardware stack levels used: 1
 27591 ;; Hardware stack levels required when called: 7
 27592 ;; This function calls:
 27593 ;;		NULL
 27594 ;;		_I2C1_CallbackReturnReset
 27595 ;;		_I2C1_CallbackReturnStop
 27596 ;;		_I2C1_DO_SEND_RESTART
 27597 ;;		_I2C1_DO_SEND_STOP
 27598 ;;		_rd1RegCompleteHandler
 27599 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 27600 ;;		_rd2RegCompleteHandler
 27601 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 27602 ;;		_rdBlkRegCompleteHandler
 27603 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 27604 ;;		_wr1RegCompleteHandler
 27605 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 27606 ;;		_wr2RegCompleteHandler
 27607 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 27608 ;; This function is called by:
 27609 ;;		_I2C1_MasterFsm
 27610 ;; This function uses a non-reentrant model
 27611 ;;
 27612                           
 27613     1F60                     _I2C1_DO_ADDRESS_NACK:	
 27614                           ;psect for function _I2C1_DO_ADDRESS_NACK
 27615                           
 27616     1F60                     l13567:	
 27617                           ;incstack = 0
 27618                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27619                           
 27620                           
 27621                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 27622     1F60  0141               	movlb	1	; select bank1
 27623     1F61  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 27624     1F62                     l13569:
 27625                           
 27626                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 27627     1F62  3002               	movlw	2
 27628     1F63  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 27629                           
 27630                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 27631     1F64  2F6D               	goto	l13581
 27632     1F65                     l13571:
 27633                           
 27634                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 27635     1F65  3199  21AA  319F   	fcall	_I2C1_DO_SEND_RESTART
 27636     1F68  2F87               	goto	l1890
 27637     1F69                     l13575:
 27638                           
 27639                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 27640     1F69  3199  21AF  319F   	fcall	_I2C1_DO_SEND_STOP
 27641     1F6C  2F87               	goto	l1890
 27642     1F6D                     l13581:
 27643     1F6D  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 27644     1F6E  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 27645     1F6F  3004               	movlw	4
 27646     1F70  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 27647     1F71  0086               	movwf	6
 27648     1F72  0187               	clrf	7
 27649     1F73  3F41               	moviw [1]fsr1
 27650     1F74  008A               	movwf	10
 27651     1F75  3F40               	moviw [0]fsr1
 27652     1F76  000A               	callw
 27653     1F77  319F               	pagesel	$
 27654     1F78  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 27655     1F79  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 27656                           
 27657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27658                           ; Switch size 1, requested type "simple"
 27659                           ; Number of cases is 1, Range of values is 0 to 0
 27660                           ; switch strategies available:
 27661                           ; Name         Instructions Cycles
 27662                           ; simple_byte            4     3 (average)
 27663                           ; direct_byte            8     6 (fixed)
 27664                           ; jumptable            260     6 (fixed)
 27665                           ;	Chosen strategy is simple_byte
 27666     1F7A  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 27667     1F7B  3A00               	xorlw	0	; case 0
 27668     1F7C  1903               	skipnz
 27669     1F7D  2F7F               	goto	l17541
 27670     1F7E  2F69               	goto	l13575
 27671     1F7F                     l17541:
 27672                           
 27673                           ; Switch size 1, requested type "simple"
 27674                           ; Number of cases is 2, Range of values is 2 to 3
 27675                           ; switch strategies available:
 27676                           ; Name         Instructions Cycles
 27677                           ; simple_byte            7     4 (average)
 27678                           ; direct_byte           13     9 (fixed)
 27679                           ; jumptable            263     9 (fixed)
 27680                           ;	Chosen strategy is simple_byte
 27681     1F7F  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 27682     1F80  3A02               	xorlw	2	; case 2
 27683     1F81  1903               	skipnz
 27684     1F82  2F65               	goto	l13571
 27685     1F83  3A01               	xorlw	1	; case 3
 27686     1F84  1903               	skipnz
 27687     1F85  2F65               	goto	l13571
 27688     1F86  2F69               	goto	l13575
 27689     1F87                     l1890:
 27690     1F87  0008               	return
 27691     1F88                     __end_of_I2C1_DO_ADDRESS_NACK:
 27692                           
 27693                           	psect	text120
 27694     19C3                     __ptext120:	
 27695 ;; *************** function _I2C1_DO_RESET *****************
 27696 ;; Defined at:
 27697 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 27698 ;; Parameters:    Size  Location     Type
 27699 ;;		None
 27700 ;; Auto vars:     Size  Location     Type
 27701 ;;		None
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  1    wreg      enum E12565
 27704 ;; Registers used:
 27705 ;;		wreg, status,2
 27706 ;; Tracked objects:
 27707 ;;		On entry : 0/0
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27715 ;;Total ram usage:        0 bytes
 27716 ;; Hardware stack levels used: 1
 27717 ;; Hardware stack levels required when called: 4
 27718 ;; This function calls:
 27719 ;;		Nothing
 27720 ;; This function is called by:
 27721 ;;		_I2C1_MasterFsm
 27722 ;; This function uses a non-reentrant model
 27723 ;;
 27724                           
 27725     19C3                     _I2C1_DO_RESET:	
 27726                           ;psect for function _I2C1_DO_RESET
 27727                           
 27728     19C3                     l13559:	
 27729                           ;incstack = 0
 27730                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 27731                           
 27732                           
 27733                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 27734     19C3  0141               	movlb	1	; select bank1
 27735     19C4  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 27736     19C5                     l13561:
 27737                           
 27738                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 27739     19C5  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 27740     19C6                     l13563:
 27741                           
 27742                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 27743     19C6  300E               	movlw	14
 27744     19C7                     l1884:
 27745     19C7  0008               	return
 27746     19C8                     __end_of_I2C1_DO_RESET:
 27747                           
 27748                           	psect	text121
 27749     19BE                     __ptext121:	
 27750 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 27751 ;; Defined at:
 27752 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 27753 ;; Parameters:    Size  Location     Type
 27754 ;;		None
 27755 ;; Auto vars:     Size  Location     Type
 27756 ;;		None
 27757 ;; Return value:  Size  Location     Type
 27758 ;;                  1    wreg      enum E12565
 27759 ;; Registers used:
 27760 ;;		wreg, status,2, status,0, pclath, cstack
 27761 ;; Tracked objects:
 27762 ;;		On entry : 0/0
 27763 ;;		On exit  : 0/0
 27764 ;;		Unchanged: 0/0
 27765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27770 ;;Total ram usage:        0 bytes
 27771 ;; Hardware stack levels used: 1
 27772 ;; Hardware stack levels required when called: 5
 27773 ;; This function calls:
 27774 ;;		_I2C1_MasterSendNack
 27775 ;; This function is called by:
 27776 ;;		_I2C1_DO_RX
 27777 ;;		_I2C1_MasterFsm
 27778 ;; This function uses a non-reentrant model
 27779 ;;
 27780                           
 27781     19BE                     _I2C1_DO_RX_NACK_RESTART:	
 27782                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 27783                           
 27784     19BE                     l13397:	
 27785                           ;incstack = 0
 27786                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 27787                           
 27788                           
 27789                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 27790     19BE  3199  2186  3199   	fcall	_I2C1_MasterSendNack
 27791     19C1                     l13399:
 27792                           
 27793                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 27794     19C1  3009               	movlw	9
 27795     19C2                     l1881:
 27796     19C2  0008               	return
 27797     19C3                     __end_of_I2C1_DO_RX_NACK_RESTART:
 27798                           
 27799                           	psect	text122
 27800     19B9                     __ptext122:	
 27801 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 27802 ;; Defined at:
 27803 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 27804 ;; Parameters:    Size  Location     Type
 27805 ;;		None
 27806 ;; Auto vars:     Size  Location     Type
 27807 ;;		None
 27808 ;; Return value:  Size  Location     Type
 27809 ;;                  1    wreg      enum E12565
 27810 ;; Registers used:
 27811 ;;		wreg, status,2, status,0, pclath, cstack
 27812 ;; Tracked objects:
 27813 ;;		On entry : 0/0
 27814 ;;		On exit  : 0/0
 27815 ;;		Unchanged: 0/0
 27816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27821 ;;Total ram usage:        0 bytes
 27822 ;; Hardware stack levels used: 1
 27823 ;; Hardware stack levels required when called: 5
 27824 ;; This function calls:
 27825 ;;		_I2C1_MasterSendNack
 27826 ;; This function is called by:
 27827 ;;		_I2C1_DO_RX
 27828 ;;		_I2C1_MasterFsm
 27829 ;; This function uses a non-reentrant model
 27830 ;;
 27831                           
 27832     19B9                     _I2C1_DO_RX_NACK_STOP:	
 27833                           ;psect for function _I2C1_DO_RX_NACK_STOP
 27834                           
 27835     19B9                     l13403:	
 27836                           ;incstack = 0
 27837                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 27838                           
 27839                           
 27840                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 27841     19B9  3199  2186  3199   	fcall	_I2C1_MasterSendNack
 27842     19BC                     l13405:
 27843                           
 27844                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 27845     19BC  300A               	movlw	10
 27846     19BD                     l1878:
 27847     19BD  0008               	return
 27848     19BE                     __end_of_I2C1_DO_RX_NACK_STOP:
 27849                           
 27850                           	psect	text123
 27851     19B4                     __ptext123:	
 27852 ;; *************** function _I2C1_DO_RX_ACK *****************
 27853 ;; Defined at:
 27854 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 27855 ;; Parameters:    Size  Location     Type
 27856 ;;		None
 27857 ;; Auto vars:     Size  Location     Type
 27858 ;;		None
 27859 ;; Return value:  Size  Location     Type
 27860 ;;                  1    wreg      enum E12565
 27861 ;; Registers used:
 27862 ;;		wreg, status,2, status,0, pclath, cstack
 27863 ;; Tracked objects:
 27864 ;;		On entry : 0/0
 27865 ;;		On exit  : 0/0
 27866 ;;		Unchanged: 0/0
 27867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27872 ;;Total ram usage:        0 bytes
 27873 ;; Hardware stack levels used: 1
 27874 ;; Hardware stack levels required when called: 5
 27875 ;; This function calls:
 27876 ;;		_I2C1_MasterSendAck
 27877 ;; This function is called by:
 27878 ;;		_I2C1_MasterFsm
 27879 ;; This function uses a non-reentrant model
 27880 ;;
 27881                           
 27882     19B4                     _I2C1_DO_RX_ACK:	
 27883                           ;psect for function _I2C1_DO_RX_ACK
 27884                           
 27885     19B4                     l13553:	
 27886                           ;incstack = 0
 27887                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 27888                           
 27889                           
 27890                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 27891     19B4  3199  218A  3199   	fcall	_I2C1_MasterSendAck
 27892     19B7                     l13555:
 27893                           
 27894                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 27895     19B7  3005               	movlw	5
 27896     19B8                     l1875:
 27897     19B8  0008               	return
 27898     19B9                     __end_of_I2C1_DO_RX_ACK:
 27899                           
 27900                           	psect	text124
 27901     19AF                     __ptext124:	
 27902 ;; *************** function _I2C1_DO_SEND_STOP *****************
 27903 ;; Defined at:
 27904 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 27905 ;; Parameters:    Size  Location     Type
 27906 ;;		None
 27907 ;; Auto vars:     Size  Location     Type
 27908 ;;		None
 27909 ;; Return value:  Size  Location     Type
 27910 ;;                  1    wreg      enum E12565
 27911 ;; Registers used:
 27912 ;;		wreg, status,2, status,0, pclath, cstack
 27913 ;; Tracked objects:
 27914 ;;		On entry : 0/0
 27915 ;;		On exit  : 0/0
 27916 ;;		Unchanged: 0/0
 27917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27922 ;;Total ram usage:        0 bytes
 27923 ;; Hardware stack levels used: 1
 27924 ;; Hardware stack levels required when called: 5
 27925 ;; This function calls:
 27926 ;;		_I2C1_MasterStop
 27927 ;; This function is called by:
 27928 ;;		_I2C1_DO_TX
 27929 ;;		_I2C1_DO_TX_EMPTY
 27930 ;;		_I2C1_DO_ADDRESS_NACK
 27931 ;;		_I2C1_MasterFsm
 27932 ;; This function uses a non-reentrant model
 27933 ;;
 27934                           
 27935     19AF                     _I2C1_DO_SEND_STOP:	
 27936                           ;psect for function _I2C1_DO_SEND_STOP
 27937                           
 27938     19AF                     l13385:	
 27939                           ;incstack = 0
 27940                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 27941                           
 27942                           
 27943                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 27944     19AF  3199  2167  3199   	fcall	_I2C1_MasterStop
 27945     19B2                     l13387:
 27946                           
 27947                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 27948     19B2  3000               	movlw	0
 27949     19B3                     l1872:
 27950     19B3  0008               	return
 27951     19B4                     __end_of_I2C1_DO_SEND_STOP:
 27952                           
 27953                           	psect	text125
 27954     19AA                     __ptext125:	
 27955 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 27956 ;; Defined at:
 27957 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 27958 ;; Parameters:    Size  Location     Type
 27959 ;;		None
 27960 ;; Auto vars:     Size  Location     Type
 27961 ;;		None
 27962 ;; Return value:  Size  Location     Type
 27963 ;;                  1    wreg      enum E12565
 27964 ;; Registers used:
 27965 ;;		wreg, status,2, status,0, pclath, cstack
 27966 ;; Tracked objects:
 27967 ;;		On entry : 0/0
 27968 ;;		On exit  : 0/0
 27969 ;;		Unchanged: 0/0
 27970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27975 ;;Total ram usage:        0 bytes
 27976 ;; Hardware stack levels used: 1
 27977 ;; Hardware stack levels required when called: 5
 27978 ;; This function calls:
 27979 ;;		_I2C1_MasterEnableRestart
 27980 ;; This function is called by:
 27981 ;;		_I2C1_DO_TX_EMPTY
 27982 ;;		_I2C1_DO_ADDRESS_NACK
 27983 ;;		_I2C1_MasterFsm
 27984 ;; This function uses a non-reentrant model
 27985 ;;
 27986                           
 27987     19AA                     _I2C1_DO_SEND_RESTART:	
 27988                           ;psect for function _I2C1_DO_SEND_RESTART
 27989                           
 27990     19AA                     l13411:	
 27991                           ;incstack = 0
 27992                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 27993                           
 27994                           
 27995                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 27996     19AA  3199  2164  3199   	fcall	_I2C1_MasterEnableRestart
 27997     19AD                     l13413:
 27998                           
 27999                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 28000     19AD  3001               	movlw	1
 28001     19AE                     l1869:
 28002     19AE  0008               	return
 28003     19AF                     __end_of_I2C1_DO_SEND_RESTART:
 28004                           
 28005                           	psect	text126
 28006     19A5                     __ptext126:	
 28007 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 28008 ;; Defined at:
 28009 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 28010 ;; Parameters:    Size  Location     Type
 28011 ;;		None
 28012 ;; Auto vars:     Size  Location     Type
 28013 ;;		None
 28014 ;; Return value:  Size  Location     Type
 28015 ;;                  1    wreg      enum E12565
 28016 ;; Registers used:
 28017 ;;		wreg, status,2, status,0, pclath, cstack
 28018 ;; Tracked objects:
 28019 ;;		On entry : 0/0
 28020 ;;		On exit  : 0/0
 28021 ;;		Unchanged: 0/0
 28022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28027 ;;Total ram usage:        0 bytes
 28028 ;; Hardware stack levels used: 1
 28029 ;; Hardware stack levels required when called: 5
 28030 ;; This function calls:
 28031 ;;		_I2C1_MasterEnableRestart
 28032 ;; This function is called by:
 28033 ;;		_I2C1_DO_TX
 28034 ;;		_I2C1_MasterFsm
 28035 ;; This function uses a non-reentrant model
 28036 ;;
 28037                           
 28038     19A5                     _I2C1_DO_SEND_RESTART_WRITE:	
 28039                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 28040                           
 28041     19A5                     l13379:	
 28042                           ;incstack = 0
 28043                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 28044                           
 28045                           
 28046                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 28047     19A5  3199  2164  3199   	fcall	_I2C1_MasterEnableRestart
 28048     19A8                     l13381:
 28049                           
 28050                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 28051     19A8  3002               	movlw	2
 28052     19A9                     l1866:
 28053     19A9  0008               	return
 28054     19AA                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 28055                           
 28056                           	psect	text127
 28057     19A0                     __ptext127:	
 28058 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 28059 ;; Defined at:
 28060 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 28061 ;; Parameters:    Size  Location     Type
 28062 ;;		None
 28063 ;; Auto vars:     Size  Location     Type
 28064 ;;		None
 28065 ;; Return value:  Size  Location     Type
 28066 ;;                  1    wreg      enum E12565
 28067 ;; Registers used:
 28068 ;;		wreg, status,2, status,0, pclath, cstack
 28069 ;; Tracked objects:
 28070 ;;		On entry : 0/0
 28071 ;;		On exit  : 0/0
 28072 ;;		Unchanged: 0/0
 28073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28078 ;;Total ram usage:        0 bytes
 28079 ;; Hardware stack levels used: 1
 28080 ;; Hardware stack levels required when called: 5
 28081 ;; This function calls:
 28082 ;;		_I2C1_MasterEnableRestart
 28083 ;; This function is called by:
 28084 ;;		_I2C1_DO_TX
 28085 ;;		_I2C1_MasterFsm
 28086 ;; This function uses a non-reentrant model
 28087 ;;
 28088                           
 28089     19A0                     _I2C1_DO_SEND_RESTART_READ:	
 28090                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 28091                           
 28092     19A0                     l13373:	
 28093                           ;incstack = 0
 28094                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 28095                           
 28096                           
 28097                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 28098     19A0  3199  2164  3199   	fcall	_I2C1_MasterEnableRestart
 28099     19A3                     l13375:
 28100                           
 28101                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 28102     19A3  3001               	movlw	1
 28103     19A4                     l1863:
 28104     19A4  0008               	return
 28105     19A5                     __end_of_I2C1_DO_SEND_RESTART_READ:
 28106                           
 28107                           	psect	text128
 28108     1A48                     __ptext128:	
 28109 ;; *************** function _I2C1_DO_RCEN *****************
 28110 ;; Defined at:
 28111 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 28112 ;; Parameters:    Size  Location     Type
 28113 ;;		None
 28114 ;; Auto vars:     Size  Location     Type
 28115 ;;		None
 28116 ;; Return value:  Size  Location     Type
 28117 ;;                  1    wreg      enum E12565
 28118 ;; Registers used:
 28119 ;;		wreg, status,2, status,0, pclath, cstack
 28120 ;; Tracked objects:
 28121 ;;		On entry : 0/0
 28122 ;;		On exit  : 0/0
 28123 ;;		Unchanged: 0/0
 28124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28129 ;;Total ram usage:        0 bytes
 28130 ;; Hardware stack levels used: 1
 28131 ;; Hardware stack levels required when called: 5
 28132 ;; This function calls:
 28133 ;;		_I2C1_MasterStartRx
 28134 ;; This function is called by:
 28135 ;;		_I2C1_MasterFsm
 28136 ;; This function uses a non-reentrant model
 28137 ;;
 28138                           
 28139     1A48                     _I2C1_DO_RCEN:	
 28140                           ;psect for function _I2C1_DO_RCEN
 28141                           
 28142     1A48                     l13519:	
 28143                           ;incstack = 0
 28144                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 28145                           
 28146                           
 28147                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 28148     1A48  0141               	movlb	1	; select bank1
 28149     1A49  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 28150     1A4A                     l13521:
 28151                           
 28152                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 28153     1A4A  3199  216A  319A   	fcall	_I2C1_MasterStartRx
 28154     1A4D                     l13523:
 28155                           
 28156                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 28157     1A4D  3004               	movlw	4
 28158     1A4E                     l1839:
 28159     1A4E  0008               	return
 28160     1A4F                     __end_of_I2C1_DO_RCEN:
 28161                           
 28162                           	psect	text129
 28163     1502                     __ptext129:	
 28164 ;; *************** function _I2C1_DO_RX *****************
 28165 ;; Defined at:
 28166 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 28167 ;; Parameters:    Size  Location     Type
 28168 ;;		None
 28169 ;; Auto vars:     Size  Location     Type
 28170 ;;		None
 28171 ;; Return value:  Size  Location     Type
 28172 ;;                  1    wreg      enum E12565
 28173 ;; Registers used:
 28174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28175 ;; Tracked objects:
 28176 ;;		On entry : 0/0
 28177 ;;		On exit  : 0/0
 28178 ;;		Unchanged: 0/0
 28179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28184 ;;Total ram usage:        2 bytes
 28185 ;; Hardware stack levels used: 1
 28186 ;; Hardware stack levels required when called: 7
 28187 ;; This function calls:
 28188 ;;		NULL
 28189 ;;		_I2C1_CallbackReturnReset
 28190 ;;		_I2C1_CallbackReturnStop
 28191 ;;		_I2C1_DO_RX_NACK_RESTART
 28192 ;;		_I2C1_DO_RX_NACK_STOP
 28193 ;;		_I2C1_MasterGetRxData
 28194 ;;		_I2C1_MasterSendAck
 28195 ;;		_rd1RegCompleteHandler
 28196 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 28197 ;;		_rd2RegCompleteHandler
 28198 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 28199 ;;		_rdBlkRegCompleteHandler
 28200 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 28201 ;;		_wr1RegCompleteHandler
 28202 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 28203 ;;		_wr2RegCompleteHandler
 28204 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 28205 ;; This function is called by:
 28206 ;;		_I2C1_MasterFsm
 28207 ;; This function uses a non-reentrant model
 28208 ;;
 28209                           
 28210     1502                     _I2C1_DO_RX:	
 28211                           ;psect for function _I2C1_DO_RX
 28212                           
 28213     1502                     l13487:	
 28214                           ;incstack = 0
 28215                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 28216                           
 28217                           
 28218                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 28219     1502  0141               	movlb	1	; select bank1
 28220     1503  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 28221     1504  0086               	movwf	6
 28222     1505  0187               	clrf	7
 28223     1506  3199  216D  3195   	fcall	_I2C1_MasterGetRxData
 28224     1509  0081               	movwf	1
 28225     150A                     l13489:
 28226     150A  3001               	movlw	1
 28227     150B  00F9               	movwf	??_I2C1_DO_RX
 28228     150C  0879               	movf	??_I2C1_DO_RX,w
 28229     150D  0141               	movlb	1	; select bank1
 28230     150E  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 28231     150F                     l13491:
 28232                           
 28233                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 28234     150F  3001               	movlw	1
 28235     1510  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 28236     1511  3000               	movlw	0
 28237     1512  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 28238     1513  0838               	movf	(_I2C1_Status^(0+128)+24),w
 28239     1514  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 28240     1515  1903               	btfsc	3,2
 28241     1516  2D18               	goto	u11581
 28242     1517  2D19               	goto	u11580
 28243     1518                     u11581:
 28244     1518  2D1E               	goto	l1827
 28245     1519                     u11580:
 28246     1519                     l13493:
 28247                           
 28248                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 28249     1519  3199  218A  3195   	fcall	_I2C1_MasterSendAck
 28250     151C                     l13495:
 28251                           
 28252                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 28253     151C  3005               	movlw	5
 28254     151D  2D44               	goto	l1828
 28255     151E                     l1827:	
 28256                           ;mcc_generated_files/i2c1_master.c: 386:     else
 28257                           
 28258                           
 28259                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 28260     151E  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 28261                           
 28262                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 28263     151F  2D28               	goto	l13511
 28264     1520                     l13501:
 28265                           
 28266                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 28267     1520  3199  21BE  3195   	fcall	_I2C1_DO_RX_NACK_RESTART
 28268     1523  2D44               	goto	l1828
 28269     1524                     l13505:
 28270                           
 28271                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 28272     1524  3199  21B9  3195   	fcall	_I2C1_DO_RX_NACK_STOP
 28273     1527  2D44               	goto	l1828
 28274     1528                     l13511:
 28275     1528  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 28276     1529  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 28277     152A  0821               	movf	(_I2C1_Status+1)^(0+128),w
 28278     152B  008A               	movwf	10
 28279     152C  0820               	movf	_I2C1_Status^(0+128),w
 28280     152D  000A               	callw
 28281     152E  3195               	pagesel	$
 28282     152F  00F9               	movwf	??_I2C1_DO_RX
 28283     1530  01FA               	clrf	??_I2C1_DO_RX+1
 28284                           
 28285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28286                           ; Switch size 1, requested type "simple"
 28287                           ; Number of cases is 1, Range of values is 0 to 0
 28288                           ; switch strategies available:
 28289                           ; Name         Instructions Cycles
 28290                           ; simple_byte            4     3 (average)
 28291                           ; direct_byte            8     6 (fixed)
 28292                           ; jumptable            260     6 (fixed)
 28293                           ;	Chosen strategy is simple_byte
 28294     1531  087A               	movf	??_I2C1_DO_RX+1,w
 28295     1532  3A00               	xorlw	0	; case 0
 28296     1533  1903               	skipnz
 28297     1534  2D36               	goto	l17543
 28298     1535  2D24               	goto	l13505
 28299     1536                     l17543:
 28300                           
 28301                           ; Switch size 1, requested type "simple"
 28302                           ; Number of cases is 4, Range of values is 1 to 4
 28303                           ; switch strategies available:
 28304                           ; Name         Instructions Cycles
 28305                           ; simple_byte           13     7 (average)
 28306                           ; direct_byte           17     9 (fixed)
 28307                           ; jumptable            263     9 (fixed)
 28308                           ;	Chosen strategy is simple_byte
 28309     1536  0879               	movf	??_I2C1_DO_RX,w
 28310     1537  3A01               	xorlw	1	; case 1
 28311     1538  1903               	skipnz
 28312     1539  2D24               	goto	l13505
 28313     153A  3A03               	xorlw	3	; case 2
 28314     153B  1903               	skipnz
 28315     153C  2D20               	goto	l13501
 28316     153D  3A01               	xorlw	1	; case 3
 28317     153E  1903               	skipnz
 28318     153F  2D20               	goto	l13501
 28319     1540  3A07               	xorlw	7	; case 4
 28320     1541  1903               	skipnz
 28321     1542  2D24               	goto	l13505
 28322     1543  2D24               	goto	l13505
 28323     1544                     l1828:
 28324     1544  0008               	return
 28325     1545                     __end_of_I2C1_DO_RX:
 28326                           
 28327                           	psect	text130
 28328     175A                     __ptext130:	
 28329 ;; *************** function _I2C1_DO_TX *****************
 28330 ;; Defined at:
 28331 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 28332 ;; Parameters:    Size  Location     Type
 28333 ;;		None
 28334 ;; Auto vars:     Size  Location     Type
 28335 ;;		None
 28336 ;; Return value:  Size  Location     Type
 28337 ;;                  1    wreg      enum E12565
 28338 ;; Registers used:
 28339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28340 ;; Tracked objects:
 28341 ;;		On entry : 0/0
 28342 ;;		On exit  : 0/0
 28343 ;;		Unchanged: 0/0
 28344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28349 ;;Total ram usage:        2 bytes
 28350 ;; Hardware stack levels used: 1
 28351 ;; Hardware stack levels required when called: 7
 28352 ;; This function calls:
 28353 ;;		NULL
 28354 ;;		_I2C1_CallbackReturnReset
 28355 ;;		_I2C1_CallbackReturnStop
 28356 ;;		_I2C1_DO_SEND_RESTART_READ
 28357 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28358 ;;		_I2C1_DO_SEND_STOP
 28359 ;;		_I2C1_MasterIsNack
 28360 ;;		_I2C1_MasterSendTxData
 28361 ;;		_rd1RegCompleteHandler
 28362 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 28363 ;;		_rd2RegCompleteHandler
 28364 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 28365 ;;		_rdBlkRegCompleteHandler
 28366 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 28367 ;;		_wr1RegCompleteHandler
 28368 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 28369 ;;		_wr2RegCompleteHandler
 28370 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 28371 ;; This function is called by:
 28372 ;;		_I2C1_MasterFsm
 28373 ;; This function uses a non-reentrant model
 28374 ;;
 28375                           
 28376     175A                     _I2C1_DO_TX:	
 28377                           ;psect for function _I2C1_DO_TX
 28378                           
 28379     175A                     l13453:	
 28380                           ;incstack = 0
 28381                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 28382                           
 28383                           
 28384                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 28385     175A  3199  21DC  3197   	fcall	_I2C1_MasterIsNack
 28386     175D  3A00               	xorlw	0
 28387     175E  1903               	skipnz
 28388     175F  2F61               	goto	u11561
 28389     1760  2F62               	goto	u11560
 28390     1761                     u11561:
 28391     1761  2F90               	goto	l1811
 28392     1762                     u11560:
 28393     1762  2F6F               	goto	l13471
 28394     1763                     l13457:
 28395                           
 28396                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 28397     1763  3199  21A0  3197   	fcall	_I2C1_DO_SEND_RESTART_READ
 28398     1766  2FAC               	goto	l1814
 28399     1767                     l13461:
 28400                           
 28401                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 28402     1767  3199  21A5  3197   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 28403     176A  2FAC               	goto	l1814
 28404     176B                     l13465:
 28405                           
 28406                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 28407     176B  3199  21AF  3197   	fcall	_I2C1_DO_SEND_STOP
 28408     176E  2FAC               	goto	l1814
 28409     176F                     l13471:
 28410     176F  0141               	movlb	1	; select bank1
 28411     1770  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 28412     1771  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 28413     1772  3006               	movlw	6
 28414     1773  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28415     1774  0086               	movwf	6
 28416     1775  0187               	clrf	7
 28417     1776  3F41               	moviw [1]fsr1
 28418     1777  008A               	movwf	10
 28419     1778  3F40               	moviw [0]fsr1
 28420     1779  000A               	callw
 28421     177A  3197               	pagesel	$
 28422     177B  00F9               	movwf	??_I2C1_DO_TX
 28423     177C  01FA               	clrf	??_I2C1_DO_TX+1
 28424                           
 28425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28426                           ; Switch size 1, requested type "simple"
 28427                           ; Number of cases is 1, Range of values is 0 to 0
 28428                           ; switch strategies available:
 28429                           ; Name         Instructions Cycles
 28430                           ; simple_byte            4     3 (average)
 28431                           ; direct_byte            8     6 (fixed)
 28432                           ; jumptable            260     6 (fixed)
 28433                           ;	Chosen strategy is simple_byte
 28434     177D  087A               	movf	??_I2C1_DO_TX+1,w
 28435     177E  3A00               	xorlw	0	; case 0
 28436     177F  1903               	skipnz
 28437     1780  2F82               	goto	l17545
 28438     1781  2F6B               	goto	l13465
 28439     1782                     l17545:
 28440                           
 28441                           ; Switch size 1, requested type "simple"
 28442                           ; Number of cases is 4, Range of values is 1 to 4
 28443                           ; switch strategies available:
 28444                           ; Name         Instructions Cycles
 28445                           ; simple_byte           13     7 (average)
 28446                           ; direct_byte           17     9 (fixed)
 28447                           ; jumptable            263     9 (fixed)
 28448                           ;	Chosen strategy is simple_byte
 28449     1782  0879               	movf	??_I2C1_DO_TX,w
 28450     1783  3A01               	xorlw	1	; case 1
 28451     1784  1903               	skipnz
 28452     1785  2F6B               	goto	l13465
 28453     1786  3A03               	xorlw	3	; case 2
 28454     1787  1903               	skipnz
 28455     1788  2F63               	goto	l13457
 28456     1789  3A01               	xorlw	1	; case 3
 28457     178A  1903               	skipnz
 28458     178B  2F67               	goto	l13461
 28459     178C  3A07               	xorlw	7	; case 4
 28460     178D  1903               	skipnz
 28461     178E  2F6B               	goto	l13465
 28462     178F  2F6B               	goto	l13465
 28463     1790                     l1811:	
 28464                           ;mcc_generated_files/i2c1_master.c: 370:     else
 28465                           
 28466                           
 28467                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 28468     1790  0141               	movlb	1	; select bank1
 28469     1791  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 28470     1792                     l13473:
 28471                           
 28472                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 28473     1792  3017               	movlw	23
 28474     1793  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28475     1794  0086               	movwf	6
 28476     1795  0187               	clrf	7
 28477     1796  3F40               	moviw [0]fsr1
 28478     1797  0084               	movwf	4
 28479     1798  0185               	clrf	5
 28480     1799  0A81               	incf	1,f
 28481     179A  0800               	movf	0,w
 28482     179B  3199  2196  3197   	fcall	_I2C1_MasterSendTxData
 28483     179E                     l13475:
 28484                           
 28485                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 28486     179E  3001               	movlw	1
 28487     179F  0141               	movlb	1	; select bank1
 28488     17A0  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 28489     17A1  3000               	movlw	0
 28490     17A2  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 28491     17A3  0838               	movf	(_I2C1_Status^(0+128)+24),w
 28492     17A4  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 28493     17A5  1D03               	btfss	3,2
 28494     17A6  2FA8               	goto	u11571
 28495     17A7  2FA9               	goto	u11570
 28496     17A8                     u11571:
 28497     17A8  2FAB               	goto	l13479
 28498     17A9                     u11570:
 28499     17A9                     l13477:
 28500     17A9  3006               	movlw	6
 28501     17AA  2FAC               	goto	l1814
 28502     17AB                     l13479:
 28503     17AB  3003               	movlw	3
 28504     17AC                     l1814:
 28505     17AC  0008               	return
 28506     17AD                     __end_of_I2C1_DO_TX:
 28507                           
 28508                           	psect	text131
 28509     1A56                     __ptext131:	
 28510 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 28511 ;; Defined at:
 28512 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 28513 ;; Parameters:    Size  Location     Type
 28514 ;;		None
 28515 ;; Auto vars:     Size  Location     Type
 28516 ;;		None
 28517 ;; Return value:  Size  Location     Type
 28518 ;;                  1    wreg      enum E12565
 28519 ;; Registers used:
 28520 ;;		wreg, status,2, status,0, pclath, cstack
 28521 ;; Tracked objects:
 28522 ;;		On entry : 0/0
 28523 ;;		On exit  : 0/0
 28524 ;;		Unchanged: 0/0
 28525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28530 ;;Total ram usage:        0 bytes
 28531 ;; Hardware stack levels used: 1
 28532 ;; Hardware stack levels required when called: 5
 28533 ;; This function calls:
 28534 ;;		_I2C1_MasterSendTxData
 28535 ;; This function is called by:
 28536 ;;		_I2C1_MasterFsm
 28537 ;; This function uses a non-reentrant model
 28538 ;;
 28539                           
 28540     1A56                     _I2C1_DO_SEND_ADR_WRITE:	
 28541                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 28542                           
 28543     1A56                     l13445:	
 28544                           ;incstack = 0
 28545                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 28546                           
 28547                           
 28548                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 28549     1A56  0141               	movlb	1	; select bank1
 28550     1A57  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 28551     1A58                     l13447:
 28552                           
 28553                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 28554     1A58  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 28555     1A59  3199  2196  319A   	fcall	_I2C1_MasterSendTxData
 28556     1A5C                     l13449:
 28557                           
 28558                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 28559     1A5C  3003               	movlw	3
 28560     1A5D                     l1808:
 28561     1A5D  0008               	return
 28562     1A5E                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 28563                           
 28564                           	psect	text132
 28565     1A6F                     __ptext132:	
 28566 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 28567 ;; Defined at:
 28568 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 28569 ;; Parameters:    Size  Location     Type
 28570 ;;		None
 28571 ;; Auto vars:     Size  Location     Type
 28572 ;;		None
 28573 ;; Return value:  Size  Location     Type
 28574 ;;                  1    wreg      enum E12565
 28575 ;; Registers used:
 28576 ;;		wreg, status,2, status,0, pclath, cstack
 28577 ;; Tracked objects:
 28578 ;;		On entry : 0/0
 28579 ;;		On exit  : 0/0
 28580 ;;		Unchanged: 0/0
 28581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28586 ;;Total ram usage:        0 bytes
 28587 ;; Hardware stack levels used: 1
 28588 ;; Hardware stack levels required when called: 5
 28589 ;; This function calls:
 28590 ;;		_I2C1_MasterSendTxData
 28591 ;; This function is called by:
 28592 ;;		_I2C1_MasterFsm
 28593 ;; This function uses a non-reentrant model
 28594 ;;
 28595                           
 28596     1A6F                     _I2C1_DO_SEND_ADR_READ:	
 28597                           ;psect for function _I2C1_DO_SEND_ADR_READ
 28598                           
 28599     1A6F                     l13437:	
 28600                           ;incstack = 0
 28601                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 28602                           
 28603                           
 28604                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 28605     1A6F  0141               	movlb	1	; select bank1
 28606     1A70  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 28607     1A71                     l13439:
 28608                           
 28609                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 28610     1A71  1403               	setc
 28611     1A72  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 28612     1A73  3199  2196  319A   	fcall	_I2C1_MasterSendTxData
 28613     1A76                     l13441:
 28614                           
 28615                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 28616     1A76  3005               	movlw	5
 28617     1A77                     l1805:
 28618     1A77  0008               	return
 28619     1A78                     __end_of_I2C1_DO_SEND_ADR_READ:
 28620                           
 28621                           	psect	text133
 28622     199B                     __ptext133:	
 28623 ;; *************** function _I2C1_DO_IDLE *****************
 28624 ;; Defined at:
 28625 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 28626 ;; Parameters:    Size  Location     Type
 28627 ;;		None
 28628 ;; Auto vars:     Size  Location     Type
 28629 ;;		None
 28630 ;; Return value:  Size  Location     Type
 28631 ;;                  1    wreg      enum E12565
 28632 ;; Registers used:
 28633 ;;		wreg, status,2
 28634 ;; Tracked objects:
 28635 ;;		On entry : 0/0
 28636 ;;		On exit  : 0/0
 28637 ;;		Unchanged: 0/0
 28638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28643 ;;Total ram usage:        0 bytes
 28644 ;; Hardware stack levels used: 1
 28645 ;; Hardware stack levels required when called: 4
 28646 ;; This function calls:
 28647 ;;		Nothing
 28648 ;; This function is called by:
 28649 ;;		_I2C1_MasterFsm
 28650 ;; This function uses a non-reentrant model
 28651 ;;
 28652                           
 28653     199B                     _I2C1_DO_IDLE:	
 28654                           ;psect for function _I2C1_DO_IDLE
 28655                           
 28656     199B                     l13429:	
 28657                           ;incstack = 0
 28658                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 28659                           
 28660                           
 28661                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 28662     199B  0141               	movlb	1	; select bank1
 28663     199C  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 28664     199D                     l13431:
 28665                           
 28666                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 28667     199D  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 28668     199E                     l13433:
 28669                           
 28670                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 28671     199E  300E               	movlw	14
 28672     199F                     l1802:
 28673     199F  0008               	return
 28674     19A0                     __end_of_I2C1_DO_IDLE:
 28675                           
 28676                           	psect	text134
 28677     1051                     __ptext134:	
 28678 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 28679 ;; Defined at:
 28680 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 28681 ;; Parameters:    Size  Location     Type
 28682 ;;		None
 28683 ;; Auto vars:     Size  Location     Type
 28684 ;;		None
 28685 ;; Return value:  Size  Location     Type
 28686 ;;                  1    wreg      enum E12565
 28687 ;; Registers used:
 28688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28689 ;; Tracked objects:
 28690 ;;		On entry : 0/0
 28691 ;;		On exit  : 0/0
 28692 ;;		Unchanged: 0/0
 28693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28698 ;;Total ram usage:        2 bytes
 28699 ;; Hardware stack levels used: 1
 28700 ;; Hardware stack levels required when called: 7
 28701 ;; This function calls:
 28702 ;;		NULL
 28703 ;;		_I2C1_CallbackReturnReset
 28704 ;;		_I2C1_CallbackReturnStop
 28705 ;;		_I2C1_DO_SEND_RESTART
 28706 ;;		_I2C1_DO_SEND_STOP
 28707 ;;		_I2C1_MasterSetIrq
 28708 ;;		_rd1RegCompleteHandler
 28709 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 28710 ;;		_rd2RegCompleteHandler
 28711 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 28712 ;;		_rdBlkRegCompleteHandler
 28713 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 28714 ;;		_wr1RegCompleteHandler
 28715 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 28716 ;;		_wr2RegCompleteHandler
 28717 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 28718 ;; This function is called by:
 28719 ;;		_I2C1_MasterFsm
 28720 ;; This function uses a non-reentrant model
 28721 ;;
 28722                           
 28723     1051                     _I2C1_DO_TX_EMPTY:	
 28724                           ;psect for function _I2C1_DO_TX_EMPTY
 28725                           
 28726     1051                     l13527:	
 28727                           ;incstack = 0
 28728                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 28729                           
 28730                           
 28731                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 28732     1051  0141               	movlb	1	; select bank1
 28733     1052  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 28734                           
 28735                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 28736     1053  2861               	goto	l13545
 28737     1054                     l13529:
 28738                           
 28739                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 28740     1054  3199  21AA  3190   	fcall	_I2C1_DO_SEND_RESTART
 28741     1057  287D               	goto	l1845
 28742     1058                     l13533:
 28743                           
 28744                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 28745     1058  3199  2170  3190   	fcall	_I2C1_MasterSetIrq
 28746     105B                     l13535:
 28747                           
 28748                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 28749     105B  3003               	movlw	3
 28750     105C  287D               	goto	l1845
 28751     105D                     l13539:
 28752                           
 28753                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 28754     105D  3199  21AF  3190   	fcall	_I2C1_DO_SEND_STOP
 28755     1060  287D               	goto	l1845
 28756     1061                     l13545:
 28757     1061  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 28758     1062  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 28759     1063  0821               	movf	(_I2C1_Status+1)^(0+128),w
 28760     1064  008A               	movwf	10
 28761     1065  0820               	movf	_I2C1_Status^(0+128),w
 28762     1066  000A               	callw
 28763     1067  3190               	pagesel	$
 28764     1068  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 28765     1069  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 28766                           
 28767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28768                           ; Switch size 1, requested type "simple"
 28769                           ; Number of cases is 1, Range of values is 0 to 0
 28770                           ; switch strategies available:
 28771                           ; Name         Instructions Cycles
 28772                           ; simple_byte            4     3 (average)
 28773                           ; direct_byte            8     6 (fixed)
 28774                           ; jumptable            260     6 (fixed)
 28775                           ;	Chosen strategy is simple_byte
 28776     106A  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 28777     106B  3A00               	xorlw	0	; case 0
 28778     106C  1903               	skipnz
 28779     106D  286F               	goto	l17547
 28780     106E  285D               	goto	l13539
 28781     106F                     l17547:
 28782                           
 28783                           ; Switch size 1, requested type "simple"
 28784                           ; Number of cases is 4, Range of values is 1 to 4
 28785                           ; switch strategies available:
 28786                           ; Name         Instructions Cycles
 28787                           ; simple_byte           13     7 (average)
 28788                           ; direct_byte           17     9 (fixed)
 28789                           ; jumptable            263     9 (fixed)
 28790                           ;	Chosen strategy is simple_byte
 28791     106F  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 28792     1070  3A01               	xorlw	1	; case 1
 28793     1071  1903               	skipnz
 28794     1072  285D               	goto	l13539
 28795     1073  3A03               	xorlw	3	; case 2
 28796     1074  1903               	skipnz
 28797     1075  2854               	goto	l13529
 28798     1076  3A01               	xorlw	1	; case 3
 28799     1077  1903               	skipnz
 28800     1078  2854               	goto	l13529
 28801     1079  3A07               	xorlw	7	; case 4
 28802     107A  1903               	skipnz
 28803     107B  2858               	goto	l13533
 28804     107C  285D               	goto	l13539
 28805     107D                     l1845:
 28806     107D  0008               	return
 28807     107E                     __end_of_I2C1_DO_TX_EMPTY:
 28808                           
 28809                           	psect	text135
 28810     1970                     __ptext135:	
 28811 ;; *************** function _I2C1_MasterSetIrq *****************
 28812 ;; Defined at:
 28813 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 28814 ;; Parameters:    Size  Location     Type
 28815 ;;		None
 28816 ;; Auto vars:     Size  Location     Type
 28817 ;;		None
 28818 ;; Return value:  Size  Location     Type
 28819 ;;                  1    wreg      void 
 28820 ;; Registers used:
 28821 ;;		None
 28822 ;; Tracked objects:
 28823 ;;		On entry : 0/0
 28824 ;;		On exit  : 0/0
 28825 ;;		Unchanged: 0/0
 28826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28831 ;;Total ram usage:        0 bytes
 28832 ;; Hardware stack levels used: 1
 28833 ;; Hardware stack levels required when called: 4
 28834 ;; This function calls:
 28835 ;;		Nothing
 28836 ;; This function is called by:
 28837 ;;		_I2C1_DO_TX_EMPTY
 28838 ;; This function uses a non-reentrant model
 28839 ;;
 28840                           
 28841     1970                     _I2C1_MasterSetIrq:	
 28842                           ;psect for function _I2C1_MasterSetIrq
 28843                           
 28844     1970                     l13417:	
 28845                           ;incstack = 0
 28846                           ; Regs used in _I2C1_MasterSetIrq: []
 28847                           
 28848                           
 28849                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 28850     1970  014E               	movlb	14	; select bank14
 28851     1971  140F               	bsf	15,0	;volatile
 28852     1972                     l1965:
 28853     1972  0008               	return
 28854     1973                     __end_of_I2C1_MasterSetIrq:
 28855                           
 28856                           	psect	text136
 28857     19DC                     __ptext136:	
 28858 ;; *************** function _I2C1_MasterIsNack *****************
 28859 ;; Defined at:
 28860 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 28861 ;; Parameters:    Size  Location     Type
 28862 ;;		None
 28863 ;; Auto vars:     Size  Location     Type
 28864 ;;		None
 28865 ;; Return value:  Size  Location     Type
 28866 ;;                  1    wreg      _Bool 
 28867 ;; Registers used:
 28868 ;;		wreg, status,2, status,0
 28869 ;; Tracked objects:
 28870 ;;		On entry : 0/0
 28871 ;;		On exit  : 0/0
 28872 ;;		Unchanged: 0/0
 28873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28878 ;;Total ram usage:        0 bytes
 28879 ;; Hardware stack levels used: 1
 28880 ;; Hardware stack levels required when called: 4
 28881 ;; This function calls:
 28882 ;;		Nothing
 28883 ;; This function is called by:
 28884 ;;		_I2C1_MasterFsm
 28885 ;;		_I2C1_DO_TX
 28886 ;; This function uses a non-reentrant model
 28887 ;;
 28888                           
 28889     19DC                     _I2C1_MasterIsNack:	
 28890                           ;psect for function _I2C1_MasterIsNack
 28891                           
 28892     19DC                     l13367:	
 28893                           ;incstack = 0
 28894                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 28895                           
 28896                           
 28897                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 28898     19DC  0143               	movlb	3	; select bank3
 28899     19DD  0E11               	swapf	17,w	;volatile
 28900     19DE  0C89               	rrf	9,f
 28901     19DF  0C89               	rrf	9,f
 28902     19E0  3901               	andlw	1
 28903     19E1                     l1938:
 28904     19E1  0008               	return
 28905     19E2                     __end_of_I2C1_MasterIsNack:
 28906                           
 28907                           	psect	text137
 28908     1996                     __ptext137:	
 28909 ;; *************** function _I2C1_MasterSendTxData *****************
 28910 ;; Defined at:
 28911 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 28912 ;; Parameters:    Size  Location     Type
 28913 ;;  data            1    wreg     unsigned char 
 28914 ;; Auto vars:     Size  Location     Type
 28915 ;;  data            1    1[COMMON] unsigned char 
 28916 ;; Return value:  Size  Location     Type
 28917 ;;                  1    wreg      void 
 28918 ;; Registers used:
 28919 ;;		wreg
 28920 ;; Tracked objects:
 28921 ;;		On entry : 0/0
 28922 ;;		On exit  : 0/0
 28923 ;;		Unchanged: 0/0
 28924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28929 ;;Total ram usage:        1 bytes
 28930 ;; Hardware stack levels used: 1
 28931 ;; Hardware stack levels required when called: 4
 28932 ;; This function calls:
 28933 ;;		Nothing
 28934 ;; This function is called by:
 28935 ;;		_I2C1_DO_SEND_ADR_READ
 28936 ;;		_I2C1_DO_SEND_ADR_WRITE
 28937 ;;		_I2C1_DO_TX
 28938 ;; This function uses a non-reentrant model
 28939 ;;
 28940                           
 28941     1996                     _I2C1_MasterSendTxData:	
 28942                           ;psect for function _I2C1_MasterSendTxData
 28943                           
 28944                           
 28945                           ;incstack = 0
 28946                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 28947                           ;I2C1_MasterSendTxData@data stored from wreg
 28948     1996  00F1               	movwf	I2C1_MasterSendTxData@data
 28949     1997                     l13371:
 28950                           
 28951                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 28952     1997  0871               	movf	I2C1_MasterSendTxData@data,w
 28953     1998  0143               	movlb	3	; select bank3
 28954     1999  008C               	movwf	12	;volatile
 28955     199A                     l1920:
 28956     199A  0008               	return
 28957     199B                     __end_of_I2C1_MasterSendTxData:
 28958                           
 28959                           	psect	text138
 28960     198A                     __ptext138:	
 28961 ;; *************** function _I2C1_MasterSendAck *****************
 28962 ;; Defined at:
 28963 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 28964 ;; Parameters:    Size  Location     Type
 28965 ;;		None
 28966 ;; Auto vars:     Size  Location     Type
 28967 ;;		None
 28968 ;; Return value:  Size  Location     Type
 28969 ;;                  1    wreg      void 
 28970 ;; Registers used:
 28971 ;;		None
 28972 ;; Tracked objects:
 28973 ;;		On entry : 0/0
 28974 ;;		On exit  : 0/0
 28975 ;;		Unchanged: 0/0
 28976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28981 ;;Total ram usage:        0 bytes
 28982 ;; Hardware stack levels used: 1
 28983 ;; Hardware stack levels required when called: 4
 28984 ;; This function calls:
 28985 ;;		Nothing
 28986 ;; This function is called by:
 28987 ;;		_I2C1_DO_RX
 28988 ;;		_I2C1_DO_RX_ACK
 28989 ;; This function uses a non-reentrant model
 28990 ;;
 28991                           
 28992     198A                     _I2C1_MasterSendAck:	
 28993                           ;psect for function _I2C1_MasterSendAck
 28994                           
 28995     198A                     l13395:	
 28996                           ;incstack = 0
 28997                           ; Regs used in _I2C1_MasterSendAck: []
 28998                           
 28999                           
 29000                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 29001     198A  0143               	movlb	3	; select bank3
 29002     198B  1291               	bcf	17,5	;volatile
 29003                           
 29004                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 29005     198C  1611               	bsf	17,4	;volatile
 29006     198D                     l1941:
 29007     198D  0008               	return
 29008     198E                     __end_of_I2C1_MasterSendAck:
 29009                           
 29010                           	psect	text139
 29011     196D                     __ptext139:	
 29012 ;; *************** function _I2C1_MasterGetRxData *****************
 29013 ;; Defined at:
 29014 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 29015 ;; Parameters:    Size  Location     Type
 29016 ;;		None
 29017 ;; Auto vars:     Size  Location     Type
 29018 ;;		None
 29019 ;; Return value:  Size  Location     Type
 29020 ;;                  1    wreg      unsigned char 
 29021 ;; Registers used:
 29022 ;;		wreg
 29023 ;; Tracked objects:
 29024 ;;		On entry : 0/0
 29025 ;;		On exit  : 0/0
 29026 ;;		Unchanged: 0/0
 29027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29032 ;;Total ram usage:        0 bytes
 29033 ;; Hardware stack levels used: 1
 29034 ;; Hardware stack levels required when called: 4
 29035 ;; This function calls:
 29036 ;;		Nothing
 29037 ;; This function is called by:
 29038 ;;		_I2C1_DO_RX
 29039 ;; This function uses a non-reentrant model
 29040 ;;
 29041                           
 29042     196D                     _I2C1_MasterGetRxData:	
 29043                           ;psect for function _I2C1_MasterGetRxData
 29044                           
 29045     196D                     l13391:	
 29046                           ;incstack = 0
 29047                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 29048                           
 29049                           
 29050                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 29051     196D  0143               	movlb	3	; select bank3
 29052     196E  080C               	movf	12,w	;volatile
 29053     196F                     l1917:
 29054     196F  0008               	return
 29055     1970                     __end_of_I2C1_MasterGetRxData:
 29056                           
 29057                           	psect	text140
 29058     1986                     __ptext140:	
 29059 ;; *************** function _I2C1_MasterSendNack *****************
 29060 ;; Defined at:
 29061 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 29062 ;; Parameters:    Size  Location     Type
 29063 ;;		None
 29064 ;; Auto vars:     Size  Location     Type
 29065 ;;		None
 29066 ;; Return value:  Size  Location     Type
 29067 ;;                  1    wreg      void 
 29068 ;; Registers used:
 29069 ;;		None
 29070 ;; Tracked objects:
 29071 ;;		On entry : 0/0
 29072 ;;		On exit  : 0/0
 29073 ;;		Unchanged: 0/0
 29074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29079 ;;Total ram usage:        0 bytes
 29080 ;; Hardware stack levels used: 1
 29081 ;; Hardware stack levels required when called: 4
 29082 ;; This function calls:
 29083 ;;		Nothing
 29084 ;; This function is called by:
 29085 ;;		_I2C1_DO_RX_NACK_STOP
 29086 ;;		_I2C1_DO_RX_NACK_RESTART
 29087 ;; This function uses a non-reentrant model
 29088 ;;
 29089                           
 29090     1986                     _I2C1_MasterSendNack:	
 29091                           ;psect for function _I2C1_MasterSendNack
 29092                           
 29093     1986                     l13289:	
 29094                           ;incstack = 0
 29095                           ; Regs used in _I2C1_MasterSendNack: []
 29096                           
 29097                           
 29098                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 29099     1986  0143               	movlb	3	; select bank3
 29100     1987  1691               	bsf	17,5	;volatile
 29101                           
 29102                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 29103     1988  1611               	bsf	17,4	;volatile
 29104     1989                     l1944:
 29105     1989  0008               	return
 29106     198A                     __end_of_I2C1_MasterSendNack:
 29107                           
 29108                           	psect	text141
 29109     196A                     __ptext141:	
 29110 ;; *************** function _I2C1_MasterStartRx *****************
 29111 ;; Defined at:
 29112 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 29113 ;; Parameters:    Size  Location     Type
 29114 ;;		None
 29115 ;; Auto vars:     Size  Location     Type
 29116 ;;		None
 29117 ;; Return value:  Size  Location     Type
 29118 ;;                  1    wreg      void 
 29119 ;; Registers used:
 29120 ;;		None
 29121 ;; Tracked objects:
 29122 ;;		On entry : 0/0
 29123 ;;		On exit  : 0/0
 29124 ;;		Unchanged: 0/0
 29125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29130 ;;Total ram usage:        0 bytes
 29131 ;; Hardware stack levels used: 1
 29132 ;; Hardware stack levels required when called: 4
 29133 ;; This function calls:
 29134 ;;		Nothing
 29135 ;; This function is called by:
 29136 ;;		_I2C1_DO_RCEN
 29137 ;; This function uses a non-reentrant model
 29138 ;;
 29139                           
 29140     196A                     _I2C1_MasterStartRx:	
 29141                           ;psect for function _I2C1_MasterStartRx
 29142                           
 29143     196A                     l13409:	
 29144                           ;incstack = 0
 29145                           ; Regs used in _I2C1_MasterStartRx: []
 29146                           
 29147                           
 29148                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 29149     196A  0143               	movlb	3	; select bank3
 29150     196B  1591               	bsf	17,3	;volatile
 29151     196C                     l1929:
 29152     196C  0008               	return
 29153     196D                     __end_of_I2C1_MasterStartRx:
 29154                           
 29155                           	psect	text142
 29156     1956                     __ptext142:	
 29157 ;; *************** function _I2C1_CallbackReturnReset *****************
 29158 ;; Defined at:
 29159 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 29160 ;; Parameters:    Size  Location     Type
 29161 ;;  funPtr          1    8[COMMON] PTR void 
 29162 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29163 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29164 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29165 ;; Auto vars:     Size  Location     Type
 29166 ;;		None
 29167 ;; Return value:  Size  Location     Type
 29168 ;;                  1    wreg      enum E363
 29169 ;; Registers used:
 29170 ;;		wreg
 29171 ;; Tracked objects:
 29172 ;;		On entry : 0/0
 29173 ;;		On exit  : 0/0
 29174 ;;		Unchanged: 0/0
 29175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29176 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29180 ;;Total ram usage:        1 bytes
 29181 ;; Hardware stack levels used: 1
 29182 ;; Hardware stack levels required when called: 4
 29183 ;; This function calls:
 29184 ;;		Nothing
 29185 ;; This function is called by:
 29186 ;;		_I2C1_Open
 29187 ;;		_I2C1_DO_TX
 29188 ;;		_I2C1_DO_RX
 29189 ;;		_I2C1_DO_TX_EMPTY
 29190 ;;		_I2C1_DO_ADDRESS_NACK
 29191 ;;		_I2C1_DO_RX_EMPTY
 29192 ;; This function uses a non-reentrant model
 29193 ;;
 29194                           
 29195     1956                     _I2C1_CallbackReturnReset:	
 29196                           ;psect for function _I2C1_CallbackReturnReset
 29197                           
 29198     1956                     l13423:	
 29199                           ;incstack = 0
 29200                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 29201                           
 29202                           
 29203                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 29204     1956  3005               	movlw	5
 29205     1957                     l1901:
 29206     1957  0008               	return
 29207     1958                     __end_of_I2C1_CallbackReturnReset:
 29208                           
 29209                           	psect	text143
 29210     1954                     __ptext143:	
 29211 ;; *************** function _I2C1_CallbackReturnStop *****************
 29212 ;; Defined at:
 29213 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 29214 ;; Parameters:    Size  Location     Type
 29215 ;;  funPtr          1    8[COMMON] PTR void 
 29216 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29217 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29218 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29219 ;; Auto vars:     Size  Location     Type
 29220 ;;		None
 29221 ;; Return value:  Size  Location     Type
 29222 ;;                  1    wreg      enum E363
 29223 ;; Registers used:
 29224 ;;		wreg
 29225 ;; Tracked objects:
 29226 ;;		On entry : 0/0
 29227 ;;		On exit  : 0/0
 29228 ;;		Unchanged: 0/0
 29229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29230 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29234 ;;Total ram usage:        1 bytes
 29235 ;; Hardware stack levels used: 1
 29236 ;; Hardware stack levels required when called: 4
 29237 ;; This function calls:
 29238 ;;		Nothing
 29239 ;; This function is called by:
 29240 ;;		_I2C1_Open
 29241 ;;		_I2C1_SetCallback
 29242 ;;		_I2C1_DO_TX
 29243 ;;		_I2C1_DO_RX
 29244 ;;		_I2C1_DO_TX_EMPTY
 29245 ;;		_I2C1_DO_ADDRESS_NACK
 29246 ;;		_I2C1_DO_RX_EMPTY
 29247 ;; This function uses a non-reentrant model
 29248 ;;
 29249                           
 29250     1954                     _I2C1_CallbackReturnStop:	
 29251                           ;psect for function _I2C1_CallbackReturnStop
 29252                           
 29253     1954                     l13419:	
 29254                           ;incstack = 0
 29255                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 29256                           
 29257                           
 29258                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 29259     1954  3001               	movlw	1
 29260     1955                     l1898:
 29261     1955  0008               	return
 29262     1956                     __end_of_I2C1_CallbackReturnStop:
 29263                           
 29264                           	psect	text144
 29265     1D40                     __ptext144:	
 29266 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1271 *****************
 29267 ;; Defined at:
 29268 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;  ptr             1    8[COMMON] PTR void 
 29271 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29272 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29273 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29274 ;; Auto vars:     Size  Location     Type
 29275 ;;		None
 29276 ;; Return value:  Size  Location     Type
 29277 ;;                  1    wreg      enum E363
 29278 ;; Registers used:
 29279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29280 ;; Tracked objects:
 29281 ;;		On entry : 0/0
 29282 ;;		On exit  : 0/0
 29283 ;;		Unchanged: 0/0
 29284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29289 ;;Total ram usage:        1 bytes
 29290 ;; Hardware stack levels used: 1
 29291 ;; Hardware stack levels required when called: 6
 29292 ;; This function calls:
 29293 ;;		_I2C1_SetBuffer
 29294 ;;		_I2C1_SetDataCompleteCallback
 29295 ;; This function is called by:
 29296 ;;		_I2C1_ReadDataBlock
 29297 ;;		_I2C1_DO_TX
 29298 ;;		_I2C1_DO_RX
 29299 ;;		_I2C1_DO_TX_EMPTY
 29300 ;;		_I2C1_DO_ADDRESS_NACK
 29301 ;;		_I2C1_DO_RX_EMPTY
 29302 ;; This function uses a non-reentrant model
 29303 ;;
 29304                           
 29305     1D40                     _rdBlkRegCompleteHandler@i2c1_master_example$F1271:	
 29306                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1271
 29307                           
 29308     1D40                     l13361:	
 29309                           ;incstack = 0
 29310                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1271: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 29311                           
 29312                           
 29313                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 29314     1D40  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr,w
 29315     1D41  0086               	movwf	6
 29316     1D42  0187               	clrf	7
 29317     1D43  3F40               	moviw [0]fsr1
 29318     1D44  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29319     1D45  3F41               	moviw [1]fsr1
 29320     1D46  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29321     1D47  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr,w
 29322     1D48  3E02               	addlw	2
 29323     1D49  0086               	movwf	6
 29324     1D4A  0187               	clrf	7
 29325     1D4B  0801               	movf	1,w
 29326     1D4C  319B  2346  319D   	fcall	_I2C1_SetBuffer
 29327                           
 29328                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 29329     1D4F  3000               	movlw	0
 29330     1D50  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29331     1D51  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29332     1D52  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29333     1D53  319A  22C5  319D   	fcall	_I2C1_SetDataCompleteCallback
 29334     1D56                     l13363:
 29335                           
 29336                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 29337     1D56  3002               	movlw	2
 29338     1D57                     l742:
 29339     1D57  0008               	return
 29340     1D58                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1271:
 29341                           
 29342                           	psect	text145
 29343     1BFA                     __ptext145:	
 29344 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1254 *****************
 29345 ;; Defined at:
 29346 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 29347 ;; Parameters:    Size  Location     Type
 29348 ;;  ptr             1    8[COMMON] PTR void 
 29349 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29350 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29351 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29352 ;; Auto vars:     Size  Location     Type
 29353 ;;		None
 29354 ;; Return value:  Size  Location     Type
 29355 ;;                  1    wreg      enum E363
 29356 ;; Registers used:
 29357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29358 ;; Tracked objects:
 29359 ;;		On entry : 0/0
 29360 ;;		On exit  : 0/0
 29361 ;;		Unchanged: 0/0
 29362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29367 ;;Total ram usage:        1 bytes
 29368 ;; Hardware stack levels used: 1
 29369 ;; Hardware stack levels required when called: 6
 29370 ;; This function calls:
 29371 ;;		_I2C1_SetBuffer
 29372 ;;		_I2C1_SetDataCompleteCallback
 29373 ;; This function is called by:
 29374 ;;		_I2C1_Write1ByteRegister
 29375 ;;		_I2C1_DO_TX
 29376 ;;		_I2C1_DO_RX
 29377 ;;		_I2C1_DO_TX_EMPTY
 29378 ;;		_I2C1_DO_ADDRESS_NACK
 29379 ;;		_I2C1_DO_RX_EMPTY
 29380 ;; This function uses a non-reentrant model
 29381 ;;
 29382                           
 29383     1BFA                     _wr1RegCompleteHandler@i2c1_master_example$F1254:	
 29384                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1254
 29385                           
 29386     1BFA                     l13345:	
 29387                           ;incstack = 0
 29388                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1254: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 29389                           
 29390                           
 29391                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 29392     1BFA  3001               	movlw	1
 29393     1BFB  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29394     1BFC  3000               	movlw	0
 29395     1BFD  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29396     1BFE  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1254@ptr,w
 29397     1BFF  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29398     1C02                     l13347:
 29399                           
 29400                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 29401     1C02  3000               	movlw	0
 29402     1C03  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29403     1C04  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29404     1C05  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29405     1C06  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29406     1C09                     l13349:
 29407                           
 29408                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 29409     1C09  3004               	movlw	4
 29410     1C0A                     l736:
 29411     1C0A  0008               	return
 29412     1C0B                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1254:
 29413                           
 29414                           	psect	text146
 29415     1BE9                     __ptext146:	
 29416 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1248 *****************
 29417 ;; Defined at:
 29418 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 29419 ;; Parameters:    Size  Location     Type
 29420 ;;  ptr             1    8[COMMON] PTR void 
 29421 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29422 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29423 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29424 ;; Auto vars:     Size  Location     Type
 29425 ;;		None
 29426 ;; Return value:  Size  Location     Type
 29427 ;;                  1    wreg      enum E363
 29428 ;; Registers used:
 29429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29430 ;; Tracked objects:
 29431 ;;		On entry : 0/0
 29432 ;;		On exit  : 0/0
 29433 ;;		Unchanged: 0/0
 29434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29439 ;;Total ram usage:        1 bytes
 29440 ;; Hardware stack levels used: 1
 29441 ;; Hardware stack levels required when called: 6
 29442 ;; This function calls:
 29443 ;;		_I2C1_SetBuffer
 29444 ;;		_I2C1_SetDataCompleteCallback
 29445 ;; This function is called by:
 29446 ;;		_I2C1_Read2ByteRegister
 29447 ;;		_I2C1_DO_TX
 29448 ;;		_I2C1_DO_RX
 29449 ;;		_I2C1_DO_TX_EMPTY
 29450 ;;		_I2C1_DO_ADDRESS_NACK
 29451 ;;		_I2C1_DO_RX_EMPTY
 29452 ;; This function uses a non-reentrant model
 29453 ;;
 29454                           
 29455     1BE9                     _rd2RegCompleteHandler@i2c1_master_example$F1248:	
 29456                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1248
 29457                           
 29458     1BE9                     l13337:	
 29459                           ;incstack = 0
 29460                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1248: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 29461                           
 29462                           
 29463                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 29464     1BE9  3002               	movlw	2
 29465     1BEA  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29466     1BEB  3000               	movlw	0
 29467     1BEC  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29468     1BED  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1248@ptr,w
 29469     1BEE  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29470     1BF1                     l13339:
 29471                           
 29472                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 29473     1BF1  3000               	movlw	0
 29474     1BF2  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29475     1BF3  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29476     1BF4  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29477     1BF5  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29478     1BF8                     l13341:
 29479                           
 29480                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 29481     1BF8  3002               	movlw	2
 29482     1BF9                     l733:
 29483     1BF9  0008               	return
 29484     1BFA                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1248:
 29485                           
 29486                           	psect	text147
 29487     1BD8                     __ptext147:	
 29488 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1237 *****************
 29489 ;; Defined at:
 29490 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 29491 ;; Parameters:    Size  Location     Type
 29492 ;;  ptr             1    8[COMMON] PTR void 
 29493 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29494 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29495 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29496 ;; Auto vars:     Size  Location     Type
 29497 ;;		None
 29498 ;; Return value:  Size  Location     Type
 29499 ;;                  1    wreg      enum E363
 29500 ;; Registers used:
 29501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29502 ;; Tracked objects:
 29503 ;;		On entry : 0/0
 29504 ;;		On exit  : 0/0
 29505 ;;		Unchanged: 0/0
 29506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29507 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29511 ;;Total ram usage:        1 bytes
 29512 ;; Hardware stack levels used: 1
 29513 ;; Hardware stack levels required when called: 6
 29514 ;; This function calls:
 29515 ;;		_I2C1_SetBuffer
 29516 ;;		_I2C1_SetDataCompleteCallback
 29517 ;; This function is called by:
 29518 ;;		_I2C1_Read1ByteRegister
 29519 ;;		_I2C1_DO_TX
 29520 ;;		_I2C1_DO_RX
 29521 ;;		_I2C1_DO_TX_EMPTY
 29522 ;;		_I2C1_DO_ADDRESS_NACK
 29523 ;;		_I2C1_DO_RX_EMPTY
 29524 ;; This function uses a non-reentrant model
 29525 ;;
 29526                           
 29527     1BD8                     _rd1RegCompleteHandler@i2c1_master_example$F1237:	
 29528                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1237
 29529                           
 29530     1BD8                     l13329:	
 29531                           ;incstack = 0
 29532                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1237: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 29533                           
 29534                           
 29535                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 29536     1BD8  3001               	movlw	1
 29537     1BD9  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29538     1BDA  3000               	movlw	0
 29539     1BDB  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29540     1BDC  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1237@ptr,w
 29541     1BDD  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29542     1BE0                     l13331:
 29543                           
 29544                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 29545     1BE0  3000               	movlw	0
 29546     1BE1  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29547     1BE2  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29548     1BE3  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29549     1BE4  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29550     1BE7                     l13333:
 29551                           
 29552                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 29553     1BE7  3002               	movlw	2
 29554     1BE8                     l730:
 29555     1BE8  0008               	return
 29556     1BE9                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1237:
 29557                           
 29558                           	psect	text148
 29559     1D28                     __ptext148:	
 29560 ;; *************** function _rdBlkRegCompleteHandler *****************
 29561 ;; Defined at:
 29562 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29563 ;; Parameters:    Size  Location     Type
 29564 ;;  p               1    8[COMMON] PTR void 
 29565 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29566 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29567 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29568 ;; Auto vars:     Size  Location     Type
 29569 ;;		None
 29570 ;; Return value:  Size  Location     Type
 29571 ;;                  1    wreg      enum E363
 29572 ;; Registers used:
 29573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29574 ;; Tracked objects:
 29575 ;;		On entry : 0/0
 29576 ;;		On exit  : 0/0
 29577 ;;		Unchanged: 0/0
 29578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29579 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29583 ;;Total ram usage:        1 bytes
 29584 ;; Hardware stack levels used: 1
 29585 ;; Hardware stack levels required when called: 6
 29586 ;; This function calls:
 29587 ;;		_I2C1_SetBuffer
 29588 ;;		_I2C1_SetDataCompleteCallback
 29589 ;; This function is called by:
 29590 ;;		_i2c_readDataBlock
 29591 ;;		_I2C1_DO_TX
 29592 ;;		_I2C1_DO_RX
 29593 ;;		_I2C1_DO_TX_EMPTY
 29594 ;;		_I2C1_DO_ADDRESS_NACK
 29595 ;;		_I2C1_DO_RX_EMPTY
 29596 ;; This function uses a non-reentrant model
 29597 ;;
 29598                           
 29599     1D28                     _rdBlkRegCompleteHandler:	
 29600                           ;psect for function _rdBlkRegCompleteHandler
 29601                           
 29602     1D28                     l13323:	
 29603                           ;incstack = 0
 29604                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 29605                           
 29606                           
 29607                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 29608     1D28  0878               	movf	rdBlkRegCompleteHandler@p,w
 29609     1D29  0086               	movwf	6
 29610     1D2A  0187               	clrf	7
 29611     1D2B  3F40               	moviw [0]fsr1
 29612     1D2C  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29613     1D2D  3F41               	moviw [1]fsr1
 29614     1D2E  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29615     1D2F  0878               	movf	rdBlkRegCompleteHandler@p,w
 29616     1D30  3E02               	addlw	2
 29617     1D31  0086               	movwf	6
 29618     1D32  0187               	clrf	7
 29619     1D33  0801               	movf	1,w
 29620     1D34  319B  2346  319D   	fcall	_I2C1_SetBuffer
 29621                           
 29622                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 29623     1D37  3000               	movlw	0
 29624     1D38  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29625     1D39  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29626     1D3A  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29627     1D3B  319A  22C5  319D   	fcall	_I2C1_SetDataCompleteCallback
 29628     1D3E                     l13325:
 29629                           
 29630                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 29631     1D3E  3002               	movlw	2
 29632     1D3F                     l561:
 29633     1D3F  0008               	return
 29634     1D40                     __end_of_rdBlkRegCompleteHandler:
 29635                           
 29636                           	psect	text149
 29637     1BC7                     __ptext149:	
 29638 ;; *************** function _wr2RegCompleteHandler *****************
 29639 ;; Defined at:
 29640 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29641 ;; Parameters:    Size  Location     Type
 29642 ;;  p               1    8[COMMON] PTR void 
 29643 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29644 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29645 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29646 ;; Auto vars:     Size  Location     Type
 29647 ;;		None
 29648 ;; Return value:  Size  Location     Type
 29649 ;;                  1    wreg      enum E363
 29650 ;; Registers used:
 29651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29652 ;; Tracked objects:
 29653 ;;		On entry : 0/0
 29654 ;;		On exit  : 0/0
 29655 ;;		Unchanged: 0/0
 29656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29661 ;;Total ram usage:        1 bytes
 29662 ;; Hardware stack levels used: 1
 29663 ;; Hardware stack levels required when called: 6
 29664 ;; This function calls:
 29665 ;;		_I2C1_SetBuffer
 29666 ;;		_I2C1_SetDataCompleteCallback
 29667 ;; This function is called by:
 29668 ;;		_i2c_write2ByteRegister
 29669 ;;		_I2C1_DO_TX
 29670 ;;		_I2C1_DO_RX
 29671 ;;		_I2C1_DO_TX_EMPTY
 29672 ;;		_I2C1_DO_ADDRESS_NACK
 29673 ;;		_I2C1_DO_RX_EMPTY
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677     1BC7                     _wr2RegCompleteHandler:	
 29678                           ;psect for function _wr2RegCompleteHandler
 29679                           
 29680     1BC7                     l13315:	
 29681                           ;incstack = 0
 29682                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 29683                           
 29684                           
 29685                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 29686     1BC7  3002               	movlw	2
 29687     1BC8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29688     1BC9  3000               	movlw	0
 29689     1BCA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29690     1BCB  0878               	movf	wr2RegCompleteHandler@p,w
 29691     1BCC  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29692     1BCF                     l13317:
 29693                           
 29694                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 29695     1BCF  3000               	movlw	0
 29696     1BD0  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29697     1BD1  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29698     1BD2  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29699     1BD3  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29700     1BD6                     l13319:
 29701                           
 29702                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 29703     1BD6  3004               	movlw	4
 29704     1BD7                     l549:
 29705     1BD7  0008               	return
 29706     1BD8                     __end_of_wr2RegCompleteHandler:
 29707                           
 29708                           	psect	text150
 29709     1BB6                     __ptext150:	
 29710 ;; *************** function _rd2RegCompleteHandler *****************
 29711 ;; Defined at:
 29712 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29713 ;; Parameters:    Size  Location     Type
 29714 ;;  p               1    8[COMMON] PTR void 
 29715 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29716 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29717 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29718 ;; Auto vars:     Size  Location     Type
 29719 ;;		None
 29720 ;; Return value:  Size  Location     Type
 29721 ;;                  1    wreg      enum E363
 29722 ;; Registers used:
 29723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29724 ;; Tracked objects:
 29725 ;;		On entry : 0/0
 29726 ;;		On exit  : 0/0
 29727 ;;		Unchanged: 0/0
 29728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29729 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29733 ;;Total ram usage:        1 bytes
 29734 ;; Hardware stack levels used: 1
 29735 ;; Hardware stack levels required when called: 6
 29736 ;; This function calls:
 29737 ;;		_I2C1_SetBuffer
 29738 ;;		_I2C1_SetDataCompleteCallback
 29739 ;; This function is called by:
 29740 ;;		_i2c_read2ByteRegister
 29741 ;;		_I2C1_DO_TX
 29742 ;;		_I2C1_DO_RX
 29743 ;;		_I2C1_DO_TX_EMPTY
 29744 ;;		_I2C1_DO_ADDRESS_NACK
 29745 ;;		_I2C1_DO_RX_EMPTY
 29746 ;; This function uses a non-reentrant model
 29747 ;;
 29748                           
 29749     1BB6                     _rd2RegCompleteHandler:	
 29750                           ;psect for function _rd2RegCompleteHandler
 29751                           
 29752     1BB6                     l13307:	
 29753                           ;incstack = 0
 29754                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 29755                           
 29756                           
 29757                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 29758     1BB6  3002               	movlw	2
 29759     1BB7  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29760     1BB8  3000               	movlw	0
 29761     1BB9  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29762     1BBA  0878               	movf	rd2RegCompleteHandler@p,w
 29763     1BBB  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29764     1BBE                     l13309:
 29765                           
 29766                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 29767     1BBE  3000               	movlw	0
 29768     1BBF  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29769     1BC0  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29770     1BC1  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29771     1BC2  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29772     1BC5                     l13311:
 29773                           
 29774                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 29775     1BC5  3002               	movlw	2
 29776     1BC6                     l537:
 29777     1BC6  0008               	return
 29778     1BC7                     __end_of_rd2RegCompleteHandler:
 29779                           
 29780                           	psect	text151
 29781     1BA5                     __ptext151:	
 29782 ;; *************** function _rd1RegCompleteHandler *****************
 29783 ;; Defined at:
 29784 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29785 ;; Parameters:    Size  Location     Type
 29786 ;;  p               1    8[COMMON] PTR void 
 29787 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29788 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29789 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29790 ;; Auto vars:     Size  Location     Type
 29791 ;;		None
 29792 ;; Return value:  Size  Location     Type
 29793 ;;                  1    wreg      enum E363
 29794 ;; Registers used:
 29795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29796 ;; Tracked objects:
 29797 ;;		On entry : 0/0
 29798 ;;		On exit  : 0/0
 29799 ;;		Unchanged: 0/0
 29800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29805 ;;Total ram usage:        1 bytes
 29806 ;; Hardware stack levels used: 1
 29807 ;; Hardware stack levels required when called: 6
 29808 ;; This function calls:
 29809 ;;		_I2C1_SetBuffer
 29810 ;;		_I2C1_SetDataCompleteCallback
 29811 ;; This function is called by:
 29812 ;;		_i2c_read1ByteRegister
 29813 ;;		_I2C1_DO_TX
 29814 ;;		_I2C1_DO_RX
 29815 ;;		_I2C1_DO_TX_EMPTY
 29816 ;;		_I2C1_DO_ADDRESS_NACK
 29817 ;;		_I2C1_DO_RX_EMPTY
 29818 ;; This function uses a non-reentrant model
 29819 ;;
 29820                           
 29821     1BA5                     _rd1RegCompleteHandler:	
 29822                           ;psect for function _rd1RegCompleteHandler
 29823                           
 29824     1BA5                     l13299:	
 29825                           ;incstack = 0
 29826                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 29827                           
 29828                           
 29829                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 29830     1BA5  3001               	movlw	1
 29831     1BA6  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29832     1BA7  3000               	movlw	0
 29833     1BA8  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29834     1BA9  0878               	movf	rd1RegCompleteHandler@p,w
 29835     1BAA  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29836     1BAD                     l13301:
 29837                           
 29838                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 29839     1BAD  3000               	movlw	0
 29840     1BAE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29841     1BAF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29842     1BB0  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29843     1BB1  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29844     1BB4                     l13303:
 29845                           
 29846                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 29847     1BB4  3002               	movlw	2
 29848     1BB5                     l522:
 29849     1BB5  0008               	return
 29850     1BB6                     __end_of_rd1RegCompleteHandler:
 29851                           
 29852                           	psect	text152
 29853     1B94                     __ptext152:	
 29854 ;; *************** function _wr1RegCompleteHandler *****************
 29855 ;; Defined at:
 29856 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29857 ;; Parameters:    Size  Location     Type
 29858 ;;  p               1    8[COMMON] PTR void 
 29859 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29860 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29861 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29862 ;; Auto vars:     Size  Location     Type
 29863 ;;		None
 29864 ;; Return value:  Size  Location     Type
 29865 ;;                  1    wreg      enum E363
 29866 ;; Registers used:
 29867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29868 ;; Tracked objects:
 29869 ;;		On entry : 0/0
 29870 ;;		On exit  : 0/0
 29871 ;;		Unchanged: 0/0
 29872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29877 ;;Total ram usage:        1 bytes
 29878 ;; Hardware stack levels used: 1
 29879 ;; Hardware stack levels required when called: 6
 29880 ;; This function calls:
 29881 ;;		_I2C1_SetBuffer
 29882 ;;		_I2C1_SetDataCompleteCallback
 29883 ;; This function is called by:
 29884 ;;		_i2c_write1ByteRegister
 29885 ;;		_I2C1_DO_TX
 29886 ;;		_I2C1_DO_RX
 29887 ;;		_I2C1_DO_TX_EMPTY
 29888 ;;		_I2C1_DO_ADDRESS_NACK
 29889 ;;		_I2C1_DO_RX_EMPTY
 29890 ;; This function uses a non-reentrant model
 29891 ;;
 29892                           
 29893     1B94                     _wr1RegCompleteHandler:	
 29894                           ;psect for function _wr1RegCompleteHandler
 29895                           
 29896     1B94                     l13291:	
 29897                           ;incstack = 0
 29898                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 29899                           
 29900                           
 29901                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 29902     1B94  3001               	movlw	1
 29903     1B95  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29904     1B96  3000               	movlw	0
 29905     1B97  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29906     1B98  0878               	movf	wr1RegCompleteHandler@p,w
 29907     1B99  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29908     1B9C                     l13293:
 29909                           
 29910                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 29911     1B9C  3000               	movlw	0
 29912     1B9D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29913     1B9E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29914     1B9F  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29915     1BA0  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29916     1BA3                     l13295:
 29917                           
 29918                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 29919     1BA3  3004               	movlw	4
 29920     1BA4                     l501:
 29921     1BA4  0008               	return
 29922     1BA5                     __end_of_wr1RegCompleteHandler:
 29923                           
 29924                           	psect	text153
 29925     1B83                     __ptext153:	
 29926 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1260 *****************
 29927 ;; Defined at:
 29928 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 29929 ;; Parameters:    Size  Location     Type
 29930 ;;  ptr             1    8[COMMON] PTR void 
 29931 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 29932 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 29933 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 29934 ;; Auto vars:     Size  Location     Type
 29935 ;;		None
 29936 ;; Return value:  Size  Location     Type
 29937 ;;                  1    wreg      enum E363
 29938 ;; Registers used:
 29939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29940 ;; Tracked objects:
 29941 ;;		On entry : 0/0
 29942 ;;		On exit  : 0/0
 29943 ;;		Unchanged: 0/0
 29944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29945 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29949 ;;Total ram usage:        1 bytes
 29950 ;; Hardware stack levels used: 1
 29951 ;; Hardware stack levels required when called: 6
 29952 ;; This function calls:
 29953 ;;		_I2C1_SetBuffer
 29954 ;;		_I2C1_SetDataCompleteCallback
 29955 ;; This function is called by:
 29956 ;;		_I2C1_Write2ByteRegister
 29957 ;;		_I2C1_DO_TX
 29958 ;;		_I2C1_DO_RX
 29959 ;;		_I2C1_DO_TX_EMPTY
 29960 ;;		_I2C1_DO_ADDRESS_NACK
 29961 ;;		_I2C1_DO_RX_EMPTY
 29962 ;; This function uses a non-reentrant model
 29963 ;;
 29964                           
 29965     1B83                     _wr2RegCompleteHandler@i2c1_master_example$F1260:	
 29966                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1260
 29967                           
 29968     1B83                     l13353:	
 29969                           ;incstack = 0
 29970                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1260: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 29971                           
 29972                           
 29973                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 29974     1B83  3002               	movlw	2
 29975     1B84  00F1               	movwf	I2C1_SetBuffer@bufferSize
 29976     1B85  3000               	movlw	0
 29977     1B86  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 29978     1B87  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1260@ptr,w
 29979     1B88  319B  2346  319B   	fcall	_I2C1_SetBuffer
 29980     1B8B                     l13355:
 29981                           
 29982                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 29983     1B8B  3000               	movlw	0
 29984     1B8C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 29985     1B8D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 29986     1B8E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 29987     1B8F  319A  22C5  319B   	fcall	_I2C1_SetDataCompleteCallback
 29988     1B92                     l13357:
 29989                           
 29990                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 29991     1B92  3004               	movlw	4
 29992     1B93                     l739:
 29993     1B93  0008               	return
 29994     1B94                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1260:
 29995                           
 29996                           	psect	text154
 29997     1AC5                     __ptext154:	
 29998 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 29999 ;; Defined at:
 30000 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 30001 ;; Parameters:    Size  Location     Type
 30002 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 30003 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1271(1), wr2RegCompleteHandler@i2c1_master_example$F1260(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1254(1), rd2RegCompleteHandler@i2c1_master_example$F1248(1), 
 30004 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1237(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 30005 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 30006 ;;  ptr             1    7[COMMON] PTR void 
 30007 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 30008 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 30009 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 30010 ;; Auto vars:     Size  Location     Type
 30011 ;;		None
 30012 ;; Return value:  Size  Location     Type
 30013 ;;                  1    wreg      void 
 30014 ;; Registers used:
 30015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30016 ;; Tracked objects:
 30017 ;;		On entry : 0/0
 30018 ;;		On exit  : 0/0
 30019 ;;		Unchanged: 0/0
 30020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30021 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30025 ;;Total ram usage:        3 bytes
 30026 ;; Hardware stack levels used: 1
 30027 ;; Hardware stack levels required when called: 5
 30028 ;; This function calls:
 30029 ;;		_I2C1_SetCallback
 30030 ;; This function is called by:
 30031 ;;		_wr1RegCompleteHandler
 30032 ;;		_i2c_write1ByteRegister
 30033 ;;		_rd1RegCompleteHandler
 30034 ;;		_i2c_read1ByteRegister
 30035 ;;		_rd2RegCompleteHandler
 30036 ;;		_wr2RegCompleteHandler
 30037 ;;		_rdBlkRegCompleteHandler
 30038 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 30039 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 30040 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 30041 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 30042 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 30043 ;;		_i2c_read2ByteRegister
 30044 ;;		_i2c_write2ByteRegister
 30045 ;;		_i2c_readDataBlock
 30046 ;;		_I2C1_Read1ByteRegister
 30047 ;;		_I2C1_Read2ByteRegister
 30048 ;;		_I2C1_Write1ByteRegister
 30049 ;;		_I2C1_Write2ByteRegister
 30050 ;;		_I2C1_ReadDataBlock
 30051 ;; This function uses a non-reentrant model
 30052 ;;
 30053                           
 30054     1AC5                     _I2C1_SetDataCompleteCallback:	
 30055                           ;psect for function _I2C1_SetDataCompleteCallback
 30056                           
 30057     1AC5                     l13283:	
 30058                           ;incstack = 0
 30059                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 30060                           
 30061                           
 30062                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 30063     1AC5  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 30064     1AC6  00F2               	movwf	I2C1_SetCallback@cb+1
 30065     1AC7  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 30066     1AC8  00F1               	movwf	I2C1_SetCallback@cb
 30067     1AC9  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 30068     1ACA  00F3               	movwf	I2C1_SetCallback@ptr
 30069     1ACB  3000               	movlw	0
 30070     1ACC  319E  26F2  319A   	fcall	_I2C1_SetCallback
 30071     1ACF                     l1772:
 30072     1ACF  0008               	return
 30073     1AD0                     __end_of_I2C1_SetDataCompleteCallback:
 30074                           
 30075                           	psect	text155
 30076     1EF2                     __ptext155:	
 30077 ;; *************** function _I2C1_SetCallback *****************
 30078 ;; Defined at:
 30079 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 30080 ;; Parameters:    Size  Location     Type
 30081 ;;  idx             1    wreg     enum E12583
 30082 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 30083 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1271(1), wr2RegCompleteHandler@i2c1_master_example$F1260(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1254(1), rd2RegCompleteHandler@i2c1_master_example$F1248(1), 
 30084 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1237(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 30085 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 30086 ;;  ptr             1    3[COMMON] PTR void 
 30087 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 30088 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 30089 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 30090 ;; Auto vars:     Size  Location     Type
 30091 ;;  idx             1    4[COMMON] enum E12583
 30092 ;; Return value:  Size  Location     Type
 30093 ;;                  1    wreg      void 
 30094 ;; Registers used:
 30095 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30096 ;; Tracked objects:
 30097 ;;		On entry : 0/0
 30098 ;;		On exit  : 0/0
 30099 ;;		Unchanged: 0/0
 30100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30105 ;;Total ram usage:        4 bytes
 30106 ;; Hardware stack levels used: 1
 30107 ;; Hardware stack levels required when called: 4
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_I2C1_SetDataCompleteCallback
 30112 ;;		_I2C1_SetAddressNackCallback
 30113 ;;		_I2C1_SetWriteCollisionCallback
 30114 ;;		_I2C1_SetDataNackCallback
 30115 ;;		_I2C1_SetTimeoutCallback
 30116 ;; This function uses a non-reentrant model
 30117 ;;
 30118                           
 30119     1EF2                     _I2C1_SetCallback:	
 30120                           ;psect for function _I2C1_SetCallback
 30121                           
 30122                           
 30123                           ;incstack = 0
 30124                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 30125                           ;I2C1_SetCallback@idx stored from wreg
 30126     1EF2  00F4               	movwf	I2C1_SetCallback@idx
 30127     1EF3                     l13271:
 30128                           
 30129                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 30130     1EF3  0871               	movf	I2C1_SetCallback@cb,w
 30131     1EF4  0472               	iorwf	I2C1_SetCallback@cb+1,w
 30132     1EF5  1903               	btfsc	3,2
 30133     1EF6  2EF8               	goto	u11541
 30134     1EF7  2EF9               	goto	u11540
 30135     1EF8                     u11541:
 30136     1EF8  2F08               	goto	l13275
 30137     1EF9                     u11540:
 30138     1EF9                     l13273:
 30139                           
 30140                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 30141     1EF9  3574               	lslf	I2C1_SetCallback@idx,w
 30142     1EFA  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 30143     1EFB  0086               	movwf	6
 30144     1EFC  0187               	clrf	7
 30145     1EFD  0871               	movf	I2C1_SetCallback@cb,w
 30146     1EFE  3FC0               	movwi [0]fsr1
 30147     1EFF  0872               	movf	I2C1_SetCallback@cb+1,w
 30148     1F00  3FC1               	movwi [1]fsr1
 30149                           
 30150                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 30151     1F01  0874               	movf	I2C1_SetCallback@idx,w
 30152     1F02  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 30153     1F03  0086               	movwf	6
 30154     1F04  0187               	clrf	7
 30155     1F05  0873               	movf	I2C1_SetCallback@ptr,w
 30156     1F06  0081               	movwf	1
 30157                           
 30158                           ;mcc_generated_files/i2c1_master.c: 304:     }
 30159     1F07  2F15               	goto	l1789
 30160     1F08                     l13275:
 30161                           
 30162                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 30163     1F08  3574               	lslf	I2C1_SetCallback@idx,w
 30164     1F09  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 30165     1F0A  0086               	movwf	6
 30166     1F0B  0187               	clrf	7
 30167     1F0C  3054               	movlw	low _I2C1_CallbackReturnStop
 30168     1F0D  3FC0               	movwi [0]fsr1
 30169     1F0E  3019               	movlw	high _I2C1_CallbackReturnStop
 30170     1F0F  3FC1               	movwi [1]fsr1
 30171                           
 30172                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 30173     1F10  0874               	movf	I2C1_SetCallback@idx,w
 30174     1F11  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 30175     1F12  0086               	movwf	6
 30176     1F13  0187               	clrf	7
 30177     1F14  0181               	clrf	1
 30178     1F15                     l1789:
 30179     1F15  0008               	return
 30180     1F16                     __end_of_I2C1_SetCallback:
 30181                           
 30182                           	psect	text156
 30183     1B46                     __ptext156:	
 30184 ;; *************** function _I2C1_SetBuffer *****************
 30185 ;; Defined at:
 30186 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 30187 ;; Parameters:    Size  Location     Type
 30188 ;;  buffer          1    wreg     PTR void 
 30189 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 30190 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 30191 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 30192 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 30193 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 30194 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 30195 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 30196 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 30197 ;;  bufferSize      2    1[COMMON] unsigned int 
 30198 ;; Auto vars:     Size  Location     Type
 30199 ;;  buffer          1    3[COMMON] PTR void 
 30200 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 30201 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 30202 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 30203 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 30204 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 30205 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 30206 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 30207 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 30208 ;; Return value:  Size  Location     Type
 30209 ;;                  1    wreg      void 
 30210 ;; Registers used:
 30211 ;;		wreg
 30212 ;; Tracked objects:
 30213 ;;		On entry : 0/0
 30214 ;;		On exit  : 0/0
 30215 ;;		Unchanged: 0/0
 30216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30221 ;;Total ram usage:        3 bytes
 30222 ;; Hardware stack levels used: 1
 30223 ;; Hardware stack levels required when called: 4
 30224 ;; This function calls:
 30225 ;;		Nothing
 30226 ;; This function is called by:
 30227 ;;		_wr1RegCompleteHandler
 30228 ;;		_i2c_write1ByteRegister
 30229 ;;		_rd1RegCompleteHandler
 30230 ;;		_i2c_read1ByteRegister
 30231 ;;		_rd2RegCompleteHandler
 30232 ;;		_wr2RegCompleteHandler
 30233 ;;		_rdBlkRegCompleteHandler
 30234 ;;		_i2c_readNBytes
 30235 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1237
 30236 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1248
 30237 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1254
 30238 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1260
 30239 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1271
 30240 ;;		_i2c_writeNBytes
 30241 ;;		_i2c_read2ByteRegister
 30242 ;;		_i2c_write2ByteRegister
 30243 ;;		_i2c_readDataBlock
 30244 ;;		_I2C1_Read1ByteRegister
 30245 ;;		_I2C1_Read2ByteRegister
 30246 ;;		_I2C1_Write1ByteRegister
 30247 ;;		_I2C1_Write2ByteRegister
 30248 ;;		_I2C1_WriteNBytes
 30249 ;;		_I2C1_ReadNBytes
 30250 ;;		_I2C1_ReadDataBlock
 30251 ;; This function uses a non-reentrant model
 30252 ;;
 30253                           
 30254     1B46                     _I2C1_SetBuffer:	
 30255                           ;psect for function _I2C1_SetBuffer
 30256                           
 30257                           
 30258                           ;incstack = 0
 30259                           ; Regs used in _I2C1_SetBuffer: [wreg]
 30260                           ;I2C1_SetBuffer@buffer stored from wreg
 30261     1B46  00F3               	movwf	I2C1_SetBuffer@buffer
 30262     1B47                     l13277:
 30263                           
 30264                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 30265     1B47  0141               	movlb	1	; select bank1
 30266     1B48  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 30267     1B49  2B4B               	goto	u11551
 30268     1B4A  2B4C               	goto	u11550
 30269     1B4B                     u11551:
 30270     1B4B  2B53               	goto	l1769
 30271     1B4C                     u11550:
 30272     1B4C                     l13279:
 30273                           
 30274                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 30275     1B4C  0873               	movf	I2C1_SetBuffer@buffer,w
 30276     1B4D  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 30277                           
 30278                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 30279     1B4E  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 30280     1B4F  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 30281     1B50  0871               	movf	I2C1_SetBuffer@bufferSize,w
 30282     1B51  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 30283     1B52                     l13281:
 30284                           
 30285                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 30286     1B52  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 30287     1B53                     l1769:
 30288     1B53  0008               	return
 30289     1B54                     __end_of_I2C1_SetBuffer:
 30290                           
 30291                           	psect	text157
 30292     1967                     __ptext157:	
 30293 ;; *************** function _I2C1_MasterStop *****************
 30294 ;; Defined at:
 30295 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 30296 ;; Parameters:    Size  Location     Type
 30297 ;;		None
 30298 ;; Auto vars:     Size  Location     Type
 30299 ;;		None
 30300 ;; Return value:  Size  Location     Type
 30301 ;;                  1    wreg      void 
 30302 ;; Registers used:
 30303 ;;		None
 30304 ;; Tracked objects:
 30305 ;;		On entry : 0/0
 30306 ;;		On exit  : 0/0
 30307 ;;		Unchanged: 0/0
 30308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30313 ;;Total ram usage:        0 bytes
 30314 ;; Hardware stack levels used: 1
 30315 ;; Hardware stack levels required when called: 4
 30316 ;; This function calls:
 30317 ;;		Nothing
 30318 ;; This function is called by:
 30319 ;;		_I2C1_DO_SEND_STOP
 30320 ;; This function uses a non-reentrant model
 30321 ;;
 30322                           
 30323     1967                     _I2C1_MasterStop:	
 30324                           ;psect for function _I2C1_MasterStop
 30325                           
 30326     1967                     l13287:	
 30327                           ;incstack = 0
 30328                           ; Regs used in _I2C1_MasterStop: []
 30329                           
 30330                           
 30331                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 30332     1967  0143               	movlb	3	; select bank3
 30333     1968  1511               	bsf	17,2	;volatile
 30334     1969                     l1935:
 30335     1969  0008               	return
 30336     196A                     __end_of_I2C1_MasterStop:
 30337                           
 30338                           	psect	text158
 30339     1964                     __ptext158:	
 30340 ;; *************** function _I2C1_MasterEnableRestart *****************
 30341 ;; Defined at:
 30342 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;		None
 30345 ;; Auto vars:     Size  Location     Type
 30346 ;;		None
 30347 ;; Return value:  Size  Location     Type
 30348 ;;                  1    wreg      void 
 30349 ;; Registers used:
 30350 ;;		None
 30351 ;; Tracked objects:
 30352 ;;		On entry : 0/0
 30353 ;;		On exit  : 0/0
 30354 ;;		Unchanged: 0/0
 30355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30360 ;;Total ram usage:        0 bytes
 30361 ;; Hardware stack levels used: 1
 30362 ;; Hardware stack levels required when called: 4
 30363 ;; This function calls:
 30364 ;;		Nothing
 30365 ;; This function is called by:
 30366 ;;		_I2C1_DO_SEND_RESTART_READ
 30367 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30368 ;;		_I2C1_DO_SEND_RESTART
 30369 ;;		_I2C1_DO_RX_EMPTY
 30370 ;; This function uses a non-reentrant model
 30371 ;;
 30372                           
 30373     1964                     _I2C1_MasterEnableRestart:	
 30374                           ;psect for function _I2C1_MasterEnableRestart
 30375                           
 30376     1964                     l13285:	
 30377                           ;incstack = 0
 30378                           ; Regs used in _I2C1_MasterEnableRestart: []
 30379                           
 30380                           
 30381                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 30382     1964  0143               	movlb	3	; select bank3
 30383     1965  1491               	bsf	17,1	;volatile
 30384     1966                     l1923:
 30385     1966  0008               	return
 30386     1967                     __end_of_I2C1_MasterEnableRestart:
 30387                           
 30388                           	psect	text159
 30389     1961                     __ptext159:	
 30390 ;; *************** function _I2C1_MasterStart *****************
 30391 ;; Defined at:
 30392 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 30393 ;; Parameters:    Size  Location     Type
 30394 ;;		None
 30395 ;; Auto vars:     Size  Location     Type
 30396 ;;		None
 30397 ;; Return value:  Size  Location     Type
 30398 ;;                  1    wreg      void 
 30399 ;; Registers used:
 30400 ;;		None
 30401 ;; Tracked objects:
 30402 ;;		On entry : 0/0
 30403 ;;		On exit  : 0/0
 30404 ;;		Unchanged: 0/0
 30405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30410 ;;Total ram usage:        0 bytes
 30411 ;; Hardware stack levels used: 1
 30412 ;; Hardware stack levels required when called: 4
 30413 ;; This function calls:
 30414 ;;		Nothing
 30415 ;; This function is called by:
 30416 ;;		_I2C1_MasterOperation
 30417 ;; This function uses a non-reentrant model
 30418 ;;
 30419                           
 30420     1961                     _I2C1_MasterStart:	
 30421                           ;psect for function _I2C1_MasterStart
 30422                           
 30423     1961                     l13601:	
 30424                           ;incstack = 0
 30425                           ; Regs used in _I2C1_MasterStart: []
 30426                           
 30427                           
 30428                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 30429     1961  0143               	movlb	3	; select bank3
 30430     1962  1411               	bsf	17,0	;volatile
 30431     1963                     l1932:
 30432     1963  0008               	return
 30433     1964                     __end_of_I2C1_MasterStart:
 30434                           
 30435                           	psect	text160
 30436     1D10                     __ptext160:	
 30437 ;; *************** function _I2C1_Close *****************
 30438 ;; Defined at:
 30439 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 30440 ;; Parameters:    Size  Location     Type
 30441 ;;		None
 30442 ;; Auto vars:     Size  Location     Type
 30443 ;;  returnValue     1    1[COMMON] enum E358
 30444 ;; Return value:  Size  Location     Type
 30445 ;;                  1    wreg      enum E358
 30446 ;; Registers used:
 30447 ;;		wreg, status,2, status,0, pclath, cstack
 30448 ;; Tracked objects:
 30449 ;;		On entry : 0/0
 30450 ;;		On exit  : 0/0
 30451 ;;		Unchanged: 0/0
 30452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30457 ;;Total ram usage:        1 bytes
 30458 ;; Hardware stack levels used: 1
 30459 ;; Hardware stack levels required when called: 5
 30460 ;; This function calls:
 30461 ;;		_I2C1_MasterClearIrq
 30462 ;;		_I2C1_MasterClose
 30463 ;;		_I2C1_MasterDisableIrq
 30464 ;; This function is called by:
 30465 ;;		_i2c_write1ByteRegister
 30466 ;;		_i2c_read1ByteRegister
 30467 ;;		_i2c_readNBytes
 30468 ;;		_i2c_writeNBytes
 30469 ;;		_i2c_read2ByteRegister
 30470 ;;		_i2c_write2ByteRegister
 30471 ;;		_i2c_readDataBlock
 30472 ;;		_I2C1_Read1ByteRegister
 30473 ;;		_I2C1_Read2ByteRegister
 30474 ;;		_I2C1_Write1ByteRegister
 30475 ;;		_I2C1_Write2ByteRegister
 30476 ;;		_I2C1_WriteNBytes
 30477 ;;		_I2C1_ReadNBytes
 30478 ;;		_I2C1_ReadDataBlock
 30479 ;; This function uses a non-reentrant model
 30480 ;;
 30481                           
 30482     1D10                     _I2C1_Close:	
 30483                           ;psect for function _I2C1_Close
 30484                           
 30485     1D10                     l13721:	
 30486                           ;incstack = 0
 30487                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 30488                           
 30489                           
 30490                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 30491     1D10  01F1               	clrf	I2C1_Close@returnValue
 30492     1D11  0AF1               	incf	I2C1_Close@returnValue,f
 30493                           
 30494                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 30495     1D12  0141               	movlb	1	; select bank1
 30496     1D13  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 30497     1D14  2D16               	goto	u11731
 30498     1D15  2D17               	goto	u11730
 30499     1D16                     u11731:
 30500     1D16  2D26               	goto	l13735
 30501     1D17                     u11730:
 30502     1D17                     l13723:
 30503                           
 30504                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 30505     1D17  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 30506     1D18                     l13725:
 30507                           
 30508                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 30509     1D18  30FF               	movlw	255
 30510     1D19  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 30511     1D1A                     l13727:
 30512                           
 30513                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 30514     1D1A  3199  2158  319D   	fcall	_I2C1_MasterClearIrq
 30515     1D1D                     l13729:
 30516                           
 30517                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 30518     1D1D  3199  215E  319D   	fcall	_I2C1_MasterDisableIrq
 30519     1D20                     l13731:
 30520                           
 30521                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 30522     1D20  3199  215B  319D   	fcall	_I2C1_MasterClose
 30523     1D23                     l13733:
 30524                           
 30525                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 30526     1D23  0141               	movlb	1	; select bank1
 30527     1D24  083B               	movf	(_I2C1_Status^(0+128)+27),w
 30528     1D25  00F1               	movwf	I2C1_Close@returnValue
 30529     1D26                     l13735:
 30530                           
 30531                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 30532     1D26  0871               	movf	I2C1_Close@returnValue,w
 30533     1D27                     l1750:
 30534     1D27  0008               	return
 30535     1D28                     __end_of_I2C1_Close:
 30536                           
 30537                           	psect	text161
 30538     195E                     __ptext161:	
 30539 ;; *************** function _I2C1_MasterDisableIrq *****************
 30540 ;; Defined at:
 30541 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 30542 ;; Parameters:    Size  Location     Type
 30543 ;;		None
 30544 ;; Auto vars:     Size  Location     Type
 30545 ;;		None
 30546 ;; Return value:  Size  Location     Type
 30547 ;;                  1    wreg      void 
 30548 ;; Registers used:
 30549 ;;		None
 30550 ;; Tracked objects:
 30551 ;;		On entry : 0/0
 30552 ;;		On exit  : 0/0
 30553 ;;		Unchanged: 0/0
 30554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30559 ;;Total ram usage:        0 bytes
 30560 ;; Hardware stack levels used: 1
 30561 ;; Hardware stack levels required when called: 4
 30562 ;; This function calls:
 30563 ;;		Nothing
 30564 ;; This function is called by:
 30565 ;;		_I2C1_Close
 30566 ;;		_I2C1_SetTimeOut
 30567 ;; This function uses a non-reentrant model
 30568 ;;
 30569                           
 30570     195E                     _I2C1_MasterDisableIrq:	
 30571                           ;psect for function _I2C1_MasterDisableIrq
 30572                           
 30573     195E                     l13659:	
 30574                           ;incstack = 0
 30575                           ; Regs used in _I2C1_MasterDisableIrq: []
 30576                           
 30577                           
 30578                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 30579     195E  014E               	movlb	14	; select bank14
 30580     195F  1019               	bcf	25,0	;volatile
 30581     1960                     l1959:
 30582     1960  0008               	return
 30583     1961                     __end_of_I2C1_MasterDisableIrq:
 30584                           
 30585                           	psect	text162
 30586     195B                     __ptext162:	
 30587 ;; *************** function _I2C1_MasterClose *****************
 30588 ;; Defined at:
 30589 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 30590 ;; Parameters:    Size  Location     Type
 30591 ;;		None
 30592 ;; Auto vars:     Size  Location     Type
 30593 ;;		None
 30594 ;; Return value:  Size  Location     Type
 30595 ;;                  1    wreg      void 
 30596 ;; Registers used:
 30597 ;;		None
 30598 ;; Tracked objects:
 30599 ;;		On entry : 0/0
 30600 ;;		On exit  : 0/0
 30601 ;;		Unchanged: 0/0
 30602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30607 ;;Total ram usage:        0 bytes
 30608 ;; Hardware stack levels used: 1
 30609 ;; Hardware stack levels required when called: 4
 30610 ;; This function calls:
 30611 ;;		Nothing
 30612 ;; This function is called by:
 30613 ;;		_I2C1_Close
 30614 ;; This function uses a non-reentrant model
 30615 ;;
 30616                           
 30617     195B                     _I2C1_MasterClose:	
 30618                           ;psect for function _I2C1_MasterClose
 30619                           
 30620     195B                     l13661:	
 30621                           ;incstack = 0
 30622                           ; Regs used in _I2C1_MasterClose: []
 30623                           
 30624                           
 30625                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 30626     195B  0143               	movlb	3	; select bank3
 30627     195C  1290               	bcf	16,5	;volatile
 30628     195D                     l1914:
 30629     195D  0008               	return
 30630     195E                     __end_of_I2C1_MasterClose:
 30631                           
 30632                           	psect	text163
 30633     1958                     __ptext163:	
 30634 ;; *************** function _I2C1_MasterClearIrq *****************
 30635 ;; Defined at:
 30636 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 30637 ;; Parameters:    Size  Location     Type
 30638 ;;		None
 30639 ;; Auto vars:     Size  Location     Type
 30640 ;;		None
 30641 ;; Return value:  Size  Location     Type
 30642 ;;                  1    wreg      void 
 30643 ;; Registers used:
 30644 ;;		None
 30645 ;; Tracked objects:
 30646 ;;		On entry : 0/0
 30647 ;;		On exit  : 0/0
 30648 ;;		Unchanged: 0/0
 30649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30654 ;;Total ram usage:        0 bytes
 30655 ;; Hardware stack levels used: 1
 30656 ;; Hardware stack levels required when called: 4
 30657 ;; This function calls:
 30658 ;;		Nothing
 30659 ;; This function is called by:
 30660 ;;		_I2C1_Open
 30661 ;;		_I2C1_Close
 30662 ;;		_I2C1_MasterFsm
 30663 ;; This function uses a non-reentrant model
 30664 ;;
 30665                           
 30666     1958                     _I2C1_MasterClearIrq:	
 30667                           ;psect for function _I2C1_MasterClearIrq
 30668                           
 30669     1958                     l13427:	
 30670                           ;incstack = 0
 30671                           ; Regs used in _I2C1_MasterClearIrq: []
 30672                           
 30673                           
 30674                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 30675     1958  014E               	movlb	14	; select bank14
 30676     1959  100F               	bcf	15,0	;volatile
 30677     195A                     l1962:
 30678     195A  0008               	return
 30679     195B                     __end_of_I2C1_MasterClearIrq:
 30680                           
 30681                           	psect	intentry
 30682     0004                     __pintentry:	
 30683 ;; *************** function _INTERRUPT_InterruptManager *****************
 30684 ;; Defined at:
 30685 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;		None
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;		None
 30690 ;; Return value:  Size  Location     Type
 30691 ;;                  1    wreg      void 
 30692 ;; Registers used:
 30693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30694 ;; Tracked objects:
 30695 ;;		On entry : 0/0
 30696 ;;		On exit  : 0/0
 30697 ;;		Unchanged: 0/0
 30698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30703 ;;Total ram usage:        0 bytes
 30704 ;; Hardware stack levels used: 1
 30705 ;; Hardware stack levels required when called: 3
 30706 ;; This function calls:
 30707 ;;		NULL
 30708 ;;		_EUSART1_Receive_ISR
 30709 ;;		_EUSART1_Transmit_ISR
 30710 ;;		_EUSART2_Receive_ISR
 30711 ;;		_EUSART2_Transmit_ISR
 30712 ;;		_PIN_MANAGER_IOC
 30713 ;; This function is called by:
 30714 ;;		Interrupt level 1
 30715 ;; This function uses a non-reentrant model
 30716 ;;
 30717                           
 30718     0004                     _INTERRUPT_InterruptManager:
 30719                           
 30720                           ;incstack = 0
 30721 ;; hardware stack exceeded
 30722     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 30723                           
 30724                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 30725     0005  3180               	pagesel	$
 30726     0006                     i1l11601:
 30727                           
 30728                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 30729     0006  014E               	movlb	14	; select bank14
 30730     0007  1E16               	btfss	22,4	;volatile
 30731     0008  280A               	goto	u958_21
 30732     0009  280B               	goto	u958_20
 30733     000A                     u958_21:
 30734     000A  2813               	goto	i1l1295
 30735     000B                     u958_20:
 30736     000B                     i1l11603:
 30737     000B  1E0C               	btfss	12,4	;volatile
 30738     000C  280E               	goto	u959_21
 30739     000D  280F               	goto	u959_20
 30740     000E                     u959_21:
 30741     000E  2813               	goto	i1l1295
 30742     000F                     u959_20:
 30743     000F                     i1l11605:
 30744                           
 30745                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 30746     000F  319A  2266  3180   	fcall	_PIN_MANAGER_IOC
 30747                           
 30748                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 30749     0012  2853               	goto	i1l1307
 30750     0013                     i1l1295:	
 30751                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 30752                           
 30753     0013  1F0B               	btfss	11,6	;volatile
 30754     0014  2816               	goto	u960_21
 30755     0015  2817               	goto	u960_20
 30756     0016                     u960_21:
 30757     0016  2853               	goto	i1l1307
 30758     0017                     u960_20:
 30759     0017                     i1l11607:
 30760                           
 30761                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 30762     0017  1F19               	btfss	25,6	;volatile
 30763     0018  281A               	goto	u961_21
 30764     0019  281B               	goto	u961_20
 30765     001A                     u961_21:
 30766     001A  2826               	goto	i1l1298
 30767     001B                     u961_20:
 30768     001B                     i1l11609:
 30769     001B  1F0F               	btfss	15,6	;volatile
 30770     001C  281E               	goto	u962_21
 30771     001D  281F               	goto	u962_20
 30772     001E                     u962_21:
 30773     001E  2826               	goto	i1l1298
 30774     001F                     u962_20:
 30775     001F                     i1l11611:
 30776                           
 30777                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 30778     001F  0141               	movlb	1	; select bank1
 30779     0020  0869               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 30780     0021  008A               	movwf	10
 30781     0022  0868               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 30782     0023  000A               	callw
 30783     0024  3180               	pagesel	$
 30784                           
 30785                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 30786     0025  2853               	goto	i1l1307
 30787     0026                     i1l1298:	
 30788                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 30789                           
 30790     0026  1F99               	btfss	25,7	;volatile
 30791     0027  2829               	goto	u963_21
 30792     0028  282A               	goto	u963_20
 30793     0029                     u963_21:
 30794     0029  2835               	goto	i1l1300
 30795     002A                     u963_20:
 30796     002A                     i1l11613:
 30797     002A  1F8F               	btfss	15,7	;volatile
 30798     002B  282D               	goto	u964_21
 30799     002C  282E               	goto	u964_20
 30800     002D                     u964_21:
 30801     002D  2835               	goto	i1l1300
 30802     002E                     u964_20:
 30803     002E                     i1l11615:
 30804                           
 30805                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 30806     002E  0142               	movlb	2	; select bank2
 30807     002F  086F               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256),w
 30808     0030  008A               	movwf	10
 30809     0031  086E               	movf	_EUSART2_RxDefaultInterruptHandler^(0+256),w
 30810     0032  000A               	callw
 30811     0033  3180               	pagesel	$
 30812                           
 30813                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 30814     0034  2853               	goto	i1l1307
 30815     0035                     i1l1300:	
 30816                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 30817                           
 30818     0035  1E19               	btfss	25,4	;volatile
 30819     0036  2838               	goto	u965_21
 30820     0037  2839               	goto	u965_20
 30821     0038                     u965_21:
 30822     0038  2844               	goto	i1l1302
 30823     0039                     u965_20:
 30824     0039                     i1l11617:
 30825     0039  1E0F               	btfss	15,4	;volatile
 30826     003A  283C               	goto	u966_21
 30827     003B  283D               	goto	u966_20
 30828     003C                     u966_21:
 30829     003C  2844               	goto	i1l1302
 30830     003D                     u966_20:
 30831     003D                     i1l11619:
 30832                           
 30833                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 30834     003D  0143               	movlb	3	; select bank3
 30835     003E  083A               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 30836     003F  008A               	movwf	10
 30837     0040  0839               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 30838     0041  000A               	callw
 30839     0042  3180               	pagesel	$
 30840                           
 30841                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 30842     0043  2853               	goto	i1l1307
 30843     0044                     i1l1302:	
 30844                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 30845                           
 30846     0044  1E99               	btfss	25,5	;volatile
 30847     0045  2847               	goto	u967_21
 30848     0046  2848               	goto	u967_20
 30849     0047                     u967_21:
 30850     0047  2853               	goto	i1l1301
 30851     0048                     u967_20:
 30852     0048                     i1l11621:
 30853     0048  1E8F               	btfss	15,5	;volatile
 30854     0049  284B               	goto	u968_21
 30855     004A  284C               	goto	u968_20
 30856     004B                     u968_21:
 30857     004B  2853               	goto	i1l1301
 30858     004C                     u968_20:
 30859     004C                     i1l11623:
 30860                           
 30861                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 30862     004C  0143               	movlb	3	; select bank3
 30863     004D  0838               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 30864     004E  008A               	movwf	10
 30865     004F  0837               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 30866     0050  000A               	callw
 30867     0051  3180               	pagesel	$
 30868                           
 30869                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 30870     0052  2853               	goto	i1l1307
 30871     0053                     i1l1301:
 30872     0053                     i1l1307:
 30873     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 30874     0054  0009               	retfie
 30875     0055                     __end_of_INTERRUPT_InterruptManager:
 30876                           
 30877                           	psect	text165
 30878     1A66                     __ptext165:	
 30879 ;; *************** function _PIN_MANAGER_IOC *****************
 30880 ;; Defined at:
 30881 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 30882 ;; Parameters:    Size  Location     Type
 30883 ;;		None
 30884 ;; Auto vars:     Size  Location     Type
 30885 ;;		None
 30886 ;; Return value:  Size  Location     Type
 30887 ;;                  1    wreg      void 
 30888 ;; Registers used:
 30889 ;;		wreg, status,2, status,0, pclath, cstack
 30890 ;; Tracked objects:
 30891 ;;		On entry : 0/0
 30892 ;;		On exit  : 0/0
 30893 ;;		Unchanged: 0/0
 30894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30899 ;;Total ram usage:        0 bytes
 30900 ;; Hardware stack levels used: 1
 30901 ;; Hardware stack levels required when called: 2
 30902 ;; This function calls:
 30903 ;;		_IOCAF6_ISR
 30904 ;; This function is called by:
 30905 ;;		_INTERRUPT_InterruptManager
 30906 ;; This function uses a non-reentrant model
 30907 ;;
 30908                           
 30909     1A66                     _PIN_MANAGER_IOC:	
 30910                           ;psect for function _PIN_MANAGER_IOC
 30911                           
 30912     1A66                     i1l11023:	
 30913                           ;incstack = 0
 30914 ;; hardware stack exceeded
 30915                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 30916                           
 30917                           
 30918                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 30919     1A66  017E               	movlb	62	; select bank62
 30920     1A67  1F3F               	btfss	63,6	;volatile
 30921     1A68  2A6A               	goto	u900_21
 30922     1A69  2A6B               	goto	u900_20
 30923     1A6A                     u900_21:
 30924     1A6A  2A6E               	goto	i1l1447
 30925     1A6B                     u900_20:
 30926     1A6B                     i1l11025:
 30927                           
 30928                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 30929     1A6B  319B  2354  319A   	fcall	_IOCAF6_ISR
 30930     1A6E                     i1l1447:
 30931     1A6E  0008               	return
 30932     1A6F                     __end_of_PIN_MANAGER_IOC:
 30933                           
 30934                           	psect	text166
 30935     1B54                     __ptext166:	
 30936 ;; *************** function _IOCAF6_ISR *****************
 30937 ;; Defined at:
 30938 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;		None
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;		None
 30943 ;; Return value:  Size  Location     Type
 30944 ;;                  1    wreg      void 
 30945 ;; Registers used:
 30946 ;;		wreg, status,2, status,0, pclath, cstack
 30947 ;; Tracked objects:
 30948 ;;		On entry : 0/0
 30949 ;;		On exit  : 0/0
 30950 ;;		Unchanged: 0/0
 30951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30956 ;;Total ram usage:        0 bytes
 30957 ;; Hardware stack levels used: 1
 30958 ;; Hardware stack levels required when called: 1
 30959 ;; This function calls:
 30960 ;;		NULL
 30961 ;;		_IOCAF6_DefaultInterruptHandler
 30962 ;; This function is called by:
 30963 ;;		_PIN_MANAGER_IOC
 30964 ;; This function uses a non-reentrant model
 30965 ;;
 30966                           
 30967     1B54                     _IOCAF6_ISR:	
 30968                           ;psect for function _IOCAF6_ISR
 30969                           
 30970     1B54                     i1l10065:	
 30971                           ;incstack = 0
 30972 ;; hardware stack exceeded
 30973                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 30974                           
 30975                           
 30976                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 30977     1B54  0141               	movlb	1	; select bank1
 30978     1B55  0866               	movf	_IOCAF6_InterruptHandler^(0+128),w
 30979     1B56  0467               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 30980     1B57  1903               	btfsc	3,2
 30981     1B58  2B5A               	goto	u770_21
 30982     1B59  2B5B               	goto	u770_20
 30983     1B5A                     u770_21:
 30984     1B5A  2B60               	goto	i1l10069
 30985     1B5B                     u770_20:
 30986     1B5B                     i1l10067:
 30987                           
 30988                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 30989     1B5B  0867               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 30990     1B5C  008A               	movwf	10
 30991     1B5D  0866               	movf	_IOCAF6_InterruptHandler^(0+128),w
 30992     1B5E  000A               	callw
 30993     1B5F  319B               	pagesel	$
 30994     1B60                     i1l10069:
 30995                           
 30996                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 30997     1B60  017E               	movlb	62	; select bank62
 30998     1B61  133F               	bcf	63,6	;volatile
 30999     1B62                     i1l1451:
 31000     1B62  0008               	return
 31001     1B63                     __end_of_IOCAF6_ISR:
 31002                           
 31003                           	psect	text167
 31004     07FF                     __ptext167:	
 31005 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 31006 ;; Defined at:
 31007 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 31008 ;; Parameters:    Size  Location     Type
 31009 ;;		None
 31010 ;; Auto vars:     Size  Location     Type
 31011 ;;		None
 31012 ;; Return value:  Size  Location     Type
 31013 ;;                  1    wreg      void 
 31014 ;; Registers used:
 31015 ;;		None
 31016 ;; Tracked objects:
 31017 ;;		On entry : 0/0
 31018 ;;		On exit  : 0/0
 31019 ;;		Unchanged: 0/0
 31020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31025 ;;Total ram usage:        0 bytes
 31026 ;; Hardware stack levels used: 1
 31027 ;; This function calls:
 31028 ;;		Nothing
 31029 ;; This function is called by:
 31030 ;;		_PIN_MANAGER_Initialize
 31031 ;;		_IOCAF6_ISR
 31032 ;; This function uses a non-reentrant model
 31033 ;;
 31034                           
 31035     07FF                     _IOCAF6_DefaultInterruptHandler:	
 31036                           ;psect for function _IOCAF6_DefaultInterruptHandler
 31037                           
 31038     07FF                     i1l1457:	
 31039                           ;incstack = 0
 31040 ;; hardware stack exceeded
 31041                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 31042                           
 31043     07FF  0008               	return
 31044     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 31045                           
 31046                           	psect	text168
 31047     1EAC                     __ptext168:	
 31048 ;; *************** function _EUSART1_Transmit_ISR *****************
 31049 ;; Defined at:
 31050 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 31051 ;; Parameters:    Size  Location     Type
 31052 ;;		None
 31053 ;; Auto vars:     Size  Location     Type
 31054 ;;		None
 31055 ;; Return value:  Size  Location     Type
 31056 ;;                  1    wreg      void 
 31057 ;; Registers used:
 31058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 31059 ;; Tracked objects:
 31060 ;;		On entry : 0/0
 31061 ;;		On exit  : 0/0
 31062 ;;		Unchanged: 0/0
 31063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31068 ;;Total ram usage:        1 bytes
 31069 ;; Hardware stack levels used: 1
 31070 ;; This function calls:
 31071 ;;		Nothing
 31072 ;; This function is called by:
 31073 ;;		_EUSART1_Initialize
 31074 ;;		_INTERRUPT_InterruptManager
 31075 ;; This function uses a non-reentrant model
 31076 ;;
 31077                           
 31078     1EAC                     _EUSART1_Transmit_ISR:	
 31079                           ;psect for function _EUSART1_Transmit_ISR
 31080                           
 31081     1EAC                     i1l10991:	
 31082                           ;incstack = 0
 31083                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 31084                           
 31085                           
 31086                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 31087     1EAC  3008               	movlw	8
 31088     1EAD  0141               	movlb	1	; select bank1
 31089     1EAE  024C               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 31090     1EAF  1803               	skipnc
 31091     1EB0  2EB2               	goto	u895_21
 31092     1EB1  2EB3               	goto	u895_20
 31093     1EB2                     u895_21:
 31094     1EB2  2ECC               	goto	i1l1232
 31095     1EB3                     u895_20:
 31096     1EB3                     i1l10993:
 31097                           
 31098                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 31099     1EB3  084D               	movf	_eusart1TxTail^(0+128),w
 31100     1EB4  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 31101     1EB5  0086               	movwf	6
 31102     1EB6  3001               	movlw	1	; select bank2/3
 31103     1EB7  0087               	movwf	7
 31104     1EB8  0801               	movf	1,w
 31105     1EB9  0142               	movlb	2	; select bank2
 31106     1EBA  009A               	movwf	26	;volatile
 31107     1EBB                     i1l10995:
 31108     1EBB  3001               	movlw	1
 31109     1EBC  00F0               	movwf	??_EUSART1_Transmit_ISR
 31110     1EBD  0870               	movf	??_EUSART1_Transmit_ISR,w
 31111     1EBE  0141               	movlb	1	; select bank1
 31112     1EBF  07CD               	addwf	_eusart1TxTail^(0+128),f	;volatile
 31113     1EC0                     i1l10997:
 31114                           
 31115                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 31116     1EC0  3008               	movlw	8
 31117     1EC1  024D               	subwf	_eusart1TxTail^(0+128),w	;volatile
 31118     1EC2  1C03               	skipc
 31119     1EC3  2EC5               	goto	u896_21
 31120     1EC4  2EC6               	goto	u896_20
 31121     1EC5                     u896_21:
 31122     1EC5  2EC7               	goto	i1l11001
 31123     1EC6                     u896_20:
 31124     1EC6                     i1l10999:
 31125                           
 31126                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 31127     1EC6  01CD               	clrf	_eusart1TxTail^(0+128)	;volatile
 31128     1EC7                     i1l11001:
 31129                           
 31130                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 31131     1EC7  3001               	movlw	1
 31132     1EC8  00F0               	movwf	??_EUSART1_Transmit_ISR
 31133     1EC9  0870               	movf	??_EUSART1_Transmit_ISR,w
 31134     1ECA  07CC               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 31135                           
 31136                           ;mcc_generated_files/eusart1.c: 218:     }
 31137     1ECB  2ECE               	goto	i1l1235
 31138     1ECC                     i1l1232:	
 31139                           ;mcc_generated_files/eusart1.c: 219:     else
 31140                           
 31141                           
 31142                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 31143     1ECC  014E               	movlb	14	; select bank14
 31144     1ECD  1219               	bcf	25,4	;volatile
 31145     1ECE                     i1l1235:
 31146     1ECE  0008               	return
 31147     1ECF                     __end_of_EUSART1_Transmit_ISR:
 31148                           
 31149                           	psect	text169
 31150     1E89                     __ptext169:	
 31151 ;; *************** function _EUSART2_Transmit_ISR *****************
 31152 ;; Defined at:
 31153 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 31154 ;; Parameters:    Size  Location     Type
 31155 ;;		None
 31156 ;; Auto vars:     Size  Location     Type
 31157 ;;		None
 31158 ;; Return value:  Size  Location     Type
 31159 ;;                  1    wreg      void 
 31160 ;; Registers used:
 31161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 31162 ;; Tracked objects:
 31163 ;;		On entry : 0/0
 31164 ;;		On exit  : 0/0
 31165 ;;		Unchanged: 0/0
 31166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31171 ;;Total ram usage:        1 bytes
 31172 ;; Hardware stack levels used: 1
 31173 ;; This function calls:
 31174 ;;		Nothing
 31175 ;; This function is called by:
 31176 ;;		_EUSART2_Initialize
 31177 ;;		_INTERRUPT_InterruptManager
 31178 ;; This function uses a non-reentrant model
 31179 ;;
 31180                           
 31181     1E89                     _EUSART2_Transmit_ISR:	
 31182                           ;psect for function _EUSART2_Transmit_ISR
 31183                           
 31184     1E89                     i1l10959:	
 31185                           ;incstack = 0
 31186                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 31187                           
 31188                           
 31189                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 31190     1E89  3008               	movlw	8
 31191     1E8A  0141               	movlb	1	; select bank1
 31192     1E8B  0252               	subwf	_eusart2TxBufferRemaining^(0+128),w	;volatile
 31193     1E8C  1803               	skipnc
 31194     1E8D  2E8F               	goto	u890_21
 31195     1E8E  2E90               	goto	u890_20
 31196     1E8F                     u890_21:
 31197     1E8F  2EA9               	goto	i1l1082
 31198     1E90                     u890_20:
 31199     1E90                     i1l10961:
 31200                           
 31201                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 31202     1E90  0853               	movf	_eusart2TxTail^(0+128),w
 31203     1E91  3E64               	addlw	(low (_eusart2TxBuffer| (0+256)))& (0+255)
 31204     1E92  0086               	movwf	6
 31205     1E93  3001               	movlw	1	; select bank2/3
 31206     1E94  0087               	movwf	7
 31207     1E95  0801               	movf	1,w
 31208     1E96  0154               	movlb	20	; select bank20
 31209     1E97  009A               	movwf	26	;volatile
 31210     1E98                     i1l10963:
 31211     1E98  3001               	movlw	1
 31212     1E99  00F0               	movwf	??_EUSART2_Transmit_ISR
 31213     1E9A  0870               	movf	??_EUSART2_Transmit_ISR,w
 31214     1E9B  0141               	movlb	1	; select bank1
 31215     1E9C  07D3               	addwf	_eusart2TxTail^(0+128),f	;volatile
 31216     1E9D                     i1l10965:
 31217                           
 31218                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 31219     1E9D  3008               	movlw	8
 31220     1E9E  0253               	subwf	_eusart2TxTail^(0+128),w	;volatile
 31221     1E9F  1C03               	skipc
 31222     1EA0  2EA2               	goto	u891_21
 31223     1EA1  2EA3               	goto	u891_20
 31224     1EA2                     u891_21:
 31225     1EA2  2EA4               	goto	i1l10969
 31226     1EA3                     u891_20:
 31227     1EA3                     i1l10967:
 31228                           
 31229                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 31230     1EA3  01D3               	clrf	_eusart2TxTail^(0+128)	;volatile
 31231     1EA4                     i1l10969:
 31232                           
 31233                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 31234     1EA4  3001               	movlw	1
 31235     1EA5  00F0               	movwf	??_EUSART2_Transmit_ISR
 31236     1EA6  0870               	movf	??_EUSART2_Transmit_ISR,w
 31237     1EA7  07D2               	addwf	_eusart2TxBufferRemaining^(0+128),f	;volatile
 31238                           
 31239                           ;mcc_generated_files/eusart2.c: 209:     }
 31240     1EA8  2EAB               	goto	i1l1085
 31241     1EA9                     i1l1082:	
 31242                           ;mcc_generated_files/eusart2.c: 210:     else
 31243                           
 31244                           
 31245                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 31246     1EA9  014E               	movlb	14	; select bank14
 31247     1EAA  1319               	bcf	25,6	;volatile
 31248     1EAB                     i1l1085:
 31249     1EAB  0008               	return
 31250     1EAC                     __end_of_EUSART2_Transmit_ISR:
 31251                           
 31252                           	psect	text170
 31253     14C1                     __ptext170:	
 31254 ;; *************** function _EUSART1_Receive_ISR *****************
 31255 ;; Defined at:
 31256 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 31257 ;; Parameters:    Size  Location     Type
 31258 ;;		None
 31259 ;; Auto vars:     Size  Location     Type
 31260 ;;		None
 31261 ;; Return value:  Size  Location     Type
 31262 ;;                  1    wreg      void 
 31263 ;; Registers used:
 31264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31265 ;; Tracked objects:
 31266 ;;		On entry : 0/0
 31267 ;;		On exit  : 0/0
 31268 ;;		Unchanged: 0/0
 31269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31274 ;;Total ram usage:        0 bytes
 31275 ;; Hardware stack levels used: 1
 31276 ;; Hardware stack levels required when called: 2
 31277 ;; This function calls:
 31278 ;;		NULL
 31279 ;;		_EUSART1_DefaultErrorHandler
 31280 ;;		_EUSART1_DefaultFramingErrorHandler
 31281 ;;		_EUSART1_DefaultOverrunErrorHandler
 31282 ;;		_EUSART1_RxDataHandler
 31283 ;; This function is called by:
 31284 ;;		_EUSART1_Initialize
 31285 ;;		_INTERRUPT_InterruptManager
 31286 ;; This function uses a non-reentrant model
 31287 ;;
 31288                           
 31289     14C1                     _EUSART1_Receive_ISR:	
 31290                           ;psect for function _EUSART1_Receive_ISR
 31291                           
 31292     14C1                     i1l11003:	
 31293                           ;incstack = 0
 31294 ;; hardware stack exceeded
 31295                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 31296                           
 31297                           
 31298                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 31299     14C1  0141               	movlb	1	; select bank1
 31300     14C2  084B               	movf	_eusart1RxHead^(0+128),w	;volatile
 31301     14C3  3E44               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 31302     14C4  0086               	movwf	6
 31303     14C5  3001               	movlw	1	; select bank2/3
 31304     14C6  0087               	movwf	7
 31305     14C7  0181               	clrf	1
 31306     14C8                     i1l11005:
 31307                           
 31308                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 31309     14C8  0142               	movlb	2	; select bank2
 31310     14C9  1D1D               	btfss	29,2	;volatile
 31311     14CA  2CCC               	goto	u897_21
 31312     14CB  2CCD               	goto	u897_20
 31313     14CC                     u897_21:
 31314     14CC  2CDA               	goto	i1l11011
 31315     14CD                     u897_20:
 31316     14CD                     i1l11007:
 31317                           
 31318                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 31319     14CD  0141               	movlb	1	; select bank1
 31320     14CE  084B               	movf	_eusart1RxHead^(0+128),w	;volatile
 31321     14CF  3E44               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 31322     14D0  0086               	movwf	6
 31323     14D1  3001               	movlw	1	; select bank2/3
 31324     14D2  0087               	movwf	7
 31325     14D3  1481               	bsf	1,1
 31326     14D4                     i1l11009:
 31327                           
 31328                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 31329     14D4  0143               	movlb	3	; select bank3
 31330     14D5  0836               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 31331     14D6  008A               	movwf	10
 31332     14D7  0835               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 31333     14D8  000A               	callw
 31334     14D9  3194               	pagesel	$
 31335     14DA                     i1l11011:
 31336                           
 31337                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 31338     14DA  0142               	movlb	2	; select bank2
 31339     14DB  1C9D               	btfss	29,1	;volatile
 31340     14DC  2CDE               	goto	u898_21
 31341     14DD  2CDF               	goto	u898_20
 31342     14DE                     u898_21:
 31343     14DE  2CEC               	goto	i1l11017
 31344     14DF                     u898_20:
 31345     14DF                     i1l11013:
 31346                           
 31347                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 31348     14DF  0141               	movlb	1	; select bank1
 31349     14E0  084B               	movf	_eusart1RxHead^(0+128),w	;volatile
 31350     14E1  3E44               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 31351     14E2  0086               	movwf	6
 31352     14E3  3001               	movlw	1	; select bank2/3
 31353     14E4  0087               	movwf	7
 31354     14E5  1501               	bsf	1,2
 31355     14E6                     i1l11015:
 31356                           
 31357                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 31358     14E6  0143               	movlb	3	; select bank3
 31359     14E7  0834               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 31360     14E8  008A               	movwf	10
 31361     14E9  0833               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 31362     14EA  000A               	callw
 31363     14EB  3194               	pagesel	$
 31364     14EC                     i1l11017:
 31365                           
 31366                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 31367     14EC  0141               	movlb	1	; select bank1
 31368     14ED  084B               	movf	_eusart1RxHead^(0+128),w	;volatile
 31369     14EE  3E44               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 31370     14EF  0086               	movwf	6
 31371     14F0  3001               	movlw	1	; select bank2/3
 31372     14F1  0087               	movwf	7
 31373     14F2  0801               	movf	1,w
 31374     14F3  1903               	btfsc	3,2
 31375     14F4  2CF6               	goto	u899_21
 31376     14F5  2CF7               	goto	u899_20
 31377     14F6                     u899_21:
 31378     14F6  2CFE               	goto	i1l11021
 31379     14F7                     u899_20:
 31380     14F7                     i1l11019:
 31381                           
 31382                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 31383     14F7  0143               	movlb	3	; select bank3
 31384     14F8  0832               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 31385     14F9  008A               	movwf	10
 31386     14FA  0831               	movf	_EUSART1_ErrorHandler^(0+384),w
 31387     14FB  000A               	callw
 31388     14FC  3194               	pagesel	$
 31389                           
 31390                           ;mcc_generated_files/eusart1.c: 242:     } else {
 31391     14FD  2D01               	goto	i1l1242
 31392     14FE                     i1l11021:
 31393                           
 31394                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 31395     14FE  319D  25BB  3194   	fcall	_EUSART1_RxDataHandler
 31396     1501                     i1l1242:
 31397     1501  0008               	return
 31398     1502                     __end_of_EUSART1_Receive_ISR:
 31399                           
 31400                           	psect	text171
 31401     134F                     __ptext171:	
 31402 ;; *************** function _EUSART2_Receive_ISR *****************
 31403 ;; Defined at:
 31404 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 31405 ;; Parameters:    Size  Location     Type
 31406 ;;		None
 31407 ;; Auto vars:     Size  Location     Type
 31408 ;;		None
 31409 ;; Return value:  Size  Location     Type
 31410 ;;                  1    wreg      void 
 31411 ;; Registers used:
 31412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31413 ;; Tracked objects:
 31414 ;;		On entry : 0/0
 31415 ;;		On exit  : 0/0
 31416 ;;		Unchanged: 0/0
 31417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31422 ;;Total ram usage:        0 bytes
 31423 ;; Hardware stack levels used: 1
 31424 ;; Hardware stack levels required when called: 2
 31425 ;; This function calls:
 31426 ;;		NULL
 31427 ;;		_EUSART2_DefaultErrorHandler
 31428 ;;		_EUSART2_DefaultFramingErrorHandler
 31429 ;;		_EUSART2_DefaultOverrunErrorHandler
 31430 ;;		_EUSART2_RxDataHandler
 31431 ;; This function is called by:
 31432 ;;		_EUSART2_Initialize
 31433 ;;		_INTERRUPT_InterruptManager
 31434 ;; This function uses a non-reentrant model
 31435 ;;
 31436                           
 31437     134F                     _EUSART2_Receive_ISR:	
 31438                           ;psect for function _EUSART2_Receive_ISR
 31439                           
 31440     134F                     i1l10971:	
 31441                           ;incstack = 0
 31442 ;; hardware stack exceeded
 31443                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 31444                           
 31445                           
 31446                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 31447     134F  087C               	movf	_eusart2RxHead,w	;volatile
 31448     1350  3E54               	addlw	(low (_eusart2RxStatusBuffer| (0+256)))& (0+255)
 31449     1351  0086               	movwf	6
 31450     1352  3001               	movlw	1	; select bank2/3
 31451     1353  0087               	movwf	7
 31452     1354  0181               	clrf	1
 31453     1355                     i1l10973:
 31454                           
 31455                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 31456     1355  0154               	movlb	20	; select bank20
 31457     1356  1D1D               	btfss	29,2	;volatile
 31458     1357  2B59               	goto	u892_21
 31459     1358  2B5A               	goto	u892_20
 31460     1359                     u892_21:
 31461     1359  2B66               	goto	i1l10979
 31462     135A                     u892_20:
 31463     135A                     i1l10975:
 31464                           
 31465                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 31466     135A  087C               	movf	_eusart2RxHead,w	;volatile
 31467     135B  3E54               	addlw	(low (_eusart2RxStatusBuffer| (0+256)))& (0+255)
 31468     135C  0086               	movwf	6
 31469     135D  3001               	movlw	1	; select bank2/3
 31470     135E  0087               	movwf	7
 31471     135F  1481               	bsf	1,1
 31472     1360                     i1l10977:
 31473                           
 31474                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 31475     1360  0142               	movlb	2	; select bank2
 31476     1361  086D               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 31477     1362  008A               	movwf	10
 31478     1363  086C               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 31479     1364  000A               	callw
 31480     1365  3193               	pagesel	$
 31481     1366                     i1l10979:
 31482                           
 31483                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 31484     1366  0154               	movlb	20	; select bank20
 31485     1367  1C9D               	btfss	29,1	;volatile
 31486     1368  2B6A               	goto	u893_21
 31487     1369  2B6B               	goto	u893_20
 31488     136A                     u893_21:
 31489     136A  2B77               	goto	i1l10985
 31490     136B                     u893_20:
 31491     136B                     i1l10981:
 31492                           
 31493                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 31494     136B  087C               	movf	_eusart2RxHead,w	;volatile
 31495     136C  3E54               	addlw	(low (_eusart2RxStatusBuffer| (0+256)))& (0+255)
 31496     136D  0086               	movwf	6
 31497     136E  3001               	movlw	1	; select bank2/3
 31498     136F  0087               	movwf	7
 31499     1370  1501               	bsf	1,2
 31500     1371                     i1l10983:
 31501                           
 31502                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 31503     1371  0143               	movlb	3	; select bank3
 31504     1372  083E               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+384),w
 31505     1373  008A               	movwf	10
 31506     1374  083D               	movf	_EUSART2_OverrunErrorHandler^(0+384),w
 31507     1375  000A               	callw
 31508     1376  3193               	pagesel	$
 31509     1377                     i1l10985:
 31510                           
 31511                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 31512     1377  087C               	movf	_eusart2RxHead,w	;volatile
 31513     1378  3E54               	addlw	(low (_eusart2RxStatusBuffer| (0+256)))& (0+255)
 31514     1379  0086               	movwf	6
 31515     137A  3001               	movlw	1	; select bank2/3
 31516     137B  0087               	movwf	7
 31517     137C  0801               	movf	1,w
 31518     137D  1903               	btfsc	3,2
 31519     137E  2B80               	goto	u894_21
 31520     137F  2B81               	goto	u894_20
 31521     1380                     u894_21:
 31522     1380  2B88               	goto	i1l10989
 31523     1381                     u894_20:
 31524     1381                     i1l10987:
 31525                           
 31526                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 31527     1381  0143               	movlb	3	; select bank3
 31528     1382  083C               	movf	(_EUSART2_ErrorHandler+1)^(0+384),w
 31529     1383  008A               	movwf	10
 31530     1384  083B               	movf	_EUSART2_ErrorHandler^(0+384),w
 31531     1385  000A               	callw
 31532     1386  3193               	pagesel	$
 31533                           
 31534                           ;mcc_generated_files/eusart2.c: 233:     } else {
 31535     1387  2B8B               	goto	i1l1092
 31536     1388                     i1l10989:
 31537                           
 31538                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 31539     1388  319D  2570  3193   	fcall	_EUSART2_RxDataHandler
 31540     138B                     i1l1092:
 31541     138B  0008               	return
 31542     138C                     __end_of_EUSART2_Receive_ISR:
 31543                           
 31544                           	psect	text172
 31545     1982                     __ptext172:	
 31546 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 31547 ;; Defined at:
 31548 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 31549 ;; Parameters:    Size  Location     Type
 31550 ;;		None
 31551 ;; Auto vars:     Size  Location     Type
 31552 ;;		None
 31553 ;; Return value:  Size  Location     Type
 31554 ;;                  1    wreg      void 
 31555 ;; Registers used:
 31556 ;;		None
 31557 ;; Tracked objects:
 31558 ;;		On entry : 0/0
 31559 ;;		On exit  : 0/0
 31560 ;;		Unchanged: 0/0
 31561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31566 ;;Total ram usage:        0 bytes
 31567 ;; Hardware stack levels used: 1
 31568 ;; This function calls:
 31569 ;;		Nothing
 31570 ;; This function is called by:
 31571 ;;		_EUSART2_Initialize
 31572 ;;		_EUSART2_Receive_ISR
 31573 ;; This function uses a non-reentrant model
 31574 ;;
 31575                           
 31576     1982                     _EUSART2_DefaultOverrunErrorHandler:	
 31577                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 31578                           
 31579     1982                     i1l9935:	
 31580                           ;incstack = 0
 31581 ;; hardware stack exceeded
 31582                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 31583                           
 31584                           
 31585                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 31586     1982  0154               	movlb	20	; select bank20
 31587     1983  121D               	bcf	29,4	;volatile
 31588                           
 31589                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 31590     1984  161D               	bsf	29,4	;volatile
 31591     1985                     i1l1102:
 31592     1985  0008               	return
 31593     1986                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 31594                           
 31595                           	psect	text173
 31596     1953                     __ptext173:	
 31597 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 31598 ;; Defined at:
 31599 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 31600 ;; Parameters:    Size  Location     Type
 31601 ;;		None
 31602 ;; Auto vars:     Size  Location     Type
 31603 ;;		None
 31604 ;; Return value:  Size  Location     Type
 31605 ;;                  1    wreg      void 
 31606 ;; Registers used:
 31607 ;;		None
 31608 ;; Tracked objects:
 31609 ;;		On entry : 0/0
 31610 ;;		On exit  : 0/0
 31611 ;;		Unchanged: 0/0
 31612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31617 ;;Total ram usage:        0 bytes
 31618 ;; Hardware stack levels used: 1
 31619 ;; This function calls:
 31620 ;;		Nothing
 31621 ;; This function is called by:
 31622 ;;		_EUSART2_Initialize
 31623 ;;		_EUSART2_Receive_ISR
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627     1953                     _EUSART2_DefaultFramingErrorHandler:	
 31628                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 31629                           
 31630     1953                     i1l1099:	
 31631                           ;incstack = 0
 31632 ;; hardware stack exceeded
 31633                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 31634                           
 31635     1953  0008               	return
 31636     1954                     __end_of_EUSART2_DefaultFramingErrorHandler:
 31637                           
 31638                           	psect	text174
 31639     197E                     __ptext174:	
 31640 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 31641 ;; Defined at:
 31642 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 31643 ;; Parameters:    Size  Location     Type
 31644 ;;		None
 31645 ;; Auto vars:     Size  Location     Type
 31646 ;;		None
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1    wreg      void 
 31649 ;; Registers used:
 31650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31651 ;; Tracked objects:
 31652 ;;		On entry : 0/0
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31660 ;;Total ram usage:        0 bytes
 31661 ;; Hardware stack levels used: 1
 31662 ;; Hardware stack levels required when called: 1
 31663 ;; This function calls:
 31664 ;;		_EUSART2_RxDataHandler
 31665 ;; This function is called by:
 31666 ;;		_EUSART2_Initialize
 31667 ;;		_EUSART2_Receive_ISR
 31668 ;; This function uses a non-reentrant model
 31669 ;;
 31670                           
 31671     197E                     _EUSART2_DefaultErrorHandler:	
 31672                           ;psect for function _EUSART2_DefaultErrorHandler
 31673                           
 31674     197E                     i1l9937:	
 31675                           ;incstack = 0
 31676 ;; hardware stack exceeded
 31677                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 31678                           
 31679                           
 31680                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 31681     197E  319D  2570  3199   	fcall	_EUSART2_RxDataHandler
 31682     1981                     i1l1105:
 31683     1981  0008               	return
 31684     1982                     __end_of_EUSART2_DefaultErrorHandler:
 31685                           
 31686                           	psect	text175
 31687     1D70                     __ptext175:	
 31688 ;; *************** function _EUSART2_RxDataHandler *****************
 31689 ;; Defined at:
 31690 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 31691 ;; Parameters:    Size  Location     Type
 31692 ;;		None
 31693 ;; Auto vars:     Size  Location     Type
 31694 ;;		None
 31695 ;; Return value:  Size  Location     Type
 31696 ;;                  1    wreg      void 
 31697 ;; Registers used:
 31698 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 31699 ;; Tracked objects:
 31700 ;;		On entry : 0/0
 31701 ;;		On exit  : 0/0
 31702 ;;		Unchanged: 0/0
 31703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31708 ;;Total ram usage:        1 bytes
 31709 ;; Hardware stack levels used: 1
 31710 ;; This function calls:
 31711 ;;		Nothing
 31712 ;; This function is called by:
 31713 ;;		_EUSART2_Receive_ISR
 31714 ;;		_EUSART2_DefaultErrorHandler
 31715 ;; This function uses a non-reentrant model
 31716 ;;
 31717                           
 31718     1D70                     _EUSART2_RxDataHandler:	
 31719                           ;psect for function _EUSART2_RxDataHandler
 31720                           
 31721     1D70                     i1l9297:	
 31722                           ;incstack = 0
 31723 ;; hardware stack exceeded
 31724                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 31725                           
 31726                           
 31727                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 31728     1D70  087C               	movf	_eusart2RxHead,w
 31729     1D71  3E5C               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 31730     1D72  0086               	movwf	6
 31731     1D73  3001               	movlw	1	; select bank2/3
 31732     1D74  0087               	movwf	7
 31733     1D75  0154               	movlb	20	; select bank20
 31734     1D76  0819               	movf	25,w	;volatile
 31735     1D77  0081               	movwf	1
 31736     1D78                     i1l9299:
 31737     1D78  3001               	movlw	1
 31738     1D79  00F0               	movwf	??_EUSART2_RxDataHandler
 31739     1D7A  0870               	movf	??_EUSART2_RxDataHandler,w
 31740     1D7B  07FC               	addwf	_eusart2RxHead,f	;volatile
 31741     1D7C                     i1l9301:
 31742                           
 31743                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 31744     1D7C  3008               	movlw	8
 31745     1D7D  027C               	subwf	_eusart2RxHead,w	;volatile
 31746     1D7E  1C03               	skipc
 31747     1D7F  2D81               	goto	u660_21
 31748     1D80  2D82               	goto	u660_20
 31749     1D81                     u660_21:
 31750     1D81  2D83               	goto	i1l9305
 31751     1D82                     u660_20:
 31752     1D82                     i1l9303:
 31753                           
 31754                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 31755     1D82  01FC               	clrf	_eusart2RxHead	;volatile
 31756     1D83                     i1l9305:
 31757                           
 31758                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 31759     1D83  3001               	movlw	1
 31760     1D84  00F0               	movwf	??_EUSART2_RxDataHandler
 31761     1D85  0870               	movf	??_EUSART2_RxDataHandler,w
 31762     1D86  0141               	movlb	1	; select bank1
 31763     1D87  07D0               	addwf	_eusart2RxCount^(0+128),f	;volatile
 31764     1D88                     i1l1096:
 31765     1D88  0008               	return
 31766     1D89                     __end_of_EUSART2_RxDataHandler:
 31767                           
 31768                           	psect	text176
 31769     197A                     __ptext176:	
 31770 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 31771 ;; Defined at:
 31772 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 31773 ;; Parameters:    Size  Location     Type
 31774 ;;		None
 31775 ;; Auto vars:     Size  Location     Type
 31776 ;;		None
 31777 ;; Return value:  Size  Location     Type
 31778 ;;                  1    wreg      void 
 31779 ;; Registers used:
 31780 ;;		None
 31781 ;; Tracked objects:
 31782 ;;		On entry : 0/0
 31783 ;;		On exit  : 0/0
 31784 ;;		Unchanged: 0/0
 31785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31790 ;;Total ram usage:        0 bytes
 31791 ;; Hardware stack levels used: 1
 31792 ;; This function calls:
 31793 ;;		Nothing
 31794 ;; This function is called by:
 31795 ;;		_EUSART1_Initialize
 31796 ;;		_EUSART1_Receive_ISR
 31797 ;; This function uses a non-reentrant model
 31798 ;;
 31799                           
 31800     197A                     _EUSART1_DefaultOverrunErrorHandler:	
 31801                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 31802                           
 31803     197A                     i1l9971:	
 31804                           ;incstack = 0
 31805 ;; hardware stack exceeded
 31806                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 31807                           
 31808                           
 31809                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 31810     197A  0142               	movlb	2	; select bank2
 31811     197B  121D               	bcf	29,4	;volatile
 31812                           
 31813                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 31814     197C  161D               	bsf	29,4	;volatile
 31815     197D                     i1l1252:
 31816     197D  0008               	return
 31817     197E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 31818                           
 31819                           	psect	text177
 31820     1952                     __ptext177:	
 31821 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 31822 ;; Defined at:
 31823 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 31824 ;; Parameters:    Size  Location     Type
 31825 ;;		None
 31826 ;; Auto vars:     Size  Location     Type
 31827 ;;		None
 31828 ;; Return value:  Size  Location     Type
 31829 ;;                  1    wreg      void 
 31830 ;; Registers used:
 31831 ;;		None
 31832 ;; Tracked objects:
 31833 ;;		On entry : 0/0
 31834 ;;		On exit  : 0/0
 31835 ;;		Unchanged: 0/0
 31836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31841 ;;Total ram usage:        0 bytes
 31842 ;; Hardware stack levels used: 1
 31843 ;; This function calls:
 31844 ;;		Nothing
 31845 ;; This function is called by:
 31846 ;;		_EUSART1_Initialize
 31847 ;;		_EUSART1_Receive_ISR
 31848 ;; This function uses a non-reentrant model
 31849 ;;
 31850                           
 31851     1952                     _EUSART1_DefaultFramingErrorHandler:	
 31852                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 31853                           
 31854     1952                     i1l1249:	
 31855                           ;incstack = 0
 31856 ;; hardware stack exceeded
 31857                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 31858                           
 31859     1952  0008               	return
 31860     1953                     __end_of_EUSART1_DefaultFramingErrorHandler:
 31861                           
 31862                           	psect	text178
 31863     1976                     __ptext178:	
 31864 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 31865 ;; Defined at:
 31866 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 31867 ;; Parameters:    Size  Location     Type
 31868 ;;		None
 31869 ;; Auto vars:     Size  Location     Type
 31870 ;;		None
 31871 ;; Return value:  Size  Location     Type
 31872 ;;                  1    wreg      void 
 31873 ;; Registers used:
 31874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31875 ;; Tracked objects:
 31876 ;;		On entry : 0/0
 31877 ;;		On exit  : 0/0
 31878 ;;		Unchanged: 0/0
 31879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31884 ;;Total ram usage:        0 bytes
 31885 ;; Hardware stack levels used: 1
 31886 ;; Hardware stack levels required when called: 1
 31887 ;; This function calls:
 31888 ;;		_EUSART1_RxDataHandler
 31889 ;; This function is called by:
 31890 ;;		_EUSART1_Initialize
 31891 ;;		_EUSART1_Receive_ISR
 31892 ;; This function uses a non-reentrant model
 31893 ;;
 31894                           
 31895     1976                     _EUSART1_DefaultErrorHandler:	
 31896                           ;psect for function _EUSART1_DefaultErrorHandler
 31897                           
 31898     1976                     i1l9973:	
 31899                           ;incstack = 0
 31900 ;; hardware stack exceeded
 31901                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 31902                           
 31903                           
 31904                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 31905     1976  319D  25BB  3199   	fcall	_EUSART1_RxDataHandler
 31906     1979                     i1l1255:
 31907     1979  0008               	return
 31908     197A                     __end_of_EUSART1_DefaultErrorHandler:
 31909                           
 31910                           	psect	text179
 31911     1DBB                     __ptext179:	
 31912 ;; *************** function _EUSART1_RxDataHandler *****************
 31913 ;; Defined at:
 31914 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 31915 ;; Parameters:    Size  Location     Type
 31916 ;;		None
 31917 ;; Auto vars:     Size  Location     Type
 31918 ;;		None
 31919 ;; Return value:  Size  Location     Type
 31920 ;;                  1    wreg      void 
 31921 ;; Registers used:
 31922 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 31923 ;; Tracked objects:
 31924 ;;		On entry : 0/0
 31925 ;;		On exit  : 0/0
 31926 ;;		Unchanged: 0/0
 31927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31932 ;;Total ram usage:        1 bytes
 31933 ;; Hardware stack levels used: 1
 31934 ;; This function calls:
 31935 ;;		Nothing
 31936 ;; This function is called by:
 31937 ;;		_EUSART1_Receive_ISR
 31938 ;;		_EUSART1_DefaultErrorHandler
 31939 ;; This function uses a non-reentrant model
 31940 ;;
 31941                           
 31942     1DBB                     _EUSART1_RxDataHandler:	
 31943                           ;psect for function _EUSART1_RxDataHandler
 31944                           
 31945     1DBB                     i1l9317:	
 31946                           ;incstack = 0
 31947 ;; hardware stack exceeded
 31948                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 31949                           
 31950                           
 31951                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 31952     1DBB  0141               	movlb	1	; select bank1
 31953     1DBC  084B               	movf	_eusart1RxHead^(0+128),w
 31954     1DBD  3EBF               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 31955     1DBE  0086               	movwf	6
 31956     1DBF  3001               	movlw	1	; select bank3/4
 31957     1DC0  0087               	movwf	7
 31958     1DC1  0142               	movlb	2	; select bank2
 31959     1DC2  0819               	movf	25,w	;volatile
 31960     1DC3  0081               	movwf	1
 31961     1DC4                     i1l9319:
 31962     1DC4  3001               	movlw	1
 31963     1DC5  00F0               	movwf	??_EUSART1_RxDataHandler
 31964     1DC6  0870               	movf	??_EUSART1_RxDataHandler,w
 31965     1DC7  0141               	movlb	1	; select bank1
 31966     1DC8  07CB               	addwf	_eusart1RxHead^(0+128),f	;volatile
 31967     1DC9                     i1l9321:
 31968                           
 31969                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 31970     1DC9  3008               	movlw	8
 31971     1DCA  024B               	subwf	_eusart1RxHead^(0+128),w	;volatile
 31972     1DCB  1C03               	skipc
 31973     1DCC  2DCE               	goto	u661_21
 31974     1DCD  2DCF               	goto	u661_20
 31975     1DCE                     u661_21:
 31976     1DCE  2DD0               	goto	i1l9325
 31977     1DCF                     u661_20:
 31978     1DCF                     i1l9323:
 31979                           
 31980                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 31981     1DCF  01CB               	clrf	_eusart1RxHead^(0+128)	;volatile
 31982     1DD0                     i1l9325:
 31983                           
 31984                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 31985     1DD0  3001               	movlw	1
 31986     1DD1  00F0               	movwf	??_EUSART1_RxDataHandler
 31987     1DD2  0870               	movf	??_EUSART1_RxDataHandler,w
 31988     1DD3  07C9               	addwf	_eusart1RxCount^(0+128),f	;volatile
 31989     1DD4                     i1l1246:
 31990     1DD4  0008               	return
 31991     1DD5                     __end_of_EUSART1_RxDataHandler:
 31992     007E                     btemp	set	126	;btemp
 31993     007E                     int$flags	set	126
 31994     007E                     wtemp0	set	126
 31995                           
 31996                           	psect	idloc
 31997                           
 31998                           ;Config register IDLOC0 @ 0x8000
 31999                           ;	unspecified, using default values
 32000     8000                     	org	32768
 32001     8000  3FFF               	dw	16383
 32002                           
 32003                           ;Config register IDLOC1 @ 0x8001
 32004                           ;	unspecified, using default values
 32005     8001                     	org	32769
 32006     8001  3FFF               	dw	16383
 32007                           
 32008                           ;Config register IDLOC2 @ 0x8002
 32009                           ;	unspecified, using default values
 32010     8002                     	org	32770
 32011     8002  3FFF               	dw	16383
 32012                           
 32013                           ;Config register IDLOC3 @ 0x8003
 32014                           ;	unspecified, using default values
 32015     8003                     	org	32771
 32016     8003  3FFF               	dw	16383
 32017                           
 32018                           	psect	config
 32019                           
 32020                           ;Config register CONFIG1 @ 0x8007
 32021                           ;	External Oscillator mode selection bits
 32022                           ;	FEXTOSC = OFF, Oscillator not enabled
 32023                           ;	Power-up default value for COSC bits
 32024                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 32025                           ;	Clock Out Enable bit
 32026                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 32027                           ;	Clock Switch Enable bit
 32028                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 32029                           ;	Fail-Safe Clock Monitor Enable bit
 32030                           ;	FCMEN = ON, FSCM timer enabled
 32031     8007                     	org	32775
 32032     8007  3FEC               	dw	16364
 32033                           
 32034                           ;Config register CONFIG2 @ 0x8008
 32035                           ;	Master Clear Enable bit
 32036                           ;	MCLRE = ON, MCLR pin is Master Clear function
 32037                           ;	Power-up Timer Enable bit
 32038                           ;	PWRTS = OFF, PWRT disabled
 32039                           ;	Low-Power BOR enable bit
 32040                           ;	LPBOREN = OFF, ULPBOR disabled
 32041                           ;	Brown-out reset enable bits
 32042                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 32043                           ;	Brown-out Reset Voltage Selection
 32044                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 32045                           ;	Zero-cross detect disable
 32046                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 32047                           ;	Peripheral Pin Select one-way control
 32048                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 32049                           ;	Stack Overflow/Underflow Reset Enable bit
 32050                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 32051     8008                     	org	32776
 32052     8008  3FFF               	dw	16383
 32053                           
 32054                           ;Config register CONFIG3 @ 0x8009
 32055                           ;	WDT Period Select bits
 32056                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 32057                           ;	WDT operating mode
 32058                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 32059                           ;	WDT Window Select bits
 32060                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 32061                           ;	WDT input clock selector
 32062                           ;	WDTCCS = SC, Software Control
 32063     8009                     	org	32777
 32064     8009  3F9F               	dw	16287
 32065                           
 32066                           ;Config register CONFIG4 @ 0x800A
 32067                           ;	Boot Block Size Selection bits
 32068                           ;	BBSIZE = BB512, 512 words boot block size
 32069                           ;	Boot Block Enable bit
 32070                           ;	BBEN = OFF, Boot Block disabled
 32071                           ;	SAF Enable bit
 32072                           ;	SAFEN = OFF, SAF disabled
 32073                           ;	Application Block Write Protection bit
 32074                           ;	WRTAPP = OFF, Application Block not write protected
 32075                           ;	Boot Block Write Protection bit
 32076                           ;	WRTB = OFF, Boot Block not write protected
 32077                           ;	Configuration Register Write Protection bit
 32078                           ;	WRTC = OFF, Configuration Register not write protected
 32079                           ;	Data EEPROM write protection bit
 32080                           ;	WRTD = OFF, Data EEPROM NOT write protected
 32081                           ;	Storage Area Flash Write Protection bit
 32082                           ;	WRTSAF = OFF, SAF not write protected
 32083                           ;	Low Voltage Programming Enable bit
 32084                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 32085     800A                     	org	32778
 32086     800A  3FFF               	dw	16383
 32087                           
 32088                           ;Config register CONFIG5 @ 0x800B
 32089                           ;	UserNVM Program memory code protection bit
 32090                           ;	CP = OFF, UserNVM code protection disabled
 32091     800B                     	org	32779
 32092     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         454
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80      5      76
    BANK2            80      0      80
    BANK3            80      7      46
    BANK4            80      0      64
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5400	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1237(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1248(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1271(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1254(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1260(), 
		 -> NULL(), 

    I2C1_DO_TX$5400$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5405	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5399	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1237(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1248(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1271(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1254(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1260(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1237(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1248(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1271(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1254(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1260(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1237(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1248(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1271(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1254(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1260(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_readNBytes@data	PTR void  size(1) Largest target is 1
		 -> readRegisters@dataBuffer(BANK0[1]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(2) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK3[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK5[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(2) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK3[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(2) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK3[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1237@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1248@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    readRegisters@dataBuffer	PTR unsigned char  size(1) Largest target is 8
		 -> getManufacturerID@databuffer(BANK0[2]), getTemp@databuffer(BANK0[2]), readWakeUpAndSleepData@wakeupRegisterRead(COMMON[8]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1379(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK4[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), 

    S1018$data	PTR unsigned char  size(2) Largest target is 0

    S230$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    S230$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S230$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S230$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S230$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S230$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1379(), 

    S230$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S230$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S230$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S230$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3146$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3146$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3146$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1237(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1248(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1271(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1254(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1260(), 
		 -> NULL(), 

    S3146$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    S359$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S359$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S359$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S359$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S359$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S359$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S359$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S359$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S359$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S359$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S359$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S359$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S672$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S672$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S672$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S672$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK3[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK3[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F3781(BANK7[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1254@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1260@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SendPacket
    _readRegisters->_i2c_readNBytes
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1379->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1379->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1237
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1248
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1271
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1254
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1260
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1237
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1248
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1271
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1254
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1260
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1237
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1248
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1271
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1254
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1260
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1237
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1248
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1271
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1254
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1260
    _wr2RegCompleteHandler@i2c1_master_example$F1260->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1254->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1271->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1248->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1237->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_getManufacturerID
    _getManufacturerID->_readRegisters
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->___fltol
    _getTemp->___fldiv
    _readRegisters->_i2c_readNBytes
    _I2C1_MasterRead->_I2C1_MasterOperation
    ___fldiv->___fladd
    ___fladd->___xxtofl
    ___fltol->_getTemp
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_i2c_read1ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _LIGHTBLUE_TemperatureSensor->___fltol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_LIGHTBLUE_TemperatureSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 11770405
                                             79 BANK0      1     1      0
                                              4 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 8662346
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1195975
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1195975
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1195975
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1196285
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1198021
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  384762
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  375957
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  385386
                                             12 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  376535
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                             8     4      4   49134
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  366868
                  _getManufacturerID
 ---------------------------------------------------------------------------------
 (3) _getManufacturerID                                   11     9      2  366868
                                             12 BANK0     11     9      2
                      _readRegisters
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  385160
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  385411
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  386719
                                             12 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  385160
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  385411
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3    8588
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1221
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     111
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     555
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     555
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        2     1      1     338
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10841
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10841
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    2     2      0   10841
                                             35 BANK0      2     2      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1379 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1   10666
                                             11 COMMON     1     0      1
                                             34 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     5      2    2275
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     2      4     515
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     1      2     278
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 36    36      0    3046
                                              6 COMMON     2     2      0
                                              0 BANK0     34    34      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     2      1     246
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     695
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1379 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1      86
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     150
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1      86
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  389525
                                              0 BANK3      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
                            ___fltol
                            _getTemp
 ---------------------------------------------------------------------------------
 (2) _getTemp                                             21    17      4  380005
                                             52 BANK0     21    17      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
                      _readRegisters
 ---------------------------------------------------------------------------------
 (4) _readRegisters                                        5     3      2  366735
                                              7 BANK0      5     3      2
                     _i2c_readNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_readNBytes                                       4     1      3  366009
                                             11 COMMON     1     1      0
                                              4 BANK0      3     0      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    3492
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    5427
                                             26 BANK0     26    18      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4150
                                              6 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1377
                                             73 BANK0      6     2      4
                                              0 BANK1      4     4      0
                            _getTemp (ARG)
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    8261
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    7307
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18225
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   17680
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   15696
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   15665
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    4962
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     258
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1379 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5189
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5189
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3     873
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1379 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1379                   0     0      0      48
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      24
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      24
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     325
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     111
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    7445
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 2644114
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  4     0      4    2966
                                              0 BANK0      4     0      4
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  4     1      3    2130
                                              6 COMMON     4     1      3
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 5     3      2    4985
                                              7 COMMON     5     3      2
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 2635719
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  376501
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752982
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376439
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752982
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376439
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376405
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1260     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1254     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1271   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1248     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1237     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1237 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1248 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1271 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1254 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1260 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1237 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1248 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1271 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1254 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1260 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1237 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1248 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1271 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1254 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1260 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1237 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1248 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1271 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1254 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1260 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _i2c_read1ByteRegister
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1379 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1379 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     ___fltol
       _getTemp (ARG)
         ___fladd
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegisters
           _i2c_readNBytes
             _I2C1_Close
             _I2C1_MasterRead
               _I2C1_MasterOperation
             _I2C1_Open
             _I2C1_SetBuffer
     _getTemp
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1379 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1379 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _getManufacturerID
         _readRegisters
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     257       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      7      2E      12       57.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     257      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Dec 19 18:14:50 2024

                                 _eusart1TxBufferRemaining 00CC  
                                             ___fldiv@aexp 0053  
                                             ___fldiv@bexp 0052  
                                   ?_EUSART2_RxDataHandler 0070  
                                             ___fldiv@sign 004B  
                          __end_of_TMR0_HasOverflowOccured 19DC  
                                                       l35 1106  
                                                       l44 1759  
                                                       l53 1C1B  
                                                       l29 10D8  
                                                       l56 1C2C  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002F  
                                                      l121 19ED  
                                                      l202 19F9  
                                                      l130 1D6F  
                                                      l211 1B72  
                                                      l124 11C6  
                                                      l205 19F3  
                                                      l133 1164  
                                                      l221 1281  
                                                      l214 1E48  
                                                      l230 12A3  
                                                      l127 12DC  
                                                      l208 19D1  
                                                      l224 1283  
                                                      l145 0D2E  
                                                      l139 1315  
                                                      l164 0DFD  
                                                      l501 1BA4  
                                                      l510 1194  
                                                      l193 0BE9  
                                                      l522 1BB5  
                                                      l187 0EB9  
                                                      l196 1C8B  
                                                      l534 1620  
                                                      l199 126B  
                                                      l537 1BC6  
                                                      l561 1D3F  
                                                      l730 1BE8  
                                                      l802 1AEB  
                                                      l811 1AE0  
                                                      l549 1BD7  
                                                      l733 1BF9  
                                                      l805 1AEE  
                                                      l742 1D57  
                                                      l814 1AE3  
                                                      l822 1B1B  
                                                      l807 1AF0  
                                                      l736 1C0A  
                                                      l816 1AE5  
                                                      l832 10AA  
                                                      l921 1D0F  
                                                      l825 1B1D  
                                                      l842 1EF1  
                                                      l739 1B93  
                                                      l579 1E67  
                                                      l827 1B1E  
                                                      l819 1B14  
                                                      l835 16BB  
                                                      l908 0B59  
                                                      l933 158C  
                                                      l829 1B1F  
                                                      l926 1DEF  
                                                      l783 1975  
                                                      l855 134E  
                                                      l792 1AA6  
                                                      l848 1233  
                                                      l952 1CCC  
                                                      l786 1B13  
                                                      l795 1AB0  
                                                      l964 1B2B  
                                                      l789 1A9C  
                                                      l973 097A  
                                                      l957 1E0B  
                                                      l798 1A65  
                                                      l886 1134  
                                                      l974 0973  
                                                      l879 09DA  
                                                      l976 097C  
                                                      l897 082A  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 1CB7  
                             LIGHTBLUE_SendPacket@packetID 007B  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1A24  
                           _EUSART2_SetFramingErrorHandler 1A1E  
                               __end_of_getMagneticChannel 1000  
                               __end_of_setMagneticChannel 0378  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 19B9  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                __end_of_getManufacturerID 1E2A  
                                     I2C1_SetBuffer@buffer 0073  
                                             ___fltol@exp1 006E  
                                                     l1111 1A29  
                                                     l1120 1A2F  
                                                     l1201 1A89  
                                                     l1114 1A1D  
                                                     l1051 1481  
                                                     l1220 1FBF  
                                                     l1060 1991  
                                                     l1204 1995  
                                                     l1108 1A23  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1A35  
                                                     l1070 1FFF  
                                                     l1214 1027  
                                                     l1223 1FD7  
                                                     l2111 1709  
                                                     l1057 1A80  
                                                     l2121 1C3D  
                                                     l2130 1B07  
                                                     l2210 0C81  
                                                     l1075 1F8E  
                                                     l1219 1FB6  
                                                     l1076 1F97  
                                                     l2124 1B82  
                                                     l1261 1A0B  
                                                     l2133 1AFB  
                                                     l1270 1A11  
                                                     l2214 0C84  
                                                     l2046 0766  
                                                     l1079 1FAF  
                                            ?_RN487X_Delay 0074  
                                                     l1264 19FF  
                                                     l1352 1CE2  
                                                     l2240 0377  
                                                     l2320 14C0  
                                                     l3025 0A40  
                                                     l2057 07D2  
                                                     l3018 0A55  
                                                     l3202 06FB  
                                                     l1258 1A05  
                                                     l2234 0374  
                                                     l3131 0429  
                                                     l3203 0715  
                                                     l1267 1A17  
                                                     l1195 1443  
                                                     l1355 1ABA  
                                                     l1443 15D5  
                                                     l3028 0A55  
                                                     l3125 03CE  
                                                     l3205 0722  
                                                     l3150 04FD  
                                                     l1454 1A3B  
                                                     l1358 1AC4  
                                                     l2326 1405  
                                                     l3311 1DA3  
                                                     l2344 13C8  
                                                     l3129 044B  
                                                     l3313 1DBA  
                                                     l3305 166D  
                                                     l1802 199F  
                                                     l3146 04DB  
                                                     l3138 057F  
                                                     l1474 1C76  
                                                     l1811 1790  
                                                     l3156 051F  
                                                     l1492 19DB  
                                                     l2436 1CF8  
                                                     l1901 1957  
                                                     l1805 1A77  
                                                     l3181 05D1  
                                                     l2541 08D1  
                                                     l1750 1D27  
                                                     l1814 17AC  
                                                     l3318 17FF  
                                                     l1742 1A92  
                                                     l2446 087D  
                                                     l2630 1A55  
                                                     l1911 1B45  
                                                     l3167 0578  
                                                     l3159 0556  
                                                     l3183 0729  
                                                     l3271 0D8B  
                                                     l1920 199A  
                                                     l1808 1A5D  
                                                     l3168 057F  
                                                     l2544 08D0  
                                                     l2456 0FFF  
                                                     l2624 1E29  
                                                     l1745 11FB  
                                                     l3265 0D52  
                                                     l2449 087C  
                                                     l1914 195D  
                                                     l1762 19CC  
                                                     l1746 11FC  
                                                     l2634 0925  
                                                     l1923 1966  
                                                     l1827 151E  
                                                     l3267 0DD9  
                                                     l1932 1963  
                                                     l1772 1ACF  
                                                     l1828 1544  
                                                     l1756 1E88  
                                                     l3292 1DA1  
                                                     l1917 196F  
                                                     l1941 198D  
                                                     l1845 107D  
                                                     l3197 06AF  
                                                     l3278 0DA5  
                                                     l2638 0AD1  
                                                     l3286 1C62  
                                                     l2574 1CA0  
                                                     l1935 1969  
                                                     l1839 1A4E  
                                                     l1863 19A4  
                                                     l3279 0DB1  
                                                     l1759 19D6  
                                                     l1944 1989  
                                                     l1872 19B3  
                                                     l2672 1F5F  
                                                     l1769 1B53  
                                                     l1929 196C  
                                                     l1881 19C2  
                                                     l1962 195A  
                                                     l1938 19E1  
                                                     l1866 19A9  
                                                     l1890 1F87  
                                                     l1778 1ADA  
                                                     l2666 1F39  
                                                     l1875 19B8  
                                                     l1795 1B38  
                                                     l1884 19C7  
                                                     l1972 19E7  
                                                     l1980 1CB6  
                                                     l1789 1F15  
                                                     l1965 1972  
                                                     l1869 19AE  
                                                     l1878 19BD  
                                                     l1959 1960  
                                                     l1799 1050  
                                                     l1968 19E2  
                                                     l1898 1955  
                                                     l9213 1F38  
                                                     l9311 1A00  
                                                     l9207 1F16  
                                                     l9313 1A06  
                                                     l9209 1F36  
                                                     l9315 19FA  
                                                     l9307 1A0C  
                                                     l8701 1FFE  
                                                     l9309 1A12  
                                                     l9255 1AA7  
                                                     l9327 1A36  
                                                     l9099 1A5E  
                                                     l8731 1006  
                                                     l8723 1992  
                                                     l9195 1A78  
                                                     l9291 1A1E  
                                                     l9371 1F3A  
                                                     l8741 1021  
                                                     l8733 1014  
                                                     l9293 1A24  
                                                     l9381 1F52  
                                                     l9373 1F3A  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     l8743 1024  
                                                     l8735 1018  
                                                     l8727 1000  
                                                     l9199 1A81  
                                                     l9295 1A18  
                                                     l9287 1A2A  
                                                     l9375 1F3C  
                                                     l8913 1CA1  
                                                     l8745 1026  
                                                     l8737 101E  
                                                     l8729 1000  
                                                     l9289 1A30  
                                                     l9377 1F43  
                                                     l8915 1CA2  
                                                     l8691 1FF0  
                                                     l8683 1FD8  
                                                     l8739 101F  
                                                     l9379 1F51  
                                                     l8917 1CAA  
                                                     l8693 1FF6  
                                                     l8685 1FD8  
                                                     l8861 1A93  
                                                     l8933 0800  
                                                     l9901 1B16  
                                                     l8695 1FF7  
                                                     l8687 1FDE  
                                                     l8943 081F  
                                                     l8935 0802  
                                                     l8679 198E  
                                                     l8951 0AD2  
                                                     l9911 1459  
                                                     l9903 1444  
                                                     l8697 1FF9  
                                                     l8689 1FEC  
                                                     l8937 080C  
                                                     l8945 0823  
                                                     l8865 1A9D  
                                                     l8961 0AF8  
                                                     l8953 0AD3  
                                                     l9921 1468  
                                                     l9913 145B  
                                                     l9905 1446  
                                                     l8699 1FFC  
                                                     l8947 0829  
                                                     l8939 081D  
                                                     l8971 0B0F  
                                                     l8963 0AFE  
                                                     l8955 0ADD  
                                                     l9931 147A  
                                                     l9923 146F  
                                                     l9915 145D  
                                                     l9907 144D  
                                                     l8981 0B58  
                                                     l8965 0B01  
                                                     l8957 0AE7  
                                                     l9941 1408  
                                                     l9933 147F  
                                                     l9925 1476  
                                                     l9917 145F  
                                                     l9909 1456  
                                                     l8967 0B07  
                                                     l8959 0AF2  
                                                     l9951 141F  
                                                     l9943 140F  
                                                     l9927 1478  
                                                     l9919 1461  
                                                     STR_1 2074  
                                                     STR_2 2069  
                                                     l8969 0B0D  
                                                     l8977 0B11  
                                                     l9961 1438  
                                                     l9953 1421  
                                                     l9945 1418  
                                                     l9929 1479  
                                                     STR_3 2069  
                                                     STR_4 2052  
                                                     l8979 0B19  
                                                     l9963 143A  
                                                     l9955 1423  
                                                     l9947 141B  
                                                     l9939 1406  
                                                     STR_5 2052  
                                                     STR_6 2074  
                                                     l9965 143B  
                                                     l9957 142A  
                                                     l9949 141D  
                                                     l9981 1A8E  
                                                     l9967 143C  
                                                     l9959 1431  
                                                     l9983 1A91  
                                                     l9991 159C  
                                                     l9975 1ABB  
                                                     l9897 1AE6  
                                                     l9969 1441  
                                                     l9977 1A8A  
                                                     l9993 159E  
                                                     l9985 158D  
                                                     l9899 1ADB  
                                                     l9979 1A8C  
                                                     l9995 15A0  
                                                     l9987 158F  
                                                     l9997 15A2  
                                                     l9989 1591  
                                                     l9999 15A3  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                                                     u6120 081D  
                                                     u6121 081C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     u6130 0829  
                                                     u6131 0828  
                                                     u6140 0AF8  
                                                     _PMD0 0796  
                                                     u6141 0AF7  
                                                     _PMD1 0797  
                                                     u6150 0AFE  
                                                     _PMD2 0798  
                                                     u6151 0AFD  
                                                     _PMD3 0799  
                                                     u6080 1CB6  
                                                     u6160 0B07  
                                                     _PMD4 079A  
                                                     u6081 1CB5  
                                                     u6161 0B06  
                                                     _PMD5 079B  
                                                     u6170 0B0D  
                                                     _PMD6 079C  
                                                     u6171 0B0C  
                                                     _PMD7 079D  
                                                     u6500 1F28  
                                                     u6510 1F36  
                                                     u6511 1F35  
                                                     u6440 1A7F  
                                                     u6441 1A7D  
                                                     u6450 1A80  
                                                     u6460 1A88  
                                                     u6461 1A86  
                                                     u6470 1A89  
                                                     u5930 1006  
                                                     u6490 1F27  
                                                     u5931 1005  
                                                     u6491 1F25  
                                                     u5940 101E  
                                                     u6484 1F1E  
                                                     u6660 1F43  
                                                     u5941 101D  
                                                     u6485 1F1C  
                                                     u6661 1F42  
                                                     u5880 1FDE  
                                                     u5881 1FDD  
                                                     u5890 1FF6  
                                                     u6674 1F4A  
                                                     u5891 1FF5  
                                                     u6675 1F49  
                                                     u6684 1F57  
                                                     u6685 1F56  
                                                     u7670 1AEB  
                                                     u7671 1AEA  
                                                     u7680 1AE0  
                                                     u7681 1ADF  
                                                     u7690 1B1B  
                                                     u7691 1B1A  
                                                     u8860 1CBD  
                                                     u8861 1CBC  
                                                     u8870 1CC3  
                                                     u8871 1CC2  
                                                     u8890 09DA  
                                                     u8891 09D9  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1FB0  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 1F88  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 01A0  
                                                     _main 072A  
                                                     _peek 00D7  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 0800  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 1107  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 1482  
                                         ??_I2C1_SetBuffer 0073  
                                          ___fldiv@new_exp 004C  
                             __end_of_EUSART2_Transmit_ISR 1EAC  
                              __end_of_RN487X_EnterCmdMode 1D10  
                                             _statusBuffer 0320  
                                         _setTemperatureEn 138C  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 1406  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0EBA  
                            _LIGHTBLUE_ParseIncomingPacket 0DDA  
                                  __end_of_TMR0_Initialize 1C77  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002C  
                                   _i2c_write1ByteRegister 1165  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1ABB  
                                                    l10001 15A4  
                                                    l10011 15A9  
                                                    l10003 15A5  
                                                    l10021 15B2  
                                                    l10013 15AA  
                                                    l10005 15A6  
                                                    l10031 15B9  
                                                    l10023 15B4  
                                                    l10015 15AC  
                                                    l10007 15A7  
                                                    l10041 15CA  
                                                    l10033 15C0  
                                                    l10025 15B6  
                                                    l10017 15AE  
                                                    l10009 15A8  
                                                    l10051 1AB1  
                                                    l10043 15CC  
                                                    l10035 15C2  
                                                    l10027 15B7  
                                                    l10019 15B0  
                                                    l10053 1AB4  
                                                    l10045 15CE  
                                                    l10037 15C5  
                                                    l10029 15B8  
                                                    l10061 1C63  
                                                    l10055 1AB5  
                                                    l10047 15D1  
                                                    l10039 15C8  
                                                    l10063 1C71  
                                                    l11031 1CD3  
                                                    l10057 1AB8  
                                                    l10049 15D3  
                                                    l11033 1CD6  
                                                    l11041 19D7  
                                                    l10059 1AB9  
                                                    l11035 1CD9  
                                                    l11027 1CCD  
                                                    l11037 1CDC  
                                                    l11029 1CD0  
                                                    l11039 1CDF  
                                                    l14001 1346  
                                                    l14003 1349  
                                                    l14011 1A54  
                                                    l13301 1BAD  
                                                    l14021 10C6  
                                                    l14005 1B75  
                                                    l13303 1BB4  
                                                    l13311 1BC5  
                                                    l14015 10AD  
                                                    l14023 10DB  
                                                    l14103 1E0C  
                                                    l14017 10AD  
                                                    l14025 10DB  
                                                    l10593 19E8  
                                                    l14201 042D  
                                                    l14121 037E  
                                                    l10921 1CB8  
                                                    l15001 0FEA  
                                                    l14105 1E0C  
                                                    l14009 1A4F  
                                                    l14113 1AF3  
                                                    l13307 1BB6  
                                                    l13315 1BC7  
                                                    l13323 1D28  
                                                    l13331 1BE0  
                                                    l13411 19AA  
                                                    l13403 19B9  
                                                    l14019 10B5  
                                                    l14027 10E3  
                                                    l14043 1B65  
                                                    l14211 0440  
                                                    l14203 0431  
                                                    l14131 0395  
                                                    l14123 0382  
                                                    l14051 0937  
                                                    l10923 1CBD  
                                                    l15003 0FEF  
                                                    l14107 1E15  
                                                    l13309 1BBE  
                                                    l13317 1BCF  
                                                    l13325 1D3E  
                                                    l13333 1BE7  
                                                    l13341 1BF8  
                                                    l13501 1520  
                                                    l13413 19AD  
                                                    l13405 19BC  
                                                    l14029 10F4  
                                                    l14045 1B6F  
                                                    l15101 0A1E  
                                                    l14301 056E  
                                                    l14221 045D  
                                                    l14205 0433  
                                                    l14213 0444  
                                                    l14141 03A9  
                                                    l14133 0396  
                                                    l14125 0383  
                                                    l14117 0378  
                                                    l14061 0959  
                                                    l14053 093E  
                                                    l10925 1CC3  
                                                    l15005 0FF4  
                                                    l15021 1C8C  
                                                    l14109 1E25  
                                                    l13271 1EF3  
                                                    l13319 1BD6  
                                                    l13423 1956  
                                                    l13431 199D  
                                                    l13511 1528  
                                                    l15111 0A45  
                                                    l15103 0A30  
                                                    l14303 0572  
                                                    l14231 0473  
                                                    l14223 0465  
                                                    l14215 044F  
                                                    l14207 0437  
                                                    l14151 03B6  
                                                    l14143 03AA  
                                                    l14127 0388  
                                                    l14135 0398  
                                                    l14119 037C  
                                                    l14311 0580  
                                                    l14071 0976  
                                                    l14063 0960  
                                                    l14055 0940  
                                                    l14047 0926  
                                                    l10927 1CC6  
                                                    l10935 1CCB  
                                                    l15031 087E  
                                                    l15007 0FF9  
                                                    l15023 1C92  
                                                    l13601 1961  
                                                    l13281 1B52  
                                                    l13273 1EF9  
                                                    l13353 1B83  
                                                    l13329 1BD8  
                                                    l13337 1BE9  
                                                    l13345 1BFA  
                                                    l13361 1D40  
                                                    l13409 196A  
                                                    l13417 1970  
                                                    l13433 199E  
                                                    l13441 1A76  
                                                    l13505 1524  
                                                    l13521 1A4A  
                                                    l15201 0DF6  
                                                    l15113 0A4A  
                                                    l14305 0574  
                                                    l14241 049B  
                                                    l14233 0477  
                                                    l14225 0469  
                                                    l14217 0454  
                                                    l14209 0438  
                                                    l14161 03D4  
                                                    l14153 03BB  
                                                    l14145 03AC  
                                                    l14137 03A0  
                                                    l14129 038D  
                                                    l14401 067F  
                                                    l14321 0590  
                                                    l14313 0584  
                                                    l10953 097D  
                                                    l14057 0945  
                                                    l14065 0966  
                                                    l14049 0931  
                                                    l10929 1CC9  
                                                    l15041 08AA  
                                                    l15033 0884  
                                                    l15009 0FFE  
                                                    l15025 1C9F  
                                                    l14081 08F2  
                                                    l13427 1958  
                                                    l13275 1F08  
                                                    l13283 1AC5  
                                                    l13355 1B8B  
                                                    l13291 1B94  
                                                    l13339 1BF1  
                                                    l13347 1C02  
                                                    l13363 1D56  
                                                    l13419 1954  
                                                    l13371 1997  
                                                    l13523 1A4D  
                                                    l13603 1B2C  
                                                    l13611 1F88  
                                                    l15211 0E26  
                                                    l15203 0E03  
                                                    l14307 057A  
                                                    l14251 04E3  
                                                    l14243 04BF  
                                                    l14235 0478  
                                                    l14227 046D  
                                                    l14171 03E2  
                                                    l14163 03D8  
                                                    l14155 03C3  
                                                    l14147 03B0  
                                                    l14139 03A3  
                                                    l14411 0693  
                                                    l14403 0683  
                                                    l14331 05A8  
                                                    l14323 0595  
                                                    l14315 0586  
                                                    l10955 09C3  
                                                    l10939 1973  
                                                    l14067 096D  
                                                    l14059 0951  
                                                    l15051 08B6  
                                                    l15035 0892  
                                                    l15019 1C8C  
                                                    l14091 091D  
                                                    l14083 0900  
                                                    l14075 08D2  
                                                    l13285 1964  
                                                    l13277 1B47  
                                                    l13357 1B92  
                                                    l13293 1B9C  
                                                    l13349 1C09  
                                                    l13533 1058  
                                                    l13429 199B  
                                                    l13437 1A6F  
                                                    l13445 1A56  
                                                    l13461 1767  
                                                    l13453 175A  
                                                    l13373 19A0  
                                                    l13381 19A8  
                                                    l13605 1B2D  
                                                    l13701 11E9  
                                                    l14501 1719  
                                                    l13621 1FA4  
                                                    l13613 1F88  
                                                    l15221 0E43  
                                                    l15213 0E29  
                                                    l15205 0E09  
                                                    l15109 0A37  
                                                    l14309 057E  
                                                    l14261 04FC  
                                                    l14253 04E8  
                                                    l14245 04C5  
                                                    l14237 0480  
                                                    l14229 0471  
                                                    l14181 03EC  
                                                    l14173 03E4  
                                                    l14165 03DC  
                                                    l14157 03C4  
                                                    l14149 03B1  
                                                    l14421 06B4  
                                                    l14413 0694  
                                                    l14405 0684  
                                                    l14341 05B9  
                                                    l14333 05AD  
                                                    l14325 059D  
                                                    l14317 058A  
                                                    l10957 09CC  
                                                    l14069 0970  
                                                    l15061 08C2  
                                                    l15037 08A0  
                                                    l15029 087E  
                                                    l14093 0922  
                                                    l14085 090E  
                                                    l14077 08D7  
                                                    l13287 1967  
                                                    l13279 1B4C  
                                                    l13295 1BA3  
                                                    l13391 196D  
                                                    l13367 19DC  
                                                    l13535 105B  
                                                    l13527 1051  
                                                    l13439 1A71  
                                                    l13447 1A58  
                                                    l13471 176F  
                                                    l13519 1A48  
                                                    l13375 19A3  
                                                    l13607 1B30  
                                                    l13711 11FA  
                                                    l13703 11EE  
                                                    l14511 1744  
                                                    l14503 1728  
                                                    l13623 1FAA  
                                                    l13615 1F93  
                                                    l13631 1FB0  
                                                    l15231 0E5C  
                                                    l15223 0E48  
                                                    l15215 0E2F  
                                                    l15207 0E12  
                                                    l14263 0501  
                                                    l14271 050D  
                                                    l14247 04CA  
                                                    l14239 0485  
                                                    l14191 03F6  
                                                    l14183 03EE  
                                                    l14175 03E6  
                                                    l14167 03DE  
                                                    l14159 03C6  
                                                    l14423 06B9  
                                                    l14431 06E1  
                                                    l14415 0698  
                                                    l14407 068B  
                                                    l14351 05D9  
                                                    l14343 05BE  
                                                    l14335 05AF  
                                                    l14327 059E  
                                                    l14319 058B  
                                                    l15071 08CE  
                                                    l15039 08A5  
                                                    l15047 08AC  
                                                    l14087 0913  
                                                    l14079 08E4  
                                                    l13721 1D10  
                                                    l13289 1986  
                                                    l13529 1054  
                                                    l13545 1061  
                                                    l13449 1A5C  
                                                    l13473 1792  
                                                    l13465 176B  
                                                    l13457 1763  
                                                    l13385 19AF  
                                                    l13553 19B4  
                                                    l13561 19C5  
                                                    l13609 1B33  
                                                    l13705 11EF  
                                                    l14513 174C  
                                                    l14505 172F  
                                                    l13625 1FAB  
                                                    l13617 1F98  
                                                    l13641 1FD2  
                                                    l13633 1FBB  
                                                    l15233 0E63  
                                                    l15225 0E4A  
                                                    l15217 0E39  
                                                    l15209 0E19  
                                                    l15081 09E5  
                                                    l14265 0504  
                                                    l14257 04F1  
                                                    l14249 04D3  
                                                    l14273 0511  
                                                    l14193 03F8  
                                                    l14185 03F0  
                                                    l14177 03E8  
                                                    l14169 03E0  
                                                    l14441 0718  
                                                    l14433 06EE  
                                                    l14425 06C1  
                                                    l14417 06AC  
                                                    l14409 068F  
                                                    l14361 05F7  
                                                    l14353 05E5  
                                                    l14345 05C6  
                                                    l14337 05B3  
                                                    l14329 05A0  
                                                    l14521 0A5F  
                                                    l13801 17BA  
                                                    l15049 08B1  
                                                    l15057 08B8  
                                                    l14089 0918  
                                                    l13731 1D20  
                                                    l13723 1D17  
                                                    l13299 1BA5  
                                                    l13395 198A  
                                                    l13539 105D  
                                                    l13475 179E  
                                                    l13491 150F  
                                                    l13379 19A5  
                                                    l13387 19B2  
                                                    l13555 19B7  
                                                    l13563 19C6  
                                                    l13571 1F65  
                                                    l13651 1B3F  
                                                    l13707 11F4  
                                                    l13715 1AD0  
                                                    l14515 1750  
                                                    l14507 1737  
                                                    l13619 1FA0  
                                                    l13627 1FAD  
                                                    l13643 1FD3  
                                                    l13635 1FC0  
                                                    l15235 0E7D  
                                                    l15227 0E4D  
                                                    l15219 0E41  
                                                    l15251 0E98  
                                                    l15171 0C90  
                                                    l15091 0A10  
                                                    l14291 0552  
                                                    l14283 0524  
                                                    l14275 0512  
                                                    l14267 0506  
                                                    l14259 04F8  
                                                    l14187 03F2  
                                                    l14179 03EA  
                                                    l14195 03FA  
                                                    l14443 071C  
                                                    l14435 0709  
                                                    l14427 06C5  
                                                    l14371 0620  
                                                    l14355 05E9  
                                                    l14347 05C7  
                                                    l14339 05B4  
                                                    l14451 0D31  
                                                    l14523 0A6F  
                                                    l13811 17C9  
                                                    l15059 08BD  
                                                    l15067 08C4  
                                                    l14099 0924  
                                                    l14611 00E6  
                                                    l14603 00AB  
                                                    l13661 195B  
                                                    l13733 1D23  
                                                    l13725 1D18  
                                                    l13477 17A9  
                                                    l13493 1519  
                                                    l13397 19BE  
                                                    l13581 1F6D  
                                                    l13717 19C8  
                                                    l13653 1B41  
                                                    l13709 11F7  
                                                    l13741 15D8  
                                                    l14509 173B  
                                                    l13637 1FC8  
                                                    l13645 1FD5  
                                                    l13629 1FB0  
                                                    l15245 0E8E  
                                                    l15237 0E85  
                                                    l15229 0E53  
                                                    l15181 0CD4  
                                                    l15173 0C9B  
                                                    l15093 0A12  
                                                    l15085 09EE  
                                                    l14293 055B  
                                                    l14285 0529  
                                                    l14277 0516  
                                                    l14269 050B  
                                                    l14197 03FB  
                                                    l14189 03F4  
                                                    l14445 071E  
                                                    l14437 070C  
                                                    l14429 06DD  
                                                    l14381 0641  
                                                    l14373 0628  
                                                    l14365 0600  
                                                    l14349 05C9  
                                                    l14453 0D36  
                                                    l14525 0AAD  
                                                    l14517 0A56  
                                                    l13813 17D2  
                                                    l13805 17BD  
                                                    l15261 1B20  
                                                    l15069 08C9  
                                                    l14621 012D  
                                                    l14613 00EE  
                                                    l14605 00AB  
                                                    l13727 1D1A  
                                                    l13735 1D26  
                                                    l13479 17AB  
                                                    l13495 151C  
                                                    l13487 1502  
                                                    l13399 19C1  
                                                    l13559 19C3  
                                                    l13575 1F69  
                                                    l13567 1F60  
                                                    l13591 1028  
                                                    l13671 1E79  
                                                    l13663 1E6A  
                                                    l13655 1B44  
                                                    l13647 1B39  
                                                    l13751 15F1  
                                                    l13639 1FCC  
                                                    l15247 0E94  
                                                    l15239 0E88  
                                                    l15191 0DDC  
                                                    l14551 19F4  
                                                    l15183 0CE6  
                                                    l15175 0CAD  
                                                    l15095 0A16  
                                                    l15087 0A07  
                                                    l15079 09DB  
                                                    l14295 0560  
                                                    l14287 0531  
                                                    l14279 051C  
                                                    l14199 0412  
                                                    l14439 0714  
                                                    l14391 0664  
                                                    l14383 0642  
                                                    l14375 062A  
                                                    l14367 0610  
                                                    l14359 05F2  
                                                    l14471 0D7C  
                                                    l14463 0D63  
                                                    l14455 0D3A  
                                                    l13911 1E5F  
                                                    l13903 1E4A  
                                                    l14527 0AC9  
                                                    l14519 0A56  
                                                    l13831 1DB9  
                                                    l13823 1DA3  
                                                    l13815 17DB  
                                                    l13807 17C1  
                                                    l15263 1B28  
                                                    l14631 019C  
                                                    l14623 0159  
                                                    l14615 00F3  
                                                    l14607 00B6  
                                                    l14711 0C10  
                                                    l14703 0BEC  
                                                    l13729 1D1D  
                                                    l13489 150A  
                                                    l13569 1F62  
                                                    l13593 102B  
                                                    l13673 1E7D  
                                                    l13665 1E71  
                                                    l13649 1B3E  
                                                    l13753 15F9  
                                                    l15193 0DDD  
                                                    l15185 0D16  
                                                    l15177 0CB2  
                                                    l15169 0C86  
                                                    l15089 0A08  
                                                    l14297 0568  
                                                    l14289 0535  
                                                    l14377 062F  
                                                    l14385 0649  
                                                    l14393 0668  
                                                    l14369 0618  
                                                    l14481 0DA9  
                                                    l14473 0D84  
                                                    l14465 0D66  
                                                    l14457 0D4A  
                                                    l13905 1E4A  
                                                    l13921 1EE1  
                                                    l13913 107E  
                                                    l13825 1DAD  
                                                    l13817 17E1  
                                                    l13809 17C5  
                                                    l15265 1B2A  
                                                    l14641 0209  
                                                    l14633 01A2  
                                                    l14625 0161  
                                                    l14617 011F  
                                                    l14609 00BB  
                                                    l14721 0C40  
                                                    l14713 0C18  
                                                    l14705 0BEC  
                                                    l15281 16EB  
                                                    l15273 16C5  
                                                    l13659 195E  
                                                    l13595 1030  
                                                    l13675 1E80  
                                                    l13667 1E72  
                                                    l13691 11D3  
                                                    l13683 11C8  
                                                    l13763 1615  
                                                    l13755 1602  
                                                    l13747 15DE  
                                                    l13835 1AFE  
                                                    l13739 1B08  
                                                    l13771 1D89  
                                                    l14555 19EE  
                                                    l13843 1CF9  
                                                    l13851 1545  
                                                    l14571 128F  
                                                    l14563 126E  
                                                    l15195 0DE1  
                                                    l15187 0D1A  
                                                    l15179 0CBD  
                                                    l14299 056D  
                                                    l14395 066E  
                                                    l14387 065B  
                                                    l14379 063D  
                                                    l14491 0DD1  
                                                    l14483 0DB3  
                                                    l14475 0D92  
                                                    l14467 0D71  
                                                    l14459 0D5A  
                                                    l13907 1E53  
                                                    l13923 1EE6  
                                                    l13931 1217  
                                                    l13915 166E  
                                                    l13819 17F1  
                                                    l15259 1B20  
                                                    l14803 0858  
                                                    l14651 0252  
                                                    l14643 0211  
                                                    l14635 01CE  
                                                    l14627 0167  
                                                    l14619 0127  
                                                    l14723 0C55  
                                                    l14715 0C1D  
                                                    l14731 0C81  
                                                    l14707 0BF7  
                                                    l13597 1038  
                                                    l13677 1E83  
                                                    l13669 1E74  
                                                    l13693 11DA  
                                                    l13685 11CF  
                                                    l13765 1619  
                                                    l13757 1605  
                                                    l13749 15E8  
                                                    l13837 1AFF  
                                                    l13773 1D8E  
                                                    l13845 1D00  
                                                    l13861 1559  
                                                    l13853 154C  
                                                    l14565 126F  
                                                    l15197 0DE7  
                                                    l15189 0D23  
                                                    l14397 0676  
                                                    l14389 065C  
                                                    l14485 0DC7  
                                                    l14477 0D9B  
                                                    l14469 0D78  
                                                    l13781 19D2  
                                                    l13909 1E5C  
                                                    l17301 1195  
                                                    l13917 1ED0  
                                                    l13933 121C  
                                                    l13925 11FF  
                                                    l13829 1DAF  
                                                    l13941 1648  
                                                    l14805 085D  
                                                    l14813 0864  
                                                    l14661 02C2  
                                                    l14653 0280  
                                                    l14645 0217  
                                                    l14637 01D6  
                                                    l14629 0194  
                                                    l14725 0C5D  
                                                    l14717 0C32  
                                                    l14709 0BFC  
                                                    l14741 1494  
                                                    l15293 1706  
                                                    l15285 16F4  
                                                    l15277 16E2  
                                                    l15269 16BC  
                                                    l13599 103B  
                                                    l13679 1E86  
                                                    l13695 11DF  
                                                    l13687 11D1  
                                                    l13767 161F  
                                                    l13759 160F  
                                                    l13839 1B05  
                                                    l14495 170C  
                                                    l13775 1D92  
                                                    l17311 12A6  
                                                    l14559 19CD  
                                                    l13791 110A  
                                                    l13847 1D06  
                                                    l13871 1569  
                                                    l13863 155D  
                                                    l13855 1550  
                                                    l14567 127D  
                                                    l14575 129B  
                                                    l15199 0DED  
                                                    l14399 0678  
                                                    l14487 0DCC  
                                                    l14479 0D9F  
                                                    l17303 1197  
                                                    l13919 1ED5  
                                                    l13927 1205  
                                                    l13951 166C  
                                                    l13935 1623  
                                                    l14583 1DF8  
                                                    l14911 0F64  
                                                    l14903 0F50  
                                                    l14815 0869  
                                                    l14823 0870  
                                                    l14807 0862  
                                                    l14671 0330  
                                                    l14663 02C8  
                                                    l14655 0288  
                                                    l14647 0244  
                                                    l14639 01DC  
                                                    l14727 0C63  
                                                    l14719 0C3A  
                                                    l14751 14BD  
                                                    l14743 149E  
                                                    l14735 1484  
                                                    l13697 11E0  
                                                    l13689 11D2  
                                                    l14497 170D  
                                                    l13777 1D9B  
                                                    l17313 12AA  
                                                    l13793 1118  
                                                    l13881 1577  
                                                    l13873 156B  
                                                    l13865 1560  
                                                    l13857 1553  
                                                    l14569 1285  
                                                    l17321 1D58  
                                                    l14489 0DD0  
                                                    l17305 11AE  
                                                    l13785 1C50  
                                                    l13929 1208  
                                                    l13945 164B  
                                                    l13937 1629  
                                                    l14585 1E06  
                                                    l14577 1DF0  
                                                    l14921 0F70  
                                                    l14905 0F55  
                                                    l14841 0ECE  
                                                    l14825 0875  
                                                    l14817 086E  
                                                    l14593 1C2D  
                                                    l13961 1178  
                                                    l14673 0338  
                                                    l14665 02F5  
                                                    l14657 028E  
                                                    l14649 024C  
                                                    l14729 0C79  
                                                    l14745 14A6  
                                                    l14737 1484  
                                                    l14761 13DB  
                                                    l15289 16FD  
                                                    l13699 11E5  
                                                    l13971 1C1A  
                                                    l14499 1713  
                                                    l17315 12B8  
                                                    l17331 113A  
                                                    l13795 112A  
                                                    l13891 1589  
                                                    l13883 157B  
                                                    l13875 156D  
                                                    l13867 1562  
                                                    l13859 1555  
                                                    l17323 1D5D  
                                                    l17307 11BE  
                                                    l13787 1C52  
                                                    l13939 1636  
                                                    l13947 165E  
                                                    l14579 1DF6  
                                                    l14923 0F75  
                                                    l14931 0F7C  
                                                    l14907 0F5A  
                                                    l14851 0F02  
                                                    l14843 0EDC  
                                                    l14835 0EBA  
                                                    l14827 087A  
                                                    l14595 1C3A  
                                                    l13963 1180  
                                                    l13955 1166  
                                                    l14675 033E  
                                                    l14667 02FD  
                                                    l14659 02BA  
                                                    l14691 13A7  
                                                    l14683 138E  
                                                    l14747 14AB  
                                                    l14739 148F  
                                                    l14771 1402  
                                                    l14763 13E4  
                                                    l14755 13CB  
                                                    l17317 12C6  
                                                    l17309 12A4  
                                                    l17341 115C  
                                                    l17333 113B  
                                                    l13797 112E  
                                                    l13789 1108  
                                                    l13885 157F  
                                                    l13877 1571  
                                                    l13869 1566  
                                                    l13981 1E2A  
                                                    l17325 1D5E  
                                                    l13949 1663  
                                                    l14589 1E0A  
                                                    l14781 1CF7  
                                                    l14933 0F81  
                                                    l14925 0F7A  
                                                    l14909 0F5F  
                                                    l14917 0F66  
                                                    l14853 0F07  
                                                    l14861 0F0E  
                                                    l14845 0EEA  
                                                    l14837 0EBA  
                                                    l13965 1189  
                                                    l13957 1166  
                                                    l14677 036C  
                                                    l14669 0303  
                                                    l14693 13AF  
                                                    l14685 138E  
                                                    l14749 14B6  
                                                    l14765 13EC  
                                                    l14757 13CB  
                                                    l13975 1C1C  
                                                    l17271 123F  
                                                    l17319 12D4  
                                                    l17335 1144  
                                                    l13895 1DD5  
                                                    l13887 1581  
                                                    l13879 1575  
                                                    l13983 1E2D  
                                                    l17327 1D67  
                                                    l17351 12F8  
                                                    l17343 12DD  
                                                    l13799 17AE  
                                                    l13991 1326  
                                                    l14775 1CE3  
                                                    l14951 0FA1  
                                                    l14935 0F86  
                                                    l14919 0F6B  
                                                    l14863 0F13  
                                                    l14855 0F0C  
                                                    l14847 0EF8  
                                                    l14839 0EC0  
                                                    l14791 083E  
                                                    l14599 1C3C  
                                                    l13967 118C  
                                                    l13959 116F  
                                                    l14679 0374  
                                                    l14695 13B4  
                                                    l14687 1399  
                                                    l14767 13F1  
                                                    l14759 13D6  
                                                    l13969 1C0B  
                                                    l13977 1C2B  
                                                    l17273 1250  
                                                    l17281 1C77  
                                                    l17337 114C  
                                                    l17329 1135  
                                                    l13897 1DE0  
                                                    l13889 1583  
                                                    l13985 1E3A  
                                                    l17353 130D  
                                                    l17345 12E1  
                                                    l13993 132B  
                                                    l14777 1CE3  
                                                    l14961 0FAD  
                                                    l14953 0FA6  
                                                    l14937 0F8B  
                                                    l14945 0F92  
                                                    l14881 0F33  
                                                    l14865 0F18  
                                                    l14849 0EFD  
                                                    l14793 084C  
                                                    l14785 082B  
                                                    l14697 13BE  
                                                    l14689 139E  
                                                    l14769 13FB  
                                                    l17361 0735  
                                                    l17291 0BA9  
                                                    l17283 0B5B  
                                                    l17275 1254  
                                                    l17339 1153  
                                                    l13899 1DE6  
                                                    l13987 1E45  
                                                    l17347 12EA  
                                                    l13995 1338  
                                                    l14779 1CE9  
                                                    l14963 0FB2  
                                                    l14947 0F97  
                                                    l14939 0F90  
                                                    l14891 0F3F  
                                                    l14883 0F38  
                                                    l14867 0F1D  
                                                    l14875 0F24  
                                                    l14795 0851  
                                                    l14787 082B  
                                                    l14699 13C5  
                                                    l17371 0750  
                                                    l17363 0738  
                                                    l17355 072A  
                                                    l17541 1F7F  
                                                    l17293 0BC2  
                                                    l17285 0B78  
                                                    l17277 1262  
                                                    l17269 1234  
                                                    l17349 12F3  
                                                    l13997 133F  
                                                    l13989 1316  
                                                    l14981 0FD2  
                                                    l14965 0FB7  
                                                    l14973 0FBE  
                                                    l14949 0F9C  
                                                    l14893 0F44  
                                                    l14877 0F29  
                                                    l14869 0F22  
                                                    l14797 0856  
                                                    l14789 0831  
                                                    l17381 079A  
                                                    l17373 0760  
                                                    l17365 073E  
                                                    l17357 0733  
                                                    l17543 1536  
                                                    l17295 0BD1  
                                                    l17287 0B7D  
                                                    l17279 1266  
                                                    l13999 1342  
                                                    l14991 0FDE  
                                                    l14975 0FC3  
                                                    l14967 0FBC  
                                                    l14959 0FA8  
                                                    l14895 0F49  
                                                    l14879 0F2E  
                                                    l17383 07A0  
                                                    l17375 076F  
                                                    l17391 07B3  
                                                    l17367 0746  
                                                    l17359 0734  
                                                    l17545 1782  
                                                    l17297 0BD5  
                                                    l17289 0B88  
                                                    l14993 0FE3  
                                                    l14977 0FC8  
                                                    l14897 0F4E  
                                                    l14889 0F3A  
                                                    l17393 07C2  
                                                    l17385 07A6  
                                                    l17377 0783  
                                                    l17369 074E  
                                                    l17547 106F  
                                                    l17299 0BDE  
                                                    l17539 0EA2  
                                                    l14995 0FE8  
                                                    l14979 0FCD  
                                                    l14987 0FD4  
                                                    l17395 07DB  
                                                    l17387 07AA  
                                                    l17379 078F  
                                                    l14989 0FD9  
                                                    l17397 07EE  
                                                    l17389 07AD  
                                    _eusart1RxStatusBuffer 0144  
                                            ___fltol@sign1 006D  
                                        __end_of_I2C1_Open 11FD  
                                          __end_of___fladd 0580  
                                                    ?_main 0070  
                                          __end_of___fldiv 072A  
                                           _i2c_readNBytes 1E49  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                          __end_of___fltol 0A56  
                                                    u12000 116F  
                                                    u12001 116E  
                                                    u12010 1194  
                                                    u12011 1193  
                                                    u12020 1C18  
                                                    u12100 10E3  
                                                    u12021 1C16  
                                                    u12101 10E2  
                                                    u12030 1C19  
                                                    u12040 1C29  
                                                    u12200 0382  
                                                    u13000 0D9F  
                                                    u12120 0937  
                                                    u12041 1C27  
                                                    u12201 0381  
                                                    u13001 0D9E  
                                                    u12121 0936  
                                                    u12050 1C2A  
                                                    u12210 0388  
                                                    u13010 0DA5  
                                                    u12130 093E  
                                                    u12115 10FA  
                                                    u12211 0387  
                                                    u13011 0DA4  
                                                    u12131 093D  
                                                    u12300 041C  
                                                    u12220 038D  
                                                    u13020 0DA9  
                                                    u12060 1326  
                                                    u12140 0959  
                                                    u12301 041A  
                                                    u12221 038C  
                                                    u13021 0DA8  
                                                    u12061 1325  
                                                    u12141 0958  
                                                    u12310 041D  
                                                    u12230 03A9  
                                                    u13030 0DBD  
                                                    u12070 1338  
                                                    u12150 096D  
                                                    u12231 03A8  
                                                    u12071 1337  
                                                    u12151 096C  
                                                    u11600 1030  
                                                    u12080 10B5  
                                                    u13120 127D  
                                                    u12400 0477  
                                                    u12320 042D  
                                                    u12240 03B0  
                                                    u13040 0DCC  
                                                    u14000 08B6  
                                                    u12160 0913  
                                                    u13200 00F3  
                                                    u11601 102F  
                                                    u12081 10B4  
                                                    u13121 127C  
                                                    u12401 0476  
                                                    u12321 042C  
                                                    u12241 03AF  
                                                    u13041 0DCB  
                                                    u14001 08B5  
                                                    u12161 0912  
                                                    u13201 00F2  
                                                    u11610 1038  
                                                    u13130 1281  
                                                    u12330 0437  
                                                    u12250 03B6  
                                                    u13050 0DD0  
                                                    u14010 08BD  
                                                    u12170 0918  
                                                    u13210 012D  
                                                    u11611 1037  
                                                    u13131 1280  
                                                    u13115 1272  
                                                    u12331 0436  
                                                    u12251 03B5  
                                                    u13051 0DCF  
                                                    u13035 0DB9  
                                                    u14011 08BC  
                                                    u12171 0917  
                                                    u13211 012C  
                                                    u11540 1EF9  
                                                    u11620 1B38  
                                                    u11700 1E71  
                                                    u13140 128A  
                                                    u14100 0A2F  
                                                    u12500 0511  
                                                    u12420 049B  
                                                    u12260 03BB  
                                                    u14020 08C2  
                                                    u12180 091D  
                                                    u13300 033E  
                                                    u13220 0167  
                                                    u11541 1EF8  
                                                    u11621 1B37  
                                                    u11701 1E70  
                                                    u13141 1288  
                                                    u14101 0A2E  
                                                    u12501 0510  
                                                    u12421 049A  
                                                    u12261 03BA  
                                                    u14021 08C1  
                                                    u12181 091C  
                                                    u13301 033D  
                                                    u13221 0166  
                                                    u11550 1B4C  
                                                    u11710 1E79  
                                                    u13070 1737  
                                                    u11630 1F8E  
                                                    u13150 128B  
                                                    u14110 0A36  
                                                    u12510 0516  
                                                    u12430 04CA  
                                                    u12350 044B  
                                                    u12270 03D4  
                                                    u14030 08C9  
                                                    u12190 0922  
                                                    u13230 01A2  
                                                    u13310 139E  
                                                    u11551 1B4B  
                                                    u11711 1E78  
                                                    u12095 10CC  
                                                    u13071 1736  
                                                    u11631 1F8D  
                                                    u14111 0A35  
                                                    u12511 0515  
                                                    u12431 04C9  
                                                    u12423 0497  
                                                    u12415 047A  
                                                    u12351 044A  
                                                    u12271 03D3  
                                                    u14031 08C8  
                                                    u12191 0921  
                                                    u13231 01A1  
                                                    u13311 139D  
                                                    u11560 1762  
                                                    u11720 11CF  
                                                    u13080 174C  
                                                    u11640 1F93  
                                                    u11800 1118  
                                                    u14200 0E09  
                                                    u12600 056D  
                                                    u12520 051C  
                                                    u12440 04E3  
                                                    u12360 044F  
                                                    u12280 03D8  
                                                    u13160 1DF6  
                                                    u14040 08CE  
                                                    u13240 01DC  
                                                    u13320 13B4  
                                                    u13400 13F1  
                                                    u11561 1761  
                                                    u11721 11CE  
                                                    u13081 174B  
                                                    u13065 171C  
                                                    u11641 1F92  
                                                    u11801 1117  
                                                    u14201 0E08  
                                                    u12601 056C  
                                                    u12521 051B  
                                                    u12441 04E2  
                                                    u12361 044E  
                                                    u12345 043A  
                                                    u12281 03D7  
                                                    u13161 1DF5  
                                                    u14041 08CD  
                                                    u13241 01DB  
                                                    u13321 13B3  
                                                    u13401 13F0  
                                                    u11730 1D17  
                                                    u11570 17A9  
                                                    u11650 1FAA  
                                                    u11810 1134  
                                                    u14130 0A45  
                                                    u14050 09E5  
                                                    u12610 0572  
                                                    u12530 0523  
                                                    u12450 04E8  
                                                    u12370 0454  
                                                    u12290 0412  
                                                    u13170 1E06  
                                                    u13410 0851  
                                                    u13250 0217  
                                                    u13330 0BFC  
                                                    u11731 1D16  
                                                    u11571 17A8  
                                                    u11651 1FA9  
                                                    u11811 1133  
                                                    u14131 0A44  
                                                    u14051 09E4  
                                                    u12611 0571  
                                                    u12531 0522  
                                                    u12451 04E7  
                                                    u12371 0453  
                                                    u12291 0411  
                                                    u13171 1E05  
                                                    u13411 0850  
                                                    u13251 0216  
                                                    u13331 0BFB  
                                                    u11580 1519  
                                                    u11740 15E8  
                                                    u11660 1FB6  
                                                    u11900 155D  
                                                    u14220 0E2F  
                                                    u14140 0A4A  
                                                    u14060 0A02  
                                                    u12620 057E  
                                                    u12540 0529  
                                                    u12380 0469  
                                                    u12700 05F7  
                                                    u11820 17BA  
                                                    u13500 0F02  
                                                    u13420 0856  
                                                    u13180 1C3A  
                                                    u13260 0252  
                                                    u13340 0C1D  
                                                    u14300 16EA  
                                                    u11581 1518  
                                                    u11741 15E7  
                                                    u11661 1FB5  
                                                    u11901 155C  
                                                    u14221 0E2E  
                                                    u14141 0A49  
                                                    u14125 0A38  
                                                    u12621 057D  
                                                    u12541 0528  
                                                    u12381 0468  
                                                    u12701 05F6  
                                                    u11821 17B9  
                                                    u13501 0F01  
                                                    u13421 0855  
                                                    u13181 1C39  
                                                    u13261 0251  
                                                    u13341 0C1C  
                                                    u14301 16E9  
                                                    u11590 19E7  
                                                    u11750 160F  
                                                    u11670 1FBB  
                                                    u14230 0E48  
                                                    u14070 0A16  
                                                    u12550 0535  
                                                    u12470 04FC  
                                                    u12390 046D  
                                                    u12710 062F  
                                                    u12630 058A  
                                                    u11910 1E53  
                                                    u11830 17D2  
                                                    u13510 0F07  
                                                    u13430 085D  
                                                    u13270 028E  
                                                    u13190 00BB  
                                                    u13350 0C40  
                                                    u14310 16F3  
                                                    u11591 19E6  
                                                    u11751 160E  
                                                    u11671 1FBA  
                                                    u14231 0E47  
                                                    u14215 0E1E  
                                                    u14071 0A15  
                                                    u12551 0534  
                                                    u12471 04FB  
                                                    u12391 046C  
                                                    u12295 040E  
                                                    u12711 062E  
                                                    u12631 0589  
                                                    u11911 1E52  
                                                    u11831 17D1  
                                                    u13511 0F06  
                                                    u13431 085C  
                                                    u13271 028D  
                                                    u13191 00BA  
                                                    u13351 0C3F  
                                                    u14311 16F2  
                                                    u11760 1614  
                                                    u11680 1FD2  
                                                    u14240 0E53  
                                                    u14080 0A1D  
                                                    u12560 0543  
                                                    u12480 0501  
                                                    u12800 0683  
                                                    u12640 0590  
                                                    u11920 1E67  
                                                    u11840 17DB  
                                                    u13600 0F38  
                                                    u13520 0F0C  
                                                    u13440 0862  
                                                    u13280 02C8  
                                                    u13360 0C63  
                                                    u14320 16FC  
                                                    u11761 1613  
                                                    u11681 1FD1  
                                                    u14241 0E52  
                                                    u14081 0A1C  
                                                    u14065 09FE  
                                                    u12481 0500  
                                                    u12465 04F2  
                                                    u12801 0682  
                                                    u12641 058F  
                                                    u11921 1E66  
                                                    u11841 17DA  
                                                    u13601 0F37  
                                                    u13521 0F0B  
                                                    u13441 0861  
                                                    u13281 02C7  
                                                    u13361 0C62  
                                                    u14321 16FB  
                                                    u11690 1B3E  
                                                    u11770 161F  
                                                    u14250 0E8D  
                                                    u12570 0552  
                                                    u12490 050B  
                                                    u12650 0595  
                                                    u11930 1ED5  
                                                    u11850 17E1  
                                                    u13610 0F3F  
                                                    u13530 0F13  
                                                    u13450 0869  
                                                    u13290 0303  
                                                    u13370 1494  
                                                    u14330 1705  
                                                    u11691 1B3D  
                                                    u11771 161E  
                                                    u14251 0E8C  
                                                    u12571 0551  
                                                    u12491 050A  
                                                    u12651 0594  
                                                    u11931 1ED4  
                                                    u11851 17E0  
                                                    u13611 0F3E  
                                                    u13531 0F12  
                                                    u13451 0868  
                                                    u13291 0302  
                                                    u13371 1493  
                                                    u14331 1704  
                                                    u11780 1D9B  
                                                    u14260 0E94  
                                                    u14180 0D23  
                                                    u12580 055B  
                                                    u12900 0709  
                                                    u12820 0693  
                                                    u12740 0641  
                                                    u12660 05B3  
                                                    u11940 1EE6  
                                                    u11860 17F1  
                                                    u13700 0F70  
                                                    u13620 0F44  
                                                    u13540 0F18  
                                                    u13460 086E  
                                                    u13380 14AB  
                                                    u11781 1D9A  
                                                    u14261 0E93  
                                                    u14181 0D22  
                                                    u14165 0CC0  
                                                    u12581 055A  
                                                    u12565 053F  
                                                    u12901 0708  
                                                    u12821 0692  
                                                    u12741 0640  
                                                    u12725 0630  
                                                    u12661 05B2  
                                                    u11941 1EE5  
                                                    u11861 17F0  
                                                    u13701 0F6F  
                                                    u13621 0F43  
                                                    u13541 0F17  
                                                    u13461 086D  
                                                    u13381 14AA  
                                                    u14190 0DED  
                                                    u12590 0560  
                                                    u12910 071C  
                                                    u12830 0698  
                                                    u12670 05B9  
                                                    u11790 1C62  
                                                    u11950 1233  
                                                    u11870 1DAD  
                                                    u14270 1B28  
                                                    u13710 0F75  
                                                    u13630 0F49  
                                                    u13550 0F1D  
                                                    u13470 0875  
                                                    u13390 13DB  
                                                    u14191 0DEC  
                                                    u14175 0CED  
                                                    u14095 0A1F  
                                                    u12591 055F  
                                                    u12911 071B  
                                                    u12831 0697  
                                                    u12815 0685  
                                                    u12735 0637  
                                                    u12671 05B8  
                                                    u11791 1C61  
                                                    u11951 1232  
                                                    u11871 1DAC  
                                                    u14271 1B27  
                                                    u13711 0F74  
                                                    u13631 0F48  
                                                    u13551 0F1C  
                                                    u13471 0874  
                                                    u13391 13DA  
                                                    u12840 06AC  
                                                    u12760 065B  
                                                    u12680 05BE  
                                                    u12920 0D36  
                                                    u11880 1DB9  
                                                    u11960 1629  
                                                    u13800 0FA6  
                                                    u13720 0F7A  
                                                    u13640 0F4E  
                                                    u13560 0F22  
                                                    u13480 087A  
                                                    u14280 16C4  
                                                    u12905 0705  
                                                    u12841 06AB  
                                                    u12761 065A  
                                                    u12681 05BD  
                                                    u12921 0D35  
                                                    u11881 1DB8  
                                                    u11961 1628  
                                                    u13801 0FA5  
                                                    u13721 0F79  
                                                    u13641 0F4D  
                                                    u13561 0F21  
                                                    u13481 0879  
                                                    u14281 16C3  
                                                    u11890 1550  
                                                    u12850 06B3  
                                                    u12770 066E  
                                                    u12690 05D9  
                                                    u12930 0D3A  
                                                    u11970 1648  
                                                    u13810 0FAD  
                                                    u13730 0F81  
                                                    u13650 0F55  
                                                    u13570 0F29  
                                                    u13490 0EFD  
                                                    u14290 16E1  
                                                    u11891 154F  
                                                    u12851 06B2  
                                                    u12771 066D  
                                                    u12755 0643  
                                                    u12691 05D8  
                                                    u12931 0D39  
                                                    u11955 122F  
                                                    u11971 1647  
                                                    u13811 0FAC  
                                                    u13731 0F80  
                                                    u13651 0F54  
                                                    u13571 0F28  
                                                    u13491 0EFC  
                                                    u14291 16E0  
                                                    u12860 06B9  
                                                    u12780 0676  
                                                    u12940 0D5A  
                                                    u11980 1663  
                                                    u13900 0FDE  
                                                    u13820 0FB2  
                                                    u13740 0F86  
                                                    u13660 0F5A  
                                                    u13580 0F2E  
                                                    u12861 06B8  
                                                    u12781 0675  
                                                    u12765 0657  
                                                    u12941 0D59  
                                                    u11981 1662  
                                                    u13901 0FDD  
                                                    u13821 0FB1  
                                                    u13741 0F85  
                                                    u13661 0F59  
                                                    u13581 0F2D  
                                                    u12870 06C5  
                                                    u11990 166C  
                                                    u13910 0FE3  
                                                    u13830 0FB7  
                                                    u13750 0F8B  
                                                    u13670 0F5F  
                                                    u13590 0F33  
                            __end_of_rn487x_driver_version 2086  
                                                    u12871 06C4  
                                                    u11991 166B  
                                                    u13911 0FE2  
                                                    u13831 0FB6  
                                                    u13751 0F8A  
                                                    u13671 0F5E  
                                                    u13591 0F32  
                                                    u12880 06D3  
                                                    u12960 0D77  
                                                    u13920 0FE8  
                                                    u13840 0FBC  
                                                    u13760 0F90  
                                                    u13680 0F64  
                                                    u12961 0D76  
                                                    u13921 0FE7  
                                                    u13841 0FBB  
                                                    u13761 0F8F  
                                                    u13681 0F63  
                                                    u12890 06EE  
                                                    u13930 0FEF  
                                                    u13850 0FC3  
                                                    u13770 0F97  
                                                    u13690 0F6B  
                                                    u12891 06ED  
                                                    u12795 0679  
                                                    u12955 0D6B  
                                                    u13931 0FEE  
                                                    u13851 0FC2  
                                                    u13771 0F96  
                                                    u13691 0F6A  
                                                    u12980 0D91  
                                                    u13940 0FF4  
                                                    u13860 0FC8  
                                                    u13780 0F9C  
                                                    u12885 06CF  
                                                    u12981 0D90  
                                                    u13941 0FF3  
                                                    u13861 0FC7  
                                                    u13781 0F9B  
                                                    u13950 0FF9  
                                                    u13870 0FCD  
                                                    u13790 0FA1  
                                                    u12895 06EA  
                                                    u12975 0D85  
                                                    u13951 0FF8  
                                                    u13871 0FCC  
                                                    u13791 0FA0  
                                                    u13960 0FFE  
                                                    u13880 0FD2  
                                                    u16600 0746  
                                                    u13961 0FFD  
                                                    u13881 0FD1  
                                                    u16601 0745  
                                                    u13970 08A5  
                                                    u13890 0FD9  
                                                    u16610 074E  
                                                    u12995 0D95  
                                                    u13971 08A4  
                                                    u13891 0FD8  
                                                    u16611 074D  
                                                    u13980 08AA  
                                                    u16620 076E  
                                                    u13981 08A9  
                                                    u16621 076D  
                                                    u13990 08B1  
                                                    u16630 078F  
                                                    u13991 08B0  
                                                    u16631 078E  
                                                    u16640 079A  
                                                    u16641 0799  
                                                    u16650 07A0  
                                                    u16651 079F  
                                                    u16580 0BDE  
                                                    u16660 07C1  
                                                    u16581 0BDD  
                                                    u16661 07C0  
                                                    u16590 130D  
                                                    u16670 07DA  
                                                    u16575 0B94  
                                                    u16591 130C  
                                                    u16671 07D9  
                                                    u16680 07FC  
                                                    u16681 07FB  
                                                    u16595 1309  
                                                    u16697 1CA5  
                               __end_of_i2c1_fsmStateTable 2020  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 1F3A  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                        ??_I2C1_MasterRead 007B  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1EAC  
                                          __end_of_getTemp 0AD2  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 00D8  
                                                    _begin 16BC  
                                  __end_of_PIN_MANAGER_IOC 1A6F  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 15D6  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 082B  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 1135  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 14C1  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 1800  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1953  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1952  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 1DF0  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1A36  
                            _EUSART2_SetTxInterruptHandler 1A30  
                                            _fsmStateTable 2020  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 166E  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 1444  
                                             __end_of_main 07FF  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                 _LIGHTBLUE_UpdateErrorLed 1E2A  
                                   __end_of_i2c_readNBytes 1E68  
                               __end_of_RN487X_is_rx_ready 1AB1  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 006F  
                                ?_rn487x_PrintMessageStart 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1982  
                              _EUSART2_DefaultErrorHandler 197E  
                                  _LIGHTBLUE_PerformAction 126C  
                         RN487X_MessageHandler@messageType 0042  
                         __end_of_LIGHTBLUE_SendSerialData 0D2F  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 1545  
                                       __end_of_I2C1_DO_TX 17AD  
                                         _RN487X_DataReady 1DF0  
                                       __end_of_I2C1_Close 1D28  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 1482  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 00D2  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1985  
                                                   i1l1105 1981  
                                                   _RC4PPS 1F24  
                                                   i1l1300 0035  
                                                   i1l1301 0053  
                                                   i1l1302 0044  
                                                   i1l1232 1ECC  
                                                   i1l1242 1501  
                                                   i1l1082 1EA9  
                                                   i1l1235 1ECE  
                                                   i1l1307 0053  
                                                   i1l1252 197D  
                                                   i1l1092 138B  
                                                   i1l1085 1EAB  
                                                   i1l1246 1DD4  
                                                   i1l1255 1979  
                                                   i1l1096 1D88  
                                                   i1l1249 1952  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1953  
                                                   i1l1451 1B62  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1447 1A6E  
                                                   i1l1295 0013  
                                                   i1l1457 07FF  
                                                   i1l1298 0026  
                                                   _RN487X 2040  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9301 1D7C  
                                                   i1l9303 1D82  
                                                   i1l9321 1DC9  
                                                   i1l9305 1D83  
                                                   i1l9323 1DCF  
                                                   i1l9325 1DD0  
                                                   i1l9317 1DBB  
                                                   i1l9319 1DC4  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9297 1D70  
                                                   i1l9299 1D78  
                                                   i1l9935 1982  
                                                   i1l9937 197E  
                                                   i1l9971 197A  
                                                   i1l9973 1976  
                       __end_of_RN487X_ReadDefaultResponse 0B5A  
                               _RN487X_ReadDefaultResponse 0AD2  
                                                   u660_20 1D82  
                                                   u900_20 1A6B  
                                                   u660_21 1D81  
                                                   u900_21 1A6A  
                                                   _OSCFRQ 0893  
                                                   u661_20 1DCF  
                                                   u661_21 1DCE  
                                          ?_RN487X_SendCmd 0077  
                                                   u770_20 1B5B  
                                                   u770_21 1B5A  
                                                   u960_20 0017  
                                                   u960_21 0016  
                                                   u961_20 001B  
                                                   u961_21 001A  
                                                   u890_20 1E90  
                                                   u962_20 001F  
                                                   u890_21 1E8F  
                                                   u962_21 001E  
                                                   _TX1REG 011A  
                                                   u891_20 1EA3  
                                                   u963_20 002A  
                                                   u891_21 1EA2  
                                                   u963_21 0029  
                                                   _TX2REG 0A1A  
                                                   u892_20 135A  
                                                   u964_20 002E  
                                                   u892_21 1359  
                                                   u964_21 002D  
                                                   u893_20 136B  
                                                   u965_20 0039  
                                                   u893_21 136A  
                                                   u965_21 0038  
                                                   _TX1STA 011E  
                                                   u894_20 1381  
                                                   u966_20 003D  
                                                   u958_20 000B  
                                                   u894_21 1380  
                                                   u966_21 003C  
                                                   u958_21 000A  
                                                   _TX2STA 0A1E  
                                                   u895_20 1EB3  
                                                   u967_20 0048  
                                                   u959_20 000F  
                                                   u895_21 1EB2  
                                                   u967_21 0047  
                                                   u959_21 000E  
                                        ?_I2C1_MasterClose 0070  
                                                   u896_20 1EC6  
                                                   u968_20 004C  
                                                   u896_21 1EC5  
                                                   u968_21 004B  
                                                   u897_20 14CD  
                                                   u897_21 14CC  
                                                   u898_20 14DF  
                                                   u898_21 14DE  
                                                   u899_20 14F7  
                                                   u899_21 14F6  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                         __end_of___xxtofl 0DDA  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 1051  
                                         __end_of_bitWrite 1F60  
                                setXYAxisRange@xyAxisRange 0035  
                                         __end_of_getError 0926  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 207F  
                            RN487X_EnterDataMode@cmdPrompt 207A  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 01CC  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 0C85  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                ??___fladd 002E  
                                                   _cmdBuf 0220  
                                                ??___fldiv 0042  
                                                   _bitMap 00C5  
                             __end_of_BMA253_GetAccelDataY 10D9  
                             __end_of_BMA253_GetAccelDataZ 1107  
                                                ??___fltol 00E1  
                                RN487X_FilterData@readChar 0044  
                                 ?_EUSART1_SetErrorHandler 0071  
                                          ?_i2c_readNBytes 0024  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016C  
                                                ??_getTemp 0058  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 19F4  
                                                   _strchr 1DA2  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 1C4F  
                                                   _strlen 1D89  
                                                   _strstr 1621  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1A6F  
                                           _PMD_Initialize 1ABB  
                                  _BMA253_NewAccelDataRdyY 1C0B  
                                  _BMA253_NewAccelDataRdyZ 1C1C  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 1E89  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 2069  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 01BF  
                                                ??_strncmp 0075  
                                  _I2C1_DO_RX_NACK_RESTART 19BE  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 1316  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 015C  
                                          _eusart1TxBuffer 014C  
                                             ___xxtofl@arg 0022  
                                             ___xxtofl@exp 0021  
                                        _SYSTEM_Initialize 1CCD  
                                             ___xxtofl@val 0071  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 0164  
                                  __end_of__initialization 00A5  
                                  _protocol_version_number 2086  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002E  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                               ___fltol@f1 0069  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2084  
                             RN487X_EnterCmdMode@cmdPrompt 207F  
                            __end_of_EUSART1_RxDataHandler 1DD5  
                                  _rdBlkRegCompleteHandler 1D28  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK1 0002  
                                             __pidataBANK3 1C3E  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1967  
                                            __end_of_begin 170A  
                                     __end_of_RN487X_Delay 1A66  
                                            _readRegisters 1B73  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 1AF1  
                                   setOperatingMode@opMode 0035  
                                     __end_of_RN487X_Write 1B14  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1AC5  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 1B63  
                                     __end_of_EUSART1_Read 1028  
                                     __end_of_EUSART2_Read 2000  
                                      _LIGHTBLUE_SplitByte 1234  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1C77  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1DD5  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 1502  
                                    __end_of_I2C1_DO_RESET 19C8  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 13C9  
                                                  ??_begin 007C  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1CE3  
                                 _LIGHTBLUE_SendSerialData 0C85  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 00CB  
                                            _eusart1TxHead 00CE  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 00CA  
                                            _eusart2TxHead 00D4  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01BF  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                               __pbssBANK7 03A0  
                                            _eusart2RxTail 00D1  
                                            _eusart1TxTail 00CD  
                          __end_of_I2C1_MasterWaitForEvent 19E8  
                        _EUSART1_TxDefaultInterruptHandler 01B9  
                                            _eusart2TxTail 00D3  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 1165  
                            __end_of_rd2RegCompleteHandler 1BC7  
                                       _DELAY_milliseconds 1CA1  
                             __end_of_LIGHTBLUE_Initialize 19EE  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0EBA  
                                       _setMagneticChannel 00A9  
                                     ?_LIGHTBLUE_SplitWord 0020  
                            __end_of_wr2RegCompleteHandler 1BD8  
                                    _rd1RegCompleteHandler 1BA5  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 19AF  
                                    _wr1RegCompleteHandler 1B94  
                          __end_of_EUSART1_SetErrorHandler 1A00  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 072A  
                                               _getAngleEn 087E  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                    i2c_readNBytes@address 007B  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002E  
                         rn487x_PrintMessage@passedMessage 0040  
                          rn487x_PrintMessage@messageIndex 0041  
                                           ?_readRegisters 0027  
                                          _I2C1_MasterRead 19D2  
                                          _I2C1_MasterOpen 1B39  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1967  
                                          _I2C1_Initialize 1A8A  
                             __end_of_LIGHTBLUE_SendPacket 0BEA  
                                      __end_of_I2C1_Poller 1B39  
                            __end_of_LIGHTBLUE_AccelSensor 12DD  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1A06  
                           _EUSART1_SetFramingErrorHandler 1A00  
                                                  ?_strstr 0077  
                                    _eusart2RxStatusBuffer 0154  
                                                  i1l11001 1EC7  
                                                  i1l11011 14DA  
                                                  i1l11003 14C1  
                                                  i1l11021 14FE  
                                                  i1l11013 14DF  
                                                  i1l11005 14C8  
                                                  i1l11015 14E6  
                                                  i1l11007 14CD  
                                                  i1l11023 1A66  
                                                  i1l11017 14EC  
                                                  i1l11009 14D4  
                                                  i1l10065 1B54  
                                                  i1l11025 1A6B  
                                                  i1l11019 14F7  
                                                  i1l10067 1B5B  
                                                  i1l10069 1B60  
                                                  i1l11601 0006  
                                                  i1l11611 001F  
                                                  i1l11603 000B  
                                                  i1l11621 0048  
                                                  i1l11613 002A  
                                                  i1l11605 000F  
                                                  i1l11623 004C  
                                                  i1l11615 002E  
                                                  i1l11607 0017  
                                                  i1l11617 0039  
                                                  i1l11609 001B  
                                                  i1l11619 003D  
                                                  i1l10961 1E90  
                                                  i1l10971 134F  
                                                  i1l10963 1E98  
                                                  i1l10981 136B  
                                                  i1l10973 1355  
                                                  i1l10965 1E9D  
                                                  i1l10983 1371  
                                                  i1l10975 135A  
                                                  i1l10967 1EA3  
                                                  i1l10959 1E89  
                                                  i1l10991 1EAC  
                                                  i1l10985 1377  
                                                  i1l10977 1360  
                                                  i1l10969 1EA4  
                                                  i1l10993 1EB3  
                                                  i1l10987 1381  
                                                  i1l10979 1366  
                                                  i1l10995 1EBB  
                                                  i1l10989 1388  
                                                  i1l10997 1EC0  
                                                  i1l10999 1EC6  
                             getMagneticChannel@magChannel 002E  
                                    ?_RN487X_EnterDataMode 0070  
                                            _writeRegister 1AF1  
                                                ?___xxtofl 0071  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 19DC  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 11C7  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1260 1B94  
          _wr2RegCompleteHandler@i2c1_master_example$F1260 1B83  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1237 1BE9  
          _rd1RegCompleteHandler@i2c1_master_example$F1237 1BD8  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1254 1C0B  
          _wr1RegCompleteHandler@i2c1_master_example$F1254 1BFA  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1271 1D58  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1271 1D40  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1248 1BFA  
          _rd2RegCompleteHandler@i2c1_master_example$F1248 1BE9  
                              __end_of_EUSART2_Receive_ISR 138C  
                       __end_of_IOCAF6_SetInterruptHandler 1A3C  
                               _IOCAF6_SetInterruptHandler 1A36  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1970  
                                     ??_getMagneticChannel 002C  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0033  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 1B73  
                               _LIGHTBLUE_SetErrorLedValue 1B63  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 007B  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 10AB  
                                     _BMA253_GetAccelDataZ 10D9  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 19D7  
                                             _getTemp$5396 0061  
                                          _asyncBufferSize 00D9  
                                    ??_LIGHTBLUE_SplitByte 0079  
                                       _i2c1_fsmStateTable 2000  
                                       _i2c1_driver_i2cISR 00BF  
                                    ??_LIGHTBLUE_SplitWord 007A  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 19B4  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 11FD  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0071  
                           __end_of_i2c_write1ByteRegister 1195  
                                        _RN487X_FilterData 0926  
                                 __end_of_RN487X_DataReady 1E0C  
                             __end_of_LIGHTBLUE_PushButton 1D70  
                                     __end_of_readRegister 1B08  
                                                  ___fladd 0378  
                                                  ___fldiv 0580  
                                       ?_RN487X_FilterData 0070  
                                                  ___fltol 09DB  
                                      _EUSART1_is_rx_ready 1A81  
                                                  _bitRead 1F16  
                               __end_of_EUSART1_is_tx_done 1996  
                          __end_of_EUSART2_SetErrorHandler 1A1E  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                       i2c_readNBytes@data 0024  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1ADB  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  _getTemp 0A56  
                                                  __ptext1 16BC  
                                                  __ptext2 13C9  
                                                  __ptext3 1482  
                                                  __ptext4 138C  
                                                  __ptext5 0BEA  
                                                  __ptext6 00A9  
                                                  __ptext7 1AF1  
                                                  __ptext8 1165  
                                                  __ptext9 08D2  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1964  
                                __end_of_I2C1_MasterIsNack 19E2  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0043  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0070  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1986  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1982  
                                    _OSCILLATOR_Initialize 1AB1  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1973  
                                               ??___xxtofl 0075  
                                 __end_of_I2C1_DO_TX_EMPTY 107E  
                                       _EUSART1_Initialize 1406  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2084  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1AA7  
                                         ??_setXYAxisRange 0033  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1A3D  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 17AD  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 19A5  
                                     end_of_initialization 00A5  
                               __end_of_I2C1_MasterSendAck 198E  
                      ?_RN487X_Read@rn487x_interface$F1380 0070  
                     ??_RN487X_Read@rn487x_interface$F1382 0073  
               __end_of_RN487X_Read@rn487x_interface$F1379 1A9D  
                       _RN487X_Read@rn487x_interface$F1379 1A93  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 11C7  
                              _LIGHTBLUE_TemperatureSensor 1195  
                                      _I2C1_MasterClearIrq 1958  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1992  
                           __end_of_rn487x_PrintMessageEnd 16BC  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1A42  
                               __end_of_I2C1_MasterStartRx 196D  
                              _EUSART1_OverrunErrorHandler 01B3  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1A43  
                                   _I2C1_DO_SEND_ADR_WRITE 1A56  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0032  
                                __end_of_RN487X_FilterData 097D  
                             __end_of_I2C1_DO_SEND_RESTART 19AF  
                                  __end_of_I2C1_MasterRead 19D7  
                                  __end_of_I2C1_MasterOpen 1B46  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 196A  
                                  __end_of_I2C1_Initialize 1A93  
                    __end_of_EUSART1_SetRxInterruptHandler 1A12  
                            _EUSART1_SetRxInterruptHandler 1A0C  
                                              _I2C1_Poller 1B2C  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 1444  
                            __end_of_I2C1_MasterDisableIrq 1961  
                                         ??_i2c_readNBytes 007B  
                                              _I2C1_Status 00A0  
                                          ??_readRegisters 0029  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 082B  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2088  
                               __end_of_RN487X_IsConnected 1976  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1986  
                      __end_of_I2C1_SetAddressNackCallback 1ADB  
                              _I2C1_SetAddressNackCallback 1AD0  
                                __end_of_RN487X_IndicateRx 1AE6  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0071  
                                                  strchr@s 0073  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0076  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 19AA  
                               _I2C1_DO_SEND_RESTART_WRITE 19A5  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0072  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0033  
                                      _EUSART2_is_rx_ready 1A78  
                                                  strlen@s 0071  
                                           __deviceAddress 00E0  
                                               _returnStop 0000  
                                                  strstr@h 0022  
                                                  strstr@n 0077  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 1545  
                          __end_of_rdBlkRegCompleteHandler 1D40  
                                    ??_rn487x_PrintMessage 0076  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 19E8  
                                              ___fladd@grs 0039  
                                  _statusBuffer@main$F3781 03A0  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002C  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E6  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                            ___xxtofl@sign 0020  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                                              ___fldiv@grs 004E  
                                              ___fldiv@rem 0047  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1A5E  
                                            ??_isConnected 007C  
                                  getOperatingMode@opMode0 002F  
                                  getOperatingMode@opMode1 0030  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 170A  
                                     _LIGHTBLUE_SendPacket 0B5A  
                                             _RN487X_Reset 1AE6  
                                _LIGHTBLUE_GetDataLedValue 19EE  
                                             _RN487X_Write 1B08  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 2052  
                                             _EUSART1_Read 1000  
                                             _EUSART2_Read 1FD8  
                         __end_of_LIGHTBLUE_GetButtonValue 19FA  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 00BD  
                            __end_of_EUSART2_RxDataHandler 1D89  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 107E  
                                __end_of_RN487X_SetOutputs 158D  
                                            _setZAxisRange 13C9  
                                           _I2C1_DO_RX_ACK 19B4  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 00D5  
                          __end_of_I2C1_CallbackReturnStop 1956  
                                  readRegisters@dataBuffer 0027  
                            __end_of_I2C1_MasterSendTxData 199B  
                                           __end_of_strchr 1DBB  
                                           __end_of_strcpy 1C63  
                                           __end_of_strlen 1DA2  
                                           __end_of_strstr 166E  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0035  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 1C8C  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0036  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 1D58  
                                 LIGHTBLUE_SplitByte@value 0078  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0036  
                                    __end_of_EUSART1_Write 1FD8  
                                    __end_of_EUSART2_Write 1FB0  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 1CF9  
                                       ??_setTemperatureEn 0033  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002F  
                               getMagneticChannel@magMode5 0030  
                               getMagneticChannel@magMode6 0031  
                               getMagneticChannel@magMode7 0032  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterRead 0070  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1A2A  
                           _EUSART2_SetOverrunErrorHandler 1A24  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0030  
                                      __end_of_isConnected 1C3E  
                                getTemperatureEN@tempENreg 002F  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0036  
                                   __end_of_I2C1_DO_RX_ACK 19B9  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 1DBB  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 1135  
                                              __pdataBANK1 00EA  
                                              __pdataBANK3 01A0  
                                                 ??_strchr 0073  
                                                 ??_strcpy 0072  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 00C9  
                                                 ??_strstr 0079  
                                                ___fladd@a 002A  
                                                ___fladd@b 0026  
                                           _eusart2RxCount 00D0  
                                      ?_LIGHTBLUE_LedState 0070  
                                                ___fldiv@a 003A  
                                                ___fldiv@b 003E  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 19AA  
                        _EUSART1_RxDefaultInterruptHandler 01B7  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00E1  
                                            __pcstackBANK3 01C7  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1AFC  
                                      __end_of_RN487X_Init 09DB  
                                      __end_of_RN487X_Read 1B2C  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                  readRegisters@regAddress 002B  
                                      _RN487X_EnterCmdMode 1CF9  
                                     __end_of_I2C1_DO_IDLE 19A0  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1A4F  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 00D6  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007C  
                                                __pnvBANK1 00E6  
                                                __pnvBANK2 016C  
                                                __pnvBANK3 01B1  
                                    _rd2RegCompleteHandler 1BB6  
                                    __end_of_fsmStateTable 2040  
                                                _main$5406 00E5  
                                   _PIN_MANAGER_Initialize 158D  
                                    _wr2RegCompleteHandler 1BC7  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1028  
                                        ?_RN487X_DataReady 0070  
                                                 ?___fladd 0026  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                 ?___fldiv 003A  
                                                __ptext100 1D89  
                                                __ptext101 1B08  
                                                __ptext110 15D6  
                                                __ptext102 1FB0  
                                                __ptext111 1AD0  
                                                __ptext103 1F88  
                                                __ptext120 19C3  
                                                __ptext112 11C7  
                                                __ptext104 170A  
                                                __ptext121 19BE  
                                                __ptext113 1B39  
                                                __ptext105 1AFC  
                                                __ptext130 175A  
                                                __ptext122 19B9  
                                                __ptext114 19C8  
                                                __ptext106 10D9  
                                                __ptext131 1A56  
                                                __ptext123 19B4  
                                                __ptext115 1E68  
                                                __ptext107 1C1C  
                                                __ptext140 1986  
                                                __ptext132 1A6F  
                                                __ptext124 19AF  
                                                __ptext116 1B2C  
                                                __ptext108 10AB  
                                                __ptext141 196A  
                                                __ptext133 199B  
                                                __ptext125 19AA  
                                                __ptext117 19E2  
                                                __ptext109 1C0B  
                                                __ptext150 1BB6  
                                                __ptext142 1956  
                                                __ptext134 1051  
                                                __ptext126 19A5  
                                                __ptext118 1028  
                                                __ptext151 1BA5  
                                                __ptext143 1954  
                                                __ptext135 1970  
                                                __ptext127 19A0  
                                                __ptext119 1F60  
                                                __ptext160 1D10  
                                                __ptext152 1B94  
                                                __ptext144 1D40  
                                                __ptext136 19DC  
                                                __ptext128 1A48  
                                                __ptext161 195E  
                                                __ptext153 1B83  
                                                __ptext145 1BFA  
                                                __ptext137 1996  
                                                __ptext129 1502  
                                                __ptext170 14C1  
                                                __ptext162 195B  
                                                __ptext154 1AC5  
                                                __ptext146 1BE9  
                                                __ptext138 198A  
                                                __ptext171 134F  
                                                __ptext163 1958  
                                                __ptext155 1EF2  
                                                __ptext147 1BD8  
                                                __ptext139 196D  
                                                __ptext172 1982  
                                                __ptext156 1B46  
                                                __ptext148 1D28  
                                                __ptext173 1953  
                                                __ptext165 1A66  
                                                __ptext157 1967  
                                                __ptext149 1BC7  
                                                __ptext174 197E  
                                                __ptext166 1B54  
                                                __ptext158 1964  
                                                __ptext175 1D70  
                                                __ptext167 07FF  
                                                __ptext159 1961  
                                                __ptext176 197A  
                                                __ptext168 1EAC  
                                                __ptext177 1952  
                                                __ptext169 1E89  
                                                __ptext178 1976  
                                                __ptext179 1DBB  
                                                 ?___fltol 0069  
                                      getAngleEn@angleDir2 002F  
                                      getAngleEn@angleDir3 0030  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00C1  
                                    readRegisters@numBytes 0028  
                                 _LIGHTBLUE_GetButtonValue 19F4  
                        _EUSART2_TxDefaultInterruptHandler 00E8  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 19E2  
                                         _I2C1_MasterClose 195B  
                                  getError@oscillatorError 0031  
                                           _I2C1_SetBuffer 1B46  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 00DF  
                                                 ?_getTemp 0054  
                                         _I2C1_MasterStart 1961  
                                                _connected 00DB  
                                         _I2C1_MasterWrite 19C8  
                                    _LIGHTBLUE_AccelSensor 12A4  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_wr1RegCompleteHandler@strncmp$F4831 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4840 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4833 0079  
                    ??_rd2RegCompleteHandler@strncmp$F4842 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4851 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4843 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4845 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4837 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4839 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4849 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 197E  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 197A  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 01B1  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1CE3  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 19FA  
                              __end_of_LIGHTBLUE_SplitByte 126C  
                                 __end_of_getOperatingMode 087E  
                         __end_of_I2C1_CallbackReturnReset 1958  
                              __end_of_LIGHTBLUE_SplitWord 1C8C  
                                 LIGHTBLUE_SplitWord@value 0022  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0079  
                                      getError@otpCrcError 002F  
                                       _EUSART1_is_tx_done 1992  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                        i2c_readNBytes@len 0025  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 1C2D  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1EF2  
                                        _RN487X_is_tx_done 1A9D  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 1502  
                                               _I2C1_DO_TX 175A  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1A3C  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 00DE  
                                               _I2C1_Close 1D10  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1316  
                            _LIGHTBLUE_SendProtocolVersion 12DD  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 1051  
                             __end_of_I2C1_MasterGetRxData 1970  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002C  
                                                 _PIR3bits 070F  
                             getManufacturerID@deviceIDReg 0033  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0033  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                       _I2C1_MasterSendAck 198A  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1EF2  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1ECF  
                                _I2C1_DO_SEND_RESTART_READ 19A0  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0036  
                                       _EUSART2_is_tx_done 198E  
                                   __end_of_I2C1_SetBuffer 1B54  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1AD0  
                             _I2C1_SetDataCompleteCallback 1AC5  
                                       _I2C1_MasterStartRx 196A  
                                           getTemp@tempOut 005D  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 097D  
                                              _RN487X_Read 1B20  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002E  
                             __end_of_RN487X_SetSystemMode 1B20  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1A4F  
                             __end_of_I2C1_DO_ADDRESS_NACK 1F88  
                                   ??_LIGHTBLUE_PushButton 007C  
                                       _RN487X_IsConnected 1973  
                            __end_of_i2c_read1ByteRegister 1621  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1A5E  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 19C3  
                                              _asyncBuffer 00DA  
                                       __end_of_getAngleEn 08D2  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0036  
                                __end_of_RN487X_is_tx_done 1AA7  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1A18  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 00DC  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 01BD  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0035  
                             __end_of_I2C1_MasterOperation 1E89  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 12A4  
                          ??_RN487X_SetAsyncMessageHandler 0072  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1A18  
                            _EUSART1_SetTxInterruptHandler 1A12  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1A30  
                            _EUSART2_SetRxInterruptHandler 1A2A  
                      LIGHTBLUE_ParseIncomingPacket@length 00DD  
                                 __end_of_getTemperatureEN 1CA1  
       wr2RegCompleteHandler@i2c1_master_example$F1260@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1237@ptr 0078  
       wr1RegCompleteHandler@i2c1_master_example$F1254@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1271@ptr 0078  
                                  setZAxisRange@zAxisRange 0035  
       rd2RegCompleteHandler@i2c1_master_example$F1248@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                                    __end_of_readRegisters 1B83  
                              __end_of_rn487x_PrintMessage 1234  
                                    _I2C1_MasterDisableIrq 195E  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0077  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 197A  
                              _EUSART1_DefaultErrorHandler 1976  
                                  RN487X_SetOutputs@bitMap 0020  
                                        getTemp@databuffer 0067  
                              __end_of_EUSART1_is_rx_ready 1A8A  
                                                 ___xxtofl 0D2F  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 175A  
                                     _EUSART2_ErrorHandler 01BB  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 1F3A  
                       LIGHTBLUE_TemperatureSensor@payload 01C7  
                                                 _getError 08D2  
                                                 __ptext10 1A4F  
                                                 __ptext11 1F3A  
                                                 __ptext20 19D7  
                                                 __ptext12 1C2D  
                                                 __ptext21 1CCD  
                                                 __ptext13 1E0C  
                                                 __ptext30 1A2A  
                                                 __ptext22 1C63  
                                                 __ptext14 1C8C  
                                                 __ptext31 1A24  
                                                 __ptext23 1ABB  
                                                 __ptext15 082B  
                                                 __ptext40 1CB7  
                                                 __ptext32 1A1E  
                                                 __ptext24 158D  
                                                 __ptext16 0EBA  
                                                 __ptext41 1B20  
                                                 __ptext33 1A18  
                                                 __ptext25 1A36  
                                                 __ptext17 1CE3  
                                                 __ptext50 11FD  
                                                 __ptext42 1DF0  
                                                 __ptext34 1406  
                                                 __ptext26 1AB1  
                                                 __ptext18 087E  
                                                 __ptext51 1C4F  
                                                 __ptext43 0926  
                                                 __ptext35 1A12  
                                                 __ptext27 1A8A  
                                                 __ptext19 1F16  
                                                 __ptext60 1ADB  
                                                 __ptext52 1ECF  
                                                 __ptext44 1316  
                                                 __ptext36 1A0C  
                                                 __ptext28 1444  
                                                 __ptext61 1195  
                                                 __ptext53 1973  
                                                 __ptext45 1621  
                                                 __ptext37 1A06  
                                                 __ptext29 1A30  
                                                 __ptext70 0C85  
                                                 __ptext62 0A56  
                                                 __ptext54 097D  
                                                 __ptext46 17AD  
                                                 __ptext38 1A00  
                                                 __ptext71 12DD  
                                                 __ptext63 1B73  
                                                 __ptext55 1AA7  
                                                 __ptext47 1DA2  
                                                 __ptext39 19FA  
                                                 __ptext80 1DD5  
                                                 __ptext72 1D58  
                                                 __ptext64 1E49  
                                                 __ptext56 1A81  
                                                 __ptext48 107E  
                                                 __ptext81 1CF9  
                                                 __ptext73 19F4  
                                                 __ptext65 19D2  
                                                 __ptext57 1A78  
                                                 __ptext49 166E  
                                                 __ptext90 1A5E  
                                                 __ptext82 1107  
                                                 __ptext74 0DDA  
                                                 __ptext66 0D2F  
                                                 __ptext58 1B14  
                                                 __ptext91 1CA1  
                                                 __ptext83 1A9D  
                                                 __ptext75 126C  
                                                 __ptext67 0580  
                                                 __ptext59 1AE6  
                                                 __ptext92 1135  
                                                 __ptext84 1992  
                                                 __ptext76 1B63  
                                                 __ptext68 0378  
                                                 __ptext93 19CD  
                                                 __ptext85 198E  
                                                 __ptext77 1E2A  
                                                 __ptext69 09DB  
                                                 __ptext94 19EE  
                                                 __ptext86 0800  
                                                 __ptext78 1545  
                                                 __ptext95 19E8  
                                                 __ptext87 1A93  
                                                 __ptext79 0AD2  
                                                 __ptext96 12A4  
                                                 __ptext88 1000  
                                                 __ptext97 1C77  
                                                 __ptext89 1FD8  
                                                 __ptext98 1234  
                                                 __ptext99 0B5A  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1B54  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0073  
                              getManufacturerID@databuffer 0035  
                                 _I2C1_CallbackReturnReset 1956  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1954  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1953  
                          __end_of_BMA253_NewAccelDataRdyY 1C1C  
                          __end_of_BMA253_NewAccelDataRdyZ 1C2D  
                                          _lightBlueSerial 02A0  
                              __end_of_I2C1_MasterClearIrq 195B  
                             __end_of_I2C1_DO_RX_NACK_STOP 19BE  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0072  
                       __end_of_LIGHTBLUE_GetErrorLedValue 19D2  
                               _LIGHTBLUE_GetErrorLedValue 19CD  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 19C3  
                             RN487X_GetInputsValues@F12901 00EA  
                                   getTemperatureEN@tempEN 002E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 1D70  
                                  __end_of_getDeviceStatus 1A56  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1A78  
                              _EUSART1_FramingErrorHandler 01B5  
                                             _I2C1_DO_IDLE 199B  
                                      _EUSART1_Receive_ISR 14C1  
                                             _I2C1_DO_RCEN 1A48  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 198A  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1AFC  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1A81  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002E  
                                           __pstringtext10 2052  
                                           __pstringtext11 2069  
                                           __pstringtext12 2074  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 196D  
                                    _I2C1_MasterSendTxData 1996  
                            __end_of_RN487X_MessageHandler 134F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@lsb 0078  
                                              bitWrite@reg 0071  
                                              bitWrite@msb 0076  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 007B  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 195E  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1964  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 19CD  
                                   RN487X_RebootCmd@reboot 205E  
                   __end_of_EUSART1_SetOverrunErrorHandler 1A0C  
                           _EUSART1_SetOverrunErrorHandler 1A06  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1954  
                             __end_of_EUSART1_Transmit_ISR 1ECF  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 00C7  
                                     _RN487X_SetSystemMode 1B14  
                                     _I2C1_DO_ADDRESS_NACK 1F60  
                                   ?_I2C1_MasterDisableIrq 0070  
                    __end_of_RN487X_SetAsyncMessageHandler 1CCD  
                            _RN487X_SetAsyncMessageHandler 1CB7  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 00C3  
                                       _eusart1RxLastError 00C8  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 2000  
                                            __pstringtext3 2020  
                                            __pstringtext4 2040  
                                            __pstringtext5 2084  
                                            __pstringtext6 2086  
                                            __pstringtext7 205E  
                                            __pstringtext8 207A  
                                            __pstringtext9 207F  
                                      _EUSART2_Receive_ISR 134F  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 1F16  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 1E68  
                                          _TMR0_Initialize 1C63  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0076  
                                                 strncmp@n 0073  
                                                 strncmp@r 0071  
                        _LIGHTBLUE_ParseIncomingPacket$461 002D  
                        _LIGHTBLUE_ParseIncomingPacket$462 002F  
                        _LIGHTBLUE_ParseIncomingPacket$463 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                              _returnReset 0000  
                                              getTemp@temp 0065  
                                         _setOperatingMode 0BEA  
                                                 strstr@nl 0020  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                            ___fladd@signs 0036  
                                        _getManufacturerID 1E0C  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 15D6  
                                       ??_getOperatingMode 002C  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 1BB6  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 00CF  
                                      RN487X_SendCmd@index 0079  
                                             ___fladd@aexp 0037  
                                             ___fladd@bexp 0038  
                                       ?_getManufacturerID 002C  
                         __end_of_rn487x_PrintMessageStart 10AB  
                                          _PIN_MANAGER_IOC 1A66  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 1BA5  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1E49  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 016E  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 0020  
                                   RN487X_IndicateRx@value 0071  
                                      ??_getManufacturerID 002E  
